uint64_t sub_1A3D0E1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  long long v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  long long v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  long long v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  long long *v34;
  long long v35;
  long long v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  long long v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  long long v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  long long v59;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = *(void *)(a2 + v5 + 8);
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_WORD *)v6 = *(_WORD *)v7;
    v9 = *(void *)(v7 + 16);
    *(void *)(v6 + 8) = v8;
    *(void *)(v6 + 16) = v9;
    *(_OWORD *)(v6 + 24) = *(_OWORD *)(v7 + 24);
    *(_OWORD *)(v6 + 40) = *(_OWORD *)(v7 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v10;
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v7 + 32);
    *(void *)(v6 + 48) = *(void *)(v7 + 48);
  }
  v11 = (int *)type metadata accessor for FaceObservation();
  v12 = v11[5];
  v13 = v6 + v12;
  v14 = v7 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(v6 + v11[6], v7 + v11[6], v15);
  v16(v6 + v11[7], v7 + v11[7], v15);
  v17 = v11[8];
  v18 = v6 + v17;
  v19 = v7 + v17;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_WORD *)(v18 + 4) = *(_WORD *)(v19 + 4);
  v20 = v11[9];
  v21 = (_OWORD *)(v6 + v20);
  v22 = (_OWORD *)(v7 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = v11[10];
  v25 = (_OWORD *)(v6 + v24);
  v26 = (_OWORD *)(v7 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v11[11];
  v29 = v6 + v28;
  v30 = v7 + v28;
  v31 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  *(_DWORD *)(v6 + v11[12]) = *(_DWORD *)(v7 + v11[12]);
  v32 = v11[13];
  v33 = v6 + v32;
  v34 = (long long *)(v7 + v32);
  *(unsigned char *)(v33 + 48) = *((unsigned char *)v34 + 48);
  v35 = v34[2];
  v36 = *v34;
  *(_OWORD *)(v33 + 16) = v34[1];
  *(_OWORD *)(v33 + 32) = v35;
  *(_OWORD *)v33 = v36;
  *(_WORD *)(v6 + v11[14]) = *(_WORD *)(v7 + v11[14]);
  v37 = v11[15];
  v38 = (void *)(v6 + v37);
  v39 = (void *)(v7 + v37);
  *(void *)((char *)v38 + 6) = *(void *)((char *)v39 + 6);
  *v38 = *v39;
  v40 = v11[16];
  v41 = (void *)(v6 + v40);
  v42 = (void *)(v7 + v40);
  *(void *)((char *)v41 + 6) = *(void *)((char *)v42 + 6);
  *v41 = *v42;
  v43 = v11[17];
  v44 = v6 + v43;
  v45 = v7 + v43;
  v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  *(_WORD *)(v44 + 32) = *(_WORD *)(v45 + 32);
  v47 = v11[18];
  v48 = v6 + v47;
  v49 = v7 + v47;
  *(_DWORD *)v48 = *(_DWORD *)v49;
  *(_WORD *)(v48 + 4) = *(_WORD *)(v49 + 4);
  v50 = v11[19];
  v51 = v6 + v50;
  v52 = (uint64_t *)(v7 + v50);
  if ((*(_WORD *)(v7 + v50 + 32) & 0xFFF8) == 0xFFF0)
  {
    v53 = *((_OWORD *)v52 + 1);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *(_OWORD *)(v51 + 16) = v53;
    *(_DWORD *)(v51 + 31) = *(_DWORD *)((char *)v52 + 31);
  }
  else
  {
    v54 = *v52;
    v55 = v52[1];
    sub_1A3C7D1A8(*v52, v55);
    *(void *)v51 = v54;
    *(void *)(v51 + 8) = v55;
    *(void *)(v51 + 16) = v52[2];
    *(unsigned char *)(v51 + 24) = *((unsigned char *)v52 + 24);
    *(_DWORD *)(v51 + 28) = *((_DWORD *)v52 + 7);
    *(_WORD *)(v51 + 32) = *((_WORD *)v52 + 16);
    *(unsigned char *)(v51 + 34) = *((unsigned char *)v52 + 34);
  }
  v56 = v11[20];
  v57 = (_OWORD *)(v6 + v56);
  v58 = (_OWORD *)(v7 + v56);
  v59 = v58[1];
  *v57 = *v58;
  v57[1] = v59;
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1A3D0E518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  v8 = (long long *)(a2 + v6);
  uint64_t v9 = *(void *)(a1 + v6 + 8);
  uint64_t v10 = *(void *)(a2 + v6 + 8);
  if (v9)
  {
    if (v10)
    {
      *(_WORD *)uint64_t v7 = *(_WORD *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v7 + 16) = *((void *)v8 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v7 + 24) = *((void *)v8 + 3);
      *(void *)(v7 + 32) = *((void *)v8 + 4);
      *(void *)(v7 + 40) = *((void *)v8 + 5);
      *(void *)(v7 + 48) = *((void *)v8 + 6);
    }
    else
    {
      sub_1A3D0E9D8(v7);
      long long v13 = v8[1];
      long long v12 = v8[2];
      long long v14 = *v8;
      *(void *)(v7 + 48) = *((void *)v8 + 6);
      *(_OWORD *)(v7 + 16) = v13;
      *(_OWORD *)(v7 + 32) = v12;
      *(_OWORD *)uint64_t v7 = v14;
    }
  }
  else if (v10)
  {
    *(_WORD *)uint64_t v7 = *(_WORD *)v8;
    *(void *)(v7 + 8) = *((void *)v8 + 1);
    *(void *)(v7 + 16) = *((void *)v8 + 2);
    long long v11 = *(long long *)((char *)v8 + 24);
    *(_OWORD *)(v7 + 40) = *(long long *)((char *)v8 + 40);
    *(_OWORD *)(v7 + 24) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *v8;
    long long v16 = v8[1];
    long long v17 = v8[2];
    *(void *)(v7 + 48) = *((void *)v8 + 6);
    *(_OWORD *)(v7 + 16) = v16;
    *(_OWORD *)(v7 + 32) = v17;
    *(_OWORD *)uint64_t v7 = v15;
  }
  v18 = (int *)type metadata accessor for FaceObservation();
  uint64_t v19 = v18[5];
  uint64_t v20 = v7 + v19;
  uint64_t v21 = (uint64_t)v8 + v19;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24);
  v23(v20, v21, v22);
  v23(v7 + v18[6], (uint64_t)v8 + v18[6], v22);
  v23(v7 + v18[7], (uint64_t)v8 + v18[7], v22);
  uint64_t v24 = v18[8];
  uint64_t v25 = v7 + v24;
  v26 = (int *)((char *)v8 + v24);
  int v27 = *v26;
  *(_WORD *)(v25 + 4) = *((_WORD *)v26 + 2);
  *(_DWORD *)uint64_t v25 = v27;
  uint64_t v28 = v18[9];
  v29 = (void *)(v7 + v28);
  v30 = (void *)((char *)v8 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  v29[2] = v30[2];
  v29[3] = v30[3];
  uint64_t v31 = v18[10];
  v32 = (void *)(v7 + v31);
  v33 = (void *)((char *)v8 + v31);
  void *v32 = *v33;
  v32[1] = v33[1];
  v32[2] = v33[2];
  v32[3] = v33[3];
  uint64_t v34 = v18[11];
  uint64_t v35 = v7 + v34;
  uint64_t v36 = (uint64_t)v8 + v34;
  uint64_t v37 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  *(_DWORD *)(v7 + v18[12]) = *(_DWORD *)((char *)v8 + v18[12]);
  uint64_t v38 = v18[13];
  uint64_t v39 = v7 + v38;
  uint64_t v40 = (uint64_t)v8 + v38;
  char v41 = *(unsigned char *)(v40 + 48);
  long long v43 = *(_OWORD *)(v40 + 16);
  long long v42 = *(_OWORD *)(v40 + 32);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v43;
  *(_OWORD *)(v39 + 32) = v42;
  *(unsigned char *)(v39 + 48) = v41;
  *(_WORD *)(v7 + v18[14]) = *(_WORD *)((char *)v8 + v18[14]);
  uint64_t v44 = v18[15];
  v45 = (void *)(v7 + v44);
  v46 = (void *)((char *)v8 + v44);
  uint64_t v47 = *(void *)((char *)v46 + 6);
  void *v45 = *v46;
  *(void *)((char *)v45 + 6) = v47;
  uint64_t v48 = v18[16];
  v49 = (void *)(v7 + v48);
  v50 = (void *)((char *)v8 + v48);
  uint64_t v51 = *(void *)((char *)v50 + 6);
  void *v49 = *v50;
  *(void *)((char *)v49 + 6) = v51;
  uint64_t v52 = v18[17];
  uint64_t v53 = v7 + v52;
  uint64_t v54 = (uint64_t)v8 + v52;
  LOWORD(v51) = *(_WORD *)(v54 + 32);
  long long v55 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v55;
  *(_WORD *)(v53 + 32) = v51;
  uint64_t v56 = v18[18];
  uint64_t v57 = v7 + v56;
  uint64_t v58 = (uint64_t)v8 + v56;
  LODWORD(v51) = *(_DWORD *)v58;
  *(_WORD *)(v57 + 4) = *(_WORD *)(v58 + 4);
  *(_DWORD *)uint64_t v57 = v51;
  uint64_t v59 = v18[19];
  uint64_t v60 = v7 + v59;
  v61 = (uint64_t *)((char *)v8 + v59);
  LODWORD(v51) = *(_WORD *)(v7 + v59 + 32) & 0xFFF8;
  int v62 = *(_WORD *)((unsigned char *)v8 + v59 + 32) & 0xFFF8;
  if (v51 != 65520)
  {
    if (v62 == 65520)
    {
      sub_1A3D0EA2C(v60);
      int v65 = *(_DWORD *)((char *)v61 + 31);
      long long v66 = *((_OWORD *)v61 + 1);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *(_OWORD *)(v60 + 16) = v66;
      *(_DWORD *)(v60 + 31) = v65;
      goto LABEL_16;
    }
    uint64_t v69 = *v61;
    unint64_t v70 = v61[1];
    sub_1A3C7D1A8(*v61, v70);
    uint64_t v71 = *(void *)v60;
    unint64_t v72 = *(void *)(v60 + 8);
    *(void *)uint64_t v60 = v69;
    *(void *)(v60 + 8) = v70;
    sub_1A3C7D218(v71, v72);
    *(void *)(v60 + 16) = v61[2];
    *(unsigned char *)(v60 + 24) = *((unsigned char *)v61 + 24);
    *(_DWORD *)(v60 + 28) = *((_DWORD *)v61 + 7);
LABEL_15:
    *(_WORD *)(v60 + 32) = *((_WORD *)v61 + 16);
    *(unsigned char *)(v60 + 34) = *((unsigned char *)v61 + 34);
    goto LABEL_16;
  }
  if (v62 != 65520)
  {
    uint64_t v67 = *v61;
    unint64_t v68 = v61[1];
    sub_1A3C7D1A8(*v61, v68);
    *(void *)uint64_t v60 = v67;
    *(void *)(v60 + 8) = v68;
    *(void *)(v60 + 16) = v61[2];
    *(unsigned char *)(v60 + 24) = *((unsigned char *)v61 + 24);
    *(_DWORD *)(v60 + 28) = *((_DWORD *)v61 + 7);
    goto LABEL_15;
  }
  long long v63 = *(_OWORD *)v61;
  long long v64 = *((_OWORD *)v61 + 1);
  *(_DWORD *)(v60 + 31) = *(_DWORD *)((char *)v61 + 31);
  *(_OWORD *)uint64_t v60 = v63;
  *(_OWORD *)(v60 + 16) = v64;
LABEL_16:
  uint64_t v73 = v18[20];
  v74 = (void *)(v7 + v73);
  v75 = (void *)((char *)v8 + v73);
  void *v74 = *v75;
  v74[1] = v75[1];
  v74[2] = v75[2];
  v74[3] = v75[3];
  uint64_t v76 = *(int *)(a3 + 28);
  v77 = (void *)(a1 + v76);
  v78 = (void *)(a2 + v76);
  void *v77 = *v78;
  v77[1] = v78[1];
  return a1;
}

uint64_t sub_1A3D0E9D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A3D0EA2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A3D0EA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(v6 + 48) = *(void *)(a2 + v5 + 48);
  long long v8 = *(_OWORD *)(a2 + v5 + 32);
  long long v9 = *(_OWORD *)(a2 + v5);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(a2 + v5 + 16);
  *(_OWORD *)(v6 + 32) = v8;
  *(_OWORD *)uint64_t v6 = v9;
  uint64_t v10 = (int *)type metadata accessor for FaceObservation();
  uint64_t v11 = v10[5];
  uint64_t v12 = v6 + v11;
  uint64_t v13 = v7 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  long long v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(v6 + v10[6], v7 + v10[6], v14);
  v15(v6 + v10[7], v7 + v10[7], v14);
  uint64_t v16 = v10[8];
  uint64_t v17 = v6 + v16;
  uint64_t v18 = v7 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_WORD *)(v17 + 4) = *(_WORD *)(v18 + 4);
  uint64_t v19 = v10[9];
  uint64_t v20 = (_OWORD *)(v6 + v19);
  uint64_t v21 = (_OWORD *)(v7 + v19);
  long long v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = v10[10];
  uint64_t v24 = (_OWORD *)(v6 + v23);
  uint64_t v25 = (_OWORD *)(v7 + v23);
  long long v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = v10[11];
  uint64_t v28 = v6 + v27;
  uint64_t v29 = v7 + v27;
  uint64_t v30 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  *(_DWORD *)(v6 + v10[12]) = *(_DWORD *)(v7 + v10[12]);
  uint64_t v31 = v10[13];
  uint64_t v32 = v6 + v31;
  v33 = (long long *)(v7 + v31);
  *(unsigned char *)(v32 + 48) = *((unsigned char *)v33 + 48);
  long long v34 = v33[2];
  long long v35 = *v33;
  *(_OWORD *)(v32 + 16) = v33[1];
  *(_OWORD *)(v32 + 32) = v34;
  *(_OWORD *)uint64_t v32 = v35;
  *(_WORD *)(v6 + v10[14]) = *(_WORD *)(v7 + v10[14]);
  uint64_t v36 = v10[15];
  uint64_t v37 = (void *)(v6 + v36);
  uint64_t v38 = (void *)(v7 + v36);
  *(void *)((char *)v37 + 6) = *(void *)((char *)v38 + 6);
  *uint64_t v37 = *v38;
  uint64_t v39 = v10[16];
  uint64_t v40 = (void *)(v6 + v39);
  char v41 = (void *)(v7 + v39);
  *(void *)((char *)v40 + 6) = *(void *)((char *)v41 + 6);
  *uint64_t v40 = *v41;
  uint64_t v42 = v10[17];
  uint64_t v43 = v6 + v42;
  uint64_t v44 = v7 + v42;
  long long v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(_WORD *)(v43 + 32) = *(_WORD *)(v44 + 32);
  uint64_t v46 = v10[18];
  uint64_t v47 = v6 + v46;
  uint64_t v48 = v7 + v46;
  *(_WORD *)(v47 + 4) = *(_WORD *)(v48 + 4);
  *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
  uint64_t v49 = v10[19];
  uint64_t v50 = v6 + v49;
  uint64_t v51 = v7 + v49;
  long long v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(_DWORD *)(v50 + 31) = *(_DWORD *)(v51 + 31);
  uint64_t v53 = v10[20];
  uint64_t v54 = (_OWORD *)(v6 + v53);
  long long v55 = (_OWORD *)(v7 + v53);
  long long v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1A3D0ED2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  if (*(void *)(a1 + v6 + 8))
  {
    uint64_t v9 = *(void *)(v8 + 8);
    if (v9)
    {
      *(_WORD *)uint64_t v7 = *(_WORD *)v8;
      *(void *)(v7 + 8) = v9;
      swift_bridgeObjectRelease();
      *(void *)(v7 + 16) = *(void *)(v8 + 16);
      swift_bridgeObjectRelease();
      *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
      goto LABEL_6;
    }
    sub_1A3D0E9D8(v7);
  }
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
LABEL_6:
  uint64_t v11 = (int *)type metadata accessor for FaceObservation();
  uint64_t v12 = v11[5];
  uint64_t v13 = v7 + v12;
  uint64_t v14 = v8 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(v7 + v11[6], v8 + v11[6], v15);
  v16(v7 + v11[7], v8 + v11[7], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = v7 + v17;
  uint64_t v19 = v8 + v17;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_WORD *)(v18 + 4) = *(_WORD *)(v19 + 4);
  uint64_t v20 = v11[9];
  uint64_t v21 = (_OWORD *)(v7 + v20);
  long long v22 = (_OWORD *)(v8 + v20);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v11[10];
  uint64_t v25 = (_OWORD *)(v7 + v24);
  long long v26 = (_OWORD *)(v8 + v24);
  long long v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v11[11];
  uint64_t v29 = v7 + v28;
  uint64_t v30 = v8 + v28;
  uint64_t v31 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  *(_DWORD *)(v7 + v11[12]) = *(_DWORD *)(v8 + v11[12]);
  uint64_t v32 = v11[13];
  uint64_t v33 = v7 + v32;
  long long v34 = (long long *)(v8 + v32);
  *(unsigned char *)(v33 + 48) = *((unsigned char *)v34 + 48);
  long long v35 = v34[2];
  long long v36 = *v34;
  *(_OWORD *)(v33 + 16) = v34[1];
  *(_OWORD *)(v33 + 32) = v35;
  *(_OWORD *)uint64_t v33 = v36;
  *(_WORD *)(v7 + v11[14]) = *(_WORD *)(v8 + v11[14]);
  uint64_t v37 = v11[15];
  uint64_t v38 = (void *)(v7 + v37);
  uint64_t v39 = (void *)(v8 + v37);
  *(void *)((char *)v38 + 6) = *(void *)((char *)v39 + 6);
  *uint64_t v38 = *v39;
  uint64_t v40 = v11[16];
  char v41 = (void *)(v7 + v40);
  uint64_t v42 = (void *)(v8 + v40);
  *(void *)((char *)v41 + 6) = *(void *)((char *)v42 + 6);
  *char v41 = *v42;
  uint64_t v43 = v11[17];
  uint64_t v44 = v7 + v43;
  uint64_t v45 = v8 + v43;
  long long v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  *(_WORD *)(v44 + 32) = *(_WORD *)(v45 + 32);
  uint64_t v47 = v11[18];
  uint64_t v48 = v7 + v47;
  uint64_t v49 = v8 + v47;
  *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
  *(_WORD *)(v48 + 4) = *(_WORD *)(v49 + 4);
  uint64_t v50 = v11[19];
  uint64_t v51 = v7 + v50;
  uint64_t v52 = v8 + v50;
  if ((*(_WORD *)(v7 + v50 + 32) & 0xFFF8) != 0xFFF0)
  {
    if ((*(_WORD *)(v52 + 32) & 0xFFF8) != 0xFFF0)
    {
      uint64_t v54 = *(void *)v51;
      unint64_t v55 = *(void *)(v51 + 8);
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
      sub_1A3C7D218(v54, v55);
      *(void *)(v51 + 16) = *(void *)(v52 + 16);
      *(unsigned char *)(v51 + 24) = *(unsigned char *)(v52 + 24);
      *(_DWORD *)(v51 + 28) = *(_DWORD *)(v52 + 28);
      *(_WORD *)(v51 + 32) = *(_WORD *)(v52 + 32);
      *(unsigned char *)(v51 + 34) = *(unsigned char *)(v52 + 34);
      goto LABEL_11;
    }
    sub_1A3D0EA2C(v51);
  }
  long long v53 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v53;
  *(_DWORD *)(v51 + 31) = *(_DWORD *)(v52 + 31);
LABEL_11:
  uint64_t v56 = v11[20];
  uint64_t v57 = (_OWORD *)(v7 + v56);
  uint64_t v58 = (_OWORD *)(v8 + v56);
  long long v59 = v58[1];
  *uint64_t v57 = *v58;
  v57[1] = v59;
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1A3D0F0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D0F0BC);
}

uint64_t sub_1A3D0F0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FaceObservation();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A3D0F16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D0F180);
}

uint64_t sub_1A3D0F180(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 56) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FaceObservation();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A3D0F228()
{
  return sub_1A3D106DC();
}

uint64_t type metadata accessor for MultiFaceTemporalGazeState()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_1A3D0F250(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 20) = *(uint64_t *)((char *)a2 + 20);
    *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
    *(void *)(a1 + 32) = a2[4];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    swift_bridgeObjectRetain();
    if (v9)
    {
      *(_WORD *)uint64_t v7 = *(_WORD *)v8;
      uint64_t v10 = *(void *)(v8 + 16);
      *(void *)(v7 + 8) = v9;
      *(void *)(v7 + 16) = v10;
      *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v12 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *(_OWORD *)(v7 + 16) = v12;
      *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
      *(void *)(v7 + 48) = *(void *)(v8 + 48);
    }
    uint64_t v13 = (int *)type metadata accessor for FaceObservation();
    uint64_t v14 = v13[5];
    uint64_t v15 = v7 + v14;
    uint64_t v16 = v8 + v14;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(v7 + v13[6], v8 + v13[6], v17);
    v18(v7 + v13[7], v8 + v13[7], v17);
    uint64_t v19 = v13[8];
    uint64_t v20 = v7 + v19;
    uint64_t v21 = v8 + v19;
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
    *(_WORD *)(v20 + 4) = *(_WORD *)(v21 + 4);
    uint64_t v22 = v13[9];
    long long v23 = (_OWORD *)(v7 + v22);
    uint64_t v24 = (_OWORD *)(v8 + v22);
    long long v25 = v24[1];
    *long long v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = v13[10];
    long long v27 = (_OWORD *)(v7 + v26);
    uint64_t v28 = (_OWORD *)(v8 + v26);
    long long v29 = v28[1];
    *long long v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = v13[11];
    uint64_t v31 = v7 + v30;
    uint64_t v32 = v8 + v30;
    uint64_t v33 = sub_1A4095C7C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    *(_DWORD *)(v7 + v13[12]) = *(_DWORD *)(v8 + v13[12]);
    uint64_t v34 = v13[13];
    uint64_t v35 = v7 + v34;
    long long v36 = (long long *)(v8 + v34);
    *(unsigned char *)(v35 + 48) = *((unsigned char *)v36 + 48);
    long long v37 = v36[2];
    long long v38 = *v36;
    *(_OWORD *)(v35 + 16) = v36[1];
    *(_OWORD *)(v35 + 32) = v37;
    *(_OWORD *)uint64_t v35 = v38;
    *(_WORD *)(v7 + v13[14]) = *(_WORD *)(v8 + v13[14]);
    uint64_t v39 = v13[15];
    uint64_t v40 = (void *)(v7 + v39);
    char v41 = (void *)(v8 + v39);
    *(void *)((char *)v40 + 6) = *(void *)((char *)v41 + 6);
    *uint64_t v40 = *v41;
    uint64_t v42 = v13[16];
    uint64_t v43 = (void *)(v7 + v42);
    uint64_t v44 = (void *)(v8 + v42);
    *(void *)((char *)v43 + 6) = *(void *)((char *)v44 + 6);
    *uint64_t v43 = *v44;
    uint64_t v45 = v13[17];
    uint64_t v46 = v7 + v45;
    uint64_t v47 = v8 + v45;
    long long v48 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v48;
    *(_WORD *)(v46 + 32) = *(_WORD *)(v47 + 32);
    uint64_t v49 = v13[18];
    uint64_t v50 = v7 + v49;
    uint64_t v51 = v8 + v49;
    *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
    *(_WORD *)(v50 + 4) = *(_WORD *)(v51 + 4);
    uint64_t v52 = v13[19];
    uint64_t v53 = v7 + v52;
    uint64_t v54 = (uint64_t *)(v8 + v52);
    if ((*(_WORD *)(v8 + v52 + 32) & 0xFFF8) == 0xFFF0)
    {
      long long v55 = *((_OWORD *)v54 + 1);
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      *(_OWORD *)(v53 + 16) = v55;
      *(_DWORD *)(v53 + 31) = *(_DWORD *)((char *)v54 + 31);
    }
    else
    {
      uint64_t v56 = *v54;
      unint64_t v57 = v54[1];
      sub_1A3C7D1A8(*v54, v57);
      *(void *)uint64_t v53 = v56;
      *(void *)(v53 + 8) = v57;
      *(void *)(v53 + 16) = v54[2];
      *(unsigned char *)(v53 + 24) = *((unsigned char *)v54 + 24);
      *(_DWORD *)(v53 + 28) = *((_DWORD *)v54 + 7);
      *(_WORD *)(v53 + 32) = *((_WORD *)v54 + 16);
      *(unsigned char *)(v53 + 34) = *((unsigned char *)v54 + 34);
    }
    uint64_t v58 = v13[20];
    long long v59 = (_OWORD *)(v7 + v58);
    uint64_t v60 = (_OWORD *)(v8 + v58);
    long long v61 = v60[1];
    *long long v59 = *v60;
    v59[1] = v61;
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_1A3D0F5E8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  int v5 = (int *)type metadata accessor for FaceObservation();
  uint64_t v6 = v4 + v5[5];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v4 + v5[6], v7);
  v8(v4 + v5[7], v7);
  uint64_t v9 = v4 + v5[11];
  uint64_t v10 = sub_1A4095C7C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v12 = v4 + v5[19];
  if ((*(_WORD *)(v12 + 32) & 0xFFF8) != 0xFFF0)
  {
    uint64_t v13 = *(void *)v12;
    unint64_t v14 = *(void *)(v12 + 8);
    return sub_1A3C7D218(v13, v14);
  }
  return result;
}

uint64_t sub_1A3D0F748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 20) = *(void *)(a2 + 20);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5 + 8);
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_WORD *)uint64_t v6 = *(_WORD *)v7;
    uint64_t v9 = *(void *)(v7 + 16);
    *(void *)(v6 + 8) = v8;
    *(void *)(v6 + 16) = v9;
    *(_OWORD *)(v6 + 24) = *(_OWORD *)(v7 + 24);
    *(_OWORD *)(v6 + 40) = *(_OWORD *)(v7 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v10;
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v7 + 32);
    *(void *)(v6 + 48) = *(void *)(v7 + 48);
  }
  uint64_t v11 = (int *)type metadata accessor for FaceObservation();
  uint64_t v12 = v11[5];
  uint64_t v13 = v6 + v12;
  uint64_t v14 = v7 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(v6 + v11[6], v7 + v11[6], v15);
  v16(v6 + v11[7], v7 + v11[7], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = v6 + v17;
  uint64_t v19 = v7 + v17;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_WORD *)(v18 + 4) = *(_WORD *)(v19 + 4);
  uint64_t v20 = v11[9];
  uint64_t v21 = (_OWORD *)(v6 + v20);
  uint64_t v22 = (_OWORD *)(v7 + v20);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v11[10];
  long long v25 = (_OWORD *)(v6 + v24);
  uint64_t v26 = (_OWORD *)(v7 + v24);
  long long v27 = v26[1];
  *long long v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v11[11];
  uint64_t v29 = v6 + v28;
  uint64_t v30 = v7 + v28;
  uint64_t v31 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  *(_DWORD *)(v6 + v11[12]) = *(_DWORD *)(v7 + v11[12]);
  uint64_t v32 = v11[13];
  uint64_t v33 = v6 + v32;
  uint64_t v34 = (long long *)(v7 + v32);
  *(unsigned char *)(v33 + 48) = *((unsigned char *)v34 + 48);
  long long v35 = v34[2];
  long long v36 = *v34;
  *(_OWORD *)(v33 + 16) = v34[1];
  *(_OWORD *)(v33 + 32) = v35;
  *(_OWORD *)uint64_t v33 = v36;
  *(_WORD *)(v6 + v11[14]) = *(_WORD *)(v7 + v11[14]);
  uint64_t v37 = v11[15];
  long long v38 = (void *)(v6 + v37);
  uint64_t v39 = (void *)(v7 + v37);
  *(void *)((char *)v38 + 6) = *(void *)((char *)v39 + 6);
  *long long v38 = *v39;
  uint64_t v40 = v11[16];
  char v41 = (void *)(v6 + v40);
  uint64_t v42 = (void *)(v7 + v40);
  *(void *)((char *)v41 + 6) = *(void *)((char *)v42 + 6);
  *char v41 = *v42;
  uint64_t v43 = v11[17];
  uint64_t v44 = v6 + v43;
  uint64_t v45 = v7 + v43;
  long long v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  *(_WORD *)(v44 + 32) = *(_WORD *)(v45 + 32);
  uint64_t v47 = v11[18];
  uint64_t v48 = v6 + v47;
  uint64_t v49 = v7 + v47;
  *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
  *(_WORD *)(v48 + 4) = *(_WORD *)(v49 + 4);
  uint64_t v50 = v11[19];
  uint64_t v51 = v6 + v50;
  uint64_t v52 = (uint64_t *)(v7 + v50);
  if ((*(_WORD *)(v7 + v50 + 32) & 0xFFF8) == 0xFFF0)
  {
    long long v53 = *((_OWORD *)v52 + 1);
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    *(_OWORD *)(v51 + 16) = v53;
    *(_DWORD *)(v51 + 31) = *(_DWORD *)((char *)v52 + 31);
  }
  else
  {
    uint64_t v54 = *v52;
    unint64_t v55 = v52[1];
    sub_1A3C7D1A8(*v52, v55);
    *(void *)uint64_t v51 = v54;
    *(void *)(v51 + 8) = v55;
    *(void *)(v51 + 16) = v52[2];
    *(unsigned char *)(v51 + 24) = *((unsigned char *)v52 + 24);
    *(_DWORD *)(v51 + 28) = *((_DWORD *)v52 + 7);
    *(_WORD *)(v51 + 32) = *((_WORD *)v52 + 16);
    *(unsigned char *)(v51 + 34) = *((unsigned char *)v52 + 34);
  }
  uint64_t v56 = v11[20];
  unint64_t v57 = (_OWORD *)(v6 + v56);
  uint64_t v58 = (_OWORD *)(v7 + v56);
  long long v59 = v58[1];
  *unint64_t v57 = *v58;
  v57[1] = v59;
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1A3D0FA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (long long *)(a2 + v6);
  uint64_t v9 = *(void *)(a1 + v6 + 8);
  uint64_t v10 = *(void *)(a2 + v6 + 8);
  if (v9)
  {
    if (v10)
    {
      *(_WORD *)uint64_t v7 = *(_WORD *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v7 + 16) = *((void *)v8 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v7 + 24) = *((void *)v8 + 3);
      *(void *)(v7 + 32) = *((void *)v8 + 4);
      *(void *)(v7 + 40) = *((void *)v8 + 5);
      *(void *)(v7 + 48) = *((void *)v8 + 6);
    }
    else
    {
      sub_1A3D0E9D8(v7);
      long long v13 = v8[1];
      long long v12 = v8[2];
      long long v14 = *v8;
      *(void *)(v7 + 48) = *((void *)v8 + 6);
      *(_OWORD *)(v7 + 16) = v13;
      *(_OWORD *)(v7 + 32) = v12;
      *(_OWORD *)uint64_t v7 = v14;
    }
  }
  else if (v10)
  {
    *(_WORD *)uint64_t v7 = *(_WORD *)v8;
    *(void *)(v7 + 8) = *((void *)v8 + 1);
    *(void *)(v7 + 16) = *((void *)v8 + 2);
    long long v11 = *(long long *)((char *)v8 + 24);
    *(_OWORD *)(v7 + 40) = *(long long *)((char *)v8 + 40);
    *(_OWORD *)(v7 + 24) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *v8;
    long long v16 = v8[1];
    long long v17 = v8[2];
    *(void *)(v7 + 48) = *((void *)v8 + 6);
    *(_OWORD *)(v7 + 16) = v16;
    *(_OWORD *)(v7 + 32) = v17;
    *(_OWORD *)uint64_t v7 = v15;
  }
  uint64_t v18 = (int *)type metadata accessor for FaceObservation();
  uint64_t v19 = v18[5];
  uint64_t v20 = v7 + v19;
  uint64_t v21 = (uint64_t)v8 + v19;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  long long v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24);
  v23(v20, v21, v22);
  v23(v7 + v18[6], (uint64_t)v8 + v18[6], v22);
  v23(v7 + v18[7], (uint64_t)v8 + v18[7], v22);
  uint64_t v24 = v18[8];
  uint64_t v25 = v7 + v24;
  uint64_t v26 = (int *)((char *)v8 + v24);
  int v27 = *v26;
  *(_WORD *)(v25 + 4) = *((_WORD *)v26 + 2);
  *(_DWORD *)uint64_t v25 = v27;
  uint64_t v28 = v18[9];
  uint64_t v29 = (void *)(v7 + v28);
  uint64_t v30 = (void *)((char *)v8 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  v29[2] = v30[2];
  v29[3] = v30[3];
  uint64_t v31 = v18[10];
  uint64_t v32 = (void *)(v7 + v31);
  uint64_t v33 = (void *)((char *)v8 + v31);
  void *v32 = *v33;
  v32[1] = v33[1];
  v32[2] = v33[2];
  v32[3] = v33[3];
  uint64_t v34 = v18[11];
  uint64_t v35 = v7 + v34;
  uint64_t v36 = (uint64_t)v8 + v34;
  uint64_t v37 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  *(_DWORD *)(v7 + v18[12]) = *(_DWORD *)((char *)v8 + v18[12]);
  uint64_t v38 = v18[13];
  uint64_t v39 = v7 + v38;
  uint64_t v40 = (uint64_t)v8 + v38;
  char v41 = *(unsigned char *)(v40 + 48);
  long long v43 = *(_OWORD *)(v40 + 16);
  long long v42 = *(_OWORD *)(v40 + 32);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v43;
  *(_OWORD *)(v39 + 32) = v42;
  *(unsigned char *)(v39 + 48) = v41;
  *(_WORD *)(v7 + v18[14]) = *(_WORD *)((char *)v8 + v18[14]);
  uint64_t v44 = v18[15];
  uint64_t v45 = (void *)(v7 + v44);
  long long v46 = (void *)((char *)v8 + v44);
  uint64_t v47 = *(void *)((char *)v46 + 6);
  void *v45 = *v46;
  *(void *)((char *)v45 + 6) = v47;
  uint64_t v48 = v18[16];
  uint64_t v49 = (void *)(v7 + v48);
  uint64_t v50 = (void *)((char *)v8 + v48);
  uint64_t v51 = *(void *)((char *)v50 + 6);
  void *v49 = *v50;
  *(void *)((char *)v49 + 6) = v51;
  uint64_t v52 = v18[17];
  uint64_t v53 = v7 + v52;
  uint64_t v54 = (uint64_t)v8 + v52;
  LOWORD(v51) = *(_WORD *)(v54 + 32);
  long long v55 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v55;
  *(_WORD *)(v53 + 32) = v51;
  uint64_t v56 = v18[18];
  uint64_t v57 = v7 + v56;
  uint64_t v58 = (uint64_t)v8 + v56;
  LODWORD(v51) = *(_DWORD *)v58;
  *(_WORD *)(v57 + 4) = *(_WORD *)(v58 + 4);
  *(_DWORD *)uint64_t v57 = v51;
  uint64_t v59 = v18[19];
  uint64_t v60 = v7 + v59;
  long long v61 = (uint64_t *)((char *)v8 + v59);
  LODWORD(v51) = *(_WORD *)(v7 + v59 + 32) & 0xFFF8;
  int v62 = *(_WORD *)((unsigned char *)v8 + v59 + 32) & 0xFFF8;
  if (v51 != 65520)
  {
    if (v62 == 65520)
    {
      sub_1A3D0EA2C(v60);
      int v65 = *(_DWORD *)((char *)v61 + 31);
      long long v66 = *((_OWORD *)v61 + 1);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *(_OWORD *)(v60 + 16) = v66;
      *(_DWORD *)(v60 + 31) = v65;
      goto LABEL_16;
    }
    uint64_t v69 = *v61;
    unint64_t v70 = v61[1];
    sub_1A3C7D1A8(*v61, v70);
    uint64_t v71 = *(void *)v60;
    unint64_t v72 = *(void *)(v60 + 8);
    *(void *)uint64_t v60 = v69;
    *(void *)(v60 + 8) = v70;
    sub_1A3C7D218(v71, v72);
    *(void *)(v60 + 16) = v61[2];
    *(unsigned char *)(v60 + 24) = *((unsigned char *)v61 + 24);
    *(_DWORD *)(v60 + 28) = *((_DWORD *)v61 + 7);
LABEL_15:
    *(_WORD *)(v60 + 32) = *((_WORD *)v61 + 16);
    *(unsigned char *)(v60 + 34) = *((unsigned char *)v61 + 34);
    goto LABEL_16;
  }
  if (v62 != 65520)
  {
    uint64_t v67 = *v61;
    unint64_t v68 = v61[1];
    sub_1A3C7D1A8(*v61, v68);
    *(void *)uint64_t v60 = v67;
    *(void *)(v60 + 8) = v68;
    *(void *)(v60 + 16) = v61[2];
    *(unsigned char *)(v60 + 24) = *((unsigned char *)v61 + 24);
    *(_DWORD *)(v60 + 28) = *((_DWORD *)v61 + 7);
    goto LABEL_15;
  }
  long long v63 = *(_OWORD *)v61;
  long long v64 = *((_OWORD *)v61 + 1);
  *(_DWORD *)(v60 + 31) = *(_DWORD *)((char *)v61 + 31);
  *(_OWORD *)uint64_t v60 = v63;
  *(_OWORD *)(v60 + 16) = v64;
LABEL_16:
  uint64_t v73 = v18[20];
  v74 = (void *)(v7 + v73);
  v75 = (void *)((char *)v8 + v73);
  void *v74 = *v75;
  v74[1] = v75[1];
  v74[2] = v75[2];
  v74[3] = v75[3];
  uint64_t v76 = *(int *)(a3 + 28);
  v77 = (void *)(a1 + v76);
  v78 = (void *)(a2 + v76);
  void *v77 = *v78;
  v77[1] = v78[1];
  return a1;
}

uint64_t sub_1A3D0FF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(v6 + 48) = *(void *)(a2 + v5 + 48);
  long long v8 = *(_OWORD *)(a2 + v5 + 32);
  long long v9 = *(_OWORD *)(a2 + v5);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(a2 + v5 + 16);
  *(_OWORD *)(v6 + 32) = v8;
  *(_OWORD *)uint64_t v6 = v9;
  uint64_t v10 = (int *)type metadata accessor for FaceObservation();
  uint64_t v11 = v10[5];
  uint64_t v12 = v6 + v11;
  uint64_t v13 = v7 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  long long v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(v6 + v10[6], v7 + v10[6], v14);
  v15(v6 + v10[7], v7 + v10[7], v14);
  uint64_t v16 = v10[8];
  uint64_t v17 = v6 + v16;
  uint64_t v18 = v7 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_WORD *)(v17 + 4) = *(_WORD *)(v18 + 4);
  uint64_t v19 = v10[9];
  uint64_t v20 = (_OWORD *)(v6 + v19);
  uint64_t v21 = (_OWORD *)(v7 + v19);
  long long v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = v10[10];
  uint64_t v24 = (_OWORD *)(v6 + v23);
  uint64_t v25 = (_OWORD *)(v7 + v23);
  long long v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = v10[11];
  uint64_t v28 = v6 + v27;
  uint64_t v29 = v7 + v27;
  uint64_t v30 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  *(_DWORD *)(v6 + v10[12]) = *(_DWORD *)(v7 + v10[12]);
  uint64_t v31 = v10[13];
  uint64_t v32 = v6 + v31;
  uint64_t v33 = (long long *)(v7 + v31);
  *(unsigned char *)(v32 + 48) = *((unsigned char *)v33 + 48);
  long long v34 = v33[2];
  long long v35 = *v33;
  *(_OWORD *)(v32 + 16) = v33[1];
  *(_OWORD *)(v32 + 32) = v34;
  *(_OWORD *)uint64_t v32 = v35;
  *(_WORD *)(v6 + v10[14]) = *(_WORD *)(v7 + v10[14]);
  uint64_t v36 = v10[15];
  uint64_t v37 = (void *)(v6 + v36);
  uint64_t v38 = (void *)(v7 + v36);
  *(void *)((char *)v37 + 6) = *(void *)((char *)v38 + 6);
  *uint64_t v37 = *v38;
  uint64_t v39 = v10[16];
  uint64_t v40 = (void *)(v6 + v39);
  char v41 = (void *)(v7 + v39);
  *(void *)((char *)v40 + 6) = *(void *)((char *)v41 + 6);
  *uint64_t v40 = *v41;
  uint64_t v42 = v10[17];
  uint64_t v43 = v6 + v42;
  uint64_t v44 = v7 + v42;
  long long v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(_WORD *)(v43 + 32) = *(_WORD *)(v44 + 32);
  uint64_t v46 = v10[18];
  uint64_t v47 = v6 + v46;
  uint64_t v48 = v7 + v46;
  *(_WORD *)(v47 + 4) = *(_WORD *)(v48 + 4);
  *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
  uint64_t v49 = v10[19];
  uint64_t v50 = v6 + v49;
  uint64_t v51 = v7 + v49;
  long long v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(_DWORD *)(v50 + 31) = *(_DWORD *)(v51 + 31);
  uint64_t v53 = v10[20];
  uint64_t v54 = (_OWORD *)(v6 + v53);
  long long v55 = (_OWORD *)(v7 + v53);
  long long v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1A3D101DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 20) = *(void *)(a2 + 20);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  if (*(void *)(a1 + v6 + 8))
  {
    uint64_t v9 = *(void *)(v8 + 8);
    if (v9)
    {
      *(_WORD *)uint64_t v7 = *(_WORD *)v8;
      *(void *)(v7 + 8) = v9;
      swift_bridgeObjectRelease();
      *(void *)(v7 + 16) = *(void *)(v8 + 16);
      swift_bridgeObjectRelease();
      *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
      goto LABEL_6;
    }
    sub_1A3D0E9D8(v7);
  }
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
LABEL_6:
  uint64_t v11 = (int *)type metadata accessor for FaceObservation();
  uint64_t v12 = v11[5];
  uint64_t v13 = v7 + v12;
  uint64_t v14 = v8 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(v7 + v11[6], v8 + v11[6], v15);
  v16(v7 + v11[7], v8 + v11[7], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = v7 + v17;
  uint64_t v19 = v8 + v17;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_WORD *)(v18 + 4) = *(_WORD *)(v19 + 4);
  uint64_t v20 = v11[9];
  uint64_t v21 = (_OWORD *)(v7 + v20);
  long long v22 = (_OWORD *)(v8 + v20);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v11[10];
  uint64_t v25 = (_OWORD *)(v7 + v24);
  long long v26 = (_OWORD *)(v8 + v24);
  long long v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v11[11];
  uint64_t v29 = v7 + v28;
  uint64_t v30 = v8 + v28;
  uint64_t v31 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  *(_DWORD *)(v7 + v11[12]) = *(_DWORD *)(v8 + v11[12]);
  uint64_t v32 = v11[13];
  uint64_t v33 = v7 + v32;
  long long v34 = (long long *)(v8 + v32);
  *(unsigned char *)(v33 + 48) = *((unsigned char *)v34 + 48);
  long long v35 = v34[2];
  long long v36 = *v34;
  *(_OWORD *)(v33 + 16) = v34[1];
  *(_OWORD *)(v33 + 32) = v35;
  *(_OWORD *)uint64_t v33 = v36;
  *(_WORD *)(v7 + v11[14]) = *(_WORD *)(v8 + v11[14]);
  uint64_t v37 = v11[15];
  uint64_t v38 = (void *)(v7 + v37);
  uint64_t v39 = (void *)(v8 + v37);
  *(void *)((char *)v38 + 6) = *(void *)((char *)v39 + 6);
  *uint64_t v38 = *v39;
  uint64_t v40 = v11[16];
  char v41 = (void *)(v7 + v40);
  uint64_t v42 = (void *)(v8 + v40);
  *(void *)((char *)v41 + 6) = *(void *)((char *)v42 + 6);
  *char v41 = *v42;
  uint64_t v43 = v11[17];
  uint64_t v44 = v7 + v43;
  uint64_t v45 = v8 + v43;
  long long v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  *(_WORD *)(v44 + 32) = *(_WORD *)(v45 + 32);
  uint64_t v47 = v11[18];
  uint64_t v48 = v7 + v47;
  uint64_t v49 = v8 + v47;
  *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
  *(_WORD *)(v48 + 4) = *(_WORD *)(v49 + 4);
  uint64_t v50 = v11[19];
  uint64_t v51 = v7 + v50;
  uint64_t v52 = v8 + v50;
  if ((*(_WORD *)(v7 + v50 + 32) & 0xFFF8) != 0xFFF0)
  {
    if ((*(_WORD *)(v52 + 32) & 0xFFF8) != 0xFFF0)
    {
      uint64_t v54 = *(void *)v51;
      unint64_t v55 = *(void *)(v51 + 8);
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
      sub_1A3C7D218(v54, v55);
      *(void *)(v51 + 16) = *(void *)(v52 + 16);
      *(unsigned char *)(v51 + 24) = *(unsigned char *)(v52 + 24);
      *(_DWORD *)(v51 + 28) = *(_DWORD *)(v52 + 28);
      *(_WORD *)(v51 + 32) = *(_WORD *)(v52 + 32);
      *(unsigned char *)(v51 + 34) = *(unsigned char *)(v52 + 34);
      goto LABEL_11;
    }
    sub_1A3D0EA2C(v51);
  }
  long long v53 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v53;
  *(_DWORD *)(v51 + 31) = *(_DWORD *)(v52 + 31);
LABEL_11:
  uint64_t v56 = v11[20];
  uint64_t v57 = (_OWORD *)(v7 + v56);
  uint64_t v58 = (_OWORD *)(v8 + v56);
  long long v59 = v58[1];
  *uint64_t v57 = *v58;
  v57[1] = v59;
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1A3D10550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D10564);
}

uint64_t sub_1A3D10564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FaceObservation();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A3D10614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D10628);
}

uint64_t sub_1A3D10628(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FaceObservation();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A3D106D0()
{
  return sub_1A3D106DC();
}

uint64_t sub_1A3D106DC()
{
  uint64_t result = type metadata accessor for FaceObservation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A3D10780()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  sub_1A4096FBC();
  uint64_t result = sub_1A409692C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MultiFaceTemporalGazeScoresState()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1A3D10888()
{
  unint64_t result = qword_1E95ED8B8;
  if (!qword_1E95ED8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95ED8B8);
  }
  return result;
}

uint64_t sub_1A3D108DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A3D10908(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A3D10934()
{
  unint64_t result = qword_1E95ED8C8;
  if (!qword_1E95ED8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95ED8C8);
  }
  return result;
}

uint64_t sub_1A3D10988(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3D109F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A3D10A1C(uint64_t a1)
{
  return a1;
}

double DetectedObjectObservation.init(boundingBox:)@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v8 = *a1;
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 3);
  uint64_t v5 = (int *)type metadata accessor for DetectedObjectObservation();
  sub_1A4095C6C();
  *(_OWORD *)a2 = v8;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(_DWORD *)(a2 + v5[6]) = 1065353216;
  uint64_t v6 = a2 + v5[7];
  double result = 0.0;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)uint64_t v6 = 0u;
  *(unsigned char *)(v6 + 48) = 1;
  *(_WORD *)(a2 + v5[8]) = -8;
  return result;
}

uint64_t type metadata accessor for DetectedObjectObservation()
{
  uint64_t result = qword_1E96033D0;
  if (!qword_1E96033D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 DetectedObjectObservation.boundingBox.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 DetectedObjectObservation.boundingBox.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*DetectedObjectObservation.boundingBox.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectedObjectObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DetectedObjectObservation() + 20);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

float DetectedObjectObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for DetectedObjectObservation() + 24));
}

__n128 DetectedObjectObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DetectedObjectObservation() + 28);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t DetectedObjectObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for DetectedObjectObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t DetectedObjectObservation.description.getter()
{
  return 0;
}

uint64_t DetectedObjectObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D10F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D12038(&qword_1E95ED8E8, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3D10FBC()
{
  if (*v0) {
    return 0x676E69646E756F62;
  }
  else {
    return 0x746176726573626FLL;
  }
}

uint64_t sub_1A3D11008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D129AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D11030(uint64_t a1)
{
  unint64_t v2 = sub_1A3D11E08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D1106C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D11E08();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectedObjectObservation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED8E0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D11E08();
  sub_1A4096FEC();
  long long v12 = v3[1];
  long long v18 = *v3;
  long long v19 = v12;
  char v20 = 1;
  sub_1A3C80D20();
  sub_1A4096DBC();
  if (!v2)
  {
    LOBYTE(v18) = 0;
    sub_1A3C80D74();
    sub_1A4096D5C();
    uint64_t v13 = type metadata accessor for DetectedObjectObservation();
    uint64_t v14 = sub_1A3D12038(&qword_1E95ED8E8, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
    sub_1A3D2A9D0((uint64_t)v7, v13, (uint64_t)&off_1EF74BCE0, v14);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t DetectedObjectObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_1A4095C7C();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v40 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED8F0);
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DetectedObjectObservation();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D11E08();
  uint64_t v14 = v43;
  sub_1A4096FDC();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v40;
  long long v34 = v7;
  uint64_t v33 = (int *)v11;
  long long v35 = v13;
  uint64_t v43 = a1;
  uint64_t v16 = v39;
  uint64_t v18 = v41;
  uint64_t v17 = v42;
  char v47 = 1;
  sub_1A3C80E18();
  long long v19 = v10;
  sub_1A4096CFC();
  long long v20 = v45;
  uint64_t v21 = v35;
  *(_OWORD *)long long v35 = v44;
  *((_OWORD *)v21 + 1) = v20;
  LOBYTE(v44) = 0;
  sub_1A3C80D74();
  sub_1A4096C7C();
  uint64_t v31 = v19;
  uint64_t v32 = v8;
  LOBYTE(v44) = 0;
  sub_1A3D12038((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  long long v22 = v15;
  sub_1A4096CFC();
  long long v23 = v33;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v21[v33[5]], v22, v17);
  LOBYTE(v44) = 1;
  sub_1A4096CDC();
  *(_DWORD *)&v21[v23[6]] = v24;
  char v47 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  uint64_t v25 = v37;
  uint64_t v26 = (uint64_t)v43;
  long long v27 = v34;
  uint64_t v28 = (uint64_t)v35;
  *(_WORD *)&v35[v23[8]] = v44;
  sub_1A3D2B130((uint64_t)v46);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v38);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v32);
  sub_1A3C7D648((uint64_t)v46, v28 + v23[7]);
  sub_1A3D11E5C(v28, v36);
  __swift_destroy_boxed_opaque_existential_1(v26);
  return sub_1A3D11EC0(v28);
}

uint64_t sub_1A3D118D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DetectedObjectObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3D118F0(void *a1)
{
  return DetectedObjectObservation.encode(to:)(a1);
}

uint64_t sub_1A3D11908@<X0>(void *a1@<X0>, __int16 *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int16 v8 = *a2;
  long long v26 = *a3;
  uint64_t v9 = *((void *)a3 + 2);
  uint64_t v10 = *((void *)a3 + 3);
  uint64_t v11 = (int *)type metadata accessor for DetectedObjectObservation();
  objc_msgSend(a1, sel_boundingBox);
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  char v20 = objc_msgSend(a1, sel_providesBoundsNormalizedToROI);
  long long v28 = v26;
  uint64_t v29 = v9;
  uint64_t v30 = v10;
  sub_1A3D12038(&qword_1E95ED458, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
  sub_1A3D445C8(v20, (CGFloat *)&v28, v13, v15, v17, v19);
  long long v27 = v31;
  uint64_t v21 = v32;
  uint64_t v22 = v33;
  id v23 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  LODWORD(v13) = v24;

  *(_OWORD *)a5 = v27;
  *(void *)(a5 + 16) = v21;
  *(void *)(a5 + 24) = v22;
  *(_DWORD *)(a5 + v11[6]) = LODWORD(v13);
  uint64_t result = sub_1A3C7D648(a4, a5 + v11[7]);
  *(_WORD *)(a5 + v11[8]) = v8;
  return result;
}

__n128 DetectedObjectObservation.init(_:)@<Q0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  static NormalizedRect.fullImage.getter(&v34);
  __n128 v23 = v34;
  uint64_t v4 = v35;
  uint64_t v5 = v36;
  objc_msgSend(a1, sel_timeRange);
  __n128 v25 = v31;
  __n128 v26 = v30;
  unint64_t v6 = v32;
  unint64_t v7 = v33;
  __int16 v8 = (int *)type metadata accessor for DetectedObjectObservation();
  objc_msgSend(a1, sel_boundingBox);
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  char v17 = objc_msgSend(a1, sel_providesBoundsNormalizedToROI);
  __n128 v27 = v23;
  uint64_t v28 = v4;
  uint64_t v29 = v5;
  sub_1A3D12038(&qword_1E95ED458, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
  sub_1A3D445C8(v17, v27.n128_f64, v10, v12, v14, v16);
  __n128 v24 = v30;
  __n128 v18 = v31;
  id v19 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  LODWORD(v10) = v20;

  *a2 = v24;
  a2[1] = v18;
  *(unsigned __int32 *)((char *)a2->n128_u32 + v8[6]) = LODWORD(v10);
  uint64_t v21 = (__n128 *)((char *)a2 + v8[7]);
  __n128 result = v25;
  *uint64_t v21 = v26;
  v21[1] = v25;
  v21[2].n128_u64[0] = v6;
  v21[2].n128_u64[1] = v7;
  v21[3].n128_u8[0] = 0;
  *(unsigned __int16 *)((char *)a2->n128_u16 + v8[8]) = -8;
  return result;
}

uint64_t sub_1A3D11C5C@<X0>(void *a1@<X0>, __int16 *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int16 v8 = *a2;
  long long v5 = a3[1];
  v7[0] = *a3;
  v7[1] = v5;
  return sub_1A3D11908(a1, &v8, v7, a4, a5);
}

uint64_t _s6Vision25DetectedObjectObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  CGSize v4 = *(CGSize *)(a1 + 16);
  v28.origin = *(CGPoint *)a1;
  v28.size = v4;
  CGSize v5 = *(CGSize *)(a2 + 16);
  v25.origin = *(CGPoint *)a2;
  v25.size = v5;
  if (!static NormalizedRect.== infix(_:_:)(&v28, &v25)) {
    return 0;
  }
  unint64_t v6 = (int *)type metadata accessor for DetectedObjectObservation();
  if ((sub_1A4095C4C() & 1) == 0 || *(float *)(a1 + v6[6]) != *(float *)(a2 + v6[6])) {
    return 0;
  }
  uint64_t v7 = v6[7];
  uint64_t v8 = a1 + v7;
  char v9 = *(unsigned char *)(a1 + v7 + 48);
  uint64_t v10 = a2 + v7;
  if ((v9 & 1) == 0)
  {
    if (*(unsigned char *)(v10 + 48)) {
      return 0;
    }
    CGFloat v11 = *(double *)v8;
    CGFloat v12 = *(double *)(v8 + 8);
    CGSize v13 = *(CGSize *)(v8 + 16);
    uint64_t v15 = *(void *)(v8 + 32);
    uint64_t v14 = *(void *)(v8 + 40);
    CGFloat v16 = *(double *)v10;
    CGFloat v17 = *(double *)(v10 + 8);
    CGSize v18 = *(CGSize *)(v10 + 16);
    uint64_t v20 = *(void *)(v10 + 32);
    uint64_t v19 = *(void *)(v10 + 40);
    v25.origin.x = v11;
    v25.origin.y = v12;
    v25.size = v13;
    uint64_t v26 = v15;
    uint64_t v27 = v14;
    v28.origin.x = v16;
    v28.origin.y = v17;
    v28.size = v18;
    uint64_t v29 = v20;
    uint64_t v30 = v19;
    if ((sub_1A409669C() & 1) == 0) {
      return 0;
    }
LABEL_9:
    uint64_t v21 = v6[8];
    unsigned int v22 = *(unsigned __int16 *)(a1 + v21);
    unsigned int v23 = *(unsigned __int16 *)(a2 + v21);
    if (v22 <= 0xFFF7)
    {
      if (v23 > 0xFFF7) {
        return 0;
      }
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
    }
    else if (v23 <= 0xFFF7)
    {
      return 0;
    }
    return 1;
  }
  if (*(unsigned char *)(v10 + 48)) {
    goto LABEL_9;
  }
  return 0;
}

unint64_t sub_1A3D11E08()
{
  unint64_t result = qword_1E9603040[0];
  if (!qword_1E9603040[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9603040);
  }
  return result;
}

uint64_t sub_1A3D11E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetectedObjectObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D11EC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetectedObjectObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3D11F1C(void *a1)
{
  a1[1] = sub_1A3D12038(&qword_1E95ED8F8, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
  a1[2] = sub_1A3D12038(&qword_1E95ED900, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
  a1[3] = sub_1A3D12038(&qword_1E95ED908, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
  uint64_t result = sub_1A3D12038(&qword_1E95ED8D8, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3D11FF0()
{
  return sub_1A3D12038(&qword_1E95ED138, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
}

uint64_t sub_1A3D12038(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D12080(uint64_t a1)
{
  uint64_t result = sub_1A3D12038(&qword_1E95ED8E8, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for DetectedObjectObservation(_OWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1A4095C7C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(_DWORD *)((char *)v4 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    CGSize v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    long long v15 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)CGSize v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    *((_OWORD *)v13 + 2) = *(_OWORD *)(v14 + 32);
    v13[48] = *(unsigned char *)(v14 + 48);
    *(_WORD *)((char *)v4 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  }
  return v4;
}

_OWORD *initializeWithCopy for DetectedObjectObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  CGSize v13 = (char *)a2 + v11;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  v12[48] = v13[48];
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithCopy for DetectedObjectObservation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[48];
  long long v15 = *((_OWORD *)v12 + 1);
  long long v14 = *((_OWORD *)v12 + 2);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v15;
  *((_OWORD *)v11 + 2) = v14;
  v11[48] = v13;
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for DetectedObjectObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  v12[48] = v13[48];
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  return a1;
}

_OWORD *assignWithTake for DetectedObjectObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  v12[48] = v13[48];
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectedObjectObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D1252C);
}

uint64_t sub_1A3D1252C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    int v12 = (*(unsigned __int8 *)(a1 + *(int *)(a3 + 32)) >> 3) | (32 * *(unsigned __int8 *)(a1 + *(int *)(a3 + 32) + 1));
    unsigned int v13 = v12 ^ 0x1FFE;
    unsigned int v14 = v12 ^ 0x1FFF;
    if (v13 >> 1 >= 0xFED) {
      return 0;
    }
    else {
      return v14;
    }
  }
}

uint64_t storeEnumTagSinglePayload for DetectedObjectObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D12618);
}

uint64_t sub_1A3D12618(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095C7C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(_WORD *)(a1 + *(int *)(a4 + 32)) = __PAIR16__((8 * ~a2) >> 24, 8 * ~(_BYTE)a2);
  }
  return result;
}

uint64_t sub_1A3D126E8()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DetectedObjectObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D1286CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectedObjectObservation.CodingKeys()
{
  return &type metadata for DetectedObjectObservation.CodingKeys;
}

unint64_t sub_1A3D128A8()
{
  unint64_t result = qword_1E96034E0[0];
  if (!qword_1E96034E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96034E0);
  }
  return result;
}

unint64_t sub_1A3D12900()
{
  unint64_t result = qword_1E96035F0;
  if (!qword_1E96035F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96035F0);
  }
  return result;
}

unint64_t sub_1A3D12958()
{
  unint64_t result = qword_1E96035F8[0];
  if (!qword_1E96035F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96035F8);
  }
  return result;
}

uint64_t sub_1A3D129AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static GenerateFacePrintRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static GenerateFacePrintRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t GenerateFacePrintRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

unint64_t sub_1A3D12B08()
{
  return 0xD000000000000011;
}

uint64_t sub_1A3D12B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1A3D147B4(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1A3D12B54(uint64_t a1)
{
  unint64_t v2 = sub_1A3D12E14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D12B90(uint64_t a1)
{
  unint64_t v2 = sub_1A3D12E14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D12BCC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D12E68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D12C08(uint64_t a1)
{
  unint64_t v2 = sub_1A3D12E68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GenerateFacePrintRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED910);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED918);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D12E14();
  sub_1A4096FEC();
  sub_1A3D12E68();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D12E14()
{
  unint64_t result = qword_1E9603698;
  if (!qword_1E9603698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9603698);
  }
  return result;
}

unint64_t sub_1A3D12E68()
{
  unint64_t result = qword_1E96036A0[0];
  if (!qword_1E96036A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96036A0);
  }
  return result;
}

uint64_t GenerateFacePrintRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t GenerateFacePrintRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED920);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED928);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D12E14();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D12E68();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      unsigned int v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *unsigned int v13 = &type metadata for GenerateFacePrintRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D131E8(void *a1)
{
  return GenerateFacePrintRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D13200(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED910);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED918);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D12E14();
  sub_1A4096FEC();
  sub_1A3D12E68();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t GenerateFacePrintRequest.init(_:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A4095F8C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v47 = (id *)((char *)&v34 - v9);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v34 - v11;
  int v13 = *a1;
  uint64_t v51 = 0;
  static NormalizedRect.fullImage.getter(v52);
  char v53 = 0;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v54 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF5C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t result = MEMORY[0x1A6253C00]();
  uint64_t v50 = v14;
  uint64_t v42 = result;
  uint64_t v48 = *(void *)(result + 16);
  if (v48)
  {
    uint64_t v35 = inited;
    int v36 = v13;
    uint64_t v37 = a2;
    unint64_t v17 = 0;
    uint64_t v44 = v5 + 88;
    uint64_t v45 = v5 + 16;
    int v43 = *MEMORY[0x1E4F1E808];
    uint64_t v39 = (void (**)(id *, uint64_t))(v5 + 8);
    uint64_t v38 = (void (**)(id *, uint64_t))(v5 + 96);
    long long v46 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v41 = v7;
    uint64_t v40 = v12;
    uint64_t v18 = v42;
    while (v17 < *(void *)(v18 + 16))
    {
      uint64_t v20 = *(void *)(v5 + 72);
      unint64_t v49 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v21 = v5;
      unsigned int v22 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v22(v12, v18 + v49 + v20 * v17, v4);
      unsigned int v23 = v47;
      v22((char *)v47, (unint64_t)v12, v4);
      uint64_t v5 = v21;
      int v24 = (*(uint64_t (**)(id *, uint64_t))(v21 + 88))(v23, v4);
      if (v24 == v43)
      {
        (*v38)(v23, v4);

        CGRect v25 = *v46;
        (*v46)(v7, v12, v4);
        uint64_t v26 = v50;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A3CC0EA8(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = v50;
        }
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1A3CC0EA8(v27 > 1, v28 + 1, 1);
          uint64_t v26 = v50;
        }
        *(void *)(v26 + 16) = v28 + 1;
        uint64_t v7 = v41;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(v26 + v49 + v28 * v20, v41, v4);
        uint64_t v50 = v26;
        int v12 = v40;
        uint64_t v18 = v42;
      }
      else
      {
        uint64_t v19 = *v39;
        (*v39)(v23, v4);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v12, v4);
      }
      if (v48 == ++v17)
      {
        uint64_t v14 = v50;
        a2 = v37;
        LOBYTE(v13) = v36;
        uint64_t inited = v35;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *(void *)(inited + 40) = v14;
    uint64_t result = sub_1A3CBFB84(inited);
    uint64_t v29 = result;
    if (v13)
    {
      unint64_t v30 = sub_1A3CF720C();
      uint64_t result = sub_1A3E2C988((uint64_t)&type metadata for GenerateFacePrintRequest, v30, v31);
    }
    char v32 = v53;
    unint64_t v33 = v54;
    *(void *)a2 = v51;
    *(__n128 *)(a2 + 8) = v52[0];
    *(__n128 *)(a2 + 24) = v52[1];
    *(unsigned char *)(a2 + 40) = v32;
    *(void *)(a2 + 48) = v33;
    *(void *)(a2 + 56) = v29;
  }
  return result;
}

uint64_t GenerateFacePrintRequest.inputFaceObservations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerateFacePrintRequest.inputFaceObservations.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*GenerateFacePrintRequest.inputFaceObservations.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 GenerateFacePrintRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 GenerateFacePrintRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*GenerateFacePrintRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D1389C()
{
  unint64_t v0 = sub_1A3CF720C();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for GenerateFacePrintRequest, v0);
  qword_1E9603688 = result;
  return result;
}

uint64_t static GenerateFacePrintRequest.supportedRevisions.getter()
{
  if (qword_1E9603680 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void GenerateFacePrintRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 272;
}

void GenerateFacePrintRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *GenerateFacePrintRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*GenerateFacePrintRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t GenerateFacePrintRequest.computeStageDeviceAssignments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerateFacePrintRequest.computeStageDeviceAssignments.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*GenerateFacePrintRequest.computeStageDeviceAssignments.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t GenerateFacePrintRequest.supportedComputeStageDevices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerateFacePrintRequest.supportedComputeStageDevices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*GenerateFacePrintRequest.supportedComputeStageDevices.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

int *sub_1A3D13A20()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED980);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(1, 0, 0);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(1, 0, 0);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(1, 0, 0);
  uint64_t v6 = sub_1A3D09D5C(v5);
  uint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for GenerateFacePrintRequest.Revision, v0 + 32);
  qword_1E9643C60 = v0;
  return result;
}

uint64_t GenerateFacePrintRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v5 = v1[6];
  uint64_t v4 = v1[7];
  if (*v1)
  {
    sub_1A4096F4C();
    uint64_t v6 = *(void *)(v3 + 16);
    sub_1A4096F3C();
    if (v6)
    {
      uint64_t v7 = *(void *)(type metadata accessor for FaceObservation() - 8);
      uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v9 = *(void *)(v7 + 72);
      sub_1A3D1506C(&qword_1E95ED678, (void (*)(uint64_t))type metadata accessor for FaceObservation);
      swift_bridgeObjectRetain();
      do
      {
        sub_1A40960DC();
        v8 += v9;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1A4096F4C();
  }
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A3D1448C(a1, v4);
  return swift_bridgeObjectRelease();
}

void sub_1A3D13CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095F8C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v50 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - v8;
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v10 = 0;
  uint64_t v11 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a1 + 64);
  uint64_t v41 = a2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  char v47 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v48 = v5 + 16;
  uint64_t v39 = v5;
  uint64_t v40 = a1;
  uint64_t v38 = a1 + 64;
  if (!v14) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v43 = (v14 - 1) & v14;
  int64_t v44 = v10;
  for (unint64_t i = __clz(__rbit64(v14)) | (v10 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v18 << 6))
  {
    char v20 = *(unsigned char *)(*(void *)(a1 + 48) + i);
    uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1A3C8C7D8(v20);
    if ((v23 & 1) == 0
      || (uint64_t v24 = *(void *)(*(void *)(a2 + 56) + 8 * v22), v25 = *(void *)(v24 + 16), v25 != *(void *)(v21 + 16)))
    {
LABEL_37:
      swift_bridgeObjectRelease();
      return;
    }
    if (v25 && v24 != v21)
    {
      uint64_t v46 = *(void *)(v24 + 16);
      unint64_t v26 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v45 = *(void *)(v5 + 72);
      unint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      swift_bridgeObjectRetain();
      unint64_t v28 = 0;
      uint64_t v49 = v24;
      while (1)
      {
        v27(v9, v24 + v26, v4);
        if (v28 >= *(void *)(v21 + 16)) {
          break;
        }
        uint64_t v29 = v21;
        unint64_t v30 = v21 + v26;
        uint64_t v31 = v9;
        char v32 = v50;
        unint64_t v33 = v27;
        v27(v50, v30, v4);
        sub_1A3D1506C((unint64_t *)&unk_1E95EF6C0, MEMORY[0x1E4F1E820]);
        char v34 = sub_1A409612C();
        uint64_t v35 = *v47;
        int v36 = v32;
        uint64_t v9 = v31;
        (*v47)(v36, v4);
        v35(v31, v4);
        if ((v34 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        ++v28;
        v26 += v45;
        uint64_t v24 = v49;
        uint64_t v21 = v29;
        unint64_t v27 = v33;
        if (v46 == v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = v40;
          a2 = v41;
          uint64_t v11 = v38;
          uint64_t v5 = v39;
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    swift_bridgeObjectRelease();
LABEL_33:
    unint64_t v14 = v43;
    int64_t v10 = v44;
    if (v43) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_40;
    }
    if (v16 >= v42) {
      return;
    }
    unint64_t v17 = *(void *)(v11 + 8 * v16);
    int64_t v18 = v10 + 1;
    if (!v17)
    {
      int64_t v18 = v10 + 2;
      if (v10 + 2 >= v42) {
        return;
      }
      unint64_t v17 = *(void *)(v11 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v10 + 3;
        if (v10 + 3 >= v42) {
          return;
        }
        unint64_t v17 = *(void *)(v11 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v10 + 4;
          if (v10 + 4 >= v42) {
            return;
          }
          unint64_t v17 = *(void *)(v11 + 8 * v18);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v43 = (v17 - 1) & v17;
    int64_t v44 = v18;
  }
  uint64_t v19 = v10 + 5;
  if (v10 + 5 >= v42) {
    return;
  }
  unint64_t v17 = *(void *)(v11 + 8 * v19);
  if (v17)
  {
    int64_t v18 = v10 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v42) {
      return;
    }
    unint64_t v17 = *(void *)(v11 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_41:
  __break(1u);
}

uint64_t GenerateFacePrintRequest.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 40);
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  char v7 = v1;
  long long v8 = *((_OWORD *)v0 + 3);
  sub_1A4096F2C();
  GenerateFacePrintRequest.hash(into:)(v3);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D14120()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D14128@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3CF720C();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D1417C(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3CF720C();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D141D0(_WORD *a1@<X8>)
{
  *a1 = 272;
}

uint64_t sub_1A3D141DC(uint64_t a1)
{
  unint64_t v2 = sub_1A3CF720C();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D14218()
{
  char v1 = *((unsigned char *)v0 + 40);
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  char v7 = v1;
  long long v8 = *((_OWORD *)v0 + 3);
  sub_1A4096F2C();
  GenerateFacePrintRequest.hash(into:)(v3);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D14288()
{
  char v1 = *((unsigned char *)v0 + 40);
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  char v7 = v1;
  long long v8 = *((_OWORD *)v0 + 3);
  sub_1A4096F2C();
  GenerateFacePrintRequest.hash(into:)(v3);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D142F4@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)v1)
  {
    uint64_t result = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    long long v11 = *(_OWORD *)(v1 + 8);
    unsigned __int8 v12 = 5;
    DetectFaceRectanglesRequest.init(_:)(&v12, v13);
    char v6 = v14;
    int v7 = v15;
    char v8 = v16;
    char v9 = v17;
    uint64_t v10 = v18;
    *(void *)(a1 + 24) = &type metadata for DetectFaceRectanglesRequest;
    *(void *)(a1 + 32) = sub_1A3CFDA54();
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = v11;
    *(void *)(result + 32) = v5;
    *(void *)(result + 40) = v4;
    *(unsigned char *)(result + 48) = v6;
    *(_DWORD *)(result + 52) = v7;
    *(unsigned char *)(result + 56) = v8;
    *(unsigned char *)(result + 57) = v9;
    *(void *)(result + 64) = v10;
  }
  *(void *)a1 = result;
  return result;
}

uint64_t sub_1A3D143D0()
{
  if (qword_1E9603690 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D1442C()
{
  return 10;
}

uint64_t sub_1A3D1443C(uint64_t a1, uint64_t a2)
{
  sub_1A3CC9F48();

  return sub_1A3E2C684(a1, a2);
}

uint64_t sub_1A3D1448C(long long *a1, uint64_t a2)
{
  unint64_t v33 = a1;
  uint64_t v3 = sub_1A4095F8C();
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v29 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v30 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v31 = v4;
  long long v11 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v32 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  int64_t v14 = 0;
  while (1)
  {
    uint64_t v37 = v13;
    if (v10)
    {
      uint64_t v36 = (v10 - 1) & v10;
      unint64_t v16 = __clz(__rbit64(v10)) | (v14 << 6);
      goto LABEL_20;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v30) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v30) {
        goto LABEL_24;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v14);
      if (!v18) {
        break;
      }
    }
LABEL_19:
    uint64_t v36 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_20:
    uint64_t v20 = *(void *)(*(void *)(v32 + 56) + 8 * v16);
    char v43 = *(unsigned char *)(*(void *)(v32 + 48) + v16);
    uint64_t v21 = *((void *)v33 + 8);
    long long v22 = v33[1];
    long long v38 = *v33;
    long long v39 = v22;
    long long v23 = v33[3];
    long long v40 = v33[2];
    long long v41 = v23;
    uint64_t v42 = v21;
    sub_1A3C8D4B4();
    swift_bridgeObjectRetain();
    sub_1A40960DC();
    sub_1A4096F3C();
    uint64_t v24 = *(void *)(v20 + 16);
    if (v24)
    {
      uint64_t v34 = v20;
      int64_t v35 = v14;
      uint64_t v25 = v20 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
      uint64_t v26 = *(void *)(v31 + 72);
      unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
      do
      {
        v27(v6, v25, v3);
        sub_1A3D1506C(&qword_1E95EC3B0, MEMORY[0x1E4F1E820]);
        sub_1A40960DC();
        (*v11)(v6, v3);
        v25 += v26;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      uint64_t v15 = v37;
      int64_t v14 = v35;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = v37;
    }
    unint64_t v10 = v36;
    uint64_t result = sub_1A4096F7C();
    uint64_t v13 = result ^ v15;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v30)
  {
LABEL_24:
    swift_release();
    return sub_1A4096F3C();
  }
  unint64_t v18 = *(void *)(v29 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v30) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A3D147B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001A40B50B0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void _s6Vision24GenerateFacePrintRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  CGPoint v2 = *(CGPoint *)(a1 + 8);
  CGSize v3 = *(CGSize *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)a2;
  CGPoint v8 = *(CGPoint *)(a2 + 8);
  CGSize v9 = *(CGSize *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  if (*(void *)a1)
  {
    if (!v7) {
      return;
    }
    CGSize v17 = *(CGSize *)(a1 + 24);
    CGPoint v18 = *(CGPoint *)(a1 + 8);
    CGSize v15 = *(CGSize *)(a2 + 24);
    CGPoint v16 = *(CGPoint *)(a2 + 8);
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    char v14 = sub_1A3CCFB38(v13, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    CGSize v9 = v15;
    CGPoint v8 = v16;
    CGSize v3 = v17;
    CGPoint v2 = v18;
    if ((v14 & 1) == 0) {
      return;
    }
  }
  else if (v7)
  {
    return;
  }
  v20.origin = v2;
  v20.size = v3;
  v19.origin = v8;
  v19.size = v9;
  if (static NormalizedRect.== infix(_:_:)(&v20, &v19))
  {
    LOBYTE(v20.origin.x) = v4;
    LOBYTE(v19.origin.x) = v10;
    if (static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v20, (unsigned __int8 *)&v19)
      && (sub_1A3C8FF4C(v6, v12) & 1) != 0)
    {
      sub_1A3D13CBC(v5, v11);
    }
  }
}

uint64_t sub_1A3D14974()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

unint64_t sub_1A3D149B0()
{
  unint64_t result = qword_1E95ED930;
  if (!qword_1E95ED930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95ED930);
  }
  return result;
}

unint64_t sub_1A3D14A04(uint64_t a1)
{
  unint64_t result = sub_1A3CC9F48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D14A2C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCEEA4();
  unint64_t result = sub_1A3D14A5C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D14A5C()
{
  unint64_t result = qword_1E95ED968;
  if (!qword_1E95ED968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95ED968);
  }
  return result;
}

unint64_t sub_1A3D14AB4()
{
  unint64_t result = qword_1E95ED970;
  if (!qword_1E95ED970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95ED970);
  }
  return result;
}

unint64_t sub_1A3D14B0C()
{
  unint64_t result = qword_1E95ED978;
  if (!qword_1E95ED978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95ED978);
  }
  return result;
}

uint64_t destroy for GenerateFacePrintRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenerateFacePrintRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenerateFacePrintRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GenerateFacePrintRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerateFacePrintRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerateFacePrintRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateFacePrintRequest()
{
  return &type metadata for GenerateFacePrintRequest;
}

ValueMetadata *type metadata accessor for GenerateFacePrintRequest.Revision()
{
  return &type metadata for GenerateFacePrintRequest.Revision;
}

unsigned char *_s6Vision24GenerateFacePrintRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D14E6CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateFacePrintRequest.Revision.CodingKeys()
{
  return &type metadata for GenerateFacePrintRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerateFacePrintRequest.Revision.ExclaveANFR_v4md2CodingKeys()
{
  return &type metadata for GenerateFacePrintRequest.Revision.ExclaveANFR_v4md2CodingKeys;
}

unint64_t sub_1A3D14EB8()
{
  unint64_t result = qword_1E9603E30[0];
  if (!qword_1E9603E30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9603E30);
  }
  return result;
}

unint64_t sub_1A3D14F10()
{
  unint64_t result = qword_1E9603F40;
  if (!qword_1E9603F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9603F40);
  }
  return result;
}

unint64_t sub_1A3D14F68()
{
  unint64_t result = qword_1E9603F48[0];
  if (!qword_1E9603F48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9603F48);
  }
  return result;
}

unint64_t sub_1A3D14FC0()
{
  unint64_t result = qword_1E9603FD0;
  if (!qword_1E9603FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9603FD0);
  }
  return result;
}

unint64_t sub_1A3D15018()
{
  unint64_t result = qword_1E9603FD8[0];
  if (!qword_1E9603FD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9603FD8);
  }
  return result;
}

uint64_t sub_1A3D1506C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static DetectDeviceGazeRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static DetectDeviceGazeRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t DetectDeviceGazeRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

unint64_t sub_1A3D150F0()
{
  return 0xD000000000000017;
}

uint64_t sub_1A3D1510C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1A3D19000(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1A3D1513C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D153FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D15178(uint64_t a1)
{
  unint64_t v2 = sub_1A3D153FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D151B4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D15450();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D151F0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D15450();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectDeviceGazeRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED988);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED990);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  CGSize v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D153FC();
  sub_1A4096FEC();
  sub_1A3D15450();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D153FC()
{
  unint64_t result = qword_1E9604078;
  if (!qword_1E9604078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9604078);
  }
  return result;
}

unint64_t sub_1A3D15450()
{
  unint64_t result = qword_1E9604080[0];
  if (!qword_1E9604080[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9604080);
  }
  return result;
}

uint64_t DetectDeviceGazeRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectDeviceGazeRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED998);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9A0);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D153FC();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D15450();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for DetectDeviceGazeRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D157D0(void *a1)
{
  return DetectDeviceGazeRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D157E8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED988);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED990);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D153FC();
  sub_1A4096FEC();
  sub_1A3D15450();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t DetectDeviceGazeRequest.__allocating_init(_:)(unsigned __int8 *a1)
{
  uint64_t v2 = swift_allocObject();
  DetectDeviceGazeRequest.init(_:)(a1);
  return v2;
}

uint64_t DetectDeviceGazeRequest.init(_:)(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1A4095F8C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (id *)&v43[-v10];
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = &v43[-v12];
  int v13 = *a1;
  sub_1A4095C6C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF5C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  uint64_t v47 = inited;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t result = MEMORY[0x1A6253C00]();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v60 = MEMORY[0x1E4FBC860];
  uint64_t v52 = result;
  uint64_t v58 = *(void *)(result + 16);
  if (v58)
  {
    int v44 = v13;
    uint64_t v45 = v4;
    uint64_t v46 = v2;
    unint64_t v17 = 0;
    uint64_t v55 = v6 + 16;
    uint64_t v54 = v6 + 88;
    int v53 = *MEMORY[0x1E4F1E808];
    uint64_t v49 = (void (**)(id *, uint64_t))(v6 + 8);
    uint64_t v48 = (void (**)(id *, uint64_t))(v6 + 96);
    uint64_t v56 = (void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32);
    uint64_t v50 = v8;
    CGPoint v18 = v51;
    uint64_t v19 = v52;
    while (v17 < *(void *)(v19 + 16))
    {
      uint64_t v21 = *(void *)(v6 + 72);
      v59.n128_u64[0] = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v22 = v6;
      long long v23 = *(void (**)(id *, unint64_t, uint64_t))(v6 + 16);
      v23((id *)v18, v19 + v59.n128_u64[0] + v21 * v17, v5);
      uint64_t v24 = v57;
      v23(v57, (unint64_t)v18, v5);
      uint64_t v6 = v22;
      int v25 = (*(uint64_t (**)(id *, uint64_t))(v22 + 88))(v24, v5);
      if (v25 == v53)
      {
        (*v48)(v24, v5);

        uint64_t v26 = (uint64_t (*)(unint64_t, unsigned char *, uint64_t))*v56;
        (*v56)((unint64_t)v8, (id *)v18, v5);
        uint64_t v27 = v60;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A3CC0EA8(0, *(void *)(v27 + 16) + 1, 1);
          uint64_t v27 = v60;
        }
        unint64_t v29 = *(void *)(v27 + 16);
        unint64_t v28 = *(void *)(v27 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1A3CC0EA8(v28 > 1, v29 + 1, 1);
          uint64_t v27 = v60;
        }
        *(void *)(v27 + 16) = v29 + 1;
        uint64_t v8 = v50;
        uint64_t result = v26(v27 + v59.n128_u64[0] + v29 * v21, v50, v5);
        uint64_t v60 = v27;
        CGPoint v18 = v51;
        uint64_t v19 = v52;
      }
      else
      {
        CGRect v20 = *v49;
        (*v49)(v24, v5);
        uint64_t result = ((uint64_t (*)(id *, uint64_t))v20)((id *)v18, v5);
      }
      if (v58 == ++v17)
      {
        uint64_t v16 = v60;
        uint64_t v2 = v46;
        uint64_t v4 = v45;
        LOBYTE(v13) = v44;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    uint64_t v30 = v47;
    swift_bridgeObjectRelease();
    uint64_t v31 = OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_supportedComputeStageDevices;
    *(void *)(v30 + 40) = v16;
    *(uint64_t *)((char *)v2 + v31) = sub_1A3CBFB84(v30);
    uint64_t v32 = OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration;
    static NormalizedRect.fullImage.getter(&v61);
    unint64_t v33 = sub_1A3D96700();
    swift_beginAccess();
    uint64_t v34 = *v33;
    unint64_t v35 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
    __n128 v59 = v61;
    uint64_t v36 = v62;
    uint64_t v37 = v63;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9A8);
    uint64_t v38 = swift_allocObject();
    *(_DWORD *)(v38 + 112) = 0;
    *(void *)(v38 + 16) = 0;
    *(__n128 *)(v38 + 24) = v59;
    *(void *)(v38 + 40) = v36;
    *(void *)(v38 + 48) = v37;
    *(void *)(v38 + 56) = 0;
    *(void *)(v38 + 64) = v34;
    *(void *)(v38 + 80) = 0;
    *(void *)(v38 + 88) = 0;
    *(void *)(v38 + 72) = 0;
    *(unsigned char *)(v38 + 96) = 0;
    *(void *)(v38 + 104) = v35;
    *(uint64_t *)((char *)v2 + v32) = v38;
    if (v13)
    {
      uint64_t v39 = sub_1A3D190A4((unint64_t *)&unk_1E95ED598, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);
      sub_1A3E2C988(v4, v39, v40);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9B0);
    swift_beginAccess();
    uint64_t v41 = sub_1A3D0A738(*v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9B8);
    uint64_t v42 = swift_allocObject();
    *(_DWORD *)(v42 + 24) = 0;
    *(void *)(v42 + 16) = v41;
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_state) = v42;
    return (uint64_t)v2;
  }
  return result;
}

uint64_t DetectDeviceGazeRequest.inputFaceObservations.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CBE268(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D16004(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE268(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

uint64_t sub_1A3D16078(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(*a2 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v3 = (void *)(v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + 112);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v4);
  sub_1A3CC0F14(v3);
  os_unfair_lock_unlock(v4);
  return swift_bridgeObjectRelease();
}

uint64_t DetectDeviceGazeRequest.inputFaceObservations.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC0F14(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*DetectDeviceGazeRequest.inputFaceObservations.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  a1[1] = v3;
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE268(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3D161F8;
}

uint64_t sub_1A3D161F8(uint64_t a1, char a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 8);
  uint64_t v3 = v2 + 28;
  uint64_t v4 = v2 + 4;
  if (a2)
  {
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v3);
    sub_1A3CC0F14(v4);
    os_unfair_lock_unlock(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v2 + 28);
    sub_1A3CC0F14(v4);
    os_unfair_lock_unlock(v3);
  }
  return swift_bridgeObjectRelease();
}

void DetectDeviceGazeRequest.regionOfInterest.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE58C(v4, a1);

  os_unfair_lock_unlock(v5);
}

double sub_1A3D16320@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE58C(v4, (uint64_t)v8);
  os_unfair_lock_unlock(v5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

void sub_1A3D16394(uint64_t a1, void *a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 28;
  os_unfair_lock_lock(v2 + 28);
  sub_1A3CC1D9C(v3);
  os_unfair_lock_unlock(v4);
}

void DetectDeviceGazeRequest.regionOfInterest.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC0F2C(v2);
  os_unfair_lock_unlock(v3);
}

void (*DetectDeviceGazeRequest.regionOfInterest.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  long long v3[4] = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 28;
  os_unfair_lock_lock(v4 + 28);
  sub_1A3CBE58C(v5, (uint64_t)v3);
  v3[5] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3D1650C;
}

void sub_1A3D1650C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(*(void *)a1 + 32) + 112));
  uint64_t v2 = (os_unfair_lock_s *)v1[4];
  sub_1A3CC1D9C((uint64_t)&v2[4]);
  os_unfair_lock_unlock(v2 + 28);
  free(v1);
}

uint64_t sub_1A3D16598()
{
  uint64_t v0 = type metadata accessor for DetectDeviceGazeRequest();
  uint64_t v1 = sub_1A3D190A4((unint64_t *)&unk_1E95ED598, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);
  uint64_t result = sub_1A3E2CFDC(v0, v1);
  qword_1E9604068 = result;
  return result;
}

uint64_t static DetectDeviceGazeRequest.supportedRevisions.getter()
{
  if (qword_1E9604060 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void DetectDeviceGazeRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 256;
}

uint64_t DetectDeviceGazeRequest.minimumLatencyFrameCount.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CBE950(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D166D8(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE950(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D1674C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 28;
  os_unfair_lock_lock(v2 + 28);
  sub_1A3CC1D84(v3);
  os_unfair_lock_unlock(v4);
}

void DetectDeviceGazeRequest.minimumLatencyFrameCount.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC0F3C(v2);
  os_unfair_lock_unlock(v3);
}

void (*DetectDeviceGazeRequest.minimumLatencyFrameCount.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  a1[1] = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE950(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3D168B0;
}

void sub_1A3D168B0(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(a1 + 8);
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC1D84((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v1 + 28);
}

uint64_t DetectDeviceGazeRequest.temporalSmoothingFrameCount.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D16B48(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D16998(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D16B48(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D16A0C(uint64_t *a1)
{
  if (*a1 >= 1)
  {
    MEMORY[0x1F4188790](a1);
    uint64_t v2 = (uint64_t)&v1[4];
    uint64_t v3 = v1 + 28;
    os_unfair_lock_lock(v1 + 28);
    sub_1A3D19150(v2);
    os_unfair_lock_unlock(v3);
  }
}

void DetectDeviceGazeRequest.temporalSmoothingFrameCount.setter(uint64_t a1)
{
  if (a1 >= 1)
  {
    MEMORY[0x1F4188790](a1);
    uint64_t v2 = (uint64_t)&v1[4];
    uint64_t v3 = v1 + 28;
    os_unfair_lock_lock(v1 + 28);
    sub_1A3D18770(v2);
    os_unfair_lock_unlock(v3);
  }
}

uint64_t sub_1A3D16B48@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 48);
  return result;
}

uint64_t sub_1A3D16B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 48) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9B0);
  uint64_t v5 = sub_1A3D0A738(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9B8);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = v5;
  uint64_t v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_state);
  swift_beginAccess();
  *uint64_t v7 = v6;
  return swift_release();
}

void (*DetectDeviceGazeRequest.temporalSmoothingFrameCount.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  a1[1] = v1;
  a1[2] = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D16B48(v4, &v7);
  a1[3] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3D16C90;
}

void sub_1A3D16C90(uint64_t *a1, char a2)
{
  if (a2)
  {
    if (*a1 < 1) {
      return;
    }
  }
  else if (*a1 < 1)
  {
    return;
  }
  uint64_t v2 = (os_unfair_lock_s *)a1[2];
  uint64_t v3 = v2 + 28;
  uint64_t v4 = (uint64_t)&v2[4];
  MEMORY[0x1F4188790](a1);
  os_unfair_lock_lock(v3);
  sub_1A3D19150(v4);
  os_unfair_lock_unlock(v3);
}

uint64_t DetectDeviceGazeRequest.frameAnalysisSpacing.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D16F54(v2, (uint64_t)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

double sub_1A3D16DE4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D16F54(v4, (uint64_t)v8);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v8[2];
  double result = *(double *)&v8[1];
  *(void *)a2 = v8[0];
  *(double *)(a2 + 8) = result;
  *(void *)(a2 + 16) = v6;
  return result;
}

void sub_1A3D16E68(uint64_t a1, void *a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 28;
  os_unfair_lock_lock(v2 + 28);
  sub_1A3D1879C(v3);
  os_unfair_lock_unlock(v4);
}

void DetectDeviceGazeRequest.frameAnalysisSpacing.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D1879C(v2);
  os_unfair_lock_unlock(v3);
}

double sub_1A3D16F54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 72);
  *(void *)a2 = *(void *)(a1 + 56);
  double result = *(double *)(a1 + 64);
  *(double *)(a2 + 8) = result;
  *(void *)(a2 + 16) = v2;
  return result;
}

void (*DetectDeviceGazeRequest.frameAnalysisSpacing.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  v3[3] = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 28;
  os_unfair_lock_lock(v4 + 28);
  sub_1A3D16F54(v5, (uint64_t)v10);
  long long v3[4] = 0;
  os_unfair_lock_unlock(v6);
  uint64_t v7 = v10[2];
  uint64_t v8 = v10[1];
  *uint64_t v3 = v10[0];
  v3[1] = v8;
  v3[2] = v7;
  return sub_1A3D1702C;
}

void sub_1A3D1702C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(*(void *)a1 + 24) + 112));
  uint64_t v2 = (os_unfair_lock_s *)v1[3];
  sub_1A3D1879C((uint64_t)&v2[4]);
  os_unfair_lock_unlock(v2 + 28);
  free(v1);
}

void DetectDeviceGazeRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D1727C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D17134(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D1727C(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D171A8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 28;
  os_unfair_lock_lock(v2 + 28);
  sub_1A3D19138(v3);
  os_unfair_lock_unlock(v4);
}

void DetectDeviceGazeRequest.modelFileBackingStore.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D187B4(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1A3D1727C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 80);
  return result;
}

void (*DetectDeviceGazeRequest.modelFileBackingStore.modify(os_unfair_lock_s **a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = a1 + 2;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  *a1 = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  char v6 = v4 + 28;
  os_unfair_lock_lock(v4 + 28);
  sub_1A3D1727C(v5, v3);
  a1[1] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3D17320;
}

void sub_1A3D17320(os_unfair_lock_s **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 28;
  os_unfair_lock_lock(v2);
  sub_1A3D19138((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v2);
}

uint64_t DetectDeviceGazeRequest.computeStageDeviceAssignments.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D1756C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D1740C(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D1756C(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

uint64_t sub_1A3D17480(uint64_t a1, void *a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 28;
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v4);
  sub_1A3D187C0(v3);
  os_unfair_lock_unlock(v4);
  return swift_bridgeObjectRelease();
}

uint64_t DetectDeviceGazeRequest.computeStageDeviceAssignments.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D187C0(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D1756C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t (*DetectDeviceGazeRequest.computeStageDeviceAssignments.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  a1[1] = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D1756C(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3D17620;
}

uint64_t sub_1A3D17620(uint64_t a1, char a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 8);
  uint64_t v3 = v2 + 28;
  uint64_t v4 = (uint64_t)&v2[4];
  if (a2)
  {
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v3);
    sub_1A3D187C0(v4);
    os_unfair_lock_unlock(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v2 + 28);
    sub_1A3D187C0(v4);
    os_unfair_lock_unlock(v3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t DetectDeviceGazeRequest.supportedComputeStageDevices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DetectDeviceGazeRequest.supportedComputeStageDevices.setter(uint64_t a1)
{
  return sub_1A3CBFCF4(a1, &OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_supportedComputeStageDevices, MEMORY[0x1E4FBC898]);
}

uint64_t (*DetectDeviceGazeRequest.supportedComputeStageDevices.modify())()
{
  return j__swift_endAccess;
}

int *sub_1A3D1779C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDA28);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(1, 0, 0);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(1, 0, 0);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(1, 0, 0);
  uint64_t v6 = sub_1A3D09D5C(v5);
  double result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for DetectDeviceGazeRequest.Revision, v0 + 32);
  qword_1E9643C68 = v0;
  return result;
}

uint64_t DetectDeviceGazeRequest.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DetectDeviceGazeRequest.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t DetectDeviceGazeRequest.hashValue.getter()
{
  return sub_1A4096F7C();
}

void sub_1A3D17A64(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE58C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D17ADC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC1D9C(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t (*sub_1A3D17B48(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DetectDeviceGazeRequest.regionOfInterest.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D17BA4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CBE950(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D17C10()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D16F54(v2, (uint64_t)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D17C80()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CBE268(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D17CEC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC0F14(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3D17D60(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DetectDeviceGazeRequest.inputFaceObservations.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D17DBC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D17E0C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A3D190A4((unint64_t *)&unk_1E95ED598, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D17E90(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A3D190A4((unint64_t *)&unk_1E95ED598, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D17F14(_WORD *a1@<X8>)
{
  *a1 = 256;
}

void sub_1A3D17F20(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D1727C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D17F98()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D19138(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t (*sub_1A3D18004(os_unfair_lock_s ***a1))()
{
  uint64_t v2 = (os_unfair_lock_s **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (os_unfair_lock_s *)DetectDeviceGazeRequest.modelFileBackingStore.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D18060(uint64_t a1)
{
  uint64_t v2 = sub_1A3D190A4((unint64_t *)&unk_1E95ED598, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D180CC(uint64_t a1, uint64_t a2)
{
  sub_1A3D190A4(&qword_1E95ED118, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);

  return StatefulRequest.hash(into:)(a1, a2);
}

uint64_t sub_1A3D18148(uint64_t a1, uint64_t a2)
{
  sub_1A3D190A4(&qword_1E95ED118, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);

  return static StatefulRequest.== infix(_:_:)(a1, a2, v2);
}

uint64_t sub_1A3D181C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisionResult(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A3C8B4E0(a1, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 34)
  {
    uint64_t v7 = *((void *)v6 + 1);
    swift_release();
  }
  else
  {
    sub_1A3C8B544((uint64_t)v6);
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    strcpy((char *)v11, "VisionResult ");
    HIWORD(v11[1]) = -4864;
    sub_1A3D190A4(&qword_1E95F0470, (void (*)(uint64_t))type metadata accessor for VisionResult);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    v11[3] = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9C8);
    sub_1A409619C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    uint64_t v7 = v11[0];
    uint64_t v8 = v11[1];
    sub_1A3C85624();
    swift_allocError();
    static VisionError.internalError(message:)(v7, v8, v9);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v7;
}

uint64_t sub_1A3D183B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_uuid;
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1A3D18428()
{
  return swift_retain();
}

uint64_t sub_1A3D18474@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A3D181C8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A3D184A0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  *a2 = v2;
  a2[1] = v3;
  type metadata accessor for VisionResult(0);
  swift_storeEnumTagMultiPayload();
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D18504()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D1756C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D18570()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectDeviceGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D187C0(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3D185E4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DetectDeviceGazeRequest.computeStageDeviceAssignments.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D18640()
{
  if (qword_1E9604070 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D1869C()
{
  return 8;
}

uint64_t sub_1A3D186AC(uint64_t a1)
{
  return sub_1A3C8DE60(a1) & 1;
}

uint64_t type metadata accessor for DetectDeviceGazeRequest()
{
  uint64_t result = qword_1E9604710;
  if (!qword_1E9604710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A3D18770(uint64_t a1)
{
  return sub_1A3D16B54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

double sub_1A3D1879C(uint64_t a1)
{
  return sub_1A3D19088(a1);
}

uint64_t sub_1A3D187B4(uint64_t result)
{
  *(unsigned char *)(result + 80) = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t sub_1A3D187C0(uint64_t a1)
{
  return sub_1A3D190EC(a1);
}

unint64_t sub_1A3D187DC()
{
  unint64_t result = qword_1E95ED9D0[0];
  if (!qword_1E95ED9D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95ED9D0);
  }
  return result;
}

uint64_t sub_1A3D18830(uint64_t a1)
{
  uint64_t result = sub_1A3D190A4(&qword_1E95ECDE0, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3D18888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3D189A8(a1, a2, a3, &qword_1E95ECF78, (uint64_t)&protocol conformance descriptor for DetectDeviceGazeRequest, &qword_1E95ED9C0);
}

uint64_t sub_1A3D188C4()
{
  return sub_1A3D190A4(&qword_1E95EDA08, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);
}

unint64_t sub_1A3D18910()
{
  unint64_t result = qword_1E95EDA10;
  if (!qword_1E95EDA10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95ED9B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDA10);
  }
  return result;
}

uint64_t sub_1A3D1896C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3D189A8(a1, a2, a3, (unint64_t *)&unk_1E95ED598, (uint64_t)&unk_1A40EE900, &qword_1E95ED118);
}

uint64_t sub_1A3D189A8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  *(void *)(a1 + 8) = sub_1A3D190A4(a4, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);
  uint64_t result = sub_1A3D190A4(a6, (void (*)(uint64_t))type metadata accessor for DetectDeviceGazeRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D18A18()
{
  unint64_t result = qword_1E95EDA18;
  if (!qword_1E95EDA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDA18);
  }
  return result;
}

uint64_t sub_1A3D18A6C()
{
  return type metadata accessor for DetectDeviceGazeRequest();
}

uint64_t method lookup function for DetectDeviceGazeRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DetectDeviceGazeRequest);
}

uint64_t dispatch thunk of DetectDeviceGazeRequest.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for DetectDeviceGazeRequest.Revision()
{
  return &type metadata for DetectDeviceGazeRequest.Revision;
}

uint64_t destroy for DetectDeviceGazeRequest.Configuration()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectDeviceGazeRequest.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectDeviceGazeRequest.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for DetectDeviceGazeRequest.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectTextRectanglesRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectTextRectanglesRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 88) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectDeviceGazeRequest.Configuration()
{
  return &type metadata for DetectDeviceGazeRequest.Configuration;
}

unsigned char *_s6Vision23DetectDeviceGazeRequestC8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D18E00);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectDeviceGazeRequest.Revision.CodingKeys()
{
  return &type metadata for DetectDeviceGazeRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectDeviceGazeRequest.Revision.ExclaveDeviceGaze_v1md1CodingKeys()
{
  return &type metadata for DetectDeviceGazeRequest.Revision.ExclaveDeviceGaze_v1md1CodingKeys;
}

unint64_t sub_1A3D18E4C()
{
  unint64_t result = qword_1E9604920[0];
  if (!qword_1E9604920[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9604920);
  }
  return result;
}

unint64_t sub_1A3D18EA4()
{
  unint64_t result = qword_1E9604A30;
  if (!qword_1E9604A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9604A30);
  }
  return result;
}

unint64_t sub_1A3D18EFC()
{
  unint64_t result = qword_1E9604A38[0];
  if (!qword_1E9604A38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9604A38);
  }
  return result;
}

unint64_t sub_1A3D18F54()
{
  unint64_t result = qword_1E9604AC0;
  if (!qword_1E9604AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9604AC0);
  }
  return result;
}

unint64_t sub_1A3D18FAC()
{
  unint64_t result = qword_1E9604AC8[0];
  if (!qword_1E9604AC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9604AC8);
  }
  return result;
}

uint64_t sub_1A3D19000(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B5100)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

double sub_1A3D19088(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  double result = *(double *)(v1 + 24);
  *(void *)(a1 + 56) = *(void *)(v1 + 16);
  *(double *)(a1 + 64) = result;
  *(void *)(a1 + 72) = v2;
  return result;
}

uint64_t sub_1A3D190A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D190EC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = v3;
  return result;
}

uint64_t sub_1A3D19138(uint64_t a1)
{
  return sub_1A3D187B4(a1);
}

uint64_t sub_1A3D19150(uint64_t a1)
{
  return sub_1A3D18770(a1);
}

uint64_t static CalculateFaceLivelinessScoreRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static CalculateFaceLivelinessScoreRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t CalculateFaceLivelinessScoreRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

unint64_t sub_1A3D191A4()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1A3D191C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1A3D1B390(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1A3D191F0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D194B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D1922C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D194B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D19268(uint64_t a1)
{
  unint64_t v2 = sub_1A3D19504();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D192A4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D19504();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CalculateFaceLivelinessScoreRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDA30);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDA38);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D194B0();
  sub_1A4096FEC();
  sub_1A3D19504();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D194B0()
{
  unint64_t result = qword_1E9604B68;
  if (!qword_1E9604B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9604B68);
  }
  return result;
}

unint64_t sub_1A3D19504()
{
  unint64_t result = qword_1E9604B70[0];
  if (!qword_1E9604B70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9604B70);
  }
  return result;
}

uint64_t CalculateFaceLivelinessScoreRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t CalculateFaceLivelinessScoreRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDA40);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDA48);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D194B0();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D19504();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      int v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *int v13 = &type metadata for CalculateFaceLivelinessScoreRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D19884(void *a1)
{
  return CalculateFaceLivelinessScoreRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D1989C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDA30);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDA38);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D194B0();
  sub_1A4096FEC();
  sub_1A3D19504();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t CalculateFaceLivelinessScoreRequest.__allocating_init(_:)(unsigned __int8 *a1)
{
  uint64_t v2 = swift_allocObject();
  CalculateFaceLivelinessScoreRequest.init(_:)(a1);
  return v2;
}

uint64_t CalculateFaceLivelinessScoreRequest.init(_:)(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v31 = *(void *)v2;
  uint64_t v4 = sub_1A4095F8C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v43 = (id *)((char *)&v30 - v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - v11;
  int v33 = *a1;
  *(void *)(v2 + 16) = 0;
  static NormalizedRect.fullImage.getter((__n128 *)(v2 + 24));
  *(unsigned char *)(v2 + 56) = 0;
  *(void *)(v2 + 60) = 0;
  *(void *)(v2 + 76) = 0;
  *(void *)(v2 + 68) = 0;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 88) = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF5C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  uint64_t v32 = inited;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t result = MEMORY[0x1A6253C00]();
  uint64_t v16 = result;
  uint64_t v46 = v13;
  uint64_t v44 = *(void *)(result + 16);
  if (v44)
  {
    uint64_t v30 = v2;
    unint64_t v17 = 0;
    uint64_t v40 = v5 + 88;
    uint64_t v41 = v5 + 16;
    int v39 = *MEMORY[0x1E4F1E808];
    uint64_t v34 = (void (**)(id *, uint64_t))(v5 + 96);
    unint64_t v35 = (void (**)(id *, uint64_t))(v5 + 8);
    uint64_t v42 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v37 = v12;
    uint64_t v38 = v7;
    uint64_t v36 = result;
    while (v17 < *(void *)(v16 + 16))
    {
      uint64_t v19 = *(void *)(v5 + 72);
      unint64_t v45 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      CGRect v20 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v20(v12, v16 + v45 + v19 * v17, v4);
      uint64_t v21 = v43;
      v20((char *)v43, (unint64_t)v12, v4);
      int v22 = (*(uint64_t (**)(id *, uint64_t))(v5 + 88))(v21, v4);
      if (v22 == v39)
      {
        (*v34)(v21, v4);

        long long v23 = *v42;
        (*v42)(v7, v12, v4);
        uint64_t v24 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A3CC0EA8(0, *(void *)(v24 + 16) + 1, 1);
          uint64_t v24 = v46;
        }
        unint64_t v26 = *(void *)(v24 + 16);
        unint64_t v25 = *(void *)(v24 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1A3CC0EA8(v25 > 1, v26 + 1, 1);
          uint64_t v24 = v46;
        }
        *(void *)(v24 + 16) = v26 + 1;
        uint64_t v7 = v38;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v24 + v45 + v26 * v19, v38, v4);
        uint64_t v46 = v24;
        uint64_t v16 = v36;
        uint64_t v12 = v37;
      }
      else
      {
        CGPoint v18 = *v35;
        (*v35)(v21, v4);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v12, v4);
      }
      if (v44 == ++v17)
      {
        uint64_t v13 = v46;
        uint64_t v2 = v30;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    char v27 = v33;
    uint64_t v28 = v32;
    swift_bridgeObjectRelease();
    *(void *)(v28 + 40) = v13;
    *(void *)(v2 + 96) = sub_1A3CBFB84(v28);
    if (v27)
    {
      uint64_t v29 = sub_1A3D1B418((unint64_t *)&unk_1E95ED520);
      sub_1A3E2C988(v31, v29, (uint64_t)&v47);
    }
    return v2;
  }
  return result;
}

uint64_t CalculateFaceLivelinessScoreRequest.inputFaceObservations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CalculateFaceLivelinessScoreRequest.inputFaceObservations.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*CalculateFaceLivelinessScoreRequest.inputFaceObservations.modify())()
{
  return j__swift_endAccess;
}

__n128 CalculateFaceLivelinessScoreRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  __n128 result = *(__n128 *)(v1 + 24);
  long long v4 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

__n128 CalculateFaceLivelinessScoreRequest.regionOfInterest.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_beginAccess();
  __n128 result = v5;
  *(__n128 *)(v1 + 24) = v5;
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v3;
  return result;
}

uint64_t (*CalculateFaceLivelinessScoreRequest.regionOfInterest.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3D1A078()
{
  uint64_t v0 = type metadata accessor for CalculateFaceLivelinessScoreRequest();
  uint64_t v1 = sub_1A3D1B418((unint64_t *)&unk_1E95ED520);
  uint64_t result = sub_1A3E2CFDC(v0, v1);
  qword_1E9604B58 = result;
  return result;
}

uint64_t static CalculateFaceLivelinessScoreRequest.supportedRevisions.getter()
{
  if (qword_1E9604B50 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void CalculateFaceLivelinessScoreRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 288;
}

uint64_t CalculateFaceLivelinessScoreRequest.modelFileBackingStore.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 56);
  return result;
}

uint64_t CalculateFaceLivelinessScoreRequest.modelFileBackingStore.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 56) = v2;
  return result;
}

uint64_t (*CalculateFaceLivelinessScoreRequest.modelFileBackingStore.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t CalculateFaceLivelinessScoreRequest.frameAnalysisSpacing.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 60);
}

uint64_t CalculateFaceLivelinessScoreRequest.frameAnalysisSpacing.setter(uint64_t a1, unint64_t a2, uint64_t a3)
{
  int v5 = a2;
  unint64_t v7 = HIDWORD(a2);
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 60) = a1;
  *(_DWORD *)(v3 + 68) = v5;
  *(_DWORD *)(v3 + 72) = v7;
  *(void *)(v3 + 76) = a3;
  return result;
}

uint64_t (*CalculateFaceLivelinessScoreRequest.frameAnalysisSpacing.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t CalculateFaceLivelinessScoreRequest.computeStageDeviceAssignments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CalculateFaceLivelinessScoreRequest.computeStageDeviceAssignments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*CalculateFaceLivelinessScoreRequest.computeStageDeviceAssignments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t CalculateFaceLivelinessScoreRequest.supportedComputeStageDevices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CalculateFaceLivelinessScoreRequest.supportedComputeStageDevices.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*CalculateFaceLivelinessScoreRequest.supportedComputeStageDevices.modify())()
{
  return j_j__swift_endAccess;
}

int *sub_1A3D1A4AC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDAA0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(1, 0, 0);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(1, 0, 0);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(1, 0, 0);
  uint64_t v6 = sub_1A3D09D5C(v5);
  uint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for CalculateFaceLivelinessScoreRequest.Revision, v0 + 32);
  qword_1E9643C90 = v0;
  return result;
}

uint64_t CalculateFaceLivelinessScoreRequest.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateFaceLivelinessScoreRequest.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t CalculateFaceLivelinessScoreRequest.hashValue.getter()
{
  return sub_1A4096F7C();
}

__n128 sub_1A3D1A674@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  __n128 result = *(__n128 *)(v3 + 24);
  long long v5 = *(_OWORD *)(v3 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  return result;
}

__n128 sub_1A3D1A6C0(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  uint64_t v4 = *v1;
  swift_beginAccess();
  __n128 result = v6;
  *(__n128 *)(v4 + 24) = v6;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v3;
  return result;
}

uint64_t (*sub_1A3D1A71C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3D1A774()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(v1 + 60);
}

uint64_t sub_1A3D1A7BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D1A800(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  *(void *)(v3 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3D1A84C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3D1A8A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D1A8E8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A3D1B418((unint64_t *)&unk_1E95ED520);

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D1A958(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A3D1B418((unint64_t *)&unk_1E95ED520);

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D1A9C8(_WORD *a1@<X8>)
{
  *a1 = 288;
}

uint64_t sub_1A3D1A9D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v3 + 56);
  return result;
}

uint64_t sub_1A3D1AA1C(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 56) = v2;
  return result;
}

uint64_t (*sub_1A3D1AA60())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3D1AAB8(uint64_t a1)
{
  uint64_t v2 = sub_1A3D1B418((unint64_t *)&unk_1E95ED520);

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D1AB10(uint64_t a1, uint64_t a2)
{
  sub_1A3D1B418(&qword_1E95ED108);

  return StatefulRequest.hash(into:)(a1, a2);
}

uint64_t sub_1A3D1AB78(uint64_t a1, uint64_t a2)
{
  sub_1A3D1B418(&qword_1E95ED108);

  return static StatefulRequest.== infix(_:_:)(a1, a2, v2);
}

uint64_t sub_1A3D1ABE4@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  if (*(void *)(v1 + 16))
  {
    uint64_t result = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  else
  {
    v12[0] = 5;
    DetectFaceRectanglesRequest.init(_:)(v12, v13);
    swift_beginAccess();
    long long v11 = *(_OWORD *)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 40);
    uint64_t v5 = *(void *)(v1 + 48);
    char v6 = v14;
    int v7 = v15;
    char v8 = v16;
    char v9 = v17;
    uint64_t v10 = v18;
    *(void *)(a1 + 24) = &type metadata for DetectFaceRectanglesRequest;
    *(void *)(a1 + 32) = sub_1A3CFDA54();
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = v11;
    *(void *)(result + 32) = v4;
    *(void *)(result + 40) = v5;
    *(unsigned char *)(result + 48) = v6;
    *(_DWORD *)(result + 52) = v7;
    *(unsigned char *)(result + 56) = v8;
    *(unsigned char *)(result + 57) = v9;
    *(void *)(result + 64) = v10;
  }
  *(void *)a1 = result;
  return result;
}

uint64_t sub_1A3D1ACE8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D1AD2C(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  *(void *)(v3 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3D1AD78())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3D1ADD0()
{
  if (qword_1E9604B60 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D1AE2C()
{
  return 12;
}

uint64_t sub_1A3D1AE3C(uint64_t a1, uint64_t a2)
{
  sub_1A3D1B418(&qword_1E95ECDC0);

  return sub_1A3E2C684(a1, a2);
}

uint64_t sub_1A3D1AEA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1A3D1ABE4(a1);
}

uint64_t type metadata accessor for CalculateFaceLivelinessScoreRequest()
{
  return self;
}

uint64_t sub_1A3D1AEEC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

unint64_t sub_1A3D1AF28()
{
  unint64_t result = qword_1E95EDA58;
  if (!qword_1E95EDA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDA58);
  }
  return result;
}

uint64_t sub_1A3D1AF7C(uint64_t a1)
{
  uint64_t result = sub_1A3D1B418(&qword_1E95ECDC0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3D1AFC0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3D1B418(&qword_1E95ECF58);
  uint64_t result = sub_1A3D1B418(&qword_1E95EDA50);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A3D1B028()
{
  return sub_1A3D1B418(&qword_1E95EDA90);
}

unint64_t sub_1A3D1B060()
{
  unint64_t result = qword_1E95EDA98;
  if (!qword_1E95EDA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDA98);
  }
  return result;
}

uint64_t method lookup function for CalculateFaceLivelinessScoreRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateFaceLivelinessScoreRequest);
}

uint64_t dispatch thunk of CalculateFaceLivelinessScoreRequest.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

ValueMetadata *type metadata accessor for CalculateFaceLivelinessScoreRequest.Revision()
{
  return &type metadata for CalculateFaceLivelinessScoreRequest.Revision;
}

unsigned char *_s6Vision35CalculateFaceLivelinessScoreRequestC8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D1B190);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CalculateFaceLivelinessScoreRequest.Revision.CodingKeys()
{
  return &type metadata for CalculateFaceLivelinessScoreRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for CalculateFaceLivelinessScoreRequest.Revision.ExclaveLivelinessScore_v1md1CodingKeys()
{
  return &type metadata for CalculateFaceLivelinessScoreRequest.Revision.ExclaveLivelinessScore_v1md1CodingKeys;
}

unint64_t sub_1A3D1B1DC()
{
  unint64_t result = qword_1E9605380[0];
  if (!qword_1E9605380[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9605380);
  }
  return result;
}

unint64_t sub_1A3D1B234()
{
  unint64_t result = qword_1E9605490;
  if (!qword_1E9605490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9605490);
  }
  return result;
}

unint64_t sub_1A3D1B28C()
{
  unint64_t result = qword_1E9605498[0];
  if (!qword_1E9605498[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9605498);
  }
  return result;
}

unint64_t sub_1A3D1B2E4()
{
  unint64_t result = qword_1E9605520;
  if (!qword_1E9605520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9605520);
  }
  return result;
}

unint64_t sub_1A3D1B33C()
{
  unint64_t result = qword_1E9605528[0];
  if (!qword_1E9605528[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9605528);
  }
  return result;
}

uint64_t sub_1A3D1B390(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B51C0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A3D1B418(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CalculateFaceLivelinessScoreRequest();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static DetectCameraGazeRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static DetectCameraGazeRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t DetectCameraGazeRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

unint64_t sub_1A3D1B494()
{
  return 0xD000000000000017;
}

uint64_t sub_1A3D1B4B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1A3D1EAC4(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1A3D1B4E0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D1B7A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D1B51C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D1B7A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D1B558(uint64_t a1)
{
  unint64_t v2 = sub_1A3D1B7F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D1B594(uint64_t a1)
{
  unint64_t v2 = sub_1A3D1B7F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectCameraGazeRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDAA8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDAB0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D1B7A0();
  sub_1A4096FEC();
  sub_1A3D1B7F4();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D1B7A0()
{
  unint64_t result = qword_1E96055C8;
  if (!qword_1E96055C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96055C8);
  }
  return result;
}

unint64_t sub_1A3D1B7F4()
{
  unint64_t result = qword_1E96055D0[0];
  if (!qword_1E96055D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96055D0);
  }
  return result;
}

uint64_t DetectCameraGazeRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectCameraGazeRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDAB8);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDAC0);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D1B7A0();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D1B7F4();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for DetectCameraGazeRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D1BB74(void *a1)
{
  return DetectCameraGazeRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D1BB8C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDAA8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDAB0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D1B7A0();
  sub_1A4096FEC();
  sub_1A3D1B7F4();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t DetectCameraGazeRequest.__allocating_init(_:)(unsigned __int8 *a1)
{
  uint64_t v2 = swift_allocObject();
  DetectCameraGazeRequest.init(_:)(a1);
  return v2;
}

uint64_t DetectCameraGazeRequest.init(_:)(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1A4095F8C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (id *)&v43[-v10];
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = &v43[-v12];
  int v13 = *a1;
  sub_1A4095C6C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF5C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  uint64_t v47 = inited;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t result = MEMORY[0x1A6253C00]();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v60 = MEMORY[0x1E4FBC860];
  uint64_t v52 = result;
  uint64_t v58 = *(void *)(result + 16);
  if (v58)
  {
    int v44 = v13;
    uint64_t v45 = v4;
    uint64_t v46 = v2;
    unint64_t v17 = 0;
    uint64_t v55 = v6 + 16;
    uint64_t v54 = v6 + 88;
    int v53 = *MEMORY[0x1E4F1E808];
    uint64_t v49 = (void (**)(id *, uint64_t))(v6 + 8);
    uint64_t v48 = (void (**)(id *, uint64_t))(v6 + 96);
    uint64_t v56 = (void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32);
    uint64_t v50 = v8;
    uint64_t v18 = v51;
    uint64_t v19 = v52;
    while (v17 < *(void *)(v19 + 16))
    {
      uint64_t v21 = *(void *)(v6 + 72);
      v59.n128_u64[0] = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v22 = v6;
      long long v23 = *(void (**)(id *, unint64_t, uint64_t))(v6 + 16);
      v23((id *)v18, v19 + v59.n128_u64[0] + v21 * v17, v5);
      uint64_t v24 = v57;
      v23(v57, (unint64_t)v18, v5);
      uint64_t v6 = v22;
      int v25 = (*(uint64_t (**)(id *, uint64_t))(v22 + 88))(v24, v5);
      if (v25 == v53)
      {
        (*v48)(v24, v5);

        unint64_t v26 = (uint64_t (*)(unint64_t, unsigned char *, uint64_t))*v56;
        (*v56)((unint64_t)v8, (id *)v18, v5);
        uint64_t v27 = v60;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A3CC0EA8(0, *(void *)(v27 + 16) + 1, 1);
          uint64_t v27 = v60;
        }
        unint64_t v29 = *(void *)(v27 + 16);
        unint64_t v28 = *(void *)(v27 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1A3CC0EA8(v28 > 1, v29 + 1, 1);
          uint64_t v27 = v60;
        }
        *(void *)(v27 + 16) = v29 + 1;
        uint64_t v8 = v50;
        uint64_t result = v26(v27 + v59.n128_u64[0] + v29 * v21, v50, v5);
        uint64_t v60 = v27;
        uint64_t v18 = v51;
        uint64_t v19 = v52;
      }
      else
      {
        CGRect v20 = *v49;
        (*v49)(v24, v5);
        uint64_t result = ((uint64_t (*)(id *, uint64_t))v20)((id *)v18, v5);
      }
      if (v58 == ++v17)
      {
        uint64_t v16 = v60;
        uint64_t v2 = v46;
        uint64_t v4 = v45;
        LOBYTE(v13) = v44;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    uint64_t v30 = v47;
    swift_bridgeObjectRelease();
    uint64_t v31 = OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_supportedComputeStageDevices;
    *(void *)(v30 + 40) = v16;
    *(uint64_t *)((char *)v2 + v31) = sub_1A3CBFB84(v30);
    uint64_t v32 = OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration;
    static NormalizedRect.fullImage.getter(&v61);
    int v33 = sub_1A3D9FDDC();
    swift_beginAccess();
    uint64_t v34 = *v33;
    unint64_t v35 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
    __n128 v59 = v61;
    uint64_t v36 = v62;
    uint64_t v37 = v63;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDAC8);
    uint64_t v38 = swift_allocObject();
    *(_DWORD *)(v38 + 112) = 0;
    *(void *)(v38 + 16) = 0;
    *(__n128 *)(v38 + 24) = v59;
    *(void *)(v38 + 40) = v36;
    *(void *)(v38 + 48) = v37;
    *(void *)(v38 + 56) = 0;
    *(void *)(v38 + 64) = v34;
    *(void *)(v38 + 80) = 0;
    *(void *)(v38 + 88) = 0;
    *(void *)(v38 + 72) = 0;
    *(unsigned char *)(v38 + 96) = 0;
    *(void *)(v38 + 104) = v35;
    *(uint64_t *)((char *)v2 + v32) = v38;
    if (v13)
    {
      uint64_t v39 = sub_1A3D1EB4C(&qword_1E95EDAD0, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);
      sub_1A3E2C988(v4, v39, v40);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9B0);
    swift_beginAccess();
    uint64_t v41 = sub_1A3D0A738(*v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9B8);
    uint64_t v42 = swift_allocObject();
    *(_DWORD *)(v42 + 24) = 0;
    *(void *)(v42 + 16) = v41;
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_state) = v42;
    return (uint64_t)v2;
  }
  return result;
}

uint64_t DetectCameraGazeRequest.inputFaceObservations.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CBE268(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D1C3A8(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE268(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

uint64_t sub_1A3D1C41C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(*a2 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v3 = (void *)(v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + 112);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v4);
  sub_1A3CC0F14(v3);
  os_unfair_lock_unlock(v4);
  return swift_bridgeObjectRelease();
}

uint64_t DetectCameraGazeRequest.inputFaceObservations.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC0F14(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*DetectCameraGazeRequest.inputFaceObservations.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  a1[1] = v3;
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE268(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3D161F8;
}

void DetectCameraGazeRequest.regionOfInterest.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE58C(v4, a1);

  os_unfair_lock_unlock(v5);
}

double sub_1A3D1C610@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE58C(v4, (uint64_t)v8);
  os_unfair_lock_unlock(v5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

void sub_1A3D1C684(uint64_t a1, void *a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 28;
  os_unfair_lock_lock(v2 + 28);
  sub_1A3CC1D9C(v3);
  os_unfair_lock_unlock(v4);
}

void DetectCameraGazeRequest.regionOfInterest.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC0F2C(v2);
  os_unfair_lock_unlock(v3);
}

void (*DetectCameraGazeRequest.regionOfInterest.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  long long v3[4] = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 28;
  os_unfair_lock_lock(v4 + 28);
  sub_1A3CBE58C(v5, (uint64_t)v3);
  v3[5] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3D1650C;
}

uint64_t sub_1A3D1C800()
{
  uint64_t v0 = type metadata accessor for DetectCameraGazeRequest();
  uint64_t v1 = sub_1A3D1EB4C(&qword_1E95EDAD0, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);
  uint64_t result = sub_1A3E2CFDC(v0, v1);
  qword_1E96055B8 = result;
  return result;
}

uint64_t static DetectCameraGazeRequest.supportedRevisions.getter()
{
  if (qword_1E96055B0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void DetectCameraGazeRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 264;
}

uint64_t DetectCameraGazeRequest.minimumLatencyFrameCount.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CBE950(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D1C940(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE950(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D1C9B4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 28;
  os_unfair_lock_lock(v2 + 28);
  sub_1A3CC1D84(v3);
  os_unfair_lock_unlock(v4);
}

void DetectCameraGazeRequest.minimumLatencyFrameCount.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC0F3C(v2);
  os_unfair_lock_unlock(v3);
}

void (*DetectCameraGazeRequest.minimumLatencyFrameCount.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  a1[1] = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE950(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3D168B0;
}

uint64_t DetectCameraGazeRequest.temporalSmoothingFrameCount.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D16B48(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D1CB80(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D16B48(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D1CBF4(uint64_t *a1)
{
  if (*a1 >= 1)
  {
    MEMORY[0x1F4188790](a1);
    uint64_t v2 = (uint64_t)&v1[4];
    uint64_t v3 = v1 + 28;
    os_unfair_lock_lock(v1 + 28);
    sub_1A3D1EB94(v2);
    os_unfair_lock_unlock(v3);
  }
}

void DetectCameraGazeRequest.temporalSmoothingFrameCount.setter(uint64_t a1)
{
  if (a1 >= 1)
  {
    MEMORY[0x1F4188790](a1);
    uint64_t v2 = (uint64_t)&v1[4];
    uint64_t v3 = v1 + 28;
    os_unfair_lock_lock(v1 + 28);
    sub_1A3D1E570(v2);
    os_unfair_lock_unlock(v3);
  }
}

uint64_t sub_1A3D1CD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 48) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9B0);
  uint64_t v5 = sub_1A3D0A738(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED9B8);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = v5;
  uint64_t v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_state);
  swift_beginAccess();
  *uint64_t v7 = v6;
  return swift_release();
}

void (*DetectCameraGazeRequest.temporalSmoothingFrameCount.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  a1[1] = v1;
  a1[2] = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D16B48(v4, &v7);
  a1[3] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3D1CE6C;
}

void sub_1A3D1CE6C(uint64_t *a1, char a2)
{
  if (a2)
  {
    if (*a1 < 1) {
      return;
    }
  }
  else if (*a1 < 1)
  {
    return;
  }
  uint64_t v2 = (os_unfair_lock_s *)a1[2];
  uint64_t v3 = v2 + 28;
  uint64_t v4 = (uint64_t)&v2[4];
  MEMORY[0x1F4188790](a1);
  os_unfair_lock_lock(v3);
  sub_1A3D1EB94(v4);
  os_unfair_lock_unlock(v3);
}

uint64_t DetectCameraGazeRequest.frameAnalysisSpacing.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D16F54(v2, (uint64_t)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

double sub_1A3D1CFC0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D16F54(v4, (uint64_t)v8);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v8[2];
  double result = *(double *)&v8[1];
  *(void *)a2 = v8[0];
  *(double *)(a2 + 8) = result;
  *(void *)(a2 + 16) = v6;
  return result;
}

void sub_1A3D1D044(uint64_t a1, void *a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 28;
  os_unfair_lock_lock(v2 + 28);
  sub_1A3D1879C(v3);
  os_unfair_lock_unlock(v4);
}

void DetectCameraGazeRequest.frameAnalysisSpacing.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D1879C(v2);
  os_unfair_lock_unlock(v3);
}

void (*DetectCameraGazeRequest.frameAnalysisSpacing.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  v3[3] = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 28;
  os_unfair_lock_lock(v4 + 28);
  sub_1A3D16F54(v5, (uint64_t)v10);
  long long v3[4] = 0;
  os_unfair_lock_unlock(v6);
  uint64_t v7 = v10[2];
  uint64_t v8 = v10[1];
  *uint64_t v3 = v10[0];
  v3[1] = v8;
  v3[2] = v7;
  return sub_1A3D1702C;
}

void DetectCameraGazeRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D1727C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D1D260(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D1727C(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D1D2D4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 28;
  os_unfair_lock_lock(v2 + 28);
  sub_1A3D19138(v3);
  os_unfair_lock_unlock(v4);
}

void DetectCameraGazeRequest.modelFileBackingStore.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D187B4(v2);
  os_unfair_lock_unlock(v3);
}

void (*DetectCameraGazeRequest.modelFileBackingStore.modify(os_unfair_lock_s **a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = a1 + 2;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  *a1 = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  char v6 = v4 + 28;
  os_unfair_lock_lock(v4 + 28);
  sub_1A3D1727C(v5, v3);
  a1[1] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3D17320;
}

uint64_t DetectCameraGazeRequest.supportedComputeStageDevices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DetectCameraGazeRequest.supportedComputeStageDevices.setter(uint64_t a1)
{
  return sub_1A3CBFCF4(a1, &OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_supportedComputeStageDevices, MEMORY[0x1E4FBC898]);
}

uint64_t (*DetectCameraGazeRequest.supportedComputeStageDevices.modify())()
{
  return j__swift_endAccess;
}

uint64_t (*sub_1A3D1D508(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  a1[1] = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D1756C(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3D17620;
}

int *sub_1A3D1D59C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDB38);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(1, 0, 0);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(1, 0, 0);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(1, 0, 0);
  uint64_t v6 = sub_1A3D09D5C(v5);
  double result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for DetectCameraGazeRequest.Revision, v0 + 32);
  qword_1E9643C98 = v0;
  return result;
}

uint64_t DetectCameraGazeRequest.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DetectCameraGazeRequest.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t DetectCameraGazeRequest.hashValue.getter()
{
  return sub_1A4096F7C();
}

void sub_1A3D1D864(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3CBE58C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D1D8DC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC1D9C(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t (*sub_1A3D1D948(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DetectCameraGazeRequest.regionOfInterest.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D1D9A4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CBE950(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D1DA10()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D16F54(v2, (uint64_t)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D1DA80()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CBE268(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D1DAEC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3CC0F14(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3D1DB60(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DetectCameraGazeRequest.inputFaceObservations.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D1DBBC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D1DC0C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A3D1EB4C(&qword_1E95EDAD0, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D1DC90(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A3D1EB4C(&qword_1E95EDAD0, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D1DD14(_WORD *a1@<X8>)
{
  *a1 = 264;
}

void sub_1A3D1DD20(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 28;
  os_unfair_lock_lock(v3 + 28);
  sub_1A3D1727C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D1DD98()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D19138(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t (*sub_1A3D1DE04(os_unfair_lock_s ***a1))()
{
  uint64_t v2 = (os_unfair_lock_s **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (os_unfair_lock_s *)DetectCameraGazeRequest.modelFileBackingStore.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D1DE60(uint64_t a1)
{
  uint64_t v2 = sub_1A3D1EB4C(&qword_1E95EDAD0, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D1DECC(uint64_t a1, uint64_t a2)
{
  sub_1A3D1EB4C(&qword_1E95ED110, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);

  return StatefulRequest.hash(into:)(a1, a2);
}

uint64_t sub_1A3D1DF48(uint64_t a1, uint64_t a2)
{
  sub_1A3D1EB4C(&qword_1E95ED110, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);

  return static StatefulRequest.== infix(_:_:)(a1, a2, v2);
}

uint64_t sub_1A3D1DFC8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisionResult(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A3C8B4E0(a1, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 35)
  {
    uint64_t v7 = *((void *)v6 + 1);
    swift_release();
  }
  else
  {
    sub_1A3C8B544((uint64_t)v6);
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    strcpy((char *)v11, "VisionResult ");
    HIWORD(v11[1]) = -4864;
    sub_1A3D1EB4C(&qword_1E95F0470, (void (*)(uint64_t))type metadata accessor for VisionResult);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    v11[3] = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDAE0);
    sub_1A409619C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    uint64_t v7 = v11[0];
    uint64_t v8 = v11[1];
    sub_1A3C85624();
    swift_allocError();
    static VisionError.internalError(message:)(v7, v8, v9);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v7;
}

uint64_t sub_1A3D1E1B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_uuid;
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1A3D1E228()
{
  return swift_retain();
}

uint64_t sub_1A3D1E274@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A3D1DFC8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A3D1E2A0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  *a2 = v2;
  a2[1] = v3;
  type metadata accessor for VisionResult(0);
  swift_storeEnumTagMultiPayload();
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D1E304()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D1756C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D1E370()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_configuration);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1A3D187C0(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3D1E3E4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1A3D1D508(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D1E440()
{
  if (qword_1E96055C0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D1E49C()
{
  return 9;
}

uint64_t sub_1A3D1E4AC(uint64_t a1)
{
  return sub_1A3C8DE60(a1) & 1;
}

uint64_t type metadata accessor for DetectCameraGazeRequest()
{
  uint64_t result = qword_1E9605C60;
  if (!qword_1E9605C60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A3D1E570(uint64_t a1)
{
  return sub_1A3D1CD30(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1A3D1E5A0()
{
  unint64_t result = qword_1E95EDAE8[0];
  if (!qword_1E95EDAE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95EDAE8);
  }
  return result;
}

uint64_t sub_1A3D1E5F4(uint64_t a1)
{
  uint64_t result = sub_1A3D1EB4C(&qword_1E95ECDD8, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3D1E64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3D1E70C(a1, a2, a3, &qword_1E95ECF70, (uint64_t)&protocol conformance descriptor for DetectCameraGazeRequest, &qword_1E95EDAD8);
}

uint64_t sub_1A3D1E688()
{
  return sub_1A3D1EB4C(&qword_1E95EDB20, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);
}

uint64_t sub_1A3D1E6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3D1E70C(a1, a2, a3, &qword_1E95EDAD0, (uint64_t)&unk_1A40EF220, &qword_1E95ED110);
}

uint64_t sub_1A3D1E70C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  *(void *)(a1 + 8) = sub_1A3D1EB4C(a4, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);
  uint64_t result = sub_1A3D1EB4C(a6, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D1E77C()
{
  unint64_t result = qword_1E95EDB28;
  if (!qword_1E95EDB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDB28);
  }
  return result;
}

uint64_t sub_1A3D1E7D0()
{
  return type metadata accessor for DetectCameraGazeRequest();
}

uint64_t method lookup function for DetectCameraGazeRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DetectCameraGazeRequest);
}

uint64_t dispatch thunk of DetectCameraGazeRequest.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for DetectCameraGazeRequest.Revision()
{
  return &type metadata for DetectCameraGazeRequest.Revision;
}

ValueMetadata *type metadata accessor for DetectCameraGazeRequest.Configuration()
{
  return &type metadata for DetectCameraGazeRequest.Configuration;
}

unsigned char *_s6Vision23DetectCameraGazeRequestC8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D1E8C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectCameraGazeRequest.Revision.CodingKeys()
{
  return &type metadata for DetectCameraGazeRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectCameraGazeRequest.Revision.ExclaveCameraGaze_v1md1CodingKeys()
{
  return &type metadata for DetectCameraGazeRequest.Revision.ExclaveCameraGaze_v1md1CodingKeys;
}

unint64_t sub_1A3D1E910()
{
  unint64_t result = qword_1E9605E70[0];
  if (!qword_1E9605E70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9605E70);
  }
  return result;
}

unint64_t sub_1A3D1E968()
{
  unint64_t result = qword_1E9605F80;
  if (!qword_1E9605F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9605F80);
  }
  return result;
}

unint64_t sub_1A3D1E9C0()
{
  unint64_t result = qword_1E9605F88[0];
  if (!qword_1E9605F88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9605F88);
  }
  return result;
}

unint64_t sub_1A3D1EA18()
{
  unint64_t result = qword_1E9606010;
  if (!qword_1E9606010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9606010);
  }
  return result;
}

unint64_t sub_1A3D1EA70()
{
  unint64_t result = qword_1E9606018[0];
  if (!qword_1E9606018[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9606018);
  }
  return result;
}

uint64_t sub_1A3D1EAC4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B5210)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A3D1EB4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D1EB94(uint64_t a1)
{
  return sub_1A3D1E570(a1);
}

uint64_t static GenerateTorsoPrintRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static GenerateTorsoPrintRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t GenerateTorsoPrintRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

unint64_t sub_1A3D1EBE8()
{
  return 0xD000000000000017;
}

uint64_t sub_1A3D1EC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1A3D2016C(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1A3D1EC34(uint64_t a1)
{
  unint64_t v2 = sub_1A3D1EEF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D1EC70(uint64_t a1)
{
  unint64_t v2 = sub_1A3D1EEF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D1ECAC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D1EF48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D1ECE8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D1EF48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GenerateTorsoPrintRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDB40);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDB48);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D1EEF4();
  sub_1A4096FEC();
  sub_1A3D1EF48();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D1EEF4()
{
  unint64_t result = qword_1E96060B8;
  if (!qword_1E96060B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96060B8);
  }
  return result;
}

unint64_t sub_1A3D1EF48()
{
  unint64_t result = qword_1E96060C0[0];
  if (!qword_1E96060C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96060C0);
  }
  return result;
}

uint64_t GenerateTorsoPrintRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t GenerateTorsoPrintRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDB50);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDB58);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D1EEF4();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D1EF48();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      int v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *int v13 = &type metadata for GenerateTorsoPrintRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D1F2C8(void *a1)
{
  return GenerateTorsoPrintRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D1F2E0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDB40);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDB48);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D1EEF4();
  sub_1A4096FEC();
  sub_1A3D1EF48();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t GenerateTorsoPrintRequest.init(_:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A4095F8C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v47 = (id *)((char *)&v34 - v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - v11;
  int v13 = *a1;
  uint64_t v51 = 0;
  static NormalizedRect.fullImage.getter(v52);
  char v53 = 0;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v54 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF5C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t result = MEMORY[0x1A6253C00]();
  uint64_t v50 = v14;
  uint64_t v42 = result;
  uint64_t v48 = *(void *)(result + 16);
  if (v48)
  {
    uint64_t v35 = inited;
    int v36 = v13;
    uint64_t v37 = a2;
    unint64_t v17 = 0;
    uint64_t v44 = v5 + 88;
    uint64_t v45 = v5 + 16;
    int v43 = *MEMORY[0x1E4F1E808];
    uint64_t v39 = (void (**)(id *, uint64_t))(v5 + 8);
    uint64_t v38 = (void (**)(id *, uint64_t))(v5 + 96);
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v41 = v7;
    uint64_t v40 = v12;
    uint64_t v18 = v42;
    while (v17 < *(void *)(v18 + 16))
    {
      uint64_t v20 = *(void *)(v5 + 72);
      unint64_t v49 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v21 = v5;
      uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v22(v12, v18 + v49 + v20 * v17, v4);
      long long v23 = v47;
      v22((char *)v47, (unint64_t)v12, v4);
      uint64_t v5 = v21;
      int v24 = (*(uint64_t (**)(id *, uint64_t))(v21 + 88))(v23, v4);
      if (v24 == v43)
      {
        (*v38)(v23, v4);

        int v25 = *v46;
        (*v46)(v7, v12, v4);
        uint64_t v26 = v50;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A3CC0EA8(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = v50;
        }
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1A3CC0EA8(v27 > 1, v28 + 1, 1);
          uint64_t v26 = v50;
        }
        *(void *)(v26 + 16) = v28 + 1;
        uint64_t v7 = v41;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(v26 + v49 + v28 * v20, v41, v4);
        uint64_t v50 = v26;
        uint64_t v12 = v40;
        uint64_t v18 = v42;
      }
      else
      {
        uint64_t v19 = *v39;
        (*v39)(v23, v4);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v12, v4);
      }
      if (v48 == ++v17)
      {
        uint64_t v14 = v50;
        a2 = v37;
        LOBYTE(v13) = v36;
        uint64_t inited = v35;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *(void *)(inited + 40) = v14;
    uint64_t result = sub_1A3CBFB84(inited);
    uint64_t v29 = result;
    if (v13)
    {
      unint64_t v30 = sub_1A3CF1A54();
      uint64_t result = sub_1A3E2C988((uint64_t)&type metadata for GenerateTorsoPrintRequest, v30, v31);
    }
    char v32 = v53;
    unint64_t v33 = v54;
    *(void *)a2 = v51;
    *(__n128 *)(a2 + 8) = v52[0];
    *(__n128 *)(a2 + 24) = v52[1];
    *(unsigned char *)(a2 + 40) = v32;
    *(void *)(a2 + 48) = v33;
    *(void *)(a2 + 56) = v29;
  }
  return result;
}

uint64_t GenerateTorsoPrintRequest.inputHumanObservations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerateTorsoPrintRequest.inputHumanObservations.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*GenerateTorsoPrintRequest.inputHumanObservations.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 GenerateTorsoPrintRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 GenerateTorsoPrintRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*GenerateTorsoPrintRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D1F97C()
{
  unint64_t v0 = sub_1A3CF1A54();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for GenerateTorsoPrintRequest, v0);
  qword_1E96060A8 = result;
  return result;
}

uint64_t static GenerateTorsoPrintRequest.supportedRevisions.getter()
{
  if (qword_1E96060A0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void GenerateTorsoPrintRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 280;
}

void GenerateTorsoPrintRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *GenerateTorsoPrintRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*GenerateTorsoPrintRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t GenerateTorsoPrintRequest.computeStageDeviceAssignments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerateTorsoPrintRequest.computeStageDeviceAssignments.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*GenerateTorsoPrintRequest.computeStageDeviceAssignments.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t GenerateTorsoPrintRequest.supportedComputeStageDevices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerateTorsoPrintRequest.supportedComputeStageDevices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*GenerateTorsoPrintRequest.supportedComputeStageDevices.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

int *sub_1A3D1FB00()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDBB0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(1, 0, 0);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(1, 0, 0);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(1, 0, 0);
  uint64_t v6 = sub_1A3D09D5C(v5);
  uint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for GenerateTorsoPrintRequest.Revision, v0 + 32);
  qword_1E9643CC0 = v0;
  return result;
}

uint64_t GenerateTorsoPrintRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v5 = v1[6];
  uint64_t v4 = v1[7];
  if (*v1)
  {
    sub_1A4096F4C();
    uint64_t v6 = *(void *)(v3 + 16);
    sub_1A4096F3C();
    if (v6)
    {
      uint64_t v7 = *(void *)(type metadata accessor for HumanObservation() - 8);
      uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v9 = *(void *)(v7 + 72);
      sub_1A3D207D8(&qword_1E95EBE90, (void (*)(uint64_t))type metadata accessor for HumanObservation);
      swift_bridgeObjectRetain();
      do
      {
        sub_1A40960DC();
        v8 += v9;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1A4096F4C();
  }
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A3D1448C(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t GenerateTorsoPrintRequest.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 40);
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  char v7 = v1;
  long long v8 = *((_OWORD *)v0 + 3);
  sub_1A4096F2C();
  GenerateTorsoPrintRequest.hash(into:)(v3);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D1FE08@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3CF1A54();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D1FE5C(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3CF1A54();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D1FEB0(_WORD *a1@<X8>)
{
  *a1 = 280;
}

uint64_t sub_1A3D1FEBC(uint64_t a1)
{
  unint64_t v2 = sub_1A3CF1A54();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D1FEF8()
{
  char v1 = *((unsigned char *)v0 + 40);
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  char v7 = v1;
  long long v8 = *((_OWORD *)v0 + 3);
  sub_1A4096F2C();
  GenerateTorsoPrintRequest.hash(into:)(v3);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D1FF68()
{
  char v1 = *((unsigned char *)v0 + 40);
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  char v7 = v1;
  long long v8 = *((_OWORD *)v0 + 3);
  sub_1A4096F2C();
  GenerateTorsoPrintRequest.hash(into:)(v3);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D1FFD4@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)v1)
  {
    uint64_t result = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    long long v11 = *(_OWORD *)(v1 + 8);
    unsigned __int8 v12 = 5;
    DetectFaceRectanglesRequest.init(_:)(&v12, v13);
    char v6 = v14;
    int v7 = v15;
    char v8 = v16;
    char v9 = v17;
    uint64_t v10 = v18;
    *(void *)(a1 + 24) = &type metadata for DetectFaceRectanglesRequest;
    *(void *)(a1 + 32) = sub_1A3CFDA54();
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = v11;
    *(void *)(result + 32) = v5;
    *(void *)(result + 40) = v4;
    *(unsigned char *)(result + 48) = v6;
    *(_DWORD *)(result + 52) = v7;
    *(unsigned char *)(result + 56) = v8;
    *(unsigned char *)(result + 57) = v9;
    *(void *)(result + 64) = v10;
  }
  *(void *)a1 = result;
  return result;
}

uint64_t sub_1A3D200B0()
{
  if (qword_1E96060B0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D2010C()
{
  return 11;
}

uint64_t sub_1A3D2011C(uint64_t a1, uint64_t a2)
{
  sub_1A3CC9EF0();

  return sub_1A3E2C684(a1, a2);
}

uint64_t sub_1A3D2016C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B5230)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void _s6Vision25GenerateTorsoPrintRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  CGPoint v2 = *(CGPoint *)(a1 + 8);
  CGSize v3 = *(CGSize *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)a2;
  CGPoint v8 = *(CGPoint *)(a2 + 8);
  CGSize v9 = *(CGSize *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  if (*(void *)a1)
  {
    if (!v7) {
      return;
    }
    CGSize v17 = *(CGSize *)(a1 + 24);
    CGPoint v18 = *(CGPoint *)(a1 + 8);
    CGSize v15 = *(CGSize *)(a2 + 24);
    CGPoint v16 = *(CGPoint *)(a2 + 8);
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    char v14 = sub_1A3CD0E20(v13, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    CGSize v9 = v15;
    CGPoint v8 = v16;
    CGSize v3 = v17;
    CGPoint v2 = v18;
    if ((v14 & 1) == 0) {
      return;
    }
  }
  else if (v7)
  {
    return;
  }
  v20.origin = v2;
  v20.size = v3;
  v19.origin = v8;
  v19.size = v9;
  if (static NormalizedRect.== infix(_:_:)(&v20, &v19))
  {
    LOBYTE(v20.origin.x) = v4;
    LOBYTE(v19.origin.x) = v10;
    if (static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v20, (unsigned __int8 *)&v19)
      && (sub_1A3C8FF4C(v6, v12) & 1) != 0)
    {
      sub_1A3D13CBC(v5, v11);
    }
  }
}

uint64_t sub_1A3D2032C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

unint64_t sub_1A3D20368()
{
  unint64_t result = qword_1E95EDB60;
  if (!qword_1E95EDB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDB60);
  }
  return result;
}

unint64_t sub_1A3D203BC(uint64_t a1)
{
  unint64_t result = sub_1A3CC9EF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D203E4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCEE50();
  unint64_t result = sub_1A3D20414();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D20414()
{
  unint64_t result = qword_1E95EDB98;
  if (!qword_1E95EDB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDB98);
  }
  return result;
}

unint64_t sub_1A3D2046C()
{
  unint64_t result = qword_1E95EDBA0;
  if (!qword_1E95EDBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDBA0);
  }
  return result;
}

unint64_t sub_1A3D204C4()
{
  unint64_t result = qword_1E95EDBA8;
  if (!qword_1E95EDBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDBA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateTorsoPrintRequest()
{
  return &type metadata for GenerateTorsoPrintRequest;
}

ValueMetadata *type metadata accessor for GenerateTorsoPrintRequest.Revision()
{
  return &type metadata for GenerateTorsoPrintRequest.Revision;
}

unsigned char *_s6Vision25GenerateTorsoPrintRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D205D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateTorsoPrintRequest.Revision.CodingKeys()
{
  return &type metadata for GenerateTorsoPrintRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerateTorsoPrintRequest.Revision.ExclaveTorsoPrint_v5md2CodingKeys()
{
  return &type metadata for GenerateTorsoPrintRequest.Revision.ExclaveTorsoPrint_v5md2CodingKeys;
}

unint64_t sub_1A3D20624()
{
  unint64_t result = qword_1E9606850[0];
  if (!qword_1E9606850[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9606850);
  }
  return result;
}

unint64_t sub_1A3D2067C()
{
  unint64_t result = qword_1E9606960;
  if (!qword_1E9606960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9606960);
  }
  return result;
}

unint64_t sub_1A3D206D4()
{
  unint64_t result = qword_1E9606968[0];
  if (!qword_1E9606968[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9606968);
  }
  return result;
}

unint64_t sub_1A3D2072C()
{
  unint64_t result = qword_1E96069F0;
  if (!qword_1E96069F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96069F0);
  }
  return result;
}

unint64_t sub_1A3D20784()
{
  unint64_t result = qword_1E96069F8[0];
  if (!qword_1E96069F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96069F8);
  }
  return result;
}

uint64_t sub_1A3D207D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static DistanceMeasure.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DistanceMeasure.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t DistanceMeasure.hashValue.getter()
{
  return sub_1A4096F7C();
}

double sub_1A3D208B0(uint64_t a1, char *a2, char *a3, uint64_t a4)
{
  char v8 = *a2;
  sub_1A3D2091C(a1, a3);
  if (!v4)
  {
    if (v8) {
      sub_1A3D21358(a1, (uint64_t)a3, a4);
    }
    else {
      return sub_1A3D211D4(a1, (uint64_t)a3, a4);
    }
  }
  return result;
}

uint64_t sub_1A3D2091C(uint64_t a1, char *a2)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  void (*v21)(uint64_t *__return_ptr, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, char *);
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *);
  uint64_t v48;
  uint64_t result;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  unsigned __int8 v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *);
  char *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t (*v75)(char *, char *);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, char *);
  uint64_t (*v81)(char *, uint64_t);
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int16 v91;
  __int16 v92;
  char v93;
  uint64_t v94;

  v89 = *((void *)a2 - 1);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  v83 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  v86 = (char *)&v79 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  v84 = (char *)&v79 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v79 - v12;
  MEMORY[0x1F4188790](v11);
  v87 = (char *)&v79 - v14;
  v85 = v15;
  uint64_t v16 = *(void *)(v15 + 8);
  CGSize v17 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 8);
  v90 = v2;
  v17((uint64_t *)((char *)&v94 + 5), v18, v16);
  CGRect v19 = *(unsigned __int16 *)((char *)&v94 + 5);
  v88 = a1;
  v17((uint64_t *)((char *)&v94 + 3), (uint64_t)a2, v16);
  if (v19 <= 0xFFF7)
  {
    v92 = v19;
    if (*(unsigned __int16 *)((char *)&v94 + 3) > 0xFFF7u) {
      goto LABEL_10;
    }
    v91 = *(_WORD *)((unsigned char *)&v94 + 3) & 0x1FF;
    sub_1A3C832B8();
    if ((sub_1A409612C() & 1) == 0) {
      goto LABEL_10;
    }
  }
  else if (*(unsigned __int16 *)((char *)&v94 + 3) <= 0xFFF7u)
  {
LABEL_10:
    sub_1A3C85624();
    swift_allocError();
    int v43 = 0xD00000000000002FLL;
    uint64_t v44 = 0x80000001A40B5250;
    uint64_t v46 = v45;
LABEL_11:
    static VisionError.invalidOperation(message:)(v43, v44, v46);
    return swift_willThrow();
  }
  CGRect v20 = v85;
  uint64_t v21 = *(void (**)(uint64_t *__return_ptr, char *, uint64_t))(v85 + 32);
  v82 = v13;
  uint64_t v22 = v90;
  v21((uint64_t *)((char *)&v94 + 2), a2, v85);
  BYTE1(v94) = BYTE2(v94);
  long long v23 = v88;
  v21(&v94, a2, v20);
  v93 = v94;
  sub_1A3D21788();
  int v24 = sub_1A409612C();
  int v25 = v89;
  uint64_t v26 = *(void (**)(char *, uint64_t, char *))(v89 + 16);
  unint64_t v27 = v87;
  unint64_t v28 = v22;
  uint64_t v29 = v82;
  v26(v87, v28, a2);
  v26(v29, v23, a2);
  if (v24)
  {
    unint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v20 + 24);
    v81 = (uint64_t (*)(char *, uint64_t))v30(a2, v20);
    uint64_t v31 = v30(a2, v20);
    char v32 = v89 + 8;
    unint64_t v33 = *(void (**)(char *, char *))(v89 + 8);
    v33(v29, a2);
    uint64_t v34 = v87;
    v87 = (char *)v33;
    v33(v34, a2);
    uint64_t v35 = v84;
    v26(v84, v90, a2);
    int v36 = v86;
    v26(v86, v88, a2);
    uint64_t v37 = a2;
    if (v81 == (uint64_t (*)(char *, uint64_t))v31)
    {
      v81 = *(uint64_t (**)(char *, uint64_t))(v20 + 16);
      uint64_t v38 = v81(a2, v20);
      uint64_t v40 = v38;
      uint64_t v41 = BYTE6(v39);
      v82 = a2;
      v80 = v26;
      switch(v39 >> 62)
      {
        case 1uLL:
          uint64_t v50 = HIDWORD(v38);
          sub_1A3C7D218(v38, v39);
          if (__OFSUB__(v50, v40))
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            JUMPOUT(0x1A3D21194);
          }
          uint64_t v42 = (int)v50 - v40;
          break;
        case 2uLL:
          uint64_t v52 = *(void *)(v38 + 16);
          uint64_t v51 = *(void *)(v38 + 24);
          sub_1A3C7D218(v38, v39);
          char v53 = __OFSUB__(v51, v52);
          uint64_t v42 = v51 - v52;
          if (v53) {
            goto LABEL_48;
          }
          uint64_t v35 = v84;
          break;
        case 3uLL:
          sub_1A3C7D218(v38, v39);
          uint64_t v42 = 0;
          break;
        default:
          sub_1A3C7D218(v38, v39);
          uint64_t v42 = v41;
          break;
      }
      unint64_t v54 = v81(v82, v85);
      uint64_t v56 = v54;
      uint64_t v57 = BYTE6(v55);
      switch(v55 >> 62)
      {
        case 1uLL:
          __n128 v59 = HIDWORD(v54);
          sub_1A3C7D218(v54, v55);
          if (__OFSUB__(v59, v56)) {
            goto LABEL_49;
          }
          uint64_t v58 = (int)v59 - v56;
LABEL_28:
          uint64_t v35 = v84;
LABEL_30:
          uint64_t v62 = (void (*)(char *, char *))v87;
          uint64_t v63 = v82;
          ((void (*)(char *, char *))v87)(v86, v82);
          v62(v35, v63);
          if (v42 != v58) {
            goto LABEL_15;
          }
          long long v64 = v81(v63, v85);
          long long v66 = v64;
          uint64_t v67 = BYTE6(v65);
          switch(v65 >> 62)
          {
            case 1uLL:
              sub_1A3C7D218(v64, v65);
              unint64_t v68 = (int)v66;
              uint64_t v69 = v66 >> 32;
              goto LABEL_35;
            case 2uLL:
              unint64_t v68 = *(void *)(v64 + 16);
              uint64_t v69 = *(void *)(v64 + 24);
              sub_1A3C7D218(v64, v65);
              goto LABEL_35;
            case 3uLL:
              sub_1A3C7D218(v64, v65);
              unint64_t v70 = v83;
              v80(v83, v88, v63);
              goto LABEL_45;
            default:
              sub_1A3C7D218(v64, v65);
              unint64_t v68 = 0;
              uint64_t v69 = v67;
LABEL_35:
              unint64_t v70 = v83;
              uint64_t v63 = v82;
              v80(v83, v88, v82);
              if (v68 != v69)
              {
                uint64_t v71 = v81(v63, v85);
                uint64_t v73 = v71;
                v74 = v72;
                v75 = (uint64_t (*)(char *, char *))v87;
                switch(v72 >> 62)
                {
                  case 1uLL:
                    sub_1A3C7D218(v71, v72);
                    uint64_t v76 = (int)v73;
                    v77 = v73 >> 32;
                    goto LABEL_42;
                  case 2uLL:
                    uint64_t v76 = *(void *)(v71 + 16);
                    v77 = *(void *)(v71 + 24);
                    sub_1A3C7D218(v71, v72);
LABEL_42:
                    double result = v75(v83, v82);
                    if (v76 == v77) {
                      goto LABEL_46;
                    }
                    return result;
                  case 3uLL:
                    sub_1A3C7D218(v71, v72);
                    unint64_t v70 = v83;
                    break;
                  default:
                    sub_1A3C7D218(v71, v72);
                    double result = v75(v83, v63);
                    if ((v74 & 0xFF000000000000) == 0) {
                      goto LABEL_46;
                    }
                    return result;
                }
              }
LABEL_45:
              ((void (*)(char *, char *))v87)(v70, v63);
LABEL_46:
              sub_1A3C85624();
              swift_allocError();
              uint64_t v44 = 0x80000001A40B52D0;
              uint64_t v46 = v78;
              int v43 = 0xD00000000000002CLL;
              break;
          }
          break;
        case 2uLL:
          v89 = v32;
          uint64_t v60 = *(void *)(v54 + 16);
          __n128 v61 = *(void *)(v54 + 24);
          sub_1A3C7D218(v54, v55);
          uint64_t v58 = v61 - v60;
          if (!__OFSUB__(v61, v60)) {
            goto LABEL_28;
          }
          goto LABEL_50;
        case 3uLL:
          sub_1A3C7D218(v54, v55);
          uint64_t v58 = 0;
          goto LABEL_30;
        default:
          sub_1A3C7D218(v54, v55);
          uint64_t v58 = v57;
          goto LABEL_30;
      }
      goto LABEL_11;
    }
    uint64_t v47 = (void (*)(char *, char *))v87;
  }
  else
  {
    uint64_t v47 = *(void (**)(char *, char *))(v25 + 8);
    v47(v29, a2);
    v47(v27, a2);
    uint64_t v35 = v84;
    v26(v84, v90, a2);
    int v36 = v86;
    v26(v86, v23, a2);
    uint64_t v37 = a2;
  }
  v47(v36, v37);
  v47(v35, v37);
LABEL_15:
  sub_1A3C85624();
  swift_allocError();
  static VisionError.invalidFormat(message:)(0xD00000000000004BLL, 0x80000001A40B5280, v48);
  return swift_willThrow();
}

double sub_1A3D211D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 32))(&v17, a2, a3);
  char v15 = v17;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t v7 = v6(a2, a3);
  unint64_t v9 = v8;
  uint64_t v10 = v6(a2, a3);
  unint64_t v12 = v11;
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  if (v15)
  {
    double v3 = sub_1A3CAA4B0(v7, v9, v10, v12, v13);
    sub_1A3C7D218(v10, v12);
    sub_1A3C7D218(v7, v9);
  }
  else
  {
    LODWORD(v3) = sub_1A3CAA21C(v7, v9, v10, v12, v13);
    sub_1A3C7D218(v10, v12);
    sub_1A3C7D218(v7, v9);
    if (!v16) {
      return *(float *)&v3;
    }
  }
  return v3;
}

uint64_t sub_1A3D21358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 32))(&v46, a2, a3);
  char v5 = v46;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t v7 = v6(a2, a3);
  unint64_t v9 = v8;
  uint64_t v42 = v6;
  uint64_t v10 = v6(a2, a3);
  unint64_t v12 = v11;
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  uint64_t v13 = v41(a2, a3);
  if (v5)
  {
    sub_1A3CAA9D8(v7, v9, v10, v12, v13);
    sub_1A3C7D218(v10, v12);
    uint64_t result = sub_1A3C7D218(v7, v9);
    if (!v43)
    {
      uint64_t v15 = v42(a2, a3);
      unint64_t v17 = v16;
      uint64_t v18 = v42(a2, a3);
      unint64_t v20 = v19;
      uint64_t v21 = v41(a2, a3);
      sub_1A3CAA9D8(v15, v17, v18, v20, v21);
      sub_1A3C7D218(v18, v20);
      sub_1A3C7D218(v15, v17);
      uint64_t v44 = v42(a2, a3);
      unint64_t v23 = v22;
      uint64_t v24 = v42(a2, a3);
      unint64_t v26 = v25;
      uint64_t v27 = v41(a2, a3);
      sub_1A3CAA9D8(v44, v23, v24, v26, v27);
      sub_1A3C7D218(v24, v26);
      return sub_1A3C7D218(v44, v23);
    }
  }
  else
  {
    sub_1A3CAA744(v7, v9, v10, v12, v13);
    sub_1A3C7D218(v10, v12);
    if (v43)
    {
      return sub_1A3C7D218(v7, v9);
    }
    else
    {
      sub_1A3C7D218(v7, v9);
      uint64_t v28 = v42(a2, a3);
      unint64_t v30 = v29;
      uint64_t v31 = v42(a2, a3);
      unint64_t v33 = v32;
      uint64_t v34 = v41(a2, a3);
      sub_1A3CAA744(v28, v30, v31, v33, v34);
      sub_1A3C7D218(v31, v33);
      sub_1A3C7D218(v28, v30);
      uint64_t v35 = v42(a2, a3);
      unint64_t v45 = v36;
      uint64_t v37 = v42(a2, a3);
      unint64_t v39 = v38;
      uint64_t v40 = v41(a2, a3);
      sub_1A3CAA744(v35, v45, v37, v39, v40);
      sub_1A3C7D218(v37, v39);
      return sub_1A3C7D218(v35, v45);
    }
  }
  return result;
}

unint64_t sub_1A3D21788()
{
  unint64_t result = qword_1E95EDBB8;
  if (!qword_1E95EDBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDBB8);
  }
  return result;
}

unint64_t sub_1A3D217E0()
{
  unint64_t result = qword_1E95EDBC0;
  if (!qword_1E95EDBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDBC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DistanceMeasure(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D21900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DistanceMeasure()
{
  return &type metadata for DistanceMeasure;
}

uint64_t static VideoProcessor.Cadence.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (a1[3])
  {
    if (v3 == v4) {
      return *((unsigned __int8 *)a2 + 24);
    }
    else {
      return 0;
    }
  }
  else if (a2[3])
  {
    return 0;
  }
  else
  {
    return MEMORY[0x1F4186B18](v3, a1[1], a1[2], v4, a2[1], a2[2]);
  }
}

uint64_t VideoProcessor.Cadence.hash(into:)()
{
  if (*(unsigned char *)(v0 + 24))
  {
    sub_1A4096F3C();
    return sub_1A4096F3C();
  }
  else
  {
    sub_1A4096F3C();
    return sub_1A409680C();
  }
}

uint64_t VideoProcessor.Cadence.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 24);
  sub_1A4096F2C();
  sub_1A4096F3C();
  if (v1) {
    sub_1A4096F3C();
  }
  else {
    sub_1A409680C();
  }
  return sub_1A4096F7C();
}

uint64_t sub_1A3D21A94(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (a1[3])
  {
    if (v3 == v4) {
      return *((unsigned __int8 *)a2 + 24);
    }
    else {
      return 0;
    }
  }
  else if (a2[3])
  {
    return 0;
  }
  else
  {
    return MEMORY[0x1F4186B18](v3, a1[1], a1[2], v4, a2[1], a2[2]);
  }
}

uint64_t sub_1A3D21AD0()
{
  char v1 = *(unsigned char *)(v0 + 24);
  sub_1A4096F2C();
  sub_1A4096F3C();
  if (v1) {
    sub_1A4096F3C();
  }
  else {
    sub_1A409680C();
  }
  return sub_1A4096F7C();
}

uint64_t sub_1A3D21B5C()
{
  if (*(unsigned char *)(v0 + 24))
  {
    sub_1A4096F3C();
    return sub_1A4096F3C();
  }
  else
  {
    sub_1A4096F3C();
    return sub_1A409680C();
  }
}

uint64_t sub_1A3D21BF0()
{
  char v1 = *(unsigned char *)(v0 + 24);
  sub_1A4096F2C();
  sub_1A4096F3C();
  if (v1) {
    sub_1A4096F3C();
  }
  else {
    sub_1A409680C();
  }
  return sub_1A4096F7C();
}

uint64_t VideoProcessor.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC6Vision14VideoProcessor_url;
  uint64_t v4 = sub_1A4095B9C();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  type metadata accessor for VideoProcessor.State();
  uint64_t v6 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v6 + 112) = 0;
  *(void *)(v6 + 120) = MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *(void *)(v2 + OBJC_IVAR____TtC6Vision14VideoProcessor_state) = v6;
  return v2;
}

uint64_t VideoProcessor.init(_:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Vision14VideoProcessor_url;
  uint64_t v4 = sub_1A4095B9C();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  type metadata accessor for VideoProcessor.State();
  uint64_t v6 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v6 + 112) = 0;
  *(void *)(v6 + 120) = MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *(void *)(v1 + OBJC_IVAR____TtC6Vision14VideoProcessor_state) = v6;
  return v1;
}

uint64_t sub_1A3D21E68()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = MEMORY[0x1E4FBC860];
  return v0;
}

uint64_t type metadata accessor for VideoProcessor.State()
{
  return self;
}

uint64_t VideoProcessor.addRequest<A>(_:cadence:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 72) = a5;
  *(void *)(v6 + 80) = v5;
  *(void *)(v6 + 56) = a2;
  *(void *)(v6 + 64) = a4;
  *(void *)(v6 + 48) = a1;
  *(void *)(v6 + 88) = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  sub_1A409655C();
  *(void *)(v6 + 96) = swift_task_alloc();
  uint64_t v8 = sub_1A409659C();
  *(void *)(v6 + 104) = v8;
  *(void *)(v6 + 112) = *(void *)(v8 - 8);
  *(void *)(v6 + 120) = swift_task_alloc();
  *(void *)(v6 + 128) = sub_1A409658C();
  uint64_t v9 = sub_1A409692C();
  *(void *)(v6 + 136) = v9;
  *(void *)(v6 + 144) = *(void *)(v9 - 8);
  *(void *)(v6 + 152) = swift_task_alloc();
  *(void *)(v6 + 160) = swift_task_alloc();
  *(_OWORD *)(v6 + 168) = *(_OWORD *)a3;
  *(void *)(v6 + 184) = *(void *)(a3 + 16);
  *(unsigned char *)(v6 + 41) = *(unsigned char *)(a3 + 24);
  return MEMORY[0x1F4188298](sub_1A3D220D4, 0, 0);
}

uint64_t sub_1A3D220D4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v19 = *(void *)(v0 + 80);
  uint64_t v21 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = v6;
  *(void *)(v0 + 192) = v6;
  long long v18 = *(_OWORD *)(v0 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v4);
  uint64_t v8 = swift_task_alloc();
  *(_OWORD *)(v8 + 16) = v18;
  *(void *)(v8 + 32) = v2;
  sub_1A3D22634(v5);
  sub_1A40965AC();
  swift_task_dealloc();
  uint64_t v9 = *(void *)(v19 + OBJC_IVAR____TtC6Vision14VideoProcessor_state);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v21);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v1, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    char v11 = *(unsigned char *)(v0 + 41);
    uint64_t v12 = *(void *)(v0 + 184);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 168);
    *(void *)(v0 + 32) = v12;
    *(unsigned char *)(v0 + 40) = v11;
    unint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v9 + 160)
                                                                              + **(int **)(*(void *)v9 + 160));
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1A3D22348;
    uint64_t v14 = *(void *)(v0 + 152);
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 56);
    return v20(v17, v14, v0 + 16, v15, v16);
  }
  return result;
}

uint64_t sub_1A3D22348()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1A3D22544;
  }
  else
  {
    (*(void (**)(void, void))(v2[24] + 8))(v2[19], v2[16]);
    uint64_t v3 = sub_1A3D22478;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A3D22478()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  (*(void (**)(void, void, void))(v0[14] + 32))(v0[6], v0[15], v0[13]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A3D22544()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[16];
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v6);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1A3D22634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBD120];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v3 = sub_1A409655C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t VideoProcessor.removeRequest(_:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1A3D226F0, 0, 0);
}

uint64_t sub_1A3D226F0()
{
  uint64_t v4 = (uint64_t (*)(uint64_t, void))(*(void *)(**(void **)(v0[3]
                                                                         + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                                           + 168)
                                               + **(int **)(**(void **)(v0[3]
                                                                        + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                                          + 168));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A3D22800;
  uint64_t v2 = v0[2];
  return v4(v2, 0);
}

uint64_t sub_1A3D22800(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t VideoProcessor.cancel()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A3D2291C, 0, 0);
}

uint64_t sub_1A3D2291C()
{
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(**(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                     + 192)
                         + **(int **)(**(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                    + 192));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A3D22A20;
  return v3();
}

uint64_t sub_1A3D22A20()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

Swift::Void __swiftcall VideoProcessor.startAnalysis(of:)(__C::CMTimeRange_optional *of)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF780);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A409649C();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  uint64_t v10 = v9 + 2;
  v9[3] = 0;
  v9[4] = v2;
  sub_1A3C7D648((uint64_t)of, (uint64_t)(v9 + 5));
  LODWORD(of) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  swift_retain();
  if (of == 1)
  {
    sub_1A3CA2EB8((uint64_t)v6, &qword_1E95EF780);
    if (*v10)
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1A409643C();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A409648C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (*v10) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &unk_1E95EDBE8;
  *(void *)(v14 + 24) = v9;
  if (v13 | v11)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v11;
    v15[3] = v13;
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_1A3D22D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 488) = a4;
  *(void *)(v5 + 496) = a5;
  sub_1A3C7D648(a5, v5 + 136);
  long long v6 = *(_OWORD *)(v5 + 152);
  *(_OWORD *)(v5 + 504) = *(_OWORD *)(v5 + 136);
  *(_OWORD *)(v5 + 520) = v6;
  *(_OWORD *)(v5 + 536) = *(_OWORD *)(v5 + 168);
  return MEMORY[0x1F4188298](sub_1A3D22E18, 0, 0);
}

uint64_t sub_1A3D22E18()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
  uint64_t v2 = (void *)sub_1A4095B4C();
  id v3 = objc_msgSend(v1, sel_initWithURL_options_, v2, 0);
  v0[69] = v3;

  id v4 = objc_allocWithZone(MEMORY[0x1E4F16378]);
  v0[60] = 0;
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_initWithAsset_error_, v5, v0 + 60);
  v0[70] = v6;
  uint64_t v7 = (void *)v0[60];
  if (v6)
  {
    id v8 = v7;

    uint64_t v9 = *MEMORY[0x1E4F15C18];
    v0[2] = v0;
    v0[7] = v0 + 59;
    v0[3] = sub_1A3D23120;
    uint64_t v10 = swift_continuation_init();
    v0[54] = MEMORY[0x1E4F143A8];
    v0[55] = 0x40000000;
    v0[56] = sub_1A3D24010;
    v0[57] = &block_descriptor_3;
    v0[58] = v10;
    objc_msgSend(v5, sel_loadTracksWithMediaType_completionHandler_, v9, v0 + 54);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    id v11 = v7;
    uint64_t v12 = (void *)sub_1A4095AEC();

    swift_willThrow();
    v0[78] = v12;
    uint64_t v13 = *(int **)(**(void **)(v0[61] + OBJC_IVAR____TtC6Vision14VideoProcessor_state) + 200);
    id v14 = v12;
    uint64_t v17 = (uint64_t (*)(void *))((char *)v13 + *v13);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[79] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1A3D23B60;
    return v17(v12);
  }
}

uint64_t sub_1A3D23120()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 568) = v1;
  if (v1) {
    uint64_t v2 = sub_1A3D23D30;
  }
  else {
    uint64_t v2 = sub_1A3D2325C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A3D2325C()
{
  unint64_t v1 = v0[59];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A4096BFC();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    if ((v1 & 0xC000000000000001) != 0)
    {
      id v2 = (id)MEMORY[0x1A6254720](0, v1);
    }
    else
    {
      if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        __break(1u);
      }
      id v2 = *(id *)(v1 + 32);
    }
    id v3 = v2;
    v0[72] = v2;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDC60);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
    *(void *)(inited + 32) = sub_1A409617C();
    *(void *)(inited + 40) = v5;
    *(_DWORD *)(inited + 48) = 875704422;
    unint64_t v6 = sub_1A3D240DC(inited);
    id v7 = v3;
    sub_1A3D241F0(v6);
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone(MEMORY[0x1E4F163A0]);
    uint64_t v9 = (void *)sub_1A409600C();
    swift_bridgeObjectRelease();
    v0[73] = objc_msgSend(v8, sel_initWithTrack_outputSettings_, v7, v9);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDC68);
    uint64_t v10 = sub_1A4095D6C();
    v0[74] = v10;
    id v11 = (void *)swift_task_alloc();
    v0[75] = v11;
    *id v11 = v0;
    v11[1] = sub_1A3D23620;
    return MEMORY[0x1F4182DC0](v0 + 36, v10);
  }
  uint64_t v13 = (void *)v0[70];
  id v14 = (void *)v0[69];
  swift_bridgeObjectRelease();
  sub_1A3C85624();
  uint64_t v15 = (void *)swift_allocError();
  *(void *)uint64_t v16 = 0xD00000000000001FLL;
  *(void *)(v16 + 8) = 0x80000001A40B5390;
  *(_DWORD *)(v16 + 16) = 0;
  *(unsigned char *)(v16 + 20) = 2;
  swift_willThrow();

  v0[78] = v15;
  uint64_t v17 = *(int **)(**(void **)(v0[61] + OBJC_IVAR____TtC6Vision14VideoProcessor_state) + 200);
  id v18 = v15;
  uint64_t v21 = (uint64_t (*)(void *))((char *)v17 + *v17);
  uint64_t v19 = (void *)swift_task_alloc();
  v0[79] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1A3D23B60;
  return v21(v15);
}

uint64_t sub_1A3D23620()
{
  *(void *)(*(void *)v1 + 608) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1A3D23E94;
  }
  else
  {
    swift_release();
    id v2 = sub_1A3D23770;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A3D23770()
{
  uint64_t v32 = v0;
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void *)(v0 + 288);
  int v2 = *(_DWORD *)(v0 + 296);
  int v3 = *(_DWORD *)(v0 + 300);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 312);
  int v6 = *(_DWORD *)(v0 + 320);
  int v7 = *(_DWORD *)(v0 + 324);
  uint64_t v8 = *(void *)(v0 + 328);
  sub_1A3C7D648(*(void *)(v0 + 496), v0 + 188);
  uint64_t v9 = v1;
  int v10 = v2;
  int v11 = v3;
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  int v14 = v6;
  int v15 = v7;
  uint64_t v16 = v8;
  if ((*(unsigned char *)(v0 + 236) & 1) == 0)
  {
    int v14 = *(_DWORD *)(v0 + 536);
    int v15 = *(_DWORD *)(v0 + 540);
    int v10 = *(_DWORD *)(v0 + 512);
    int v11 = *(_DWORD *)(v0 + 516);
    uint64_t v16 = *(void *)(v0 + 544);
    uint64_t v13 = *(void *)(v0 + 528);
    uint64_t v12 = *(void *)(v0 + 520);
    uint64_t v9 = *(void *)(v0 + 504);
  }
  uint64_t v29 = *(void *)(v0 + 584);
  uint64_t v17 = *(void **)(v0 + 560);
  *(void *)(v0 + 336) = v9;
  *(_DWORD *)(v0 + 344) = v10;
  *(_DWORD *)(v0 + 348) = v11;
  *(void *)(v0 + 352) = v12;
  *(void *)(v0 + 360) = v13;
  *(_DWORD *)(v0 + 368) = v14;
  *(_DWORD *)(v0 + 372) = v15;
  *(void *)(v0 + 376) = v16;
  *(void *)(v0 + 384) = v1;
  *(_DWORD *)(v0 + 392) = v2;
  *(_DWORD *)(v0 + 396) = v3;
  *(void *)(v0 + 400) = v4;
  *(void *)(v0 + 408) = v5;
  *(_DWORD *)(v0 + 416) = v6;
  *(_DWORD *)(v0 + 420) = v7;
  *(void *)(v0 + 424) = v8;
  CMTimeRangeGetIntersection(&v30, (CMTimeRange *)(v0 + 336), (CMTimeRange *)(v0 + 384));
  CMTimeValue value = v30.start.value;
  CMTimeEpoch epoch = v30.duration.epoch;
  uint64_t v20 = *(void *)&v30.duration.timescale;
  long long v21 = *(_OWORD *)&v30.start.epoch;
  uint64_t timescale = v30.start.timescale;
  uint64_t flags = v30.start.flags;
  *(void *)(v0 + 240) = v30.start.value;
  *(_DWORD *)(v0 + 248) = timescale;
  *(_DWORD *)(v0 + 252) = flags;
  uint64_t v28 = v21;
  *(_OWORD *)(v0 + 256) = v21;
  *(void *)(v0 + 272) = v20;
  *(void *)(v0 + 280) = epoch;
  objc_msgSend(v17, sel_setTimeRange_, v0 + 240);
  objc_msgSend(v17, sel_addOutput_, v29);
  objc_msgSend(v17, sel_startReading);
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 616) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_1A3D2398C;
  uint64_t v25 = *(void *)(v0 + 584);
  uint64_t v26 = *(void *)(v0 + 560);
  return sub_1A3D2454C(v26, v25, value, timescale | (flags << 32), v28);
}

uint64_t sub_1A3D2398C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3D23AB4, 0, 0);
}

uint64_t sub_1A3D23AB4()
{
  uint64_t v1 = *(void **)(v0 + 576);
  int v2 = *(void **)(v0 + 560);
  int v3 = *(void **)(v0 + 552);

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1A3D23B60()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 624);
  swift_task_dealloc();

  return MEMORY[0x1F4188298](sub_1A3D23CA4, 0, 0);
}

uint64_t sub_1A3D23CA4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3D23D30()
{
  uint64_t v1 = (void *)v0[70];
  int v2 = (void *)v0[69];
  swift_willThrow();

  uint64_t v3 = (void *)v0[71];
  v0[78] = v3;
  uint64_t v4 = *(int **)(**(void **)(v0[61] + OBJC_IVAR____TtC6Vision14VideoProcessor_state) + 200);
  id v5 = v3;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[79] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1A3D23B60;
  return v8(v3);
}

uint64_t sub_1A3D23E94()
{
  uint64_t v1 = (void *)v0[73];
  int v2 = (void *)v0[72];
  uint64_t v3 = (void *)v0[70];
  uint64_t v4 = (void *)v0[69];
  swift_release();

  id v5 = (void *)v0[76];
  v0[78] = v5;
  uint64_t v6 = *(int **)(**(void **)(v0[61] + OBJC_IVAR____TtC6Vision14VideoProcessor_state) + 200);
  id v7 = v5;
  int v10 = (uint64_t (*)(void *))((char *)v6 + *v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[79] = v8;
  void *v8 = v0;
  v8[1] = sub_1A3D23B60;
  return v10(v5);
}

uint64_t sub_1A3D24010(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFEF0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    sub_1A3D28C1C();
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1A409630C();
    return MEMORY[0x1F4188200](v3);
  }
}

unint64_t sub_1A3D240DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDC70);
  int v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_DWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    int v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3C8C844(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int v10 = (uint64_t *)(v2[6] + 16 * result);
    *int v10 = v5;
    v10[1] = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A3D241F0(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF4B0);
    int v2 = (void *)sub_1A4096C2C();
  }
  else
  {
    int v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  int v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v11 = MEMORY[0x1E4FBC4C0];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1A3C91DE0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1A3C856F4(v6, v7);
    sub_1A3C856F4(v7, v40);
    sub_1A3C856F4(v40, &v38);
    unint64_t result = sub_1A3C8C844(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      BOOL v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      int v7 = v12;
      int64_t i = v33;
      id v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      unint64_t result = (unint64_t)sub_1A3C856F4(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_1A3C856F4(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A3D2454C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[49] = a5;
  v6[50] = v5;
  v6[47] = a3;
  v6[48] = a4;
  v6[45] = a1;
  v6[46] = a2;
  uint64_t v7 = type metadata accessor for VisionResult(0);
  v6[51] = v7;
  v6[52] = *(void *)(v7 - 8);
  v6[53] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2E0);
  v6[54] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED318);
  v6[55] = v8;
  v6[56] = *(void *)(v8 - 8);
  v6[57] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED320);
  v6[58] = v9;
  v6[59] = *(void *)(v9 - 8);
  v6[60] = swift_task_alloc();
  v6[61] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A3D24714, 0, 0);
}

uint64_t sub_1A3D24714()
{
  id v1 = objc_msgSend(*(id *)(v0 + 368), sel_copyNextSampleBuffer);
  *(void *)(v0 + 496) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(*(void *)(v0 + 400) + OBJC_IVAR____TtC6Vision14VideoProcessor_state);
    *(void *)(v0 + 504) = v2;
    uint64_t v3 = *(int **)(*(void *)v2 + 184);
    uint64_t v4 = *(void *)v2 + 184;
    *(void *)(v0 + 512) = v3;
    *(void *)(v0 + 520) = v4 & 0xFFFFFFFFFFFFLL | 0xA39B000000000000;
    uint64_t v8 = (uint64_t (*)(void))((char *)v3 + *v3);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 528) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1A3D24920;
    return v8();
  }
  else
  {
    *(void *)(v0 + 624) = 0;
    uint64_t v9 = (uint64_t (*)(void))(*(void *)(**(void **)(*(void *)(v0 + 400)
                                                                  + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                                    + 200)
                                        + **(int **)(**(void **)(*(void *)(v0 + 400)
                                                                 + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                                   + 200));
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1A3D25B8C;
    return v9(0);
  }
}

uint64_t sub_1A3D24920(char a1)
{
  *(unsigned char *)(*(void *)v1 + 640) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3D24A20, 0, 0);
}

uint64_t sub_1A3D24A20()
{
  uint64_t v1 = *(opaqueCMSampleBuffer **)(v0 + 496);
  if (*(unsigned char *)(v0 + 640) == 1)
  {
    objc_msgSend(*(id *)(v0 + 360), sel_cancelReading);
LABEL_7:
    *(void *)(v0 + 624) = v1;
    unint64_t v19 = (uint64_t (*)(void))(*(void *)(**(void **)(*(void *)(v0 + 400)
                                                                   + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                                     + 200)
                                         + **(int **)(**(void **)(*(void *)(v0 + 400)
                                                                  + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                                    + 200));
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1A3D25B8C;
    return v19(0);
  }
  *(void *)(v0 + 536) = v1;
  uint64_t v2 = (opaqueCMSampleBuffer *)objc_msgSend(*(id *)(v0 + 368), sel_copyNextSampleBuffer);
  *(void *)(v0 + 544) = v2;
  if (!v2) {
    goto LABEL_7;
  }
  uint64_t v3 = v2;
  *(void *)(v0 + 552) = 1;
  uint64_t v4 = *(void *)(v0 + 504);
  CMSampleBufferGetPresentationTimeStamp((CMTime *)(v0 + 232), v1);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 240);
  CMSampleBufferGetPresentationTimeStamp((CMTime *)(v0 + 256), v3);
  uint64_t v8 = *(void *)(v0 + 256);
  uint64_t v9 = *(void *)(v0 + 272);
  uint64_t v10 = *(void *)(v0 + 264);
  *(void *)(v0 + 280) = v5;
  *(void *)(v0 + 288) = v7;
  *(void *)(v0 + 296) = v6;
  *(void *)(v0 + 304) = v8;
  *(void *)(v0 + 312) = v10;
  *(void *)(v0 + 320) = v9;
  CMTimeRangeFromTimeToTime((CMTimeRange *)(v0 + 64), (CMTime *)(v0 + 280), (CMTime *)(v0 + 304));
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 96);
  long long v14 = *(_OWORD *)(v0 + 80);
  *(void *)(v0 + 16) = *(void *)(v0 + 64);
  *(void *)(v0 + 24) = v12;
  *(_OWORD *)(v0 + 32) = v14;
  *(void *)(v0 + 48) = v13;
  *(void *)(v0 + 56) = v11;
  id v18 = (uint64_t (*)(void))(*(void *)(*(void *)v4 + 176) + **(int **)(*(void *)v4 + 176));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 560) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1A3D24D14;
  return v18();
}

uint64_t sub_1A3D24D14(uint64_t a1)
{
  *(void *)(*(void *)v1 + 568) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3D24E14, 0, 0);
}

uint64_t sub_1A3D24E14()
{
  uint64_t v1 = v0[71];
  v0[44] = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v36 = v0 + 14;
    uint64_t v35 = v0 + 24;
    uint64_t v32 = v0 + 44;
    uint64_t v3 = v1 + 32;
    do
    {
      uint64_t v5 = v0[69];
      uint64_t v7 = v0[48];
      uint64_t v6 = v0[49];
      uint64_t v8 = v0[47];
      sub_1A3C85678(v3, (uint64_t)(v0 + 19));
      uint64_t v9 = v0[22];
      uint64_t v10 = v0[23];
      __swift_project_boxed_opaque_existential_1(v0 + 19, v9);
      if ((*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(v0 + 2, v8, v7, v6, v5, v9, v10))
      {
        uint64_t v11 = v0[22];
        uint64_t v12 = v0[23];
        __swift_project_boxed_opaque_existential_1(v0 + 19, v11);
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
        uint64_t v13 = v0[27];
        uint64_t v14 = v0[28];
        uint64_t v15 = __swift_project_boxed_opaque_existential_1(v35, v13);
        v0[17] = v13;
        uint64_t v34 = *(void *)(v14 + 8);
        v0[18] = v34;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
        uint64_t v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16);
        int64_t v33 = boxed_opaque_existential_1;
        v17(boxed_opaque_existential_1, v15, v13);
        id v18 = (void *)v0[44];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          id v18 = sub_1A3D27C94(0, v18[2] + 1, 1, v18, &qword_1E95EC3D8, &qword_1E95EC2D8);
          uint64_t *v32 = (uint64_t)v18;
        }
        unint64_t v20 = v18[2];
        unint64_t v19 = v18[3];
        if (v20 >= v19 >> 1) {
          uint64_t *v32 = (uint64_t)sub_1A3D27C94((void *)(v19 > 1), v20 + 1, 1, v18, &qword_1E95EC3D8, &qword_1E95EC2D8);
        }
        uint64_t v4 = swift_task_alloc();
        v17((uint64_t *)v4, v33, v13);
        sub_1A3D27E08(v20, v4, v32, v13, v34, (uint64_t (*)(uint64_t *, uint64_t))sub_1A3C856DC);
        swift_task_dealloc();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 19));
      v3 += 40;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  unint64_t v21 = (void *)v0[67];
  uint64_t v22 = v0[60];
  uint64_t v23 = v0[61];
  uint64_t v24 = v0[58];
  uint64_t v25 = v0[59];
  type metadata accessor for ImageRequestHandler();
  v0[72] = ImageRequestHandler.__allocating_init(_:depthData:orientation:)(v21, 0, 0x100000000uLL);
  uint64_t v26 = v0[44];
  v0[73] = v26;
  v0[43] = v26;
  swift_bridgeObjectRetain();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC408);
  unint64_t v28 = sub_1A3CE9388();
  ImageRequestHandler.performAll<A>(_:)((uint64_t)(v0 + 43), v27, v28, v23);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v22, v23, v24);
  v0[41] = v27;
  v0[42] = v28;
  v0[74] = swift_getOpaqueTypeConformance2();
  sub_1A409653C();
  swift_getAssociatedConformanceWitness();
  BOOL v29 = (void *)swift_task_alloc();
  v0[75] = (uint64_t)v29;
  void *v29 = v0;
  v29[1] = sub_1A3D25250;
  uint64_t v30 = v0[54];
  return MEMORY[0x1F4187C80](v30, 0, 0);
}

uint64_t sub_1A3D25250()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3D2534C, 0, 0);
}

uint64_t sub_1A3D2534C()
{
  uint64_t v1 = v0[54];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[52] + 48))(v1, 1, v0[51]) == 1)
  {
    uint64_t v2 = (void *)v0[67];
    uint64_t v3 = (int *)v0[64];
    uint64_t v4 = v0[61];
    uint64_t v5 = v0[58];
    uint64_t v6 = v0[59];
    uint64_t v7 = v0[56];
    uint64_t v8 = v0[57];
    uint64_t v9 = v0[55];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t (*)(void))((char *)v3 + *v3);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[77] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A3D2578C;
    return v16();
  }
  else
  {
    uint64_t v12 = v0[63];
    sub_1A3C85558(v1, v0[53]);
    uint64_t v15 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v12 + 152) + **(int **)(*(void *)v12 + 152));
    uint64_t v13 = (void *)swift_task_alloc();
    v0[76] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1A3D255BC;
    uint64_t v14 = v0[53];
    return v15(v14);
  }
}

uint64_t sub_1A3D255BC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3D256B8, 0, 0);
}

uint64_t sub_1A3D256B8()
{
  sub_1A3C8B544(v0[53]);
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[75] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A3D25250;
  uint64_t v2 = v0[54];
  return MEMORY[0x1F4187C80](v2, 0, 0);
}

uint64_t sub_1A3D2578C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 641) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3D2588C, 0, 0);
}

opaqueCMSampleBuffer *sub_1A3D2588C()
{
  if (*(unsigned char *)(v0 + 641))
  {
    uint64_t v1 = *(opaqueCMSampleBuffer **)(v0 + 544);
    objc_msgSend(*(id *)(v0 + 360), sel_cancelReading);
LABEL_8:
    *(void *)(v0 + 624) = v1;
    unint64_t v19 = (uint64_t (*)(void))(*(void *)(**(void **)(*(void *)(v0 + 400)
                                                                   + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                                     + 200)
                                         + **(int **)(**(void **)(*(void *)(v0 + 400)
                                                                  + OBJC_IVAR____TtC6Vision14VideoProcessor_state)
                                                    + 200));
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1A3D25B8C;
    return (opaqueCMSampleBuffer *)v19(0);
  }
  uint64_t v2 = *(void *)(v0 + 552);
  uint64_t v1 = *(opaqueCMSampleBuffer **)(v0 + 544);
  *(void *)(v0 + 536) = v1;
  unint64_t result = (opaqueCMSampleBuffer *)objc_msgSend(*(id *)(v0 + 368), sel_copyNextSampleBuffer);
  *(void *)(v0 + 544) = result;
  if (!result) {
    goto LABEL_8;
  }
  uint64_t v4 = result;
  *(void *)(v0 + 552) = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 504);
    CMSampleBufferGetPresentationTimeStamp((CMTime *)(v0 + 232), v1);
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 248);
    uint64_t v8 = *(void *)(v0 + 240);
    CMSampleBufferGetPresentationTimeStamp((CMTime *)(v0 + 256), v4);
    uint64_t v9 = *(void *)(v0 + 256);
    uint64_t v10 = *(void *)(v0 + 272);
    uint64_t v11 = *(void *)(v0 + 264);
    *(void *)(v0 + 280) = v6;
    *(void *)(v0 + 288) = v8;
    *(void *)(v0 + 296) = v7;
    *(void *)(v0 + 304) = v9;
    *(void *)(v0 + 312) = v11;
    *(void *)(v0 + 320) = v10;
    CMTimeRangeFromTimeToTime((CMTimeRange *)(v0 + 64), (CMTime *)(v0 + 280), (CMTime *)(v0 + 304));
    uint64_t v12 = *(void *)(v0 + 104);
    uint64_t v13 = *(void *)(v0 + 72);
    uint64_t v14 = *(void *)(v0 + 96);
    long long v15 = *(_OWORD *)(v0 + 80);
    *(void *)(v0 + 16) = *(void *)(v0 + 64);
    *(void *)(v0 + 24) = v13;
    *(_OWORD *)(v0 + 32) = v15;
    *(void *)(v0 + 48) = v14;
    *(void *)(v0 + 56) = v12;
    id v18 = (uint64_t (*)(void))(*(void *)(*(void *)v5 + 176) + **(int **)(*(void *)v5 + 176));
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1A3D24D14;
    return (opaqueCMSampleBuffer *)v18();
  }
  return result;
}

uint64_t sub_1A3D25B8C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3D25C88, 0, 0);
}

uint64_t sub_1A3D25C88()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3D25D2C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_1A3D25D60(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 112) = a1;
  return result;
}

uint64_t (*sub_1A3D25DA0())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A3D25DF4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D25E2C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3D25E74())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3D25EC8(uint64_t a1)
{
  v2[32] = a1;
  v2[33] = v1;
  v2[34] = type metadata accessor for VisionResult(0);
  v2[35] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A3D25F5C, v1, 0);
}

uint64_t sub_1A3D25F5C()
{
  sub_1A3C8B4E0(v0[32], v0[35]);
  if (swift_getEnumCaseMultiPayload() == 31)
  {
    uint64_t v1 = v0[35];
    uint64_t v2 = v0[33];
    uint64_t v3 = *(void **)(v1 + 40);
    v0[36] = (uint64_t)v3;
    __swift_destroy_boxed_opaque_existential_1(v1);
    sub_1A3CC8CB8(v0 + 27);
    uint64_t v4 = *(int **)(*(void *)v2 + 168);
    id v5 = v3;
    uint64_t v27 = (uint64_t (*)(uint64_t *, void *))((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[37] = (uint64_t)v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1A3D262D0;
    return v27(v0 + 27, v3);
  }
  else
  {
    uint64_t v26 = (uint64_t)(v0 + 7);
    BOOL v29 = v0;
    uint64_t v8 = v0[33];
    uint64_t v9 = sub_1A3C8B544(v0[35]);
    uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 128))(v9);
    uint64_t v10 = *(void *)(v28 + 16);
    if (v10)
    {
      uint64_t v11 = (long long *)(v0 + 12);
      uint64_t v12 = v0 + 17;
      uint64_t v13 = v29 + 22;
      uint64_t v14 = v28 + 32;
      while (1)
      {
        sub_1A3C85678(v14, (uint64_t)v11);
        uint64_t v16 = v29[15];
        uint64_t v15 = v29[16];
        uint64_t v17 = v11;
        __swift_project_boxed_opaque_existential_1(v11, v16);
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
        uint64_t v18 = v29[20];
        uint64_t v19 = v29[21];
        __swift_project_boxed_opaque_existential_1(v12, v18);
        sub_1A3CC8CB8(v13);
        char v20 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v19 + 88))(v13, v18, v19);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
        if (v20) {
          break;
        }
        uint64_t v11 = v17;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        v14 += 40;
        if (!--v10) {
          goto LABEL_9;
        }
      }
      unint64_t v21 = (long long *)v26;
      sub_1A3C856DC(v17, v26);
    }
    else
    {
LABEL_9:
      unint64_t v21 = (long long *)v26;
      *(void *)(v26 + 32) = 0;
      *(_OWORD *)uint64_t v26 = 0u;
      *(_OWORD *)(v26 + 16) = 0u;
    }
    swift_bridgeObjectRelease();
    if (v29[10])
    {
      uint64_t v22 = v29[32];
      sub_1A3C856DC(v21, (uint64_t)(v29 + 2));
      uint64_t v23 = v29[5];
      uint64_t v24 = v29[6];
      __swift_project_boxed_opaque_existential_1(v29 + 2, v23);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v22, v23, v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v29 + 2));
    }
    else
    {
      sub_1A3CA2EB8((uint64_t)v21, qword_1E95EDC10);
    }
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v29[1];
    return v25();
  }
}

uint64_t sub_1A3D262D0()
{
  uint64_t v1 = *(void *)v0 + 216;
  uint64_t v2 = *(void **)(*(void *)v0 + 288);
  uint64_t v3 = *(void *)(*(void *)v0 + 264);
  swift_task_dealloc();

  __swift_destroy_boxed_opaque_existential_1(v1);
  return MEMORY[0x1F4188298](sub_1A3D26410, v3, 0);
}

uint64_t sub_1A3D26410()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3D26478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 152) = a5;
  *(void *)(v6 + 160) = v5;
  *(void *)(v6 + 136) = a2;
  *(void *)(v6 + 144) = a4;
  *(void *)(v6 + 128) = a1;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v9 = sub_1A409658C();
  *(void *)(v6 + 168) = v9;
  *(void *)(v6 + 176) = *(void *)(v9 - 8);
  *(void *)(v6 + 184) = swift_task_alloc();
  uint64_t v10 = *(void *)(a4 - 8);
  *(void *)(v6 + 192) = v10;
  *(void *)(v6 + 200) = v10;
  *(void *)(v6 + 208) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for VideoProcessor.Request();
  *(void *)(v6 + 216) = v11;
  *(void *)(v6 + 224) = *(void *)(v11 - 8);
  *(void *)(v6 + 232) = swift_task_alloc();
  *(void *)(v6 + 240) = swift_task_alloc();
  *(void *)(v6 + 248) = swift_task_alloc();
  *(_OWORD *)(v6 + 256) = *(_OWORD *)a3;
  *(void *)(v6 + 272) = *(void *)(a3 + 16);
  *(unsigned char *)(v6 + 280) = *(unsigned char *)(a3 + 24);
  return MEMORY[0x1F4188298](sub_1A3D26688, v5, 0);
}

uint64_t sub_1A3D26688()
{
  uint64_t v50 = v0;
  uint64_t v37 = (*(uint64_t (**)(void))(**(void **)(v0 + 160) + 128))();
  uint64_t v1 = *(void *)(v37 + 16);
  if (v1)
  {
    uint64_t v39 = (uint64_t *)(v43 + 56);
    uint64_t v2 = (void *)(v37 + 32);
    uint64_t v3 = (void *)(v43 + 16);
    while (1)
    {
      uint64_t v4 = *(void *)(v43 + 192);
      uint64_t v46 = *(void *)(v43 + 128);
      uint64_t v5 = v2[3];
      uint64_t v6 = v2[4];
      long long v44 = *(_OWORD *)(v43 + 144);
      uint64_t v7 = *(void *)(v43 + 144);
      __swift_project_boxed_opaque_existential_1(v2, v5);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      uint64_t v8 = *(void *)(v43 + 40);
      uint64_t v9 = *(void *)(v43 + 48);
      __swift_project_boxed_opaque_existential_1(v3, v8);
      *(_OWORD *)(v43 + 80) = v44;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_1, v46, v7);
      char v11 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v9 + 88))(v39, v8, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
      if (v11) {
        break;
      }
      v2 += 5;
      if (!--v1) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v34 = 0xD000000000000028;
    *(void *)(v34 + 8) = 0x80000001A40B5300;
    *(_DWORD *)(v34 + 16) = 0;
    *(unsigned char *)(v34 + 20) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v33 = *(uint64_t (**)(void))(v43 + 8);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char v40 = *(unsigned char *)(v43 + 280);
    uint64_t v38 = *(void *)(v43 + 272);
    long long v36 = *(_OWORD *)(v43 + 256);
    uint64_t v12 = *(void *)(v43 + 248);
    uint64_t v45 = *(void *)(v43 + 240);
    uint64_t v13 = *(void *)(v43 + 224);
    uint64_t v41 = *(void *)(v43 + 216);
    uint64_t v14 = *(void *)(v43 + 176);
    uint64_t v15 = *(void *)(v43 + 184);
    uint64_t v16 = *(void *)(v43 + 160);
    uint64_t v17 = *(void *)(v43 + 168);
    uint64_t v18 = *(void *)(v43 + 136);
    (*(void (**)(void, void, void))(*(void *)(v43 + 200) + 16))(*(void *)(v43 + 208), *(void *)(v43 + 128), *(void *)(v43 + 144));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v18, v17);
    long long v47 = v36;
    uint64_t v48 = v38;
    char v49 = v40;
    sub_1A3D26B48(v15, (uint64_t)&v47, v12);
    uint64_t v19 = v41;
    uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v42(v45, v12, v19);
    char v20 = (void (*)(void))(*(uint64_t (**)(uint64_t))(*(void *)v16 + 144))(v43 + 96);
    uint64_t v22 = v21;
    uint64_t v23 = (void *)*v21;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v22 = (uint64_t)v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v23 = sub_1A3D27C94(0, v23[2] + 1, 1, v23, &qword_1E95EDC50, &qword_1E95EDC58);
      *uint64_t v22 = (uint64_t)v23;
    }
    unint64_t v26 = v23[2];
    unint64_t v25 = v23[3];
    if (v26 >= v25 >> 1) {
      *uint64_t v22 = (uint64_t)sub_1A3D27C94((void *)(v25 > 1), v26 + 1, 1, v23, &qword_1E95EDC50, &qword_1E95EDC58);
    }
    uint64_t v28 = *(void *)(v43 + 240);
    uint64_t v27 = *(void *)(v43 + 248);
    uint64_t v29 = *(void *)(v43 + 224);
    uint64_t v30 = *(void *)(v43 + 232);
    uint64_t v31 = *(void *)(v43 + 216);
    v42(v30, v28, v31);
    sub_1A3D27E08(v26, v30, v22, v31, (uint64_t)&off_1EF744338, (uint64_t (*)(uint64_t *, uint64_t))sub_1A3C856DC);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v32(v28, v31);
    v20();
    v32(v27, v31);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v33 = *(uint64_t (**)(void))(v43 + 8);
  }
  return v33();
}

uint64_t sub_1A3D26B48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  *(_OWORD *)a3 = *(_OWORD *)a2;
  *(void *)(a3 + 16) = v5;
  *(unsigned char *)(a3 + 24) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBFD8);
  swift_dynamicCast();
  sub_1A3C856DC(&v10, a3 + 32);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for VideoProcessor.Request() + 40);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v8 = sub_1A409658C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a1, v8);
}

uint64_t sub_1A3D26C6C(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return MEMORY[0x1F4188298](sub_1A3D26C90, v2, 0);
}

uint64_t sub_1A3D26C90()
{
  uint64_t v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 104) + 128))();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v19 = v0 + 56;
    uint64_t v4 = (void *)(v1 + 32);
    while (1)
    {
      uint64_t v5 = *(void *)(v0 + 88);
      uint64_t v6 = v4[3];
      uint64_t v7 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v6);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
      uint64_t v8 = *(void *)(v0 + 40);
      uint64_t v9 = *(void *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v8);
      char v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 88))(v5, v8, v9);
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      if (v10) {
        break;
      }
      ++v3;
      v4 += 5;
      if (v2 == v3) {
        goto LABEL_5;
      }
    }
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v12 = *(void *)(v0 + 104);
    swift_bridgeObjectRelease();
    uint64_t v14 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(*(void *)v12 + 144))(v19);
    sub_1A3D26E8C(v3, v0 + 16);
    v14(v19, 0);
    uint64_t v15 = *(void *)(v0 + 40);
    uint64_t v16 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v15, v16);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v11 = 1;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
  }
  uint64_t v17 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v17(v11);
}

uint64_t sub_1A3D26E8C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A3D27DD0(v5);
    uint64_t v5 = (void *)result;
  }
  unint64_t v7 = v5[2];
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = (long long *)&v5[5 * a1];
    sub_1A3C856DC(v9 + 2, a2);
    uint64_t result = (uint64_t)memmove(v9 + 2, (char *)v9 + 72, 40 * (v8 - a1));
    v5[2] = v8;
    *uint64_t v2 = v5;
  }
  return result;
}

uint64_t sub_1A3D26F34()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A3D26F54, v0, 0);
}

uint64_t sub_1A3D26F54()
{
  uint64_t v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 128))();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A3D26FD4()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A3D26FF4, v0, 0);
}

uint64_t sub_1A3D26FF4()
{
  char v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 104))();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = v1 & 1;
  return v2(v3);
}

uint64_t sub_1A3D27078()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A3D27098, v0, 0);
}

uint64_t sub_1A3D27098()
{
  (*(void (**)(uint64_t))(**(void **)(v0 + 16) + 112))(1);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3D2711C(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_1A3D2713C, v1, 0);
}

uint64_t sub_1A3D2713C()
{
  uint64_t v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 64) + 128))();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      uint64_t v4 = *(void *)(v0 + 56);
      sub_1A3C85678(v3, v0 + 16);
      uint64_t v5 = *(void *)(v0 + 40);
      uint64_t v6 = *(void *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v5, v6);
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      v3 += 40;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  unint64_t v7 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(**(void **)(v0 + 64) + 144))(v0 + 16);
  void *v8 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  v7(v0 + 16, 0);
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1A3D272A4()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1A3D272DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v4 = sub_1A409658C();
  uint64_t v5 = sub_1A409692C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  uint64_t v8 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a1, v4);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);

  return v6(v3, 0, 1, v4);
}

uint64_t sub_1A3D27410()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 89, 7);
}

uint64_t sub_1A3D27450()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A3C8A9A4;
  return sub_1A3D22D64((uint64_t)v3, v4, v5, v2, v0 + 40);
}

uint64_t sub_1A3D274EC()
{
  return v0;
}

uint64_t sub_1A3D274F8(void *a1)
{
  id v1 = a1;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  sub_1A409658C();
  return sub_1A409657C();
}

void sub_1A3D27580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6 = *(unsigned __int8 *)(v5 + 24);
  if (v6 != 255)
  {
    CMTimeValue v7 = *(void *)v5;
    if ((v6 & 1) == 0)
    {
      uint64_t v9 = *(void *)(v5 + 8);
      CMTimeEpoch v8 = *(void *)(v5 + 16);
      time.CMTimeValue value = sub_1A40967DC();
      time.uint64_t timescale = v10;
      time.uint64_t flags = v11;
      time.CMTimeEpoch epoch = v12;
      double Seconds = CMTimeGetSeconds(&time);
      time.CMTimeValue value = v7;
      *(void *)&time.uint64_t timescale = v9;
      time.CMTimeEpoch epoch = v8;
      double v14 = ceil(Seconds / CMTimeGetSeconds(&time));
      if ((~*(void *)&v14 & 0x7FF0000000000000) != 0)
      {
        if (v14 > -2147483650.0)
        {
          if (v14 < 2147483650.0)
          {
            time.CMTimeValue value = v7;
            *(void *)&time.uint64_t timescale = v9;
            time.CMTimeEpoch epoch = v8;
            CMTimeMultiply(&v15, &time, (int)v14);
            sub_1A40967CC();
            sub_1A40966AC();
            sub_1A40967BC();
            return;
          }
          goto LABEL_14;
        }
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        return;
      }
      __break(1u);
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    if (!v7) {
      goto LABEL_12;
    }
    if (a5 == 0x8000000000000000 && v7 == -1) {
      goto LABEL_15;
    }
  }
}

uint64_t sub_1A3D27724()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v0 = sub_1A409654C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v13 - v2;
  uint64_t v4 = swift_checkMetadataState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  CMTimeValue v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  CMTimeScale v10 = (char *)v13 - v9;
  sub_1A3CCA998(v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF700);
  swift_dynamicCast();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_1A409658C();
  sub_1A409656C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_1A3D27978@<X0>(uint64_t a1@<X8>)
{
  return sub_1A3C85678(v1 + 32, a1);
}

uint64_t VideoProcessor.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision14VideoProcessor_url;
  uint64_t v2 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t VideoProcessor.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision14VideoProcessor_url;
  uint64_t v2 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A3D27AC8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A3CCBBD8;
  return v6(a1);
}

uint64_t sub_1A3D27BA4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3D27BDC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A3C8A9A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E95EDBF0 + dword_1E95EDBF0);
  return v6(a1, v4);
}

void *sub_1A3D27C94(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    __n128 v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_1A3D27DD0(void *a1)
{
  return sub_1A3D27C94(0, a1[2], 0, a1, &qword_1E95EDC50, &qword_1E95EDC58);
}

uint64_t sub_1A3D27E08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, uint64_t))
{
  v14[3] = a4;
  v14[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v12 = *a3;
  *(void *)(v12 + 16) = a1 + 1;
  return a6(v14, v12 + 40 * a1 + 32);
}

uint64_t type metadata accessor for VideoProcessor.Request()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1A3D27ECC()
{
  unint64_t result = qword_1E95EDC48;
  if (!qword_1E95EDC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDC48);
  }
  return result;
}

uint64_t sub_1A3D27F20()
{
  return type metadata accessor for VideoProcessor();
}

uint64_t type metadata accessor for VideoProcessor()
{
  uint64_t result = qword_1E9606D00;
  if (!qword_1E9606D00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A3D27F74()
{
  uint64_t result = sub_1A4095B9C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for VideoProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VideoProcessor);
}

uint64_t dispatch thunk of VideoProcessor.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for VideoProcessor.Cadence(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoProcessor.Cadence(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A3D280E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1A3D280E8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VideoProcessor.Cadence()
{
  return &type metadata for VideoProcessor.Cadence;
}

uint64_t sub_1A3D28104()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t result = sub_1A409658C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1A3D281E0(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
    long long v7 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)((char *)a1 + 56) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 2), (uint64_t)(a2 + 4));
    uint64_t v8 = *(int *)(a3 + 40);
    unint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
    uint64_t v11 = sub_1A409658C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_1A3D28334(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v5 = sub_1A409658C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

_OWORD *sub_1A3D283E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  long long v6 = *(_OWORD *)((char *)a2 + 56);
  *(_OWORD *)((char *)a1 + 56) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v10 = sub_1A409658C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A3D284EC(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v6 = *a2;
  *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
  *(_OWORD *)a1 = v6;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)a2 + 4);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v10 = sub_1A409658C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unsigned int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *unsigned int v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unsigned int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1A3D287EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v8 = sub_1A409658C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1A3D288BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  uint64_t v10 = sub_1A409658C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A3D2899C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D289B0);
}

uint64_t sub_1A3D289B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
    uint64_t v8 = sub_1A409658C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A3D28A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D28AB0);
}

uint64_t sub_1A3D28AB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 56) = (a2 - 1);
  }
  else
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
    uint64_t v7 = sub_1A409658C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A3D28B94()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E95EFEF0);
  sub_1A409659C();

  return swift_getWitnessTable();
}

unint64_t sub_1A3D28C1C()
{
  unint64_t result = qword_1E95EDC78;
  if (!qword_1E95EDC78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EDC78);
  }
  return result;
}

uint64_t sub_1A3D28C5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  v23[3] = v7;
  uint64_t v21 = *(void *)(v6 + 8);
  v23[4] = v21;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  uint64_t v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
  v10(boxed_opaque_existential_1, v8, v7);
  uint64_t v11 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a4 + 32))(v22, a3, a4);
  uint64_t v13 = v12;
  size_t v14 = (void *)*v12;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v13 = (uint64_t)v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1A3C965CC(0, v14[2] + 1, 1, v14);
    size_t v14 = (void *)isUniquelyReferenced_nonNull_native;
    *uint64_t v13 = isUniquelyReferenced_nonNull_native;
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1A3C965CC((void *)(v16 > 1), v17 + 1, 1, v14);
    *uint64_t v13 = isUniquelyReferenced_nonNull_native;
  }
  MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
  uint64_t v19 = (uint64_t *)&v22[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10(v19, boxed_opaque_existential_1, v7);
  sub_1A3C966F0(v17, (uint64_t)v19, v13, v7, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v11(v22, 0);
}

void sub_1A3D28E34(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  NormalizedRect.init(normalizedRect:)(*(__C::CGRect *)&a3);
  sub_1A3C7E530(&v9);
  char v8 = v9;
  NormalizedRect.toImageCoordinates(_:origin:)((CGSize)__PAIR128__((double)a2, (double)a1), (Vision::CoordinateOrigin)&v8);
}

uint64_t sub_1A3D28EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *(void *)(type metadata accessor for VisionResult(0) - 8);
  v4[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A3D28F64, 0, 0);
}

uint64_t sub_1A3D28F64()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v1 + 72);
  *(unsigned char *)(v0 + 104) = v2;
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v5 = *(void *)(v1 + 40);
    uint64_t v3 = *(void *)(v1 + 24);
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 64) = v3;
  uint64_t v6 = sub_1A3D292FC(v3, v4, v5, v2, *(void *)(v0 + 24), *(void *)(v0 + 32));
  uint64_t v12 = v6;
  if (v6)
  {
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(char *))(v0 + 8);
    return v13(v12);
  }
  else
  {
    size_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 32) + 56)
                                                            + **(int **)(*(void *)(v0 + 32) + 56));
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1A3D290E8;
    uint64_t v8 = *(void *)(v0 + 32);
    uint64_t v10 = *(void *)(v0 + 16);
    uint64_t v9 = *(void *)(v0 + 24);
    return v14(v10, v9, v8);
  }
}

uint64_t sub_1A3D290E8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3D291E8, 0, 0);
}

uint64_t sub_1A3D291E8()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v6 = *(void *)(v0 + 72);
      uint64_t v5 = *(void *)(v0 + 80);
      char v7 = *(unsigned char *)(v0 + 104);
      uint64_t v9 = *(void *)(v0 + 56);
      uint64_t v8 = *(void *)(v0 + 64);
      sub_1A3C8B4E0(v4, v9);
      sub_1A3D29B68(v9, v8, v6, v5, v7);
      sub_1A3C8B544(v9);
      v4 += v12;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = *(void *)(v0 + 96);
  }
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v10(v1);
}

char *sub_1A3D292FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a3;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2E0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for VisionResult(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
  if (!*(void *)(v17 + 16))
  {
    uint64_t v29 = 0;
    long long v27 = 0u;
    long long v28 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A3C85678(v17 + 32, (uint64_t)&v27);
  swift_bridgeObjectRelease();
  if (!*((void *)&v28 + 1))
  {
LABEL_8:
    uint64_t v20 = (uint64_t *)&unk_1E95ED340;
    uint64_t v21 = (char *)&v27;
LABEL_9:
    sub_1A3CA2EB8((uint64_t)v21, v20);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2C0);
  if (!swift_dynamicCast()) {
    return 0;
  }
  if (a4)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v18 = v26;
  uint64_t ObjectType = swift_getObjectType();
  sub_1A3C8E41C(v24, v25, v30, ObjectType, v18, (uint64_t)v12);
  if (!v6)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      sub_1A3C85558((uint64_t)v12, (uint64_t)v16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC068);
      unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v12 = (char *)swift_allocObject();
      *((_OWORD *)v12 + 1) = xmmword_1A40E7700;
      sub_1A3C85558((uint64_t)v16, (uint64_t)&v12[v23]);
      swift_unknownObjectRelease();
      return v12;
    }
    swift_unknownObjectRelease();
    uint64_t v20 = &qword_1E95EC2E0;
    uint64_t v21 = v12;
    goto LABEL_9;
  }
  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_1A3D295B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[4] = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 64) + **(int **)(a3 + 64));
  uint64_t v8 = (void *)swift_task_alloc();
  v4[7] = v8;
  void *v8 = v4;
  v8[1] = sub_1A3D296BC;
  return v10(a1, a2, a3);
}

uint64_t sub_1A3D296BC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A3D29924;
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    uint64_t v5 = sub_1A3D297E4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A3D297E4()
{
  uint64_t v1 = sub_1A3D299F0(v0[9]);
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_1A4096BEC();
  }
  uint64_t v2 = (*(uint64_t (**)(void))(v0[5] + 16))(v0[4]);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A3D29C54(v2, v1);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_1A3D29924()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = (*(uint64_t (**)(void))(v0[5] + 16))(v0[4]);
  id v3 = v1;
  uint64_t v4 = sub_1A3D29DDC(v2, v1);

  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_1A3D299F0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1A3C84628(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1A3C8D3F0(i, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC088);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_1A3C856DC(v8, (uint64_t)v11);
      sub_1A3C856DC(v11, (uint64_t)v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A3C84628(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A3C84628((void *)(v5 > 1), v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      sub_1A3C856DC(v8, v3 + 40 * v6 + 32);
      if (!--v2) {
        return v3;
      }
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    swift_release();
    sub_1A3CA2EB8((uint64_t)v8, &qword_1E95ECD38);
    return 0;
  }
  return v3;
}

uint64_t sub_1A3D29B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_1A3CC8CB8(v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2C0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(v12 + 48))(a1, a2, a3, a4, a5 & 1, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A3D29C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisionResult(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1A3C84608(0, v8, 0);
    uint64_t v9 = v16;
    uint64_t v10 = a1 + 32;
    do
    {
      sub_1A3C85678(v10, (uint64_t)v15);
      swift_bridgeObjectRetain();
      sub_1A3CC5D9C((uint64_t)v15, a2, 0, (uint64_t)v7);
      uint64_t v16 = v9;
      unint64_t v12 = *(void *)(v9 + 16);
      unint64_t v11 = *(void *)(v9 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1A3C84608(v11 > 1, v12 + 1, 1);
        uint64_t v9 = v16;
      }
      *(void *)(v9 + 16) = v12 + 1;
      sub_1A3C85558((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v12);
      v10 += 40;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1A3D29DDC(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for VisionResult(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1A3C84608(0, v8, 0);
    uint64_t v9 = v17;
    uint64_t v10 = a1 + 32;
    do
    {
      sub_1A3C85678(v10, (uint64_t)v16);
      id v11 = a2;
      sub_1A3CC5D9C((uint64_t)v16, 0, a2, (uint64_t)v7);
      uint64_t v17 = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1A3C84608(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v17;
      }
      *(void *)(v9 + 16) = v13 + 1;
      sub_1A3C85558((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13);
      v10 += 40;
      --v8;
    }
    while (v8);
  }
  return v9;
}

unint64_t sub_1A3D29F64()
{
  unint64_t result = 1684632949;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E656469666E6F63;
      break;
    case 2:
      unint64_t result = 0x676E6152656D6974;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D29FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D2B5E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D2A020(uint64_t a1)
{
  unint64_t v2 = sub_1A3C80D74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D2A05C(uint64_t a1)
{
  unint64_t v2 = sub_1A3C80D74();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D2A098(char *a1, char *a2)
{
  return sub_1A3D2A214(*a1, *a2);
}

uint64_t sub_1A3D2A0A4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65756C6176;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65756C6176;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6C616373656D6974;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      uint64_t v5 = 0x7367616C66;
      break;
    case 3:
      uint64_t v5 = 0x68636F7065;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000065;
      if (v5 == 0x6C616373656D6974) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x7367616C66;
      goto LABEL_9;
    case 3:
      if (v5 == 0x68636F7065) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1A4096E5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1A3D2A214(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 6581861;
  }
  else {
    uint64_t v3 = 0x7472617473;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE300000000000000;
  }
  if (a2) {
    uint64_t v5 = 6581861;
  }
  else {
    uint64_t v5 = 0x7472617473;
  }
  if (a2) {
    unint64_t v6 = 0xE300000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1A3D2A2B0()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D2A328()
{
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D2A38C()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D2A400@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A4096C5C();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1A3D2A460(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6581861;
  if (!*v1) {
    uint64_t v2 = 0x7472617473;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A3D2A494()
{
  if (*v0) {
    return 6581861;
  }
  else {
    return 0x7472617473;
  }
}

uint64_t sub_1A3D2A4C4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A4096C5C();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1A3D2A528(uint64_t a1)
{
  unint64_t v2 = sub_1A3D2B8B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D2A564(uint64_t a1)
{
  unint64_t v2 = sub_1A3D2B8B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D2A5A0(unsigned __int8 *a1, char *a2)
{
  return sub_1A3D2A0A4(*a1, *a2);
}

uint64_t sub_1A3D2A5AC()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D2A678()
{
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D2A72C()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D2A7F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A3D2B7A0();
  *a1 = result;
  return result;
}

void sub_1A3D2A824(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x65756C6176;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000065;
      uint64_t v3 = 0x6C616373656D6974;
      goto LABEL_3;
    case 2:
      *a1 = 0x7367616C66;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x68636F7065;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A3D2A8B0()
{
  uint64_t result = 0x65756C6176;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C616373656D6974;
      break;
    case 2:
      uint64_t result = 0x7367616C66;
      break;
    case 3:
      uint64_t result = 0x68636F7065;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D2A930@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A3D2B7A0();
  *a1 = result;
  return result;
}

uint64_t sub_1A3D2A958(uint64_t a1)
{
  unint64_t v2 = sub_1A3D2B90C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D2A994(uint64_t a1)
{
  unint64_t v2 = sub_1A3D2B90C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D2A9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDC90);
  uint64_t v34 = *(void *)(v32 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v32);
  uint64_t v35 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v36 = (char *)&v30 - v9;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDC98);
  uint64_t v33 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  id v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A4095C7C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void (**)(void, void))(a4 + 40);
  uint64_t v38 = v4;
  uint64_t v39 = a2;
  v16(a2, a4);
  LOBYTE(v48) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  sub_1A3D2B7EC();
  uint64_t v17 = v40;
  sub_1A4096DBC();
  if (v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  char v40 = v11;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v19 = v39;
  (*(void (**)(uint64_t, uint64_t))(a4 + 48))(v39, a4);
  LOBYTE(v48) = 1;
  sub_1A4096D9C();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 64))(&v48, v19, a4);
  char v47 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE88);
  sub_1A3D2B844();
  sub_1A4096DBC();
  uint64_t v31 = 0;
  LOBYTE(v48) = 2;
  sub_1A3D2B8B8();
  uint64_t v20 = v40;
  sub_1A4096D5C();
  LOBYTE(v48) = 0;
  sub_1A3D2B90C();
  uint64_t v21 = v36;
  sub_1A4096D5C();
  LOBYTE(v48) = 1;
  uint64_t v22 = v35;
  sub_1A4096D5C();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 56))(v41, v39, a4);
  sub_1A3C7D648((uint64_t)v41, (uint64_t)v42);
  if (v43)
  {
    uint64_t v23 = v32;
    uint64_t v24 = v34;
    uint64_t v25 = v33;
LABEL_5:
    uint64_t v26 = *(void (**)(void, void))(v24 + 8);
    v26(v22, v23);
    v26(v21, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v20, v37);
  }
  long long v44 = v42[0];
  long long v45 = v42[1];
  long long v46 = v42[2];
  uint64_t v27 = v31;
  sub_1A3D2AFA8();
  if (!v27)
  {
    sub_1A40966AC();
    sub_1A3D2AFA8();
    uint64_t v24 = v34;
    uint64_t v25 = v33;
    uint64_t v31 = 0;
    uint64_t v23 = v32;
    goto LABEL_5;
  }
  long long v28 = *(void (**)(void, void))(v34 + 8);
  uint64_t v29 = v32;
  v28(v22, v32);
  v28(v21, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v20, v37);
}

uint64_t sub_1A3D2AFA8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDC90);
  uint64_t result = sub_1A4096DDC();
  if (!v0)
  {
    sub_1A4096DDC();
    sub_1A4096DCC();
    return sub_1A4096DEC();
  }
  return result;
}

uint64_t sub_1A3D2B06C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDCC0);
  uint64_t v2 = sub_1A4096D1C();
  if (!v0)
  {
    uint64_t v1 = v2;
    sub_1A4096D0C();
    sub_1A4096D2C();
    sub_1A4096D1C();
  }
  return v1;
}

uint64_t sub_1A3D2B130@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDCC0);
  uint64_t v39 = *(void *)(v1 - 8);
  uint64_t v2 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v30 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDCC8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v48 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  sub_1A3D2B8B8();
  uint64_t v14 = v41;
  uint64_t result = sub_1A4096C7C();
  if (!v14)
  {
    uint64_t v37 = v4;
    uint64_t v38 = v7;
    uint64_t v16 = v40;
    uint64_t v41 = v11;
    char v48 = 0;
    sub_1A3D2B90C();
    sub_1A4096C7C();
    char v48 = 1;
    uint64_t v17 = v38;
    sub_1A4096C7C();
    uint64_t v35 = v10;
    long long v36 = v9;
    char v48 = 0;
    char v18 = sub_1A4096D4C();
    uint64_t v19 = v39;
    uint64_t v20 = v37;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v37, v17, v1);
    uint64_t v21 = v17;
    if (v18)
    {
      char v48 = 0;
      char v22 = sub_1A4096D4C();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v19 + 8);
      v23(v20, v1);
      if (v22)
      {
        uint64_t v31 = v23;
        sub_1A3D2B06C();
        uint64_t v39 = v26;
        uint64_t v27 = v38;
        sub_1A3D2B06C();
        sub_1A40966BC();
        LODWORD(v39) = 0;
        uint64_t v37 = v42;
        uint64_t v33 = v44;
        uint64_t v34 = v43;
        uint64_t v28 = v46;
        uint64_t v32 = v45;
        uint64_t v29 = v47;
        uint64_t v23 = v31;
        v31(v27, v1);
LABEL_9:
        v23(v36, v1);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v13, v35);
        uint64_t v24 = v34;
        *(void *)uint64_t v16 = v37;
        *(void *)(v16 + 8) = v24;
        uint64_t v25 = v32;
        *(void *)(v16 + 16) = v33;
        *(void *)(v16 + 24) = v25;
        *(void *)(v16 + 32) = v28;
        *(void *)(v16 + 40) = v29;
        *(unsigned char *)(v16 + 48) = v39;
        return result;
      }
    }
    else
    {
      uint64_t v23 = *(void (**)(char *, uint64_t))(v19 + 8);
      v23(v20, v1);
    }
    uint64_t v37 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v32 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    LODWORD(v39) = 1;
    v23(v21, v1);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1A3D2B5E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A40B5450)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A3D2B7A0()
{
  unint64_t v0 = sub_1A4096C5C();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A3D2B7EC()
{
  unint64_t result = qword_1E95EDCA0;
  if (!qword_1E95EDCA0)
  {
    sub_1A4095C7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCA0);
  }
  return result;
}

unint64_t sub_1A3D2B844()
{
  unint64_t result = qword_1E95EDCA8;
  if (!qword_1E95EDCA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EBE88);
    sub_1A3C81220();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCA8);
  }
  return result;
}

unint64_t sub_1A3D2B8B8()
{
  unint64_t result = qword_1E95EDCB0;
  if (!qword_1E95EDCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCB0);
  }
  return result;
}

unint64_t sub_1A3D2B90C()
{
  unint64_t result = qword_1E95EDCB8;
  if (!qword_1E95EDCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCB8);
  }
  return result;
}

unint64_t sub_1A3D2B964()
{
  unint64_t result = qword_1E95EDCD0;
  if (!qword_1E95EDCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCD0);
  }
  return result;
}

unint64_t sub_1A3D2B9BC()
{
  unint64_t result = qword_1E95EDCD8;
  if (!qword_1E95EDCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCD8);
  }
  return result;
}

unint64_t sub_1A3D2BA14()
{
  unint64_t result = qword_1E95EDCE0;
  if (!qword_1E95EDCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCE0);
  }
  return result;
}

unint64_t sub_1A3D2BA6C()
{
  unint64_t result = qword_1E95EDCE8;
  if (!qword_1E95EDCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCE8);
  }
  return result;
}

unint64_t sub_1A3D2BAC4()
{
  unint64_t result = qword_1E95EDCF0;
  if (!qword_1E95EDCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCF0);
  }
  return result;
}

unint64_t sub_1A3D2BB1C()
{
  unint64_t result = qword_1E95EDCF8;
  if (!qword_1E95EDCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDCF8);
  }
  return result;
}

unint64_t sub_1A3D2BB74()
{
  unint64_t result = qword_1E95EDD00;
  if (!qword_1E95EDD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDD00);
  }
  return result;
}

unint64_t sub_1A3D2BBCC()
{
  unint64_t result = qword_1E95EDD08;
  if (!qword_1E95EDD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDD08);
  }
  return result;
}

unint64_t sub_1A3D2BC24()
{
  unint64_t result = qword_1E95EDD10;
  if (!qword_1E95EDD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDD10);
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservationCodingKeys()
{
  return &type metadata for ObservationCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CMTimeRangeCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D2BD58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CMTimeRangeCodingKeys()
{
  return &type metadata for CMTimeRangeCodingKeys;
}

unsigned char *_s6Vision21ObservationCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D2BE5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CMTimeCodingKeys()
{
  return &type metadata for CMTimeCodingKeys;
}

id sub_1A3D2BE94(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC5C8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1A40EFEC0;
  sub_1A3D2C080();
  *(void *)(v6 + 32) = sub_1A409685C();
  uint64_t v7 = (void *)sub_1A409685C();
  *(void *)(v6 + 40) = v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  if (v3)
  {

    *(void *)(v6 + 16) = 0;
    swift_release();
  }
  else
  {
    uint64_t v9 = v8;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    MEMORY[0x1A6254030](v9, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    *(void *)(v6 + 48) = sub_1A409685C();
    sub_1A409632C();
    objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
    id v2 = sub_1A3D2C494(v6, 65600);
    MEMORY[0x1F4188790](v2);
    sub_1A40966EC();
  }
  return v2;
}

unint64_t sub_1A3D2C080()
{
  unint64_t result = qword_1E95EFED0;
  if (!qword_1E95EFED0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EFED0);
  }
  return result;
}

void sub_1A3D2C0C0(uint64_t *a1, void *a2, uint64_t *a3, char *a4, uint64_t a5)
{
  void (*v38)(uint64_t *__return_ptr, char *, char *, uint64_t);
  uint64_t v39;
  void (**v40)(char *, uint64_t);
  id v41;
  uint64_t v42;
  uint64_t AssociatedTypeWitness;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  float v48;

  uint64_t v6 = v5;
  uint64_t v7 = a5;
  uint64_t v44 = a1;
  uint64_t v42 = *(void *)(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(uint64_t **)(AssociatedTypeWitness - 8);
  *(void *)&double v12 = MEMORY[0x1F4188790](AssociatedTypeWitness).n128_u64[0];
  uint64_t v14 = (char *)v35 - v13;
  id v15 = objc_msgSend(a2, sel_strides, v12);
  sub_1A3D2C080();
  uint64_t v16 = sub_1A409630C();

  if ((v16 & 0xC000000000000001) != 0) {
    goto LABEL_21;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    for (id i = *(id *)(v16 + 48); ; id i = (id)MEMORY[0x1A6254720](2, v16))
    {
      char v18 = i;
      swift_bridgeObjectRelease();
      id v19 = objc_msgSend(v18, sel_integerValue);

      uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 24))(a4, v7);
      if (v6) {
        break;
      }
      uint64_t v21 = v20;
      uint64_t v41 = v19;
      uint64_t v22 = MEMORY[0x1A6254030](v20, AssociatedTypeWitness);
      if (v22 < 0) {
        goto LABEL_23;
      }
      uint64_t v16 = v22;
      if (!v22)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        return;
      }
      v35[1] = 0;
      uint64_t v7 = 0;
      uint64_t v38 = *(void (**)(uint64_t *__return_ptr, char *, char *, uint64_t))(v42 + 88);
      uint64_t v39 = v42 + 88;
      uint64_t v40 = (void (**)(char *, uint64_t))(v11 + 1);
      unint64_t v37 = (unint64_t)v41 + 0x4000000000000000;
      uint64_t v36 = 2 * (void)v41;
      while (v16 != v7)
      {
        uint64_t v6 = v21;
        uint64_t v23 = AssociatedTypeWitness;
        sub_1A409641C();
        uint64_t v11 = a3;
        uint64_t v24 = a4;
        v38(&v45, v14, a4, v42);
        uint64_t v25 = *v40;
        (*v40)(v14, v23);
        if (!v47)
        {
          uint64_t v45 = 0;
          uint64_t v46 = 0xE000000000000000;
          sub_1A4096A2C();
          sub_1A409621C();
          uint64_t v31 = AssociatedTypeWitness;
          sub_1A409641C();
          swift_bridgeObjectRelease();
          sub_1A4096E2C();
          v25(v14, v31);
          uint64_t v32 = v45;
          unint64_t v33 = v46;
          sub_1A3C85624();
          swift_allocError();
          *(void *)uint64_t v34 = v32;
          *(void *)(v34 + 8) = v33;
          *(_DWORD *)(v34 + 16) = 0;
          *(unsigned char *)(v34 + 20) = 0;
          swift_willThrow();
          return;
        }
        float v26 = v48;
        uint64_t v28 = v45;
        unint64_t v27 = v46;
        a3 = &v45;
        *(double *)&v44[v7] = NormalizedPoint.x.getter();
        a4 = (char *)v41 + v7;
        if (__OFADD__(v7, v41)) {
          goto LABEL_18;
        }
        uint64_t v45 = v28;
        uint64_t v46 = v27;
        double v29 = NormalizedPoint.y.getter();
        a3 = v44;
        *(double *)&v44[(void)a4] = v29;
        swift_bridgeObjectRelease();
        if ((v37 & 0x8000000000000000) != 0) {
          goto LABEL_19;
        }
        uint64_t v30 = v7 + v36;
        if (__OFADD__(v7, v36)) {
          goto LABEL_20;
        }
        ++v7;
        *(double *)&a3[v30] = v26;
        a4 = v24;
        a3 = v11;
        uint64_t v21 = v6;
        if (v16 == v7) {
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      ;
    }
  }
}

id sub_1A3D2C494(uint64_t a1, uint64_t a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1A3D2C080();
  unsigned int v4 = (void *)sub_1A40962FC();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  id v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_1A4095AEC();

    swift_willThrow();
  }
  return v5;
}

void sub_1A3D2C580(uint64_t *a1)
{
  sub_1A3D2C0C0(a1, *(void **)(v1 + 32), *(uint64_t **)(v1 + 40), *(char **)(v1 + 16), *(void *)(v1 + 24));
}

id HumanBodyPoseObservation.keypoints.getter()
{
  uint64_t v0 = type metadata accessor for HumanBodyPoseObservation();
  uint64_t v1 = sub_1A3D2C6D8(&qword_1E95EDD18, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  return sub_1A3D2BE94(v0, v1);
}

uint64_t type metadata accessor for HumanBodyPoseObservation()
{
  uint64_t result = qword_1E9607FB0;
  if (!qword_1E9607FB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HumanBodyPoseObservation.allJoints(in:)(char *a1)
{
  char v4 = *a1;
  uint64_t v1 = type metadata accessor for HumanBodyPoseObservation();
  uint64_t v2 = sub_1A3D2C6D8(&qword_1E95EDD20, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  return sub_1A3D65800((uint64_t)&v4, v1, v2);
}

uint64_t sub_1A3D2C6D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HumanBodyPoseObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A4095C7C();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

float HumanBodyPoseObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for HumanBodyPoseObservation() + 20));
}

__n128 HumanBodyPoseObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HumanBodyPoseObservation() + 24);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t HumanBodyPoseObservation.description.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v29 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - v8;
  MEMORY[0x1F4188790](v10);
  double v12 = (char *)&v29 - v11;
  unint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  unint64_t v33 = 0xD000000000000025;
  unint64_t v34 = 0x80000001A40B5550;
  uint64_t v13 = (int *)type metadata accessor for HumanBodyPoseObservation();
  unint64_t v31 = *(void *)(*(void *)(v0 + v13[8]) + 16);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v14 = v13[9];
  uint64_t v29 = v0;
  uint64_t v15 = v0 + v14;
  sub_1A3D2CCF8(v0 + v14, (uint64_t)v12);
  uint64_t v16 = type metadata accessor for HumanHandPoseObservation();
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  int v18 = v17(v12, 1, v16);
  sub_1A3CA2EB8((uint64_t)v12, &qword_1E95EDD28);
  if (v18 != 1)
  {
    unint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    unint64_t v31 = 0xD000000000000012;
    unint64_t v32 = 0x80000001A40B55A0;
    sub_1A3D2CCF8(v15, (uint64_t)v9);
    uint64_t result = v17(v9, 1, v16);
    if (result == 1)
    {
      __break(1u);
      goto LABEL_9;
    }
    uint64_t v20 = *(void *)&v9[*(int *)(v16 + 36)];
    swift_bridgeObjectRetain();
    sub_1A3D32908((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRelease();
    uint64_t v30 = v21;
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = v29 + v13[10];
  sub_1A3D2CCF8(v22, (uint64_t)v6);
  int v23 = v17(v6, 1, v16);
  sub_1A3CA2EB8((uint64_t)v6, &qword_1E95EDD28);
  if (v23 == 1)
  {
LABEL_7:
    unint64_t v27 = v33;
    unint64_t v26 = v34;
    unint64_t v31 = 8236;
    unint64_t v32 = 0xE200000000000000;
    uint64_t v28 = sub_1A3D2C6D8(&qword_1E95EDD30, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
    sub_1A3D8AC8C((uint64_t)v13, (uint64_t)&off_1EF74A930, v28);
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    unint64_t v31 = v27;
    unint64_t v32 = v26;
    swift_bridgeObjectRetain();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v31;
  }
  unint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  unint64_t v31 = 0xD000000000000013;
  unint64_t v32 = 0x80000001A40B5580;
  sub_1A3D2CCF8(v22, (uint64_t)v3);
  uint64_t result = v17(v3, 1, v16);
  if (result != 1)
  {
    uint64_t v24 = *(void *)&v3[*(int *)(v16 + 36)];
    swift_bridgeObjectRetain();
    sub_1A3D32908((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
    uint64_t v25 = *(void *)(v24 + 16);
    swift_bridgeObjectRelease();
    uint64_t v30 = v25;
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1A3D2CCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HumanBodyPoseObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for HumanBodyPoseObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

Vision::HumanBodyPoseObservation::JointName_optional __swiftcall HumanBodyPoseObservation.JointName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A4096E7C();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 19;
  if (v3 < 0x13) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t HumanBodyPoseObservation.JointName.rawValue.getter()
{
  uint64_t result = 0x7261457466656CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6579457466656CLL;
      break;
    case 2:
      uint64_t result = 0x7261457468676972;
      break;
    case 3:
      uint64_t result = 0x6579457468676972;
      break;
    case 4:
      uint64_t result = 1801676142;
      break;
    case 5:
      uint64_t result = 1702063982;
      break;
    case 6:
      uint64_t result = 0x756F68537466656CLL;
      break;
    case 7:
      uint64_t result = 0x6F626C457466656CLL;
      break;
    case 8:
      uint64_t result = 0x736972577466656CLL;
      break;
    case 9:
      uint64_t result = 0x6F68537468676972;
      break;
    case 0xA:
      uint64_t result = 0x626C457468676972;
      break;
    case 0xB:
      uint64_t result = 0x6972577468676972;
      break;
    case 0xC:
      uint64_t result = 1953460082;
      break;
    case 0xD:
      uint64_t result = 0x7069487466656CLL;
      break;
    case 0xE:
      uint64_t result = 0x65656E4B7466656CLL;
      break;
    case 0xF:
      uint64_t result = 0x6C6B6E417466656CLL;
      break;
    case 0x10:
      uint64_t result = 0x7069487468676972;
      break;
    case 0x11:
      uint64_t result = 0x656E4B7468676972;
      break;
    case 0x12:
      uint64_t result = 0x6B6E417468676972;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D2D044()
{
  return sub_1A3D2D124();
}

uint64_t sub_1A3D2D050()
{
  sub_1A409617C();
  uint64_t v0 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v1 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A409617C();
  uint64_t v4 = v3;
  if (v2 == sub_1A409617C() && v4 == v5) {
    char v6 = 1;
  }
  else {
    char v6 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v6 & 1;
}

uint64_t sub_1A3D2D124()
{
  uint64_t v0 = HumanBodyPoseObservation.JointName.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == HumanBodyPoseObservation.JointName.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A3D2D1BC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701011814;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701011814;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F73726F74;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6D72417466656CLL;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6D72417468676972;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x67654C7466656CLL;
      break;
    case 5:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x67654C7468676972;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6F73726F74) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6D72417466656CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6D72417468676972) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x67654C7466656CLL;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x67654C7468676972) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1A4096E5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Vision::HumanBodyPoseObservation::JointName_optional sub_1A3D2D3B0(Swift::String *a1)
{
  return HumanBodyPoseObservation.JointName.init(rawValue:)(*a1);
}

uint64_t sub_1A3D2D3BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HumanBodyPoseObservation.JointName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A3D2D3E4()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D2D44C()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D2D554()
{
  HumanBodyPoseObservation.JointName.rawValue.getter();
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D2D5B8()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D2D61C()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D2D720()
{
  return sub_1A40962CC();
}

uint64_t sub_1A3D2D780()
{
  return sub_1A40962AC();
}

Vision::HumanBodyPoseObservation::JointsGroupName_optional __swiftcall HumanBodyPoseObservation.JointsGroupName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A4096C5C();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static HumanBodyPoseObservation.JointsGroupName.allCases.getter()
{
  return &unk_1EF74A3B8;
}

uint64_t HumanBodyPoseObservation.JointsGroupName.rawValue.getter()
{
  uint64_t result = 1701011814;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F73726F74;
      break;
    case 2:
      uint64_t result = 0x6D72417466656CLL;
      break;
    case 3:
      uint64_t result = 0x6D72417468676972;
      break;
    case 4:
      uint64_t result = 0x67654C7466656CLL;
      break;
    case 5:
      uint64_t result = 0x67654C7468676972;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D2D8F4(unsigned __int8 *a1, char *a2)
{
  return sub_1A3D2D1BC(*a1, *a2);
}

Vision::HumanBodyPoseObservation::JointsGroupName_optional sub_1A3D2D900(Swift::String *a1)
{
  return HumanBodyPoseObservation.JointsGroupName.init(rawValue:)(*a1);
}

void sub_1A3D2D90C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701011814;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6F73726F74;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D72417466656CLL;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x6D72417468676972;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x67654C7466656CLL;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 0x67654C7468676972;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_1A3D2D9DC(void *a1@<X8>)
{
  *a1 = &unk_1EF74A3B8;
}

uint64_t sub_1A3D2D9EC()
{
  return sub_1A3D2D44C();
}

uint64_t sub_1A3D2D9F4()
{
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D2DAE4()
{
  return sub_1A3D2D61C();
}

uint64_t HumanBodyPoseObservation.leftHand.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HumanBodyPoseObservation() + 36);

  return sub_1A3D2CCF8(v3, a1);
}

uint64_t HumanBodyPoseObservation.rightHand.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HumanBodyPoseObservation() + 40);

  return sub_1A3D2CCF8(v3, a1);
}

uint64_t sub_1A3D2DB78(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            return 1;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    unsigned __int8 v14 = *(unsigned char *)(*(void *)(v2 + 48) + v10);
    swift_bridgeObjectRetain();
    sub_1A3D310CC(v14);
    if ((v15 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    sub_1A3C97B1C();
    char v16 = sub_1A409612C();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t HumanBodyPoseObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D2DE0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A4095C7C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

float sub_1A3D2DE74(uint64_t a1)
{
  return *(float *)(v1 + *(int *)(a1 + 20));
}

__n128 sub_1A3D2DE80@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 24);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(unsigned char *)(a2 + 48) = v4;
  return result;
}

uint64_t sub_1A3D2DEA4@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *(_WORD *)(v2 + *(int *)(result + 28));
  return result;
}

uint64_t sub_1A3D2DEB4(uint64_t a1)
{
  uint64_t v2 = sub_1A3D2C6D8(&qword_1E95EDD20, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);

  return sub_1A3D65D74(a1, v2);
}

uint64_t sub_1A3D2DF20()
{
  sub_1A3D2C6D8(&qword_1E95EDD20, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);

  return sub_1A3D65E58();
}

uint64_t sub_1A3D2DF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D2C6D8(&qword_1E95EDD20, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);

  return sub_1A3D65728(a1, a2, v4);
}

uint64_t sub_1A3D2E010(char *a1, uint64_t a2)
{
  char v5 = *a1;
  uint64_t v3 = sub_1A3D2C6D8(&qword_1E95EDD20, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  return sub_1A3D65800((uint64_t)&v5, a2, v3);
}

uint64_t sub_1A3D2E084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D2C6D8(&qword_1E95EDD30, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3D2E108()
{
  uint64_t result = 0x746176726573626FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E696F4A6C6C61;
      break;
    case 2:
      uint64_t result = 0x646E61487466656CLL;
      break;
    case 3:
      uint64_t result = 0x6E61487468676972;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D2E1AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D32B2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D2E1D4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D327A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D2E210(uint64_t a1)
{
  unint64_t v2 = sub_1A3D327A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HumanBodyPoseObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
  MEMORY[0x1F4188790](v36);
  unint64_t v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v35 = (char *)&v30 - v5;
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v37 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v38 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD40);
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  MEMORY[0x1F4188790](v11);
  int64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for HumanBodyPoseObservation();
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D327A8();
  uint64_t v17 = (uint64_t)v43;
  sub_1A4096FDC();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v31 = v8;
  unint64_t v32 = v10;
  uint64_t v18 = v40;
  uint64_t v43 = a1;
  uint64_t v19 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD48);
  char v44 = 1;
  sub_1A3D32968(&qword_1E95EDD50, (void (*)(void))sub_1A3D327FC, (void (*)(void))sub_1A3D32850);
  sub_1A4096CFC();
  uint64_t v20 = v13;
  uint64_t v21 = (int *)v14;
  *(void *)&v16[*(int *)(v14 + 32)] = v46;
  LOBYTE(v46) = 0;
  sub_1A3C80D74();
  sub_1A4096C7C();
  uint64_t v30 = v20;
  LOBYTE(v46) = 0;
  sub_1A3D2C6D8((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  uint64_t v22 = v37;
  sub_1A4096CFC();
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v22, v18);
  LOBYTE(v46) = 1;
  sub_1A4096CDC();
  *(_DWORD *)&v16[v21[5]] = v23;
  char v44 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  *(_WORD *)&v16[v21[7]] = v46;
  sub_1A3D2B130((uint64_t)v45);
  sub_1A3CCB8B8((uint64_t)v45, (uint64_t)&v16[v21[6]], &qword_1E95EBE78);
  LOBYTE(v46) = 2;
  uint64_t v24 = sub_1A3D32A98(&qword_1E95EDD68, &qword_1E95EDD70);
  uint64_t v25 = (uint64_t)v35;
  uint64_t v26 = v42;
  unint64_t v37 = (char *)v24;
  unint64_t v27 = v30;
  sub_1A4096CFC();
  sub_1A3CCB8B8(v25, (uint64_t)&v16[v21[9]], &qword_1E95EDD28);
  LOBYTE(v46) = 3;
  uint64_t v28 = (uint64_t)v34;
  sub_1A4096CFC();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v26);
  sub_1A3CCB8B8(v28, (uint64_t)&v16[v21[10]], &qword_1E95EDD28);
  sub_1A3D328A4((uint64_t)v16, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return sub_1A3D32908((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for HumanBodyPoseObservation);
}

uint64_t HumanBodyPoseObservation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD78);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D327A8();
  sub_1A4096FEC();
  uint64_t v12 = type metadata accessor for HumanBodyPoseObservation();
  uint64_t v22 = *(void *)(v3 + *(int *)(v12 + 32));
  char v21 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD48);
  sub_1A3D32968(&qword_1E95EDD80, (void (*)(void))sub_1A3D329F0, (void (*)(void))sub_1A3D32A44);
  sub_1A4096DBC();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v15 = v9;
  char v20 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
  sub_1A3D32A98(&qword_1E95EDD98, &qword_1E95EDDA0);
  sub_1A4096DBC();
  char v19 = 3;
  sub_1A4096DBC();
  char v18 = 0;
  sub_1A3C80D74();
  sub_1A4096D5C();
  uint64_t v14 = sub_1A3D2C6D8(&qword_1E95EDD30, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  sub_1A3D2A9D0((uint64_t)v7, v12, (uint64_t)&off_1EF74A930, v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v8);
}

uint64_t sub_1A3D2EE00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HumanBodyPoseObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3D2EE18(void *a1)
{
  return HumanBodyPoseObservation.encode(to:)(a1);
}

void *sub_1A3D2EE30(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = type metadata accessor for HumanBodyPoseObservation();
  uint64_t result = 0;
  unsigned int v5 = *(unsigned __int16 *)(v1 + *(int *)(v3 + 28));
  if (v5 <= 0xFFF7)
  {
    if (v5 >> 3 == 12)
    {
      uint64_t result = &unk_1EF74A5E8;
      switch(v2)
      {
        case 1:
          uint64_t result = &unk_1EF74A520;
          break;
        case 2:
          uint64_t result = &unk_1EF74A548;
          break;
        case 3:
          uint64_t result = &unk_1EF74A570;
          break;
        case 4:
          uint64_t result = &unk_1EF74A598;
          break;
        case 5:
          uint64_t result = &unk_1EF74A5C0;
          break;
        default:
          return result;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A3D2EF0C()
{
  return swift_bridgeObjectRetain();
}

id sub_1A3D2EF1C(uint64_t a1, uint64_t a2)
{
  return sub_1A3D2BE94(a1, a2);
}

void *sub_1A3D2EF34()
{
  uint64_t result = sub_1A3D32D10();
  if (!v0) {
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1A3D2EF5C(void *a1@<X0>, char *a2@<X8>)
{
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  unsigned int v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1A409617C();
  uint64_t v8 = v7;
  if (v6 == sub_1A409617C() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  char v11 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_10:

    char v18 = 0;
    goto LABEL_11;
  }
  sub_1A409617C();
  uint64_t v12 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  int64_t v13 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1A409617C();
  uint64_t v16 = v15;
  if (v14 == sub_1A409617C() && v16 == v17)
  {

    swift_bridgeObjectRelease_n();
LABEL_13:

    char v18 = 1;
    goto LABEL_11;
  }
  char v19 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_13;
  }
  sub_1A409617C();
  char v20 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v21 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1A409617C();
  uint64_t v24 = v23;
  if (v22 == sub_1A409617C() && v24 == v25)
  {

    swift_bridgeObjectRelease_n();
LABEL_18:

    char v18 = 2;
    goto LABEL_11;
  }
  char v26 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_18;
  }
  sub_1A409617C();
  unint64_t v27 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v28 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_1A409617C();
  uint64_t v31 = v30;
  if (v29 == sub_1A409617C() && v31 == v32)
  {

    swift_bridgeObjectRelease_n();
LABEL_23:

    char v18 = 3;
    goto LABEL_11;
  }
  char v33 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_23;
  }
  sub_1A409617C();
  unint64_t v34 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v35 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_1A409617C();
  uint64_t v38 = v37;
  if (v36 == sub_1A409617C() && v38 == v39)
  {

    swift_bridgeObjectRelease_n();
LABEL_28:

    char v18 = 4;
    goto LABEL_11;
  }
  char v40 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v40) {
    goto LABEL_28;
  }
  sub_1A409617C();
  uint64_t v41 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v42 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_1A409617C();
  uint64_t v45 = v44;
  if (v43 == sub_1A409617C() && v45 == v46)
  {

    swift_bridgeObjectRelease_n();
LABEL_33:

    char v18 = 5;
    goto LABEL_11;
  }
  char v47 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v47) {
    goto LABEL_33;
  }
  sub_1A409617C();
  char v48 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v49 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_1A409617C();
  uint64_t v52 = v51;
  if (v50 == sub_1A409617C() && v52 == v53)
  {

    swift_bridgeObjectRelease_n();
LABEL_38:

    char v18 = 6;
    goto LABEL_11;
  }
  char v54 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v54) {
    goto LABEL_38;
  }
  sub_1A409617C();
  uint64_t v55 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v56 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v57 = sub_1A409617C();
  uint64_t v59 = v58;
  if (v57 == sub_1A409617C() && v59 == v60)
  {

    swift_bridgeObjectRelease_n();
LABEL_43:

    char v18 = 7;
    goto LABEL_11;
  }
  char v61 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v61) {
    goto LABEL_43;
  }
  sub_1A409617C();
  uint64_t v62 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v63 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v64 = sub_1A409617C();
  uint64_t v66 = v65;
  if (v64 == sub_1A409617C() && v66 == v67)
  {

    swift_bridgeObjectRelease_n();
LABEL_48:

    char v18 = 8;
    goto LABEL_11;
  }
  char v68 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v68) {
    goto LABEL_48;
  }
  sub_1A409617C();
  uint64_t v69 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  unint64_t v70 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v71 = sub_1A409617C();
  uint64_t v73 = v72;
  if (v71 == sub_1A409617C() && v73 == v74)
  {

    swift_bridgeObjectRelease_n();
LABEL_53:

    char v18 = 9;
    goto LABEL_11;
  }
  char v75 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v75) {
    goto LABEL_53;
  }
  sub_1A409617C();
  uint64_t v76 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v77 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v78 = sub_1A409617C();
  uint64_t v80 = v79;
  if (v78 == sub_1A409617C() && v80 == v81)
  {

    swift_bridgeObjectRelease_n();
LABEL_58:

    char v18 = 10;
    goto LABEL_11;
  }
  char v82 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v82) {
    goto LABEL_58;
  }
  sub_1A409617C();
  v83 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v84 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v85 = sub_1A409617C();
  uint64_t v87 = v86;
  if (v85 == sub_1A409617C() && v87 == v88)
  {

    swift_bridgeObjectRelease_n();
LABEL_63:

    char v18 = 11;
    goto LABEL_11;
  }
  char v89 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v89) {
    goto LABEL_63;
  }
  sub_1A409617C();
  v90 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v91 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v92 = sub_1A409617C();
  uint64_t v94 = v93;
  if (v92 == sub_1A409617C() && v94 == v95)
  {

    swift_bridgeObjectRelease_n();
LABEL_68:

    char v18 = 12;
    goto LABEL_11;
  }
  char v96 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v96) {
    goto LABEL_68;
  }
  sub_1A409617C();
  v97 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v98 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v99 = sub_1A409617C();
  uint64_t v101 = v100;
  if (v99 == sub_1A409617C() && v101 == v102)
  {

    swift_bridgeObjectRelease_n();
LABEL_73:

    char v18 = 13;
    goto LABEL_11;
  }
  char v103 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v103) {
    goto LABEL_73;
  }
  sub_1A409617C();
  v104 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v105 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v106 = sub_1A409617C();
  uint64_t v108 = v107;
  if (v106 == sub_1A409617C() && v108 == v109)
  {

    swift_bridgeObjectRelease_n();
LABEL_78:

    char v18 = 14;
    goto LABEL_11;
  }
  char v110 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v110) {
    goto LABEL_78;
  }
  sub_1A409617C();
  v111 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v112 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v113 = sub_1A409617C();
  uint64_t v115 = v114;
  if (v113 == sub_1A409617C() && v115 == v116)
  {

    swift_bridgeObjectRelease_n();
LABEL_83:

    char v18 = 15;
    goto LABEL_11;
  }
  char v117 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v117) {
    goto LABEL_83;
  }
  sub_1A409617C();
  v118 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v119 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v120 = sub_1A409617C();
  uint64_t v122 = v121;
  if (v120 == sub_1A409617C() && v122 == v123)
  {

    swift_bridgeObjectRelease_n();
LABEL_88:

    char v18 = 16;
    goto LABEL_11;
  }
  char v124 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v124) {
    goto LABEL_88;
  }
  sub_1A409617C();
  v125 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v126 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v127 = sub_1A409617C();
  uint64_t v129 = v128;
  if (v127 == sub_1A409617C() && v129 == v130)
  {

    swift_bridgeObjectRelease_n();
LABEL_93:

    char v18 = 17;
    goto LABEL_11;
  }
  char v131 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v131) {
    goto LABEL_93;
  }
  sub_1A409617C();
  v132 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v133 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v134 = sub_1A409617C();
  uint64_t v136 = v135;
  if (v134 == sub_1A409617C() && v136 == v137)
  {
    id v138 = a1;

    swift_bridgeObjectRelease_n();
    char v18 = 18;
  }
  else
  {
    char v139 = sub_1A4096E5C();
    id v140 = a1;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v139) {
      char v18 = 18;
    }
    else {
      char v18 = 19;
    }
  }
LABEL_11:
  *a2 = v18;
}

uint64_t sub_1A3D2FE8C@<X0>(id a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v60 = a4;
  uint64_t v61 = a5;
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v62 = &v56[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v59 = &v56[-v11];
  MEMORY[0x1F4188790](v12);
  uint64_t v58 = &v56[-v13];
  int v57 = *a2;
  uint64_t v14 = *a3;
  uint64_t v15 = a3[1];
  uint64_t v16 = a3[2];
  uint64_t v17 = a3[3];
  unint64_t v18 = sub_1A3D305CC(MEMORY[0x1E4FBC860]);
  id v19 = objc_msgSend(a1, sel_availableJointNames);
  type metadata accessor for JointName(0);
  uint64_t v20 = sub_1A409630C();

  uint64_t v21 = *(void *)(v20 + 16);
  id v63 = a1;
  if (v21)
  {
    for (uint64_t i = 0; i != v21; ++i)
    {
      uint64_t v25 = *(void **)(v20 + 8 * i + 32);
      *(void *)&long long v65 = 0;
      id v26 = v25;
      id v27 = objc_msgSend(a1, sel_recognizedPointForJointName_error_, v26, &v65);
      uint64_t v28 = (void *)v65;
      if (v27)
      {
        uint64_t v29 = v27;
        id v30 = v26;
        id v31 = v28;
        sub_1A3D2EF5C(v30, (char *)&v65);
        int v32 = v65;
        if (v65 == 19)
        {
        }
        else
        {
          objc_msgSend(v29, sel_location);
          Vision::NormalizedPoint v35 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v34, v33));
          uint64_t v36 = 0xE700000000000000;
          uint64_t v37 = 0x7261457466656CLL;
          switch(v32)
          {
            case 1:
              uint64_t v37 = 0x6579457466656CLL;
              break;
            case 2:
              uint64_t v36 = 0xE800000000000000;
              uint64_t v37 = 0x7261457468676972;
              break;
            case 3:
              uint64_t v36 = 0xE800000000000000;
              uint64_t v37 = 0x6579457468676972;
              break;
            case 4:
              uint64_t v36 = 0xE400000000000000;
              uint64_t v37 = 1801676142;
              break;
            case 5:
              uint64_t v36 = 0xE400000000000000;
              uint64_t v37 = 1702063982;
              break;
            case 6:
              uint64_t v36 = 0xEC0000007265646CLL;
              uint64_t v37 = 0x756F68537466656CLL;
              break;
            case 7:
              uint64_t v36 = 0xE900000000000077;
              uint64_t v37 = 0x6F626C457466656CLL;
              break;
            case 8:
              uint64_t v36 = 0xE900000000000074;
              uint64_t v37 = 0x736972577466656CLL;
              break;
            case 9:
              uint64_t v36 = 0xED00007265646C75;
              uint64_t v37 = 0x6F68537468676972;
              break;
            case 10:
              uint64_t v36 = 0xEA0000000000776FLL;
              uint64_t v37 = 0x626C457468676972;
              break;
            case 11:
              uint64_t v36 = 0xEA00000000007473;
              uint64_t v37 = 0x6972577468676972;
              break;
            case 12:
              uint64_t v36 = 0xE400000000000000;
              uint64_t v37 = 1953460082;
              break;
            case 13:
              uint64_t v37 = 0x7069487466656CLL;
              break;
            case 14:
              uint64_t v36 = 0xE800000000000000;
              uint64_t v37 = 0x65656E4B7466656CLL;
              break;
            case 15:
              uint64_t v37 = 0x6C6B6E417466656CLL;
              goto LABEL_26;
            case 16:
              uint64_t v36 = 0xE800000000000000;
              uint64_t v37 = 0x7069487468676972;
              break;
            case 17:
              uint64_t v37 = 0x656E4B7468676972;
LABEL_26:
              uint64_t v36 = 0xE900000000000065;
              break;
            case 18:
              uint64_t v37 = 0x6B6E417468676972;
              uint64_t v36 = 0xEA0000000000656CLL;
              break;
            default:
              break;
          }
          objc_msgSend(v29, sel_confidence, v35.cgPoint.x, v35.cgPoint.y);
          sub_1A3C977C4(&v65, v37, v36, (uint64_t)v64, v38);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v65 = v18;
          sub_1A3D31CAC((uint64_t)v64, v32, isUniquelyReferenced_nonNull_native);
          unint64_t v18 = v65;

          swift_bridgeObjectRelease();
          a1 = v63;
        }
      }
      else
      {
        id v23 = (id)v65;
        uint64_t v24 = (void *)sub_1A4095AEC();

        swift_willThrow();
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = type metadata accessor for HumanHandPoseObservation();
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  uint64_t v42 = (uint64_t)v58;
  v41(v58, 1, 1, v40);
  uint64_t v43 = (uint64_t)v59;
  v41(v59, 1, 1, v40);
  id v44 = objc_msgSend(a1, sel_leftHand);
  uint64_t v45 = v60;
  if (v44)
  {
    __int16 v68 = 112;
    *(void *)&long long v65 = v14;
    *((void *)&v65 + 1) = v15;
    uint64_t v66 = v16;
    uint64_t v67 = v17;
    uint64_t v46 = v62;
    sub_1A3DDE04C(v44, &v68, v60, v62);
    sub_1A3CA2EB8(v42, &qword_1E95EDD28);
    v41(v46, 0, 1, v40);
    sub_1A3CCB8B8((uint64_t)v46, v42, &qword_1E95EDD28);
  }
  id v47 = objc_msgSend(v63, sel_rightHand);
  if (v47)
  {
    __int16 v68 = 112;
    *(void *)&long long v65 = v14;
    *((void *)&v65 + 1) = v15;
    uint64_t v66 = v16;
    uint64_t v67 = v17;
    char v48 = v62;
    sub_1A3DDE04C(v47, &v68, v45, v62);
    sub_1A3CA2EB8(v43, &qword_1E95EDD28);
    v41(v48, 0, 1, v40);
    sub_1A3CCB8B8((uint64_t)v48, v43, &qword_1E95EDD28);
  }
  id v49 = v63;
  id v50 = objc_msgSend(v63, sel_uuid);
  uint64_t v51 = v61;
  sub_1A4095C5C();

  objc_msgSend(v49, sel_confidence);
  int v53 = v52;

  char v54 = (int *)type metadata accessor for HumanBodyPoseObservation();
  *(_DWORD *)(v51 + v54[5]) = v53;
  sub_1A3CCB8B8(v45, v51 + v54[6], &qword_1E95EBE78);
  *(_WORD *)(v51 + v54[7]) = v57;
  *(void *)(v51 + v54[8]) = v18;
  sub_1A3CCB8B8(v42, v51 + v54[9], &qword_1E95EDD28);
  return sub_1A3CCB8B8(v43, v51 + v54[10], &qword_1E95EDD28);
}

unint64_t sub_1A3D305CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE30);
  uint64_t v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_DWORD *)(a1 + 72);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 40);
    uint64_t v6 = *((void *)v4 - 4);
    uint64_t v7 = *((void *)v4 - 3);
    uint64_t v9 = *((void *)v4 - 2);
    uint64_t v8 = *((void *)v4 - 1);
    int v10 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3D310CC(v5);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v13 = v2[7] + 40 * result;
    *(void *)uint64_t v13 = v6;
    *(void *)(v13 + 8) = v7;
    *(void *)(v13 + 16) = v9;
    *(void *)(v13 + 24) = v8;
    *(_DWORD *)(v13 + 32) = v10;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t HumanBodyPoseObservation.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int16 v7 = -8;
  static NormalizedRect.fullImage.getter(v6);
  objc_msgSend(a1, sel_timeRange, *(_OWORD *)v6, *(_OWORD *)&v6[1]);
  char v9 = 0;
  return sub_1A3D2FE8C(a1, &v7, (uint64_t *)&v5, (uint64_t)&v8, a2);
}

uint64_t sub_1A3D30784@<X0>(void *a1@<X0>, unsigned __int16 *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned __int16 v8 = *a2;
  long long v5 = a3[1];
  v7[0] = *a3;
  v7[1] = v5;
  return sub_1A3D2FE8C(a1, &v8, (uint64_t *)v7, a4, a5);
}

uint64_t sub_1A3D307BC(uint64_t a1, uint64_t a2)
{
  return sub_1A3D30D70(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1A3D307D8(uint64_t a1, id *a2)
{
  uint64_t result = sub_1A409615C();
  *a2 = 0;
  return result;
}

uint64_t sub_1A3D3086C(uint64_t a1, id *a2)
{
  char v3 = sub_1A409616C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A3D3090C@<X0>(uint64_t *a1@<X8>)
{
  sub_1A409617C();
  uint64_t v2 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v3 = sub_1A409614C();

  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1A3D30970()
{
  return sub_1A3D2D050();
}

uint64_t sub_1A3D3097C(uint64_t a1, uint64_t a2)
{
  return sub_1A3D30F04(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1A3D30994(uint64_t a1, id *a2)
{
  uint64_t result = sub_1A409615C();
  *a2 = 0;
  return result;
}

uint64_t sub_1A3D30A0C(uint64_t a1, id *a2)
{
  char v3 = sub_1A409616C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A3D30A8C@<X0>(uint64_t *a1@<X8>)
{
  sub_1A409617C();
  uint64_t v2 = sub_1A409614C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A3D30AD0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  char v3 = *a1;
  sub_1A409617C();
  uint64_t v4 = sub_1A409614C();

  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1A3D30B20@<X0>(uint64_t *a1@<X8>)
{
  sub_1A409617C();
  uint64_t v2 = sub_1A409614C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A3D30B68()
{
  uint64_t v0 = sub_1A409617C();
  uint64_t v2 = v1;
  if (v0 == sub_1A409617C() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A3D30BF4(uint64_t a1)
{
  uint64_t v2 = sub_1A3D2C6D8((unint64_t *)&unk_1E95F0090, type metadata accessor for JointName);
  uint64_t v3 = sub_1A3D2C6D8(&qword_1E95EDE20, type metadata accessor for JointName);
  uint64_t v4 = sub_1A3D2C6D8(&qword_1E95EDE28, type metadata accessor for VNRecognizedPointKey);

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A3D30CE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A409614C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A3D30D2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A409617C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A3D30D58(uint64_t a1, uint64_t a2)
{
  return sub_1A3D30D70(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1A3D30D70(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1A409617C();
  uint64_t v6 = a3(v5);

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A3D30DDC()
{
  sub_1A409617C();
  uint64_t v0 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D30E58()
{
  sub_1A409617C();
  uint64_t v0 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  sub_1A4096F2C();
  sub_1A40961CC();
  uint64_t v1 = sub_1A4096F7C();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A3D30EEC(uint64_t a1, uint64_t a2)
{
  return sub_1A3D30F04(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1A3D30F04(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1A409617C();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A3D30F48()
{
  sub_1A409617C();
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D30F9C()
{
  sub_1A409617C();
  sub_1A4096F2C();
  sub_1A40961CC();
  uint64_t v0 = sub_1A4096F7C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A3D31010(uint64_t a1)
{
  uint64_t v2 = sub_1A3D2C6D8(&qword_1E95EDE28, type metadata accessor for VNRecognizedPointKey);
  uint64_t v3 = sub_1A3D2C6D8(&qword_1E95EDE50, type metadata accessor for VNRecognizedPointKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

unint64_t sub_1A3D310CC(unsigned __int8 a1)
{
  sub_1A4096F2C();
  HumanBodyPoseObservation.JointName.rawValue.getter();
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A4096F7C();

  return sub_1A3D31158(a1, v2);
}

unint64_t sub_1A3D31158(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE700000000000000;
      uint64_t v8 = 0x7261457466656CLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x6579457466656CLL;
          break;
        case 2:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7261457468676972;
          break;
        case 3:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6579457468676972;
          break;
        case 4:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1801676142;
          break;
        case 5:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1702063982;
          break;
        case 6:
          uint64_t v8 = 0x756F68537466656CLL;
          unint64_t v7 = 0xEC0000007265646CLL;
          break;
        case 7:
          unint64_t v7 = 0xE900000000000077;
          uint64_t v8 = 0x6F626C457466656CLL;
          break;
        case 8:
          unint64_t v7 = 0xE900000000000074;
          uint64_t v8 = 0x736972577466656CLL;
          break;
        case 9:
          uint64_t v8 = 0x6F68537468676972;
          unint64_t v7 = 0xED00007265646C75;
          break;
        case 0xA:
          uint64_t v8 = 0x626C457468676972;
          uint64_t v9 = 30575;
          goto LABEL_23;
        case 0xB:
          unint64_t v7 = 0xEA00000000007473;
          uint64_t v8 = 0x6972577468676972;
          break;
        case 0xC:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1953460082;
          break;
        case 0xD:
          uint64_t v8 = 0x7069487466656CLL;
          break;
        case 0xE:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x65656E4B7466656CLL;
          break;
        case 0xF:
          uint64_t v8 = 0x6C6B6E417466656CLL;
          goto LABEL_21;
        case 0x10:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7069487468676972;
          break;
        case 0x11:
          uint64_t v8 = 0x656E4B7468676972;
LABEL_21:
          unint64_t v7 = 0xE900000000000065;
          break;
        case 0x12:
          uint64_t v8 = 0x6B6E417468676972;
          uint64_t v9 = 25964;
LABEL_23:
          unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xE700000000000000;
      switch(v6)
      {
        case 1:
          if (v8 == 0x6579457466656CLL) {
            goto LABEL_26;
          }
          goto LABEL_27;
        case 2:
          unint64_t v10 = 0xE800000000000000;
          if (v8 != 0x7261457468676972) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 3:
          unint64_t v10 = 0xE800000000000000;
          if (v8 != 0x6579457468676972) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 4:
          unint64_t v10 = 0xE400000000000000;
          if (v8 != 1801676142) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 5:
          unint64_t v10 = 0xE400000000000000;
          if (v8 != 1702063982) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 6:
          unint64_t v10 = 0xEC0000007265646CLL;
          if (v8 != 0x756F68537466656CLL) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 7:
          unint64_t v10 = 0xE900000000000077;
          if (v8 != 0x6F626C457466656CLL) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 8:
          unint64_t v10 = 0xE900000000000074;
          if (v8 != 0x736972577466656CLL) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 9:
          unint64_t v10 = 0xED00007265646C75;
          if (v8 != 0x6F68537468676972) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 10:
          uint64_t v12 = 0x626C457468676972;
          uint64_t v13 = 30575;
          goto LABEL_64;
        case 11:
          unint64_t v10 = 0xEA00000000007473;
          if (v8 != 0x6972577468676972) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 12:
          unint64_t v10 = 0xE400000000000000;
          if (v8 != 1953460082) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 13:
          if (v8 != 0x7069487466656CLL) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 14:
          unint64_t v10 = 0xE800000000000000;
          if (v8 != 0x65656E4B7466656CLL) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 15:
          unint64_t v10 = 0xE900000000000065;
          if (v8 != 0x6C6B6E417466656CLL) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 16:
          unint64_t v10 = 0xE800000000000000;
          if (v8 != 0x7069487468676972) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 17:
          unint64_t v10 = 0xE900000000000065;
          if (v8 != 0x656E4B7468676972) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 18:
          uint64_t v12 = 0x6B6E417468676972;
          uint64_t v13 = 25964;
LABEL_64:
          unint64_t v10 = v13 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
          if (v8 != v12) {
            goto LABEL_27;
          }
          goto LABEL_26;
        default:
          if (v8 != 0x7261457466656CLL) {
            goto LABEL_27;
          }
LABEL_26:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_27:
          char v11 = sub_1A4096E5C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_1A3D31734(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE30);
  char v39 = a2;
  uint64_t v6 = sub_1A4096C1C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v12 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v37)
  {
    swift_release();
    uint64_t v3 = v36;
    uint64_t v22 = (void *)(v5 + 64);
    if (v39)
    {
LABEL_37:
      uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
      if (v34 >= 64) {
        bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v22 = -1 << v34;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v38 + 8 * v21);
    ++v12;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v12 = v21 + 1;
    if (v21 + 1 >= v37) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v38 + 8 * v12);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      uint64_t v30 = *(void *)(v5 + 56) + 40 * v20;
      long long v40 = *(_OWORD *)v30;
      uint64_t v32 = *(void *)(v30 + 16);
      uint64_t v31 = *(void *)(v30 + 24);
      int v33 = *(_DWORD *)(v30 + 32);
      if ((v39 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1A4096F2C();
      sub_1A40961CC();
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_1A4096F7C();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      while (++v16 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
        if (v28 != -1)
        {
          unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
LABEL_8:
          *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
          *(unsigned char *)(*(void *)(v7 + 48) + v17) = v29;
          uint64_t v18 = *(void *)(v7 + 56) + 40 * v17;
          *(_OWORD *)uint64_t v18 = v40;
          *(void *)(v18 + 16) = v32;
          *(void *)(v18 + 24) = v31;
          *(_DWORD *)(v18 + 32) = v33;
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x1A3D31C60);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v37)
    {
      unint64_t v23 = *(void *)(v38 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v12 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_43;
          }
          if (v12 >= v37) {
            goto LABEL_34;
          }
          unint64_t v23 = *(void *)(v38 + 8 * v12);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v12 = v24;
      goto LABEL_30;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = v36;
    if (v39) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A3D31CAC(uint64_t a1, unsigned __int8 a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1A3D310CC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < result || (a3 & 1) == 0)
  {
    if (v15 < result || (a3 & 1) != 0)
    {
      sub_1A3D31734(result, a3 & 1);
      uint64_t result = sub_1A3D310CC(a2);
      if ((v14 & 1) != (v18 & 1))
      {
LABEL_17:
        uint64_t result = sub_1A4096EBC();
        __break(1u);
        return result;
      }
      unint64_t v10 = result;
      unint64_t v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_1A3D31E18();
  }
  unint64_t v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    uint64_t v19 = v16[7] + 40 * v10;
    long long v20 = *(_OWORD *)a1;
    long long v21 = *(_OWORD *)(a1 + 16);
    *(_DWORD *)(v19 + 32) = *(_DWORD *)(a1 + 32);
    *(_OWORD *)uint64_t v19 = v20;
    *(_OWORD *)(v19 + 16) = v21;
    uint64_t v22 = v16[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 40 * v10;

  return sub_1A3D3508C(a1, v17);
}

void *sub_1A3D31E18()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 40 * v15;
    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v17 = *(void *)(v16 + 24);
    int v19 = *(_DWORD *)(v16 + 32);
    long long v20 = *(_OWORD *)v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v21 = *(void *)(v4 + 56) + 40 * v15;
    *(_OWORD *)uint64_t v21 = v20;
    *(void *)(v21 + 16) = v18;
    *(void *)(v21 + 24) = v17;
    *(_DWORD *)(v21 + 32) = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL _s6Vision24HumanBodyPoseObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v80 = a2;
  uint64_t v3 = type metadata accessor for HumanHandPoseObservation();
  uint64_t v77 = *(void *)(v3 - 8);
  uint64_t v78 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v76 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE38);
  MEMORY[0x1F4188790](v79);
  uint64_t v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int64_t v9 = (char *)&v67 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v67 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v67 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v67 - v20;
  MEMORY[0x1F4188790](v22);
  int64_t v24 = (char *)&v67 - v23;
  MEMORY[0x1F4188790](v25);
  BOOL v27 = (char *)&v67 - v26;
  uint64_t v28 = a1;
  uint64_t v29 = v80;
  if ((sub_1A4095C4C() & 1) == 0) {
    return 0;
  }
  uint64_t v71 = v6;
  uint64_t v72 = v24;
  uint64_t v73 = v27;
  uint64_t v74 = v21;
  uint64_t v75 = (uint64_t)v9;
  uint64_t v30 = v79;
  uint64_t v69 = v15;
  unint64_t v70 = v18;
  __int16 v68 = v12;
  uint64_t v31 = type metadata accessor for HumanBodyPoseObservation();
  if (*(float *)(v28 + *(int *)(v31 + 20)) != *(float *)(v29 + *(int *)(v31 + 20))) {
    return 0;
  }
  uint64_t v32 = (int *)v31;
  uint64_t v33 = *(int *)(v31 + 24);
  uint64_t v34 = (uint64_t *)(v28 + v33);
  char v35 = *(unsigned char *)(v28 + v33 + 48);
  uint64_t v36 = (uint64_t *)(v29 + v33);
  if (v35)
  {
    if (!*((unsigned char *)v36 + 48)) {
      return 0;
    }
  }
  else
  {
    if (v36[6]) {
      return 0;
    }
    uint64_t v37 = *v34;
    uint64_t v38 = v34[1];
    long long v39 = *((_OWORD *)v34 + 1);
    uint64_t v41 = v34[4];
    uint64_t v40 = v34[5];
    uint64_t v42 = *v36;
    uint64_t v43 = v36[1];
    long long v44 = *((_OWORD *)v36 + 1);
    uint64_t v46 = v36[4];
    uint64_t v45 = v36[5];
    uint64_t v83 = v37;
    uint64_t v84 = v38;
    long long v85 = v39;
    uint64_t v86 = v41;
    uint64_t v87 = v40;
    uint64_t v88 = v42;
    uint64_t v89 = v43;
    long long v90 = v44;
    uint64_t v91 = v46;
    uint64_t v92 = v45;
    if ((sub_1A409669C() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v47 = v32[7];
  unsigned int v48 = *(unsigned __int16 *)(v28 + v47);
  unsigned int v49 = *(unsigned __int16 *)(v29 + v47);
  if (v48 <= 0xFFF7)
  {
    __int16 v82 = v48;
    uint64_t v50 = (uint64_t)v74;
    uint64_t v51 = v75;
    uint64_t v52 = (uint64_t)v73;
    uint64_t v53 = (uint64_t)v72;
    if (v49 > 0xFFF7) {
      return 0;
    }
    __int16 v81 = v49 & 0x1FF;
    sub_1A3C832B8();
    if ((sub_1A409612C() & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v50 = (uint64_t)v74;
    uint64_t v51 = v75;
    uint64_t v52 = (uint64_t)v73;
    uint64_t v53 = (uint64_t)v72;
    if (v49 <= 0xFFF7) {
      return 0;
    }
  }
  if ((sub_1A3D2DB78(*(void *)(v28 + v32[8]), *(void *)(v29 + v32[8])) & 1) == 0) {
    return 0;
  }
  sub_1A3D2CCF8(v28 + v32[9], v52);
  sub_1A3D2CCF8(v29 + v32[9], v53);
  uint64_t v54 = v51 + *(int *)(v30 + 48);
  sub_1A3D2CCF8(v52, v51);
  sub_1A3D2CCF8(v53, v54);
  uint64_t v55 = v78;
  uint64_t v77 = *(void *)(v77 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v77)(v51, 1, v78) == 1)
  {
    sub_1A3CA2EB8(v53, &qword_1E95EDD28);
    sub_1A3CA2EB8(v52, &qword_1E95EDD28);
    uint64_t v56 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v77;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v77)(v54, 1, v55) == 1)
    {
      sub_1A3CA2EB8(v51, &qword_1E95EDD28);
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v57 = v51;
LABEL_27:
    sub_1A3CA2EB8(v57, &qword_1E95EDE38);
    return 0;
  }
  sub_1A3D2CCF8(v51, v50);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v77)(v54, 1, v55) == 1)
  {
    sub_1A3CA2EB8(v53, &qword_1E95EDD28);
    sub_1A3CA2EB8(v52, &qword_1E95EDD28);
    sub_1A3D32908(v50, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
    goto LABEL_19;
  }
  sub_1A3D350E8(v54, v76);
  sub_1A3D2C6D8(&qword_1E95ED170, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  LODWORD(v75) = sub_1A409612C();
  sub_1A3D32908(v76, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
  sub_1A3CA2EB8(v53, &qword_1E95EDD28);
  sub_1A3CA2EB8(v52, &qword_1E95EDD28);
  sub_1A3D32908(v50, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
  sub_1A3CA2EB8(v51, &qword_1E95EDD28);
  uint64_t v56 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v77;
  if ((v75 & 1) == 0) {
    return 0;
  }
LABEL_21:
  uint64_t v58 = (uint64_t)v70;
  sub_1A3D2CCF8(v28 + v32[10], (uint64_t)v70);
  uint64_t v59 = (uint64_t)v69;
  sub_1A3D2CCF8(v29 + v32[10], (uint64_t)v69);
  uint64_t v60 = (uint64_t)v71;
  uint64_t v61 = (uint64_t)&v71[*(int *)(v79 + 48)];
  sub_1A3D2CCF8(v58, (uint64_t)v71);
  sub_1A3D2CCF8(v59, v61);
  uint64_t v62 = v55;
  if (v56(v60, 1, v55) != 1)
  {
    uint64_t v63 = (uint64_t)v68;
    sub_1A3D2CCF8(v60, (uint64_t)v68);
    if (v56(v61, 1, v62) == 1)
    {
      sub_1A3CA2EB8(v59, &qword_1E95EDD28);
      sub_1A3CA2EB8(v58, &qword_1E95EDD28);
      sub_1A3D32908(v63, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
      goto LABEL_26;
    }
    uint64_t v65 = v76;
    sub_1A3D350E8(v61, v76);
    sub_1A3D2C6D8(&qword_1E95ED170, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
    char v66 = sub_1A409612C();
    sub_1A3D32908(v65, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
    sub_1A3CA2EB8(v59, &qword_1E95EDD28);
    sub_1A3CA2EB8(v58, &qword_1E95EDD28);
    sub_1A3D32908(v63, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
    sub_1A3CA2EB8(v60, &qword_1E95EDD28);
    return (v66 & 1) != 0;
  }
  sub_1A3CA2EB8(v59, &qword_1E95EDD28);
  uint64_t v60 = (uint64_t)v71;
  sub_1A3CA2EB8(v58, &qword_1E95EDD28);
  if (v56(v61, 1, v55) != 1)
  {
LABEL_26:
    uint64_t v57 = v60;
    goto LABEL_27;
  }
  sub_1A3CA2EB8(v60, &qword_1E95EDD28);
  return 1;
}

unint64_t sub_1A3D327A8()
{
  unint64_t result = qword_1E9607620[0];
  if (!qword_1E9607620[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9607620);
  }
  return result;
}

unint64_t sub_1A3D327FC()
{
  unint64_t result = qword_1E95EDD58;
  if (!qword_1E95EDD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDD58);
  }
  return result;
}

unint64_t sub_1A3D32850()
{
  unint64_t result = qword_1E95EDD60;
  if (!qword_1E95EDD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDD60);
  }
  return result;
}

uint64_t sub_1A3D328A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HumanBodyPoseObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D32908(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A3D32968(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EDD48);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D329F0()
{
  unint64_t result = qword_1E95EDD88;
  if (!qword_1E95EDD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDD88);
  }
  return result;
}

unint64_t sub_1A3D32A44()
{
  unint64_t result = qword_1E95EDD90;
  if (!qword_1E95EDD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDD90);
  }
  return result;
}

uint64_t sub_1A3D32A98(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EDD28);
    sub_1A3D2C6D8(a2, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D32B2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F4A6C6C61 && a2 == 0xE900000000000073 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646E61487466656CLL && a2 == 0xE800000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E61487468676972 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void *sub_1A3D32D10()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + *(int *)(type metadata accessor for HumanBodyPoseObservation() + 28));
  if (v1 > 0xFFF7 || v1 >> 3 != 12)
  {
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    if (v1 <= 0xFFF7) {
      RequestDescriptor.description.getter();
    }
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v3 = 0xD000000000000018;
    *(void *)(v3 + 8) = 0x80000001A40B55C0;
    *(_DWORD *)(v3 + 16) = 0;
    *(unsigned char *)(v3 + 20) = 18;
    swift_willThrow();
  }
  return &unk_1EF74A610;
}

void type metadata accessor for JointName(uint64_t a1)
{
}

unint64_t sub_1A3D32E84()
{
  unint64_t result = qword_1E95EDDA8;
  if (!qword_1E95EDDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDDA8);
  }
  return result;
}

unint64_t sub_1A3D32EDC()
{
  unint64_t result = qword_1E95EDDB0;
  if (!qword_1E95EDDB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EDDB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDDB0);
  }
  return result;
}

unint64_t sub_1A3D32F3C()
{
  unint64_t result = qword_1E95EDDC0;
  if (!qword_1E95EDDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDDC0);
  }
  return result;
}

uint64_t sub_1A3D32F90(void *a1)
{
  a1[1] = sub_1A3D2C6D8(&qword_1E95EDDC8, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  a1[2] = sub_1A3D2C6D8(&qword_1E95EDDD0, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  a1[3] = sub_1A3D2C6D8(&qword_1E95EDDD8, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  uint64_t result = sub_1A3D2C6D8(&qword_1E95EDD38, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  a1[4] = result;
  return result;
}

unint64_t sub_1A3D33070()
{
  unint64_t result = qword_1E95EDDE0;
  if (!qword_1E95EDDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDDE0);
  }
  return result;
}

unint64_t sub_1A3D330C8()
{
  unint64_t result = qword_1E95EDDE8;
  if (!qword_1E95EDDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDDE8);
  }
  return result;
}

unint64_t sub_1A3D33120()
{
  unint64_t result = qword_1E95EDDF0;
  if (!qword_1E95EDDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDDF0);
  }
  return result;
}

unint64_t sub_1A3D33178()
{
  unint64_t result = qword_1E95EDDF8;
  if (!qword_1E95EDDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDDF8);
  }
  return result;
}

uint64_t sub_1A3D331CC()
{
  return sub_1A3D2C6D8(&qword_1E95ED160, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
}

uint64_t sub_1A3D33214(uint64_t a1)
{
  uint64_t result = sub_1A3D2C6D8(&qword_1E95EDE00, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3D3326C(uint64_t a1)
{
  uint64_t result = sub_1A3D2C6D8(&qword_1E95EDD30, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HumanBodyPoseObservation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A4095C7C();
    uint64_t v38 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v38(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    int64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)int64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    v9[48] = v10[48];
    uint64_t v12 = a3[8];
    *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v13 = a3[9];
    uint64_t v14 = (char *)a1 + v13;
    unint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = (int *)type metadata accessor for HumanHandPoseObservation();
    uint64_t v37 = *((void *)v16 - 1);
    uint64_t v17 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v37 + 48);
    swift_bridgeObjectRetain();
    if (v17(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      *uint64_t v14 = *v15;
      v38((uint64_t *)&v14[v16[5]], (uint64_t *)&v15[v16[5]], v7);
      *(_DWORD *)&v14[v16[6]] = *(_DWORD *)&v15[v16[6]];
      uint64_t v20 = v16[7];
      uint64_t v21 = &v14[v20];
      uint64_t v22 = &v15[v20];
      v21[48] = v22[48];
      long long v23 = *((_OWORD *)v22 + 2);
      long long v24 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = *((_OWORD *)v22 + 1);
      *((_OWORD *)v21 + 2) = v23;
      *(_OWORD *)uint64_t v21 = v24;
      *(_WORD *)&v14[v16[8]] = *(_WORD *)&v15[v16[8]];
      *(void *)&v14[v16[9]] = *(void *)&v15[v16[9]];
      uint64_t v25 = *(void (**)(unsigned char *, void, uint64_t, int *))(v37 + 56);
      swift_bridgeObjectRetain();
      v25(v14, 0, 1, v16);
    }
    uint64_t v26 = a3[10];
    BOOL v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    if (v17(v28, 1, v16))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      *BOOL v27 = *v28;
      v38((uint64_t *)&v27[v16[5]], (uint64_t *)&v28[v16[5]], v7);
      *(_DWORD *)&v27[v16[6]] = *(_DWORD *)&v28[v16[6]];
      uint64_t v30 = v16[7];
      uint64_t v31 = &v27[v30];
      uint64_t v32 = &v28[v30];
      v31[48] = v32[48];
      long long v33 = *((_OWORD *)v32 + 2);
      long long v34 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = *((_OWORD *)v32 + 1);
      *((_OWORD *)v31 + 2) = v33;
      *(_OWORD *)uint64_t v31 = v34;
      *(_WORD *)&v27[v16[8]] = *(_WORD *)&v28[v16[8]];
      *(void *)&v27[v16[9]] = *(void *)&v28[v16[9]];
      char v35 = *(void (**)(unsigned char *, void, uint64_t, int *))(v37 + 56);
      swift_bridgeObjectRetain();
      v35(v27, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t destroy for HumanBodyPoseObservation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095C7C();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = type metadata accessor for HumanHandPoseObservation();
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v5(v6 + *(int *)(v7 + 20), v4);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 40);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!result)
  {
    v5(v9 + *(int *)(v7 + 20), v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for HumanBodyPoseObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v36(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v11 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = (unsigned char *)(a1 + v12);
  uint64_t v14 = (unsigned char *)(a2 + v12);
  unint64_t v15 = (int *)type metadata accessor for HumanHandPoseObservation();
  uint64_t v35 = *((void *)v15 - 1);
  uint64_t v16 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v35 + 48);
  swift_bridgeObjectRetain();
  if (v16(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    v36((uint64_t)&v13[v15[5]], (uint64_t)&v14[v15[5]], v6);
    *(_DWORD *)&v13[v15[6]] = *(_DWORD *)&v14[v15[6]];
    uint64_t v18 = v15[7];
    uint64_t v19 = &v13[v18];
    uint64_t v20 = &v14[v18];
    v19[48] = v20[48];
    long long v21 = *((_OWORD *)v20 + 2);
    long long v22 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
    *((_OWORD *)v19 + 2) = v21;
    *(_OWORD *)uint64_t v19 = v22;
    *(_WORD *)&v13[v15[8]] = *(_WORD *)&v14[v15[8]];
    *(void *)&v13[v15[9]] = *(void *)&v14[v15[9]];
    long long v23 = *(void (**)(unsigned char *, void, uint64_t, int *))(v35 + 56);
    swift_bridgeObjectRetain();
    v23(v13, 0, 1, v15);
  }
  uint64_t v24 = a3[10];
  uint64_t v25 = (unsigned char *)(a1 + v24);
  uint64_t v26 = (unsigned char *)(a2 + v24);
  if (v16(v26, 1, v15))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *uint64_t v25 = *v26;
    v36((uint64_t)&v25[v15[5]], (uint64_t)&v26[v15[5]], v6);
    *(_DWORD *)&v25[v15[6]] = *(_DWORD *)&v26[v15[6]];
    uint64_t v28 = v15[7];
    uint64_t v29 = &v25[v28];
    uint64_t v30 = &v26[v28];
    v29[48] = v30[48];
    long long v31 = *((_OWORD *)v30 + 2);
    long long v32 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = *((_OWORD *)v30 + 1);
    *((_OWORD *)v29 + 2) = v31;
    *(_OWORD *)uint64_t v29 = v32;
    *(_WORD *)&v25[v15[8]] = *(_WORD *)&v26[v15[8]];
    *(void *)&v25[v15[9]] = *(void *)&v26[v15[9]];
    long long v33 = *(void (**)(unsigned char *, void, uint64_t, int *))(v35 + 56);
    swift_bridgeObjectRetain();
    v33(v25, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for HumanBodyPoseObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 24);
  v54(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 48);
  long long v12 = *(_OWORD *)(v9 + 16);
  long long v11 = *(_OWORD *)(v9 + 32);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v12;
  *(_OWORD *)(v8 + 32) = v11;
  *(unsigned char *)(v8 + 48) = v10;
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[9];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  unint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for HumanHandPoseObservation();
  uint64_t v55 = *((void *)v16 - 1);
  uint64_t v17 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v55 + 48);
  int v18 = v17(v14, 1, v16);
  int v19 = v17(v15, 1, v16);
  if (v18)
  {
    if (!v19)
    {
      *uint64_t v14 = *v15;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 16))(&v14[v16[5]], &v15[v16[5]], v6);
      *(_DWORD *)&v14[v16[6]] = *(_DWORD *)&v15[v16[6]];
      uint64_t v20 = v16[7];
      long long v21 = &v14[v20];
      long long v22 = &v15[v20];
      char v23 = v22[48];
      long long v25 = *((_OWORD *)v22 + 1);
      long long v24 = *((_OWORD *)v22 + 2);
      *(_OWORD *)long long v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      *((_OWORD *)v21 + 2) = v24;
      v21[48] = v23;
      *(_WORD *)&v14[v16[8]] = *(_WORD *)&v15[v16[8]];
      *(void *)&v14[v16[9]] = *(void *)&v15[v16[9]];
      uint64_t v26 = *(void (**)(unsigned char *, void, uint64_t, int *))(v55 + 56);
      swift_bridgeObjectRetain();
      v26(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_1A3D32908((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    memcpy(v14, v15, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v14 = *v15;
  v54((uint64_t)&v14[v16[5]], (uint64_t)&v15[v16[5]], v6);
  *(_DWORD *)&v14[v16[6]] = *(_DWORD *)&v15[v16[6]];
  uint64_t v42 = v16[7];
  uint64_t v43 = &v14[v42];
  long long v44 = &v15[v42];
  char v45 = v44[48];
  long long v47 = *((_OWORD *)v44 + 1);
  long long v46 = *((_OWORD *)v44 + 2);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *((_OWORD *)v43 + 1) = v47;
  *((_OWORD *)v43 + 2) = v46;
  v43[48] = v45;
  *(_WORD *)&v14[v16[8]] = *(_WORD *)&v15[v16[8]];
  *(void *)&v14[v16[9]] = *(void *)&v15[v16[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v28 = a3[10];
  uint64_t v29 = (unsigned char *)(a1 + v28);
  uint64_t v30 = (unsigned char *)(a2 + v28);
  int v31 = v17((unsigned char *)(a1 + v28), 1, v16);
  int v32 = v17(v30, 1, v16);
  if (!v31)
  {
    if (!v32)
    {
      unsigned char *v29 = *v30;
      v54((uint64_t)&v29[v16[5]], (uint64_t)&v30[v16[5]], v6);
      *(_DWORD *)&v29[v16[6]] = *(_DWORD *)&v30[v16[6]];
      uint64_t v48 = v16[7];
      unsigned int v49 = &v29[v48];
      uint64_t v50 = &v30[v48];
      char v51 = v50[48];
      long long v53 = *((_OWORD *)v50 + 1);
      long long v52 = *((_OWORD *)v50 + 2);
      *(_OWORD *)unsigned int v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v53;
      *((_OWORD *)v49 + 2) = v52;
      v49[48] = v51;
      *(_WORD *)&v29[v16[8]] = *(_WORD *)&v30[v16[8]];
      *(void *)&v29[v16[9]] = *(void *)&v30[v16[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A3D32908((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    memcpy(v29, v30, *(void *)(*(void *)(v40 - 8) + 64));
    return a1;
  }
  unsigned char *v29 = *v30;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 16))(&v29[v16[5]], &v30[v16[5]], v6);
  *(_DWORD *)&v29[v16[6]] = *(_DWORD *)&v30[v16[6]];
  uint64_t v33 = v16[7];
  long long v34 = &v29[v33];
  uint64_t v35 = &v30[v33];
  char v36 = v35[48];
  long long v38 = *((_OWORD *)v35 + 1);
  long long v37 = *((_OWORD *)v35 + 2);
  *(_OWORD *)long long v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v38;
  *((_OWORD *)v34 + 2) = v37;
  v34[48] = v36;
  *(_WORD *)&v29[v16[8]] = *(_WORD *)&v30[v16[8]];
  *(void *)&v29[v16[9]] = *(void *)&v30[v16[9]];
  long long v39 = *(void (**)(unsigned char *, void, uint64_t, int *))(v55 + 56);
  swift_bridgeObjectRetain();
  v39(v29, 0, 1, v16);
  return a1;
}

uint64_t initializeWithTake for HumanBodyPoseObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  uint64_t v12 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  unint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for HumanHandPoseObservation();
  uint64_t v17 = *((void *)v16 - 1);
  long long v34 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v17 + 48);
  if (v34(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v14 = *v15;
    v7((uint64_t)&v14[v16[5]], (uint64_t)&v15[v16[5]], v6);
    *(_DWORD *)&v14[v16[6]] = *(_DWORD *)&v15[v16[6]];
    uint64_t v19 = v16[7];
    uint64_t v20 = &v14[v19];
    long long v21 = &v15[v19];
    v20[48] = v21[48];
    long long v22 = *((_OWORD *)v21 + 2);
    long long v23 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
    *((_OWORD *)v20 + 2) = v22;
    *(_OWORD *)uint64_t v20 = v23;
    *(_WORD *)&v14[v16[8]] = *(_WORD *)&v15[v16[8]];
    *(void *)&v14[v16[9]] = *(void *)&v15[v16[9]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v24 = a3[10];
  long long v25 = (unsigned char *)(a1 + v24);
  uint64_t v26 = (unsigned char *)(a2 + v24);
  if (v34(v26, 1, v16))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *long long v25 = *v26;
    v7((uint64_t)&v25[v16[5]], (uint64_t)&v26[v16[5]], v6);
    *(_DWORD *)&v25[v16[6]] = *(_DWORD *)&v26[v16[6]];
    uint64_t v28 = v16[7];
    uint64_t v29 = &v25[v28];
    uint64_t v30 = &v26[v28];
    v29[48] = v30[48];
    long long v31 = *((_OWORD *)v30 + 2);
    long long v32 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = *((_OWORD *)v30 + 1);
    *((_OWORD *)v29 + 2) = v31;
    *(_OWORD *)uint64_t v29 = v32;
    *(_WORD *)&v25[v16[8]] = *(_WORD *)&v26[v16[8]];
    *(void *)&v25[v16[9]] = *(void *)&v26[v16[9]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v17 + 56))(v25, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithTake for HumanBodyPoseObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v49 = *(void *)(v6 - 8);
  long long v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 40);
  v47(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v11 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[9];
  uint64_t v13 = (unsigned char *)(a1 + v12);
  uint64_t v14 = (unsigned char *)(a2 + v12);
  unint64_t v15 = (int *)type metadata accessor for HumanHandPoseObservation();
  uint64_t v48 = *((void *)v15 - 1);
  uint64_t v16 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v48 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  if (v17)
  {
    if (!v18)
    {
      *uint64_t v13 = *v14;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 32))(&v13[v15[5]], &v14[v15[5]], v6);
      *(_DWORD *)&v13[v15[6]] = *(_DWORD *)&v14[v15[6]];
      uint64_t v19 = v15[7];
      uint64_t v20 = &v13[v19];
      long long v21 = &v14[v19];
      v20[48] = v21[48];
      long long v22 = *((_OWORD *)v21 + 2);
      long long v23 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
      *((_OWORD *)v20 + 2) = v22;
      *(_OWORD *)uint64_t v20 = v23;
      *(_WORD *)&v13[v15[8]] = *(_WORD *)&v14[v15[8]];
      *(void *)&v13[v15[9]] = *(void *)&v14[v15[9]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v48 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1A3D32908((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    memcpy(v13, v14, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v13 = *v14;
  v47((uint64_t)&v13[v15[5]], (uint64_t)&v14[v15[5]], v6);
  *(_DWORD *)&v13[v15[6]] = *(_DWORD *)&v14[v15[6]];
  uint64_t v37 = v15[7];
  long long v38 = &v13[v37];
  long long v39 = &v14[v37];
  v38[48] = v39[48];
  long long v40 = *((_OWORD *)v39 + 2);
  long long v41 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = *((_OWORD *)v39 + 1);
  *((_OWORD *)v38 + 2) = v40;
  *(_OWORD *)long long v38 = v41;
  *(_WORD *)&v13[v15[8]] = *(_WORD *)&v14[v15[8]];
  *(void *)&v13[v15[9]] = *(void *)&v14[v15[9]];
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v25 = a3[10];
  uint64_t v26 = (unsigned char *)(a1 + v25);
  uint64_t v27 = (unsigned char *)(a2 + v25);
  int v28 = v16((unsigned char *)(a1 + v25), 1, v15);
  int v29 = v16(v27, 1, v15);
  if (!v28)
  {
    if (!v29)
    {
      unsigned char *v26 = *v27;
      v47((uint64_t)&v26[v15[5]], (uint64_t)&v27[v15[5]], v6);
      *(_DWORD *)&v26[v15[6]] = *(_DWORD *)&v27[v15[6]];
      uint64_t v42 = v15[7];
      uint64_t v43 = &v26[v42];
      long long v44 = &v27[v42];
      v43[48] = v44[48];
      long long v45 = *((_OWORD *)v44 + 2);
      long long v46 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = *((_OWORD *)v44 + 1);
      *((_OWORD *)v43 + 2) = v45;
      *(_OWORD *)uint64_t v43 = v46;
      *(_WORD *)&v26[v15[8]] = *(_WORD *)&v27[v15[8]];
      *(void *)&v26[v15[9]] = *(void *)&v27[v15[9]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A3D32908((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for HumanHandPoseObservation);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    memcpy(v26, v27, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  unsigned char *v26 = *v27;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 32))(&v26[v15[5]], &v27[v15[5]], v6);
  *(_DWORD *)&v26[v15[6]] = *(_DWORD *)&v27[v15[6]];
  uint64_t v30 = v15[7];
  long long v31 = &v26[v30];
  long long v32 = &v27[v30];
  v31[48] = v32[48];
  long long v33 = *((_OWORD *)v32 + 2);
  long long v34 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = *((_OWORD *)v32 + 1);
  *((_OWORD *)v31 + 2) = v33;
  *(_OWORD *)long long v31 = v34;
  *(_WORD *)&v26[v15[8]] = *(_WORD *)&v27[v15[8]];
  *(void *)&v26[v15[9]] = *(void *)&v27[v15[9]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v48 + 56))(v26, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for HumanBodyPoseObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D34738);
}

uint64_t sub_1A3D34738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for HumanBodyPoseObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D3487C);
}

uint64_t sub_1A3D3487C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095C7C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDD28);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1A3D349AC()
{
  sub_1A4095C7C();
  if (v0 <= 0x3F)
  {
    sub_1A3D34AA4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1A3D34AA4()
{
  if (!qword_1E95EDE08)
  {
    type metadata accessor for HumanHandPoseObservation();
    unint64_t v0 = sub_1A409692C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E95EDE08);
    }
  }
}

uint64_t getEnumTagSinglePayload for HumanBodyPoseObservation.JointName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HumanBodyPoseObservation.JointName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D34C58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyPoseObservation.JointName()
{
  return &type metadata for HumanBodyPoseObservation.JointName;
}

unsigned char *storeEnumTagSinglePayload for HumanBodyPoseObservation.JointsGroupName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D34D5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyPoseObservation.JointsGroupName()
{
  return &type metadata for HumanBodyPoseObservation.JointsGroupName;
}

unsigned char *storeEnumTagSinglePayload for HumanBodyPoseObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D34E60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyPoseObservation.CodingKeys()
{
  return &type metadata for HumanBodyPoseObservation.CodingKeys;
}

unint64_t sub_1A3D34E9C()
{
  unint64_t result = qword_1E96080C0[0];
  if (!qword_1E96080C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96080C0);
  }
  return result;
}

uint64_t sub_1A3D34EF0()
{
  return sub_1A3D2C6D8((unint64_t *)&unk_1E95EFF50, type metadata accessor for JointName);
}

uint64_t sub_1A3D34F38()
{
  return sub_1A3D2C6D8(&qword_1E95EDE18, type metadata accessor for JointName);
}

uint64_t sub_1A3D34F80()
{
  return sub_1A3D2C6D8(&qword_1E95EFF60, type metadata accessor for JointName);
}

unint64_t sub_1A3D34FCC()
{
  unint64_t result = qword_1E9608350;
  if (!qword_1E9608350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9608350);
  }
  return result;
}

unint64_t sub_1A3D35024()
{
  unint64_t result = qword_1E9608358[0];
  if (!qword_1E9608358[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9608358);
  }
  return result;
}

void type metadata accessor for VNRecognizedPointKey(uint64_t a1)
{
}

uint64_t sub_1A3D3508C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A3D350E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HumanHandPoseObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D3514C()
{
  return sub_1A3D2C6D8((unint64_t *)&unk_1E95F00E0, type metadata accessor for VNRecognizedPointKey);
}

uint64_t sub_1A3D35194()
{
  return sub_1A3D2C6D8(&qword_1E95EDE48, type metadata accessor for VNRecognizedPointKey);
}

uint64_t sub_1A3D351DC()
{
  return sub_1A3D2C6D8(&qword_1E95F0100, type metadata accessor for VNRecognizedPointKey);
}

BOOL static DetectHumanHeadRectanglesRequest.Revision.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL static DetectHumanHeadRectanglesRequest.Revision.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DetectHumanHeadRectanglesRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D35280(uint64_t a1)
{
  unint64_t v2 = sub_1A3D35AC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D352BC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D35AC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D352F8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D35A70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D35334(uint64_t a1)
{
  unint64_t v2 = sub_1A3D35A70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D35370(uint64_t a1)
{
  unint64_t v2 = sub_1A3D35A1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D353AC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D35A1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D353E8()
{
  uint64_t result = 0x6E6F697369766572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x3376444F4E41;
      break;
    case 2:
      uint64_t result = 0x3476444F4E41;
      break;
    case 3:
      uint64_t result = 0x3576444F4E41;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D35470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D37604(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D35498(uint64_t a1)
{
  unint64_t v2 = sub_1A3D359C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D354D4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D359C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D35510(uint64_t a1)
{
  unint64_t v2 = sub_1A3D35B18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D3554C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D35B18();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectHumanHeadRectanglesRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE58);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x1F4188790](v3);
  int v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE60);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE68);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v7);
  long long v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE70);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE78);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D359C8();
  sub_1A4096FEC();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_1A3D35AC4();
      int v17 = v23;
      sub_1A4096D5C();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_1A3D35A70();
      int v17 = v26;
      sub_1A4096D5C();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_1A3D35A1C();
      int v17 = v29;
      sub_1A4096D5C();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_1A3D35B18();
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_1A3D359C8()
{
  unint64_t result = qword_1E96086E8;
  if (!qword_1E96086E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96086E8);
  }
  return result;
}

unint64_t sub_1A3D35A1C()
{
  unint64_t result = qword_1E96086F0;
  if (!qword_1E96086F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96086F0);
  }
  return result;
}

unint64_t sub_1A3D35A70()
{
  unint64_t result = qword_1E96086F8;
  if (!qword_1E96086F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96086F8);
  }
  return result;
}

unint64_t sub_1A3D35AC4()
{
  unint64_t result = qword_1E9608700;
  if (!qword_1E9608700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9608700);
  }
  return result;
}

unint64_t sub_1A3D35B18()
{
  unint64_t result = qword_1E9608708[0];
  if (!qword_1E9608708[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9608708);
  }
  return result;
}

uint64_t DetectHumanHeadRectanglesRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectHumanHeadRectanglesRequest.Revision.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE80);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE88);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v5);
  long long v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE90);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDE98);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDEA0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  char v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1A3D359C8();
  uint64_t v19 = v52;
  sub_1A4096FDC();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  long long v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  long long v23 = v17;
  uint64_t v24 = sub_1A4096D3C();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_1A4096ABC();
    swift_allocError();
    int v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    void *v29 = &type metadata for DetectHumanHeadRectanglesRequest.Revision;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4FBBA70], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_1A3D35AC4();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_1A4096C7C();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_1A3D35A70();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_1A4096C7C();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_1A3D35A1C();
      uint64_t v37 = v52;
      sub_1A4096C7C();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      long long v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_1A3D35B18();
      uint64_t v26 = v52;
      sub_1A4096C7C();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      long long v38 = v47;
LABEL_19:
      *long long v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

BOOL sub_1A3D361E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A3D361FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A3D36210(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A3D36224(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1A3D36238@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DetectHumanHeadRectanglesRequest.Revision.init(from:)(a1, a2);
}

uint64_t sub_1A3D36250(void *a1)
{
  return DetectHumanHeadRectanglesRequest.Revision.encode(to:)(a1);
}

double DetectHumanHeadRectanglesRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v9);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 4)
  {
    unint64_t v5 = sub_1A3D36974();
    sub_1A3E2C988((uint64_t)&type metadata for DetectHumanHeadRectanglesRequest, v5, (uint64_t)&v8);
    LOBYTE(v3) = v8;
  }
  double result = v9[0].n128_f64[0];
  __n128 v7 = v9[1];
  *a2 = v9[0];
  a2[1] = v7;
  a2[2].n128_u8[0] = v3;
  a2[2].n128_u32[1] = 0;
  a2[2].n128_u16[4] = 1;
  a2[3].n128_u64[0] = v4;
  return result;
}

__n128 DetectHumanHeadRectanglesRequest.regionOfInterest.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 DetectHumanHeadRectanglesRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*DetectHumanHeadRectanglesRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void DetectHumanHeadRectanglesRequest.revision.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t DetectHumanHeadRectanglesRequest.supportsPrecisionRecallThresholdOverride.getter()
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  char v1 = *(unsigned char *)(v0 + 32);
  int v2 = *(_DWORD *)(v0 + 36);
  char v3 = *(unsigned char *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 41);
  uint64_t v5 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 16);
  v22[0] = *(_OWORD *)v0;
  v22[1] = v6;
  char v23 = v1;
  int v24 = v2;
  char v25 = v3;
  char v26 = v4;
  uint64_t v27 = v5;
  unint64_t v7 = sub_1A3D369C8();
  sub_1A3D453DC(0, (uint64_t)&type metadata for DetectHumanHeadRectanglesRequest, v7);
  uint64_t v9 = v8;
  sub_1A3C8C73C(0, &qword_1E95EDEB8);
  if (!swift_dynamicCastMetatype()) {
    goto LABEL_7;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8F944(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  *(void *)&v22[0] = 0;
  id v12 = objc_msgSend(ObjCClassFromMetadata, sel_defaultFilterThresholdsForOptions_error_, v11, v22);

  uint64_t v13 = *(void **)&v22[0];
  if (!v12)
  {
    id v19 = *(id *)&v22[0];
    uint64_t v20 = (void *)sub_1A4095AEC();

    swift_willThrow();
LABEL_8:
    char v18 = 0;
    return v18 & 1;
  }
  type metadata accessor for VNShotflowDetectorFilterThresholdKey();
  sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EFED0);
  sub_1A3D38698(&qword_1E95EDEC0, (void (*)(uint64_t))type metadata accessor for VNShotflowDetectorFilterThresholdKey);
  uint64_t v14 = sub_1A409602C();
  id v15 = v13;

  if (!*(void *)(v14 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v16 = @"VNShotflowDetectorFilterThresholdKey_HumanHead";
  sub_1A3D372EC((uint64_t)v16);
  char v18 = v17;

  swift_bridgeObjectRelease();
  return v18 & 1;
}

unint64_t DetectHumanHeadRectanglesRequest.precisionRecallThresholdOverride.getter()
{
  return *(unsigned int *)(v0 + 36) | ((unint64_t)*(unsigned __int8 *)(v0 + 40) << 32);
}

uint64_t DetectHumanHeadRectanglesRequest.precisionRecallThresholdOverride.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 36) = result;
  *(unsigned char *)(v1 + 40) = BYTE4(result) & 1;
  return result;
}

uint64_t (*DetectHumanHeadRectanglesRequest.precisionRecallThresholdOverride.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t static DetectHumanHeadRectanglesRequest.precisionRecallThresholdOverrideSupportingRevisions.getter()
{
  uint64_t v0 = 0;
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v1 = MEMORY[0x1E4FBC868];
  do
  {
    char v2 = byte_1EF757298[v0 + 32];
    static NormalizedRect.fullImage.getter(&v22);
    char v23 = v2;
    int v24 = 0;
    __int16 v25 = 1;
    uint64_t v26 = v1;
    unint64_t v3 = sub_1A3D369C8();
    sub_1A3D453DC(0, (uint64_t)&type metadata for DetectHumanHeadRectanglesRequest, v3);
    uint64_t v5 = v4;
    sub_1A3C8C73C(0, &qword_1E95EDEB8);
    if (swift_dynamicCastMetatype())
    {
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      sub_1A3C8F944(v5);
      swift_bridgeObjectRelease();
      unint64_t v7 = (void *)sub_1A409600C();
      swift_bridgeObjectRelease();
      v22.n128_u64[0] = 0;
      id v8 = objc_msgSend(ObjCClassFromMetadata, sel_defaultFilterThresholdsForOptions_error_, v7, &v22);

      uint64_t v9 = (void *)v22.n128_u64[0];
      if (v8)
      {
        type metadata accessor for VNShotflowDetectorFilterThresholdKey();
        sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EFED0);
        sub_1A3D38698(&qword_1E95EDEC0, (void (*)(uint64_t))type metadata accessor for VNShotflowDetectorFilterThresholdKey);
        uint64_t v10 = sub_1A409602C();
        id v11 = v9;

        if (*(void *)(v10 + 16))
        {
          id v12 = @"VNShotflowDetectorFilterThresholdKey_HumanHead";
          sub_1A3D372EC((uint64_t)v12);
          char v14 = v13;

          swift_bridgeObjectRelease();
          if (v14)
          {
            uint64_t v15 = v21;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1A3D374F8(0, *(void *)(v21 + 16) + 1, 1);
              uint64_t v15 = v21;
            }
            unint64_t v17 = *(void *)(v15 + 16);
            unint64_t v16 = *(void *)(v15 + 24);
            if (v17 >= v16 >> 1)
            {
              sub_1A3D374F8((char *)(v16 > 1), v17 + 1, 1);
              uint64_t v15 = v21;
            }
            *(void *)(v15 + 16) = v17 + 1;
            uint64_t v21 = v15;
            *(unsigned char *)(v15 + v17 + 32) = v2;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        id v18 = (id)v22.n128_u64[0];
        id v19 = (void *)sub_1A4095AEC();

        swift_willThrow();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    ++v0;
  }
  while (v0 != 4);
  return v21;
}

void DetectHumanHeadRectanglesRequest.descriptor.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32) | 0x28;
  a1[1] = 1;
}

void DetectHumanHeadRectanglesRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

unsigned char *DetectHumanHeadRectanglesRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*DetectHumanHeadRectanglesRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D36974()
{
  unint64_t result = qword_1E95EDEA8;
  if (!qword_1E95EDEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDEA8);
  }
  return result;
}

unint64_t sub_1A3D369C8()
{
  unint64_t result = qword_1E95EDEB0;
  if (!qword_1E95EDEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDEB0);
  }
  return result;
}

void type metadata accessor for VNShotflowDetectorFilterThresholdKey()
{
  if (!qword_1E95EDF20)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E95EDF20);
    }
  }
}

uint64_t DetectHumanHeadRectanglesRequest.hash(into:)(long long *a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  if (v3 != 1) {
    sub_1A4096F5C();
  }
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t DetectHumanHeadRectanglesRequest.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 32);
  int v2 = *(_DWORD *)(v0 + 36);
  char v3 = *(unsigned char *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 41);
  uint64_t v5 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v8[9] = *(_OWORD *)v0;
  *(_OWORD *)&v8[11] = v6;
  char v9 = v1;
  int v10 = v2;
  char v11 = v3;
  char v12 = v4;
  uint64_t v13 = v5;
  sub_1A4096F2C();
  DetectHumanHeadRectanglesRequest.hash(into:)((long long *)v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D36BDC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D369C8();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D36C18@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3D36974();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D36C6C(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3D36974();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D36CC0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32) | 0x28;
  a1[1] = 1;
}

void sub_1A3D36CDC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

unsigned char *sub_1A3D36CE8(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*sub_1A3D36CF4())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D36D14(uint64_t a1)
{
  unint64_t v2 = sub_1A3D36974();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D36D50()
{
  char v1 = *(unsigned char *)(v0 + 32);
  int v2 = *(_DWORD *)(v0 + 36);
  char v3 = *(unsigned char *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 41);
  uint64_t v5 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v8[9] = *(_OWORD *)v0;
  *(_OWORD *)&v8[11] = v6;
  char v9 = v1;
  int v10 = v2;
  char v11 = v3;
  char v12 = v4;
  uint64_t v13 = v5;
  sub_1A4096F2C();
  DetectHumanHeadRectanglesRequest.hash(into:)((long long *)v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D36DC8()
{
  char v1 = *(unsigned char *)(v0 + 32);
  int v2 = *(_DWORD *)(v0 + 36);
  char v3 = *(unsigned char *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 41);
  uint64_t v5 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v8[9] = *(_OWORD *)v0;
  *(_OWORD *)&v8[11] = v6;
  char v9 = v1;
  int v10 = v2;
  char v11 = v3;
  char v12 = v4;
  uint64_t v13 = v5;
  sub_1A4096F2C();
  DetectHumanHeadRectanglesRequest.hash(into:)((long long *)v8);
  return sub_1A4096F7C();
}

int *sub_1A3D36E3C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDF50);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  char v8 = 0;
  uint64_t v1 = sub_1A3D09D64(3, 0, 29);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(3, 0, 29);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(3, 0, 29);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468((uint64_t)&v8, v2, v4, v6, (uint64_t)&type metadata for DetectHumanHeadRectanglesRequest.Revision, v0 + 32);
  qword_1E9643CD8 = v0;
  return result;
}

uint64_t sub_1A3D36F04()
{
  if (qword_1E96086E0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D36F60()
{
  return sub_1A409617C();
}

uint64_t sub_1A3D36F88(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA508();

  return sub_1A3E2C684(a1, a2);
}

uint64_t sub_1A3D36FD4()
{
  return qword_1A40F0EC0[*v0];
}

uint64_t sub_1A3D36FEC(uint64_t a1, uint64_t a2)
{
  long long v5 = v2[1];
  v21[0] = *v2;
  v21[1] = v5;
  long long v7 = *v2;
  long long v6 = v2[1];
  v21[2] = v2[2];
  uint64_t v22 = *((void *)v2 + 6);
  v19[0] = v7;
  v19[1] = v6;
  v19[2] = v2[2];
  uint64_t v20 = *((void *)v2 + 6);
  unint64_t v8 = sub_1A3D369C8();
  uint64_t v9 = sub_1A3D4507C((uint64_t)&type metadata for DetectHumanHeadRectanglesRequest, v8);
  uint64_t v11 = v10;
  uint64_t v12 = sub_1A409617C();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  if (v9 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return MEMORY[0x1E4FBC860];
    }
  }
  if (*(void *)(a1 + 16) >= 2uLL)
  {
    sub_1A3C8D3F0(a1 + 64, (uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDEC8);
    if (swift_dynamicCast())
    {
      sub_1A3D109F0((uint64_t)v21);
      size_t v17 = sub_1A3D37ABC(v18, (unint64_t)v21, a2);
      sub_1A3D10A1C((uint64_t)v21);
      swift_bridgeObjectRelease();
      return v17;
    }
    return MEMORY[0x1E4FBC860];
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3D3718C(uint64_t a1, uint64_t a2)
{
  return sub_1A3D36FEC(a1, a2);
}

void sub_1A3D371A4(uint64_t a1)
{
}

uint64_t sub_1A3D371BC(uint64_t a1, uint64_t a2)
{
  return sub_1A3D371EC(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1A3D371D4(uint64_t a1, uint64_t a2)
{
  return sub_1A3D371EC(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1A3D371EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1A409617C();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A3D37230(uint64_t a1)
{
  uint64_t v2 = sub_1A3D38698(&qword_1E95EDEC0, (void (*)(uint64_t))type metadata accessor for VNShotflowDetectorFilterThresholdKey);
  uint64_t v3 = sub_1A3D38698(&qword_1E95EDF40, (void (*)(uint64_t))type metadata accessor for VNShotflowDetectorFilterThresholdKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

unint64_t sub_1A3D372EC(uint64_t a1)
{
  sub_1A409617C();
  sub_1A4096F2C();
  sub_1A40961CC();
  uint64_t v2 = sub_1A4096F7C();
  swift_bridgeObjectRelease();

  return sub_1A3D37380(a1, v2);
}

unint64_t sub_1A3D37380(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1A409617C();
    uint64_t v8 = v7;
    if (v6 == sub_1A409617C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1A409617C();
          uint64_t v15 = v14;
          if (v13 == sub_1A409617C() && v15 == v16) {
            break;
          }
          char v18 = sub_1A4096E5C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

char *sub_1A3D374F8(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A3D37518(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A3D37518(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDF58);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_1A3D37604(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697369766572 && a2 == 0xE900000000000031;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x3376444F4E41 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x3476444F4E41 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x3576444F4E41 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t _s6Vision32DetectHumanHeadRectanglesRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 32);
  float v3 = *(float *)(a1 + 36);
  char v4 = *(unsigned char *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 41);
  uint64_t v6 = *(void *)(a1 + 48);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  float v8 = *(float *)(a2 + 36);
  int v9 = *(unsigned __int8 *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 41);
  uint64_t v11 = *(void *)(a2 + 48);
  CGSize v12 = *(CGSize *)(a1 + 16);
  v17.origin = *(CGPoint *)a1;
  v17.size = v12;
  CGSize v13 = *(CGSize *)(a2 + 16);
  v16.origin = *(CGPoint *)a2;
  v16.size = v13;
  if (!static NormalizedRect.== infix(_:_:)(&v17, &v16) || v2 != v7) {
    return 0;
  }
  if (v4)
  {
    if (!v9) {
      return 0;
    }
  }
  else
  {
    if (v3 == v8) {
      char v14 = v9;
    }
    else {
      char v14 = 1;
    }
    if (v14) {
      return 0;
    }
  }
  LOBYTE(v17.origin.x) = v5;
  LOBYTE(v16.origin.x) = v10;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v17, (unsigned __int8 *)&v16)) {
    return 0;
  }

  return sub_1A3C8FF4C(v6, v11);
}

void sub_1A3D378B4(uint64_t a1)
{
  uint64_t v4 = *(char *)(v1 + 32);
  int v5 = *(_DWORD *)(v1 + 36);
  char v6 = *(unsigned char *)(v1 + 40);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8C73C(0, &qword_1E95EDEB8);
  if (objc_msgSend(ObjCClassFromMetadata, sel_isSubclassOfClass_, swift_getObjCClassFromMetadata()))
  {
    uint64_t v8 = qword_1A40F0EC0[v4];
    uint64_t v9 = sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EC718);
    uint64_t v10 = sub_1A3C8C73C(0, &qword_1E95EDF48);
    id v11 = sub_1A3CA42A0(v10, v8);
    if (!v2)
    {
      CGSize v12 = v11;
      uint64_t v13 = sub_1A409617C();
      uint64_t v15 = v14;
      *((void *)&v26 + 1) = v9;
      *(void *)&long long v25 = v12;
      CGRect v16 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
      id v23 = v12;
      CGRect v17 = v16;
      char v18 = (void (*)(unsigned char *, void))v16(v24);
      sub_1A3C8BC40((uint64_t)&v25, v13, v15);
      v18(v24, 0);
      uint64_t v19 = sub_1A409617C();
      uint64_t v21 = v20;
      if (v6)
      {
        long long v25 = 0u;
        long long v26 = 0u;
      }
      else
      {
        *((void *)&v26 + 1) = MEMORY[0x1E4FBB470];
        LODWORD(v25) = v5;
      }
      uint64_t v22 = (void (*)(unsigned char *, void))v17(v24);
      sub_1A3C8BC40((uint64_t)&v25, v19, v21);
      v22(v24, 0);
    }
  }
}

size_t sub_1A3D37ABC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v22 = a3;
  uint64_t v7 = type metadata accessor for DetectedObjectObservation();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if (!v11) {
      return v12;
    }
    uint64_t v27 = MEMORY[0x1E4FBC860];
    size_t result = sub_1A3CD1138(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0) {
      break;
    }
    uint64_t v14 = 0;
    uint64_t v12 = v27;
    v20[1] = v4;
    unint64_t v21 = a1 & 0xC000000000000001;
    __int16 v15 = *(unsigned __int8 *)(a2 + 32) | 0x128;
    long long v16 = *(_OWORD *)(a2 + 16);
    long long v25 = *(_OWORD *)a2;
    long long v26 = v16;
    uint64_t v4 = a1;
    while (v11 != v14)
    {
      if (v21) {
        id v17 = (id)MEMORY[0x1A6254720](v14, a1);
      }
      else {
        id v17 = *(id *)(a1 + 8 * v14 + 32);
      }
      __int16 v24 = v15;
      v23[0] = v25;
      v23[1] = v26;
      sub_1A3D11908(v17, &v24, v23, v22, (uint64_t)v10);
      uint64_t v27 = v12;
      unint64_t v19 = *(void *)(v12 + 16);
      unint64_t v18 = *(void *)(v12 + 24);
      a2 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_1A3CD1138(v18 > 1, v19 + 1, 1);
        uint64_t v12 = v27;
      }
      ++v14;
      *(void *)(v12 + 16) = a2;
      sub_1A3D38634((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v19);
      a1 = v4;
      if (v11 == v14) {
        return v12;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A3D37CDC()
{
  unint64_t result = qword_1E95EDED0;
  if (!qword_1E95EDED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDED0);
  }
  return result;
}

unint64_t sub_1A3D37D30(uint64_t a1)
{
  unint64_t result = sub_1A3CCA508();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D37D58(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF240();
  unint64_t result = sub_1A3D37D88();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D37D88()
{
  unint64_t result = qword_1E95EDF08;
  if (!qword_1E95EDF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDF08);
  }
  return result;
}

unint64_t sub_1A3D37DE0()
{
  unint64_t result = qword_1E95EDF10;
  if (!qword_1E95EDF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDF10);
  }
  return result;
}

unint64_t sub_1A3D37E38()
{
  unint64_t result = qword_1E95EDF18;
  if (!qword_1E95EDF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDF18);
  }
  return result;
}

uint64_t sub_1A3D37E8C()
{
  return sub_1A3D38698(&qword_1E95ED458, (void (*)(uint64_t))type metadata accessor for DetectedObjectObservation);
}

unint64_t sub_1A3D37ED4(uint64_t a1)
{
  unint64_t result = sub_1A3D36974();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t initializeWithCopy for DetectFaceRectanglesRequest(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectFaceRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  int v3 = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 36) = v3;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectFaceRectanglesRequest(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DetectHumanHeadRectanglesRequest()
{
  return &type metadata for DetectHumanHeadRectanglesRequest;
}

ValueMetadata *type metadata accessor for DetectHumanHeadRectanglesRequest.Revision()
{
  return &type metadata for DetectHumanHeadRectanglesRequest.Revision;
}

unsigned char *_s6Vision32DetectHumanHeadRectanglesRequestV8RevisionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D3811CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectHumanHeadRectanglesRequest.Revision.CodingKeys()
{
  return &type metadata for DetectHumanHeadRectanglesRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectHumanHeadRectanglesRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for DetectHumanHeadRectanglesRequest.Revision.Revision1CodingKeys;
}

ValueMetadata *type metadata accessor for DetectHumanHeadRectanglesRequest.Revision.ANODv3CodingKeys()
{
  return &type metadata for DetectHumanHeadRectanglesRequest.Revision.ANODv3CodingKeys;
}

ValueMetadata *type metadata accessor for DetectHumanHeadRectanglesRequest.Revision.ANODv4CodingKeys()
{
  return &type metadata for DetectHumanHeadRectanglesRequest.Revision.ANODv4CodingKeys;
}

ValueMetadata *type metadata accessor for DetectHumanHeadRectanglesRequest.Revision.ANODv5CodingKeys()
{
  return &type metadata for DetectHumanHeadRectanglesRequest.Revision.ANODv5CodingKeys;
}

unint64_t sub_1A3D38198()
{
  unint64_t result = qword_1E9609210[0];
  if (!qword_1E9609210[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9609210);
  }
  return result;
}

uint64_t sub_1A3D381EC()
{
  return sub_1A3D38698(&qword_1E95EDF28, (void (*)(uint64_t))type metadata accessor for VNShotflowDetectorFilterThresholdKey);
}

uint64_t sub_1A3D38234()
{
  return sub_1A3D38698(&qword_1E95EDF30, (void (*)(uint64_t))type metadata accessor for VNShotflowDetectorFilterThresholdKey);
}

uint64_t sub_1A3D3827C()
{
  return sub_1A3D38698(&qword_1E95EDF38, (void (*)(uint64_t))type metadata accessor for VNShotflowDetectorFilterThresholdKey);
}

unint64_t sub_1A3D382C8()
{
  unint64_t result = qword_1E9609620;
  if (!qword_1E9609620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9609620);
  }
  return result;
}

unint64_t sub_1A3D38320()
{
  unint64_t result = qword_1E9609628[0];
  if (!qword_1E9609628[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9609628);
  }
  return result;
}

unint64_t sub_1A3D38378()
{
  unint64_t result = qword_1E96096B0;
  if (!qword_1E96096B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96096B0);
  }
  return result;
}

unint64_t sub_1A3D383D0()
{
  unint64_t result = qword_1E96096B8[0];
  if (!qword_1E96096B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96096B8);
  }
  return result;
}

unint64_t sub_1A3D38428()
{
  unint64_t result = qword_1E9609740;
  if (!qword_1E9609740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9609740);
  }
  return result;
}

unint64_t sub_1A3D38480()
{
  unint64_t result = qword_1E9609748[0];
  if (!qword_1E9609748[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9609748);
  }
  return result;
}

unint64_t sub_1A3D384D8()
{
  unint64_t result = qword_1E96097D0;
  if (!qword_1E96097D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96097D0);
  }
  return result;
}

unint64_t sub_1A3D38530()
{
  unint64_t result = qword_1E96097D8[0];
  if (!qword_1E96097D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96097D8);
  }
  return result;
}

unint64_t sub_1A3D38588()
{
  unint64_t result = qword_1E9609860;
  if (!qword_1E9609860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9609860);
  }
  return result;
}

unint64_t sub_1A3D385E0()
{
  unint64_t result = qword_1E9609868[0];
  if (!qword_1E9609868[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9609868);
  }
  return result;
}

uint64_t sub_1A3D38634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetectedObjectObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D38698(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D386E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDF60);
  uint64_t v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3C8C844(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A3D38808()
{
  unint64_t result = sub_1A3D386E4(MEMORY[0x1E4FBC860]);
  qword_1E96098F8 = result;
  return result;
}

uint64_t sub_1A3D38830(uint64_t a1, uint64_t a2)
{
  if (qword_1E96098F0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1E96098F8;
  if (!*(void *)(qword_1E96098F8 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1A3C8C844(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_1A409621C();
    return 20054;
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v7;
}

__n128 RecognizedTextObservation.topLeft.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

__n128 RecognizedTextObservation.topLeft.setter(__n128 *a1)
{
  __n128 result = *a1;
  *uint64_t v1 = *a1;
  return result;
}

uint64_t (*RecognizedTextObservation.topLeft.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 RecognizedTextObservation.topRight.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[1];
  *a1 = result;
  return result;
}

__n128 RecognizedTextObservation.topRight.setter(__n128 *a1)
{
  __n128 result = *a1;
  v1[1] = *a1;
  return result;
}

uint64_t (*RecognizedTextObservation.topRight.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 RecognizedTextObservation.bottomRight.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[2];
  *a1 = result;
  return result;
}

__n128 RecognizedTextObservation.bottomRight.setter(__n128 *a1)
{
  __n128 result = *a1;
  v1[2] = *a1;
  return result;
}

uint64_t (*RecognizedTextObservation.bottomRight.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 RecognizedTextObservation.bottomLeft.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[3];
  *a1 = result;
  return result;
}

__n128 RecognizedTextObservation.bottomLeft.setter(__n128 *a1)
{
  __n128 result = *a1;
  v1[3] = *a1;
  return result;
}

uint64_t (*RecognizedTextObservation.bottomLeft.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t RecognizedTextObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RecognizedTextObservation() + 32);
  uint64_t v4 = sub_1A4095C7C();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RecognizedTextObservation()
{
  uint64_t result = qword_1E9609C90;
  if (!qword_1E9609C90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

float RecognizedTextObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for RecognizedTextObservation() + 36));
}

__n128 RecognizedTextObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RecognizedTextObservation() + 40);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t RecognizedTextObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for RecognizedTextObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 44));
  return result;
}

unint64_t RecognizedTextObservation.description.getter()
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v0 = type metadata accessor for RecognizedTextObservation();
  sub_1A3DB6C5C(v0, (uint64_t)&protocol witness table for RecognizedTextObservation);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v1 = sub_1A3D3A9C4(&qword_1E95EDF68, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);
  sub_1A3D8AC8C(v0, (uint64_t)&off_1EF74BE08, v1);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0xD00000000000001ALL;
}

uint64_t RecognizedTextObservation.topCandidates(_:)(int64_t a1)
{
  if (a1 < 1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = type metadata accessor for RecognizedTextObservation();
  int64_t v4 = sub_1A3D38D9C(a1, *(void *)(v1 + *(int *)(v3 + 52)));
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v10 = v9;
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_4:
    sub_1A3D3A374(v4, v6, v8, v10);
    uint64_t v12 = v11;
LABEL_12:
    swift_unknownObjectRelease();
    return v12;
  }
  sub_1A4096E6C();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = *(void *)(v13 + 16);
  swift_release();
  if (__OFSUB__(v10 >> 1, v8))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v14 != (v10 >> 1) - v8)
  {
LABEL_15:
    swift_unknownObjectRelease();
    goto LABEL_4;
  }
  uint64_t v12 = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v12)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  return v12;
}

int64_t sub_1A3D38D9C(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t RecognizedTextObservation.isTitle.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RecognizedTextObservation() + 48));
}

uint64_t sub_1A3D38E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      sub_1A3CA639C();
      uint64_t v5 = v2 - 1;
      do
      {
        v3 += 8;
        v4 += 8;
        char v6 = sub_1A409612C();
        BOOL v8 = v5-- != 0;
      }
      while ((v6 & 1) != 0 && v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t RecognizedTextObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D38F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D3A9C4(&qword_1E95EDF68, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

void sub_1A3D38FC4(uint64_t a1@<X0>, double *a2@<X8>)
{
}

uint64_t sub_1A3D38FD0()
{
  uint64_t result = 0x656A624F74786574;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C7469547369;
      break;
    case 2:
      uint64_t result = 0x6C676E6174636572;
      break;
    case 3:
      uint64_t result = 0x746176726573626FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D39074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D3B47C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D3909C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3A63C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D390D8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3A63C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecognizedTextObservation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v22 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC510);
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDF78);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D3A63C();
  sub_1A4096FEC();
  uint64_t v12 = type metadata accessor for RecognizedTextObservation();
  uint64_t v28 = *(void *)(v1 + *(int *)(v12 + 52));
  char v27 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDF80);
  sub_1A3D3A6E4(&qword_1E95EDF88, (void (*)(void))sub_1A3D3A690);
  uint64_t v13 = v23;
  sub_1A4096DBC();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v14 = (uint64_t)v22;
  char v26 = 1;
  sub_1A4096D8C();
  char v25 = 2;
  sub_1A3C9C5D8();
  sub_1A4096D5C();
  sub_1A3D75270((uint64_t)v7, v12, (void (**)(void *__return_ptr, void, void))&protocol witness table for RecognizedTextObservation);
  char v24 = 3;
  sub_1A3C80D74();
  uint64_t v23 = v9;
  sub_1A4096D5C();
  uint64_t v15 = sub_1A3D3A9C4(&qword_1E95EDF68, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);
  sub_1A3D2A9D0(v14, v12, (uint64_t)&off_1EF74BE08, v15);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v14, v19);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v8);
}

uint64_t RecognizedTextObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v29 = sub_1A4095C7C();
  uint64_t v25 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  char v27 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC528);
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDF98);
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for RecognizedTextObservation();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D3A63C();
  uint64_t v14 = v34;
  sub_1A4096FDC();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v23 = v7;
  uint64_t v15 = v33;
  uint64_t v34 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDF80);
  char v37 = 0;
  sub_1A3D3A6E4(&qword_1E95EDFA0, (void (*)(void))sub_1A3D3A754);
  long long v16 = v10;
  sub_1A4096CFC();
  uint64_t v17 = v34;
  *(void *)((char *)v34 + v11[13]) = v35;
  LOBYTE(v35) = 1;
  *((unsigned char *)v17 + v11[12]) = sub_1A4096CCC() & 1;
  LOBYTE(v35) = 2;
  sub_1A3C9C5D8();
  sub_1A4096C7C();
  v21[2] = a1;
  uint64_t v22 = v16;
  char v37 = 0;
  v21[1] = sub_1A3C97AC4();
  sub_1A4096CFC();
  *uint64_t v17 = v35;
  char v37 = 1;
  sub_1A4096CFC();
  v17[1] = v35;
  char v37 = 3;
  sub_1A4096CFC();
  v17[3] = v35;
  char v37 = 2;
  sub_1A4096CFC();
  v17[2] = v35;
  LOBYTE(v35) = 3;
  sub_1A3C80D74();
  sub_1A4096C7C();
  LOBYTE(v35) = 0;
  sub_1A3D3A9C4((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  sub_1A4096CFC();
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))((char *)v17 + v11[8], v27, v29);
  LOBYTE(v35) = 1;
  sub_1A4096CDC();
  *(_DWORD *)((char *)v34 + v11[9]) = v18;
  char v37 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  *(_WORD *)((char *)v34 + v11[11]) = v35;
  sub_1A3D2B130((uint64_t)v36);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v28);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v32);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v8);
  uint64_t v19 = (uint64_t)v34;
  sub_1A3C7D648((uint64_t)v36, (uint64_t)v34 + v11[10]);
  sub_1A3D3A7A8(v19, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A3D3A80C(v19);
}

uint64_t sub_1A3D39D98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RecognizedTextObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3D39DB0(void *a1)
{
  return RecognizedTextObservation.encode(to:)(a1);
}

uint64_t sub_1A3D39DC8@<X0>(void *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v8 = sub_1A4095C7C();
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = MEMORY[0x1F4188790](v8).n128_u64[0];
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *a2;
  objc_msgSend(a1, sel_topLeft, v10);
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v15, v14));
  uint64_t v16 = v66;
  uint64_t v56 = v65;
  objc_msgSend(a1, sel_topRight);
  Vision::NormalizedPoint v19 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v18, v17));
  uint64_t v20 = v63;
  uint64_t v21 = v64;
  objc_msgSend(a1, sel_bottomRight, v19.cgPoint.x, v19.cgPoint.y);
  Vision::NormalizedPoint v24 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v23, v22));
  uint64_t v25 = v61;
  uint64_t v26 = v62;
  objc_msgSend(a1, sel_bottomLeft, v24.cgPoint.x, v24.cgPoint.y);
  Vision::NormalizedPoint v29 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v28, v27));
  uint64_t v31 = v59;
  uint64_t v30 = v60;
  id v32 = objc_msgSend(a1, sel_uuid, v29.cgPoint.x, v29.cgPoint.y);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v34 = v33;
  unsigned int v35 = objc_msgSend(a1, sel_isTitle);
  id v36 = objc_msgSend(a1, sel_textObjects);
  if (!v36)
  {

    uint64_t v42 = MEMORY[0x1E4FBC860];
LABEL_17:
    *(void *)a4 = v56;
    *((void *)a4 + 1) = v16;
    *((void *)a4 + 2) = v20;
    *((void *)a4 + 3) = v21;
    *((void *)a4 + 4) = v25;
    *((void *)a4 + 5) = v26;
    *((void *)a4 + 6) = v31;
    *((void *)a4 + 7) = v30;
    long long v47 = (int *)type metadata accessor for RecognizedTextObservation();
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&a4[v47[8]], v12, v8);
    *(_DWORD *)&a4[v47[9]] = v34;
    uint64_t result = sub_1A3C7D648(a3, (uint64_t)&a4[v47[10]]);
    a4[v47[12]] = v35;
    *(_WORD *)&a4[v47[11]] = v13;
    *(void *)&a4[v47[13]] = v42;
    return result;
  }
  char v37 = v36;
  unsigned int v55 = v35;
  sub_1A3D3A868();
  unint64_t v38 = sub_1A409630C();

  if (!(v38 >> 62))
  {
    uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v39) {
      goto LABEL_4;
    }
LABEL_15:

    swift_bridgeObjectRelease();
    uint64_t v42 = MEMORY[0x1E4FBC860];
LABEL_16:
    LOBYTE(v35) = v55;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1A4096BFC();
  swift_bridgeObjectRelease();
  if (!v39) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v58 = MEMORY[0x1E4FBC860];
  uint64_t result = (uint64_t)sub_1A3D3A250(0, v39 & ~(v39 >> 63), 0);
  if ((v39 & 0x8000000000000000) == 0)
  {
    id v49 = a1;
    uint64_t v50 = v12;
    uint64_t v51 = v9;
    int v52 = v13;
    uint64_t v53 = v8;
    uint64_t v54 = a3;
    uint64_t v41 = 0;
    uint64_t v42 = v58;
    do
    {
      if ((v38 & 0xC000000000000001) != 0) {
        id v43 = (id)MEMORY[0x1A6254720](v41, v38);
      }
      else {
        id v43 = *(id *)(v38 + 8 * v41 + 32);
      }
      sub_1A3CA5A84(v43, &v57);
      uint64_t v44 = v57;
      uint64_t v58 = v42;
      unint64_t v46 = *(void *)(v42 + 16);
      unint64_t v45 = *(void *)(v42 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_1A3D3A250((char *)(v45 > 1), v46 + 1, 1);
        uint64_t v42 = v58;
      }
      ++v41;
      *(void *)(v42 + 16) = v46 + 1;
      *(void *)(v42 + 8 * v46 + 32) = v44;
    }
    while (v39 != v41);

    swift_bridgeObjectRelease();
    a3 = v54;
    uint64_t v8 = v53;
    LOWORD(v13) = v52;
    uint64_t v9 = v51;
    uint64_t v12 = v50;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t RecognizedTextObservation.init(_:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  unsigned __int16 v6 = -8;
  objc_msgSend(a1, sel_timeRange, static NormalizedRect.fullImage.getter(v5).n128_f64[0]);
  char v8 = 0;
  return sub_1A3D39DC8(a1, &v6, (uint64_t)&v7, a2);
}

uint64_t sub_1A3D3A224@<X0>(void *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X3>, char *a4@<X8>)
{
  unsigned __int16 v5 = *a2;
  return sub_1A3D39DC8(a1, &v5, a3, a4);
}

char *sub_1A3D3A250(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A3D3A270(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A3D3A270(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDFD0);
    double v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    double v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void sub_1A3D3A374(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDFD0);
      int64_t v7 = (void *)swift_allocObject();
      int64_t v8 = _swift_stdlib_malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 25;
      }
      _OWORD v7[2] = v5;
      v7[3] = 2 * (v9 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t _s6Vision25RecognizedTextObservationV2eeoiySbAC_ACtFZ_0(_OWORD *a1, _OWORD *a2)
{
  v27[0] = *a1;
  v24[0] = *a2;
  if (!static NormalizedPoint.== infix(_:_:)((double *)v27, (double *)v24)) {
    goto LABEL_18;
  }
  v27[0] = a1[1];
  v24[0] = a2[1];
  if (!static NormalizedPoint.== infix(_:_:)((double *)v27, (double *)v24)) {
    goto LABEL_18;
  }
  v27[0] = a1[2];
  v24[0] = a2[2];
  if (!static NormalizedPoint.== infix(_:_:)((double *)v27, (double *)v24)) {
    goto LABEL_18;
  }
  v27[0] = a1[3];
  v24[0] = a2[3];
  if (!static NormalizedPoint.== infix(_:_:)((double *)v27, (double *)v24)) {
    goto LABEL_18;
  }
  unint64_t v4 = (int *)type metadata accessor for RecognizedTextObservation();
  if ((sub_1A4095C4C() & 1) == 0 || *(float *)((char *)a1 + v4[9]) != *(float *)((char *)a2 + v4[9])) {
    goto LABEL_18;
  }
  uint64_t v5 = v4[10];
  unint64_t v6 = (char *)a1 + v5;
  char v7 = *((unsigned char *)a1 + v5 + 48);
  int64_t v8 = (char *)a2 + v5;
  if (v7)
  {
    if (!v8[48]) {
      goto LABEL_18;
    }
  }
  else
  {
    if (v8[48]) {
      goto LABEL_18;
    }
    uint64_t v9 = *(void *)v6;
    uint64_t v10 = *((void *)v6 + 1);
    long long v11 = *((_OWORD *)v6 + 1);
    uint64_t v13 = *((void *)v6 + 4);
    uint64_t v12 = *((void *)v6 + 5);
    uint64_t v14 = *(void *)v8;
    uint64_t v15 = *((void *)v8 + 1);
    long long v16 = *((_OWORD *)v8 + 1);
    uint64_t v18 = *((void *)v8 + 4);
    uint64_t v17 = *((void *)v8 + 5);
    *(void *)&v24[0] = v9;
    *((void *)&v24[0] + 1) = v10;
    v24[1] = v11;
    uint64_t v25 = v13;
    uint64_t v26 = v12;
    *(void *)&v27[0] = v14;
    *((void *)&v27[0] + 1) = v15;
    v27[1] = v16;
    uint64_t v28 = v18;
    uint64_t v29 = v17;
    if ((sub_1A409669C() & 1) == 0) {
      goto LABEL_18;
    }
  }
  uint64_t v19 = v4[11];
  unsigned int v20 = *(unsigned __int16 *)((char *)a1 + v19);
  unsigned int v21 = *(unsigned __int16 *)((char *)a2 + v19);
  if (v20 <= 0xFFF7)
  {
    if (v21 > 0xFFF7) {
      goto LABEL_18;
    }
    sub_1A3C832B8();
    if ((sub_1A409612C() & 1) == 0) {
      goto LABEL_18;
    }
  }
  else if (v21 <= 0xFFF7)
  {
    goto LABEL_18;
  }
  if (*((unsigned __int8 *)a1 + v4[12]) == *((unsigned __int8 *)a2 + v4[12]))
  {
    char v22 = sub_1A3D38E08(*(void *)((char *)a1 + v4[13]), *(void *)((char *)a2 + v4[13]));
    return v22 & 1;
  }
LABEL_18:
  char v22 = 0;
  return v22 & 1;
}

unint64_t sub_1A3D3A63C()
{
  unint64_t result = qword_1E9609900[0];
  if (!qword_1E9609900[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9609900);
  }
  return result;
}

unint64_t sub_1A3D3A690()
{
  unint64_t result = qword_1E95EDF90;
  if (!qword_1E95EDF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDF90);
  }
  return result;
}

uint64_t sub_1A3D3A6E4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EDF80);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D3A754()
{
  unint64_t result = qword_1E95EDFA8;
  if (!qword_1E95EDFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EDFA8);
  }
  return result;
}

uint64_t sub_1A3D3A7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecognizedTextObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D3A80C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RecognizedTextObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A3D3A868()
{
  unint64_t result = qword_1E95EDFB0;
  if (!qword_1E95EDFB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EDFB0);
  }
  return result;
}

uint64_t sub_1A3D3A8A8(void *a1)
{
  a1[1] = sub_1A3D3A9C4(&qword_1E95EDFB8, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);
  a1[2] = sub_1A3D3A9C4(&qword_1E95EDFC0, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);
  a1[3] = sub_1A3D3A9C4(&qword_1E95EDFC8, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);
  uint64_t result = sub_1A3D3A9C4(&qword_1E95EDF70, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3D3A97C()
{
  return sub_1A3D3A9C4(&qword_1E95ED180, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);
}

uint64_t sub_1A3D3A9C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D3AA0C(uint64_t a1)
{
  uint64_t result = sub_1A3D3A9C4(&qword_1E95EDF68, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for RecognizedTextObservation(_OWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = a3[8];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_1A4095C7C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[10];
    *(_DWORD *)((char *)v4 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    long long v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    *((_OWORD *)v14 + 2) = *(_OWORD *)(v15 + 32);
    v14[48] = *(unsigned char *)(v15 + 48);
    uint64_t v17 = a3[12];
    *(_WORD *)((char *)v4 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
    *(void *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for RecognizedTextObservation(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for RecognizedTextObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[10];
  *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  v13[48] = v14[48];
  uint64_t v16 = a3[12];
  *(_WORD *)((char *)a1 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RecognizedTextObservation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  uint64_t v6 = a3[8];
  long long v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
  uint64_t v10 = a3[10];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[48];
  long long v15 = *((_OWORD *)v12 + 1);
  long long v14 = *((_OWORD *)v12 + 2);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v15;
  *((_OWORD *)v11 + 2) = v14;
  v11[48] = v13;
  *(_WORD *)((char *)a1 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for RecognizedTextObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[10];
  *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
  char v13 = (char *)a1 + v12;
  long long v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)char v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  v13[48] = v14[48];
  uint64_t v16 = a3[12];
  *(_WORD *)((char *)a1 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

_OWORD *assignWithTake for RecognizedTextObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[10];
  *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
  char v13 = (char *)a1 + v12;
  long long v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)char v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  v13[48] = v14[48];
  uint64_t v16 = a3[12];
  *(_WORD *)((char *)a1 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecognizedTextObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D3B004);
}

uint64_t sub_1A3D3B004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 52));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RecognizedTextObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D3B0DC);
}

uint64_t sub_1A3D3B0DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095C7C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 32);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A3D3B19C()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RecognizedTextObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D3B33CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecognizedTextObservation.CodingKeys()
{
  return &type metadata for RecognizedTextObservation.CodingKeys;
}

unint64_t sub_1A3D3B378()
{
  unint64_t result = qword_1E9609DA0[0];
  if (!qword_1E9609DA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9609DA0);
  }
  return result;
}

unint64_t sub_1A3D3B3D0()
{
  unint64_t result = qword_1E9609EB0;
  if (!qword_1E9609EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9609EB0);
  }
  return result;
}

unint64_t sub_1A3D3B428()
{
  unint64_t result = qword_1E9609EB8[0];
  if (!qword_1E9609EB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9609EB8);
  }
  return result;
}

uint64_t sub_1A3D3B47C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656A624F74786574 && a2 == 0xEB00000000737463;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C7469547369 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C676E6174636572 && a2 == 0xE900000000000065 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BOOL static BarcodeObservation.CompositeType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BarcodeObservation.CompositeType.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D3B6B4()
{
  uint64_t result = 0x4165707954317367;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4265707954317367;
      break;
    case 2:
      uint64_t result = 0x4365707954317367;
      break;
    case 3:
      uint64_t result = 0x64656B6E696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D3B738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D3EC7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D3B760(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BDF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D3B79C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BDF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D3B7D8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BF48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D3B814(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BF48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D3B850(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BEF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D3B88C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BEF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D3B8C8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BEA0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D3B904(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BEA0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D3B940(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BE4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D3B97C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3BE4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t BarcodeObservation.CompositeType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDFD8);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDFE0);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDFE8);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDFF0);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDFF8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D3BDF8();
  sub_1A4096FEC();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_1A3D3BEF4();
      uint64_t v17 = v23;
      sub_1A4096D5C();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_1A3D3BEA0();
      uint64_t v17 = v26;
      sub_1A4096D5C();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_1A3D3BE4C();
      uint64_t v17 = v29;
      sub_1A4096D5C();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_1A3D3BF48();
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_1A3D3BDF8()
{
  unint64_t result = qword_1E9609F40;
  if (!qword_1E9609F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9609F40);
  }
  return result;
}

unint64_t sub_1A3D3BE4C()
{
  unint64_t result = qword_1E9609F48;
  if (!qword_1E9609F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9609F48);
  }
  return result;
}

unint64_t sub_1A3D3BEA0()
{
  unint64_t result = qword_1E9609F50;
  if (!qword_1E9609F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9609F50);
  }
  return result;
}

unint64_t sub_1A3D3BEF4()
{
  unint64_t result = qword_1E9609F58;
  if (!qword_1E9609F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9609F58);
  }
  return result;
}

unint64_t sub_1A3D3BF48()
{
  unint64_t result = qword_1E9609F60;
  if (!qword_1E9609F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9609F60);
  }
  return result;
}

uint64_t BarcodeObservation.CompositeType.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t BarcodeObservation.CompositeType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE000);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE008);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v5);
  unint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE010);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE018);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE020);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1A3D3BDF8();
  uint64_t v19 = v52;
  sub_1A4096FDC();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  long long v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  unint64_t v23 = v17;
  uint64_t v24 = sub_1A4096D3C();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_1A4096ABC();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    void *v29 = &type metadata for BarcodeObservation.CompositeType;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4FBBA70], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_1A3D3BEF4();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_1A4096C7C();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_1A3D3BEA0();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_1A4096C7C();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_1A3D3BE4C();
      uint64_t v37 = v52;
      sub_1A4096C7C();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      unint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_1A3D3BF48();
      uint64_t v26 = v52;
      sub_1A4096C7C();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      unint64_t v38 = v47;
LABEL_19:
      *unint64_t v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_1A3D3C618@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return BarcodeObservation.CompositeType.init(from:)(a1, a2);
}

uint64_t sub_1A3D3C630(void *a1)
{
  return BarcodeObservation.CompositeType.encode(to:)(a1);
}

uint64_t BarcodeObservation.payloadString.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BarcodeObservation.payloadData.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1A3D3C6AC(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t sub_1A3D3C6AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A3C7D1A8(a1, a2);
  }
  return a1;
}

uint64_t BarcodeObservation.supplementalPayloadString.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BarcodeObservation.supplementalPayloadData.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1A3D3C6AC(v1, *(void *)(v0 + 56));
  return v1;
}

void BarcodeObservation.supplementalCompositeType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

uint64_t BarcodeObservation.isGS1DataCarrier.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

void BarcodeObservation.symbology.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 66);
}

uint64_t BarcodeObservation.isColorInverted.getter()
{
  return *(unsigned __int8 *)(v0 + 67);
}

__n128 BarcodeObservation.topLeft.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 72);
  *a1 = result;
  return result;
}

__n128 BarcodeObservation.topLeft.setter(__n128 *a1)
{
  __n128 result = *a1;
  *(__n128 *)(v1 + 72) = *a1;
  return result;
}

uint64_t (*BarcodeObservation.topLeft.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 BarcodeObservation.topRight.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 88);
  *a1 = result;
  return result;
}

__n128 BarcodeObservation.topRight.setter(__n128 *a1)
{
  __n128 result = *a1;
  *(__n128 *)(v1 + 88) = *a1;
  return result;
}

uint64_t (*BarcodeObservation.topRight.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 BarcodeObservation.bottomRight.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 104);
  *a1 = result;
  return result;
}

__n128 BarcodeObservation.bottomRight.setter(__n128 *a1)
{
  __n128 result = *a1;
  *(__n128 *)(v1 + 104) = *a1;
  return result;
}

uint64_t (*BarcodeObservation.bottomRight.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 BarcodeObservation.bottomLeft.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 120);
  *a1 = result;
  return result;
}

__n128 BarcodeObservation.bottomLeft.setter(__n128 *a1)
{
  __n128 result = *a1;
  *(__n128 *)(v1 + 120) = *a1;
  return result;
}

uint64_t (*BarcodeObservation.bottomLeft.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t BarcodeObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BarcodeObservation() + 64);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BarcodeObservation()
{
  uint64_t result = qword_1E960A4F0;
  if (!qword_1E960A4F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

float BarcodeObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for BarcodeObservation() + 68));
}

__n128 BarcodeObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BarcodeObservation() + 72);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t BarcodeObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for BarcodeObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 76));
  return result;
}

unint64_t BarcodeObservation.description.getter()
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for BarcodeObservation();
  sub_1A3DB6C5C(v1, (uint64_t)&protocol witness table for BarcodeObservation);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 8))
  {
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 40))
  {
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    swift_bridgeObjectRelease();
  }
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A4096BAC();
  sub_1A409621C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 64) != 4)
  {
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A4096BAC();
    sub_1A409621C();
    swift_bridgeObjectRelease();
  }
  unint64_t v2 = *(void *)(v0 + 24);
  if (v2 >> 60 != 15)
  {
    uint64_t v3 = *(void *)(v0 + 16);
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A3C7D1A8(v3, v2);
    sub_1A4095BEC();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D3CECC(v3, v2);
    sub_1A409621C();
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = *(void *)(v0 + 56);
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = *(void *)(v0 + 48);
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A3C7D1A8(v5, v4);
    sub_1A4095BEC();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D3CECC(v5, v4);
    sub_1A409621C();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = sub_1A3D3FA5C(&qword_1E95EE028, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);
  sub_1A3D8AC8C(v1, (uint64_t)&off_1EF747088, v6);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  swift_bridgeObjectRetain();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

uint64_t sub_1A3D3CECC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A3C7D218(a1, a2);
  }
  return a1;
}

void sub_1A3D3CEE0(void *a1@<X0>, unsigned char *a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, unint64_t a6@<D0>, unint64_t a7@<D1>, unint64_t a8@<D2>, unint64_t a9@<D3>, unint64_t a10@<D4>, unint64_t a11@<D5>, unint64_t a12@<D6>, unint64_t a13@<D7>)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  __int16 v24 = *a3;
  *(unsigned char *)(a5 + 66) = *a2;
  id v47 = 0;
  char v25 = (void *)MRCDescriptorDecodePayloadAndSupplementalPayload();
  long long v26 = 0uLL;
  long long v27 = 0uLL;
  if (v25)
  {
    long long v46 = 0uLL;
    sub_1A409616C();
    long long v26 = 0uLL;
    long long v27 = 0uLL;
  }
  *(_OWORD *)a5 = v27;
  if (v47)
  {
    long long v46 = 0uLL;
    sub_1A409616C();

    long long v26 = 0uLL;
  }
  *(_OWORD *)(a5 + 32) = v26;
  uint64_t v28 = MRCDescriptorCopyAttribute();
  unint64_t v29 = 0xF000000000000000;
  if (v28)
  {
    uint64_t valuePtr = v28;
    int v30 = swift_dynamicCast();
    uint64_t v31 = v46;
    if (v30) {
      unint64_t v29 = *((void *)&v46 + 1);
    }
    else {
      uint64_t v31 = 0;
    }
  }
  else
  {
    uint64_t v31 = 0;
  }
  *(void *)(a5 + 16) = v31;
  *(void *)(a5 + 24) = v29;
  uint64_t v32 = MRCDescriptorCopyAttribute();
  if (v32 && (*(void *)&long long v46 = v32, swift_dynamicCast())) {
    char v33 = valuePtr;
  }
  else {
    char v33 = 0;
  }
  *(unsigned char *)(a5 + 65) = v33;
  uint64_t v34 = MRCDescriptorCopyAttribute();
  if (v34 && (*(void *)&long long v46 = v34, swift_dynamicCast())) {
    char v35 = valuePtr;
  }
  else {
    char v35 = 0;
  }
  *(unsigned char *)(a5 + 67) = v35;
  if (MRCDescriptorCopyAttribute())
  {
    self;
    uint64_t v36 = (void *)swift_dynamicCastObjCClass();
    if (v36)
    {
      uint64_t v37 = (char *)objc_msgSend(v36, sel_integerValue);
      swift_unknownObjectRelease();
      if ((unint64_t)(v37 - 2) >= 3)
      {
        if (v37 == (char *)5) {
          LOBYTE(v38) = 2;
        }
        else {
          LOBYTE(v38) = 4;
        }
      }
      else
      {
        unsigned int v38 = 0x10003u >> (8 * ((_BYTE)v37 - 2));
      }
    }
    else
    {
      swift_unknownObjectRelease();
      LOBYTE(v38) = 4;
    }
  }
  else
  {
    LOBYTE(v38) = 4;
  }
  *(unsigned char *)(a5 + 64) = v38;
  uint64_t v39 = MRCDescriptorCopyAttribute();
  unint64_t v40 = 0xF000000000000000;
  if (v39)
  {
    uint64_t valuePtr = v39;
    int v41 = swift_dynamicCast();
    uint64_t v42 = v46;
    if (v41) {
      unint64_t v40 = *((void *)&v46 + 1);
    }
    else {
      uint64_t v42 = 0;
    }
  }
  else
  {
    uint64_t v42 = 0;
  }
  *(void *)(a5 + 48) = v42;
  *(void *)(a5 + 56) = v40;
  uint64_t v43 = (int *)type metadata accessor for BarcodeObservation();
  sub_1A4095C6C();
  CFNumberRef v44 = (const __CFNumber *)MRCDescriptorCopyAttribute();
  if (v44)
  {
    type metadata accessor for CFNumber(0);
    CFNumberRef v44 = (const __CFNumber *)swift_dynamicCastUnknownClassUnconditional();
  }
  LODWORD(valuePtr) = 0;
  CFNumberGetValue(v44, kCFNumberFloatType, &valuePtr);
  *(_DWORD *)(a5 + v43[17]) = valuePtr;
  sub_1A3C7D648(a4, a5 + v43[18]);
  *(_WORD *)(a5 + v43[19]) = v24;
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(a7, a6));
  *(_OWORD *)(a5 + 72) = v46;
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(a9, a8));
  *(_OWORD *)(a5 + 88) = v46;
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(a13, a12));
  *(_OWORD *)(a5 + 120) = v46;
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(a11, a10));

  *(_OWORD *)(a5 + 104) = v46;
}

uint64_t BarcodeObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D3D374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 64);
  uint64_t v5 = sub_1A4095C7C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

float sub_1A3D3D3E4(uint64_t a1)
{
  return *(float *)(v1 + *(int *)(a1 + 68));
}

__n128 sub_1A3D3D3F0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 72);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(unsigned char *)(a2 + 48) = v4;
  return result;
}

uint64_t sub_1A3D3D414@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *(_WORD *)(v2 + *(int *)(result + 76));
  return result;
}

__n128 sub_1A3D3D424@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 72);
  *a1 = result;
  return result;
}

__n128 sub_1A3D3D430@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 88);
  *a1 = result;
  return result;
}

__n128 sub_1A3D3D43C@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 104);
  *a1 = result;
  return result;
}

__n128 sub_1A3D3D448@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 120);
  *a1 = result;
  return result;
}

uint64_t sub_1A3D3D454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D3FA5C(&qword_1E95EE028, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

void sub_1A3D3D4D8(uint64_t a1@<X0>, double *a2@<X8>)
{
}

unint64_t sub_1A3D3D4E4(char a1)
{
  unint64_t result = 0x746176726573626FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C676E6174636572;
      break;
    case 2:
      unint64_t result = 0x5364616F6C796170;
      break;
    case 3:
      unint64_t result = 0x4464616F6C796170;
      break;
    case 4:
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x676F6C6F626D7973;
      break;
    case 9:
      unint64_t result = 0x49726F6C6F437369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A3D3D654()
{
  return sub_1A3D3D4E4(*v0);
}

uint64_t sub_1A3D3D65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D40E64(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A3D3D684(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1A3D3D690(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3F5A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D3D6CC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D3F5A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t BarcodeObservation.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v21 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC510);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE038);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D3F5A0();
  sub_1A4096FEC();
  long long v26 = v2;
  long long v28 = *v2;
  char v29 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE040);
  sub_1A3D3F5F4();
  uint64_t v13 = v12;
  uint64_t v14 = v27;
  sub_1A4096DBC();
  if (!v14)
  {
    long long v27 = v8;
    long long v28 = v26[1];
    char v29 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE050);
    sub_1A3D3F660(&qword_1E95EE058, &qword_1E95EE050, (void (*)(void))sub_1A3C81178);
    sub_1A4096DBC();
    long long v28 = v26[2];
    char v29 = 4;
    sub_1A4096DBC();
    long long v28 = v26[3];
    char v29 = 5;
    sub_1A4096DBC();
    LOBYTE(v28) = *((unsigned char *)v26 + 64);
    char v29 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE060);
    sub_1A3D3F660(&qword_1E95EE068, &qword_1E95EE060, (void (*)(void))sub_1A3D3F6D8);
    sub_1A4096DBC();
    LOBYTE(v28) = 7;
    sub_1A4096D8C();
    LOBYTE(v28) = *((unsigned char *)v26 + 66);
    char v29 = 8;
    sub_1A3D3F72C();
    sub_1A4096DBC();
    LOBYTE(v28) = 9;
    sub_1A4096D8C();
    LOBYTE(v28) = 1;
    sub_1A3C9C5D8();
    uint64_t v15 = (uint64_t)v27;
    sub_1A4096D5C();
    uint64_t v16 = type metadata accessor for BarcodeObservation();
    sub_1A3D75270(v15, v16, (void (**)(void *__return_ptr, void, void))&protocol witness table for BarcodeObservation);
    LOBYTE(v28) = 0;
    sub_1A3C80D74();
    uint64_t v17 = (uint64_t)v21;
    sub_1A4096D5C();
    uint64_t v18 = sub_1A3D3FA5C(&qword_1E95EE028, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);
    sub_1A3D2A9D0(v17, v16, (uint64_t)&off_1EF747088, v18);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v17, v23);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v15, v25);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t BarcodeObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v37 = sub_1A4095C7C();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v34 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v33 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  unsigned int v38 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC528);
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE080);
  uint64_t v40 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for BarcodeObservation();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  int v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1A3D3F5A0();
  uint64_t v15 = v42;
  sub_1A4096FDC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
  int v30 = v7;
  uint64_t v29 = v5;
  long long v28 = (int *)v11;
  uint64_t v31 = v13;
  uint64_t v16 = v40;
  LOBYTE(v43) = 2;
  uint64_t v17 = sub_1A4096C9C();
  uint64_t v18 = v31;
  *(void *)uint64_t v31 = v17;
  *((void *)v18 + 1) = v19;
  char v45 = 3;
  sub_1A3C812C8();
  sub_1A4096CAC();
  long long v20 = v43;
  *((_OWORD *)v18 + 1) = v43;
  _OWORD v27[2] = *((void *)&v20 + 1);
  LOBYTE(v43) = 4;
  *((void *)v18 + 4) = sub_1A4096C9C();
  *((void *)v18 + 5) = v21;
  uint64_t v42 = v21;
  char v45 = 5;
  sub_1A4096CAC();
  uint64_t v22 = *((void *)&v43 + 1);
  *((void *)v18 + 6) = v43;
  *((void *)v18 + 7) = v22;
  char v45 = 6;
  sub_1A3D3F780();
  sub_1A4096CAC();
  v18[64] = v43;
  LOBYTE(v43) = 7;
  v18[65] = sub_1A4096CCC() & 1;
  char v45 = 8;
  sub_1A3D3F7D4();
  sub_1A4096CFC();
  v18[66] = v43;
  LOBYTE(v43) = 9;
  char v23 = sub_1A4096CCC();
  v27[1] = v20;
  v18[67] = v23 & 1;
  LOBYTE(v43) = 1;
  sub_1A3C9C5D8();
  sub_1A4096C7C();
  v27[0] = v8;
  char v45 = 0;
  sub_1A3C97AC4();
  sub_1A4096CFC();
  *(_OWORD *)(v31 + 72) = v43;
  char v45 = 1;
  sub_1A4096CFC();
  *(_OWORD *)(v31 + 88) = v43;
  char v45 = 3;
  sub_1A4096CFC();
  *(_OWORD *)(v31 + 120) = v43;
  char v45 = 2;
  sub_1A4096CFC();
  *(_OWORD *)(v31 + 104) = v43;
  LOBYTE(v43) = 0;
  sub_1A3C80D74();
  sub_1A4096C7C();
  LOBYTE(v43) = 0;
  sub_1A3D3FA5C((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  sub_1A4096CFC();
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v31[v28[16]], v34, v37);
  LOBYTE(v43) = 1;
  sub_1A4096CDC();
  *(_DWORD *)&v31[v28[17]] = v24;
  char v45 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  *(_WORD *)&v31[v28[19]] = v43;
  sub_1A3D2B130((uint64_t)v44);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v36);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v29);
  (*(void (**)(char *, void))(v16 + 8))(v10, v27[0]);
  uint64_t v25 = (uint64_t)v31;
  sub_1A3C7D648((uint64_t)v44, (uint64_t)&v31[v28[18]]);
  sub_1A3D3F828(v25, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1A3D3F88C(v25);
}

uint64_t sub_1A3D3E78C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BarcodeObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3D3E7A4(void *a1)
{
  return BarcodeObservation.encode(to:)(a1);
}

void sub_1A3D3E7BC(void *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1A4095C7C();
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = MEMORY[0x1F4188790](v8).n128_u64[0];
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *a2;
  objc_msgSend(a1, sel_topLeft, v10);
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v15, v14));
  uint64_t v16 = v77;
  uint64_t v68 = v76;
  objc_msgSend(a1, sel_topRight);
  Vision::NormalizedPoint v19 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v18, v17));
  uint64_t v20 = v74;
  uint64_t v21 = v75;
  objc_msgSend(a1, sel_bottomRight, v19.cgPoint.x, v19.cgPoint.y);
  Vision::NormalizedPoint v24 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v23, v22));
  uint64_t v25 = v72;
  uint64_t v26 = v73;
  objc_msgSend(a1, sel_bottomLeft, v24.cgPoint.x, v24.cgPoint.y);
  Vision::NormalizedPoint v29 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v28, v27));
  uint64_t v31 = v70;
  uint64_t v30 = v71;
  id v32 = objc_msgSend(a1, sel_uuid, v29.cgPoint.x, v29.cgPoint.y);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v34 = v33;
  sub_1A3D6AB18(objc_msgSend(a1, sel_symbology), &v69);
  char v35 = v69;
  if (v69 == 25)
  {
    __break(1u);
  }
  else
  {
    id v36 = objc_msgSend(a1, sel_payloadStringValue);
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v64 = sub_1A409617C();
      uint64_t v63 = v38;
    }
    else
    {
      uint64_t v64 = 0;
      uint64_t v63 = 0;
    }
    id v39 = objc_msgSend(a1, sel_payloadData);
    uint64_t v67 = a3;
    if (v39)
    {
      uint64_t v40 = v39;
      uint64_t v62 = sub_1A4095C1C();
      unint64_t v61 = v41;
    }
    else
    {
      uint64_t v62 = 0;
      unint64_t v61 = 0xF000000000000000;
    }
    id v42 = objc_msgSend(a1, sel_supplementalPayloadString);
    uint64_t v66 = v9;
    int v65 = v13;
    if (v42)
    {
      long long v43 = v42;
      uint64_t v60 = sub_1A409617C();
      uint64_t v59 = v44;
    }
    else
    {
      uint64_t v60 = 0;
      uint64_t v59 = 0;
    }
    id v45 = objc_msgSend(a1, sel_supplementalPayloadData, v59, v60);
    if (v45)
    {
      long long v46 = v45;
      char v47 = v35;
      uint64_t v48 = sub_1A4095C1C();
      unint64_t v50 = v49;
    }
    else
    {
      char v47 = v35;
      uint64_t v48 = 0;
      unint64_t v50 = 0xF000000000000000;
    }
    id v51 = objc_msgSend(a1, sel_supplementalCompositeType);
    if ((unint64_t)v51 >= 5) {
      char v52 = 4;
    }
    else {
      char v52 = 0x201000304uLL >> (8 * v51);
    }
    unsigned __int8 v53 = objc_msgSend(a1, sel_isGS1DataCarrier);
    unsigned __int8 v54 = objc_msgSend(a1, sel_isColorInverted);

    uint64_t v55 = v63;
    *(void *)a4 = v64;
    *(void *)(a4 + 8) = v55;
    unint64_t v56 = v61;
    *(void *)(a4 + 16) = v62;
    *(void *)(a4 + 24) = v56;
    uint64_t v57 = v59;
    *(void *)(a4 + 32) = v60;
    *(void *)(a4 + 40) = v57;
    *(void *)(a4 + 48) = v48;
    *(void *)(a4 + 56) = v50;
    *(unsigned char *)(a4 + 64) = v52;
    *(unsigned char *)(a4 + 65) = v53;
    *(unsigned char *)(a4 + 66) = v47;
    *(unsigned char *)(a4 + 67) = v54;
    *(void *)(a4 + 72) = v68;
    *(void *)(a4 + 80) = v16;
    *(void *)(a4 + 88) = v20;
    *(void *)(a4 + 96) = v21;
    *(void *)(a4 + 104) = v25;
    *(void *)(a4 + 112) = v26;
    *(void *)(a4 + 120) = v31;
    *(void *)(a4 + 128) = v30;
    uint64_t v58 = (int *)type metadata accessor for BarcodeObservation();
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(a4 + v58[16], v12, v8);
    *(_DWORD *)(a4 + v58[17]) = v34;
    sub_1A3C7D648(v67, a4 + v58[18]);
    *(_WORD *)(a4 + v58[19]) = v65;
  }
}

void BarcodeObservation.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int16 v5 = -8;
  objc_msgSend(a1, sel_timeRange, static NormalizedRect.fullImage.getter(v4).n128_f64[0]);
  char v7 = 0;
  sub_1A3D3E7BC(a1, &v5, (uint64_t)&v6, a2);
}

void sub_1A3D3EC50(void *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  unsigned __int16 v4 = *a2;
  sub_1A3D3E7BC(a1, &v4, a3, a4);
}

uint64_t sub_1A3D3EC7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4165707954317367 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4265707954317367 && a2 == 0xE800000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4365707954317367 && a2 == 0xE800000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656B6E696CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A3D3EE30(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1A3C801E4((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1A3D3EF08(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1A3D3F170);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1A3C7D1A8(a3, a4);
                  sub_1A3C7D1A8(a1, a2);
                  char v17 = sub_1A3C80688((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1A3C7D218(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1A3C7D1A8(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1A3C80688(v21, v22, v20, a3, a4);
                  sub_1A3C7D218(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1A3C7D1A8(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1A3C7D1A8(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1A3D3EE30(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1A3C7D218(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s6Vision18BarcodeObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (char v7 = sub_1A4096E5C(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = *(void *)(a1 + 16);
    unint64_t v10 = *(void *)(a1 + 24);
    uint64_t v11 = *(void *)(a2 + 16);
    unint64_t v12 = *(void *)(a2 + 24);
    if (v10 >> 60 == 15)
    {
      if (v12 >> 60 != 15) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v12 >> 60 == 15) {
        goto LABEL_14;
      }
      sub_1A3D3C6AC(*(void *)(a1 + 16), *(void *)(a1 + 24));
      sub_1A3D3C6AC(v11, v12);
      char v13 = sub_1A3D3EF08(v9, v10, v11, v12);
      sub_1A3D3CECC(v11, v12);
      sub_1A3D3CECC(v9, v10);
      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v14 = *(void *)(a1 + 40);
    uint64_t v15 = *(void *)(a2 + 40);
    if (v14)
    {
      if (!v15) {
        return 0;
      }
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v14 != v15)
      {
        char v16 = sub_1A4096E5C();
        uint64_t result = 0;
        if ((v16 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v15)
    {
      return 0;
    }
    uint64_t v9 = *(void *)(a1 + 48);
    unint64_t v10 = *(void *)(a1 + 56);
    uint64_t v11 = *(void *)(a2 + 48);
    unint64_t v12 = *(void *)(a2 + 56);
    if (v10 >> 60 == 15)
    {
      if (v12 >> 60 == 15)
      {
LABEL_30:
        int v18 = *(unsigned __int8 *)(a1 + 64);
        int v19 = *(unsigned __int8 *)(a2 + 64);
        if (v18 == 4)
        {
          if (v19 != 4) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (v19 == 4 || v18 != v19) {
            return result;
          }
        }
        if (*(unsigned __int8 *)(a1 + 65) != *(unsigned __int8 *)(a2 + 65)) {
          return 0;
        }
        LOBYTE(v41[0]) = *(unsigned char *)(a1 + 66);
        LOBYTE(v38[0]) = *(unsigned char *)(a2 + 66);
        if (!static BarcodeSymbology.== infix(_:_:)((unsigned __int8 *)v41, (unsigned __int8 *)v38)) {
          return 0;
        }
        if (*(unsigned __int8 *)(a1 + 67) != *(unsigned __int8 *)(a2 + 67)) {
          return 0;
        }
        v41[0] = *(_OWORD *)(a1 + 72);
        v38[0] = *(_OWORD *)(a2 + 72);
        if (!static NormalizedPoint.== infix(_:_:)((double *)v41, (double *)v38)) {
          return 0;
        }
        v41[0] = *(_OWORD *)(a1 + 88);
        v38[0] = *(_OWORD *)(a2 + 88);
        if (!static NormalizedPoint.== infix(_:_:)((double *)v41, (double *)v38)) {
          return 0;
        }
        v41[0] = *(_OWORD *)(a1 + 104);
        v38[0] = *(_OWORD *)(a2 + 104);
        if (!static NormalizedPoint.== infix(_:_:)((double *)v41, (double *)v38)) {
          return 0;
        }
        v41[0] = *(_OWORD *)(a1 + 120);
        v38[0] = *(_OWORD *)(a2 + 120);
        if (!static NormalizedPoint.== infix(_:_:)((double *)v41, (double *)v38)) {
          return 0;
        }
        uint64_t v20 = (int *)type metadata accessor for BarcodeObservation();
        if ((sub_1A4095C4C() & 1) == 0 || *(float *)(a1 + v20[17]) != *(float *)(a2 + v20[17])) {
          return 0;
        }
        uint64_t v21 = v20[18];
        uint64_t v22 = (uint64_t *)(a1 + v21);
        char v23 = *(unsigned char *)(a1 + v21 + 48);
        Vision::NormalizedPoint v24 = (uint64_t *)(a2 + v21);
        if (v23)
        {
          if (!*((unsigned char *)v24 + 48)) {
            return 0;
          }
        }
        else
        {
          if (v24[6]) {
            return 0;
          }
          uint64_t v25 = *v22;
          uint64_t v26 = v22[1];
          long long v27 = *((_OWORD *)v22 + 1);
          uint64_t v29 = v22[4];
          uint64_t v28 = v22[5];
          uint64_t v30 = *v24;
          uint64_t v31 = v24[1];
          long long v32 = *((_OWORD *)v24 + 1);
          uint64_t v34 = v24[4];
          uint64_t v33 = v24[5];
          *(void *)&v38[0] = v25;
          *((void *)&v38[0] + 1) = v26;
          v38[1] = v27;
          uint64_t v39 = v29;
          uint64_t v40 = v28;
          *(void *)&v41[0] = v30;
          *((void *)&v41[0] + 1) = v31;
          v41[1] = v32;
          uint64_t v42 = v34;
          uint64_t v43 = v33;
          if ((sub_1A409669C() & 1) == 0) {
            return 0;
          }
        }
        uint64_t v35 = v20[19];
        unsigned int v36 = *(unsigned __int16 *)(a1 + v35);
        unsigned int v37 = *(unsigned __int16 *)(a2 + v35);
        if (v36 <= 0xFFF7)
        {
          if (v37 <= 0xFFF7)
          {
            sub_1A3C832B8();
            if (sub_1A409612C()) {
              return 1;
            }
          }
        }
        else if (v37 > 0xFFF7)
        {
          return 1;
        }
        return 0;
      }
    }
    else if (v12 >> 60 != 15)
    {
      sub_1A3D3C6AC(*(void *)(a1 + 48), *(void *)(a1 + 56));
      sub_1A3D3C6AC(v11, v12);
      char v17 = sub_1A3D3EF08(v9, v10, v11, v12);
      sub_1A3D3CECC(v11, v12);
      sub_1A3D3CECC(v9, v10);
      if ((v17 & 1) == 0) {
        return 0;
      }
      goto LABEL_30;
    }
LABEL_14:
    sub_1A3D3C6AC(v9, v10);
    sub_1A3D3C6AC(v11, v12);
    sub_1A3D3CECC(v9, v10);
    sub_1A3D3CECC(v11, v12);
    return 0;
  }
  return result;
}

unint64_t sub_1A3D3F5A0()
{
  unint64_t result = qword_1E9609F68[0];
  if (!qword_1E9609F68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9609F68);
  }
  return result;
}

unint64_t sub_1A3D3F5F4()
{
  unint64_t result = qword_1E95EE048;
  if (!qword_1E95EE048)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE048);
  }
  return result;
}

uint64_t sub_1A3D3F660(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D3F6D8()
{
  unint64_t result = qword_1E95EE070;
  if (!qword_1E95EE070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE070);
  }
  return result;
}

unint64_t sub_1A3D3F72C()
{
  unint64_t result = qword_1E95EE078;
  if (!qword_1E95EE078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE078);
  }
  return result;
}

unint64_t sub_1A3D3F780()
{
  unint64_t result = qword_1E95EE088;
  if (!qword_1E95EE088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE088);
  }
  return result;
}

unint64_t sub_1A3D3F7D4()
{
  unint64_t result = qword_1E95EE090;
  if (!qword_1E95EE090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE090);
  }
  return result;
}

uint64_t sub_1A3D3F828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BarcodeObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D3F88C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BarcodeObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A3D3F8EC()
{
  unint64_t result = qword_1E95EE098;
  if (!qword_1E95EE098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE098);
  }
  return result;
}

uint64_t sub_1A3D3F940(void *a1)
{
  a1[1] = sub_1A3D3FA5C(&qword_1E95EE0A0, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);
  a1[2] = sub_1A3D3FA5C(&qword_1E95EE0A8, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);
  a1[3] = sub_1A3D3FA5C(&qword_1E95EE0B0, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);
  uint64_t result = sub_1A3D3FA5C(&qword_1E95EE030, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3D3FA14()
{
  return sub_1A3D3FA5C(&qword_1E95ED158, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);
}

uint64_t sub_1A3D3FA5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D3FAA4(uint64_t a1)
{
  uint64_t result = sub_1A3D3FA5C(&qword_1E95EE028, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BarcodeObservation(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2 + 2;
    unint64_t v9 = a2[3];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *v8;
    }
    else
    {
      uint64_t v11 = *(void *)v8;
      sub_1A3C7D1A8(v11, v9);
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v9;
    }
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v12;
    char v13 = a2 + 6;
    unint64_t v14 = a2[7];
    swift_bridgeObjectRetain();
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v13;
    }
    else
    {
      uint64_t v15 = *(void *)v13;
      sub_1A3C7D1A8(v15, v14);
      *(void *)(a1 + 48) = v15;
      *(void *)(a1 + 56) = v14;
    }
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    uint64_t v16 = a3[16];
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
    uint64_t v19 = sub_1A4095C7C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[18];
    *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)((char *)a2 + a3[17]);
    uint64_t v21 = a1 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    long long v23 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v23;
    *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
    *(unsigned char *)(v21 + 48) = *(unsigned char *)(v22 + 48);
    *(_WORD *)(a1 + a3[19]) = *(_WORD *)((char *)a2 + a3[19]);
  }
  return a1;
}

uint64_t destroy for BarcodeObservation(uint64_t *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = a1[3];
  if (v4 >> 60 != 15) {
    sub_1A3C7D218(a1[2], v4);
  }
  swift_bridgeObjectRelease();
  unint64_t v5 = a1[7];
  if (v5 >> 60 != 15) {
    sub_1A3C7D218(a1[6], v5);
  }
  BOOL v6 = (char *)a1 + *(int *)(a2 + 64);
  uint64_t v7 = sub_1A4095C7C();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for BarcodeObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = (_OWORD *)(a2 + 16);
  unint64_t v8 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    uint64_t v9 = *(void *)v7;
    sub_1A3C7D1A8(v9, v8);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v8;
  }
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  uint64_t v11 = (_OWORD *)(a2 + 48);
  unint64_t v12 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *v11;
  }
  else
  {
    uint64_t v13 = *(void *)v11;
    sub_1A3C7D1A8(v13, v12);
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v12;
  }
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v14 = a3[16];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v17 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(unsigned char *)(v19 + 48) = *(unsigned char *)(v20 + 48);
  *(_WORD *)(a1 + a3[19]) = *(_WORD *)(a2 + a3[19]);
  return a1;
}

uint64_t assignWithCopy for BarcodeObservation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *v6;
      sub_1A3C7D1A8(*v6, *(void *)(a2 + 24));
      *(void *)(a1 + 16) = v8;
      *(void *)(a1 + 24) = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_1A3D4012C(a1 + 16);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  uint64_t v9 = *v6;
  sub_1A3C7D1A8(*v6, *(void *)(a2 + 24));
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v7;
  sub_1A3C7D218(v10, v11);
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v12 = (uint64_t *)(a2 + 48);
  unint64_t v13 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v15 = *v12;
      sub_1A3C7D1A8(*v12, *(void *)(a2 + 56));
      uint64_t v16 = *(void *)(a1 + 48);
      unint64_t v17 = *(void *)(a1 + 56);
      *(void *)(a1 + 48) = v15;
      *(void *)(a1 + 56) = v13;
      sub_1A3C7D218(v16, v17);
      goto LABEL_15;
    }
    sub_1A3D4012C(a1 + 48);
    goto LABEL_13;
  }
  if (v13 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v12;
    goto LABEL_15;
  }
  uint64_t v14 = *v12;
  sub_1A3C7D1A8(*v12, *(void *)(a2 + 56));
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v13;
LABEL_15:
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v18 = a3[16];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  uint64_t v22 = a3[18];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  char v25 = *(unsigned char *)(v24 + 48);
  long long v27 = *(_OWORD *)(v24 + 16);
  long long v26 = *(_OWORD *)(v24 + 32);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v27;
  *(_OWORD *)(v23 + 32) = v26;
  *(unsigned char *)(v23 + 48) = v25;
  *(_WORD *)(a1 + a3[19]) = *(_WORD *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_1A3D4012C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for BarcodeObservation(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v8 = a3[16];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(unsigned char *)(v13 + 48) = *(unsigned char *)(v14 + 48);
  *(_WORD *)(a1 + a3[19]) = *(_WORD *)(a2 + a3[19]);
  return a1;
}

uint64_t assignWithTake for BarcodeObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a2 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  if (v8 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 24);
  if (v9 >> 60 == 15)
  {
    sub_1A3D4012C(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v7;
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v7;
  *(void *)(a1 + 24) = v9;
  sub_1A3C7D218(v10, v8);
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)(a2 + 48);
  unint64_t v13 = *(void *)(a1 + 56);
  if (v13 >> 60 != 15)
  {
    unint64_t v14 = *(void *)(a2 + 56);
    if (v14 >> 60 != 15)
    {
      uint64_t v15 = *(void *)(a1 + 48);
      *(void *)(a1 + 48) = *v12;
      *(void *)(a1 + 56) = v14;
      sub_1A3C7D218(v15, v13);
      goto LABEL_11;
    }
    sub_1A3D4012C(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v12;
LABEL_11:
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v16 = a3[16];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v19 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
  *(unsigned char *)(v21 + 48) = *(unsigned char *)(v22 + 48);
  *(_WORD *)(a1 + a3[19]) = *(_WORD *)(a2 + a3[19]);
  return a1;
}

uint64_t getEnumTagSinglePayload for BarcodeObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D4043C);
}

uint64_t sub_1A3D4043C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_1A4095C7C();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 64);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for BarcodeObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D4050C);
}

uint64_t sub_1A3D4050C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_1A4095C7C();
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 64);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A3D405B4()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BarcodeObservation.CompositeType()
{
  return &type metadata for BarcodeObservation.CompositeType;
}

uint64_t getEnumTagSinglePayload for BarcodeObservation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BarcodeObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D40818);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BarcodeObservation.CodingKeys()
{
  return &type metadata for BarcodeObservation.CodingKeys;
}

unsigned char *_s6Vision18BarcodeObservationV13CompositeTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D4091CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BarcodeObservation.CompositeType.CodingKeys()
{
  return &type metadata for BarcodeObservation.CompositeType.CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeObservation.CompositeType.Gs1TypeACodingKeys()
{
  return &type metadata for BarcodeObservation.CompositeType.Gs1TypeACodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeObservation.CompositeType.Gs1TypeBCodingKeys()
{
  return &type metadata for BarcodeObservation.CompositeType.Gs1TypeBCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeObservation.CompositeType.Gs1TypeCCodingKeys()
{
  return &type metadata for BarcodeObservation.CompositeType.Gs1TypeCCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeObservation.CompositeType.LinkedCodingKeys()
{
  return &type metadata for BarcodeObservation.CompositeType.LinkedCodingKeys;
}

unint64_t sub_1A3D40998()
{
  unint64_t result = qword_1E960AA00[0];
  if (!qword_1E960AA00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960AA00);
  }
  return result;
}

unint64_t sub_1A3D409F0()
{
  unint64_t result = qword_1E960AC10[0];
  if (!qword_1E960AC10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960AC10);
  }
  return result;
}

unint64_t sub_1A3D40A48()
{
  unint64_t result = qword_1E960AD20;
  if (!qword_1E960AD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960AD20);
  }
  return result;
}

unint64_t sub_1A3D40AA0()
{
  unint64_t result = qword_1E960AD28[0];
  if (!qword_1E960AD28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960AD28);
  }
  return result;
}

unint64_t sub_1A3D40AF8()
{
  unint64_t result = qword_1E960ADB0;
  if (!qword_1E960ADB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960ADB0);
  }
  return result;
}

unint64_t sub_1A3D40B50()
{
  unint64_t result = qword_1E960ADB8[0];
  if (!qword_1E960ADB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960ADB8);
  }
  return result;
}

unint64_t sub_1A3D40BA8()
{
  unint64_t result = qword_1E960AE40;
  if (!qword_1E960AE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960AE40);
  }
  return result;
}

unint64_t sub_1A3D40C00()
{
  unint64_t result = qword_1E960AE48[0];
  if (!qword_1E960AE48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960AE48);
  }
  return result;
}

unint64_t sub_1A3D40C58()
{
  unint64_t result = qword_1E960AED0;
  if (!qword_1E960AED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960AED0);
  }
  return result;
}

unint64_t sub_1A3D40CB0()
{
  unint64_t result = qword_1E960AED8[0];
  if (!qword_1E960AED8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960AED8);
  }
  return result;
}

unint64_t sub_1A3D40D08()
{
  unint64_t result = qword_1E960AF60;
  if (!qword_1E960AF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960AF60);
  }
  return result;
}

unint64_t sub_1A3D40D60()
{
  unint64_t result = qword_1E960AF68[0];
  if (!qword_1E960AF68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960AF68);
  }
  return result;
}

unint64_t sub_1A3D40DB8()
{
  unint64_t result = qword_1E960AFF0;
  if (!qword_1E960AFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960AFF0);
  }
  return result;
}

unint64_t sub_1A3D40E10()
{
  unint64_t result = qword_1E960AFF8[0];
  if (!qword_1E960AFF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960AFF8);
  }
  return result;
}

uint64_t sub_1A3D40E64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C676E6174636572 && a2 == 0xE900000000000065 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5364616F6C796170 && a2 == 0xED0000676E697274 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4464616F6C796170 && a2 == 0xEB00000000617461 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A40B56E0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B5700 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A40B5720 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A40B5740 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x676F6C6F626D7973 && a2 == 0xE900000000000079 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x49726F6C6F437369 && a2 == 0xEF6465747265766ELL)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t TextObservation.characterBoxes.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 TextObservation.boundingBox.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 TextObservation.topLeft.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 40);
  *a1 = result;
  return result;
}

__n128 TextObservation.topRight.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 56);
  *a1 = result;
  return result;
}

__n128 TextObservation.bottomRight.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 72);
  *a1 = result;
  return result;
}

__n128 TextObservation.bottomLeft.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 88);
  *a1 = result;
  return result;
}

uint64_t TextObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TextObservation() + 40);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for TextObservation()
{
  uint64_t result = qword_1E960B410;
  if (!qword_1E960B410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

float TextObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for TextObservation() + 44));
}

__n128 TextObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TextObservation() + 48);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t TextObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for TextObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 52));
  return result;
}

unint64_t TextObservation.description.getter()
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for TextObservation();
  sub_1A3DB6C5C(v1, (uint64_t)&protocol witness table for TextObservation);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  if (*v0)
  {
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = sub_1A3D4451C(&qword_1E95EE0B8, (void (*)(uint64_t))type metadata accessor for TextObservation);
  sub_1A3D8AC8C(v1, (uint64_t)&off_1EF745328, v2);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  swift_bridgeObjectRetain();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

uint64_t TextObservation.text.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TextObservation() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A3D416C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, CGRect *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, CGFloat *a9@<X8>, float a10@<S0>, uint64_t a11, uint64_t a12, __int16 *a13)
{
  uint64_t v18 = *a2;
  uint64_t v17 = a2[1];
  int v19 = *((unsigned __int8 *)a2 + 16);
  uint64_t v20 = a3[1];
  int v21 = *((unsigned __int8 *)a3 + 16);
  uint64_t v49 = *a4;
  uint64_t v47 = *a3;
  uint64_t v48 = a4[1];
  int v22 = *((unsigned __int8 *)a4 + 16);
  CGFloat x = a5->origin.x;
  CGFloat y = a5->origin.y;
  CGFloat width = a5->size.width;
  CGFloat height = a5->size.height;
  __int16 v27 = *a13;
  if (*(unsigned char *)(a1 + 16) != 1)
  {
    uint64_t v31 = *(void *)(a1 + 8);
    a9[5] = *(CGFloat *)a1;
    *((void *)a9 + 6) = v31;
    if (!v19) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  double MinX = CGRectGetMinX(*a5);
  v54.origin.CGFloat x = x;
  v54.origin.CGFloat y = y;
  v54.size.CGFloat width = width;
  v54.size.CGFloat height = height;
  double MaxY = CGRectGetMaxY(v54);
  NormalizedPoint.init(x:y:)((double *)&v51, MinX, MaxY);
  uint64_t v30 = v52;
  *((void *)a9 + 5) = v51;
  *((void *)a9 + 6) = v30;
  if (v19)
  {
LABEL_5:
    v55.origin.CGFloat x = x;
    v55.origin.CGFloat y = y;
    v55.size.CGFloat width = width;
    v55.size.CGFloat height = height;
    double MaxX = CGRectGetMaxX(v55);
    v56.origin.CGFloat x = x;
    v56.origin.CGFloat y = y;
    v56.size.CGFloat width = width;
    v56.size.CGFloat height = height;
    double v33 = CGRectGetMaxY(v56);
    NormalizedPoint.init(x:y:)((double *)&v51, MaxX, v33);
    uint64_t v18 = v51;
    uint64_t v17 = v52;
  }
LABEL_6:
  *((void *)a9 + 7) = v18;
  *((void *)a9 + 8) = v17;
  uint64_t v34 = v47;
  if (v21)
  {
    v57.origin.CGFloat x = x;
    v57.origin.CGFloat y = y;
    v57.size.CGFloat width = width;
    v57.size.CGFloat height = height;
    double v35 = CGRectGetMaxX(v57);
    v58.origin.CGFloat x = x;
    v58.origin.CGFloat y = y;
    v58.size.CGFloat width = width;
    v58.size.CGFloat height = height;
    double MinY = CGRectGetMinY(v58);
    NormalizedPoint.init(x:y:)((double *)&v51, v35, MinY);
    uint64_t v34 = v51;
    uint64_t v20 = v52;
  }
  *((void *)a9 + 9) = v34;
  *((void *)a9 + 10) = v20;
  uint64_t v38 = v48;
  uint64_t v37 = v49;
  if (v22)
  {
    v59.origin.CGFloat x = x;
    v59.origin.CGFloat y = y;
    v59.size.CGFloat width = width;
    v59.size.CGFloat height = height;
    double v39 = CGRectGetMinX(v59);
    v60.origin.CGFloat x = x;
    v60.origin.CGFloat y = y;
    v60.size.CGFloat width = width;
    v60.size.CGFloat height = height;
    double v40 = CGRectGetMinY(v60);
    NormalizedPoint.init(x:y:)((double *)&v51, v39, v40);
    uint64_t v37 = v51;
    uint64_t v38 = v52;
  }
  *((void *)a9 + 11) = v37;
  *((void *)a9 + 12) = v38;
  a9[1] = x;
  a9[2] = y;
  a9[3] = width;
  a9[4] = height;
  *(void *)a9 = a6;
  unint64_t v41 = (int *)type metadata accessor for TextObservation();
  uint64_t v42 = (void *)((char *)a9 + v41[14]);
  *uint64_t v42 = a7;
  v42[1] = a8;
  uint64_t v43 = (char *)a9 + v41[10];
  uint64_t v44 = sub_1A4095C7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v43, a11, v44);
  *(float *)((char *)a9 + v41[11]) = a10;
  *(_WORD *)((char *)a9 + v41[13]) = v27;
  uint64_t v45 = (uint64_t)a9 + v41[12];

  return sub_1A3C7D648(a12, v45);
}

uint64_t TextObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D419D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_1A4095C7C();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

float sub_1A3D41A44(uint64_t a1)
{
  return *(float *)(v1 + *(int *)(a1 + 44));
}

__n128 sub_1A3D41A50@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 48);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(unsigned char *)(a2 + 48) = v4;
  return result;
}

uint64_t sub_1A3D41A74@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *(_WORD *)(v2 + *(int *)(result + 52));
  return result;
}

__n128 sub_1A3D41A84@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 40);
  *a1 = result;
  return result;
}

__n128 sub_1A3D41A90@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 56);
  *a1 = result;
  return result;
}

uint64_t sub_1A3D41A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D4451C(&qword_1E95EE0B8, (void (*)(uint64_t))type metadata accessor for TextObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3D41B20()
{
  uint64_t result = 1954047348;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574636172616863;
      break;
    case 2:
      uint64_t result = 0x6C676E6174636572;
      break;
    case 3:
      uint64_t result = 0x676E69646E756F62;
      break;
    case 4:
      uint64_t result = 0x746176726573626FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D41BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D44244(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D41C0C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4327C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D41C48(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4327C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TextObservation.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v20 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (uint64_t)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC510);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x1F4188790](v5);
  BOOL v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE0C8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D4327C();
  sub_1A4096FEC();
  uint64_t v12 = type metadata accessor for TextObservation();
  long long v26 = *(_OWORD *)(v2 + *(int *)(v12 + 56));
  char v28 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE040);
  sub_1A3D43410((unint64_t *)&qword_1E95EE048);
  uint64_t v13 = v25;
  sub_1A4096DBC();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v25 = v9;
  uint64_t v15 = v24;
  *(void *)&long long v26 = *(void *)v2;
  char v28 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE0D0);
  sub_1A3D432D0();
  sub_1A4096DBC();
  long long v16 = *(_OWORD *)(v2 + 24);
  long long v26 = *(_OWORD *)(v2 + 8);
  long long v27 = v16;
  char v28 = 3;
  sub_1A3C80D20();
  sub_1A4096DBC();
  LOBYTE(v26) = 2;
  sub_1A3C9C5D8();
  uint64_t v17 = v7;
  sub_1A4096D5C();
  sub_1A3D75270((uint64_t)v7, v12, (void (**)(void *__return_ptr, void, void))&protocol witness table for TextObservation);
  uint64_t v18 = v25;
  LOBYTE(v26) = 4;
  sub_1A3C80D74();
  sub_1A4096D5C();
  uint64_t v19 = sub_1A3D4451C(&qword_1E95EE0B8, (void (*)(uint64_t))type metadata accessor for TextObservation);
  sub_1A3D2A9D0(v23, v12, (uint64_t)&off_1EF745328, v19);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v23, v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v22);
  return (*(uint64_t (**)(char *, void))(v18 + 8))(v11, 0);
}

uint64_t TextObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v28 = sub_1A4095C7C();
  uint64_t v25 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  long long v27 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v30 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC528);
  uint64_t v31 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE0E8);
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TextObservation();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  double v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1A3D4327C();
  uint64_t v15 = v34;
  sub_1A4096FDC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  uint64_t v23 = v7;
  uint64_t v22 = v5;
  uint64_t v16 = v32;
  uint64_t v34 = (int *)v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE040);
  char v38 = 0;
  sub_1A3D43410(&qword_1E95EE0F0);
  sub_1A4096CFC();
  *(_OWORD *)&v13[v34[14]] = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE0D0);
  char v38 = 1;
  sub_1A3D43474();
  sub_1A4096CFC();
  uint64_t v17 = v35;
  *(void *)uint64_t v13 = v35;
  char v38 = 3;
  sub_1A3C80E18();
  sub_1A4096CFC();
  v21[2] = v17;
  long long v18 = v36;
  *(_OWORD *)(v13 + 8) = v35;
  *(_OWORD *)(v13 + 24) = v18;
  LOBYTE(v35) = 2;
  sub_1A3C9C5D8();
  sub_1A4096C7C();
  char v38 = 0;
  v21[1] = sub_1A3C97AC4();
  sub_1A4096CFC();
  *(_OWORD *)(v13 + 40) = v35;
  char v38 = 1;
  sub_1A4096CFC();
  *(_OWORD *)(v13 + 56) = v35;
  char v38 = 3;
  sub_1A4096CFC();
  *(_OWORD *)(v13 + 88) = v35;
  char v38 = 2;
  sub_1A4096CFC();
  *(_OWORD *)(v13 + 72) = v35;
  LOBYTE(v35) = 4;
  sub_1A3C80D74();
  sub_1A4096C7C();
  LOBYTE(v35) = 0;
  sub_1A3D4451C((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  sub_1A4096CFC();
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v13[v34[10]], v27, v28);
  LOBYTE(v35) = 1;
  sub_1A4096CDC();
  *(_DWORD *)&v13[v34[11]] = v19;
  char v38 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  *(_WORD *)&v13[v34[13]] = v35;
  sub_1A3D2B130((uint64_t)v37);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v29);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v22);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v8);
  sub_1A3C7D648((uint64_t)v37, (uint64_t)&v13[v34[12]]);
  sub_1A3D444B4((uint64_t)v13, v24, (uint64_t (*)(void))type metadata accessor for TextObservation);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_1A3D44564((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TextObservation);
}

uint64_t sub_1A3D42AD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TextObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3D42AEC(void *a1)
{
  return TextObservation.encode(to:)(a1);
}

void sub_1A3D42B04(void *a1@<X0>, unsigned __int16 *a2@<X1>, CGFloat *a3@<X2>, uint64_t a4@<X3>, CGFloat *a5@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v9 = sub_1A4095C7C();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RectangleObservation();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (CGFloat **)((char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v45 = *a2;
  CGFloat v16 = *a3;
  CGFloat v17 = a3[1];
  CGFloat v18 = a3[2];
  CGFloat v19 = a3[3];
  CGFloat x = COERCE_DOUBLE(objc_msgSend(a1, sel_characterBoxes));
  if (x != 0.0)
  {
    uint64_t v44 = v11;
    sub_1A3D43520();
    unint64_t v21 = sub_1A409630C();

    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1A4096BFC();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v22)
      {
LABEL_4:
        *(void *)&v48.origin.CGFloat x = MEMORY[0x1E4FBC860];
        sub_1A3CD10FC(0, v22 & ~(v22 >> 63), 0);
        if (v22 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v42 = a5;
        uint64_t v43 = a1;
        uint64_t v23 = 0;
        CGFloat x = v48.origin.x;
        do
        {
          if ((v21 & 0xC000000000000001) != 0) {
            id v24 = (id)MEMORY[0x1A6254720](v23, v21);
          }
          else {
            id v24 = *(id *)(v21 + 8 * v23 + 32);
          }
          LOWORD(v59) = v45;
          v49.origin.CGFloat x = v16;
          v49.origin.CGFloat y = v17;
          v49.size.CGFloat width = v18;
          v49.size.CGFloat height = v19;
          sub_1A3C9C064(v24, (__int16 *)&v59, (uint64_t *)&v49, v46, v15);
          v48.origin.CGFloat x = x;
          unint64_t v26 = *(void *)(*(void *)&x + 16);
          unint64_t v25 = *(void *)(*(void *)&x + 24);
          if (v26 >= v25 >> 1)
          {
            sub_1A3CD10FC(v25 > 1, v26 + 1, 1);
            CGFloat x = v48.origin.x;
          }
          ++v23;
          *(void *)(*(void *)&x + 16) = v26 + 1;
          sub_1A3D43560((uint64_t)v15, *(void *)&x+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v26);
        }
        while (v22 != v23);
        swift_bridgeObjectRelease();
        a5 = v42;
        a1 = v43;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    CGFloat x = MEMORY[0x1E4FBC860];
LABEL_15:
    uint64_t v11 = v44;
  }
  objc_msgSend(a1, sel_topLeft, v42, v43);
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v28, v27));
  long long v59 = v61;
  char v60 = 0;
  objc_msgSend(a1, sel_topRight);
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v30, v29));
  long long v56 = v58;
  char v57 = 0;
  objc_msgSend(a1, sel_bottomRight);
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v32, v31));
  long long v53 = v55;
  char v54 = 0;
  objc_msgSend(a1, sel_bottomLeft);
  NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v34, v33));
  long long v50 = v52;
  char v51 = 0;
  objc_msgSend(a1, sel_boundingBox);
  NormalizedRect.init(normalizedRect:)(v62);
  CGRect v48 = v49;
  id v35 = objc_msgSend(a1, sel_text);
  if (v35)
  {
    long long v36 = v35;
    uint64_t v37 = sub_1A409617C();
    uint64_t v39 = v38;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v39 = 0;
  }
  id v40 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  __int16 v47 = v45;
  sub_1A3D416C0((uint64_t)&v59, (uint64_t *)&v56, (uint64_t *)&v53, (uint64_t *)&v50, &v48, *(uint64_t *)&x, v37, v39, a5, v41, (uint64_t)v11, v46, &v47);
}

void TextObservation.init(_:)(void *a1@<X0>, CGFloat *a2@<X8>)
{
  unsigned __int16 v6 = -8;
  static NormalizedRect.fullImage.getter(v5);
  objc_msgSend(a1, sel_timeRange, *(_OWORD *)v5, *(_OWORD *)&v5[1]);
  char v8 = 0;
  sub_1A3D42B04(a1, &v6, (CGFloat *)&v4, (uint64_t)&v7, a2);
}

void sub_1A3D42FB4(void *a1@<X0>, unsigned __int16 *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, CGFloat *a5@<X8>)
{
  unsigned __int16 v7 = *a2;
  long long v5 = a3[1];
  v6[0] = *a3;
  v6[1] = v5;
  sub_1A3D42B04(a1, &v7, (CGFloat *)v6, a4, a5);
}

BOOL _s6Vision15TextObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  if (*(void *)a1)
  {
    if (!v4) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = swift_bridgeObjectRetain();
    char v6 = sub_1A3CD02C8(v5, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  CGSize v7 = *(CGSize *)(a1 + 24);
  v36.origin = *(CGPoint *)(a1 + 8);
  v36.size = v7;
  CGSize v8 = *(CGSize *)(a2 + 24);
  v33.origin = *(CGPoint *)(a2 + 8);
  v33.size = v8;
  if (!static NormalizedRect.== infix(_:_:)(&v36, &v33)) {
    return 0;
  }
  v36.origin = *(CGPoint *)(a1 + 40);
  v33.origin = *(CGPoint *)(a2 + 40);
  if (!static NormalizedPoint.== infix(_:_:)(&v36.origin.x, &v33.origin.x)) {
    return 0;
  }
  v36.origin = *(CGPoint *)(a1 + 56);
  v33.origin = *(CGPoint *)(a2 + 56);
  if (!static NormalizedPoint.== infix(_:_:)(&v36.origin.x, &v33.origin.x)) {
    return 0;
  }
  v36.origin = *(CGPoint *)(a1 + 72);
  v33.origin = *(CGPoint *)(a2 + 72);
  if (!static NormalizedPoint.== infix(_:_:)(&v36.origin.x, &v33.origin.x)) {
    return 0;
  }
  v36.origin = *(CGPoint *)(a1 + 88);
  v33.origin = *(CGPoint *)(a2 + 88);
  if (!static NormalizedPoint.== infix(_:_:)(&v36.origin.x, &v33.origin.x)) {
    return 0;
  }
  uint64_t v9 = (int *)type metadata accessor for TextObservation();
  if ((sub_1A4095C4C() & 1) == 0 || *(float *)(a1 + v9[11]) != *(float *)(a2 + v9[11])) {
    return 0;
  }
  uint64_t v10 = v9[12];
  uint64_t v11 = a1 + v10;
  char v12 = *(unsigned char *)(a1 + v10 + 48);
  uint64_t v13 = a2 + v10;
  if (v12)
  {
    if (!*(unsigned char *)(v13 + 48)) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(v13 + 48)) {
      return 0;
    }
    CGFloat v14 = *(double *)v11;
    CGFloat v15 = *(double *)(v11 + 8);
    CGSize v16 = *(CGSize *)(v11 + 16);
    uint64_t v18 = *(void *)(v11 + 32);
    uint64_t v17 = *(void *)(v11 + 40);
    CGFloat v19 = *(double *)v13;
    CGFloat v20 = *(double *)(v13 + 8);
    CGSize v21 = *(CGSize *)(v13 + 16);
    uint64_t v23 = *(void *)(v13 + 32);
    uint64_t v22 = *(void *)(v13 + 40);
    v33.origin.CGFloat x = v14;
    v33.origin.CGFloat y = v15;
    v33.size = v16;
    uint64_t v34 = v18;
    uint64_t v35 = v17;
    v36.origin.CGFloat x = v19;
    v36.origin.CGFloat y = v20;
    v36.size = v21;
    uint64_t v37 = v23;
    uint64_t v38 = v22;
    if ((sub_1A409669C() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v24 = v9[13];
  unsigned int v25 = *(unsigned __int16 *)(a1 + v24);
  unsigned int v26 = *(unsigned __int16 *)(a2 + v24);
  if (v25 <= 0xFFF7)
  {
    if (v26 > 0xFFF7) {
      return 0;
    }
    sub_1A3C832B8();
    if ((sub_1A409612C() & 1) == 0) {
      return 0;
    }
  }
  else if (v26 <= 0xFFF7)
  {
    return 0;
  }
  uint64_t v27 = v9[14];
  unint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = *(void *)(a1 + v27 + 8);
  unint64_t v30 = (void *)(a2 + v27);
  uint64_t v31 = v30[1];
  if (v29) {
    return v31 && (*v28 == *v30 && v29 == v31 || (sub_1A4096E5C() & 1) != 0);
  }
  return !v31;
}

unint64_t sub_1A3D4327C()
{
  unint64_t result = qword_1E960B080[0];
  if (!qword_1E960B080[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960B080);
  }
  return result;
}

unint64_t sub_1A3D432D0()
{
  unint64_t result = qword_1E95EE0D8;
  if (!qword_1E95EE0D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE0D0);
    sub_1A3D4337C(&qword_1E95EE0E0, &qword_1E95EC550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE0D8);
  }
  return result;
}

uint64_t sub_1A3D4337C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95ECF00);
    sub_1A3D4451C(a2, (void (*)(uint64_t))type metadata accessor for RectangleObservation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D43410(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE040);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D43474()
{
  unint64_t result = qword_1E95EE0F8;
  if (!qword_1E95EE0F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE0D0);
    sub_1A3D4337C(&qword_1E95EE100, &qword_1E95EC548);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE0F8);
  }
  return result;
}

unint64_t sub_1A3D43520()
{
  unint64_t result = qword_1E95EC398;
  if (!qword_1E95EC398)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EC398);
  }
  return result;
}

uint64_t sub_1A3D43560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RectangleObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D435C4(void *a1)
{
  a1[1] = sub_1A3D4451C(&qword_1E95EE108, (void (*)(uint64_t))type metadata accessor for TextObservation);
  a1[2] = sub_1A3D4451C(&qword_1E95EE110, (void (*)(uint64_t))type metadata accessor for TextObservation);
  a1[3] = sub_1A3D4451C(&qword_1E95EE118, (void (*)(uint64_t))type metadata accessor for TextObservation);
  uint64_t result = sub_1A3D4451C(&qword_1E95EE0C0, (void (*)(uint64_t))type metadata accessor for TextObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3D43698()
{
  return sub_1A3D4451C(&qword_1E95ED178, (void (*)(uint64_t))type metadata accessor for TextObservation);
}

uint64_t sub_1A3D436E0(uint64_t a1)
{
  uint64_t result = sub_1A3D4451C(&qword_1E95EE0B8, (void (*)(uint64_t))type metadata accessor for TextObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TextObservation(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    uint64_t v8 = a3[10];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    uint64_t v11 = sub_1A4095C7C();
    char v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[12];
    *(_DWORD *)(v7 + a3[11]) = *(_DWORD *)((char *)a2 + a3[11]);
    uint64_t v14 = v7 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    long long v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v16;
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
    *(unsigned char *)(v14 + 48) = *(unsigned char *)(v15 + 48);
    uint64_t v17 = a3[14];
    *(_WORD *)(v7 + a3[13]) = *(_WORD *)((char *)a2 + a3[13]);
    uint64_t v18 = (void *)(v7 + v17);
    CGFloat v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for TextObservation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextObservation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v9 = sub_1A4095C7C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  uint64_t v15 = a3[14];
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  long long v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *long long v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TextObservation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  uint64_t v6 = a3[10];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[11]) = *(_DWORD *)((char *)a2 + a3[11]);
  uint64_t v10 = a3[12];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[48];
  long long v15 = *((_OWORD *)v12 + 1);
  long long v14 = *((_OWORD *)v12 + 2);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v15;
  *((_OWORD *)v11 + 2) = v14;
  v11[48] = v13;
  *(_WORD *)((char *)a1 + a3[13]) = *(_WORD *)((char *)a2 + a3[13]);
  uint64_t v16 = a3[14];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TextObservation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
  uint64_t v14 = a3[14];
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for TextObservation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
  uint64_t v14 = a3[14];
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  long long v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *long long v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D43DE4);
}

uint64_t sub_1A3D43DE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_1A4095C7C();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TextObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D43EB4);
}

void *sub_1A3D43EB4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_1A4095C7C();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 40);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A3D43F5C()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TextObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D44104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextObservation.CodingKeys()
{
  return &type metadata for TextObservation.CodingKeys;
}

unint64_t sub_1A3D44140()
{
  unint64_t result = qword_1E960B520[0];
  if (!qword_1E960B520[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960B520);
  }
  return result;
}

unint64_t sub_1A3D44198()
{
  unint64_t result = qword_1E960B630;
  if (!qword_1E960B630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960B630);
  }
  return result;
}

unint64_t sub_1A3D441F0()
{
  unint64_t result = qword_1E960B638[0];
  if (!qword_1E960B638[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960B638);
  }
  return result;
}

uint64_t sub_1A3D44244(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574636172616863 && a2 == 0xEE007365786F4272 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C676E6174636572 && a2 == 0xE900000000000065 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A3D444B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3D4451C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D44564(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1A3D445C8(char a1, CGFloat *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  if (a1) {
    goto LABEL_3;
  }
  CGFloat v10 = *a2;
  CGFloat v11 = a2[1];
  CGFloat v12 = a2[2];
  CGFloat v13 = a2[3];
  v22.origin.CGFloat x = *a2;
  v22.origin.CGFloat y = v11;
  v22.size.CGFloat width = v12;
  v22.size.CGFloat height = v13;
  static NormalizedRect.fullImage.getter(v21);
  v20.origin = (CGPoint)v21[0];
  v20.size = (CGSize)v21[1];
  if (static NormalizedRect.== infix(_:_:)(&v22, &v20))
  {
LABEL_3:
    CGFloat v16 = a3;
    CGFloat v17 = a4;
    CGFloat v18 = a5;
    CGFloat v19 = a6;
    NormalizedRect.init(normalizedRect:)(*(__C::CGRect *)&v16);
  }
  else
  {
    v22.origin.CGFloat x = v10;
    v22.origin.CGFloat y = v11;
    v22.size.CGFloat width = v12;
    v22.size.CGFloat height = v13;
    v24.origin.CGFloat x = a3;
    v24.origin.CGFloat y = a4;
    v24.size.CGFloat width = a5;
    v24.size.CGFloat height = a6;
    NormalizedRect.init(imageRect:in:normalizedTo:)(v24, (CGSize)__PAIR128__(1.0, 1.0), *(Vision::NormalizedRect *)&v14);
  }
}

void sub_1A3D446C4(char a1, CGFloat *a2, double a3, double a4)
{
  if (a1) {
    goto LABEL_3;
  }
  CGFloat v6 = *a2;
  CGFloat v7 = a2[1];
  CGFloat v8 = a2[2];
  CGFloat v9 = a2[3];
  v16.origin.CGFloat x = *a2;
  v16.origin.CGFloat y = v7;
  v16.size.CGFloat width = v8;
  v16.size.CGFloat height = v9;
  static NormalizedRect.fullImage.getter(v15);
  v14.origin = (CGPoint)v15[0];
  v14.size = (CGSize)v15[1];
  if (static NormalizedRect.== infix(_:_:)(&v16, &v14))
  {
LABEL_3:
    NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(*(unint64_t *)&a4, *(unint64_t *)&a3));
  }
  else
  {
    v16.origin.CGFloat x = v6;
    v16.origin.CGFloat y = v7;
    v16.size.CGFloat width = v8;
    v16.size.CGFloat height = v9;
    NormalizedPoint.init(imagePoint:in:normalizedTo:)((CGPoint)__PAIR128__(*(unint64_t *)&a4, *(unint64_t *)&a3), (CGSize)__PAIR128__(1.0, 1.0), *(Vision::NormalizedRect *)&v10);
  }
}

uint64_t sub_1A3D4479C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v9[5] = a2;
  v9[7] = a1;
  id v9[2] = a3;
  v9[3] = a4;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE120);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v6 = sub_1A3D44FC4();
  return sub_1A3D44BC4((void (*)(char *, char *))sub_1A3D44B94, (uint64_t)v9, v4, AssociatedTypeWitness, MEMORY[0x1E4FBC248], v6, MEMORY[0x1E4FBC278], v7);
}

uint64_t sub_1A3D4485C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  CGFloat v12 = (char *)&v27[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A3C8D3F0(v10, (uint64_t)&v29);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCast())
  {
    uint64_t v14 = v27[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, a4);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EE150);
    if (swift_dynamicCast())
    {
      uint64_t v26 = AssociatedConformanceWitness;
      uint64_t v15 = a3;
      uint64_t v17 = *((void *)&v30 + 1);
      uint64_t v16 = v31;
      __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
      uint64_t v18 = v17;
      a3 = v15;
      uint64_t AssociatedConformanceWitness = v26;
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 16))(v27, v18, v16);
      unint64_t v19 = v27[0];
      unint64_t v20 = v27[1];
      uint64_t v21 = v27[2];
      uint64_t v22 = v27[3];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    }
    else
    {
      uint64_t v31 = 0;
      __n128 v29 = 0u;
      long long v30 = 0u;
      sub_1A3CA2EB8((uint64_t)&v29, (uint64_t *)&unk_1E95EE200);
      static NormalizedRect.fullImage.getter(&v29);
      unint64_t v20 = v29.n128_u64[1];
      unint64_t v19 = v29.n128_u64[0];
      uint64_t v22 = *((void *)&v30 + 1);
      uint64_t v21 = v30;
    }
    uint64_t v23 = swift_checkMetadataState();
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(a5 + 8) + 8) + 56))(v27, a4);
    if (BYTE1(v27[0])) {
      __int16 v24 = 256;
    }
    else {
      __int16 v24 = 0;
    }
    __int16 v28 = v24 | LOBYTE(v27[0]);
    v29.n128_u64[0] = v19;
    v29.n128_u64[1] = v20;
    *(void *)&long long v30 = v21;
    *((void *)&v30 + 1) = v22;
    return (*(uint64_t (**)(uint64_t, __int16 *, __n128 *, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                              + 24))(v14, &v28, &v29, a3, v23, AssociatedConformanceWitness);
  }
  else
  {
    uint64_t result = sub_1A4096BEC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D44B94(uint64_t a1)
{
  return sub_1A3D4485C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1A3D44BC4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  id v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  CGRect v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  CGFloat v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1A409662C();
  if (!v18) {
    return sub_1A409635C();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1A4096B7C();
  uint64_t v32 = sub_1A4096B8C();
  sub_1A4096B2C();
  uint64_t v36 = v8;
  uint64_t result = sub_1A409661C();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_1A409667C();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1A4096B6C();
      sub_1A409663C();
      --v19;
      CGFloat v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

unint64_t sub_1A3D44FC4()
{
  unint64_t result = qword_1E95EE128;
  if (!qword_1E95EE128)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE120);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE128);
  }
  return result;
}

id sub_1A3D45020(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)(*(void *)(a2 + 8) + 8) + 56))(&v3);
  return sub_1A3DBF9C8();
}

uint64_t sub_1A3D4507C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 72))();
  uint64_t v4 = v3;
  unsigned __int8 v6 = v5;
  uint64_t v7 = sub_1A3CE0E88(v2, v3, v5);
  sub_1A3CE124C(v2, v4, v6);
  return v7;
}

uint64_t sub_1A3D450F0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE130);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *((void *)&v13 + 1);
    uint64_t v4 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v4 + 8))(&v11, v3, v4);
    char v5 = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    LOBYTE(v12) = v5;
    uint64_t result = sub_1A3D09DBC();
    if (v7)
    {
      *(void *)&long long v12 = 0;
      *((void *)&v12 + 1) = 0xE000000000000000;
      sub_1A4096A2C();
      sub_1A409621C();
      char v11 = v5;
      sub_1A4096BAC();
      sub_1A409621C();
      long long v8 = v12;
      sub_1A3C85624();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v8;
      *(_DWORD *)(v9 + 16) = 0;
      *(unsigned char *)(v9 + 20) = 2;
      return swift_willThrow();
    }
  }
  else
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    sub_1A3CA2EB8((uint64_t)&v12, (uint64_t *)&unk_1E95EE138);
    return 2;
  }
  return result;
}

uint64_t sub_1A3D45308(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Session();
  Session.__allocating_init()();
  uint64_t v4 = swift_retain();
  uint64_t v5 = sub_1A3D453DC(v4, a1, a2);
  uint64_t v7 = v6;
  swift_release();
  uint64_t v8 = sub_1A3D46318(v5, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1A3D453DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v21[1] = *MEMORY[0x1E4F143B8];
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  if (!v6) {
    __break(1u);
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 48))(a1, a2, a3);
  uint64_t v8 = self;
  uint64_t v9 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A3C8F944(v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  id v20 = 0;
  v21[0] = 0;
  id v11 = objc_msgSend(v8, sel_detectorClassAndConfigurationOptions_forDetectorType_options_error_, v21, v9, v10, &v20);

  id v12 = v20;
  long long v13 = (void *)v21[0];
  if (!v11)
  {
    id v15 = v20;
    id v19 = v13;
    sub_1A4095AEC();

    swift_willThrow();
    return (uint64_t)v15;
  }
  swift_getObjCClassMetadata();
  sub_1A3D46928();
  uint64_t result = swift_dynamicCastMetatypeUnconditional();
  if (v13)
  {
    id v15 = (id)result;
    v21[0] = 0;
    id v16 = v13;
    id v17 = v12;
    id v18 = v16;
    uint64_t result = sub_1A409601C();
    if (v21[0])
    {

      return (uint64_t)v15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A3D45608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v9)(uint64_t *__return_ptr, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v17;
  uint64_t v18;

  id v17 = sub_1A3C9DA4C(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(a2, v6);
  sub_1A3DABBA0(v7);
  sub_1A3DAC0C4(0);
  sub_1A3DABB40(0);
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v9 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v8 + 56);
  v9(&v18, a2, v8);
  uint64_t v10 = sub_1A3DBF9C8();
  if (!v10)
  {
    v9(&v18, a2, v8);
    sub_1A3DB78FC();
    sub_1A3E2A25C();
    if (!a1) {
      return v17;
    }
    goto LABEL_3;
  }
  id v11 = (uint64_t)v10;
  id v12 = v10;
  sub_1A3DAC148(v11);
  long long v13 = objc_msgSend(v12, sel_requestClassName);
  sub_1A409617C();

  sub_1A3E2A25C();
  if (a1)
  {
LABEL_3:
    uint64_t v14 = *(void **)(a1 + 16);
    id v15 = v14;
    sub_1A3DAC77C((uint64_t)v14);
  }
  return v17;
}

uint64_t sub_1A3D457A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  if (v8)
  {
    uint64_t v9 = result;
    uint64_t v10 = v8;
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 48))(a1, a2, a3);
    id v12 = sub_1A3DE48CC(v9, v10, v11);
    swift_bridgeObjectRelease();
    if (v3) {
      swift_bridgeObjectRelease();
    }
    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1A3D45878(CGFloat *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  (*(void (**)(void))(*(void *)a1 + 160))();
  uint64_t v7 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_1A409600C();
  unsigned int v9 = objc_msgSend(ObjCClassFromMetadata, sel_areExistingInitializationOptions_compatibleWithOptions_, v7, v8);

  if (!v9) {
    return 0;
  }
  CGFloat v10 = a1[5];
  CGFloat v11 = a1[6];
  CGFloat v12 = a1[7];
  CGFloat v13 = a1[8];
  v25.origin.CGFloat x = (*(double (**)(uint64_t))(*(void *)(a4 + 8) + 80))(a3);
  v25.origin.CGFloat y = v14;
  v25.size.CGFloat width = v15;
  v25.size.CGFloat height = v16;
  v24.origin.CGFloat x = v10;
  v24.origin.CGFloat y = v11;
  v24.size.CGFloat width = v12;
  v24.size.CGFloat height = v13;
  if (!CGRectEqualToRect(v24, v25)) {
    return 0;
  }
  uint64_t v17 = (*(uint64_t (**)(void))(*(void *)a1 + 184))();
  uint64_t v18 = sub_1A3DAC588(v17);
  char v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1A3D450F0(a3);
  return (v20 & 1) == 0 && v18 == v21;
}

void sub_1A3D45A60(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(unsigned char *, uint64_t))(v11 + 16))(&v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EE150);
  if (swift_dynamicCast())
  {
    uint64_t v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    CGFloat v13 = (void *)(*(uint64_t (**)(uint64_t))(**(void **)(a2 + 16) + 120))(v12);
    if (v5) {
      return;
    }
    CGFloat v14 = v13;
    sub_1A3D45CC8((uint64_t)a1, v13, a3);
  }
  CGFloat v15 = *(void **)(*(void *)(*(void *)(a2 + 16) + 80) + 16);
  uint64_t v16 = *a1;
  uint64_t v25 = v4;
  uint64_t v17 = a4;
  uint64_t v18 = *(uint64_t (**)(unsigned char *))(v16 + 200);
  uint64_t v23 = a2;
  id v19 = v15;
  char v20 = (void (*)(unsigned char *, void))v18(v24);
  sub_1A3DAC77C((uint64_t)v15);
  v20(v24, 0);
  id v21 = objc_msgSend(objc_allocWithZone((Class)VNCanceller), sel_init);
  uint64_t v22 = (void (*)(unsigned char *, void))v18(v24);
  sub_1A3DAC6D8((uint64_t)v21);
  v22(v24, 0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1, v23, a3, v17);
}

uint64_t sub_1A3D45CC8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
  uint64_t v7 = (void (*)(unsigned char *, void))v6(v12);
  id v8 = a2;
  sub_1A3DAC2B4(a2);
  v7(v12, 0);
  uint64_t result = sub_1A3D450F0(a3);
  if (!v3)
  {
    uint64_t v10 = result;
    uint64_t v11 = (uint64_t (*)(unsigned char *, void))v6(v12);
    sub_1A3DAC654(v10, 0);
    return v11(v12, 0);
  }
  return result;
}

uint64_t sub_1A3D45DD4(uint64_t a1)
{
  uint64_t v2 = sub_1A3D46A5C((unint64_t *)&unk_1E95EF770);
  uint64_t v3 = sub_1A3D46A5C(&qword_1E95EE228);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A3D45E6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EE1E0);
  char v33 = a2;
  uint64_t v6 = sub_1A4096C1C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v31) {
      break;
    }
    id v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v32 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v32 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v31)
        {
LABEL_33:
          swift_release();
          if ((v33 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v32 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v31) {
              goto LABEL_33;
            }
            unint64_t v22 = *(void *)(v32 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_30:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_31:
    char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((v33 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A3C8D4B4();
    uint64_t result = sub_1A40960CC();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v26 = v16 == v25;
        if (v16 == v25) {
          unint64_t v16 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v21 = (void *)(v5 + 64);
  if ((v33 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v21 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1A3D46174()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EE1E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A3D46318(uint64_t a1, uint64_t a2)
{
  v67[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v60 = sub_1A4095F8C();
  uint64_t v3 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8F944(a2);
  unint64_t v7 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  v67[0] = 0;
  id v8 = objc_msgSend(ObjCClassFromMetadata, sel_supportedComputeStageDevicesForOptions_error_, v7, v67);

  id v9 = v67[0];
  if (!v8)
  {
    id v51 = v67[0];
    uint64_t v52 = sub_1A4095AEC();

    swift_willThrow();
    unint64_t v53 = sub_1A3CBFB84(MEMORY[0x1E4FBC860]);
    char v54 = (void *)v52;
    unint64_t v12 = (void *)v53;

    return (uint64_t)v12;
  }
  type metadata accessor for VNComputeStage();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EE1D0);
  sub_1A3D46A5C((unint64_t *)&unk_1E95EF770);
  uint64_t v10 = sub_1A409602C();
  id v11 = v9;

  unint64_t v12 = (void *)sub_1A3CBFB84(MEMORY[0x1E4FBC860]);
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  uint64_t v15 = v10 + 64;
  unint64_t v16 = v14 & *(void *)(v10 + 64);
  int64_t v17 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v64 = v3 + 32;
  uint64_t v65 = v3;
  int64_t v18 = 0;
  uint64_t v58 = v10 + 64;
  uint64_t v59 = v10;
  int64_t v57 = v17;
  if (!v16) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v18 << 6))
  {
    uint64_t v21 = 8 * i;
    unint64_t v22 = *(void *)(*(void *)(v10 + 56) + v21);
    id v23 = *(id *)(*(void *)(v10 + 48) + v21);
    swift_bridgeObjectRetain();
    sub_1A3CAC2A8(v23, (char *)v67);
    char v24 = (char)v67[0];
    if (LOBYTE(v67[0]) == 2)
    {

      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_5;
      }
      goto LABEL_8;
    }
    __C::CGRect v62 = v12;
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1A4096BFC();
      swift_bridgeObjectRelease();
      uint64_t v28 = v35;
      int64_t v61 = v18;
      if (!v35)
      {
LABEL_34:
        uint64_t v32 = v5;
        swift_bridgeObjectRelease();
        uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      int64_t v61 = v18;
      if (!v28) {
        goto LABEL_34;
      }
    }
    v67[0] = (id)MEMORY[0x1E4FBC860];
    uint64_t v66 = v28;
    sub_1A3CC0EA8(0, v28 & ~(v28 >> 63), 0);
    if (v66 < 0) {
      goto LABEL_54;
    }
    uint64_t v29 = 0;
    uint64_t v30 = v67[0];
    unint64_t v63 = v22 & 0xC000000000000001;
    uint64_t v31 = v60;
    do
    {
      if (v63) {
        MEMORY[0x1A6254720](v29, v22);
      }
      else {
        swift_unknownObjectRetain();
      }
      sub_1A4095F7C();
      v67[0] = v30;
      uint64_t v32 = v5;
      unint64_t v34 = v30[2];
      unint64_t v33 = v30[3];
      if (v34 >= v33 >> 1)
      {
        sub_1A3CC0EA8(v33 > 1, v34 + 1, 1);
        uint64_t v31 = v60;
        uint64_t v30 = v67[0];
      }
      ++v29;
      v30[2] = v34 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))((unint64_t)v30+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(void *)(v65 + 72) * v34, v32, v31);
      uint64_t v5 = v32;
    }
    while (v66 != v29);
    swift_bridgeObjectRelease();
LABEL_35:
    uint64_t v36 = v62;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v67[0] = v36;
    unint64_t v39 = sub_1A3C8C7D8(v24 & 1);
    uint64_t v40 = v36[2];
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      goto LABEL_53;
    }
    char v43 = v38;
    if (v36[3] < v42) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      unint64_t v12 = v67[0];
      if (v38) {
        goto LABEL_42;
      }
    }
    else
    {
      sub_1A3D46174();
      unint64_t v12 = v67[0];
      if (v43)
      {
LABEL_42:
        uint64_t v46 = v12;
        uint64_t v47 = v12[7];
        swift_bridgeObjectRelease();
        *(void *)(v47 + 8 * v39) = v30;
        unint64_t v12 = v46;
        goto LABEL_46;
      }
    }
LABEL_44:
    v12[(v39 >> 6) + 8] |= 1 << v39;
    *(unsigned char *)(v12[6] + v39) = v24 & 1;
    *(void *)(v12[7] + 8 * v39) = v30;
    uint64_t v48 = v12[2];
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_55;
    }
    v12[2] = v50;
LABEL_46:

    swift_bridgeObjectRelease();
    uint64_t v5 = v32;
    uint64_t v15 = v58;
    uint64_t v10 = v59;
    int64_t v17 = v57;
    int64_t v18 = v61;
    if (v16) {
      goto LABEL_5;
    }
LABEL_8:
    int64_t v25 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v25 >= v17) {
      goto LABEL_48;
    }
    unint64_t v26 = *(void *)(v15 + 8 * v25);
    ++v18;
    if (!v26)
    {
      int64_t v18 = v25 + 1;
      if (v25 + 1 >= v17) {
        goto LABEL_48;
      }
      unint64_t v26 = *(void *)(v15 + 8 * v18);
      if (!v26)
      {
        int64_t v18 = v25 + 2;
        if (v25 + 2 >= v17) {
          goto LABEL_48;
        }
        unint64_t v26 = *(void *)(v15 + 8 * v18);
        if (!v26)
        {
          int64_t v27 = v25 + 3;
          if (v27 < v17)
          {
            unint64_t v26 = *(void *)(v15 + 8 * v27);
            if (v26)
            {
              int64_t v18 = v27;
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v18 = v27 + 1;
              if (__OFADD__(v27, 1)) {
                break;
              }
              if (v18 >= v17) {
                goto LABEL_48;
              }
              unint64_t v26 = *(void *)(v15 + 8 * v18);
              ++v27;
              if (v26) {
                goto LABEL_21;
              }
            }
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
          }
LABEL_48:
          swift_release();
          return (uint64_t)v12;
        }
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
  }
  sub_1A3D45E6C(v42, isUniquelyReferenced_nonNull_native);
  unint64_t v44 = sub_1A3C8C7D8(v24 & 1);
  if ((v43 & 1) == (v45 & 1))
  {
    unint64_t v39 = v44;
    unint64_t v12 = v67[0];
    if (v43) {
      goto LABEL_42;
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1A4096EBC();
  __break(1u);
  return result;
}

unint64_t sub_1A3D46928()
{
  unint64_t result = qword_1E95EE148;
  if (!qword_1E95EE148)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EE148);
  }
  return result;
}

void type metadata accessor for VNComputeStage()
{
  if (!qword_1E95EF750)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E95EF750);
    }
  }
}

uint64_t sub_1A3D469C0()
{
  return sub_1A3D46A5C((unint64_t *)&unk_1E95EE210);
}

uint64_t sub_1A3D469F4()
{
  return sub_1A3D46A5C((unint64_t *)&unk_1E95EF760);
}

uint64_t sub_1A3D46A28()
{
  return sub_1A3D46A5C(&qword_1E95EE220);
}

uint64_t sub_1A3D46A5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for VNComputeStage();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static TrackRectangleRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static TrackRectangleRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t TrackRectangleRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D46AD8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D46D98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D46B14(uint64_t a1)
{
  unint64_t v2 = sub_1A3D46D98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D46B50(uint64_t a1)
{
  unint64_t v2 = sub_1A3D46DEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D46B8C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D46DEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TrackRectangleRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE230);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE238);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D46D98();
  sub_1A4096FEC();
  sub_1A3D46DEC();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D46D98()
{
  unint64_t result = qword_1E960B8D8;
  if (!qword_1E960B8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960B8D8);
  }
  return result;
}

unint64_t sub_1A3D46DEC()
{
  unint64_t result = qword_1E960B8E0;
  if (!qword_1E960B8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960B8E0);
  }
  return result;
}

uint64_t TrackRectangleRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t TrackRectangleRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE240);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE248);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D46D98();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D46DEC();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for TrackRectangleRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D4716C(void *a1)
{
  return TrackRectangleRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D47184(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE230);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE238);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D46D98();
  sub_1A4096FEC();
  sub_1A3D46DEC();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t TrackRectangleRequest.__allocating_init(detectedRectangle:_:frameAnalysisSpacing:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6)
{
  char v11 = a6 & 1;
  uint64_t v12 = swift_allocObject();
  TrackRectangleRequest.init(detectedRectangle:_:frameAnalysisSpacing:)(a1, a2, a3, a4, a5, v11);
  return v12;
}

uint64_t *TrackRectangleRequest.init(detectedRectangle:_:frameAnalysisSpacing:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v13 = *v6;
  int v14 = *a2;
  static NormalizedRect.fullImage.getter(&v28);
  unint64_t v15 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  __n128 v27 = v28;
  uint64_t v16 = v29;
  uint64_t v17 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE250);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 64) = 0;
  *(__n128 *)(v18 + 16) = v27;
  *(void *)(v18 + 32) = v16;
  *(void *)(v18 + 40) = v17;
  *(_WORD *)(v18 + 48) = 0;
  *(void *)(v18 + 56) = v15;
  v7[11] = v18;
  type metadata accessor for TrackRectangleRequest.State(0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 24) = 0;
  *(void *)(v19 + 32) = 0;
  *(void *)(v19 + 16) = 0;
  *(unsigned char *)(v19 + 40) = 1;
  uint64_t v20 = v19 + OBJC_IVAR____TtCC6Vision21TrackRectangleRequest5State_lastResult;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE258);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(void *)(v19 + OBJC_IVAR____TtCC6Vision21TrackRectangleRequest5State_tracker) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE260);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(void *)(v22 + 16) = v19;
  v7[12] = v22;
  sub_1A4095C6C();
  if (v14 == 1)
  {
    uint64_t v23 = sub_1A3D496A0(&qword_1E95EE268, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);
    sub_1A3E2C988(v13, v23, v24);
  }
  sub_1A3CEDA5C(a1, (uint64_t)(v7 + 2));
  if (a6)
  {
    a3 = *MEMORY[0x1E4F1FA48];
    LODWORD(a4) = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 8);
    LODWORD(v25) = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 12);
    a5 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  }
  else
  {
    unint64_t v25 = HIDWORD(a4);
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  v7[8] = a3;
  *((_DWORD *)v7 + 18) = a4;
  *((_DWORD *)v7 + 19) = v25;
  v7[10] = a5;
  return v7;
}

BOOL static TrackRectangleRequest.TrackingLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TrackRectangleRequest.TrackingLevel.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D47644(uint64_t a1)
{
  unint64_t v2 = sub_1A3D48BBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D47680(uint64_t a1)
{
  unint64_t v2 = sub_1A3D48BBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D476BC()
{
  if (*v0) {
    return 1953718630;
  }
  else {
    return 0x6574617275636361;
  }
}

uint64_t sub_1A3D476F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D4AE74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D47718(uint64_t a1)
{
  unint64_t v2 = sub_1A3D48B14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D47754(uint64_t a1)
{
  unint64_t v2 = sub_1A3D48B14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D47790(uint64_t a1)
{
  unint64_t v2 = sub_1A3D48B68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D477CC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D48B68();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static TrackRectangleRequest.TrackingLevel.allCases.getter()
{
  return &unk_1EF748BF0;
}

uint64_t TrackRectangleRequest.TrackingLevel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE270);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE278);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE280);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D48B14();
  sub_1A4096FEC();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3D48B68();
    int v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3D48BBC();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t TrackRectangleRequest.TrackingLevel.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t TrackRectangleRequest.TrackingLevel.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE288);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE290);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE298);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D48B14();
  char v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  int v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *char v22 = &type metadata for TrackRectangleRequest.TrackingLevel;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3D48B68();
    uint64_t v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3D48BBC();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

void sub_1A3D47F58(void *a1@<X8>)
{
  *a1 = &unk_1EF748CA8;
}

uint64_t sub_1A3D47F68@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TrackRectangleRequest.TrackingLevel.init(from:)(a1, a2);
}

uint64_t sub_1A3D47F80(void *a1)
{
  return TrackRectangleRequest.TrackingLevel.encode(to:)(a1);
}

uint64_t TrackRectangleRequest.inputObservation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A3CEDA5C(v1 + 16, a1);
}

void TrackRectangleRequest.trackingLevel.getter(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 88);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3C89AD8(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D48010(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 88);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3C89AD8(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D4807C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 88);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 16;
  os_unfair_lock_lock(v2 + 16);
  sub_1A3C8D560(v3);
  os_unfair_lock_unlock(v4);
}

void TrackRectangleRequest.trackingLevel.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 88);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3C8A1FC(v2);
  os_unfair_lock_unlock(v3);
}

void (*TrackRectangleRequest.trackingLevel.modify(os_unfair_lock_s **a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = a1 + 2;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 88);
  *a1 = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  char v6 = v4 + 16;
  os_unfair_lock_lock(v4 + 16);
  sub_1A3C89AD8(v5, v3);
  a1[1] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3C89B74;
}

void TrackRectangleRequest.regionOfInterest.getter(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 88);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3C8980C(v4, a1);

  os_unfair_lock_unlock(v5);
}

double sub_1A3D4823C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 88);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3C8980C(v4, v8);
  os_unfair_lock_unlock(v5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

void sub_1A3D482A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 88);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 16;
  os_unfair_lock_lock(v2 + 16);
  sub_1A3C8D578(v3);
  os_unfair_lock_unlock(v4);
}

void TrackRectangleRequest.regionOfInterest.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 88);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3C8A1F0(v2);
  os_unfair_lock_unlock(v3);
}

void (*TrackRectangleRequest.regionOfInterest.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 88);
  long long v3[4] = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  char v6 = v4 + 16;
  os_unfair_lock_lock(v4 + 16);
  sub_1A3C8980C(v5, v3);
  v3[5] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3C898B4;
}

void TrackRectangleRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 88);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3D485A4(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D48474(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 88);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3D485A4(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D484E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 88);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 16;
  os_unfair_lock_lock(v2 + 16);
  sub_1A3D4AF58(v3);
  os_unfair_lock_unlock(v4);
}

void TrackRectangleRequest.modelFileBackingStore.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 88);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3D48C10(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1A3D485A4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 33);
  return result;
}

void (*TrackRectangleRequest.modelFileBackingStore.modify(os_unfair_lock_s **a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = a1 + 2;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 88);
  *a1 = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  char v6 = v4 + 16;
  os_unfair_lock_lock(v4 + 16);
  sub_1A3D485A4(v5, v3);
  a1[1] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3D48640;
}

void sub_1A3D48640(os_unfair_lock_s **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 16;
  os_unfair_lock_lock(v2);
  sub_1A3D4AF58((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v2);
}

uint64_t TrackRectangleRequest.frameAnalysisSpacing.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_1A3D486D4()
{
  uint64_t v0 = type metadata accessor for TrackRectangleRequest(0);
  uint64_t v1 = sub_1A3D496A0(&qword_1E95EE268, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);
  uint64_t result = sub_1A3E2CFDC(v0, v1);
  qword_1E960B8C8 = result;
  return result;
}

uint64_t static TrackRectangleRequest.supportedRevisions.getter()
{
  if (qword_1E960B8C0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void TrackRectangleRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 232;
}

uint64_t sub_1A3D487AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC6Vision21TrackRectangleRequest5State_lastResult;
  swift_beginAccess();
  return sub_1A3CCB91C(v3, a1, &qword_1E95EE2A0);
}

uint64_t sub_1A3D48808(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC6Vision21TrackRectangleRequest5State_lastResult;
  swift_beginAccess();
  sub_1A3D48C1C(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1A3D48864())()
{
  return j__swift_endAccess;
}

void *sub_1A3D488C0()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtCC6Vision21TrackRectangleRequest5State_tracker);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1A3D48910(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtCC6Vision21TrackRectangleRequest5State_tracker);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1A3D48964())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3D489C0()
{
  sub_1A3D48C84(v0 + OBJC_IVAR____TtCC6Vision21TrackRectangleRequest5State_lastResult);

  return swift_deallocClassInstance();
}

uint64_t sub_1A3D48A34()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  uint64_t v1 = v0 + OBJC_IVAR____TtCC6Vision21TrackRectangleRequest5State_lastResult;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE258);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtCC6Vision21TrackRectangleRequest5State_tracker) = 0;
  return v0;
}

uint64_t type metadata accessor for TrackRectangleRequest.State(uint64_t a1)
{
  return sub_1A3CCB9A0(a1, qword_1E960C310);
}

uint64_t type metadata accessor for TrackRectangleRequest(uint64_t a1)
{
  return sub_1A3CCB9A0(a1, (uint64_t *)&unk_1E960C300);
}

unint64_t sub_1A3D48B14()
{
  unint64_t result = qword_1E960B8E8;
  if (!qword_1E960B8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960B8E8);
  }
  return result;
}

unint64_t sub_1A3D48B68()
{
  unint64_t result = qword_1E960B8F0;
  if (!qword_1E960B8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960B8F0);
  }
  return result;
}

unint64_t sub_1A3D48BBC()
{
  unint64_t result = qword_1E960B8F8[0];
  if (!qword_1E960B8F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960B8F8);
  }
  return result;
}

uint64_t sub_1A3D48C10(uint64_t result)
{
  *(unsigned char *)(result + 33) = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t sub_1A3D48C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D48C84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE2A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3D48CE4()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1A3D48D08()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t (*sub_1A3D48D2C(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 168))();
  return sub_1A3C8A344;
}

uint64_t sub_1A3D48DA4()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1A3D48DC8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t (*sub_1A3D48DEC(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 144))();
  return sub_1A3C8A344;
}

uint64_t sub_1A3D48E64()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_1A3D48EA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v4 + 112))(a1, a2, a3, a4 & 1);
}

uint64_t (*sub_1A3D48EC8(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 120))();
  return sub_1A3C8A344;
}

int *sub_1A3D48F40()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE338);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(7, 0, 11);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(7, 0, 11);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(7, 0, 11);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for TrackRectangleRequest.Revision, v0 + 32);
  qword_1E9643CE0 = v0;
  return result;
}

uint64_t TrackRectangleRequest.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision21TrackRectangleRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t TrackRectangleRequest.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision21TrackRectangleRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t TrackRectangleRequest.hashValue.getter()
{
  return sub_1A4096F7C();
}

void sub_1A3D491D8(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)v1 + 88);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3C8980C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D49248()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 88);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3C8D578(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t (*sub_1A3D492AC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TrackRectangleRequest.regionOfInterest.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D49308(uint64_t a1)
{
  uint64_t v2 = sub_1A3D496A0(&qword_1E95EE318, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D49374@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A3D496A0(&qword_1E95EE268, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D493F8(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A3D496A0(&qword_1E95EE268, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D4947C(_WORD *a1@<X8>)
{
  *a1 = 232;
}

void sub_1A3D49488(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)v1 + 88);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3D485A4(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D494F8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 88);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3D4AF58(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t (*sub_1A3D4955C(os_unfair_lock_s ***a1))()
{
  uint64_t v2 = (os_unfair_lock_s **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (os_unfair_lock_s *)TrackRectangleRequest.modelFileBackingStore.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D495B8(uint64_t a1)
{
  uint64_t v2 = sub_1A3D496A0(&qword_1E95EE268, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D49624(uint64_t a1, uint64_t a2)
{
  sub_1A3D496A0(&qword_1E95EE320, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);

  return StatefulRequest.hash(into:)(a1, a2);
}

uint64_t sub_1A3D496A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D496E8(uint64_t a1, uint64_t a2)
{
  sub_1A3D496A0(&qword_1E95EE320, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);

  return static StatefulRequest.== infix(_:_:)(a1, a2, v2);
}

uint64_t sub_1A3D49768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for VisionResult(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A3C8B4E0(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 27)
  {
    swift_release();
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD30);
    return sub_1A3D49968((uint64_t)&v8[*(int *)(v9 + 48)], a2);
  }
  else
  {
    sub_1A3C8B544((uint64_t)v8);
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    strcpy((char *)v15, "VisionResult ");
    HIWORD(v15[1]) = -4864;
    sub_1A3D496A0(&qword_1E95F0470, (void (*)(uint64_t))type metadata accessor for VisionResult);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    v14[1] = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE2B0);
    sub_1A409619C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    uint64_t v11 = v15[0];
    uint64_t v12 = v15[1];
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v13 = v11;
    *(void *)(v13 + 8) = v12;
    *(_DWORD *)(v13 + 16) = 0;
    *(unsigned char *)(v13 + 20) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1A3D49968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1A3D499D0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 88);
  a1[1] = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3C8B5A0(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3C8B64C;
}

uint64_t sub_1A3D49A5C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 88);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3C89AD8(v2, &v5);
  os_unfair_lock_unlock(v3);

  return sub_1A409617C();
}

id sub_1A3D49AE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A4095C7C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOWORD(v37) = 232;
  id result = sub_1A3DBF9C8();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = v0 + 2;
    uint64_t v9 = v0[5];
    uint64_t v10 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v9);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 16))(v43, v9, v10);
    double v36 = *(double *)v43;
    double v35 = *(double *)&v43[1];
    uint64_t v11 = v0[5];
    uint64_t v12 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 24))(v42, v11, v12);
    double v13 = *(double *)v42;
    double v14 = *(double *)&v42[1];
    uint64_t v15 = v0[5];
    uint64_t v16 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 32))(v41, v15, v16);
    double v17 = *(double *)v41;
    double v18 = *(double *)&v41[1];
    uint64_t v19 = v0[5];
    uint64_t v20 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v19);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 40))(v40, v19, v20);
    double v21 = *(double *)v40;
    double v22 = *(double *)&v40[1];
    uint64_t v24 = v0[5];
    uint64_t v23 = v0[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v1[5]);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v23 + 8) + 8))(&v37, v24);
    uint64_t v25 = v37;
    long long v34 = v38;
    uint64_t v26 = v39;
    id v27 = objc_allocWithZone((Class)VNRectangleObservation);
    id v28 = objc_msgSend(v27, sel_initWithOriginatingRequestSpecifier_topLeft_topRight_bottomRight_bottomLeft_boundingBox_, v7, v36, v35, v13, v14, v17, v18, v21, v22, v25, (void)v34, *((void *)&v34 + 1), v26);

    uint64_t v29 = v1[5];
    uint64_t v30 = v1[7];
    __swift_project_boxed_opaque_existential_1(v8, v29);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v30 + 40);
    id v32 = v28;
    v31(v29, v30);
    char v33 = (void *)sub_1A4095C3C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v32, sel_setUUID_, v33);

    return v32;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D49E10()
{
  return sub_1A409617C();
}

uint64_t sub_1A3D49E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Vision21TrackRectangleRequest_uuid;
  uint64_t v4 = sub_1A4095C7C();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1A3D49E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3D49768(a1, a2);
}

uint64_t sub_1A3D49EB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (uint64_t)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD30) + 48);
  *a2 = v2;
  sub_1A3CCB91C(a1, v5, &qword_1E95ECAB8);
  type metadata accessor for VisionResult(0);
  swift_storeEnumTagMultiPayload();

  return swift_retain();
}

uint64_t sub_1A3D49F30()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 88);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3C8B5A0(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D49F94()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 88);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3C8B700(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3D4A000(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1A3D499D0(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D4A05C()
{
  if (qword_1E960B8D0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D4A0B8(uint64_t a1)
{
  return sub_1A3C8DE60(a1) & 1;
}

unint64_t sub_1A3D4A134()
{
  unint64_t result = qword_1E95EE2B8;
  if (!qword_1E95EE2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE2B8);
  }
  return result;
}

unint64_t sub_1A3D4A18C()
{
  unint64_t result = qword_1E95EE2C0;
  if (!qword_1E95EE2C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE2C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE2C0);
  }
  return result;
}

unint64_t sub_1A3D4A1EC()
{
  unint64_t result = qword_1E95EE2D0;
  if (!qword_1E95EE2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE2D0);
  }
  return result;
}

uint64_t sub_1A3D4A240(uint64_t a1)
{
  uint64_t result = sub_1A3D496A0(&qword_1E95ECE00, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3D4A298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3D4A3AC(a1, a2, a3, &qword_1E95ECFA0, (uint64_t)&protocol conformance descriptor for TrackRectangleRequest, &qword_1E95EE2A8);
}

uint64_t sub_1A3D4A2D4()
{
  return sub_1A3D496A0(&qword_1E95EE308, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);
}

_UNKNOWN **sub_1A3D4A31C()
{
  return &off_1EF757588;
}

uint64_t sub_1A3D4A328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3D4A3AC(a1, a2, a3, &qword_1E95EE310, (uint64_t)&unk_1A40F2240, &qword_1E95EE318);
}

_UNKNOWN **sub_1A3D4A364()
{
  return &off_1EC382DE0;
}

uint64_t sub_1A3D4A370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3D4A3AC(a1, a2, a3, &qword_1E95EE268, (uint64_t)&unk_1A40F2278, &qword_1E95EE320);
}

uint64_t sub_1A3D4A3AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  *(void *)(a1 + 8) = sub_1A3D496A0(a4, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);
  uint64_t result = sub_1A3D496A0(a6, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A3D4A418()
{
  return sub_1A3D496A0(&qword_1E95EC538, (void (*)(uint64_t))type metadata accessor for RectangleObservation);
}

uint64_t sub_1A3D4A460(uint64_t a1)
{
  uint64_t result = sub_1A3D496A0(&qword_1E95EE268, (void (*)(uint64_t))type metadata accessor for TrackRectangleRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D4A4BC()
{
  unint64_t result = qword_1E95EE328;
  if (!qword_1E95EE328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE328);
  }
  return result;
}

uint64_t sub_1A3D4A510()
{
  return type metadata accessor for TrackRectangleRequest(0);
}

uint64_t sub_1A3D4A518()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for TrackRectangleRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrackRectangleRequest);
}

uint64_t dispatch thunk of TrackRectangleRequest.__allocating_init(detectedRectangle:_:frameAnalysisSpacing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6 + 128))(a1, a2, a3, a4, a5, a6 & 1);
}

ValueMetadata *type metadata accessor for TrackRectangleRequest.Revision()
{
  return &type metadata for TrackRectangleRequest.Revision;
}

ValueMetadata *type metadata accessor for TrackRectangleRequest.TrackingLevel()
{
  return &type metadata for TrackRectangleRequest.TrackingLevel;
}

uint64_t initializeWithCopy for DetectHumanBodyPoseRequest(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectHumanBodyPoseRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectHumanBodyPoseRequest(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TrackRectangleRequest.Configuration()
{
  return &type metadata for TrackRectangleRequest.Configuration;
}

uint64_t sub_1A3D4A744()
{
  return type metadata accessor for TrackRectangleRequest.State(0);
}

void sub_1A3D4A74C()
{
  sub_1A3D4A7F0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1A3D4A7F0()
{
  if (!qword_1E95EE330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE258);
    unint64_t v0 = sub_1A409692C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E95EE330);
    }
  }
}

unsigned char *_s6Vision21TrackRectangleRequestC13TrackingLevelOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D4A918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackRectangleRequest.TrackingLevel.CodingKeys()
{
  return &type metadata for TrackRectangleRequest.TrackingLevel.CodingKeys;
}

ValueMetadata *type metadata accessor for TrackRectangleRequest.TrackingLevel.AccurateCodingKeys()
{
  return &type metadata for TrackRectangleRequest.TrackingLevel.AccurateCodingKeys;
}

ValueMetadata *type metadata accessor for TrackRectangleRequest.TrackingLevel.FastCodingKeys()
{
  return &type metadata for TrackRectangleRequest.TrackingLevel.FastCodingKeys;
}

unsigned char *_s6Vision21TrackRectangleRequestC8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D4AA0CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackRectangleRequest.Revision.CodingKeys()
{
  return &type metadata for TrackRectangleRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for TrackRectangleRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for TrackRectangleRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3D4AA58()
{
  unint64_t result = qword_1E960C520[0];
  if (!qword_1E960C520[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960C520);
  }
  return result;
}

unint64_t sub_1A3D4AAB0()
{
  unint64_t result = qword_1E960C930[0];
  if (!qword_1E960C930[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960C930);
  }
  return result;
}

unint64_t sub_1A3D4AB08()
{
  unint64_t result = qword_1E960CA40;
  if (!qword_1E960CA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960CA40);
  }
  return result;
}

unint64_t sub_1A3D4AB60()
{
  unint64_t result = qword_1E960CA48[0];
  if (!qword_1E960CA48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960CA48);
  }
  return result;
}

unint64_t sub_1A3D4ABB8()
{
  unint64_t result = qword_1E960CAD0;
  if (!qword_1E960CAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960CAD0);
  }
  return result;
}

unint64_t sub_1A3D4AC10()
{
  unint64_t result = qword_1E960CAD8[0];
  if (!qword_1E960CAD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960CAD8);
  }
  return result;
}

unint64_t sub_1A3D4AC68()
{
  unint64_t result = qword_1E960CB60;
  if (!qword_1E960CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960CB60);
  }
  return result;
}

unint64_t sub_1A3D4ACC0()
{
  unint64_t result = qword_1E960CB68[0];
  if (!qword_1E960CB68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960CB68);
  }
  return result;
}

unint64_t sub_1A3D4AD18()
{
  unint64_t result = qword_1E960CBF0;
  if (!qword_1E960CBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960CBF0);
  }
  return result;
}

unint64_t sub_1A3D4AD70()
{
  unint64_t result = qword_1E960CBF8[0];
  if (!qword_1E960CBF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960CBF8);
  }
  return result;
}

unint64_t sub_1A3D4ADC8()
{
  unint64_t result = qword_1E960CC80;
  if (!qword_1E960CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960CC80);
  }
  return result;
}

unint64_t sub_1A3D4AE20()
{
  unint64_t result = qword_1E960CC88[0];
  if (!qword_1E960CC88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960CC88);
  }
  return result;
}

uint64_t sub_1A3D4AE74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574617275636361 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953718630 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A3D4AF58(uint64_t a1)
{
  return sub_1A3D48C10(a1);
}

uint64_t static DetectTextRectanglesRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static DetectTextRectanglesRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t DetectTextRectanglesRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D4AFAC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4B26C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D4AFE8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4B26C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D4B024(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4B2C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D4B060(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4B2C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectTextRectanglesRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE340);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE348);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D4B26C();
  sub_1A4096FEC();
  sub_1A3D4B2C0();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D4B26C()
{
  unint64_t result = qword_1E960CD28;
  if (!qword_1E960CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960CD28);
  }
  return result;
}

unint64_t sub_1A3D4B2C0()
{
  unint64_t result = qword_1E960CD30;
  if (!qword_1E960CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960CD30);
  }
  return result;
}

uint64_t DetectTextRectanglesRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectTextRectanglesRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE350);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE358);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D4B26C();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D4B2C0();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      double v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *double v13 = &type metadata for DetectTextRectanglesRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D4B640(void *a1)
{
  return DetectTextRectanglesRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D4B658(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE340);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE348);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D4B26C();
  sub_1A4096FEC();
  sub_1A3D4B2C0();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double DetectTextRectanglesRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(&v8);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3CB5180();
    sub_1A3E2C988((uint64_t)&type metadata for DetectTextRectanglesRequest, v5, v6);
  }
  *(unsigned char *)a2 = 0;
  *(__n128 *)(a2 + 8) = v8;
  double result = v9[0];
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v9;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 10;
  *(_WORD *)(a2 + 56) = 257;
  *(unsigned char *)(a2 + 58) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(unsigned char *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = v4;
  return result;
}

uint64_t DetectTextRectanglesRequest.reportCharacterBoxes.getter()
{
  return *v0;
}

uint64_t DetectTextRectanglesRequest.reportCharacterBoxes.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*DetectTextRectanglesRequest.reportCharacterBoxes.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 DetectTextRectanglesRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 DetectTextRectanglesRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*DetectTextRectanglesRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D4B944()
{
  unint64_t v0 = sub_1A3CB5180();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for DetectTextRectanglesRequest, v0);
  qword_1E960CD18 = result;
  return result;
}

uint64_t static DetectTextRectanglesRequest.supportedRevisions.getter()
{
  if (qword_1E960CD10 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void DetectTextRectanglesRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 128;
}

BOOL static DetectTextRectanglesRequest.Algorithm.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DetectTextRectanglesRequest.Algorithm.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D4BA2C()
{
  if (*v0) {
    return 0x6143746964657263;
  }
  else {
    return 0x6C6172656E6567;
  }
}

uint64_t sub_1A3D4BA74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D4D9A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D4BA9C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4C554();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D4BAD8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4C554();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D4BB14(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4C5A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D4BB50(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4C5A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D4BB8C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4C5FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D4BBC8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4C5FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static DetectTextRectanglesRequest.Algorithm.allCases.getter()
{
  return &unk_1EF74D2D8;
}

uint64_t DetectTextRectanglesRequest.Algorithm.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE360);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  double v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE368);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE370);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D4C554();
  sub_1A4096FEC();
  double v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3D4C5A8();
    double v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3D4C5FC();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t DetectTextRectanglesRequest.Algorithm.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectTextRectanglesRequest.Algorithm.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE378);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE380);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE388);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D4C554();
  uint64_t v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  id v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  double v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *char v22 = &type metadata for DetectTextRectanglesRequest.Algorithm;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3D4C5A8();
    double v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3D4C5FC();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

void sub_1A3D4C354(void *a1@<X8>)
{
  *a1 = &unk_1EF74D390;
}

uint64_t sub_1A3D4C364@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DetectTextRectanglesRequest.Algorithm.init(from:)(a1, a2);
}

uint64_t sub_1A3D4C37C(void *a1)
{
  return DetectTextRectanglesRequest.Algorithm.encode(to:)(a1);
}

void DetectTextRectanglesRequest.algorithm.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *DetectTextRectanglesRequest.algorithm.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*DetectTextRectanglesRequest.algorithm.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectTextRectanglesRequest.minimumCharacterPixelHeight.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t DetectTextRectanglesRequest.minimumCharacterPixelHeight.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t (*DetectTextRectanglesRequest.minimumCharacterPixelHeight.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectTextRectanglesRequest.detectDiacritics.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t DetectTextRectanglesRequest.detectDiacritics.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*DetectTextRectanglesRequest.detectDiacritics.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectTextRectanglesRequest.minimizeFalseDetections.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t DetectTextRectanglesRequest.minimizeFalseDetections.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 57) = result;
  return result;
}

uint64_t (*DetectTextRectanglesRequest.minimizeFalseDetections.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void DetectTextRectanglesRequest.textRecognition.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 58);
}

unsigned char *DetectTextRectanglesRequest.textRecognition.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 58) = *result;
  return result;
}

uint64_t (*DetectTextRectanglesRequest.textRecognition.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectTextRectanglesRequest.additionalCharacters.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DetectTextRectanglesRequest.additionalCharacters.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*DetectTextRectanglesRequest.additionalCharacters.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void DetectTextRectanglesRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 80);
}

unsigned char *DetectTextRectanglesRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 80) = *result;
  return result;
}

uint64_t (*DetectTextRectanglesRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D4C554()
{
  unint64_t result = qword_1E960CD38;
  if (!qword_1E960CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960CD38);
  }
  return result;
}

unint64_t sub_1A3D4C5A8()
{
  unint64_t result = qword_1E960CD40;
  if (!qword_1E960CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960CD40);
  }
  return result;
}

unint64_t sub_1A3D4C5FC()
{
  unint64_t result = qword_1E960CD48[0];
  if (!qword_1E960CD48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960CD48);
  }
  return result;
}

int *sub_1A3D4C650()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE400);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D5C(0);
  uint64_t v2 = sub_1A3D09D5C(0);
  uint64_t v3 = sub_1A3D09D5C(0);
  unint64_t result = sub_1A3D09468(v3, v1, v2, v3, (uint64_t)&type metadata for DetectTextRectanglesRequest.Revision, v0 + 32);
  qword_1E9643D00 = v0;
  return result;
}

uint64_t DetectTextRectanglesRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 88);
  sub_1A4096F4C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F3C();
  sub_1A4096F3C();
  sub_1A4096F4C();
  sub_1A4096F4C();
  sub_1A3CB5918();
  sub_1A40960DC();
  sub_1A4096F4C();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_1A40961CC();
    swift_bridgeObjectRelease();
  }
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t DetectTextRectanglesRequest.hashValue.getter()
{
  char v1 = v0[40];
  uint64_t v2 = *((void *)v0 + 6);
  char v3 = v0[56];
  char v4 = v0[57];
  char v5 = v0[58];
  char v6 = v0[80];
  uint64_t v7 = *((void *)v0 + 11);
  char v10 = *v0;
  long long v11 = *(_OWORD *)(v0 + 8);
  long long v12 = *(_OWORD *)(v0 + 24);
  char v13 = v1;
  uint64_t v14 = v2;
  char v15 = v3;
  char v16 = v4;
  char v17 = v5;
  long long v18 = *((_OWORD *)v0 + 4);
  char v19 = v6;
  uint64_t v20 = v7;
  sub_1A4096F2C();
  DetectTextRectanglesRequest.hash(into:)(v9);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D4C900(uint64_t a1)
{
  unint64_t v2 = sub_1A3CB263C();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D4C93C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3CB5180();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D4C990(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3CB5180();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D4C9E4(_WORD *a1@<X8>)
{
  *a1 = 128;
}

void sub_1A3D4C9F0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 80);
}

unsigned char *sub_1A3D4C9FC(unsigned char *result)
{
  *(unsigned char *)(v1 + 80) = *result;
  return result;
}

uint64_t (*sub_1A3D4CA08())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D4CA28(uint64_t a1)
{
  unint64_t v2 = sub_1A3CB5180();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D4CA64()
{
  char v1 = v0[40];
  uint64_t v2 = *((void *)v0 + 6);
  char v3 = v0[56];
  char v4 = v0[57];
  char v5 = v0[58];
  char v6 = v0[80];
  uint64_t v7 = *((void *)v0 + 11);
  char v10 = *v0;
  long long v11 = *(_OWORD *)(v0 + 8);
  long long v12 = *(_OWORD *)(v0 + 24);
  char v13 = v1;
  uint64_t v14 = v2;
  char v15 = v3;
  char v16 = v4;
  char v17 = v5;
  long long v18 = *((_OWORD *)v0 + 4);
  char v19 = v6;
  uint64_t v20 = v7;
  sub_1A4096F2C();
  DetectTextRectanglesRequest.hash(into:)(v9);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D4CB04()
{
  char v1 = v0[40];
  uint64_t v2 = *((void *)v0 + 6);
  char v3 = v0[56];
  char v4 = v0[57];
  char v5 = v0[58];
  char v6 = v0[80];
  uint64_t v7 = *((void *)v0 + 11);
  char v10 = *v0;
  long long v11 = *(_OWORD *)(v0 + 8);
  long long v12 = *(_OWORD *)(v0 + 24);
  char v13 = v1;
  uint64_t v14 = v2;
  char v15 = v3;
  char v16 = v4;
  char v17 = v5;
  long long v18 = *((_OWORD *)v0 + 4);
  char v19 = v6;
  uint64_t v20 = v7;
  sub_1A4096F2C();
  DetectTextRectanglesRequest.hash(into:)(v9);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D4CBA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D4CBA8(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*sub_1A3D4CBD4())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D4CBF4()
{
  if (qword_1E960CD20 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D4CC50()
{
  return 0;
}

uint64_t sub_1A3D4CC60(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA3E8();

  return sub_1A3E2C684(a1, a2);
}

uint64_t _s6Vision27DetectTextRectanglesRequestV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  unsigned __int8 v3 = a1[58];
  uint64_t v16 = *((void *)a1 + 11);
  unsigned __int8 v4 = a2[58];
  uint64_t v19 = *((void *)a2 + 8);
  uint64_t v20 = *((void *)a1 + 8);
  uint64_t v21 = *((void *)a2 + 9);
  uint64_t v22 = *((void *)a1 + 9);
  unsigned __int8 v17 = a2[80];
  unsigned __int8 v18 = a1[80];
  uint64_t v15 = *((void *)a2 + 11);
  int v5 = a2[57];
  int v6 = a2[56];
  uint64_t v7 = *((void *)a2 + 6);
  int v8 = a2[40];
  int v9 = a1[57];
  int v10 = a1[56];
  uint64_t v11 = *((void *)a1 + 6);
  int v12 = a1[40];
  CGSize v13 = *(CGSize *)(a1 + 24);
  v24.origin = *(CGPoint *)(a1 + 8);
  v24.size = v13;
  CGSize v14 = *(CGSize *)(a2 + 24);
  v23.origin = *(CGPoint *)(a2 + 8);
  v23.size = v14;
  if (!static NormalizedRect.== infix(_:_:)(&v24, &v23)) {
    return 0;
  }
  if ((v8 ^ v12)) {
    return 0;
  }
  if (v11 != v7) {
    return 0;
  }
  if ((v6 ^ v10)) {
    return 0;
  }
  if ((v5 ^ v9)) {
    return 0;
  }
  LOBYTE(v24.origin.x) = v3;
  LOBYTE(v23.origin.x) = v4;
  if ((static TextRecognitionCharacterSet.== infix(_:_:)(&v24, &v23) & 1) == 0) {
    return 0;
  }
  if (v22)
  {
    if (!v21 || (v20 != v19 || v22 != v21) && (sub_1A4096E5C() & 1) == 0) {
      return 0;
    }
  }
  else if (v21)
  {
    return 0;
  }
  LOBYTE(v24.origin.x) = v18;
  LOBYTE(v23.origin.x) = v17;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v24, (unsigned __int8 *)&v23)) {
    return 0;
  }

  return sub_1A3C8FF4C(v16, v15);
}

unint64_t sub_1A3D4CE60()
{
  unint64_t result = qword_1E95EE390;
  if (!qword_1E95EE390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE390);
  }
  return result;
}

unint64_t sub_1A3D4CEB8()
{
  unint64_t result = qword_1E95EE398;
  if (!qword_1E95EE398)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE3A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE398);
  }
  return result;
}

unint64_t sub_1A3D4CF18()
{
  unint64_t result = qword_1E95EE3A8[0];
  if (!qword_1E95EE3A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95EE3A8);
  }
  return result;
}

unint64_t sub_1A3D4CF6C(uint64_t a1)
{
  unint64_t result = sub_1A3CCA3E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D4CF94(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF198();
  unint64_t result = sub_1A3D4CFC4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D4CFC4()
{
  unint64_t result = qword_1E95EE3E0;
  if (!qword_1E95EE3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE3E0);
  }
  return result;
}

unint64_t sub_1A3D4D01C()
{
  unint64_t result = qword_1E95EE3E8;
  if (!qword_1E95EE3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE3E8);
  }
  return result;
}

unint64_t sub_1A3D4D074()
{
  unint64_t result = qword_1E95EE3F0;
  if (!qword_1E95EE3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE3F0);
  }
  return result;
}

uint64_t sub_1A3D4D0C8()
{
  return sub_1A3D4DABC(&qword_1E95EE3F8, (void (*)(uint64_t))type metadata accessor for TextObservation);
}

unint64_t sub_1A3D4D110(uint64_t a1)
{
  unint64_t result = sub_1A3CB5180();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for DetectTextRectanglesRequest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectTextRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  uint64_t v3 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v3;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectTextRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectTextRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DetectTextRectanglesRequest()
{
  return &type metadata for DetectTextRectanglesRequest;
}

ValueMetadata *type metadata accessor for DetectTextRectanglesRequest.Revision()
{
  return &type metadata for DetectTextRectanglesRequest.Revision;
}

ValueMetadata *type metadata accessor for DetectTextRectanglesRequest.Algorithm()
{
  return &type metadata for DetectTextRectanglesRequest.Algorithm;
}

unsigned char *_s6Vision27DetectTextRectanglesRequestV9AlgorithmOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D4D448);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectTextRectanglesRequest.Algorithm.CodingKeys()
{
  return &type metadata for DetectTextRectanglesRequest.Algorithm.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectTextRectanglesRequest.Algorithm.GeneralCodingKeys()
{
  return &type metadata for DetectTextRectanglesRequest.Algorithm.GeneralCodingKeys;
}

ValueMetadata *type metadata accessor for DetectTextRectanglesRequest.Algorithm.CreditCardAwareCodingKeys()
{
  return &type metadata for DetectTextRectanglesRequest.Algorithm.CreditCardAwareCodingKeys;
}

unsigned char *_s6Vision27DetectTextRectanglesRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D4D53CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectTextRectanglesRequest.Revision.CodingKeys()
{
  return &type metadata for DetectTextRectanglesRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectTextRectanglesRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for DetectTextRectanglesRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3D4D588()
{
  unint64_t result = qword_1E960D7D0[0];
  if (!qword_1E960D7D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960D7D0);
  }
  return result;
}

unint64_t sub_1A3D4D5E0()
{
  unint64_t result = qword_1E960DBE0[0];
  if (!qword_1E960DBE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960DBE0);
  }
  return result;
}

unint64_t sub_1A3D4D638()
{
  unint64_t result = qword_1E960DCF0;
  if (!qword_1E960DCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960DCF0);
  }
  return result;
}

unint64_t sub_1A3D4D690()
{
  unint64_t result = qword_1E960DCF8[0];
  if (!qword_1E960DCF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960DCF8);
  }
  return result;
}

unint64_t sub_1A3D4D6E8()
{
  unint64_t result = qword_1E960DD80;
  if (!qword_1E960DD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960DD80);
  }
  return result;
}

unint64_t sub_1A3D4D740()
{
  unint64_t result = qword_1E960DD88[0];
  if (!qword_1E960DD88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960DD88);
  }
  return result;
}

unint64_t sub_1A3D4D798()
{
  unint64_t result = qword_1E960DE10;
  if (!qword_1E960DE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960DE10);
  }
  return result;
}

unint64_t sub_1A3D4D7F0()
{
  unint64_t result = qword_1E960DE18[0];
  if (!qword_1E960DE18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960DE18);
  }
  return result;
}

unint64_t sub_1A3D4D848()
{
  unint64_t result = qword_1E960DEA0;
  if (!qword_1E960DEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960DEA0);
  }
  return result;
}

unint64_t sub_1A3D4D8A0()
{
  unint64_t result = qword_1E960DEA8[0];
  if (!qword_1E960DEA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960DEA8);
  }
  return result;
}

unint64_t sub_1A3D4D8F8()
{
  unint64_t result = qword_1E960DF30;
  if (!qword_1E960DF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960DF30);
  }
  return result;
}

unint64_t sub_1A3D4D950()
{
  unint64_t result = qword_1E960DF38[0];
  if (!qword_1E960DF38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960DF38);
  }
  return result;
}

uint64_t sub_1A3D4D9A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6172656E6567 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6143746964657263 && a2 == 0xEF65726177416472)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A3D4DABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RecognizedObjectObservation.labels.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 RecognizedObjectObservation.boundingBox.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t RecognizedObjectObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RecognizedObjectObservation() + 24);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RecognizedObjectObservation()
{
  uint64_t result = qword_1E960E350;
  if (!qword_1E960E350) {
    return swift_getSingletonMetadata();
  }
  return result;
}

float RecognizedObjectObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for RecognizedObjectObservation() + 28));
}

__n128 RecognizedObjectObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RecognizedObjectObservation() + 32);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t RecognizedObjectObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for RecognizedObjectObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

unint64_t RecognizedObjectObservation.description.getter()
{
  uint64_t v1 = type metadata accessor for ClassificationObservation();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  char v4 = (void *)((char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  unint64_t v21 = 0xD000000000000025;
  unint64_t v22 = 0x80000001A40B5840;
  uint64_t v5 = *v0;
  int64_t v6 = *(void *)(*v0 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    v19[2] = v0;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1A3D4F15C(0, v6, 0);
    uint64_t v8 = *(unsigned __int8 *)(v2 + 80);
    v19[1] = v5;
    uint64_t v9 = v5 + ((v8 + 32) & ~v8);
    uint64_t v10 = *(void *)(v2 + 72);
    uint64_t v7 = v20;
    do
    {
      sub_1A3D4F724(v9, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ClassificationObservation);
      uint64_t v11 = *v4;
      uint64_t v12 = v4[1];
      swift_bridgeObjectRetain();
      sub_1A3D4F78C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ClassificationObservation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A3D4F15C(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v20;
      }
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A3D4F15C((char *)(v13 > 1), v14 + 1, 1);
        uint64_t v7 = v20;
      }
      *(void *)(v7 + 16) = v14 + 1;
      uint64_t v15 = v7 + 16 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE408);
  sub_1A3D4F17C();
  sub_1A40960EC();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v16 = type metadata accessor for RecognizedObjectObservation();
  sub_1A3DB6C5C(v16, (uint64_t)&protocol witness table for RecognizedObjectObservation);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v17 = sub_1A3D50580(&qword_1E95EC608, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
  sub_1A3D8AC8C(v16, (uint64_t)&off_1EF74D6C8, v17);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return v21;
}

uint64_t RecognizedObjectObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D4E020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D50580(&qword_1E95EC608, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3D4E0A4()
{
  uint64_t v1 = 0x676E69646E756F62;
  if (*v0 != 1) {
    uint64_t v1 = 0x736C6562616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746176726573626FLL;
  }
}

uint64_t sub_1A3D4E10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D50400(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D4E134(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4F63C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D4E170(uint64_t a1)
{
  unint64_t v2 = sub_1A3D4F63C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecognizedObjectObservation.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE420);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D4F63C();
  sub_1A4096FEC();
  *(void *)&long long v19 = *(void *)v2;
  char v21 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECF40);
  sub_1A3D4F690(&qword_1E95EE428, &qword_1E95EE430);
  uint64_t v11 = v18;
  sub_1A4096DBC();
  if (!v11)
  {
    uint64_t v12 = v17;
    uint64_t v18 = v4;
    long long v13 = *(_OWORD *)(v2 + 24);
    long long v19 = *(_OWORD *)(v2 + 8);
    long long v20 = v13;
    char v21 = 1;
    sub_1A3C80D20();
    sub_1A4096DBC();
    LOBYTE(v19) = 0;
    sub_1A3C80D74();
    sub_1A4096D5C();
    uint64_t v14 = type metadata accessor for RecognizedObjectObservation();
    uint64_t v15 = sub_1A3D50580(&qword_1E95EC608, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
    sub_1A3D2A9D0((uint64_t)v6, v14, (uint64_t)&off_1EF74D6C8, v15);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t RecognizedObjectObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_1A4095C7C();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  MEMORY[0x1F4188790](v3);
  BOOL v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE438);
  uint64_t v42 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RecognizedObjectObservation();
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  char v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1A3D4F63C();
  uint64_t v15 = v46;
  sub_1A4096FDC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  }
  uint64_t v16 = v7;
  uint64_t v37 = v11;
  uint64_t v38 = v5;
  uint64_t v46 = v13;
  uint64_t v18 = v42;
  uint64_t v17 = v43;
  uint64_t v19 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECF40);
  char v50 = 2;
  sub_1A3D4F690(&qword_1E95EE440, &qword_1E95EE448);
  sub_1A4096CFC();
  uint64_t v20 = v8;
  char v21 = v10;
  unint64_t v22 = v46;
  CGRect v23 = (char *)v47;
  void *v46 = v47;
  char v50 = 1;
  sub_1A3C80E18();
  sub_1A4096CFC();
  double v36 = v23;
  long long v24 = v48;
  *(_OWORD *)(v22 + 1) = v47;
  *(_OWORD *)(v22 + 3) = v24;
  LOBYTE(v47) = 0;
  sub_1A3C80D74();
  uint64_t v25 = v16;
  sub_1A4096C7C();
  double v36 = v21;
  LOBYTE(v47) = 0;
  sub_1A3D50580((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  uint64_t v26 = v41;
  uint64_t v27 = v19;
  sub_1A4096CFC();
  uint64_t v35 = v20;
  uint64_t v28 = v37;
  uint64_t v29 = v46;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)v46 + *(int *)(v37 + 24), v26, v27);
  LOBYTE(v47) = 1;
  sub_1A4096CDC();
  *(_DWORD *)((char *)v29 + *(int *)(v28 + 28)) = v30;
  char v50 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  uint64_t v31 = v37;
  uint64_t v32 = (uint64_t)v46;
  *(_WORD *)((char *)v46 + *(int *)(v37 + 36)) = v47;
  sub_1A3D2B130((uint64_t)v49);
  uint64_t v33 = v35;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v38);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v36, v33);
  sub_1A3C7D648((uint64_t)v49, v32 + *(int *)(v31 + 32));
  sub_1A3D4F724(v32, v39, (uint64_t (*)(void))type metadata accessor for RecognizedObjectObservation);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return sub_1A3D4F78C(v32, (uint64_t (*)(void))type metadata accessor for RecognizedObjectObservation);
}

uint64_t sub_1A3D4EB8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RecognizedObjectObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3D4EBA4(void *a1)
{
  return RecognizedObjectObservation.encode(to:)(a1);
}

uint64_t sub_1A3D4EBBC@<X0>(void *a1@<X0>, unsigned __int16 *a2@<X1>, double *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE450);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for ClassificationObservation();
  uint64_t v56 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  *(void *)&long long v58 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v55 = (uint64_t)&v52 - v16;
  int v59 = *a2;
  CGFloat v17 = *a3;
  CGFloat v18 = a3[1];
  CGFloat v19 = a3[2];
  CGFloat v20 = a3[3];
  id v52 = a1;
  id v21 = objc_msgSend(a1, sel_labels);
  sub_1A3D4F7EC();
  unint64_t v22 = sub_1A409630C();

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1A4096BFC();
    uint64_t v23 = result;
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v53 = a5;
  if (!v23)
  {
    uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease_n();
    double v36 = (int *)type metadata accessor for RecognizedObjectObservation();
    id v37 = v52;
    objc_msgSend(v52, sel_boundingBox);
    CGFloat v39 = v38;
    CGFloat v41 = v40;
    CGFloat v43 = v42;
    CGFloat v45 = v44;
    char v46 = objc_msgSend(v37, sel_providesBoundsNormalizedToROI);
    v60[0] = v17;
    v60[1] = v18;
    v60[2] = v19;
    v60[3] = v20;
    sub_1A3D50580(&qword_1E95EE458, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
    sub_1A3D445C8(v46, v60, v39, v41, v43, v45);
    long long v58 = v61;
    CGFloat v47 = v62;
    CGFloat v48 = v63;
    id v49 = objc_msgSend(v37, sel_uuid);
    uint64_t v50 = v53;
    sub_1A4095C5C();

    objc_msgSend(v37, sel_confidence);
    LODWORD(v39) = v51;

    *(void *)uint64_t v50 = v29;
    *(_OWORD *)(v50 + 8) = v58;
    *(CGFloat *)(v50 + 24) = v47;
    *(CGFloat *)(v50 + 32) = v48;
    *(_DWORD *)(v50 + v36[7]) = LODWORD(v39);
    uint64_t result = sub_1A3C7D648(a4, v50 + v36[8]);
    *(_WORD *)(v50 + v36[9]) = v59;
    return result;
  }
  if (v23 >= 1)
  {
    uint64_t v57 = v23;
    uint64_t v25 = 0;
    unint64_t v26 = v22 & 0xC000000000000001;
    uint64_t v27 = (void (**)(uint64_t *, void, uint64_t, uint64_t))(v56 + 56);
    uint64_t v28 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v56 + 48);
    uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v54 = a4;
    unint64_t v30 = v22;
    do
    {
      if (v26) {
        id v31 = (id)MEMORY[0x1A6254720](v25, v22);
      }
      else {
        id v31 = *(id *)(v22 + 8 * v25 + 32);
      }
      LOWORD(v60[0]) = v59;
      *(CGFloat *)&long long v61 = v17;
      *((CGFloat *)&v61 + 1) = v18;
      CGFloat v62 = v19;
      CGFloat v63 = v20;
      id v32 = v31;
      sub_1A3DAEF70(v32, (__int16 *)v60, a4, v12);
      (*v27)(v12, 0, 1, v13);

      if ((*v28)(v12, 1, v13) == 1)
      {
        sub_1A3D4F82C((uint64_t)v12);
      }
      else
      {
        uint64_t v33 = v55;
        sub_1A3D4F88C((uint64_t)v12, v55);
        sub_1A3D4F88C(v33, v58);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v29 = (void *)sub_1A3D4F2DC(0, v29[2] + 1, 1, v29);
        }
        unint64_t v35 = v29[2];
        unint64_t v34 = v29[3];
        if (v35 >= v34 >> 1) {
          uint64_t v29 = (void *)sub_1A3D4F2DC(v34 > 1, v35 + 1, 1, v29);
        }
        v29[2] = v35 + 1;
        sub_1A3D4F88C(v58, (uint64_t)v29+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v35);
        a4 = v54;
      }
      ++v25;
      unint64_t v22 = v30;
    }
    while (v57 != v25);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t RecognizedObjectObservation.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int16 v7 = -8;
  static NormalizedRect.fullImage.getter(v6);
  objc_msgSend(a1, sel_timeRange, *(_OWORD *)v6, *(_OWORD *)&v6[1]);
  char v9 = 0;
  return sub_1A3D4EBBC(a1, &v7, (double *)&v5, (uint64_t)&v8, a2);
}

uint64_t sub_1A3D4F124@<X0>(void *a1@<X0>, unsigned __int16 *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned __int16 v8 = *a2;
  long long v5 = a3[1];
  v7[0] = *a3;
  v7[1] = v5;
  return sub_1A3D4EBBC(a1, &v8, (double *)v7, a4, a5);
}

char *sub_1A3D4F15C(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A3D4F1D8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

unint64_t sub_1A3D4F17C()
{
  unint64_t result = qword_1E95EE410;
  if (!qword_1E95EE410)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE410);
  }
  return result;
}

char *sub_1A3D4F1D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF370);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_1A3D4F2DC(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED1A8);
  uint64_t v10 = *(void *)(type metadata accessor for ClassificationObservation() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  unint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  __n128 v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for ClassificationObservation() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

uint64_t _s6Vision27RecognizedObjectObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1A3CCF58C(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  CGSize v4 = *(CGSize *)(a1 + 24);
  v28.origin = *(CGPoint *)(a1 + 8);
  v28.size = v4;
  CGSize v5 = *(CGSize *)(a2 + 24);
  v25.origin = *(CGPoint *)(a2 + 8);
  v25.size = v5;
  if (!static NormalizedRect.== infix(_:_:)(&v28, &v25)) {
    return 0;
  }
  unint64_t v6 = (int *)type metadata accessor for RecognizedObjectObservation();
  if ((sub_1A4095C4C() & 1) == 0 || *(float *)(a1 + v6[7]) != *(float *)(a2 + v6[7])) {
    return 0;
  }
  uint64_t v7 = v6[8];
  uint64_t v8 = a1 + v7;
  char v9 = *(unsigned char *)(a1 + v7 + 48);
  uint64_t v10 = a2 + v7;
  if ((v9 & 1) == 0)
  {
    if (*(unsigned char *)(v10 + 48)) {
      return 0;
    }
    CGFloat v11 = *(double *)v8;
    CGFloat v12 = *(double *)(v8 + 8);
    CGSize v13 = *(CGSize *)(v8 + 16);
    uint64_t v15 = *(void *)(v8 + 32);
    uint64_t v14 = *(void *)(v8 + 40);
    CGFloat v16 = *(double *)v10;
    CGFloat v17 = *(double *)(v10 + 8);
    CGSize v18 = *(CGSize *)(v10 + 16);
    uint64_t v20 = *(void *)(v10 + 32);
    uint64_t v19 = *(void *)(v10 + 40);
    v25.origin.CGFloat x = v11;
    v25.origin.CGFloat y = v12;
    v25.size = v13;
    uint64_t v26 = v15;
    uint64_t v27 = v14;
    v28.origin.CGFloat x = v16;
    v28.origin.CGFloat y = v17;
    v28.size = v18;
    uint64_t v29 = v20;
    uint64_t v30 = v19;
    if ((sub_1A409669C() & 1) == 0) {
      return 0;
    }
LABEL_10:
    uint64_t v21 = v6[9];
    unsigned int v22 = *(unsigned __int16 *)(a1 + v21);
    unsigned int v23 = *(unsigned __int16 *)(a2 + v21);
    if (v22 <= 0xFFF7)
    {
      if (v23 > 0xFFF7) {
        return 0;
      }
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
    }
    else if (v23 <= 0xFFF7)
    {
      return 0;
    }
    return 1;
  }
  if (*(unsigned char *)(v10 + 48)) {
    goto LABEL_10;
  }
  return 0;
}

unint64_t sub_1A3D4F63C()
{
  unint64_t result = qword_1E960DFC0[0];
  if (!qword_1E960DFC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960DFC0);
  }
  return result;
}

uint64_t sub_1A3D4F690(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95ECF40);
    sub_1A3D50580(a2, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D4F724(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3D4F78C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A3D4F7EC()
{
  unint64_t result = qword_1E95EC600;
  if (!qword_1E95EC600)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EC600);
  }
  return result;
}

uint64_t sub_1A3D4F82C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3D4F88C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClassificationObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D4F8F0(void *a1)
{
  a1[1] = sub_1A3D50580(&qword_1E95EE460, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
  a1[2] = sub_1A3D50580(&qword_1E95EE468, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
  a1[3] = sub_1A3D50580(&qword_1E95EE470, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
  uint64_t result = sub_1A3D50580(&qword_1E95EE418, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3D4F9C4()
{
  return sub_1A3D50580(&qword_1E95ED190, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
}

uint64_t sub_1A3D4FA0C(uint64_t a1)
{
  uint64_t result = sub_1A3D50580(&qword_1E95EC608, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for RecognizedObjectObservation(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v8 = a3[6];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1A4095C7C();
    CGFloat v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    *(_DWORD *)(v7 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    uint64_t v14 = v7 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    long long v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v16;
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
    *(unsigned char *)(v14 + 48) = *(unsigned char *)(v15 + 48);
    *(_WORD *)(v7 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  }
  return v7;
}

uint64_t destroy for RecognizedObjectObservation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1A4095C7C();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for RecognizedObjectObservation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  return a1;
}

void *assignWithCopy for RecognizedObjectObservation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[48];
  long long v15 = *((_OWORD *)v12 + 1);
  long long v14 = *((_OWORD *)v12 + 2);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v15;
  *((_OWORD *)v11 + 2) = v14;
  v11[48] = v13;
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for RecognizedObjectObservation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for RecognizedObjectObservation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecognizedObjectObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D4FFC4);
}

uint64_t sub_1A3D4FFC4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A4095C7C();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RecognizedObjectObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D50088);
}

void *sub_1A3D50088(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A4095C7C();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A3D50130()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RecognizedObjectObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D502C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecognizedObjectObservation.CodingKeys()
{
  return &type metadata for RecognizedObjectObservation.CodingKeys;
}

unint64_t sub_1A3D502FC()
{
  unint64_t result = qword_1E960E460[0];
  if (!qword_1E960E460[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960E460);
  }
  return result;
}

unint64_t sub_1A3D50354()
{
  unint64_t result = qword_1E960E570;
  if (!qword_1E960E570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960E570);
  }
  return result;
}

unint64_t sub_1A3D503AC()
{
  unint64_t result = qword_1E960E578;
  if (!qword_1E960E578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960E578);
  }
  return result;
}

uint64_t sub_1A3D50400(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A3D50580(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static GeneratePersonSegmentationRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static GeneratePersonSegmentationRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t GeneratePersonSegmentationRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D50600(uint64_t a1)
{
  unint64_t v2 = sub_1A3D508C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D5063C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D508C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D50678(uint64_t a1)
{
  unint64_t v2 = sub_1A3D50914();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D506B4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D50914();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GeneratePersonSegmentationRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE478);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE480);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D508C0();
  sub_1A4096FEC();
  sub_1A3D50914();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D508C0()
{
  unint64_t result = qword_1E960E618;
  if (!qword_1E960E618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960E618);
  }
  return result;
}

unint64_t sub_1A3D50914()
{
  unint64_t result = qword_1E960E620;
  if (!qword_1E960E620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960E620);
  }
  return result;
}

uint64_t GeneratePersonSegmentationRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t GeneratePersonSegmentationRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE488);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE490);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D508C0();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D50914();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      long long v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *long long v13 = &type metadata for GeneratePersonSegmentationRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D50C94(void *a1)
{
  return GeneratePersonSegmentationRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D50CAC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE478);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE480);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D508C0();
  sub_1A4096FEC();
  sub_1A3D50914();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t GeneratePersonSegmentationRequest.__allocating_init(_:frameAnalysisSpacing:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  char v9 = a5 & 1;
  uint64_t v10 = swift_allocObject();
  GeneratePersonSegmentationRequest.init(_:frameAnalysisSpacing:)(a1, a2, a3, a4, v9);
  return v10;
}

uint64_t *GeneratePersonSegmentationRequest.init(_:frameAnalysisSpacing:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *v5;
  int v12 = *a1;
  static NormalizedRect.fullImage.getter(&v27);
  unint64_t v13 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  __n128 v26 = v27;
  uint64_t v14 = v28;
  uint64_t v15 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE498);
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 0;
  *(_DWORD *)(v16 + 20) = 1278226488;
  *(__n128 *)(v16 + 24) = v26;
  *(void *)(v16 + 40) = v14;
  *(void *)(v16 + 48) = v15;
  *(unsigned char *)(v16 + 56) = 0;
  *(void *)(v16 + 64) = v13;
  *(_WORD *)(v16 + 72) = 0;
  *(void *)(v16 + 76) = 1063675494;
  v6[5] = v16;
  type metadata accessor for GeneratePersonSegmentationRequest.State(0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(unsigned char *)(v17 + 24) = 1;
  *(void *)(v17 + 32) = 0;
  *(unsigned char *)(v17 + 40) = 1;
  uint64_t v18 = v17 + OBJC_IVAR____TtCC6Vision33GeneratePersonSegmentationRequest5State_lastResult;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = v17 + OBJC_IVAR____TtCC6Vision33GeneratePersonSegmentationRequest5State_lastAnalyzedTimeStamp;
  *(void *)(v20 + 8) = 0;
  *(void *)(v20 + 16) = 0;
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 24) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4A8);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 24) = 0;
  *(void *)(v21 + 16) = v17;
  v6[6] = v21;
  sub_1A4095C6C();
  if (v12 == 1)
  {
    uint64_t v22 = sub_1A3D545B0(&qword_1E95EE4B0, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
    sub_1A3E2C988(v11, v22, v23);
  }
  if (a5)
  {
    a2 = *MEMORY[0x1E4F1FA48];
    LODWORD(a3) = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 8);
    LODWORD(v24) = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 12);
    a4 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  }
  else
  {
    unint64_t v24 = HIDWORD(a3);
  }
  __n128 v6[2] = a2;
  *((_DWORD *)v6 + 6) = a3;
  *((_DWORD *)v6 + 7) = v24;
  v6[4] = a4;
  return v6;
}

BOOL static GeneratePersonSegmentationRequest.QualityLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t GeneratePersonSegmentationRequest.QualityLevel.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D51170(uint64_t a1)
{
  unint64_t v2 = sub_1A3D53ACC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D511AC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D53ACC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D511E8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D53A78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D51224(uint64_t a1)
{
  unint64_t v2 = sub_1A3D53A78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D51260()
{
  uint64_t v1 = 0x6465636E616C6162;
  if (*v0 != 1) {
    uint64_t v1 = 1953718630;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6574617275636361;
  }
}

uint64_t sub_1A3D512B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D58658(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D512DC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D539D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D51318(uint64_t a1)
{
  unint64_t v2 = sub_1A3D539D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D51354(uint64_t a1)
{
  unint64_t v2 = sub_1A3D53A24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D51390(uint64_t a1)
{
  unint64_t v2 = sub_1A3D53A24();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static GeneratePersonSegmentationRequest.QualityLevel.allCases.getter()
{
  return &unk_1EF74EE28;
}

uint64_t GeneratePersonSegmentationRequest.QualityLevel.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4B8);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4C0);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4C8);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4D0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D539D0();
  sub_1A4096FEC();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_1A3D53A78();
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_1A3D53A24();
      uint64_t v17 = v23;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_1A3D53ACC();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t GeneratePersonSegmentationRequest.QualityLevel.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t GeneratePersonSegmentationRequest.QualityLevel.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4D8);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  id v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4E0);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4E8);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4F0);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D539D0();
  uint64_t v12 = (uint64_t)v39;
  sub_1A4096FDC();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  CGFloat v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_1A4096D3C();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_1A4096ABC();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *uint64_t v23 = &type metadata for GeneratePersonSegmentationRequest.QualityLevel;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_1A3D53A78();
      uint64_t v18 = v30;
      sub_1A4096C7C();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_1A3D53A24();
      uint64_t v25 = v30;
      sub_1A4096C7C();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_1A3D53ACC();
    uint64_t v24 = v30;
    sub_1A4096C7C();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

void sub_1A3D51D3C(void *a1@<X8>)
{
  *a1 = &unk_1EF74EEE0;
}

uint64_t sub_1A3D51D4C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GeneratePersonSegmentationRequest.QualityLevel.init(from:)(a1, a2);
}

uint64_t sub_1A3D51D64(void *a1)
{
  return GeneratePersonSegmentationRequest.QualityLevel.encode(to:)(a1);
}

void GeneratePersonSegmentationRequest.qualityLevel.getter(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3CFFD5C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D51DE8(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 40);
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3CFFD5C(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D51E54(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 40);
  uint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 20;
  os_unfair_lock_lock(v2 + 20);
  sub_1A3D05D98(v3);
  os_unfair_lock_unlock(v4);
}

void GeneratePersonSegmentationRequest.qualityLevel.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  unint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D01184(v2);
  os_unfair_lock_unlock(v3);
}

void (*GeneratePersonSegmentationRequest.qualityLevel.modify(os_unfair_lock_s **a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = a1 + 2;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 40);
  *a1 = v4;
  uint64_t v5 = v4 + 4;
  char v6 = v4 + 20;
  os_unfair_lock_lock(v4 + 20);
  sub_1A3CFFD5C(v5, v3);
  a1[1] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3D51FA8;
}

void sub_1A3D51FA8(os_unfair_lock_s **a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = *a1 + 20;
  os_unfair_lock_lock(v2);
  sub_1A3D05D98(&v1[4]);
  os_unfair_lock_unlock(v2);
}

uint64_t GeneratePersonSegmentationRequest.outputPixelFormatType.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D00018(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D52090(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  unsigned int v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D00018(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D520FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 40);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 20;
  os_unfair_lock_lock(v2 + 20);
  sub_1A3D05D38(v3);
  os_unfair_lock_unlock(v4);
}

void GeneratePersonSegmentationRequest.outputPixelFormatType.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D01190(v2);
  os_unfair_lock_unlock(v3);
}

void (*GeneratePersonSegmentationRequest.outputPixelFormatType.modify(uint64_t a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  *(void *)a1 = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  unsigned int v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D00018(v4, v7);
  *(void *)(a1 + 8) = 0;
  os_unfair_lock_unlock(v5);
  *(_DWORD *)(a1 + 16) = v7[0];
  return sub_1A3D52248;
}

void sub_1A3D52248(os_unfair_lock_s **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 20;
  os_unfair_lock_lock(v2);
  sub_1A3D05D38((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v2);
}

void *GeneratePersonSegmentationRequest.supportedOutputPixelFormats.getter()
{
  return &unk_1EF74EFA0;
}

uint64_t GeneratePersonSegmentationRequest.frameAnalysisSpacing.getter()
{
  return *(void *)(v0 + 16);
}

void GeneratePersonSegmentationRequest.regionOfInterest.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  unsigned int v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3CBE58C(v4, a1);

  os_unfair_lock_unlock(v5);
}

double sub_1A3D52354@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  unsigned int v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3CBE58C(v4, (uint64_t)v8);
  os_unfair_lock_unlock(v5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

void sub_1A3D523C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 40);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 20;
  os_unfair_lock_lock(v2 + 20);
  sub_1A3CC1D9C(v3);
  os_unfair_lock_unlock(v4);
}

void GeneratePersonSegmentationRequest.regionOfInterest.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3CC0F2C(v2);
  os_unfair_lock_unlock(v3);
}

void (*GeneratePersonSegmentationRequest.regionOfInterest.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 40);
  long long v3[4] = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  int v6 = v4 + 20;
  os_unfair_lock_lock(v4 + 20);
  sub_1A3CBE58C(v5, (uint64_t)v3);
  v3[5] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3D52520;
}

void sub_1A3D52520(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(*(void *)a1 + 32) + 80));
  uint64_t v2 = (os_unfair_lock_s *)v1[4];
  sub_1A3CC1D9C((uint64_t)&v2[4]);
  os_unfair_lock_unlock(v2 + 20);
  free(v1);
}

uint64_t sub_1A3D525AC()
{
  uint64_t PersonSegmentationRequest = type metadata accessor for GeneratePersonSegmentationRequest(0);
  uint64_t v1 = sub_1A3D545B0(&qword_1E95EE4B0, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
  uint64_t result = sub_1A3E2CFDC(PersonSegmentationRequest, v1);
  qword_1E960E608 = result;
  return result;
}

uint64_t static GeneratePersonSegmentationRequest.supportedRevisions.getter()
{
  if (qword_1E960E600 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void GeneratePersonSegmentationRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 176;
}

uint64_t GeneratePersonSegmentationRequest.useTiling.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D52810(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D526E4(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  unsigned __int8 v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D52810(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D52750(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 40);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 20;
  os_unfair_lock_lock(v2 + 20);
  sub_1A3D587B8(v3);
  os_unfair_lock_unlock(v4);
}

void GeneratePersonSegmentationRequest.useTiling.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D53B20(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1A3D52810@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 56);
  return result;
}

void (*GeneratePersonSegmentationRequest.useTiling.modify(uint64_t a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  *(void *)a1 = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  unsigned __int8 v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D52810(v4, v7);
  *(void *)(a1 + 8) = 0;
  os_unfair_lock_unlock(v5);
  *(unsigned char *)(a1 + 16) = v7[0];
  return sub_1A3D528A8;
}

void sub_1A3D528A8(os_unfair_lock_s **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 20;
  os_unfair_lock_lock(v2);
  sub_1A3D587B8((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v2);
}

uint64_t GeneratePersonSegmentationRequest.keepRawOutputMask.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D52AB8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1A3D5298C(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  unsigned __int8 v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D52AB8(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D529F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 40);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 20;
  os_unfair_lock_lock(v2 + 20);
  sub_1A3D587D0(v3);
  os_unfair_lock_unlock(v4);
}

void GeneratePersonSegmentationRequest.keepRawOutputMask.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D53B2C(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1A3D52AB8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 57);
  return result;
}

void (*GeneratePersonSegmentationRequest.keepRawOutputMask.modify(uint64_t a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  *(void *)a1 = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  unsigned __int8 v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D52AB8(v4, v7);
  *(void *)(a1 + 8) = 0;
  os_unfair_lock_unlock(v5);
  *(unsigned char *)(a1 + 16) = v7[0];
  return sub_1A3D52B50;
}

void sub_1A3D52B50(os_unfair_lock_s **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 20;
  os_unfair_lock_lock(v2);
  sub_1A3D587D0((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v2);
}

float GeneratePersonSegmentationRequest.minimumConfidence.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D52D60(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

float sub_1A3D52C34@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  float v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D52D60(v4, &v7);
  os_unfair_lock_unlock(v5);
  float result = v7;
  *a2 = v7;
  return result;
}

void sub_1A3D52CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 40);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 20;
  os_unfair_lock_lock(v2 + 20);
  sub_1A3D587A0(v3);
  os_unfair_lock_unlock(v4);
}

void GeneratePersonSegmentationRequest.minimumConfidence.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D53B38(v2);
  os_unfair_lock_unlock(v3);
}

float sub_1A3D52D60@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 60);
  *a2 = result;
  return result;
}

void (*GeneratePersonSegmentationRequest.minimumConfidence.modify(uint64_t a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  *(void *)a1 = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  float v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D52D60(v4, v7);
  *(void *)(a1 + 8) = 0;
  os_unfair_lock_unlock(v5);
  *(float *)(a1 + 16) = v7[0];
  return sub_1A3D52DF8;
}

void sub_1A3D52DF8(os_unfair_lock_s **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 20;
  os_unfair_lock_lock(v2);
  sub_1A3D587A0((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v2);
}

void GeneratePersonSegmentationRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  float v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D0066C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D52EEC(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  float v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D0066C(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_1A3D52F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 40);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 20;
  os_unfair_lock_lock(v2 + 20);
  sub_1A3D05D50(v3);
  os_unfair_lock_unlock(v4);
}

void GeneratePersonSegmentationRequest.modelFileBackingStore.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D0119C(v2);
  os_unfair_lock_unlock(v3);
}

void (*GeneratePersonSegmentationRequest.modelFileBackingStore.modify(os_unfair_lock_s **a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = a1 + 2;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 40);
  *a1 = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  char v6 = v4 + 20;
  os_unfair_lock_lock(v4 + 20);
  sub_1A3D0066C(v5, v3);
  a1[1] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3D530AC;
}

void sub_1A3D530AC(os_unfair_lock_s **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 20;
  os_unfair_lock_lock(v2);
  sub_1A3D05D50((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v2);
}

unint64_t sub_1A3D53130(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE5B8);
  uint64_t v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3C8C844(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A3D53244()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_1A3D5327C(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t sub_1A3D532D0()
{
  swift_beginAccess();
  return *(void *)(v0 + 32);
}

uint64_t sub_1A3D53308(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t sub_1A3D5335C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC6Vision33GeneratePersonSegmentationRequest5State_lastResult;
  swift_beginAccess();
  return sub_1A3CCB91C(v3, a1, &qword_1E95EE4F8);
}

uint64_t sub_1A3D533B8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC6Vision33GeneratePersonSegmentationRequest5State_lastResult;
  swift_beginAccess();
  sub_1A3D53B44(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1A3D53414())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3D53470()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC6Vision33GeneratePersonSegmentationRequest5State_lastAnalyzedTimeStamp;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1A3D534C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtCC6Vision33GeneratePersonSegmentationRequest5State_lastAnalyzedTimeStamp;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(void *)(v9 + 16) = a3;
  *(unsigned char *)(v9 + 24) = a4 & 1;
  return result;
}

uint64_t (*sub_1A3D53534())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3D53590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4F8);
  __n128 v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, void, __n128))(*(void *)v3 + 120))(a2, 0, v8);
  (*(void (**)(uint64_t, void))(*(void *)v3 + 144))(a3, 0);
  sub_1A3D53FD8(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4A0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  return (*(uint64_t (**)(char *))(*(void *)v3 + 168))(v10);
}

uint64_t sub_1A3D5370C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4F8);
  __n128 v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void, uint64_t, __n128))(*(void *)v0 + 120))(0, 1, v2);
  (*(void (**)(void, uint64_t))(*(void *)v0 + 144))(0, 1);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  (*(void (**)(char *))(*(void *)v0 + 168))(v4);
  return (*(uint64_t (**)(void, void, void, uint64_t))(*(void *)v0 + 192))(0, 0, 0, 1);
}

uint64_t sub_1A3D5386C()
{
  sub_1A3CA2EB8(v0 + OBJC_IVAR____TtCC6Vision33GeneratePersonSegmentationRequest5State_lastResult, &qword_1E95EE4F8);

  return swift_deallocClassInstance();
}

uint64_t sub_1A3D538D8()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  uint64_t v1 = v0 + OBJC_IVAR____TtCC6Vision33GeneratePersonSegmentationRequest5State_lastResult;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCC6Vision33GeneratePersonSegmentationRequest5State_lastAnalyzedTimeStamp;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 16) = 0;
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 24) = 1;
  return v0;
}

uint64_t type metadata accessor for GeneratePersonSegmentationRequest.State(uint64_t a1)
{
  return sub_1A3CCB9A0(a1, qword_1E960EFE0);
}

uint64_t type metadata accessor for GeneratePersonSegmentationRequest(uint64_t a1)
{
  return sub_1A3CCB9A0(a1, (uint64_t *)&unk_1E960EFD0);
}

unint64_t sub_1A3D539D0()
{
  unint64_t result = qword_1E960E628;
  if (!qword_1E960E628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960E628);
  }
  return result;
}

unint64_t sub_1A3D53A24()
{
  unint64_t result = qword_1E960E630;
  if (!qword_1E960E630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960E630);
  }
  return result;
}

unint64_t sub_1A3D53A78()
{
  unint64_t result = qword_1E960E638;
  if (!qword_1E960E638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960E638);
  }
  return result;
}

unint64_t sub_1A3D53ACC()
{
  unint64_t result = qword_1E960E640[0];
  if (!qword_1E960E640[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960E640);
  }
  return result;
}

uint64_t sub_1A3D53B20(uint64_t result)
{
  *(unsigned char *)(result + 56) = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t sub_1A3D53B2C(uint64_t result)
{
  *(unsigned char *)(result + 57) = *(unsigned char *)(v1 + 16);
  return result;
}

float sub_1A3D53B38(uint64_t a1)
{
  float result = *(float *)(v1 + 16);
  *(float *)(a1 + 60) = result;
  return result;
}

uint64_t sub_1A3D53B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D53BAC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_1A3D53BD0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t (*sub_1A3D53BF4(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 176))();
  return sub_1A3C8A344;
}

uint64_t sub_1A3D53C6C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_1A3D53CA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v4 + 192))(a1, a2, a3, a4 & 1);
}

uint64_t (*sub_1A3D53CD0(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 200))();
  return sub_1A3C8A344;
}

id sub_1A3D53D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PixelBufferObservation();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for VisionResult(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A3D53FD8(a1, (uint64_t)v9, type metadata accessor for VisionResult);
  if (swift_getEnumCaseMultiPayload() != 20)
  {
    uint64_t v22 = type metadata accessor for VisionResult;
    uint64_t v23 = (uint64_t)v9;
    return (id)sub_1A3D540A4(v23, v22);
  }
  swift_release();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD60);
  sub_1A3D54040((uint64_t)&v9[*(int *)(v10 + 48)], (uint64_t)v6);
  LOWORD(v25[0]) = 176;
  id result = sub_1A3DBF9C8();
  if (result)
  {
    BOOL v12 = result;
    id v13 = objc_msgSend(objc_allocWithZone((Class)VNPixelBufferObservation), sel_initWithOriginatingRequestSpecifier_featureName_CVPixelBuffer_, result, 0, *(void *)&v6[*(int *)(v4 + 32)]);

    uint64_t v14 = sub_1A409617C();
    uint64_t v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE500);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1A40E7700;
    *(void *)(v17 + 32) = v13;
    v25[0] = v17;
    sub_1A409632C();
    uint64_t v18 = v25[0];
    v25[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE508);
    v25[0] = v18;
    uint64_t v19 = *(uint64_t (**)(unsigned char *))(*(void *)a2 + 200);
    id v20 = v13;
    uint64_t v21 = (void (*)(unsigned char *, void))v19(v24);
    sub_1A3C8BC40((uint64_t)v25, v14, v16);
    v21(v24, 0);

    uint64_t v22 = (uint64_t (*)(void))type metadata accessor for PixelBufferObservation;
    uint64_t v23 = (uint64_t)v6;
    return (id)sub_1A3D540A4(v23, v22);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3D53FD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3D54040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PixelBufferObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D540A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1A3D54104(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (os_unfair_lock_s *)v2[5];
  uint64_t v8 = v7 + 4;
  uint64_t v9 = v7 + 20;
  uint64_t v10 = v6;
  os_unfair_lock_lock(v7 + 20);
  sub_1A3CFFD5C(v8, &v14);
  if (v3)
  {
    os_unfair_lock_unlock(v9);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v9);
    if (v14 == 2)
    {
      MEMORY[0x1F4188790](v11);
      __n128 v13[2] = a1;
      v13[3] = a2;
      uint64_t v12 = sub_1A3D545B0(&qword_1E95EE510, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
      sub_1A3C8DBDC((uint64_t)sub_1A3D54584, (uint64_t)v13, v10, MEMORY[0x1E4FBC848] + 8, v12, MEMORY[0x1E4FBC848]);
    }
  }
}

uint64_t sub_1A3D54264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PixelBufferObservation();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VisionResult(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)v21 - v13;
  sub_1A3D53FD8(a2, (uint64_t)v21 - v13, type metadata accessor for VisionResult);
  if (swift_getEnumCaseMultiPayload() == 20)
  {
    swift_release();
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD60);
    uint64_t v16 = sub_1A3D54040((uint64_t)&v14[*(int *)(v15 + 48)], (uint64_t)v8);
    uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 184))(v16);
    uint64_t v18 = (void *)sub_1A3DAC164(v17);
    uint64_t v19 = swift_bridgeObjectRelease();
    if (v18)
    {
      (*(void (**)(char *, id, id))(*(void *)a1 + 208))(v8, objc_msgSend(v18, sel_width), objc_msgSend(v18, sel_height));
    }
    else
    {
      (*(void (**)(uint64_t))(*(void *)a1 + 216))(v19);
    }
    return sub_1A3D540A4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
  }
  else
  {
    sub_1A3D53FD8(a2, (uint64_t)v11, type metadata accessor for VisionResult);
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A3D545B0(&qword_1E95F0470, (void (*)(uint64_t))type metadata accessor for VisionResult);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A4096BEC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D54584(uint64_t a1)
{
  return sub_1A3D54264(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A3D545B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

int *sub_1A3D545F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE5C0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(5, 0, 5);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(5, 0, 5);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(5, 0, 5);
  uint64_t v6 = sub_1A3D09D5C(v5);
  uint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for GeneratePersonSegmentationRequest.Revision, v0 + 32);
  qword_1E9643D08 = v0;
  return result;
}

uint64_t GeneratePersonSegmentationRequest.deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision33GeneratePersonSegmentationRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t GeneratePersonSegmentationRequest.__deallocating_deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision33GeneratePersonSegmentationRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t GeneratePersonSegmentationRequest.hashValue.getter()
{
  return sub_1A4096F7C();
}

void sub_1A3D54880(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)v1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3CBE58C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D548F0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3CC1D9C(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t (*sub_1A3D54954(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = GeneratePersonSegmentationRequest.regionOfInterest.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D549B0(uint64_t a1)
{
  uint64_t v2 = sub_1A3D545B0(&qword_1E95EE528, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D54A1C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A3D545B0(&qword_1E95EE4B0, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D54AA0(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A3D545B0(&qword_1E95EE4B0, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D54B24(_WORD *a1@<X8>)
{
  *a1 = 176;
}

void sub_1A3D54B30(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)v1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D0066C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3D54BA0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D05D50(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t (*sub_1A3D54C04(os_unfair_lock_s ***a1))()
{
  uint64_t v2 = (os_unfair_lock_s **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (os_unfair_lock_s *)GeneratePersonSegmentationRequest.modelFileBackingStore.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D54C60(uint64_t a1)
{
  uint64_t v2 = sub_1A3D545B0(&qword_1E95EE4B0, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D54CCC(uint64_t a1, uint64_t a2)
{
  sub_1A3D545B0(&qword_1E95EE598, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);

  return StatefulRequest.hash(into:)(a1, a2);
}

uint64_t sub_1A3D54D48(uint64_t a1, uint64_t a2)
{
  sub_1A3D545B0(&qword_1E95EE598, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);

  return static StatefulRequest.== infix(_:_:)(a1, a2, v2);
}

uint64_t sub_1A3D54DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for VisionResult(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A3D53FD8(a1, (uint64_t)v8, type metadata accessor for VisionResult);
  if (swift_getEnumCaseMultiPayload() == 20)
  {
    swift_release();
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD60);
    return sub_1A3D54040((uint64_t)&v8[*(int *)(v9 + 48)], a2);
  }
  else
  {
    sub_1A3D540A4((uint64_t)v8, type metadata accessor for VisionResult);
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    strcpy((char *)v15, "VisionResult ");
    HIWORD(v15[1]) = -4864;
    sub_1A3D545B0(&qword_1E95F0470, (void (*)(uint64_t))type metadata accessor for VisionResult);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    v14[1] = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE520);
    sub_1A409619C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    uint64_t v11 = v15[0];
    uint64_t v12 = v15[1];
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v13 = v11;
    *(void *)(v13 + 8) = v12;
    *(_DWORD *)(v13 + 16) = 0;
    *(unsigned char *)(v13 + 20) = 1;
    return swift_willThrow();
  }
}

uint64_t (*sub_1A3D54FF0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  a1[1] = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3D02264(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3D5507C;
}

uint64_t sub_1A3D5507C(uint64_t a1, char a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 8);
  uint64_t v3 = v2 + 20;
  uint64_t v4 = (uint64_t)&v2[4];
  if (a2)
  {
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v3);
    sub_1A3D03CCC(v4);
    os_unfair_lock_unlock(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v2 + 20);
    sub_1A3D03CCC(v4);
    os_unfair_lock_unlock(v3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D55130()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3CFFD5C(v2, &v7);
  os_unfair_lock_unlock(v3);
  if (v7 != 1) {
    return sub_1A409617C();
  }
  id v4 = objc_msgSend(self, sel_detectorTypeForSemanticSegmentationRequest);
  uint64_t v5 = sub_1A409617C();

  return v5;
}

void sub_1A3D551F4(uint64_t a1@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)v1[5];
  id v4 = v3 + 4;
  uint64_t v5 = v3 + 20;
  uint64_t v6 = *v1;
  os_unfair_lock_lock(v3 + 20);
  sub_1A3CFFD5C(v4, &v24);
  os_unfair_lock_unlock(v5);
  if ((_BYTE)v24)
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    LOBYTE(v24) = 0;
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = GeneratePersonSegmentationRequest.init(_:frameAnalysisSpacing:)((unsigned __int8 *)&v24, 0, 0, 0, 1);
    MEMORY[0x1F4188790](v8);
    uint64_t v10 = v9 + 4;
    uint64_t v11 = v9 + 20;
    os_unfair_lock_lock(v9 + 20);
    sub_1A3D05D98(v10);
    os_unfair_lock_unlock(v11);
    MEMORY[0x1F4188790](v12);
    uint64_t v14 = (uint64_t)&v13[4];
    uint64_t v15 = v13 + 20;
    os_unfair_lock_lock(v13 + 20);
    sub_1A3D05D38(v14);
    os_unfair_lock_unlock(v15);
    MEMORY[0x1F4188790](v16);
    uint64_t v18 = (uint64_t)&v17[4];
    uint64_t v19 = v17 + 20;
    os_unfair_lock_lock(v17 + 20);
    sub_1A3D587D0(v18);
    os_unfair_lock_unlock(v19);
    os_unfair_lock_lock(v5);
    sub_1A3CBE58C((uint64_t)v4, (uint64_t)&v24);
    os_unfair_lock_unlock(v5);
    MEMORY[0x1F4188790](v20);
    uint64_t v22 = (uint64_t)&v21[4];
    uint64_t v23 = v21 + 20;
    os_unfair_lock_lock(v21 + 20);
    sub_1A3CC1D9C(v22);
    os_unfair_lock_unlock(v23);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = sub_1A3D545B0(&qword_1E95EE4B0, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
    *(void *)a1 = v7;
  }
}

uint64_t sub_1A3D55494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Vision33GeneratePersonSegmentationRequest_uuid;
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1A3D55508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3D54DC8(a1, a2);
}

uint64_t sub_1A3D55520@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (uint64_t)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD60) + 48);
  *a2 = v2;
  sub_1A3D53FD8(a1, v5, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
  type metadata accessor for VisionResult(0);
  swift_storeEnumTagMultiPayload();

  return swift_retain();
}

uint64_t sub_1A3D555AC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D02264(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3D55610()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1A3D03CCC(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3D5567C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1A3D54FF0(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3D556D8()
{
  if (qword_1E960E610 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D55734()
{
  return sub_1A3D55130();
}

uint64_t sub_1A3D5575C(uint64_t a1)
{
  return sub_1A3C8DE60(a1) & 1;
}

void sub_1A3D557D4(uint64_t a1@<X8>)
{
}

uint64_t sub_1A3D557F8()
{
  return *v0;
}

void sub_1A3D55800(uint64_t a1)
{
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *v1;
  *(void *)&long long v71 = v1;
  uint64_t v4 = sub_1A3D545B0(&qword_1E95EE528, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
  sub_1A3D45608(a1, v3, v4);
  uint64_t v5 = sub_1A409617C();
  uint64_t v7 = v6;
  uint64_t v8 = (os_unfair_lock_s *)v1[5];
  uint64_t v9 = v8 + 4;
  uint64_t v10 = v8 + 20;
  os_unfair_lock_lock(v8 + 20);
  sub_1A3CFFD5C(v9, &v69);
  os_unfair_lock_unlock(v10);
  uint64_t v72 = MEMORY[0x1E4FBB808];
  *(void *)&long long v71 = v69;
  sub_1A3C856F4(&v71, v70);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v70, v5, v7, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1A409617C();
  uint64_t v14 = v13;
  os_unfair_lock_lock(v10);
  sub_1A3D52810((uint64_t)v9, &v71);
  os_unfair_lock_unlock(v10);
  uint64_t v72 = MEMORY[0x1E4FBB390];
  sub_1A3C856F4(&v71, v70);
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v70, v12, v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = self;
  *(void *)&long long v71 = 0;
  id v17 = objc_msgSend(v16, sel_objectClassOutputNamesForObjectClassIDs_modelVersion_error_, 0x1FFFLL, 1, &v71);
  uint64_t v18 = (void *)v71;
  if (v17)
  {
    uint64_t v19 = v17;
    uint64_t v20 = sub_1A409630C();
    id v21 = v18;
  }
  else
  {
    id v22 = (id)v71;
    uint64_t v23 = (void *)sub_1A4095AEC();

    swift_willThrow();
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  long long v24 = (void *)sub_1A3D240DC(MEMORY[0x1E4FBC860]);
  uint64_t v25 = *(void *)(v20 + 16);
  if (!v25) {
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v68 = v20;
  uint64_t v26 = (uint64_t *)(v20 + 40);
  uint64_t v27 = v25;
  while (1)
  {
    uint64_t v29 = *(v26 - 1);
    uint64_t v28 = *v26;
    swift_bridgeObjectRetain();
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v71 = v24;
    unint64_t v32 = sub_1A3C8C844(v29, v28);
    uint64_t v33 = v24[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
    }
    char v36 = v31;
    if (v24[3] < v35) {
      break;
    }
    if (v30)
    {
      long long v24 = (void *)v71;
      if ((v31 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_1A3D5765C();
      long long v24 = (void *)v71;
      if ((v36 & 1) == 0)
      {
LABEL_15:
        v24[(v32 >> 6) + 8] |= 1 << v32;
        CGFloat v39 = (uint64_t *)(v24[6] + 16 * v32);
        *CGFloat v39 = v29;
        v39[1] = v28;
        *(_DWORD *)(v24[7] + 4 * v32) = 1278226488;
        uint64_t v40 = v24[2];
        BOOL v41 = __OFADD__(v40, 1);
        uint64_t v42 = v40 + 1;
        if (v41) {
          goto LABEL_38;
        }
        _OWORD v24[2] = v42;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      }
    }
LABEL_6:
    *(_DWORD *)(v24[7] + 4 * v32) = 1278226488;
LABEL_7:
    v26 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v27)
    {
      uint64_t v20 = v68;
      swift_bridgeObjectRelease();
LABEL_20:
      uint64_t v43 = sub_1A409617C();
      uint64_t v45 = v44;
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE530);
      *(void *)&long long v71 = v24;
      sub_1A3C856F4(&v71, v70);
      char v46 = swift_isUniquelyReferenced_nonNull_native();
      sub_1A3C8D048(v70, v43, v45, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      CGFloat v47 = (void *)sub_1A3D53130(MEMORY[0x1E4FBC860]);
      if (!v25)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        uint64_t v63 = sub_1A409617C();
        uint64_t v65 = v64;
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE538);
        *(void *)&long long v71 = v47;
        sub_1A3C856F4(&v71, v70);
        char v66 = swift_isUniquelyReferenced_nonNull_native();
        sub_1A3C8D048(v70, v63, v65, v66);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      CGFloat v48 = (uint64_t *)(v20 + 40);
      while (1)
      {
        uint64_t v50 = *(v48 - 1);
        uint64_t v49 = *v48;
        swift_bridgeObjectRetain();
        char v51 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v71 = v47;
        unint64_t v53 = sub_1A3C8C844(v50, v49);
        uint64_t v54 = v47[2];
        BOOL v55 = (v52 & 1) == 0;
        uint64_t v56 = v54 + v55;
        if (__OFADD__(v54, v55)) {
          goto LABEL_37;
        }
        char v57 = v52;
        if (v47[3] >= v56)
        {
          if (v51)
          {
            CGFloat v47 = (void *)v71;
            if (v52) {
              goto LABEL_22;
            }
          }
          else
          {
            sub_1A3D574B0();
            CGFloat v47 = (void *)v71;
            if (v57) {
              goto LABEL_22;
            }
          }
        }
        else
        {
          sub_1A3D56E98(v56, v51);
          unint64_t v58 = sub_1A3C8C844(v50, v49);
          if ((v57 & 1) != (v59 & 1)) {
            goto LABEL_40;
          }
          unint64_t v53 = v58;
          CGFloat v47 = (void *)v71;
          if (v57)
          {
LABEL_22:
            *(unsigned char *)(v47[7] + v53) = 0;
            goto LABEL_23;
          }
        }
        v47[(v53 >> 6) + 8] |= 1 << v53;
        uint64_t v60 = (uint64_t *)(v47[6] + 16 * v53);
        *uint64_t v60 = v50;
        v60[1] = v49;
        *(unsigned char *)(v47[7] + v53) = 0;
        uint64_t v61 = v47[2];
        BOOL v41 = __OFADD__(v61, 1);
        uint64_t v62 = v61 + 1;
        if (v41) {
          goto LABEL_39;
        }
        v47[2] = v62;
        swift_bridgeObjectRetain();
LABEL_23:
        v48 += 2;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!--v25) {
          goto LABEL_35;
        }
      }
    }
  }
  sub_1A3D571A4(v35, v30);
  unint64_t v37 = sub_1A3C8C844(v29, v28);
  if ((v36 & 1) == (v38 & 1))
  {
    unint64_t v32 = v37;
    long long v24 = (void *)v71;
    if ((v36 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_6;
  }
LABEL_40:
  uint64_t v67 = (os_unfair_lock_s *)sub_1A4096EBC();
  __break(1u);
  os_unfair_lock_unlock(v67);
  __break(1u);
}

void sub_1A3D55E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v143 = a1;
  uint64_t v156 = *MEMORY[0x1E4F143B8];
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4A0);
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  char v139 = (void *)((char *)v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE4F8);
  MEMORY[0x1F4188790](v9 - 8);
  id v140 = (char *)v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for PixelBufferObservation();
  MEMORY[0x1F4188790](v136);
  uint64_t v137 = (uint64_t)v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v138 = (uint64_t)v133 - v13;
  uint64_t v14 = sub_1A409617C();
  uint64_t v16 = v15;
  id v17 = *(uint64_t (**)(void))(*(void *)a2 + 184);
  uint64_t v150 = a2;
  uint64_t v18 = v17();
  uint64_t v19 = *(void *)(v18 + 16);
  v149 = @"VNSegmentationGeneratorProcessOption_OutputPixelFormat";
  if (!v19 || (unint64_t v20 = sub_1A3C8C844(v14, v16), (v21 & 1) == 0))
  {
    long long v154 = 0u;
    long long v155 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1A3C8D3F0(*(void *)(v18 + 56) + 32 * v20, (uint64_t)&v154);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v155 + 1))
  {
LABEL_7:
    sub_1A3CA2EB8((uint64_t)&v154, (uint64_t *)&unk_1E95EF700);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC7A8);
  if (!swift_dynamicCast())
  {
LABEL_8:
    unint64_t v22 = sub_1A3C9DA4C(MEMORY[0x1E4FBC860]);
    goto LABEL_9;
  }
  unint64_t v22 = *(void *)&v153[0];
LABEL_9:
  v148 = @"VNSegmentationGeneratorProcessOption_KeepRawOutputMask";
  uint64_t v23 = sub_1A409617C();
  uint64_t v25 = v24;
  uint64_t v26 = v17();
  if (*(void *)(v26 + 16) && (unint64_t v27 = sub_1A3C8C844(v23, v25), (v28 & 1) != 0))
  {
    sub_1A3C8D3F0(*(void *)(v26 + 56) + 32 * v27, (uint64_t)&v154);
  }
  else
  {
    long long v154 = 0u;
    long long v155 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v155 + 1))
  {
    sub_1A3CA2EB8((uint64_t)&v154, (uint64_t *)&unk_1E95EF700);
    goto LABEL_17;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC7A8);
  if (!swift_dynamicCast())
  {
LABEL_17:
    unint64_t v29 = sub_1A3C9DA4C(MEMORY[0x1E4FBC860]);
    goto LABEL_18;
  }
  unint64_t v29 = *(void *)&v153[0];
LABEL_18:
  char v30 = *(os_unfair_lock_s **)(a3 + 40);
  char v31 = v30 + 4;
  unint64_t v32 = v30 + 20;
  os_unfair_lock_lock(v30 + 20);
  sub_1A3CFFD5C(v31, &v152);
  if (!v4)
  {
    os_unfair_lock_unlock(v32);
    if (!v152)
    {
      uint64_t v46 = sub_1A409617C();
      uint64_t v48 = v47;
      os_unfair_lock_lock(v32);
      v147 = v31;
      sub_1A3D00018((uint64_t)v31, &v154);
      uint64_t v146 = 0;
      os_unfair_lock_unlock(v32);
      *((void *)&v155 + 1) = MEMORY[0x1E4FBC4C0];
      sub_1A3C856F4(&v154, v153);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v151 = v22;
      sub_1A3C8D048(v153, v46, v48, isUniquelyReferenced_nonNull_native);
      unint64_t v145 = v151;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v50 = sub_1A409617C();
      uint64_t v52 = v51;
      *((void *)&v155 + 1) = MEMORY[0x1E4FBB390];
      LOBYTE(v154) = 0;
      sub_1A3C856F4(&v154, v153);
      char v53 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v151 = v29;
      sub_1A3C8D048(v153, v50, v52, v53);
      unint64_t v144 = v151;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      uint64_t v45 = v150;
      goto LABEL_25;
    }
    if (v152 == 1)
    {
      v147 = v31;
      uint64_t v33 = self;
      *(void *)&long long v154 = 0;
      id v34 = objc_msgSend(v33, sel_objectClassOutputNameForObjectClassID_modelVersion_error_, 1, 1, &v154);
      uint64_t v35 = (void *)v154;
      if (!v34)
      {
        id v81 = (id)v154;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A4095AEC();

        swift_willThrow();
        return;
      }
      char v36 = v34;
      uint64_t v37 = sub_1A409617C();
      uint64_t v39 = v38;
      id v40 = v35;

      swift_bridgeObjectRetain();
      os_unfair_lock_lock(v32);
      uint64_t v41 = (uint64_t)v147;
      sub_1A3D00018((uint64_t)v147, &v154);
      os_unfair_lock_unlock(v32);
      *((void *)&v155 + 1) = MEMORY[0x1E4FBC4C0];
      sub_1A3C856F4(&v154, v153);
      char v42 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v151 = v22;
      sub_1A3C8D048(v153, v37, v39, v42);
      unint64_t v43 = v151;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_unfair_lock_lock(v32);
      sub_1A3D52AB8(v41, &v154);
      uint64_t v146 = 0;
      os_unfair_lock_unlock(v32);
      *((void *)&v155 + 1) = MEMORY[0x1E4FBB390];
      sub_1A3C856F4(&v154, v153);
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v151 = v29;
      sub_1A3C8D048(v153, v37, v39, v44);
      unint64_t v144 = v151;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v45 = v150;
      unint64_t v145 = v43;
      goto LABEL_25;
    }
    uint64_t v80 = (void *)(*(uint64_t (**)(void))(**(void **)(a4 + 16) + 120))();
    __int16 v82 = v80;
    id v83 = objc_msgSend(v80, sel_width);
    uint64_t v146 = 0;
    id v84 = v83;
    id v85 = objc_msgSend(v82, sel_height);
    BOOL v86 = (uint64_t)v85 < (uint64_t)v84;
    uint64_t v87 = (uint64_t)v85 >= (uint64_t)v84 ? 0x7469617274726F70 : 0x70616373646E616CLL;
    unint64_t v88 = v86 ? 0xE900000000000065 : 0xE800000000000000;
    uint64_t v89 = (uint64_t)v31;
    uint64_t v90 = sub_1A409617C();
    uint64_t v92 = v91;
    *((void *)&v155 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v154 = v87;
    *((void *)&v154 + 1) = v88;
    uint64_t v93 = *(uint64_t (**)(_OWORD *))(*(void *)v150 + 200);
    uint64_t v94 = *(void *)v150 + 200;
    id v135 = v82;
    uint64_t v134 = v93;
    v133[1] = v94;
    uint64_t v95 = (void (*)(_OWORD *, void))v93(v153);
    sub_1A3C8BC40((uint64_t)&v154, v90, v92);
    v95(v153, 0);
    uint64_t v96 = sub_1A409617C();
    uint64_t v98 = v97;
    os_unfair_lock_lock(v32);
    v147 = (unsigned char *)v89;
    uint64_t v99 = v146;
    sub_1A3D00018(v89, &v154);
    if (!v99)
    {
      os_unfair_lock_unlock(v32);
      *((void *)&v155 + 1) = MEMORY[0x1E4FBC4C0];
      sub_1A3C856F4(&v154, v153);
      char v100 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v151 = v22;
      sub_1A3C8D048(v153, v96, v98, v100);
      unint64_t v101 = v151;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v102 = sub_1A409617C();
      uint64_t v104 = v103;
      *((void *)&v155 + 1) = MEMORY[0x1E4FBB390];
      LOBYTE(v154) = 0;
      sub_1A3C856F4(&v154, v153);
      char v105 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v151 = v29;
      sub_1A3C8D048(v153, v102, v104, v105);
      unint64_t v106 = v151;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v107 = v135;
      id v108 = objc_msgSend(v135, sel_height);
      id v109 = objc_msgSend(v107, sel_width);
      uint64_t v110 = v143;
      uint64_t v111 = (uint64_t)v140;
      (*(void (**)(void))(*(void *)v143 + 160))();
      int v112 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v111, 1, v142);
      uint64_t v146 = 0;
      unint64_t v145 = v101;
      unint64_t v144 = v106;
      if (v112)
      {
        sub_1A3CA2EB8(v111, &qword_1E95EE4F8);

        goto LABEL_24;
      }
      uint64_t v113 = v139;
      sub_1A3CCB91C(v111, (uint64_t)v139, &qword_1E95EE4A0);
      sub_1A3CA2EB8(v111, &qword_1E95EE4F8);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v45 = v150;
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)&long long v154 = *v113;
        uint64_t v115 = (void *)v154;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFEF0);
        swift_willThrowTypedImpl();

        goto LABEL_25;
      }
      uint64_t v116 = v137;
      sub_1A3D54040((uint64_t)v113, v137);
      uint64_t v117 = v138;
      uint64_t v118 = sub_1A3D54040(v116, v138);
      uint64_t v119 = (*(uint64_t (**)(uint64_t))(*(void *)v110 + 112))(v118);
      if ((v120 & 1) != 0
        || (id)v119 != v109
        || (uint64_t v121 = (*(uint64_t (**)(void))(*(void *)v110 + 136))(), (v122 & 1) != 0)
        || (id)v121 != v108)
      {
LABEL_46:

        sub_1A3D540A4(v117, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
LABEL_25:
        uint64_t v54 = sub_1A409617C();
        uint64_t v56 = v55;
        *((void *)&v155 + 1) = MEMORY[0x1E4FBB808];
        *(void *)&long long v154 = 0x1FFFLL;
        char v57 = *(uint64_t (**)(_OWORD *))(*(void *)v45 + 200);
        unint64_t v58 = (void (*)(_OWORD *, void))v57(v153);
        sub_1A3C8BC40((uint64_t)&v154, v54, v56);
        v58(v153, 0);
        uint64_t v59 = sub_1A409617C();
        uint64_t v61 = v60;
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC7A8);
        *((void *)&v155 + 1) = v62;
        *(void *)&long long v154 = v145;
        uint64_t v63 = (void (*)(_OWORD *, void))v57(v153);
        sub_1A3C8BC40((uint64_t)&v154, v59, v61);
        v63(v153, 0);
        uint64_t v64 = sub_1A409617C();
        uint64_t v66 = v65;
        os_unfair_lock_lock(v32);
        uint64_t v67 = v146;
        sub_1A3D52D60((uint64_t)v147, (float *)&v154);
        uint64_t v146 = v67;
        if (!v67)
        {
          os_unfair_lock_unlock(v32);
          *((void *)&v155 + 1) = MEMORY[0x1E4FBB470];
          uint64_t v68 = (void (*)(_OWORD *, void))v57(v153);
          sub_1A3C8BC40((uint64_t)&v154, v64, v66);
          v68(v153, 0);
          uint64_t v69 = sub_1A409617C();
          uint64_t v71 = v70;
          *((void *)&v155 + 1) = v62;
          *(void *)&long long v154 = v144;
          uint64_t v72 = (void (*)(_OWORD *, void))v57(v153);
          sub_1A3C8BC40((uint64_t)&v154, v69, v71);
          v72(v153, 0);
          uint64_t v73 = sub_1A409617C();
          uint64_t v75 = v74;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC7B0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
          *(void *)(inited + 32) = sub_1A409617C();
          *(void *)(inited + 40) = v77;
          *(_WORD *)(inited + 48) = 176;
          unint64_t v78 = sub_1A3CA3ADC(inited);
          *((void *)&v155 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC7B8);
          *(void *)&long long v154 = v78;
          uint64_t v79 = (void (*)(_OWORD *, void))v57(v153);
          sub_1A3C8BC40((uint64_t)&v154, v73, v75);
          v79(v153, 0);
          return;
        }
        goto LABEL_48;
      }
      LOWORD(v154) = 176;
      id v123 = sub_1A3DBF9C8();
      if (v123)
      {
        char v124 = v123;
        id v125 = objc_msgSend(objc_allocWithZone((Class)VNPixelBufferObservation), sel_initWithOriginatingRequestSpecifier_featureName_CVPixelBuffer_, v123, 0, *(void *)(v117 + *(int *)(v136 + 32)));

        uint64_t v126 = sub_1A409617C();
        uint64_t v128 = v127;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE500);
        uint64_t v129 = swift_allocObject();
        *(_OWORD *)(v129 + 16) = xmmword_1A40E7700;
        *(void *)(v129 + 32) = v125;
        *(void *)&long long v154 = v129;
        sub_1A409632C();
        uint64_t v130 = v154;
        *((void *)&v155 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE508);
        *(void *)&long long v154 = v130;
        id v131 = v125;
        v132 = (void (*)(_OWORD *, void))v134(v153);
        sub_1A3C8BC40((uint64_t)&v154, v126, v128);
        v132(v153, 0);

        goto LABEL_46;
      }
      __break(1u);
    }
  }
LABEL_48:
  os_unfair_lock_unlock(v32);
  __break(1u);
}

void sub_1A3D56D90(uint64_t a1)
{
}

uint64_t sub_1A3D56DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  _OWORD v8[2] = a1;
  void v8[3] = v5;
  v8[4] = a2;
  uint64_t v6 = sub_1A3D545B0(&qword_1E95EE510, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
  return sub_1A3C8DBDC((uint64_t)sub_1A3D587E8, (uint64_t)v8, a3, MEMORY[0x1E4FBC848] + 8, v6, MEMORY[0x1E4FBC848]);
}

id sub_1A3D56E5C(uint64_t a1, uint64_t a2)
{
  return sub_1A3D53D48(a1, a2);
}

void sub_1A3D56E74(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1A3D56E98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE5B8);
  char v37 = a2;
  uint64_t v6 = sub_1A4096C1C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A4096F2C();
    sub_1A40961CC();
    uint64_t result = sub_1A4096F7C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A3D571A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDC70);
  char v37 = a2;
  uint64_t v6 = sub_1A4096C1C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    int v32 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A4096F2C();
    sub_1A40961CC();
    uint64_t result = sub_1A4096F7C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1A3D574B0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE5B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *unint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A3D5765C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EDC70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 4 * v15;
    LODWORD(v17) = *(_DWORD *)(*(void *)(v2 + 56) + v20);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    *(_DWORD *)(*(void *)(v4 + 56) + v20) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1A3D5780C(uint64_t a1)
{
  sub_1A3D55E68(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1A3D57830()
{
  unint64_t result = qword_1E95EE540;
  if (!qword_1E95EE540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE540);
  }
  return result;
}

unint64_t sub_1A3D57888()
{
  unint64_t result = qword_1E95EE548;
  if (!qword_1E95EE548)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE548);
  }
  return result;
}

unint64_t sub_1A3D578E8()
{
  unint64_t result = qword_1E95EE558;
  if (!qword_1E95EE558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE558);
  }
  return result;
}

uint64_t sub_1A3D5793C(uint64_t a1)
{
  uint64_t result = sub_1A3D545B0(&qword_1E95ECE48, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3D57994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3D57A60(a1, a2, a3, &qword_1E95ECFD8, (uint64_t)&protocol conformance descriptor for GeneratePersonSegmentationRequest, &qword_1E95EE518);
}

uint64_t sub_1A3D579D0()
{
  return sub_1A3D545B0(&qword_1E95EE590, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
}

_UNKNOWN **sub_1A3D57A18()
{
  return &off_1EC3819E0;
}

uint64_t sub_1A3D57A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3D57A60(a1, a2, a3, &qword_1E95EE4B0, (uint64_t)&unk_1A40F35D0, &qword_1E95EE598);
}

uint64_t sub_1A3D57A60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  *(void *)(a1 + 8) = sub_1A3D545B0(a4, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
  uint64_t result = sub_1A3D545B0(a6, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D57AD0()
{
  unint64_t result = qword_1E95EE5A0;
  if (!qword_1E95EE5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE5A0);
  }
  return result;
}

uint64_t sub_1A3D57B24()
{
  return sub_1A3D545B0(&qword_1E95EE5A8, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
}

uint64_t sub_1A3D57B6C(uint64_t a1)
{
  uint64_t result = sub_1A3D545B0(&qword_1E95EE4B0, (void (*)(uint64_t))type metadata accessor for GeneratePersonSegmentationRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3D57BC4()
{
  return type metadata accessor for GeneratePersonSegmentationRequest(0);
}

uint64_t sub_1A3D57BCC()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for GeneratePersonSegmentationRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GeneratePersonSegmentationRequest);
}

uint64_t dispatch thunk of GeneratePersonSegmentationRequest.__allocating_init(_:frameAnalysisSpacing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5 + 120))(a1, a2, a3, a4, a5 & 1);
}

ValueMetadata *type metadata accessor for GeneratePersonSegmentationRequest.Revision()
{
  return &type metadata for GeneratePersonSegmentationRequest.Revision;
}

ValueMetadata *type metadata accessor for GeneratePersonSegmentationRequest.QualityLevel()
{
  return &type metadata for GeneratePersonSegmentationRequest.QualityLevel;
}

uint64_t initializeWithCopy for GeneratePersonSegmentationRequest.Configuration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GeneratePersonSegmentationRequest.Configuration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  return a1;
}

uint64_t assignWithTake for GeneratePersonSegmentationRequest.Configuration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  return a1;
}

ValueMetadata *type metadata accessor for GeneratePersonSegmentationRequest.Configuration()
{
  return &type metadata for GeneratePersonSegmentationRequest.Configuration;
}

uint64_t sub_1A3D57E68()
{
  return type metadata accessor for GeneratePersonSegmentationRequest.State(0);
}

void sub_1A3D57E70()
{
  sub_1A3D57F14();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1A3D57F14()
{
  if (!qword_1E95EE5B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EE4A0);
    unint64_t v0 = sub_1A409692C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E95EE5B0);
    }
  }
}

unsigned char *_s6Vision33GeneratePersonSegmentationRequestC12QualityLevelOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D5803CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeneratePersonSegmentationRequest.QualityLevel.CodingKeys()
{
  return &type metadata for GeneratePersonSegmentationRequest.QualityLevel.CodingKeys;
}

ValueMetadata *type metadata accessor for GeneratePersonSegmentationRequest.QualityLevel.AccurateCodingKeys()
{
  return &type metadata for GeneratePersonSegmentationRequest.QualityLevel.AccurateCodingKeys;
}

ValueMetadata *type metadata accessor for GeneratePersonSegmentationRequest.QualityLevel.BalancedCodingKeys()
{
  return &type metadata for GeneratePersonSegmentationRequest.QualityLevel.BalancedCodingKeys;
}

ValueMetadata *type metadata accessor for GeneratePersonSegmentationRequest.QualityLevel.FastCodingKeys()
{
  return &type metadata for GeneratePersonSegmentationRequest.QualityLevel.FastCodingKeys;
}

unsigned char *_s6Vision33GeneratePersonSegmentationRequestC8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D58140);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeneratePersonSegmentationRequest.Revision.CodingKeys()
{
  return &type metadata for GeneratePersonSegmentationRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for GeneratePersonSegmentationRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for GeneratePersonSegmentationRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3D5818C()
{
  unint64_t result = qword_1E960F1F0[0];
  if (!qword_1E960F1F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960F1F0);
  }
  return result;
}

unint64_t sub_1A3D581E4()
{
  unint64_t result = qword_1E960F700[0];
  if (!qword_1E960F700[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960F700);
  }
  return result;
}

unint64_t sub_1A3D5823C()
{
  unint64_t result = qword_1E960F810;
  if (!qword_1E960F810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960F810);
  }
  return result;
}

unint64_t sub_1A3D58294()
{
  unint64_t result = qword_1E960F818[0];
  if (!qword_1E960F818[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960F818);
  }
  return result;
}

unint64_t sub_1A3D582EC()
{
  unint64_t result = qword_1E960F8A0;
  if (!qword_1E960F8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960F8A0);
  }
  return result;
}

unint64_t sub_1A3D58344()
{
  unint64_t result = qword_1E960F8A8[0];
  if (!qword_1E960F8A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960F8A8);
  }
  return result;
}

unint64_t sub_1A3D5839C()
{
  unint64_t result = qword_1E960F930;
  if (!qword_1E960F930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960F930);
  }
  return result;
}

unint64_t sub_1A3D583F4()
{
  unint64_t result = qword_1E960F938[0];
  if (!qword_1E960F938[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960F938);
  }
  return result;
}

unint64_t sub_1A3D5844C()
{
  unint64_t result = qword_1E960F9C0;
  if (!qword_1E960F9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960F9C0);
  }
  return result;
}

unint64_t sub_1A3D584A4()
{
  unint64_t result = qword_1E960F9C8[0];
  if (!qword_1E960F9C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960F9C8);
  }
  return result;
}

unint64_t sub_1A3D584FC()
{
  unint64_t result = qword_1E960FA50;
  if (!qword_1E960FA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960FA50);
  }
  return result;
}

unint64_t sub_1A3D58554()
{
  unint64_t result = qword_1E960FA58[0];
  if (!qword_1E960FA58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960FA58);
  }
  return result;
}

unint64_t sub_1A3D585AC()
{
  unint64_t result = qword_1E960FAE0;
  if (!qword_1E960FAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E960FAE0);
  }
  return result;
}

unint64_t sub_1A3D58604()
{
  unint64_t result = qword_1E960FAE8[0];
  if (!qword_1E960FAE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960FAE8);
  }
  return result;
}

uint64_t sub_1A3D58658(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574617275636361 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465636E616C6162 && a2 == 0xE800000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953718630 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

float sub_1A3D587A0(uint64_t a1)
{
  return sub_1A3D53B38(a1);
}

uint64_t sub_1A3D587B8(uint64_t a1)
{
  return sub_1A3D53B20(a1);
}

uint64_t sub_1A3D587D0(uint64_t a1)
{
  return sub_1A3D53B2C(a1);
}

void sub_1A3D587E8(uint64_t a1)
{
}

double PixelBufferObservation.size.getter()
{
  uint64_t v1 = *(__CVBuffer **)(v0 + *(int *)(type metadata accessor for PixelBufferObservation() + 32));
  int64_t Width = CVPixelBufferGetWidth(v1);
  CVPixelBufferGetHeight(v1);
  return (double)Width;
}

uint64_t type metadata accessor for PixelBufferObservation()
{
  uint64_t result = qword_1E960FF70;
  if (!qword_1E960FF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PixelBufferObservation.pixelFormat.getter()
{
  uint64_t v1 = *(__CVBuffer **)(v0 + *(int *)(type metadata accessor for PixelBufferObservation() + 32));

  return CVPixelBufferGetPixelFormatType(v1);
}

id PixelBufferObservation.cgImage.getter()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E050]), sel_initWithCVImageBuffer_, *(void *)(v0 + *(int *)(type metadata accessor for PixelBufferObservation() + 32)));
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E018]), sel_init);
  objc_msgSend(v1, sel_extent);
  id v3 = objc_msgSend(v2, sel_createCGImage_fromRect_, v1);

  if (!v3)
  {
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v4 = 0xD00000000000001DLL;
    *(void *)(v4 + 8) = 0x80000001A40B5960;
    *(_DWORD *)(v4 + 16) = 0;
    *(unsigned char *)(v4 + 20) = 8;
    swift_willThrow();
  }

  return v3;
}

uint64_t PixelBufferObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A4095C7C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

float PixelBufferObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PixelBufferObservation() + 20));
}

__n128 PixelBufferObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PixelBufferObservation() + 24);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t PixelBufferObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v1 = type metadata accessor for PixelBufferObservation();
  id v2 = *(__CVBuffer **)(v0 + *(int *)(v1 + 32));
  CVPixelBufferGetWidth(v2);
  CVPixelBufferGetHeight(v2);
  sub_1A40965CC();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  CVPixelBufferGetWidth(v2);
  CVPixelBufferGetHeight(v2);
  sub_1A40965CC();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  CVPixelBufferGetPixelFormatType(v2);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v3 = sub_1A3D5A550(qword_1E95EC578, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  sub_1A3D8AC8C(v1, (uint64_t)&off_1EF749258, v3);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

uint64_t PixelBufferObservation.withUnsafePointer<A>(_:)(void (*a1)(void))
{
  uint64_t v3 = *(__CVBuffer **)(v1 + *(int *)(type metadata accessor for PixelBufferObservation() + 32));
  CVPixelBufferLockBaseAddress(v3, 1uLL);
  if (CVPixelBufferGetBaseAddress(v3))
  {
    a1();
    return CVPixelBufferUnlockBaseAddress(v3, 1uLL);
  }
  else
  {
    uint64_t result = sub_1A4096BEC();
    __break(1u);
  }
  return result;
}

Swift::Float __swiftcall PixelBufferObservation.pixel(at:)(Vision::NormalizedPoint at)
{
  uint64_t v3 = v2;
  char v4 = v1;
  uint64_t v5 = type metadata accessor for PixelBufferObservation();
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (__CVBuffer *)&v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v44[-v9];
  MEMORY[0x1F4188790](v11);
  int64_t v13 = &v44[-v12];
  long long v47 = *v4;
  uint64_t v15 = *(int *)(v14 + 32);
  uint64_t v16 = *(__CVBuffer **)(v3 + v15);
  int64_t Width = CVPixelBufferGetWidth(v16);
  *(double *)&unint64_t v18 = (double)(uint64_t)CVPixelBufferGetHeight(v16);
  sub_1A3C7E530(&v46);
  char v45 = v46;
  CGPoint v19 = NormalizedPoint.toImageCoordinates(_:origin:)((CGSize)__PAIR128__(v18, (double)Width), (Vision::CoordinateOrigin)&v45);
  double v20 = round(v19.x);
  if ((~*(void *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  double v21 = round(v19.y);
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v22 = (uint64_t)v20;
  sub_1A3CC1F84(v3, (uint64_t)v13);
  sub_1A3CC1F84((uint64_t)v13, (uint64_t)v10);
  if (v22 < 0) {
    goto LABEL_45;
  }
  uint64_t v23 = (uint64_t)v21;
  if ((uint64_t)v21 < 0) {
    goto LABEL_45;
  }
  int64_t v24 = *(__CVBuffer **)&v10[*(int *)(v5 + 32)];
  int64_t v25 = CVPixelBufferGetWidth(v24);
  CVPixelBufferGetHeight(v24);
  double v26 = (double)v25;
  sub_1A3D59284((uint64_t)v10);
  if ((~COERCE__INT64((double)v25) & 0x7FF0000000000000) == 0) {
    goto LABEL_34;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v26 >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_1A3CC1F84((uint64_t)v13, (uint64_t)v7);
  if (v22 >= (uint64_t)v26)
  {
LABEL_46:
    sub_1A3D59284((uint64_t)v7);
    sub_1A3D59284((uint64_t)v13);
    goto LABEL_47;
  }
  BOOL v27 = *(__CVBuffer **)((char *)v7 + *(int *)(v5 + 32));
  CVPixelBufferGetWidth(v27);
  double Height = (double)(uint64_t)CVPixelBufferGetHeight(v27);
  sub_1A3D59284((uint64_t)v7);
  sub_1A3D59284((uint64_t)v13);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0) {
    goto LABEL_37;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (Height >= 9.22337204e18)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v23 >= (uint64_t)Height)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  unint64_t v7 = *(__CVBuffer **)(v3 + v15);
  int64_t v29 = CVPixelBufferGetWidth(v7);
  CVPixelBufferGetHeight(v7);
  double v30 = (double)v29;
  if ((~COERCE__INT64((double)v29) & 0x7FF0000000000000) == 0) {
    goto LABEL_40;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v31 = v23 * (uint64_t)v30;
  if ((unsigned __int128)(v23 * (__int128)(uint64_t)v30) >> 64 != v31 >> 63)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v32 = v22 + v31;
  if (__OFADD__(v22, v31))
  {
LABEL_44:
    __break(1u);
LABEL_45:
    sub_1A3D59284((uint64_t)v10);
    sub_1A3CC1F84((uint64_t)v13, (uint64_t)v7);
    goto LABEL_46;
  }
  OSType PixelFormatType = CVPixelBufferGetPixelFormatType(v7);
  switch(PixelFormatType)
  {
    case 0x4C303038u:
      uint64_t v36 = sub_1A3D5A550(&qword_1E95ECCE0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
      sub_1A3DB277C(v32, v5, MEMORY[0x1E4FBC358], v36, (uint64_t)&v47);
      LOBYTE(v37) = v47;
      return (float)v37;
    case 0x4C303066u:
      uint64_t v34 = sub_1A3D5A550(&qword_1E95ECCE0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
      sub_1A3DB277C(v32, v5, MEMORY[0x1E4FBB470], v34, (uint64_t)&v47);
      return *(float *)&v47;
    case 0x4C303068u:
      uint64_t v38 = sub_1A3D5A550(&qword_1E95ECCE0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
      sub_1A3DB277C(v32, v5, MEMORY[0x1E4FBC5E0], v38, (uint64_t)&v47);
      _H0 = v47;
      __asm { FCVT            S0, H0 }
      return result;
  }
LABEL_48:
  sub_1A4096BEC();
  __break(1u);
  return result;
}

uint64_t sub_1A3D59284(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PixelBufferObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PixelBufferObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for PixelBufferObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t sub_1A3D59318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  __int16 v11 = *a3;
  uint64_t v12 = (int *)type metadata accessor for PixelBufferObservation();
  *(void *)(a5 + v12[8]) = a4;
  uint64_t v13 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a5, a1, v13);
  *(float *)(a5 + v12[5]) = a6;
  uint64_t result = sub_1A3C7D648(a2, a5 + v12[6]);
  *(_WORD *)(a5 + v12[7]) = v11;
  return result;
}

uint64_t PixelBufferObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

id sub_1A3D5945C(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 32));
}

double sub_1A3D59468(uint64_t a1)
{
  uint64_t v2 = *(__CVBuffer **)(v1 + *(int *)(a1 + 32));
  int64_t Width = CVPixelBufferGetWidth(v2);
  CVPixelBufferGetHeight(v2);
  return (double)Width;
}

uint64_t sub_1A3D594A8(uint64_t a1)
{
  return CVPixelBufferGetPixelFormatType(*(CVPixelBufferRef *)(v1 + *(int *)(a1 + 32)));
}

uint64_t sub_1A3D594B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X3>, int *a5@<X4>, uint64_t a6@<X8>, float a7@<S0>)
{
  __int16 v12 = *a3;
  *(void *)(a6 + a5[8]) = a4;
  uint64_t v13 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a6, a1, v13);
  uint64_t v14 = a5[6];
  *(float *)(a6 + a5[5]) = a7;
  uint64_t result = sub_1A3C7D648(a2, a6 + v14);
  *(_WORD *)(a6 + a5[7]) = v12;
  return result;
}

uint64_t sub_1A3D59560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D5A550(qword_1E95EC578, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

void *sub_1A3D595E0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A3D5A550(&qword_1E95ECCE0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  return sub_1A3DB2CDC(a1, a2, v6, a3);
}

void sub_1A3D59660(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_1A3D5A550(&qword_1E95ECCE0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  sub_1A3DB28E0(a1, a2, v4);
}

uint64_t sub_1A3D596DC@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  __int16 v7 = *a2;
  id v8 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v10 = v9;
  id v11 = objc_msgSend(a1, sel_pixelBuffer);

  __int16 v12 = (int *)type metadata accessor for PixelBufferObservation();
  *(void *)(a4 + v12[8]) = v11;
  *(_DWORD *)(a4 + v12[5]) = v10;
  uint64_t result = sub_1A3C7D648(a3, a4 + v12[6]);
  *(_WORD *)(a4 + v12[7]) = v7;
  return result;
}

uint64_t PixelBufferObservation.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_pixelBuffer);
  CVPixelBufferRef v5 = sub_1A3CAB15C();

  id v6 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v8 = v7;
  objc_msgSend(a1, sel_timeRange);

  int v9 = (int *)type metadata accessor for PixelBufferObservation();
  *(void *)(a2 + v9[8]) = v5;
  *(_DWORD *)(a2 + v9[5]) = v8;
  uint64_t v10 = a2 + v9[6];
  *(_OWORD *)uint64_t v10 = v13;
  *(_OWORD *)(v10 + 16) = v14;
  *(void *)(v10 + 32) = v15;
  *(void *)(v10 + 40) = v16;
  *(unsigned char *)(v10 + 48) = 0;
  *(_WORD *)(a2 + v9[7]) = -8;
  id v11 = *(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v9 - 1) + 56);

  return v11(a2, 0, 1, v9);
}

uint64_t sub_1A3D5994C@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, int *a4@<X4>, uint64_t a5@<X8>)
{
  __int16 v9 = *a2;
  id v10 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v12 = v11;
  id v13 = objc_msgSend(a1, sel_pixelBuffer);

  *(void *)(a5 + a4[8]) = v13;
  uint64_t v14 = a4[6];
  *(_DWORD *)(a5 + a4[5]) = v12;
  uint64_t result = sub_1A3C7D648(a3, a5 + v14);
  *(_WORD *)(a5 + a4[7]) = v9;
  return result;
}

id _s6Vision22PixelBufferObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x1F4188790](v8);
  int v11 = (char *)v33 - v10;
  int v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12((char *)v33 - v10, a1, v4, v9);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v7, a2, v4);
  sub_1A3D5A550(&qword_1E95EE5E0, MEMORY[0x1E4F27990]);
  char v13 = sub_1A409612C();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  v14(v11, v4);
  if ((v13 & 1) == 0) {
    return 0;
  }
  uint64_t v15 = (int *)type metadata accessor for PixelBufferObservation();
  uint64_t v16 = v15[6];
  uint64_t v17 = (uint64_t *)(a1 + v16);
  char v18 = *(unsigned char *)(a1 + v16 + 48);
  CGPoint v19 = (uint64_t *)(a2 + v16);
  if (v18)
  {
    if (!*((unsigned char *)v19 + 48)) {
      return 0;
    }
  }
  else
  {
    if (v19[6]) {
      return 0;
    }
    uint64_t v20 = *v17;
    uint64_t v21 = v17[1];
    long long v22 = *((_OWORD *)v17 + 1);
    uint64_t v23 = v17[4];
    uint64_t v24 = *v19;
    uint64_t v25 = v19[1];
    long long v26 = *((_OWORD *)v19 + 1);
    uint64_t v28 = v19[4];
    uint64_t v27 = v19[5];
    uint64_t v38 = v17[5];
    uint64_t v39 = v24;
    uint64_t v40 = v25;
    long long v41 = v26;
    uint64_t v42 = v28;
    uint64_t v43 = v27;
    uint64_t v34 = v20;
    uint64_t v35 = v21;
    long long v36 = v22;
    uint64_t v37 = v23;
    if ((sub_1A409669C() & 1) == 0) {
      return 0;
    }
  }
  if (*(float *)(a1 + v15[5]) == *(float *)(a2 + v15[5]))
  {
    uint64_t v29 = v15[7];
    unsigned int v30 = *(unsigned __int16 *)(a1 + v29);
    unsigned int v31 = *(unsigned __int16 *)(a2 + v29);
    if (v30 <= 0xFFF7)
    {
      v33[7] = v30;
      if (v31 > 0xFFF7) {
        return 0;
      }
      v33[6] = v31 & 0x1FF;
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
      return objc_msgSend(self, sel_isCVPixelBuffer_equalToCVPixelBuffer_, *(void *)(a1 + v15[8]), *(void *)(a2 + v15[8]));
    }
    if (v31 > 0xFFF7) {
      return objc_msgSend(self, sel_isCVPixelBuffer_equalToCVPixelBuffer_, *(void *)(a1 + v15[8]), *(void *)(a2 + v15[8]));
    }
  }
  return 0;
}

uint64_t sub_1A3D59CCC(void *a1)
{
  a1[1] = sub_1A3D5A550(&qword_1E95ECCD0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  a1[2] = sub_1A3D5A550(&qword_1E95EE5D0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  a1[3] = sub_1A3D5A550(&qword_1E95EE5D8, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  uint64_t result = sub_1A3D5A550(&qword_1E95EE5C8, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3D59DA0(uint64_t a1)
{
  uint64_t result = sub_1A3D5A550(qword_1E95EC578, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A3D59DF8()
{
  return sub_1A3D5A550(&qword_1E95ED198, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
}

uint64_t sub_1A3D59E40(uint64_t a1)
{
  uint64_t result = sub_1A3D5A550(qword_1E95EC578, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PixelBufferObservation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A4095C7C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    __n128 v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)__n128 v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    v9[48] = v10[48];
    uint64_t v12 = a3[8];
    *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
    char v13 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
    id v14 = v13;
  }
  return a1;
}

void destroy for PixelBufferObservation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 32));
}

uint64_t initializeWithCopy for PixelBufferObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v11 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  uint64_t v12 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v12;
  id v13 = v12;
  return a1;
}

uint64_t assignWithCopy for PixelBufferObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 48);
  long long v12 = *(_OWORD *)(v9 + 16);
  long long v11 = *(_OWORD *)(v9 + 32);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v12;
  *(_OWORD *)(v8 + 32) = v11;
  *(unsigned char *)(v8 + 48) = v10;
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  uint64_t v13 = a3[8];
  id v14 = *(void **)(a2 + v13);
  uint64_t v15 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = v14;
  id v16 = v14;

  return a1;
}

uint64_t initializeWithTake for PixelBufferObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v11 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for PixelBufferObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v11 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  long long v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  return a1;
}

uint64_t getEnumTagSinglePayload for PixelBufferObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D5A304);
}

uint64_t sub_1A3D5A304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PixelBufferObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D5A3D8);
}

uint64_t sub_1A3D5A3D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095C7C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A3D5A494()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A3D5A550(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SaliencyImageObservation.salientObjects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SaliencyImageObservation.heatMap.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SaliencyImageObservation();
  return sub_1A3D5D1CC(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
}

uint64_t type metadata accessor for SaliencyImageObservation()
{
  uint64_t result = qword_1E9610310;
  if (!qword_1E9610310) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SaliencyImageObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaliencyImageObservation() + 24);
  uint64_t v4 = sub_1A4095C7C();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

float SaliencyImageObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for SaliencyImageObservation() + 28));
}

__n128 SaliencyImageObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaliencyImageObservation() + 32);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t SaliencyImageObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v0 = type metadata accessor for SaliencyImageObservation();
  type metadata accessor for PixelBufferObservation();
  sub_1A3D5D234(&qword_1E95ECCD0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v1 = sub_1A3D5D234(&qword_1E95EE5E8, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);
  sub_1A3D8AC8C(v0, (uint64_t)&off_1EF74B1E8, v1);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

uint64_t SaliencyImageObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for SaliencyImageObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t SaliencyImageObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D5A99C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D5D234(&qword_1E95EE5E8, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3D5AA20()
{
  uint64_t v1 = 0x70614D74616568;
  if (*v0 != 1) {
    uint64_t v1 = 0x4F746E65696C6173;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746176726573626FLL;
  }
}

uint64_t sub_1A3D5AA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D5BF38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D5AAB8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5BDE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D5AAF4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5BDE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SaliencyImageObservation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE5F8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D5BDE8();
  sub_1A4096FEC();
  uint64_t v12 = type metadata accessor for SaliencyImageObservation();
  uint64_t v21 = v3;
  char v25 = 1;
  type metadata accessor for PixelBufferObservation();
  sub_1A3D5D234(&qword_1E95EE5D8, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  sub_1A4096DBC();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v18 = v9;
  uint64_t v15 = v19;
  uint64_t v14 = v20;
  uint64_t v22 = *v21;
  char v24 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECF00);
  sub_1A3D5BE3C(&qword_1E95EE0E0, &qword_1E95EC550);
  sub_1A4096DBC();
  char v23 = 0;
  sub_1A3C80D74();
  sub_1A4096D5C();
  uint64_t v16 = sub_1A3D5D234(&qword_1E95EE5E8, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);
  sub_1A3D2A9D0((uint64_t)v7, v12, (uint64_t)&off_1EF74B1E8, v16);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v8);
}

uint64_t SaliencyImageObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_1A4095C7C();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PixelBufferObservation();
  MEMORY[0x1F4188790](v7);
  uint64_t v33 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE600);
  uint64_t v30 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for SaliencyImageObservation();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D5BDE8();
  uint64_t v14 = (uint64_t)v35;
  sub_1A4096FDC();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = v6;
  uint64_t v35 = a1;
  uint64_t v16 = v30;
  uint64_t v15 = v31;
  uint64_t v17 = v32;
  LOBYTE(v38) = 1;
  sub_1A3D5D234(&qword_1E95EE5D0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  sub_1A4096CFC();
  uint64_t v18 = (uint64_t)v10;
  sub_1A3D5BED0(v33, (uint64_t)&v13[v11[5]], (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECF00);
  char v36 = 2;
  sub_1A3D5BE3C(&qword_1E95EE100, &qword_1E95EC548);
  uint64_t v19 = v34;
  sub_1A4096CFC();
  *(void *)uint64_t v13 = v38;
  LOBYTE(v38) = 0;
  sub_1A3C80D74();
  sub_1A4096C7C();
  uint64_t v33 = v18;
  LOBYTE(v38) = 0;
  sub_1A3D5D234((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  uint64_t v21 = v28;
  sub_1A4096CFC();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v13[v11[6]], v21, v17);
  LOBYTE(v38) = 1;
  sub_1A4096CDC();
  *(_DWORD *)&v13[v11[7]] = v22;
  char v36 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  char v23 = v25;
  uint64_t v24 = v26;
  *(_WORD *)&v13[v11[9]] = v38;
  sub_1A3D2B130((uint64_t)v37);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v29);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v33, v19);
  sub_1A3C7D648((uint64_t)v37, (uint64_t)&v13[v11[8]]);
  sub_1A3D5D1CC((uint64_t)v13, v24, (uint64_t (*)(void))type metadata accessor for SaliencyImageObservation);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_1A3D5D27C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SaliencyImageObservation);
}

uint64_t sub_1A3D5B58C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SaliencyImageObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3D5B5A4(void *a1)
{
  return SaliencyImageObservation.encode(to:)(a1);
}

size_t sub_1A3D5B5BC@<X0>(void *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v9 = type metadata accessor for RectangleObservation();
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)&double v11 = MEMORY[0x1F4188790](v9 - 8).n128_u64[0];
  uint64_t v13 = (uint64_t *)((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v41 = *a2;
  uint64_t v14 = *a3;
  uint64_t v15 = a3[1];
  uint64_t v16 = a3[2];
  uint64_t v17 = a3[3];
  id v18 = objc_msgSend(a1, sel_salientObjects, v11);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (!v18) {
    goto LABEL_15;
  }
  uint64_t v20 = v18;
  sub_1A3D43520();
  unint64_t v21 = sub_1A409630C();

  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1A4096BFC();
  swift_bridgeObjectRelease();
  if (!v22)
  {
LABEL_14:
    swift_bridgeObjectRelease();
LABEL_15:
    __int16 v29 = v41;
    LOWORD(v43) = v41;
    uint64_t v44 = v14;
    uint64_t v45 = v15;
    uint64_t v46 = v16;
    uint64_t v47 = v17;
    uint64_t v30 = (int *)type metadata accessor for SaliencyImageObservation();
    uint64_t v31 = (uint64_t)a5 + v30[5];
    id v32 = a1;
    uint64_t v33 = v40;
    sub_1A3D596DC(v32, (__int16 *)&v43, v40, v31);
    id v34 = objc_msgSend(v32, sel_uuid);
    sub_1A4095C5C();

    objc_msgSend(v32, sel_confidence);
    int v36 = v35;

    *a5 = v19;
    *(_DWORD *)((char *)a5 + v30[7]) = v36;
    size_t result = sub_1A3C7D648(v33, (uint64_t)a5 + v30[8]);
    *(_WORD *)((char *)a5 + v30[9]) = v29;
    return result;
  }
LABEL_4:
  uint64_t v43 = v19;
  size_t result = sub_1A3CD10FC(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v38 = a1;
    uint64_t v39 = a5;
    uint64_t v24 = 0;
    uint64_t v19 = v43;
    uint64_t v25 = v40;
    do
    {
      if ((v21 & 0xC000000000000001) != 0) {
        id v26 = (id)MEMORY[0x1A6254720](v24, v21);
      }
      else {
        id v26 = *(id *)(v21 + 8 * v24 + 32);
      }
      __int16 v42 = v41;
      uint64_t v44 = v14;
      uint64_t v45 = v15;
      uint64_t v46 = v16;
      uint64_t v47 = v17;
      sub_1A3C9C064(v26, &v42, &v44, v25, v13);
      uint64_t v43 = v19;
      unint64_t v28 = *(void *)(v19 + 16);
      unint64_t v27 = *(void *)(v19 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1A3CD10FC(v27 > 1, v28 + 1, 1);
        uint64_t v25 = v40;
        uint64_t v19 = v43;
      }
      ++v24;
      *(void *)(v19 + 16) = v28 + 1;
      sub_1A3D5BED0((uint64_t)v13, v19+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v28, (uint64_t (*)(void))type metadata accessor for RectangleObservation);
    }
    while (v22 != v24);
    swift_bridgeObjectRelease();
    a1 = v38;
    a5 = v39;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t SaliencyImageObservation.init(_:)@<X0>(void *a1@<X0>, size_t *a2@<X8>)
{
  uint64_t v4 = sub_1A4095C7C();
  *(void *)&double v5 = MEMORY[0x1F4188790](v4 - 8).n128_u64[0];
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_pixelBuffer, v5);
  CVPixelBufferRef v9 = sub_1A3CAB15C();

  id v10 = objc_msgSend(a1, sel_salientObjects);
  if (v10)
  {
    double v11 = v10;
    sub_1A3D43520();
    unint64_t v12 = sub_1A409630C();

    id v13 = a1;
    size_t v27 = sub_1A3D5C0CC(v12, v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    size_t v27 = MEMORY[0x1E4FBC860];
  }
  id v14 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  float v16 = v15;
  objc_msgSend(a1, sel_timeRange);
  char v33 = 0;
  LOWORD(v31[0]) = -8;
  uint64_t v17 = (int *)type metadata accessor for SaliencyImageObservation();
  uint64_t v18 = (uint64_t)a2 + v17[5];
  uint64_t v19 = v9;
  sub_1A3D59318((uint64_t)v7, (uint64_t)&v32, (__int16 *)v31, (uint64_t)v19, v18, v16);
  id v20 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v22 = v21;
  objc_msgSend(a1, sel_timeRange);
  long long v30 = v31[0];
  long long v29 = v31[1];
  long long v28 = v31[2];

  *a2 = v27;
  *(_DWORD *)((char *)a2 + v17[7]) = v22;
  char v23 = (char *)a2 + v17[8];
  long long v24 = v29;
  *(_OWORD *)char v23 = v30;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v28;
  v23[48] = 0;
  *(_WORD *)((char *)a2 + v17[9]) = -8;
  return (*(uint64_t (**)(size_t *, void, uint64_t, int *))(*((void *)v17 - 1) + 56))(a2, 0, 1, v17);
}

size_t sub_1A3D5BC38@<X0>(void *a1@<X0>, unsigned __int16 *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  unsigned __int16 v8 = *a2;
  long long v5 = a3[1];
  v7[0] = *a3;
  v7[1] = v5;
  return sub_1A3D5B5BC(a1, &v8, (uint64_t *)v7, a4, a5);
}

uint64_t _s6Vision24SaliencyImageObservationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  if ((sub_1A3CD02C8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for SaliencyImageObservation();
  if ((static PixelBufferObservation.== infix(_:_:)((char *)a1 + v4[5], (char *)a2 + v4[5]) & 1) == 0
    || (sub_1A4095C4C() & 1) == 0
    || *(float *)((char *)a1 + v4[7]) != *(float *)((char *)a2 + v4[7]))
  {
    return 0;
  }
  uint64_t v5 = v4[8];
  char v6 = *((unsigned char *)a1 + v5 + 48);
  uint64_t v7 = (char *)a2 + v5;
  if ((v6 & 1) == 0)
  {
    if ((v7[48] & 1) != 0 || (sub_1A409669C() & 1) == 0) {
      return 0;
    }
LABEL_10:
    uint64_t v8 = v4[9];
    unsigned int v9 = *(unsigned __int16 *)((char *)a1 + v8);
    unsigned int v10 = *(unsigned __int16 *)((char *)a2 + v8);
    if (v9 <= 0xFFF7)
    {
      if (v10 > 0xFFF7) {
        return 0;
      }
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
    }
    else if (v10 <= 0xFFF7)
    {
      return 0;
    }
    return 1;
  }
  if (v7[48]) {
    goto LABEL_10;
  }
  return 0;
}

unint64_t sub_1A3D5BDE8()
{
  unint64_t result = qword_1E960FF80[0];
  if (!qword_1E960FF80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E960FF80);
  }
  return result;
}

uint64_t sub_1A3D5BE3C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95ECF00);
    sub_1A3D5D234(a2, (void (*)(uint64_t))type metadata accessor for RectangleObservation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D5BED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3D5BF38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70614D74616568 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4F746E65696C6173 && a2 == 0xEE00737463656A62)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

size_t sub_1A3D5C0CC(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  id v18 = a2;
  uint64_t v5 = type metadata accessor for RectangleObservation();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (unint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (!v9) {
      return v10;
    }
    uint64_t v27 = MEMORY[0x1E4FBC860];
    size_t result = sub_1A3CD10FC(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    unint64_t v17 = v3;
    uint64_t v12 = 0;
    uint64_t v10 = v27;
    unint64_t v3 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v3) {
        id v13 = (id)MEMORY[0x1A6254720](v12, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      __int16 v24 = -8;
      id v14 = v13;
      static NormalizedRect.fullImage.getter(v23);
      v22[0] = v23[0];
      v22[1] = v23[1];
      objc_msgSend(v18, sel_timeRange);
      v25[0] = v19;
      v25[1] = v20;
      v25[2] = v21;
      char v26 = 0;
      sub_1A3C9C064(v14, &v24, (uint64_t *)v22, (uint64_t)v25, v8);

      uint64_t v27 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1A3CD10FC(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v27;
      }
      ++v12;
      *(void *)(v10 + 16) = v16 + 1;
      sub_1A3D5BED0((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, (uint64_t (*)(void))type metadata accessor for RectangleObservation);
      if (v9 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3D5C330(void *a1)
{
  a1[1] = sub_1A3D5D234(&qword_1E95ECFE8, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);
  a1[2] = sub_1A3D5D234(&qword_1E95EE608, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);
  a1[3] = sub_1A3D5D234(&qword_1E95EE610, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);
  uint64_t result = sub_1A3D5D234(&qword_1E95EE5F0, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3D5C404()
{
  return sub_1A3D5D234(&qword_1E95EE618, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);
}

uint64_t sub_1A3D5C44C(uint64_t a1)
{
  uint64_t result = sub_1A3D5D234(&qword_1E95EE5E8, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SaliencyImageObservation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A4095C7C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    id v13 = (int *)type metadata accessor for PixelBufferObservation();
    *(_DWORD *)&v9[v13[5]] = *(_DWORD *)&v10[v13[5]];
    uint64_t v14 = v13[6];
    unint64_t v15 = &v9[v14];
    unint64_t v16 = &v10[v14];
    v15[48] = v16[48];
    long long v17 = *((_OWORD *)v16 + 2);
    long long v18 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
    *((_OWORD *)v15 + 2) = v17;
    *(_OWORD *)unint64_t v15 = v18;
    *(_WORD *)&v9[v13[7]] = *(_WORD *)&v10[v13[7]];
    uint64_t v19 = v13[8];
    long long v20 = *(void **)&v10[v19];
    *(void *)&v9[v19] = v20;
    uint64_t v21 = a3[6];
    int v22 = (char *)v7 + v21;
    char v23 = (char *)a2 + v21;
    id v24 = v20;
    v12(v22, v23, v11);
    uint64_t v25 = a3[8];
    *(_DWORD *)((char *)v7 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    char v26 = (char *)v7 + v25;
    uint64_t v27 = (char *)a2 + v25;
    long long v28 = *((_OWORD *)v27 + 1);
    *(_OWORD *)char v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v28;
    *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    v26[48] = v27[48];
    *(_WORD *)((char *)v7 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  }
  return v7;
}

uint64_t destroy for SaliencyImageObservation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A4095C7C();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);

  uint64_t v6 = a1 + *(int *)(a2 + 24);

  return v8(v6, v5);
}

void *initializeWithCopy for SaliencyImageObservation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for PixelBufferObservation();
  *(_DWORD *)&v7[v11[5]] = *(_DWORD *)&v8[v11[5]];
  uint64_t v12 = v11[6];
  id v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  v13[48] = v14[48];
  long long v15 = *((_OWORD *)v14 + 2);
  long long v16 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  *((_OWORD *)v13 + 2) = v15;
  *(_OWORD *)id v13 = v16;
  *(_WORD *)&v7[v11[7]] = *(_WORD *)&v8[v11[7]];
  uint64_t v17 = v11[8];
  long long v18 = *(void **)&v8[v17];
  *(void *)&v7[v17] = v18;
  uint64_t v19 = a3[6];
  long long v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  id v22 = v18;
  v10(v20, v21, v9);
  uint64_t v23 = a3[8];
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  id v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  long long v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)id v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  v24[48] = v25[48];
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

char *assignWithCopy for SaliencyImageObservation(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1A4095C7C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for PixelBufferObservation();
  *(_DWORD *)&v7[v11[5]] = *(_DWORD *)&v8[v11[5]];
  uint64_t v12 = v11[6];
  id v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  char v15 = v14[48];
  long long v17 = *((_OWORD *)v14 + 1);
  long long v16 = *((_OWORD *)v14 + 2);
  *(_OWORD *)id v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v17;
  *((_OWORD *)v13 + 2) = v16;
  v13[48] = v15;
  *(_WORD *)&v7[v11[7]] = *(_WORD *)&v8[v11[7]];
  uint64_t v18 = v11[8];
  uint64_t v19 = *(void **)&v8[v18];
  long long v20 = *(void **)&v7[v18];
  *(void *)&v7[v18] = v19;
  id v21 = v19;

  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(_DWORD *)&a1[a3[7]] = *(_DWORD *)&a2[a3[7]];
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  id v24 = &a2[v22];
  char v25 = v24[48];
  long long v27 = *((_OWORD *)v24 + 1);
  long long v26 = *((_OWORD *)v24 + 2);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v27;
  *((_OWORD *)v23 + 2) = v26;
  v23[48] = v25;
  *(_WORD *)&a1[a3[9]] = *(_WORD *)&a2[a3[9]];
  return a1;
}

char *initializeWithTake for SaliencyImageObservation(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1A4095C7C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for PixelBufferObservation();
  *(_DWORD *)&v7[v11[5]] = *(_DWORD *)&v8[v11[5]];
  uint64_t v12 = v11[6];
  id v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  v13[48] = v14[48];
  long long v15 = *((_OWORD *)v14 + 2);
  long long v16 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  *((_OWORD *)v13 + 2) = v15;
  *(_OWORD *)id v13 = v16;
  *(_WORD *)&v7[v11[7]] = *(_WORD *)&v8[v11[7]];
  *(void *)&v7[v11[8]] = *(void *)&v8[v11[8]];
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v17 = a3[8];
  *(_DWORD *)&a1[a3[7]] = *(_DWORD *)&a2[a3[7]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
  v18[48] = v19[48];
  *(_WORD *)&a1[a3[9]] = *(_WORD *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for SaliencyImageObservation(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1A4095C7C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for PixelBufferObservation();
  *(_DWORD *)&v7[v11[5]] = *(_DWORD *)&v8[v11[5]];
  uint64_t v12 = v11[6];
  id v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  v13[48] = v14[48];
  long long v15 = *((_OWORD *)v14 + 2);
  long long v16 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  *((_OWORD *)v13 + 2) = v15;
  *(_OWORD *)id v13 = v16;
  *(_WORD *)&v7[v11[7]] = *(_WORD *)&v8[v11[7]];
  uint64_t v17 = v11[8];
  uint64_t v18 = *(void **)&v7[v17];
  *(void *)&v7[v17] = *(void *)&v8[v17];

  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v19 = a3[8];
  *(_DWORD *)&a1[a3[7]] = *(_DWORD *)&a2[a3[7]];
  long long v20 = &a1[v19];
  id v21 = &a2[v19];
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  v20[48] = v21[48];
  *(_WORD *)&a1[a3[9]] = *(_WORD *)&a2[a3[9]];
  return a1;
}

uint64_t getEnumTagSinglePayload for SaliencyImageObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D5CC5C);
}

uint64_t sub_1A3D5CC5C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PixelBufferObservation();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1A4095C7C();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      long long v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SaliencyImageObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D5CD9C);
}

void *sub_1A3D5CD9C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PixelBufferObservation();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1A4095C7C();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      long long v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1A3D5CEC8()
{
  uint64_t result = type metadata accessor for PixelBufferObservation();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1A4095C7C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SaliencyImageObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D5D08CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SaliencyImageObservation.CodingKeys()
{
  return &type metadata for SaliencyImageObservation.CodingKeys;
}

unint64_t sub_1A3D5D0C8()
{
  unint64_t result = qword_1E9610420[0];
  if (!qword_1E9610420[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9610420);
  }
  return result;
}

unint64_t sub_1A3D5D120()
{
  unint64_t result = qword_1E9610530;
  if (!qword_1E9610530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9610530);
  }
  return result;
}

unint64_t sub_1A3D5D178()
{
  unint64_t result = qword_1E9610538[0];
  if (!qword_1E9610538[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9610538);
  }
  return result;
}

uint64_t sub_1A3D5D1CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3D5D234(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D5D27C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A3D5D2DC(uint64_t result)
{
  if (!(_BYTE)result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC098);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1A40E7700;
    sub_1A409621C();
    sub_1A4096BAC();
    sub_1A409621C();
    sub_1A409621C();
    *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0xE000000000000000;
    sub_1A4096F1C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A3D5D3EC()
{
  unint64_t result = qword_1E95EE620;
  if (!qword_1E95EE620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE620);
  }
  return result;
}

ValueMetadata *type metadata accessor for Logger()
{
  return &type metadata for Logger;
}

unsigned char *storeEnumTagSinglePayload for Logger.LoggingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D5D51CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Logger.LoggingType()
{
  return &type metadata for Logger.LoggingType;
}

BOOL static DetectFaceRectanglesRequest.Revision.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL static DetectFaceRectanglesRequest.Revision.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DetectFaceRectanglesRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D5D5A8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DFDC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D5D5E4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DFDC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D5D620(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DF88();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D5D65C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DF88();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D5D698(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DF34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D5D6D4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DF34();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D5D710()
{
  uint64_t result = 0x6E6F697369766572;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x5F33444F4E41;
      goto LABEL_4;
    case 2:
      uint64_t v2 = 0x5F34444F4E41;
LABEL_4:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6F4E000000000000;
      break;
    case 3:
      uint64_t result = 0x3576444F4E41;
      break;
    case 4:
      uint64_t result = 0x416576616C637865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D5D7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D5F8F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D5D7F0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DE8C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D5D82C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DE8C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D5D868(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DEE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D5D8A4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5DEE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D5D8E0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5E030();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D5D91C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5E030();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectFaceRectanglesRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE628);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x1F4188790](v3);
  int v35 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE630);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  long long v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE638);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x1F4188790](v7);
  long long v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE640);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE648);
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE650);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D5DE8C();
  sub_1A4096FEC();
  switch(v18)
  {
    case 1:
      char v41 = 1;
      sub_1A3D5DFDC();
      uint64_t v21 = v39;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
      goto LABEL_8;
    case 2:
      char v42 = 2;
      sub_1A3D5DF88();
      long long v22 = v29;
      uint64_t v21 = v39;
      sub_1A4096D5C();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_7;
    case 3:
      char v43 = 3;
      sub_1A3D5DF34();
      long long v22 = v32;
      uint64_t v21 = v39;
      sub_1A4096D5C();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      goto LABEL_7;
    case 4:
      char v44 = 4;
      sub_1A3D5DEE0();
      long long v22 = v35;
      uint64_t v21 = v39;
      sub_1A4096D5C();
      uint64_t v24 = v36;
      uint64_t v23 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v21);
      break;
    default:
      char v40 = 0;
      sub_1A3D5E030();
      uint64_t v19 = v39;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v19);
      break;
  }
  return result;
}

unint64_t sub_1A3D5DE8C()
{
  unint64_t result = qword_1E96106D8;
  if (!qword_1E96106D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96106D8);
  }
  return result;
}

unint64_t sub_1A3D5DEE0()
{
  unint64_t result = qword_1E96106E0;
  if (!qword_1E96106E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96106E0);
  }
  return result;
}

unint64_t sub_1A3D5DF34()
{
  unint64_t result = qword_1E96106E8;
  if (!qword_1E96106E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96106E8);
  }
  return result;
}

unint64_t sub_1A3D5DF88()
{
  unint64_t result = qword_1E96106F0;
  if (!qword_1E96106F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96106F0);
  }
  return result;
}

unint64_t sub_1A3D5DFDC()
{
  unint64_t result = qword_1E96106F8;
  if (!qword_1E96106F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96106F8);
  }
  return result;
}

unint64_t sub_1A3D5E030()
{
  unint64_t result = qword_1E9610700[0];
  if (!qword_1E9610700[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9610700);
  }
  return result;
}

uint64_t DetectFaceRectanglesRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectFaceRectanglesRequest.Revision.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE658);
  uint64_t v43 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  char v53 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE660);
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE668);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE670);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE678);
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE680);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1A3D5DE8C();
  uint64_t v18 = v56;
  sub_1A4096FDC();
  if (v18)
  {
LABEL_7:
    uint64_t v33 = (uint64_t)v55;
    return __swift_destroy_boxed_opaque_existential_1(v33);
  }
  uint64_t v39 = v10;
  char v40 = v12;
  uint64_t v19 = v9;
  uint64_t v21 = v51;
  long long v20 = v52;
  uint64_t v41 = 0;
  uint64_t v56 = v14;
  long long v22 = v53;
  uint64_t v23 = v54;
  uint64_t v24 = v16;
  uint64_t v25 = sub_1A4096D3C();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v30 = sub_1A4096ABC();
    swift_allocError();
    long long v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    void *v32 = &type metadata for DetectFaceRectanglesRequest.Revision;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x1E4FBBA70], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v13);
    goto LABEL_7;
  }
  char v26 = *(unsigned char *)(v25 + 32);
  switch(v26)
  {
    case 1:
      char v58 = 1;
      sub_1A3D5DFDC();
      uint64_t v35 = v41;
      sub_1A4096C7C();
      if (v35) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      goto LABEL_19;
    case 2:
      char v59 = 2;
      sub_1A3D5DF88();
      uint64_t v36 = v41;
      sub_1A4096C7C();
      if (v36) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
      goto LABEL_19;
    case 3:
      char v60 = 3;
      sub_1A3D5DF34();
      uint64_t v37 = v41;
      sub_1A4096C7C();
      if (v37) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v46);
LABEL_19:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      goto LABEL_21;
    case 4:
      char v61 = 4;
      sub_1A3D5DEE0();
      uint64_t v38 = v41;
      sub_1A4096C7C();
      if (v38) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      uint64_t v23 = v54;
      goto LABEL_21;
    default:
      char v27 = *(unsigned char *)(v25 + 32);
      char v57 = 0;
      sub_1A3D5E030();
      long long v29 = v40;
      uint64_t v28 = v41;
      sub_1A4096C7C();
      if (v28)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
        uint64_t v33 = (uint64_t)v55;
        return __swift_destroy_boxed_opaque_existential_1(v33);
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      char v26 = v27;
LABEL_21:
      *uint64_t v23 = v26;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      break;
  }
  return result;
}

uint64_t sub_1A3D5E824@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DetectFaceRectanglesRequest.Revision.init(from:)(a1, a2);
}

uint64_t sub_1A3D5E83C(void *a1)
{
  return DetectFaceRectanglesRequest.Revision.encode(to:)(a1);
}

double DetectFaceRectanglesRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v9);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 5)
  {
    unint64_t v5 = sub_1A3CFDA54();
    sub_1A3E2C988((uint64_t)&type metadata for DetectFaceRectanglesRequest, v5, (uint64_t)&v8);
    LOBYTE(v3) = v8;
  }
  double result = v9[0].n128_f64[0];
  __n128 v7 = v9[1];
  *a2 = v9[0];
  a2[1] = v7;
  a2[2].n128_u8[0] = v3;
  a2[2].n128_u32[1] = 0;
  a2[2].n128_u16[4] = 1;
  a2[3].n128_u64[0] = v4;
  return result;
}

__n128 DetectFaceRectanglesRequest.regionOfInterest.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 DetectFaceRectanglesRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*DetectFaceRectanglesRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void DetectFaceRectanglesRequest.revision.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t sub_1A3D5E928()
{
  unint64_t v0 = sub_1A3CFDA54();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for DetectFaceRectanglesRequest, v0);
  qword_1E96106C8 = result;
  return result;
}

uint64_t static DetectFaceRectanglesRequest.supportedRevisions.getter()
{
  if (qword_1E96106C0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t DetectFaceRectanglesRequest.supportsPrecisionRecallThresholdOverride.getter()
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  char v1 = *(unsigned char *)(v0 + 32);
  int v2 = *(_DWORD *)(v0 + 36);
  char v3 = *(unsigned char *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 41);
  uint64_t v5 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 16);
  v22[0] = *(_OWORD *)v0;
  v22[1] = v6;
  char v23 = v1;
  int v24 = v2;
  char v25 = v3;
  char v26 = v4;
  uint64_t v27 = v5;
  unint64_t v7 = sub_1A3D5EFFC();
  sub_1A3D453DC(0, (uint64_t)&type metadata for DetectFaceRectanglesRequest, v7);
  uint64_t v9 = v8;
  sub_1A3C8C73C(0, &qword_1E95EDEB8);
  if (!swift_dynamicCastMetatype()) {
    goto LABEL_7;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8F944(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  *(void *)&v22[0] = 0;
  id v12 = objc_msgSend(ObjCClassFromMetadata, sel_defaultFilterThresholdsForOptions_error_, v11, v22);

  uint64_t v13 = *(void **)&v22[0];
  if (!v12)
  {
    id v19 = *(id *)&v22[0];
    long long v20 = (void *)sub_1A4095AEC();

    swift_willThrow();
LABEL_8:
    char v18 = 0;
    return v18 & 1;
  }
  type metadata accessor for VNShotflowDetectorFilterThresholdKey();
  sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EFED0);
  sub_1A3D607A0(&qword_1E95EDEC0, (void (*)(uint64_t))type metadata accessor for VNShotflowDetectorFilterThresholdKey);
  uint64_t v14 = sub_1A409602C();
  id v15 = v13;

  if (!*(void *)(v14 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v16 = @"VNShotflowDetectorFilterThresholdKey_HumanFace";
  sub_1A3D372EC((uint64_t)v16);
  char v18 = v17;

  swift_bridgeObjectRelease();
  return v18 & 1;
}

unint64_t DetectFaceRectanglesRequest.precisionRecallThresholdOverride.getter()
{
  return *(unsigned int *)(v0 + 36) | ((unint64_t)*(unsigned __int8 *)(v0 + 40) << 32);
}

uint64_t DetectFaceRectanglesRequest.precisionRecallThresholdOverride.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 36) = result;
  *(unsigned char *)(v1 + 40) = BYTE4(result) & 1;
  return result;
}

uint64_t (*DetectFaceRectanglesRequest.precisionRecallThresholdOverride.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t static DetectFaceRectanglesRequest.precisionRecallThresholdOverrideSupportingRevisions.getter()
{
  uint64_t v0 = 0;
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v1 = MEMORY[0x1E4FBC868];
  do
  {
    int v2 = byte_1EF7576B0[v0 + 32];
    if (v2 == 4) {
      goto LABEL_2;
    }
    static NormalizedRect.fullImage.getter(&v22);
    char v23 = v2;
    int v24 = 0;
    __int16 v25 = 1;
    uint64_t v26 = v1;
    unint64_t v3 = sub_1A3D5EFFC();
    sub_1A3D453DC(0, (uint64_t)&type metadata for DetectFaceRectanglesRequest, v3);
    uint64_t v5 = v4;
    sub_1A3C8C73C(0, &qword_1E95EDEB8);
    if (!swift_dynamicCastMetatype())
    {
LABEL_13:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    sub_1A3C8F944(v5);
    swift_bridgeObjectRelease();
    unint64_t v7 = (void *)sub_1A409600C();
    swift_bridgeObjectRelease();
    v22.n128_u64[0] = 0;
    id v8 = objc_msgSend(ObjCClassFromMetadata, sel_defaultFilterThresholdsForOptions_error_, v7, &v22);

    uint64_t v9 = (void *)v22.n128_u64[0];
    if (v8)
    {
      type metadata accessor for VNShotflowDetectorFilterThresholdKey();
      sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EFED0);
      sub_1A3D607A0(&qword_1E95EDEC0, (void (*)(uint64_t))type metadata accessor for VNShotflowDetectorFilterThresholdKey);
      uint64_t v10 = sub_1A409602C();
      id v11 = v9;

      if (!*(void *)(v10 + 16)) {
        goto LABEL_13;
      }
      id v12 = @"VNShotflowDetectorFilterThresholdKey_HumanFace";
      sub_1A3D372EC((uint64_t)v12);
      char v14 = v13;

      swift_bridgeObjectRelease();
      if (v14)
      {
        uint64_t v15 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A3D5F7EC(0, *(void *)(v21 + 16) + 1, 1);
          uint64_t v15 = v21;
        }
        unint64_t v17 = *(void *)(v15 + 16);
        unint64_t v16 = *(void *)(v15 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1A3D5F7EC((char *)(v16 > 1), v17 + 1, 1);
          uint64_t v15 = v21;
        }
        *(void *)(v15 + 16) = v17 + 1;
        uint64_t v21 = v15;
        *(unsigned char *)(v15 + v17 + 32) = v2;
      }
    }
    else
    {
      id v18 = (id)v22.n128_u64[0];
      id v19 = (void *)sub_1A4095AEC();

      swift_willThrow();
    }
LABEL_2:
    ++v0;
  }
  while (v0 != 5);
  return v21;
}

void DetectFaceRectanglesRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = *(unsigned __int8 *)(v1 + 32);
}

void DetectFaceRectanglesRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

unsigned char *DetectFaceRectanglesRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*DetectFaceRectanglesRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D5EFFC()
{
  unint64_t result = qword_1E95EE688;
  if (!qword_1E95EE688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE688);
  }
  return result;
}

int *sub_1A3D5F050()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE6E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  char v8 = 0;
  uint64_t v1 = sub_1A3D09D64(5, 0, 21);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(5, 0, 21);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(5, 0, 21);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468((uint64_t)&v8, v2, v4, v6, (uint64_t)&type metadata for DetectFaceRectanglesRequest.Revision, v0 + 32);
  qword_1E9643D28 = v0;
  return result;
}

uint64_t DetectFaceRectanglesRequest.hash(into:)(long long *a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  if (v3 != 1) {
    sub_1A4096F5C();
  }
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t DetectFaceRectanglesRequest.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 32);
  int v2 = *(_DWORD *)(v0 + 36);
  char v3 = *(unsigned char *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 41);
  uint64_t v5 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v8[9] = *(_OWORD *)v0;
  *(_OWORD *)&v8[11] = v6;
  char v9 = v1;
  int v10 = v2;
  char v11 = v3;
  char v12 = v4;
  uint64_t v13 = v5;
  sub_1A4096F2C();
  DetectFaceRectanglesRequest.hash(into:)((long long *)v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D5F280(uint64_t a1)
{
  unint64_t v2 = sub_1A3D5EFFC();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D5F2BC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3CFDA54();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D5F310(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3CFDA54();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D5F364(_WORD *a1@<X8>)
{
  *a1 = *(unsigned __int8 *)(v1 + 32);
}

uint64_t sub_1A3D5F374(uint64_t a1)
{
  unint64_t v2 = sub_1A3CFDA54();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D5F3B0()
{
  char v1 = *(unsigned char *)(v0 + 32);
  int v2 = *(_DWORD *)(v0 + 36);
  char v3 = *(unsigned char *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 41);
  uint64_t v5 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v8[9] = *(_OWORD *)v0;
  *(_OWORD *)&v8[11] = v6;
  char v9 = v1;
  int v10 = v2;
  char v11 = v3;
  char v12 = v4;
  uint64_t v13 = v5;
  sub_1A4096F2C();
  DetectFaceRectanglesRequest.hash(into:)((long long *)v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D5F428()
{
  char v1 = *(unsigned char *)(v0 + 32);
  int v2 = *(_DWORD *)(v0 + 36);
  char v3 = *(unsigned char *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 41);
  uint64_t v5 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v8[9] = *(_OWORD *)v0;
  *(_OWORD *)&v8[11] = v6;
  char v9 = v1;
  int v10 = v2;
  char v11 = v3;
  char v12 = v4;
  uint64_t v13 = v5;
  sub_1A4096F2C();
  DetectFaceRectanglesRequest.hash(into:)((long long *)v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D5F498()
{
  if (qword_1E96106D0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D5F4F4()
{
  if (*(unsigned __int8 *)(v0 + 32) > 3u) {
    return 6;
  }
  else {
    return sub_1A409617C();
  }
}

uint64_t sub_1A3D5F53C(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA084();

  return sub_1A3E2C684(a1, a2);
}

uint64_t sub_1A3D5F588()
{
  return qword_1A40F48B8[*v0];
}

uint64_t sub_1A3D5F5A0(uint64_t a1, uint64_t a2)
{
  long long v5 = v2[1];
  v21[0] = *v2;
  v21[1] = v5;
  long long v7 = *v2;
  long long v6 = v2[1];
  void v21[2] = v2[2];
  uint64_t v22 = *((void *)v2 + 6);
  v19[0] = v7;
  v19[1] = v6;
  v19[2] = v2[2];
  uint64_t v20 = *((void *)v2 + 6);
  unint64_t v8 = sub_1A3D5EFFC();
  uint64_t v9 = sub_1A3D4507C((uint64_t)&type metadata for DetectFaceRectanglesRequest, v8);
  uint64_t v11 = v10;
  uint64_t v12 = sub_1A409617C();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  if (v9 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return MEMORY[0x1E4FBC860];
    }
  }
  if (*(void *)(a1 + 16))
  {
    sub_1A3C8D3F0(a1 + 32, (uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF730);
    if (swift_dynamicCast())
    {
      sub_1A3D109F0((uint64_t)v21);
      size_t v17 = sub_1A3D5FD74(v18, (unint64_t)v21, a2);
      sub_1A3D10A1C((uint64_t)v21);
      swift_bridgeObjectRelease();
      return v17;
    }
    return MEMORY[0x1E4FBC860];
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3D5F73C(uint64_t a1, uint64_t a2)
{
  return sub_1A3D5F5A0(a1, a2);
}

void sub_1A3D5F754(uint64_t a1)
{
}

uint64_t sub_1A3D5F76C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result > 3737841668)
  {
    if (result != 3737841670)
    {
      if (result == 3737841669)
      {
        *a2 = 2;
        return result;
      }
      goto LABEL_8;
    }
    *a2 = 3;
  }
  else
  {
    if (result != 3)
    {
      if (result == 3737841668)
      {
        *a2 = 1;
        return result;
      }
LABEL_8:
      *a2 = 5;
      return result;
    }
    *a2 = 0;
  }
  return result;
}

char *sub_1A3D5F7EC(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A3D5F80C(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_1A3D5F80C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE6F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_1A3D5F8F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697369766572 && a2 == 0xE900000000000033;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F4E5F33444F4E41 && a2 == 0xEC00000041424246 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F4E5F34444F4E41 && a2 == 0xEC00000041424246 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x3576444F4E41 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x416576616C637865 && a2 == 0xEE0035765F444F4ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void sub_1A3D5FB6C(uint64_t a1)
{
  uint64_t v4 = *(char *)(v1 + 32);
  int v5 = *(_DWORD *)(v1 + 36);
  char v6 = *(unsigned char *)(v1 + 40);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8C73C(0, &qword_1E95EDEB8);
  if (objc_msgSend(ObjCClassFromMetadata, sel_isSubclassOfClass_, swift_getObjCClassFromMetadata()))
  {
    uint64_t v8 = qword_1A40F48B8[v4];
    uint64_t v9 = sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EC718);
    uint64_t v10 = sub_1A3C8C73C(0, &qword_1E95EE6E0);
    id v11 = sub_1A3CA42A0(v10, v8);
    if (!v2)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_1A409617C();
      uint64_t v15 = v14;
      *((void *)&v26 + 1) = v9;
      *(void *)&long long v25 = v12;
      unint64_t v16 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
      id v23 = v12;
      size_t v17 = v16;
      unint64_t v18 = (void (*)(unsigned char *, void))v16(v24);
      sub_1A3C8BC40((uint64_t)&v25, v13, v15);
      v18(v24, 0);
      uint64_t v19 = sub_1A409617C();
      uint64_t v21 = v20;
      if (v6)
      {
        long long v25 = 0u;
        long long v26 = 0u;
      }
      else
      {
        *((void *)&v26 + 1) = MEMORY[0x1E4FBB470];
        LODWORD(v25) = v5;
      }
      uint64_t v22 = (void (*)(unsigned char *, void))v17(v24);
      sub_1A3C8BC40((uint64_t)&v25, v19, v21);
      v22(v24, 0);
    }
  }
}

size_t sub_1A3D5FD74(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v22 = a3;
  uint64_t v7 = type metadata accessor for FaceObservation();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if (!v11) {
      return v12;
    }
    uint64_t v27 = MEMORY[0x1E4FBC860];
    size_t result = sub_1A3CD1228(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0) {
      break;
    }
    uint64_t v14 = 0;
    uint64_t v12 = v27;
    v20[1] = v4;
    unint64_t v21 = a1 & 0xC000000000000001;
    __int16 v15 = *(unsigned __int8 *)(a2 + 32);
    long long v16 = *(_OWORD *)(a2 + 16);
    long long v25 = *(_OWORD *)a2;
    long long v26 = v16;
    uint64_t v4 = a1;
    while (v11 != v14)
    {
      if (v21) {
        id v17 = (id)MEMORY[0x1A6254720](v14, a1);
      }
      else {
        id v17 = *(id *)(a1 + 8 * v14 + 32);
      }
      __int16 v24 = v15;
      v23[0] = v25;
      v23[1] = v26;
      sub_1A3DF2DB4(v17, (unint64_t *)v23, v22, (uint64_t)v10);
      uint64_t v27 = v12;
      unint64_t v19 = *(void *)(v12 + 16);
      unint64_t v18 = *(void *)(v12 + 24);
      a2 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_1A3CD1228(v18 > 1, v19 + 1, 1);
        uint64_t v12 = v27;
      }
      ++v14;
      *(void *)(v12 + 16) = a2;
      sub_1A3CE31A8((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v19);
      a1 = v4;
      if (v11 == v14) {
        return v12;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A3D5FF8C()
{
  unint64_t result = qword_1E95EE690;
  if (!qword_1E95EE690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE690);
  }
  return result;
}

unint64_t sub_1A3D5FFE0(uint64_t a1)
{
  unint64_t result = sub_1A3CCA084();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D60008(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCEF4C();
  unint64_t result = sub_1A3D60038();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D60038()
{
  unint64_t result = qword_1E95EE6C8;
  if (!qword_1E95EE6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE6C8);
  }
  return result;
}

unint64_t sub_1A3D60090()
{
  unint64_t result = qword_1E95EE6D0;
  if (!qword_1E95EE6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE6D0);
  }
  return result;
}

unint64_t sub_1A3D600E8()
{
  unint64_t result = qword_1E95EE6D8;
  if (!qword_1E95EE6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE6D8);
  }
  return result;
}

uint64_t sub_1A3D6013C()
{
  return sub_1A3D607A0(&qword_1E95ED6D8, (void (*)(uint64_t))type metadata accessor for FaceObservation);
}

unint64_t sub_1A3D60184(uint64_t a1)
{
  unint64_t result = sub_1A3CFDA54();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for DetectFaceRectanglesRequest()
{
  return &type metadata for DetectFaceRectanglesRequest;
}

ValueMetadata *type metadata accessor for DetectFaceRectanglesRequest.Revision()
{
  return &type metadata for DetectFaceRectanglesRequest.Revision;
}

unsigned char *_s6Vision27DetectFaceRectanglesRequestV8RevisionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D602A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectFaceRectanglesRequest.Revision.CodingKeys()
{
  return &type metadata for DetectFaceRectanglesRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectFaceRectanglesRequest.Revision.Revision3CodingKeys()
{
  return &type metadata for DetectFaceRectanglesRequest.Revision.Revision3CodingKeys;
}

ValueMetadata *type metadata accessor for DetectFaceRectanglesRequest.Revision.ANOD3_NoFBBACodingKeys()
{
  return &type metadata for DetectFaceRectanglesRequest.Revision.ANOD3_NoFBBACodingKeys;
}

ValueMetadata *type metadata accessor for DetectFaceRectanglesRequest.Revision.ANOD4_NoFBBACodingKeys()
{
  return &type metadata for DetectFaceRectanglesRequest.Revision.ANOD4_NoFBBACodingKeys;
}

ValueMetadata *type metadata accessor for DetectFaceRectanglesRequest.Revision.ANODv5CodingKeys()
{
  return &type metadata for DetectFaceRectanglesRequest.Revision.ANODv5CodingKeys;
}

ValueMetadata *type metadata accessor for DetectFaceRectanglesRequest.Revision.ExclaveANOD_v5CodingKeys()
{
  return &type metadata for DetectFaceRectanglesRequest.Revision.ExclaveANOD_v5CodingKeys;
}

unint64_t sub_1A3D6032C()
{
  unint64_t result = qword_1E9611310[0];
  if (!qword_1E9611310[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9611310);
  }
  return result;
}

unint64_t sub_1A3D60384()
{
  unint64_t result = qword_1E9611420;
  if (!qword_1E9611420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9611420);
  }
  return result;
}

unint64_t sub_1A3D603DC()
{
  unint64_t result = qword_1E9611428[0];
  if (!qword_1E9611428[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9611428);
  }
  return result;
}

unint64_t sub_1A3D60434()
{
  unint64_t result = qword_1E96114B0;
  if (!qword_1E96114B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96114B0);
  }
  return result;
}

unint64_t sub_1A3D6048C()
{
  unint64_t result = qword_1E96114B8[0];
  if (!qword_1E96114B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96114B8);
  }
  return result;
}

unint64_t sub_1A3D604E4()
{
  unint64_t result = qword_1E9611540;
  if (!qword_1E9611540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9611540);
  }
  return result;
}

unint64_t sub_1A3D6053C()
{
  unint64_t result = qword_1E9611548[0];
  if (!qword_1E9611548[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9611548);
  }
  return result;
}

unint64_t sub_1A3D60594()
{
  unint64_t result = qword_1E96115D0;
  if (!qword_1E96115D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96115D0);
  }
  return result;
}

unint64_t sub_1A3D605EC()
{
  unint64_t result = qword_1E96115D8[0];
  if (!qword_1E96115D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96115D8);
  }
  return result;
}

unint64_t sub_1A3D60644()
{
  unint64_t result = qword_1E9611660;
  if (!qword_1E9611660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9611660);
  }
  return result;
}

unint64_t sub_1A3D6069C()
{
  unint64_t result = qword_1E9611668[0];
  if (!qword_1E9611668[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9611668);
  }
  return result;
}

unint64_t sub_1A3D606F4()
{
  unint64_t result = qword_1E96116F0;
  if (!qword_1E96116F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96116F0);
  }
  return result;
}

unint64_t sub_1A3D6074C()
{
  unint64_t result = qword_1E96116F8[0];
  if (!qword_1E96116F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96116F8);
  }
  return result;
}

uint64_t sub_1A3D607A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static DetectHumanRectanglesRequest.Revision.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL static DetectHumanRectanglesRequest.Revision.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DetectHumanRectanglesRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D60840(uint64_t a1)
{
  unint64_t v2 = sub_1A3D60EBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6087C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D60EBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D608B8()
{
  uint64_t v1 = 0x3576444F4E41;
  if (*v0 != 1) {
    uint64_t v1 = 0x416576616C637865;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F697369766572;
  }
}

uint64_t sub_1A3D60920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D61EC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D60948(uint64_t a1)
{
  unint64_t v2 = sub_1A3D60E14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D60984(uint64_t a1)
{
  unint64_t v2 = sub_1A3D60E14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D609C0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D60E68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D609FC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D60E68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D60A38(uint64_t a1)
{
  unint64_t v2 = sub_1A3D60F10();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D60A74(uint64_t a1)
{
  unint64_t v2 = sub_1A3D60F10();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectHumanRectanglesRequest.Revision.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE6F8);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  id v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE700);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE708);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE710);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  __int16 v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D60E14();
  sub_1A4096FEC();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_1A3D60EBC();
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_1A3D60E68();
      id v17 = v23;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_1A3D60F10();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_1A3D60E14()
{
  unint64_t result = qword_1E9611798;
  if (!qword_1E9611798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9611798);
  }
  return result;
}

unint64_t sub_1A3D60E68()
{
  unint64_t result = qword_1E96117A0;
  if (!qword_1E96117A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96117A0);
  }
  return result;
}

unint64_t sub_1A3D60EBC()
{
  unint64_t result = qword_1E96117A8;
  if (!qword_1E96117A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96117A8);
  }
  return result;
}

unint64_t sub_1A3D60F10()
{
  unint64_t result = qword_1E96117B0[0];
  if (!qword_1E96117B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96117B0);
  }
  return result;
}

uint64_t DetectHumanRectanglesRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectHumanRectanglesRequest.Revision.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE718);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE720);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE728);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE730);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D60E14();
  uint64_t v12 = (uint64_t)v39;
  sub_1A4096FDC();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  __int16 v15 = v11;
  uint64_t v16 = sub_1A4096D3C();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_1A4096ABC();
    swift_allocError();
    id v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *id v23 = &type metadata for DetectHumanRectanglesRequest.Revision;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_1A3D60EBC();
      uint64_t v18 = v30;
      sub_1A4096C7C();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_1A3D60E68();
      uint64_t v25 = v30;
      sub_1A4096C7C();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_1A3D60F10();
    uint64_t v24 = v30;
    sub_1A4096C7C();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1A3D61564@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DetectHumanRectanglesRequest.Revision.init(from:)(a1, a2);
}

uint64_t sub_1A3D6157C(void *a1)
{
  return DetectHumanRectanglesRequest.Revision.encode(to:)(a1);
}

double DetectHumanRectanglesRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(&v8);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 3)
  {
    unint64_t v5 = sub_1A3D61790();
    sub_1A3E2C988((uint64_t)&type metadata for DetectHumanRectanglesRequest, v5, (uint64_t)&v7);
    LOBYTE(v3) = v7;
  }
  *(unsigned char *)a2 = 1;
  *(__n128 *)(a2 + 8) = v8;
  double result = v9[0];
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v9;
  *(unsigned char *)(a2 + 40) = v3;
  *(unsigned char *)(a2 + 41) = 0;
  *(void *)(a2 + 48) = v4;
  return result;
}

uint64_t DetectHumanRectanglesRequest.upperBodyOnly.getter()
{
  return *v0;
}

uint64_t DetectHumanRectanglesRequest.upperBodyOnly.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*DetectHumanRectanglesRequest.upperBodyOnly.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 DetectHumanRectanglesRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 DetectHumanRectanglesRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*DetectHumanRectanglesRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void DetectHumanRectanglesRequest.revision.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

uint64_t sub_1A3D616AC()
{
  unint64_t v0 = sub_1A3D61790();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for DetectHumanRectanglesRequest, v0);
  qword_1E9611788 = result;
  return result;
}

uint64_t static DetectHumanRectanglesRequest.supportedRevisions.getter()
{
  if (qword_1E9611780 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void DetectHumanRectanglesRequest.descriptor.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40) | 8;
  a1[1] = 0;
}

void DetectHumanRectanglesRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

unsigned char *DetectHumanRectanglesRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*DetectHumanRectanglesRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D61790()
{
  unint64_t result = qword_1E95EE738;
  if (!qword_1E95EE738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE738);
  }
  return result;
}

int *sub_1A3D617E4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE7A8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  char v8 = 0;
  uint64_t v1 = sub_1A3D09D64(5, 0, 29);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(5, 0, 29);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(5, 0, 29);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468((uint64_t)&v8, v2, v4, v6, (uint64_t)&type metadata for DetectHumanRectanglesRequest.Revision, v0 + 32);
  qword_1E9643D30 = v0;
  return result;
}

uint64_t DetectHumanRectanglesRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  sub_1A4096F4C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t DetectHumanRectanglesRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1A4096F2C();
  sub_1A4096F4C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3D61A6C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D62D4C();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D61AA8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3D61790();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D61AFC(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3D61790();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D61B50(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40) | 8;
  a1[1] = 0;
}

uint64_t sub_1A3D61B64(uint64_t a1)
{
  unint64_t v2 = sub_1A3D61790();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D61BA8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1A4096F2C();
  sub_1A4096F4C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3D61C90()
{
  if (qword_1E9611790 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D61CEC()
{
  if (*(unsigned __int8 *)(v0 + 40) > 1u) {
    return 6;
  }
  else {
    return sub_1A409617C();
  }
}

uint64_t sub_1A3D61D34(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA030();

  return sub_1A3E2C684(a1, a2);
}

uint64_t sub_1A3D61D80()
{
  return qword_1A40F4E98[*v0];
}

size_t sub_1A3D61D98(size_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(v2 + 16);
  v9[0] = *(_OWORD *)v2;
  v9[1] = v3;
  id v9[2] = *(_OWORD *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 48);
  unint64_t v4 = 2;
  if ((v9[0] & 1) == 0) {
    unint64_t v4 = 7;
  }
  if (v4 >= *(void *)(result + 16))
  {
    __break(1u);
  }
  else
  {
    sub_1A3C8D3F0(result + 32 * v4 + 32, (uint64_t)v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE740);
    if (!swift_dynamicCast()) {
      return MEMORY[0x1E4FBC860];
    }
    sub_1A3D109F0((uint64_t)v9);
    size_t v6 = sub_1A3D62374(v7, (unint64_t)v9, a2);
    sub_1A3D10A1C((uint64_t)v9);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

size_t sub_1A3D61E98(size_t a1, uint64_t a2)
{
  return sub_1A3D61D98(a1, a2);
}

id sub_1A3D61EB0(uint64_t a1)
{
  return sub_1A3D62120(a1);
}

uint64_t sub_1A3D61EC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697369766572 && a2 == 0xE900000000000032;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x3576444F4E41 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x416576616C637865 && a2 == 0xEE0035765F444F4ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t _s6Vision28DetectHumanRectanglesRequestV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  unsigned __int8 v2 = a1[41];
  uint64_t v3 = *((void *)a1 + 6);
  unsigned __int8 v4 = a2[41];
  uint64_t v5 = *((void *)a2 + 6);
  int v6 = a2[40];
  int v7 = a1[40];
  CGSize v8 = *(CGSize *)(a1 + 24);
  v12.origin = *(CGPoint *)(a1 + 8);
  v12.size = v8;
  CGSize v9 = *(CGSize *)(a2 + 24);
  v11.origin = *(CGPoint *)(a2 + 8);
  v11.size = v9;
  if (!static NormalizedRect.== infix(_:_:)(&v12, &v11)) {
    return 0;
  }
  if (v7 != v6) {
    return 0;
  }
  LOBYTE(v12.origin.x) = v2;
  LOBYTE(v11.origin.x) = v4;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v12, (unsigned __int8 *)&v11)) {
    return 0;
  }

  return sub_1A3C8FF4C(v3, v5);
}

id sub_1A3D62120(uint64_t a1)
{
  char v4 = *v1;
  uint64_t v5 = v1[40];
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8C73C(0, &qword_1E95EDEB8);
  id result = objc_msgSend(ObjCClassFromMetadata, sel_isSubclassOfClass_, swift_getObjCClassFromMetadata());
  if (result)
  {
    uint64_t v28 = v5;
    uint64_t v8 = sub_1A409617C();
    uint64_t v10 = v9;
    uint64_t v27 = MEMORY[0x1E4FBB390];
    LOBYTE(v26[0]) = v4 ^ 1;
    CGRect v11 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
    CGRect v12 = (void (*)(unsigned char *, void))v11(v25);
    sub_1A3C8BC40((uint64_t)v26, v8, v10);
    v12(v25, 0);
    uint64_t v13 = sub_1A409617C();
    uint64_t v15 = v14;
    uint64_t v27 = MEMORY[0x1E4FBB390];
    LOBYTE(v26[0]) = v4;
    uint64_t v16 = (void (*)(unsigned char *, void))v11(v25);
    sub_1A3C8BC40((uint64_t)v26, v13, v15);
    v16(v25, 0);
    uint64_t v17 = sub_1A409617C();
    uint64_t v19 = v18;
    uint64_t v20 = qword_1A40F4E98[v28];
    uint64_t v21 = sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EC718);
    uint64_t v22 = sub_1A3C8C73C(0, &qword_1E95EE7A0);
    id v23 = sub_1A3CA42A0(v22, v20);
    if (v2)
    {
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = v21;
      v26[0] = v23;
      uint64_t v24 = (uint64_t (*)(unsigned char *, void))v11(v25);
      sub_1A3C8BC40((uint64_t)v26, v17, v19);
      return (id)v24(v25, 0);
    }
  }
  return result;
}

size_t sub_1A3D62374(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v22 = a3;
  uint64_t v7 = type metadata accessor for HumanObservation();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if (!v11) {
      return v12;
    }
    uint64_t v27 = MEMORY[0x1E4FBC860];
    size_t result = sub_1A3CD100C(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0) {
      break;
    }
    uint64_t v14 = 0;
    uint64_t v12 = v27;
    v20[1] = v4;
    unint64_t v21 = a1 & 0xC000000000000001;
    __int16 v15 = *(unsigned __int8 *)(a2 + 40) | 8;
    long long v16 = *(_OWORD *)(a2 + 24);
    long long v25 = *(_OWORD *)(a2 + 8);
    long long v26 = v16;
    uint64_t v4 = a1;
    while (v11 != v14)
    {
      if (v21) {
        id v17 = (id)MEMORY[0x1A6254720](v14, a1);
      }
      else {
        id v17 = *(id *)(a1 + 8 * v14 + 32);
      }
      __int16 v24 = v15;
      v23[0] = v25;
      v23[1] = v26;
      sub_1A3C7FF60(v17, &v24, v23, v22, (uint64_t)v10);
      uint64_t v27 = v12;
      unint64_t v19 = *(void *)(v12 + 16);
      unint64_t v18 = *(void *)(v12 + 24);
      a2 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_1A3CD100C(v18 > 1, v19 + 1, 1);
        uint64_t v12 = v27;
      }
      ++v14;
      *(void *)(v12 + 16) = a2;
      sub_1A3C813C4((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v19);
      a1 = v4;
      if (v11 == v14) {
        return v12;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A3D62594()
{
  unint64_t result = qword_1E95EE748[0];
  if (!qword_1E95EE748[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95EE748);
  }
  return result;
}

unint64_t sub_1A3D625E8(uint64_t a1)
{
  unint64_t result = sub_1A3CCA030();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D62610(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCEEF8();
  unint64_t result = sub_1A3D62640();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D62640()
{
  unint64_t result = qword_1E95EE780;
  if (!qword_1E95EE780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE780);
  }
  return result;
}

unint64_t sub_1A3D62698()
{
  unint64_t result = qword_1E95EE788;
  if (!qword_1E95EE788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE788);
  }
  return result;
}

unint64_t sub_1A3D626F0()
{
  unint64_t result = qword_1E95EE790;
  if (!qword_1E95EE790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE790);
  }
  return result;
}

uint64_t sub_1A3D62744()
{
  return sub_1A3D62DA0(&qword_1E95EBF70, (void (*)(uint64_t))type metadata accessor for HumanObservation);
}

unint64_t sub_1A3D6278C(uint64_t a1)
{
  unint64_t result = sub_1A3D61790();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t initializeWithCopy for DetectHumanRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectHumanRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectHumanRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DetectHumanRectanglesRequest()
{
  return &type metadata for DetectHumanRectanglesRequest;
}

ValueMetadata *type metadata accessor for DetectHumanRectanglesRequest.Revision()
{
  return &type metadata for DetectHumanRectanglesRequest.Revision;
}

unsigned char *_s6Vision28DetectHumanRectanglesRequestV8RevisionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D629CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectHumanRectanglesRequest.Revision.CodingKeys()
{
  return &type metadata for DetectHumanRectanglesRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectHumanRectanglesRequest.Revision.Revision2CodingKeys()
{
  return &type metadata for DetectHumanRectanglesRequest.Revision.Revision2CodingKeys;
}

ValueMetadata *type metadata accessor for DetectHumanRectanglesRequest.Revision.ANODv5CodingKeys()
{
  return &type metadata for DetectHumanRectanglesRequest.Revision.ANODv5CodingKeys;
}

ValueMetadata *type metadata accessor for DetectHumanRectanglesRequest.Revision.ExclaveANOD_v5CodingKeys()
{
  return &type metadata for DetectHumanRectanglesRequest.Revision.ExclaveANOD_v5CodingKeys;
}

unint64_t sub_1A3D62A38()
{
  unint64_t result = qword_1E96121C0[0];
  if (!qword_1E96121C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96121C0);
  }
  return result;
}

unint64_t sub_1A3D62A90()
{
  unint64_t result = qword_1E96122D0;
  if (!qword_1E96122D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96122D0);
  }
  return result;
}

unint64_t sub_1A3D62AE8()
{
  unint64_t result = qword_1E96122D8[0];
  if (!qword_1E96122D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96122D8);
  }
  return result;
}

unint64_t sub_1A3D62B40()
{
  unint64_t result = qword_1E9612360;
  if (!qword_1E9612360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612360);
  }
  return result;
}

unint64_t sub_1A3D62B98()
{
  unint64_t result = qword_1E9612368[0];
  if (!qword_1E9612368[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9612368);
  }
  return result;
}

unint64_t sub_1A3D62BF0()
{
  unint64_t result = qword_1E96123F0;
  if (!qword_1E96123F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96123F0);
  }
  return result;
}

unint64_t sub_1A3D62C48()
{
  unint64_t result = qword_1E96123F8[0];
  if (!qword_1E96123F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96123F8);
  }
  return result;
}

unint64_t sub_1A3D62CA0()
{
  unint64_t result = qword_1E9612480;
  if (!qword_1E9612480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612480);
  }
  return result;
}

unint64_t sub_1A3D62CF8()
{
  unint64_t result = qword_1E9612488[0];
  if (!qword_1E9612488[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9612488);
  }
  return result;
}

unint64_t sub_1A3D62D4C()
{
  unint64_t result = qword_1E95EE798;
  if (!qword_1E95EE798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE798);
  }
  return result;
}

uint64_t sub_1A3D62DA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D62DEC()
{
  unint64_t result = qword_1E95EE7B0;
  if (!qword_1E95EE7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EE7B0);
  }
  return result;
}

uint64_t sub_1A3D62E40@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  long long v3 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 48);
  char v4 = *(unsigned char *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 25);
  char v6 = *(unsigned char *)(v1 + 26);
  char v7 = *(unsigned char *)(v1 + 27);
  uint64_t v8 = *(void *)(v1 + 32);
  char v9 = *(unsigned char *)(v1 + 40);
  char v10 = *(unsigned char *)(v1 + 41);
  char v11 = *(unsigned char *)(v1 + 80);
  uint64_t v13 = *(void *)(v1 + 88);
  uint64_t v12 = *(void *)(v1 + 96);
  uint64_t v14 = *(void *)(v1 + 104);
  *(unsigned char *)a1 = v4;
  *(unsigned char *)(a1 + 1) = v5;
  *(unsigned char *)(a1 + 2) = v6;
  *(unsigned char *)(a1 + 3) = v7;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 17) = v10;
  *(_OWORD *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D62EF4(char *a1)
{
  char v2 = *a1;
  char v3 = a1[1];
  char v4 = a1[2];
  char v5 = a1[3];
  uint64_t v6 = *((void *)a1 + 1);
  char v7 = a1[16];
  char v16 = a1[17];
  long long v15 = *(_OWORD *)(a1 + 24);
  uint64_t v8 = *((void *)a1 + 5);
  uint64_t v9 = *((void *)a1 + 6);
  char v10 = a1[56];
  uint64_t v11 = *((void *)a1 + 9);
  uint64_t v14 = *((void *)a1 + 8);
  uint64_t v12 = *((void *)a1 + 10);
  swift_beginAccess();
  *(unsigned char *)(v1 + 24) = v2;
  *(unsigned char *)(v1 + 25) = v3;
  *(unsigned char *)(v1 + 26) = v4;
  *(unsigned char *)(v1 + 27) = v5;
  *(void *)(v1 + 32) = v6;
  *(unsigned char *)(v1 + 40) = v7;
  *(unsigned char *)(v1 + 41) = v16;
  *(_OWORD *)(v1 + 48) = v15;
  *(void *)(v1 + 64) = v8;
  *(void *)(v1 + 72) = v9;
  *(unsigned char *)(v1 + 80) = v10;
  *(void *)(v1 + 88) = v14;
  *(void *)(v1 + 96) = v11;
  *(void *)(v1 + 104) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D63018(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A3D63070(a1);
  return v2;
}

uint64_t sub_1A3D63070(uint64_t a1)
{
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  sub_1A3C85678(a1, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBFD8);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    int v23 = v12;
    DetectBarcodesRequest.descriptor.getter(v21);
    int v22 = LOBYTE(v21[0]);
    char v9 = HIBYTE(v21[0]);
    unint64_t v3 = sub_1A3D62DEC();
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_1A3D4507C((uint64_t)&type metadata for DetectBarcodesRequest, v3);
    uint64_t v5 = v4;
    swift_bridgeObjectRetain();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_1A3D45604(v6, &type metadata for DetectBarcodesRequest, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    __swift_destroy_boxed_opaque_existential_1(a1);
    *(unsigned char *)(v1 + 24) = v22;
    *(unsigned char *)(v1 + 25) = v9;
    *(unsigned char *)(v1 + 26) = v17;
    *(unsigned char *)(v1 + 27) = v23;
    *(void *)(v1 + 32) = v11;
    *(unsigned char *)(v1 + 40) = v18;
    *(unsigned char *)(v1 + 41) = v19;
    *(void *)(v1 + 48) = v13;
    *(void *)(v1 + 56) = v14;
    *(void *)(v1 + 64) = v15;
    *(void *)(v1 + 72) = v16;
    *(unsigned char *)(v1 + 80) = v20;
    *(void *)(v1 + 88) = v8;
    *(void *)(v1 + 96) = v5;
    *(void *)(v1 + 104) = v7;
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D632E0()
{
  void (*v1)(uint64_t *__return_ptr);
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void v13[9];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr))(*(void *)v0 + 120);
  v1(&v16);
  uint64_t v2 = v16;
  unint64_t v3 = BYTE1(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3) {
    uint64_t v4 = 32;
  }
  else {
    uint64_t v4 = 0;
  }
  if ((v4 | (v2 >> 3)) != 6)
  {
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    uint64_t v5 = sub_1A4096A2C();
    ((void (*)(void *__return_ptr, uint64_t))v1)(v13, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3CFB1AC();
    uint64_t v6 = sub_1A4096E1C();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    uint64_t v14 = v6;
    uint64_t v15 = v8;
    sub_1A409621C();
    char v9 = v14;
    char v10 = v15;
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v11 = v9;
    *(void *)(v11 + 8) = v10;
    *(_DWORD *)(v11 + 16) = 0;
    *(unsigned char *)(v11 + 20) = 18;
    swift_willThrow();
  }
  return 0x40000;
}

uint64_t sub_1A3D63484()
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v0 + 120))(&v3);
  uint64_t v1 = SBYTE2(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(void *)&asc_1A40F4F80[8 * v1];
}

id sub_1A3D63504(char *a1)
{
  return **((id **)&unk_1E5B1A5B0 + *a1);
}

id sub_1A3D6351C()
{
  void (*v6)(void *__return_ptr);
  int v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t (*v13)(void *);
  char v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void v22[2];
  id v23;

  uint64_t v2 = v0;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA60]), sel_init);
  (*(void (**)(void))(*(void *)v0 + 168))();
  uint64_t v4 = (void *)sub_1A409660C();
  objc_msgSend(v3, sel_setValue_forKey_, v4, *MEMORY[0x1E4F942A8]);

  uint64_t v5 = (void *)sub_1A4096FCC();
  objc_msgSend(v3, sel_setValue_forKey_, v5, *MEMORY[0x1E4F94290]);

  uint64_t v6 = *(void (**)(void *__return_ptr))(*(void *)v2 + 120);
  v6(v22);
  uint64_t v7 = BYTE3(v22[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7 == 1)
  {
    uint64_t v8 = (void *)sub_1A409642C();
    objc_msgSend(v3, sel_setValue_forKey_, v8, *MEMORY[0x1E4F942B0]);
  }
  v6(v22);
  char v9 = (void *)v22[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    char v10 = v9[2];
    if (v10) {
      goto LABEL_5;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1A3C85624();
    swift_allocError();
    *(void *)char v19 = 0xD000000000000049;
    *(void *)(v19 + 8) = 0x80000001A40B5A40;
    *(_DWORD *)(v19 + 16) = 0;
    *(unsigned char *)(v19 + 20) = 2;
    swift_willThrow();

    return v3;
  }
  char v9 = static BarcodeSymbology.allCases.getter();
  char v10 = v9[2];
  if (!v10) {
    goto LABEL_10;
  }
LABEL_5:
  int v23 = v3;
  sub_1A3C8C73C(0, &qword_1E95EE7B8);
  uint64_t v11 = (void *)MEMORY[0x1A62544D0](MEMORY[0x1E4FBC860]);
  unsigned __int8 v12 = 0;
  uint64_t v13 = *(uint64_t (**)(void *))(*(void *)v2 + 176);
  do
  {
    uint64_t v14 = *((unsigned char *)v9 + v12++ + 32);
    LOBYTE(v22[0]) = v14;
    uint64_t v15 = (void *)v13(v22);
    objc_msgSend(v11, sel_addObject_, v15);
  }
  while (v10 != v12);
  swift_bridgeObjectRelease();
  uint64_t v16 = *MEMORY[0x1E4F942C0];
  char v17 = v11;
  id v3 = v23;
  ((void (*)(void *__return_ptr, id))v6)(v22, objc_msgSend(v23, sel_setValue_forKey_, v17, v16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v18 = (void *)sub_1A409642C();
  objc_msgSend(v3, sel_setValue_forKey_, v18, *MEMORY[0x1E4F942B8]);

  (*(void (**)(void))(*(void *)v2 + 160))();
  if (v1)
  {
  }
  else
  {
    char v20 = (void *)sub_1A409660C();
    objc_msgSend(v3, sel_setValue_forKey_, v20, *MEMORY[0x1E4F94298]);
  }
  return v3;
}

id sub_1A3D638E0(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  v18[1] = *(id *)MEMORY[0x1E4F143B8];
  double Width = CGRectGetWidth(*(CGRect *)&a2);
  if ((~*(void *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v19.origin.CGFloat x = a2;
  v19.origin.CGFloat y = a3;
  v19.size.CGFloat width = a4;
  v19.size.CGFloat height = a5;
  double Height = CGRectGetHeight(v19);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  if (Height >= 9.22337204e18) {
    goto LABEL_16;
  }
  v18[0] = 0;
  unsigned __int8 v12 = (__CVBuffer *)objc_msgSend(a1, sel_croppedBufferWithWidth_height_format_cropRect_options_error_, (uint64_t)Width, (uint64_t)Height, 875704422, 0, v18, a2, a3, a4, a5);
  id v13 = v18[0];
  if (v12)
  {
    uint64_t v14 = v12;
    id v15 = v18[0];
    CVPixelBufferGetWidth(v14);
    CVPixelBufferGetHeight(v14);
    id v13 = (id)MRCSampleCreateWithCVPixelBuffer();
  }
  else
  {
    id v16 = v18[0];
    sub_1A4095AEC();

    swift_willThrow();
  }
  return v13;
}

char *sub_1A3D63AB0(uint64_t a1, size_t a2, size_t a3)
{
  if (MRCDescriptorCopyAttribute())
  {
    type metadata accessor for CFArray(0);
    CFArrayRef v6 = (const __CFArray *)(id)swift_dynamicCastUnknownClassUnconditional();
    if (CFArrayGetCount(v6) == 4)
    {
      uint64_t v7 = (id)(id)CFArrayGetValueAtIndex(v6, 0);
      double v8 = COERCE_DOUBLE(sub_1A409682C());
      double v10 = v9;
      if (v11)
      {
        double v10 = 0.0;
        double v8 = 0.0;
      }
      VNNormalizedPointForImagePoint(*(CGPoint *)&v8, a2, a3);
      VNVerticallyFlippedNormalizedPoint();
      uint64_t v13 = v12;
      uint64_t v15 = v14;
      id v3 = sub_1A3D650BC(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v17 = *((void *)v3 + 2);
      unint64_t v16 = *((void *)v3 + 3);
      if (v17 >= v16 >> 1) {
        id v3 = sub_1A3D650BC((char *)(v16 > 1), v17 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v17 + 1;
      char v18 = &v3[16 * v17];
      *((void *)v18 + 4) = v13;
      *((void *)v18 + 5) = v15;

      CGRect v19 = (id)(id)CFArrayGetValueAtIndex(v6, 1);
      double v20 = COERCE_DOUBLE(sub_1A409682C());
      double v22 = v21;
      if (v23)
      {
        double v22 = 0.0;
        double v20 = 0.0;
      }
      VNNormalizedPointForImagePoint(*(CGPoint *)&v20, a2, a3);
      VNVerticallyFlippedNormalizedPoint();
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      unint64_t v29 = *((void *)v3 + 2);
      unint64_t v28 = *((void *)v3 + 3);
      if (v29 >= v28 >> 1) {
        id v3 = sub_1A3D650BC((char *)(v28 > 1), v29 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v29 + 1;
      uint64_t v30 = &v3[16 * v29];
      *((void *)v30 + 4) = v25;
      *((void *)v30 + 5) = v27;

      uint64_t v31 = (id)(id)CFArrayGetValueAtIndex(v6, 2);
      double v32 = COERCE_DOUBLE(sub_1A409682C());
      double v34 = v33;
      if (v35)
      {
        double v34 = 0.0;
        double v32 = 0.0;
      }
      VNNormalizedPointForImagePoint(*(CGPoint *)&v32, a2, a3);
      VNVerticallyFlippedNormalizedPoint();
      uint64_t v37 = v36;
      uint64_t v39 = v38;
      unint64_t v41 = *((void *)v3 + 2);
      unint64_t v40 = *((void *)v3 + 3);
      if (v41 >= v40 >> 1) {
        id v3 = sub_1A3D650BC((char *)(v40 > 1), v41 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v41 + 1;
      char v42 = &v3[16 * v41];
      *((void *)v42 + 4) = v37;
      *((void *)v42 + 5) = v39;

      uint64_t v43 = (id)(id)CFArrayGetValueAtIndex(v6, 3);
      double v44 = COERCE_DOUBLE(sub_1A409682C());
      double v46 = v45;
      if (v47)
      {
        double v46 = 0.0;
        double v44 = 0.0;
      }
      VNNormalizedPointForImagePoint(*(CGPoint *)&v44, a2, a3);
      VNVerticallyFlippedNormalizedPoint();
      uint64_t v49 = v48;
      uint64_t v51 = v50;
      unint64_t v53 = *((void *)v3 + 2);
      unint64_t v52 = *((void *)v3 + 3);
      if (v53 >= v52 >> 1) {
        id v3 = sub_1A3D650BC((char *)(v52 > 1), v53 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v53 + 1;
      uint64_t v54 = &v3[16 * v53];
      *((void *)v54 + 4) = v49;
      *((void *)v54 + 5) = v51;
    }
    else
    {
      sub_1A3C85624();
      swift_allocError();
      *(void *)uint64_t v56 = 0xD000000000000025;
      *(void *)(v56 + 8) = 0x80000001A40B5AC0;
      *(_DWORD *)(v56 + 16) = 0;
      *(unsigned char *)(v56 + 20) = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v55 = 0xD000000000000022;
    *(void *)(v55 + 8) = 0x80000001A40B5A90;
    *(_DWORD *)(v55 + 16) = 0;
    *(unsigned char *)(v55 + 20) = 0;
    swift_willThrow();
  }
  return v3;
}

void type metadata accessor for CFArray(uint64_t a1)
{
}

void sub_1A3D63E5C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>)
{
  if (!MRCDescriptorCopyAttribute()) {
    goto LABEL_26;
  }
  type metadata accessor for CFString(0);
  id v16 = (id)swift_dynamicCastUnknownClassUnconditional();
  sub_1A3D6A3F0(v16, (char *)&v36);
  char v17 = v36;
  if (v36 == 25)
  {
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v18 = 0xD000000000000015;
    *(void *)(v18 + 8) = 0x80000001A40B5AF0;
    *(_DWORD *)(v18 + 16) = 0;
    *(unsigned char *)(v18 + 20) = 0;
    swift_willThrow();
LABEL_17:

    return;
  }
  v39.origin.CGFloat x = a4;
  v39.origin.CGFloat y = a5;
  v39.size.CGFloat width = a6;
  v39.size.CGFloat height = a7;
  double Width = CGRectGetWidth(v39);
  if ((~*(void *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v40.origin.CGFloat x = a4;
  v40.origin.CGFloat y = a5;
  v40.size.CGFloat width = a6;
  v40.size.CGFloat height = a7;
  double Height = CGRectGetHeight(v40);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (Height >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  double v21 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v7 + 200))(a1, (uint64_t)Width, (uint64_t)Height);
  if (v8) {
    goto LABEL_17;
  }
  char v38 = v17;
  unint64_t v22 = v21[2];
  if (v22)
  {
    if (v22 >= 4)
    {
      unint64_t v24 = v21[4];
      unint64_t v23 = v21[5];
      unint64_t v25 = v21[10];
      unint64_t v26 = v21[11];
      unint64_t v28 = v21[8];
      unint64_t v27 = v21[9];
      unint64_t v29 = v21[6];
      unint64_t v30 = v21[7];
      id v31 = a1;
      uint64_t v32 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v7 + 120))(&v36, v32);
      __int16 v33 = v36;
      int v34 = BYTE1(v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v34) {
        __int16 v35 = 256;
      }
      else {
        __int16 v35 = 0;
      }
      __int16 v37 = v35 | v33;
      sub_1A3D3CEE0(v31, &v38, &v37, a2, a3, v24, v23, v25, v26, v28, v27, v29, v30);
      goto LABEL_17;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
}

id sub_1A3D64158(void *a1)
{
  void (*v10)(long long *__return_ptr, __n128);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v22;
  void (*v23)(long long *__return_ptr);
  uint64_t v24;
  void *v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  id v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  void *v42;
  void (*v43)(long long *__return_ptr, uint64_t);
  int v44;
  uint64_t v45;
  void *v46;
  uint64_t (**v47)(void);
  uint64_t (*v48)(void *);
  void *v49;
  id v50;
  uint64_t (*v51)(void *);
  void (*v52)(long long *, void);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(long long *, void);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(long long *, void);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(long long *__return_ptr, uint64_t);
  uint64_t (*v66)(void *, void);
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  uint64_t v72;
  void *v73;
  double v74;
  double v75;
  double v76;
  double v77;
  id v78;
  id v79;
  void *v80;
  void *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  uint64_t DescriptorCount;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(long long *__return_ptr, uint64_t);
  uint64_t v94;
  void *v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t (*v101)(void *);
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  void (*v107)(long long *__return_ptr, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  id v112;
  void *v113;
  long long v114;
  long long v115;
  void v116[4];
  long long v117;
  unsigned __int8 v118;
  uint64_t v119;
  double v120;
  double v121;
  double v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127[52];
  uint64_t v128;

  uint64_t v113 = a1;
  uint64_t v2 = v1;
  uint64_t v128 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = type metadata accessor for BarcodeObservation();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  CFArrayRef v6 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = MEMORY[0x1F4188790](v7);
  uint64_t v111 = (uint64_t)&v100 - v9;
  double v10 = *(void (**)(long long *__return_ptr, __n128))(*v1 + 120);
  char v11 = *v1 + 120;
  v10(&v117, v8);
  uint64_t v12 = v124;
  uint64_t v13 = v125;
  uint64_t v14 = (id)*((void *)&v117 + 1);
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_4;
  }
  id v109 = v4;
  uint64_t v110 = v6;
  id v16 = (void *)v113[10];
  ((void (*)(long long *__return_ptr, uint64_t))v10)(&v117, v15);
  char v17 = v126;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v16;
  uint64_t v18 = v112;
  CGRect v19 = sub_1A3DE48CC(v12, v13, v17);
  if (v18)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    sub_1A3C85624();
    swift_allocError();
    *(void *)double v20 = 0xD000000000000022;
    *(void *)(v20 + 8) = 0x80000001A40B5B10;
    *(_DWORD *)(v20 + 16) = 0;
    *(unsigned char *)(v20 + 20) = 8;
    swift_willThrow();
    return v14;
  }
  unint64_t v22 = v19;
  id v108 = v11;
  unint64_t v23 = (void (*)(long long *__return_ptr))v10;
  swift_bridgeObjectRelease();
  unint64_t v24 = swift_bridgeObjectRelease();
  unint64_t v25 = (void *)(*(uint64_t (**)(uint64_t))(*v2 + 184))(v24);
  unint64_t v26 = (void *)(*(uint64_t (**)(void))(*v113 + 120))();
  v23(&v117);
  unint64_t v27 = *(double *)&v119;
  unint64_t v28 = v120;
  unint64_t v29 = v121;
  unint64_t v30 = v122;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v26, sel_width);
  uint64_t v32 = objc_msgSend(v26, sel_height);
  type metadata accessor for BarcodeDetectorPerformingOperation();
  __int16 v33 = (uint64_t)v31;
  uint64_t v14 = v2;
  sub_1A3D28E34(v33, (uint64_t)v32, v27, v28, v29, v30);
  __int16 v35 = v34;
  __int16 v37 = v36;
  CGRect v39 = v38;
  unint64_t v41 = v40;
  char v42 = (void *)(*(uint64_t (**)(void *))(*v2 + 192))(v26);
  if (v42)
  {
    char v105 = v22;
    unint64_t v106 = v42;
    int v112 = v26;
    uint64_t v43 = (void (*)(long long *__return_ptr, uint64_t))v23;
    v23(&v117);
    double v44 = v118;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v45 = swift_bridgeObjectRelease();
    if (v44 == 1)
    {
      v43(&v114, v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    double v46 = (void *)v113[11];
    char v47 = (uint64_t (**)(void))(*v2 + 136);
    uint64_t v48 = *v47;
    id v107 = v43;
    uint64_t v49 = v47;
    uint64_t v50 = v46;
    uint64_t v51 = (uint64_t (*)(void *))v48;
    unint64_t v52 = (void (*)(long long *, void))v48(&v117);
    sub_1A3DAC2B4(v46);
    v52(&v117, 0);
    unint64_t v53 = sub_1A409617C();
    uint64_t v55 = v54;
    *(double *)&uint64_t v119 = COERCE_DOUBLE(sub_1A3C8C73C(0, (unint64_t *)&unk_1E95EF710));
    *(void *)&uint64_t v117 = v25;
    uint64_t v104 = v25;
    unint64_t v101 = v51;
    uint64_t v56 = v51(&v114);
    uint64_t v102 = v49;
    char v57 = (void (*)(long long *, void))v56;
    sub_1A3C8BC40((uint64_t)&v117, v53, v55);
    v57(&v114, 0);
    char v58 = sub_1A409617C();
    char v60 = v59;
    type metadata accessor for MRCSample(0);
    uint64_t v119 = v61;
    *(void *)&uint64_t v117 = v106;
    uint64_t v103 = v106;
    uint64_t v62 = (void (*)(long long *, void))v51(&v114);
    sub_1A3C8BC40((uint64_t)&v117, v58, v60);
    v62(&v114, 0);
    unint64_t v106 = (id)sub_1A409617C();
    uint64_t v64 = v63;
    uint64_t v65 = v107;
    ((void (*)(long long *__return_ptr))v107)(&v117);
    LOBYTE(v58) = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *((void *)&v115 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v114) = v58;
    uint64_t v66 = (uint64_t (*)(void *, void))v101(v116);
    sub_1A3C8BC40((uint64_t)&v114, (uint64_t)v106, v64);
    uint64_t v67 = v66(v116, 0);
    v65(&v117, v67);
    uint64_t v68 = v126;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3C8F944(v68);
    swift_bridgeObjectRelease();
    uint64_t v69 = objc_allocWithZone(MEMORY[0x1E4F1CA60]);
    uint64_t v70 = (void *)sub_1A409600C();
    swift_bridgeObjectRelease();
    uint64_t v71 = objc_msgSend(v69, sel_initWithDictionary_, v70);

    uint64_t v72 = qos_class_self();
    ((void (*)(long long *__return_ptr))v107)(&v117);
    uint64_t v73 = v71;
    uint64_t v74 = *(double *)&v119;
    uint64_t v75 = v120;
    uint64_t v76 = v121;
    uint64_t v77 = v122;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&uint64_t v114 = 0;
    unint64_t v78 = v105;
    uint64_t v79 = objc_msgSend(v105, sel_processUsingQualityOfServiceClass_options_regionOfInterest_warningRecorder_error_progressHandler_, v72, v73, 0, &v114, 0, v74, v75, v76, v77);
    uint64_t v80 = (void *)v114;
    if (v79)
    {
      id v81 = v79;
      uint64_t v102 = v73;
      __int16 v82 = sub_1A409630C();
      id v83 = v80;

      if (*(void *)(v82 + 16))
      {
        sub_1A3C8D3F0(v82 + 32, (uint64_t)&v114);
      }
      else
      {
        uint64_t v114 = 0u;
        uint64_t v115 = 0u;
      }
      BOOL v86 = v104;
      id v85 = v105;
      uint64_t v87 = v113;
      unint64_t v88 = v103;
      swift_bridgeObjectRelease();
      if (*((void *)&v115 + 1))
      {
        sub_1A3C856F4(&v114, &v117);
        sub_1A3C8D3F0((uint64_t)&v117, (uint64_t)&v114);
        type metadata accessor for MRCDecoderResult(0);
        swift_dynamicCast();
        uint64_t v113 = (void *)v116[0];
        DescriptorCount = MRCDecoderResultGetDescriptorCount();
        if (DescriptorCount < 0) {
          __break(1u);
        }
        uint64_t v90 = DescriptorCount;
        uint64_t v91 = v111;
        if (DescriptorCount)
        {
          uint64_t v92 = *v2;
          id v108 = (uint64_t)v2;
          uint64_t v93 = *(void (**)(void *__return_ptr))(v92 + 208);
          unint64_t v106 = (id)(v92 + 208);
          id v107 = (void (*)(long long *__return_ptr, uint64_t))v93;
          sub_1A3C7D648((uint64_t)(v87 + 3), (uint64_t)v127);
          uint64_t v94 = 0;
          uint64_t v95 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            uint64_t v96 = (id)MRCDecoderResultGetDescriptorAtIndex();
            ((void (*)(double, double, double, double))v107)(v35, v37, v39, v41);
            sub_1A3D3F828(v91, (uint64_t)v110);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v95 = (void *)sub_1A3D65204(0, v95[2] + 1, 1, v95);
            }
            uint64_t v98 = v95[2];
            uint64_t v97 = v95[3];
            if (v98 >= v97 >> 1) {
              uint64_t v95 = (void *)sub_1A3D65204(v97 > 1, v98 + 1, 1, v95);
            }
            ++v94;
            v95[2] = v98 + 1;
            sub_1A3D653D8((uint64_t)v110, (uint64_t)v95+ ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80))+ *(void *)(v109 + 72) * v98);

            uint64_t v91 = v111;
            sub_1A3D3F88C(v111);
            uint64_t v99 = v112;
          }
          while (v90 != v94);
        }
        else
        {
          uint64_t v95 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v99 = v112;
        }
        uint64_t v14 = (id)sub_1A3D64C30((uint64_t)v95);
        swift_bridgeObjectRelease();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
      }
      else
      {
        sub_1A3C8C778((uint64_t)&v114);

        return (id)MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      uint64_t v14 = (id)v114;
      sub_1A4095AEC();

      swift_willThrow();
    }
  }
  else
  {
    sub_1A3C85624();
    swift_allocError();
    *(void *)id v84 = 0xD000000000000024;
    *(void *)(v84 + 8) = 0x80000001A40B5B40;
    *(_DWORD *)(v84 + 16) = 0;
    *(unsigned char *)(v84 + 20) = 8;
    swift_willThrow();
  }
  return v14;
}

uint64_t sub_1A3D64C30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BarcodeObservation();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1A3C84648(0, v6, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1A3D3F828(v8, (uint64_t)v5);
      swift_dynamicCast();
      uint64_t v7 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A3C84648(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v15;
      }
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1A3C84648((char *)(v10 > 1), v11 + 1, 1);
        uint64_t v7 = v15;
      }
      *(void *)(v7 + 16) = v11 + 1;
      sub_1A3C856F4(&v14, (_OWORD *)(v7 + 32 * v11 + 32));
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1A3D64DE0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1A3D64E44()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_1A3D64E68()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

void (*sub_1A3D64E8C(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 112))();
  return sub_1A3C8B9D4;
}

uint64_t sub_1A3D64F04()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_1A3D64F28()
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 216))();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_1A3D65714(v3, v1, v2);
}

uint64_t sub_1A3D64FE4()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1A3D6500C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A3C9FEEC;
  return sub_1A3D28EA4(a1, a2, (uint64_t)&off_1EF74F248);
}

char *sub_1A3D650BC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95F00C0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for BarcodeDetectorPerformingOperation()
{
  return self;
}

void type metadata accessor for MRCSample(uint64_t a1)
{
}

void type metadata accessor for MRCDecoderResult(uint64_t a1)
{
}

size_t sub_1A3D65204(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED1B8);
  uint64_t v10 = *(void *)(type metadata accessor for BarcodeObservation() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  __n128 v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for BarcodeObservation() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

uint64_t sub_1A3D653D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BarcodeObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for BarcodeDetectorPerformingOperation.Options()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BarcodeDetectorPerformingOperation.Options(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v3 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v3;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BarcodeDetectorPerformingOperation.Options(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BarcodeDetectorPerformingOperation.Options(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BarcodeDetectorPerformingOperation.Options(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BarcodeDetectorPerformingOperation.Options(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BarcodeDetectorPerformingOperation.Options()
{
  return &type metadata for BarcodeDetectorPerformingOperation.Options;
}

uint64_t sub_1A3D65714(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1A3D65728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  MEMORY[0x1A6253D40](a1, v4, AssociatedTypeWitness, &type metadata for Joint, AssociatedConformanceWitness);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D65800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  double v45 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t AssociatedConformanceWitness = v6;
  uint64_t v47 = a2;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1A409692C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = *(void *)(v12 - 8);
  __n128 v19 = MEMORY[0x1F4188790](v18);
  double v21 = (char *)&v35 - v20;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, a1, v13, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(v47, a3);
  }
  unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v38 = v12;
  v23(v21, v16, v12);
  unint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 32);
  uint64_t v44 = a3;
  uint64_t v25 = v24(v21, v47, a3);
  uint64_t v37 = v17;
  uint64_t v36 = v21;
  if (!v25) {
    uint64_t v25 = sub_1A409635C();
  }
  uint64_t v26 = v25;
  swift_getTupleTypeMetadata2();
  sub_1A409635C();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v53 = sub_1A409606C();
  if (MEMORY[0x1A6254060](v26, AssociatedTypeWitness))
  {
    uint64_t v27 = 0;
    unint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 24);
    uint64_t v42 = v44 + 24;
    unint64_t v28 = (void (**)(char *, unint64_t, uint64_t))(v46 + 16);
    CGRect v40 = (void (**)(char *, uint64_t))(v46 + 8);
    unint64_t v29 = v45;
    uint64_t v30 = AssociatedConformanceWitness;
    do
    {
      char v31 = sub_1A409637C();
      sub_1A409633C();
      if (v31)
      {
        uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
        v32(v11, v26+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v27, AssociatedTypeWitness);
        uint64_t v33 = v27 + 1;
        if (__OFADD__(v27, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t result = sub_1A4096A7C();
        if (v39 != 8)
        {
          __break(1u);
          return result;
        }
        *(void *)&v51[0] = result;
        uint64_t v32 = *v28;
        (*v28)(v11, (unint64_t)v51, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        uint64_t v33 = v27 + 1;
        if (__OFADD__(v27, 1))
        {
LABEL_14:
          __break(1u);
          break;
        }
      }
      v32(v29, (unint64_t)v11, AssociatedTypeWitness);
      uint64_t v34 = v41(v47, v44);
      MEMORY[0x1A6253D40](v51, v11, v34, AssociatedTypeWitness, &type metadata for Joint, v30);
      swift_bridgeObjectRelease();
      long long v48 = v51[0];
      long long v49 = v51[1];
      int v50 = v52;
      sub_1A409609C();
      sub_1A40960BC();
      (*v40)(v11, AssociatedTypeWitness);
      ++v27;
    }
    while (v33 != MEMORY[0x1A6254060](v26, AssociatedTypeWitness));
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
  return v53;
}

uint64_t sub_1A3D65D74(uint64_t a1, uint64_t a2)
{
  return sub_1A409640C();
}

uint64_t sub_1A3D65E58()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  swift_checkMetadataState();
  sub_1A4096A4C();
  sub_1A40963DC();
  swift_dynamicCast();
  return v2;
}

uint64_t dispatch thunk of PoseProviding.availableJointNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of PoseProviding.availableJointsGroupNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of PoseProviding.joint(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of PoseProviding.allJoints(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_1A3D65FC8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D66A74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D66004(uint64_t a1)
{
  unint64_t v2 = sub_1A3D66A74();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A3D66040(char a1)
{
  unint64_t result = 0x72437265746E6563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x466F54656C616373;
      break;
    case 2:
      unint64_t result = 0x466F54656C616373;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A3D66108()
{
  return sub_1A3D66040(*v0);
}

uint64_t sub_1A3D66110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D73B18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D66138(uint64_t a1)
{
  unint64_t v2 = sub_1A3D668D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D66174(uint64_t a1)
{
  unint64_t v2 = sub_1A3D668D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D661B0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D669CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D661EC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D669CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D66228(uint64_t a1)
{
  unint64_t v2 = sub_1A3D66924();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D66264(uint64_t a1)
{
  unint64_t v2 = sub_1A3D66924();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D662A0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D66A20();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D662DC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D66A20();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D66318(uint64_t a1)
{
  unint64_t v2 = sub_1A3D66978();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D66354(uint64_t a1)
{
  unint64_t v2 = sub_1A3D66978();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static ImageCropAndScaleAction.allCases.getter()
{
  return &unk_1EF7498F0;
}

uint64_t ImageCropAndScaleAction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE7F0);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v35 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE7F8);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE800);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE808);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE810);
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE818);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D668D0();
  sub_1A4096FEC();
  switch(v18)
  {
    case 1:
      char v41 = 1;
      sub_1A3D66A20();
      uint64_t v21 = v39;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
      goto LABEL_8;
    case 2:
      char v42 = 2;
      sub_1A3D669CC();
      unint64_t v22 = v29;
      uint64_t v21 = v39;
      sub_1A4096D5C();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_7;
    case 3:
      char v43 = 3;
      sub_1A3D66978();
      unint64_t v22 = v32;
      uint64_t v21 = v39;
      sub_1A4096D5C();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      goto LABEL_7;
    case 4:
      char v44 = 4;
      sub_1A3D66924();
      unint64_t v22 = v35;
      uint64_t v21 = v39;
      sub_1A4096D5C();
      uint64_t v24 = v36;
      uint64_t v23 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v21);
      break;
    default:
      char v40 = 0;
      sub_1A3D66A74();
      uint64_t v19 = v39;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v19);
      break;
  }
  return result;
}

unint64_t sub_1A3D668D0()
{
  unint64_t result = qword_1E9612510;
  if (!qword_1E9612510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612510);
  }
  return result;
}

unint64_t sub_1A3D66924()
{
  unint64_t result = qword_1E9612518;
  if (!qword_1E9612518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612518);
  }
  return result;
}

unint64_t sub_1A3D66978()
{
  unint64_t result = qword_1E9612520;
  if (!qword_1E9612520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612520);
  }
  return result;
}

unint64_t sub_1A3D669CC()
{
  unint64_t result = qword_1E9612528;
  if (!qword_1E9612528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612528);
  }
  return result;
}

unint64_t sub_1A3D66A20()
{
  unint64_t result = qword_1E9612530;
  if (!qword_1E9612530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612530);
  }
  return result;
}

unint64_t sub_1A3D66A74()
{
  unint64_t result = qword_1E9612538;
  if (!qword_1E9612538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612538);
  }
  return result;
}

uint64_t ImageCropAndScaleAction.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE820);
  uint64_t v43 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v53 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE828);
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  int v52 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE830);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE838);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE840);
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE848);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1A3D668D0();
  uint64_t v18 = v56;
  sub_1A4096FDC();
  if (v18)
  {
LABEL_7:
    uint64_t v33 = (uint64_t)v55;
    return __swift_destroy_boxed_opaque_existential_1(v33);
  }
  uint64_t v39 = v10;
  char v40 = v12;
  uint64_t v19 = v9;
  uint64_t v21 = v51;
  uint64_t v20 = v52;
  uint64_t v41 = 0;
  uint64_t v56 = v14;
  unint64_t v22 = v53;
  uint64_t v23 = v54;
  uint64_t v24 = v16;
  uint64_t v25 = sub_1A4096D3C();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v30 = sub_1A4096ABC();
    swift_allocError();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    void *v32 = &type metadata for ImageCropAndScaleAction;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x1E4FBBA70], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v13);
    goto LABEL_7;
  }
  char v26 = *(unsigned char *)(v25 + 32);
  switch(v26)
  {
    case 1:
      char v58 = 1;
      sub_1A3D66A20();
      uint64_t v35 = v41;
      sub_1A4096C7C();
      if (v35) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      goto LABEL_19;
    case 2:
      char v59 = 2;
      sub_1A3D669CC();
      uint64_t v36 = v41;
      sub_1A4096C7C();
      if (v36) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
      goto LABEL_19;
    case 3:
      char v60 = 3;
      sub_1A3D66978();
      uint64_t v37 = v41;
      sub_1A4096C7C();
      if (v37) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v46);
LABEL_19:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      goto LABEL_21;
    case 4:
      char v61 = 4;
      sub_1A3D66924();
      uint64_t v38 = v41;
      sub_1A4096C7C();
      if (v38) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      uint64_t v23 = v54;
      goto LABEL_21;
    default:
      char v27 = *(unsigned char *)(v25 + 32);
      char v57 = 0;
      sub_1A3D66A74();
      unint64_t v29 = v40;
      uint64_t v28 = v41;
      sub_1A4096C7C();
      if (v28)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
        uint64_t v33 = (uint64_t)v55;
        return __swift_destroy_boxed_opaque_existential_1(v33);
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      char v26 = v27;
LABEL_21:
      *uint64_t v23 = v26;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      break;
  }
  return result;
}

void sub_1A3D67224(void *a1@<X8>)
{
  *a1 = &unk_1EF7499A8;
}

uint64_t sub_1A3D67234@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ImageCropAndScaleAction.init(from:)(a1, a2);
}

uint64_t sub_1A3D6724C(void *a1)
{
  return ImageCropAndScaleAction.encode(to:)(a1);
}

uint64_t sub_1A3D67264()
{
  if (*v0) {
    return 0x7468676972;
  }
  else {
    return 1952867692;
  }
}

uint64_t sub_1A3D67294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D73D3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D672BC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D676C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D672F8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D676C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D67334(uint64_t a1)
{
  unint64_t v2 = sub_1A3D67770();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D67370(uint64_t a1)
{
  unint64_t v2 = sub_1A3D67770();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D673AC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D6771C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D673E8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D6771C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Chirality.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE850);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE858);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE860);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D676C8();
  sub_1A4096FEC();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3D6771C();
    uint64_t v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3D67770();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_1A3D676C8()
{
  unint64_t result = qword_1E9612540;
  if (!qword_1E9612540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612540);
  }
  return result;
}

unint64_t sub_1A3D6771C()
{
  unint64_t result = qword_1E9612548;
  if (!qword_1E9612548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612548);
  }
  return result;
}

unint64_t sub_1A3D67770()
{
  unint64_t result = qword_1E9612550;
  if (!qword_1E9612550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612550);
  }
  return result;
}

uint64_t Chirality.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE868);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE870);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE878);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D676C8();
  uint64_t v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *char v22 = &type metadata for Chirality;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3D6771C();
    uint64_t v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3D67770();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A3D67C20@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Chirality.init(from:)(a1, a2);
}

uint64_t sub_1A3D67C38(void *a1)
{
  return Chirality.encode(to:)(a1);
}

uint64_t sub_1A3D67C50(char a1)
{
  uint64_t result = 1701736302;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6969637361;
      break;
    case 2:
      unsigned int v3 = 1818717797;
      goto LABEL_13;
    case 3:
      uint64_t result = 0x6873696E6164;
      break;
    case 4:
      uint64_t result = 0x6863747564;
      break;
    case 5:
      uint64_t result = 0x68636E657266;
      break;
    case 6:
      uint64_t result = 0x6E616D726567;
      break;
    case 7:
      uint64_t result = 0x69646E616C656369;
      break;
    case 8:
      uint64_t result = 0x6E61696C617469;
      break;
    case 9:
      uint64_t result = 0x6169676577726F6ELL;
      break;
    case 10:
      uint64_t result = 0x6575677574726F70;
      break;
    case 11:
      unsigned int v3 = 1851879539;
LABEL_13:
      uint64_t result = v3 | 0x68736900000000;
      break;
    case 12:
      uint64_t result = 0x68736964657773;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D67DCC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D6949C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D67E08(uint64_t a1)
{
  unint64_t v2 = sub_1A3D6949C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D67E44()
{
  return sub_1A3D67C50(*v0);
}

uint64_t sub_1A3D67E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D73E18(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A3D67E74(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1A3D67E80(uint64_t a1)
{
  unint64_t v2 = sub_1A3D690AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D67EBC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D690AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D67EF8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D693F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D67F34(uint64_t a1)
{
  unint64_t v2 = sub_1A3D693F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D67F70(uint64_t a1)
{
  unint64_t v2 = sub_1A3D693A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D67FAC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D693A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D67FE8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D69448();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D68024(uint64_t a1)
{
  unint64_t v2 = sub_1A3D69448();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D68060(uint64_t a1)
{
  unint64_t v2 = sub_1A3D6934C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6809C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D6934C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D680D8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D692F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D68114(uint64_t a1)
{
  unint64_t v2 = sub_1A3D692F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D68150(uint64_t a1)
{
  unint64_t v2 = sub_1A3D692A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6818C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D692A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D681C8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D69250();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D68204(uint64_t a1)
{
  unint64_t v2 = sub_1A3D69250();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D68240(uint64_t a1)
{
  unint64_t v2 = sub_1A3D694F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6827C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D694F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D682B8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D691FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D682F4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D691FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D68330(uint64_t a1)
{
  unint64_t v2 = sub_1A3D691A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6836C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D691A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D683A8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D69154();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D683E4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D69154();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D68420(uint64_t a1)
{
  unint64_t v2 = sub_1A3D69100();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6845C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D69100();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static TextRecognitionCharacterSet.allCases.getter()
{
  return &unk_1EF74D908;
}

uint64_t TextRecognitionCharacterSet.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE880);
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v78 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE888);
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v77 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v75 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE890);
  uint64_t v73 = *(void *)(v8 - 8);
  uint64_t v74 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v72 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE898);
  uint64_t v70 = *(void *)(v10 - 8);
  uint64_t v71 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v69 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8A0);
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v68 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v66 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8A8);
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v63 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8B0);
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  char v60 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8B8);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  char v57 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8C0);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v54 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8C8);
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v51 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8D0);
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v48 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8D8);
  uint64_t v47 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  char v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8E0);
  uint64_t v46 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8E8);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v82 = v26;
  uint64_t v83 = v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v45 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D690AC();
  id v81 = v29;
  sub_1A4096FEC();
  switch(v30)
  {
    case 1:
      char v85 = 1;
      sub_1A3D6949C();
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v20);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v32, v31);
    case 2:
      char v86 = 2;
      sub_1A3D69448();
      char v33 = v48;
      char v34 = v81;
      uint64_t v35 = v82;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v50);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v34, v35);
    case 3:
      char v87 = 3;
      sub_1A3D693F4();
      uint64_t v37 = v51;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v53);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v32, v31);
    case 4:
      char v88 = 4;
      sub_1A3D693A0();
      uint64_t v38 = v54;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v32, v31);
    case 5:
      char v89 = 5;
      sub_1A3D6934C();
      uint64_t v39 = v57;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v32, v31);
    case 6:
      char v90 = 6;
      sub_1A3D692F8();
      char v40 = v60;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v62);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v32, v31);
    case 7:
      char v91 = 7;
      sub_1A3D692A4();
      uint64_t v41 = v63;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v41, v65);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v32, v31);
    case 8:
      char v92 = 8;
      sub_1A3D69250();
      uint64_t v42 = v66;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      uint64_t v44 = v67;
      uint64_t v43 = v68;
      goto LABEL_15;
    case 9:
      char v93 = 9;
      sub_1A3D691FC();
      uint64_t v42 = v69;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      uint64_t v44 = v70;
      uint64_t v43 = v71;
      goto LABEL_15;
    case 10:
      char v94 = 10;
      sub_1A3D691A8();
      uint64_t v42 = v72;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      uint64_t v44 = v73;
      uint64_t v43 = v74;
      goto LABEL_15;
    case 11:
      char v95 = 11;
      sub_1A3D69154();
      uint64_t v42 = v75;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      uint64_t v44 = v76;
      uint64_t v43 = v77;
      goto LABEL_15;
    case 12:
      char v96 = 12;
      sub_1A3D69100();
      uint64_t v42 = v78;
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      uint64_t v44 = v79;
      uint64_t v43 = v80;
LABEL_15:
      (*(void (**)(char *, uint64_t))(v44 + 8))(v42, v43);
      break;
    default:
      char v84 = 0;
      sub_1A3D694F0();
      uint64_t v32 = v81;
      uint64_t v31 = v82;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v23);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v32, v31);
}

unint64_t sub_1A3D690AC()
{
  unint64_t result = qword_1E9612558;
  if (!qword_1E9612558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612558);
  }
  return result;
}

unint64_t sub_1A3D69100()
{
  unint64_t result = qword_1E9612560;
  if (!qword_1E9612560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612560);
  }
  return result;
}

unint64_t sub_1A3D69154()
{
  unint64_t result = qword_1E9612568;
  if (!qword_1E9612568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612568);
  }
  return result;
}

unint64_t sub_1A3D691A8()
{
  unint64_t result = qword_1E9612570;
  if (!qword_1E9612570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612570);
  }
  return result;
}

unint64_t sub_1A3D691FC()
{
  unint64_t result = qword_1E9612578;
  if (!qword_1E9612578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612578);
  }
  return result;
}

unint64_t sub_1A3D69250()
{
  unint64_t result = qword_1E9612580;
  if (!qword_1E9612580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612580);
  }
  return result;
}

unint64_t sub_1A3D692A4()
{
  unint64_t result = qword_1E9612588;
  if (!qword_1E9612588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612588);
  }
  return result;
}

unint64_t sub_1A3D692F8()
{
  unint64_t result = qword_1E9612590;
  if (!qword_1E9612590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612590);
  }
  return result;
}

unint64_t sub_1A3D6934C()
{
  unint64_t result = qword_1E9612598;
  if (!qword_1E9612598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612598);
  }
  return result;
}

unint64_t sub_1A3D693A0()
{
  unint64_t result = qword_1E96125A0;
  if (!qword_1E96125A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125A0);
  }
  return result;
}

unint64_t sub_1A3D693F4()
{
  unint64_t result = qword_1E96125A8;
  if (!qword_1E96125A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125A8);
  }
  return result;
}

unint64_t sub_1A3D69448()
{
  unint64_t result = qword_1E96125B0;
  if (!qword_1E96125B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125B0);
  }
  return result;
}

unint64_t sub_1A3D6949C()
{
  unint64_t result = qword_1E96125B8;
  if (!qword_1E96125B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125B8);
  }
  return result;
}

unint64_t sub_1A3D694F0()
{
  unint64_t result = qword_1E96125C0;
  if (!qword_1E96125C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125C0);
  }
  return result;
}

uint64_t TextRecognitionCharacterSet.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v108 = a2;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8F0);
  uint64_t v95 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v103 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE8F8);
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v102 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE900);
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v101 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE908);
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  char v100 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE910);
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v99 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE918);
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v98 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE920);
  uint64_t v84 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  unint64_t v106 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE928);
  uint64_t v82 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  char v105 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE930);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v104 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE938);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v97 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE940);
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  char v96 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE948);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE950);
  uint64_t v72 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE958);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  id v109 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1A3D690AC();
  uint64_t v26 = v110;
  sub_1A4096FDC();
  if (!v26)
  {
    uint64_t v69 = v20;
    uint64_t v68 = v18;
    uint64_t v70 = v17;
    uint64_t v28 = v104;
    uint64_t v27 = v105;
    uint64_t v29 = v106;
    uint64_t v71 = 0;
    uint64_t v31 = v107;
    uint64_t v30 = v108;
    uint64_t v110 = v22;
    uint64_t v32 = sub_1A4096D3C();
    if (*(void *)(v32 + 16) == 1)
    {
      char v33 = *(unsigned char *)(v32 + 32);
      switch(v33)
      {
        case 1:
          char v112 = 1;
          sub_1A3D6949C();
          char v40 = v70;
          uint64_t v41 = v71;
          sub_1A4096C7C();
          if (v41) {
            goto LABEL_32;
          }
          uint64_t v42 = *(void (**)(char *, uint64_t))(v73 + 8);
          uint64_t v43 = v40;
          uint64_t v44 = &v106;
          goto LABEL_25;
        case 2:
          char v113 = 2;
          sub_1A3D69448();
          uint64_t v45 = v96;
          uint64_t v46 = v71;
          sub_1A4096C7C();
          if (v46) {
            goto LABEL_32;
          }
          uint64_t v42 = *(void (**)(char *, uint64_t))(v75 + 8);
          uint64_t v43 = v45;
          uint64_t v44 = &v108;
          goto LABEL_25;
        case 3:
          char v114 = 3;
          sub_1A3D693F4();
          uint64_t v47 = v97;
          uint64_t v48 = v71;
          sub_1A4096C7C();
          if (v48) {
            goto LABEL_32;
          }
          uint64_t v42 = *(void (**)(char *, uint64_t))(v77 + 8);
          uint64_t v43 = v47;
          uint64_t v44 = (char **)&v110;
          goto LABEL_25;
        case 4:
          char v115 = 4;
          sub_1A3D693A0();
          uint64_t v49 = v71;
          sub_1A4096C7C();
          if (v49) {
            goto LABEL_32;
          }
          uint64_t v42 = *(void (**)(char *, uint64_t))(v79 + 8);
          uint64_t v43 = v28;
          uint64_t v44 = (char **)v116;
          goto LABEL_25;
        case 5:
          v116[16] = 5;
          sub_1A3D6934C();
          uint64_t v50 = v71;
          sub_1A4096C7C();
          if (v50) {
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v82 + 8))(v27, v81);
          goto LABEL_37;
        case 6:
          v116[17] = 6;
          sub_1A3D692F8();
          uint64_t v51 = v71;
          sub_1A4096C7C();
          if (v51) {
            goto LABEL_32;
          }
          uint64_t v42 = *(void (**)(char *, uint64_t))(v84 + 8);
          uint64_t v43 = v29;
          uint64_t v44 = (char **)&v117;
          goto LABEL_25;
        case 7:
          v116[18] = 7;
          sub_1A3D692A4();
          uint64_t v52 = v98;
          uint64_t v53 = v71;
          sub_1A4096C7C();
          if (v53) {
            goto LABEL_32;
          }
          uint64_t v42 = *(void (**)(char *, uint64_t))(v85 + 8);
          uint64_t v43 = v52;
          uint64_t v44 = (char **)&v118;
          goto LABEL_25;
        case 8:
          v116[19] = 8;
          sub_1A3D69250();
          uint64_t v54 = v99;
          uint64_t v55 = v71;
          sub_1A4096C7C();
          if (v55) {
            goto LABEL_32;
          }
          uint64_t v42 = *(void (**)(char *, uint64_t))(v87 + 8);
          uint64_t v43 = v54;
          uint64_t v44 = (char **)&v119;
          goto LABEL_25;
        case 9:
          v116[20] = 9;
          sub_1A3D691FC();
          uint64_t v56 = v100;
          uint64_t v57 = v71;
          sub_1A4096C7C();
          if (v57) {
            goto LABEL_32;
          }
          uint64_t v42 = *(void (**)(char *, uint64_t))(v89 + 8);
          uint64_t v43 = v56;
          uint64_t v44 = (char **)&v120;
LABEL_25:
          uint64_t v58 = (uint64_t)*(v44 - 32);
          goto LABEL_36;
        case 10:
          v116[21] = 10;
          sub_1A3D691A8();
          uint64_t v59 = v101;
          uint64_t v60 = v71;
          sub_1A4096C7C();
          if (v60) {
            goto LABEL_32;
          }
          uint64_t v62 = v91;
          uint64_t v61 = v92;
          goto LABEL_30;
        case 11:
          v116[22] = 11;
          sub_1A3D69154();
          uint64_t v59 = v102;
          uint64_t v63 = v71;
          sub_1A4096C7C();
          if (v63) {
            goto LABEL_32;
          }
          uint64_t v62 = v93;
          uint64_t v61 = v94;
LABEL_30:
          (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
          goto LABEL_37;
        case 12:
          v116[23] = 12;
          sub_1A3D69100();
          uint64_t v64 = v103;
          uint64_t v65 = v71;
          sub_1A4096C7C();
          if (v65) {
            goto LABEL_32;
          }
          uint64_t v42 = *(void (**)(char *, uint64_t))(v95 + 8);
          uint64_t v43 = v64;
          uint64_t v58 = v31;
LABEL_36:
          v42(v43, v58);
          goto LABEL_37;
        default:
          char v111 = 0;
          sub_1A3D694F0();
          char v34 = v69;
          uint64_t v35 = v71;
          sub_1A4096C7C();
          if (v35)
          {
LABEL_32:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v110 + 8))(v24, v21);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v72 + 8))(v34, v68);
LABEL_37:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v110 + 8))(v24, v21);
            unsigned char *v30 = v33;
          }
          break;
      }
    }
    else
    {
      uint64_t v36 = v21;
      uint64_t v37 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v39 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v39 = &type metadata for TextRecognitionCharacterSet;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x1E4FBBA70], v37);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v24, v36);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
}

void sub_1A3D6A3B0(void *a1@<X8>)
{
  *a1 = &unk_1EF74D908;
}

uint64_t sub_1A3D6A3C0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TextRecognitionCharacterSet.init(from:)(a1, a2);
}

uint64_t sub_1A3D6A3D8(void *a1)
{
  return TextRecognitionCharacterSet.encode(to:)(a1);
}

void sub_1A3D6A3F0(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = (void *)*MEMORY[0x1E4F94368];
  type metadata accessor for CFString(0);
  sub_1A3CB1AAC(&qword_1E95ECA48);
  id v5 = v4;
  char v6 = sub_1A4095E7C();

  if (v6)
  {
    char v7 = 0;
  }
  else
  {
    uint64_t v8 = (void *)*MEMORY[0x1E4F94380];
    id v9 = a1;
    id v10 = v8;
    char v11 = sub_1A4095E7C();

    if (v11)
    {
      char v7 = 1;
    }
    else
    {
      uint64_t v12 = (void *)*MEMORY[0x1E4F94388];
      id v13 = v9;
      id v14 = v12;
      char v15 = sub_1A4095E7C();

      if (v15)
      {
        char v7 = 2;
      }
      else
      {
        uint64_t v16 = (void *)*MEMORY[0x1E4F94390];
        id v17 = v13;
        id v18 = v16;
        char v19 = sub_1A4095E7C();

        if (v19)
        {
          char v7 = 3;
        }
        else
        {
          uint64_t v20 = (void *)*MEMORY[0x1E4F94398];
          id v21 = v17;
          id v22 = v20;
          char v23 = sub_1A4095E7C();

          if (v23)
          {
            char v7 = 4;
          }
          else
          {
            uint64_t v24 = (void *)*MEMORY[0x1E4F943A0];
            id v25 = v21;
            id v26 = v24;
            char v27 = sub_1A4095E7C();

            if (v27)
            {
              char v7 = 5;
            }
            else
            {
              uint64_t v28 = (void *)*MEMORY[0x1E4F943A8];
              id v29 = v25;
              id v30 = v28;
              LOBYTE(v28) = sub_1A4095E7C();

              if (v28)
              {

                char v7 = 6;
              }
              else
              {
                uint64_t v31 = (void *)*MEMORY[0x1E4F94378];
                id v32 = v29;
                id v33 = v31;
                char v34 = sub_1A4095E7C();

                if (v34)
                {

                  char v7 = 7;
                }
                else
                {
                  uint64_t v35 = (void *)*MEMORY[0x1E4F943B0];
                  id v36 = v32;
                  id v37 = v35;
                  char v38 = sub_1A4095E7C();

                  if (v38)
                  {

                    char v7 = 8;
                  }
                  else
                  {
                    uint64_t v39 = (void *)*MEMORY[0x1E4F943C0];
                    id v40 = v36;
                    id v41 = v39;
                    char v42 = sub_1A4095E7C();

                    if (v42)
                    {

                      char v7 = 9;
                    }
                    else
                    {
                      uint64_t v43 = (void *)*MEMORY[0x1E4F943B8];
                      id v44 = v40;
                      id v45 = v43;
                      char v46 = sub_1A4095E7C();

                      if (v46)
                      {

                        char v7 = 10;
                      }
                      else
                      {
                        uint64_t v47 = (void *)*MEMORY[0x1E4F943E0];
                        id v48 = v44;
                        id v49 = v47;
                        char v50 = sub_1A4095E7C();

                        if (v50)
                        {

                          char v7 = 11;
                        }
                        else
                        {
                          uint64_t v51 = (void *)*MEMORY[0x1E4F943E8];
                          id v52 = v48;
                          id v53 = v51;
                          char v54 = sub_1A4095E7C();

                          if (v54)
                          {

                            char v7 = 12;
                          }
                          else
                          {
                            uint64_t v55 = (void *)*MEMORY[0x1E4F943F0];
                            id v56 = v52;
                            id v57 = v55;
                            char v58 = sub_1A4095E7C();

                            if (v58)
                            {

                              char v7 = 13;
                            }
                            else
                            {
                              uint64_t v59 = (void *)*MEMORY[0x1E4F94410];
                              id v60 = v56;
                              id v61 = v59;
                              char v62 = sub_1A4095E7C();

                              if (v62)
                              {

                                char v7 = 14;
                              }
                              else
                              {
                                uint64_t v63 = (void *)*MEMORY[0x1E4F94438];
                                id v64 = v60;
                                id v65 = v63;
                                char v66 = sub_1A4095E7C();

                                if (v66)
                                {

                                  char v7 = 15;
                                }
                                else
                                {
                                  uint64_t v67 = (void *)*MEMORY[0x1E4F94440];
                                  id v68 = v64;
                                  id v69 = v67;
                                  char v70 = sub_1A4095E7C();

                                  if (v70)
                                  {

                                    char v7 = 16;
                                  }
                                  else
                                  {
                                    uint64_t v71 = (void *)*MEMORY[0x1E4F94370];
                                    id v72 = v68;
                                    id v73 = v71;
                                    char v74 = sub_1A4095E7C();

                                    if (v74)
                                    {

                                      char v7 = 17;
                                    }
                                    else
                                    {
                                      uint64_t v75 = (void *)*MEMORY[0x1E4F943C8];
                                      id v76 = v72;
                                      id v77 = v75;
                                      char v78 = sub_1A4095E7C();

                                      if (v78)
                                      {

                                        char v7 = 18;
                                      }
                                      else
                                      {
                                        uint64_t v79 = (void *)*MEMORY[0x1E4F943D0];
                                        id v80 = v76;
                                        id v81 = v79;
                                        char v82 = sub_1A4095E7C();

                                        if (v82)
                                        {

                                          char v7 = 19;
                                        }
                                        else
                                        {
                                          uint64_t v83 = (void *)*MEMORY[0x1E4F943D8];
                                          id v84 = v80;
                                          id v85 = v83;
                                          char v86 = sub_1A4095E7C();

                                          if (v86)
                                          {

                                            char v7 = 20;
                                          }
                                          else
                                          {
                                            uint64_t v87 = (void *)*MEMORY[0x1E4F94400];
                                            id v88 = v84;
                                            id v89 = v87;
                                            char v90 = sub_1A4095E7C();

                                            if (v90)
                                            {

                                              char v7 = 21;
                                            }
                                            else
                                            {
                                              uint64_t v91 = (void *)*MEMORY[0x1E4F94408];
                                              id v92 = v88;
                                              id v93 = v91;
                                              char v94 = sub_1A4095E7C();

                                              if (v94)
                                              {

                                                char v7 = 22;
                                              }
                                              else
                                              {
                                                uint64_t v95 = (void *)*MEMORY[0x1E4F943F8];
                                                id v96 = v92;
                                                id v97 = v95;
                                                char v98 = sub_1A4095E7C();

                                                if (v98) {
                                                  char v7 = 23;
                                                }
                                                else {
                                                  char v7 = 25;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  *a2 = v7;
}

void sub_1A3D6AB18(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1A409617C();
  uint64_t v6 = v5;
  if (v4 == sub_1A409617C() && v6 == v7)
  {
    char v10 = 0;
LABEL_13:
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v9 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v10 = 0;
  if (v9)
  {
LABEL_14:

    goto LABEL_15;
  }
  uint64_t v11 = sub_1A409617C();
  uint64_t v13 = v12;
  if (v11 == sub_1A409617C() && v13 == v14)
  {
    char v10 = 1;
    goto LABEL_13;
  }
  char v16 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
    char v10 = 1;
    goto LABEL_14;
  }
  uint64_t v17 = sub_1A409617C();
  uint64_t v19 = v18;
  if (v17 == sub_1A409617C() && v19 == v20)
  {
    char v10 = 2;
    goto LABEL_13;
  }
  char v21 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
    char v10 = 2;
    goto LABEL_14;
  }
  uint64_t v22 = sub_1A409617C();
  uint64_t v24 = v23;
  if (v22 == sub_1A409617C() && v24 == v25)
  {
    char v10 = 3;
    goto LABEL_13;
  }
  char v26 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26)
  {
    char v10 = 3;
    goto LABEL_14;
  }
  uint64_t v27 = sub_1A409617C();
  uint64_t v29 = v28;
  if (v27 == sub_1A409617C() && v29 == v30)
  {
    char v10 = 4;
    goto LABEL_13;
  }
  char v31 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31)
  {
    char v10 = 4;
    goto LABEL_14;
  }
  uint64_t v32 = sub_1A409617C();
  uint64_t v34 = v33;
  if (v32 == sub_1A409617C() && v34 == v35)
  {
    char v10 = 5;
    goto LABEL_13;
  }
  char v36 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36)
  {
    char v10 = 5;
    goto LABEL_14;
  }
  uint64_t v37 = sub_1A409617C();
  uint64_t v39 = v38;
  if (v37 == sub_1A409617C() && v39 == v40)
  {
    char v10 = 6;
    goto LABEL_13;
  }
  char v41 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v41)
  {
    char v10 = 6;
    goto LABEL_14;
  }
  uint64_t v42 = sub_1A409617C();
  uint64_t v44 = v43;
  if (v42 == sub_1A409617C() && v44 == v45)
  {
    swift_bridgeObjectRelease_n();
LABEL_46:

    char v10 = 7;
    goto LABEL_15;
  }
  char v46 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v46) {
    goto LABEL_46;
  }
  uint64_t v47 = sub_1A409617C();
  uint64_t v49 = v48;
  if (v47 == sub_1A409617C() && v49 == v50)
  {
    swift_bridgeObjectRelease_n();
LABEL_51:

    char v10 = 8;
    goto LABEL_15;
  }
  char v51 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v51) {
    goto LABEL_51;
  }
  uint64_t v52 = sub_1A409617C();
  uint64_t v54 = v53;
  if (v52 == sub_1A409617C() && v54 == v55)
  {
    swift_bridgeObjectRelease_n();
LABEL_56:

    char v10 = 9;
    goto LABEL_15;
  }
  char v56 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v56) {
    goto LABEL_56;
  }
  uint64_t v57 = sub_1A409617C();
  uint64_t v59 = v58;
  if (v57 == sub_1A409617C() && v59 == v60)
  {
    swift_bridgeObjectRelease_n();
LABEL_61:

    char v10 = 10;
    goto LABEL_15;
  }
  char v61 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v61) {
    goto LABEL_61;
  }
  uint64_t v62 = sub_1A409617C();
  uint64_t v64 = v63;
  if (v62 == sub_1A409617C() && v64 == v65)
  {
    swift_bridgeObjectRelease_n();
LABEL_66:

    char v10 = 11;
    goto LABEL_15;
  }
  char v66 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v66) {
    goto LABEL_66;
  }
  uint64_t v67 = sub_1A409617C();
  uint64_t v69 = v68;
  if (v67 == sub_1A409617C() && v69 == v70)
  {
    swift_bridgeObjectRelease_n();
LABEL_71:

    char v10 = 12;
    goto LABEL_15;
  }
  char v71 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v71) {
    goto LABEL_71;
  }
  uint64_t v72 = sub_1A409617C();
  uint64_t v74 = v73;
  if (v72 == sub_1A409617C() && v74 == v75)
  {
    swift_bridgeObjectRelease_n();
LABEL_76:

    char v10 = 13;
    goto LABEL_15;
  }
  char v76 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v76) {
    goto LABEL_76;
  }
  uint64_t v77 = sub_1A409617C();
  uint64_t v79 = v78;
  if (v77 == sub_1A409617C() && v79 == v80)
  {
    swift_bridgeObjectRelease_n();
LABEL_81:

    char v10 = 14;
    goto LABEL_15;
  }
  char v81 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v81) {
    goto LABEL_81;
  }
  uint64_t v82 = sub_1A409617C();
  uint64_t v84 = v83;
  if (v82 == sub_1A409617C() && v84 == v85)
  {
    swift_bridgeObjectRelease_n();
LABEL_86:

    char v10 = 15;
    goto LABEL_15;
  }
  char v86 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v86) {
    goto LABEL_86;
  }
  uint64_t v87 = sub_1A409617C();
  uint64_t v89 = v88;
  if (v87 == sub_1A409617C() && v89 == v90)
  {
    swift_bridgeObjectRelease_n();
LABEL_91:

    char v10 = 16;
    goto LABEL_15;
  }
  char v91 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v91) {
    goto LABEL_91;
  }
  uint64_t v92 = sub_1A409617C();
  uint64_t v94 = v93;
  if (v92 == sub_1A409617C() && v94 == v95)
  {
    swift_bridgeObjectRelease_n();
LABEL_96:

    char v10 = 17;
    goto LABEL_15;
  }
  char v96 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v96) {
    goto LABEL_96;
  }
  uint64_t v97 = sub_1A409617C();
  uint64_t v99 = v98;
  if (v97 == sub_1A409617C() && v99 == v100)
  {
    swift_bridgeObjectRelease_n();
LABEL_101:

    char v10 = 18;
    goto LABEL_15;
  }
  char v101 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v101) {
    goto LABEL_101;
  }
  uint64_t v102 = sub_1A409617C();
  uint64_t v104 = v103;
  if (v102 == sub_1A409617C() && v104 == v105)
  {
    swift_bridgeObjectRelease_n();
LABEL_106:

    char v10 = 19;
    goto LABEL_15;
  }
  char v106 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v106) {
    goto LABEL_106;
  }
  uint64_t v107 = sub_1A409617C();
  uint64_t v109 = v108;
  if (v107 == sub_1A409617C() && v109 == v110)
  {
    swift_bridgeObjectRelease_n();
LABEL_111:

    char v10 = 20;
    goto LABEL_15;
  }
  char v111 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v111) {
    goto LABEL_111;
  }
  uint64_t v112 = sub_1A409617C();
  uint64_t v114 = v113;
  if (v112 == sub_1A409617C() && v114 == v115)
  {
    swift_bridgeObjectRelease_n();
LABEL_116:

    char v10 = 21;
    goto LABEL_15;
  }
  char v116 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v116) {
    goto LABEL_116;
  }
  uint64_t v117 = sub_1A409617C();
  uint64_t v119 = v118;
  if (v117 == sub_1A409617C() && v119 == v120)
  {
    swift_bridgeObjectRelease_n();
LABEL_121:

    char v10 = 22;
    goto LABEL_15;
  }
  char v121 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v121) {
    goto LABEL_121;
  }
  uint64_t v122 = sub_1A409617C();
  uint64_t v124 = v123;
  if (v122 == sub_1A409617C() && v124 == v125)
  {
    swift_bridgeObjectRelease_n();
LABEL_126:

    char v10 = 23;
    goto LABEL_15;
  }
  char v126 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v126) {
    goto LABEL_126;
  }
  uint64_t v127 = sub_1A409617C();
  uint64_t v129 = v128;
  if (v127 == sub_1A409617C() && v129 == v130)
  {
    id v131 = a1;

    swift_bridgeObjectRelease_n();
    char v10 = 24;
  }
  else
  {
    char v132 = sub_1A4096E5C();
    id v133 = a1;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v132) {
      char v10 = 24;
    }
    else {
      char v10 = 25;
    }
  }
LABEL_15:
  *a2 = v10;
}

BOOL static BarcodeSymbology.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BarcodeSymbology.hash(into:)()
{
  return sub_1A4096F3C();
}

unint64_t sub_1A3D6B7E0(char a1)
{
  unint64_t result = 0x6365747A61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x393365646F63;
      break;
    case 2:
      unint64_t result = 0x6843393365646F63;
      break;
    case 3:
      unint64_t result = 0x7546393365646F63;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x333965646F63;
      break;
    case 6:
      unint64_t result = 0x69333965646F63;
      break;
    case 7:
      unint64_t result = 0x38323165646F63;
      break;
    case 8:
      unint64_t result = 0x7274614D61746164;
      break;
    case 9:
      unint64_t result = 946757989;
      break;
    case 10:
      unint64_t result = 0x33316E6165;
      break;
    case 11:
      unint64_t result = 0x35666F3269;
      break;
    case 12:
      unint64_t result = 0x65684335666F3269;
      break;
    case 13:
      unint64_t result = 0x3431667469;
      break;
    case 14:
      unint64_t result = 0x373134666470;
      break;
    case 15:
      unint64_t result = 29297;
      break;
    case 16:
      unint64_t result = 1701015669;
      break;
    case 17:
      unint64_t result = 0x72616261646F63;
      break;
    case 18:
      unint64_t result = 0x4261746144317367;
      break;
    case 19:
      unint64_t result = 0xD000000000000012;
      break;
    case 20:
      unint64_t result = 0xD000000000000011;
      break;
    case 21:
      unint64_t result = 0x4644506F7263696DLL;
      break;
    case 22:
      unint64_t result = 0x52516F7263696DLL;
      break;
    case 23:
      unint64_t result = 0x7373656C5069736DLL;
      break;
    case 24:
      unint64_t result = 0x4370696C43707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D6BAD0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D701F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BB0C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D701F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6BB48(uint64_t a1)
{
  unint64_t v2 = sub_1A3D709D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BB84(uint64_t a1)
{
  unint64_t v2 = sub_1A3D709D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6BBC0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7043C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BBFC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7043C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6BC38(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70784();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BC74(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70784();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6BCB0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70928();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BCEC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70928();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6BD28(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7097C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BD64(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7097C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6BDA0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70880();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BDDC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70880();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6BE18(uint64_t a1)
{
  unint64_t v2 = sub_1A3D708D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BE54(uint64_t a1)
{
  unint64_t v2 = sub_1A3D708D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6BE90(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7082C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BECC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7082C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6BF08(uint64_t a1)
{
  unint64_t v2 = sub_1A3D707D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BF44(uint64_t a1)
{
  unint64_t v2 = sub_1A3D707D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A3D6BF80()
{
  return sub_1A3D6B7E0(*v0);
}

uint64_t sub_1A3D6BF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D7433C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A3D6BFB0(unsigned char *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_1A3D6BFBC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7019C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6BFF8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7019C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C034(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70730();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C070(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70730();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C0AC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70688();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C0E8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70688();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C124(uint64_t a1)
{
  unint64_t v2 = sub_1A3D706DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C160(uint64_t a1)
{
  unint64_t v2 = sub_1A3D706DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C19C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D703E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C1D8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D703E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C214(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70394();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C250(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70394();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C28C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70340();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C2C8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70340();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C304(uint64_t a1)
{
  unint64_t v2 = sub_1A3D705E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C340(uint64_t a1)
{
  unint64_t v2 = sub_1A3D705E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C37C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70634();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C3B8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70634();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C3F4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7058C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C430(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7058C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C46C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D702EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C4A8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D702EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C4E4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70298();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C520(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70298();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C55C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70244();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C598(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70244();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C5D4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70538();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C610(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70538();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C64C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D704E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C688(uint64_t a1)
{
  unint64_t v2 = sub_1A3D704E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6C6C4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70490();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6C700(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70490();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static BarcodeSymbology.allCases.getter()
{
  return &unk_1EF7456E8;
}

uint64_t BarcodeSymbology.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE960);
  uint64_t v136 = *(void *)(v4 - 8);
  uint64_t v137 = v4;
  MEMORY[0x1F4188790](v4);
  id v135 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE968);
  uint64_t v133 = *(void *)(v6 - 8);
  uint64_t v134 = v6;
  MEMORY[0x1F4188790](v6);
  char v132 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE970);
  uint64_t v130 = *(void *)(v8 - 8);
  uint64_t v131 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v129 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE978);
  uint64_t v127 = *(void *)(v10 - 8);
  uint64_t v128 = v10;
  MEMORY[0x1F4188790](v10);
  char v126 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE980);
  uint64_t v124 = *(void *)(v12 - 8);
  uint64_t v125 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v123 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE988);
  uint64_t v121 = *(void *)(v14 - 8);
  uint64_t v122 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v120 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE990);
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119);
  uint64_t v117 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE998);
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v114 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9A0);
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  char v111 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9A8);
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v108 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9B0);
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v105 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9B8);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v102 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9C0);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v99 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9C8);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  char v96 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9D0);
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v93 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9D8);
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v90 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9E0);
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v87 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9E8);
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v84 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9F0);
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  char v81 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE9F8);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v78 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA00);
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v75 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA08);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v72 = (char *)&v67 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA10);
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v69 = (char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA18);
  uint64_t v68 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v67 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA20);
  uint64_t v67 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v67 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA28);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v139 = v39;
  uint64_t v140 = v40;
  MEMORY[0x1F4188790](v39);
  uint64_t v42 = (char *)&v67 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D7019C();
  uint64_t v138 = v42;
  sub_1A4096FEC();
  switch(v43)
  {
    case 1:
      char v141 = 1;
      sub_1A3D7097C();
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v35, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 2:
      char v141 = 2;
      sub_1A3D70928();
      char v46 = v69;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v71);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 3:
      char v141 = 3;
      sub_1A3D708D4();
      uint64_t v47 = v72;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v47, v74);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 4:
      char v141 = 4;
      sub_1A3D70880();
      uint64_t v48 = v75;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v77);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 5:
      char v141 = 5;
      sub_1A3D7082C();
      uint64_t v49 = v78;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v49, v80);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 6:
      char v141 = 6;
      sub_1A3D707D8();
      uint64_t v50 = v81;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v50, v83);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 7:
      char v141 = 7;
      sub_1A3D70784();
      char v51 = v84;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v51, v86);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 8:
      char v141 = 8;
      sub_1A3D70730();
      uint64_t v52 = v87;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v52, v89);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 9:
      char v141 = 9;
      sub_1A3D706DC();
      uint64_t v53 = v90;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v53, v92);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 10:
      char v141 = 10;
      sub_1A3D70688();
      uint64_t v54 = v93;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v54, v95);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 11:
      char v141 = 11;
      sub_1A3D70634();
      uint64_t v55 = v96;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v55, v98);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 12:
      char v141 = 12;
      sub_1A3D705E0();
      char v56 = v99;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v56, v101);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 13:
      char v141 = 13;
      sub_1A3D7058C();
      uint64_t v57 = v102;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v57, v104);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 14:
      char v141 = 14;
      sub_1A3D70538();
      uint64_t v58 = v105;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v58, v107);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 15:
      char v141 = 15;
      sub_1A3D704E4();
      uint64_t v59 = v108;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v59, v110);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 16:
      char v141 = 16;
      sub_1A3D70490();
      uint64_t v60 = v111;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v60, v113);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 17:
      char v141 = 17;
      sub_1A3D7043C();
      char v61 = v114;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v61, v116);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 18:
      char v141 = 18;
      sub_1A3D703E8();
      uint64_t v62 = v117;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v62, v119);
      return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
    case 19:
      char v141 = 19;
      sub_1A3D70394();
      uint64_t v63 = v120;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      uint64_t v65 = v121;
      uint64_t v64 = v122;
      goto LABEL_27;
    case 20:
      char v141 = 20;
      sub_1A3D70340();
      uint64_t v63 = v123;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      uint64_t v65 = v124;
      uint64_t v64 = v125;
      goto LABEL_27;
    case 21:
      char v141 = 21;
      sub_1A3D702EC();
      uint64_t v63 = v126;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      uint64_t v65 = v127;
      uint64_t v64 = v128;
      goto LABEL_27;
    case 22:
      char v141 = 22;
      sub_1A3D70298();
      uint64_t v63 = v129;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      uint64_t v65 = v130;
      uint64_t v64 = v131;
      goto LABEL_27;
    case 23:
      char v141 = 23;
      sub_1A3D70244();
      uint64_t v63 = v132;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      uint64_t v65 = v133;
      uint64_t v64 = v134;
      goto LABEL_27;
    case 24:
      char v141 = 24;
      sub_1A3D701F0();
      uint64_t v63 = v135;
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      uint64_t v65 = v136;
      uint64_t v64 = v137;
LABEL_27:
      (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v64);
      break;
    default:
      char v141 = 0;
      sub_1A3D709D0();
      uint64_t v45 = v138;
      uint64_t v44 = v139;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v36);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v45, v44);
}

uint64_t BarcodeSymbology.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  v172 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA30);
  uint64_t v176 = *(void *)(v3 - 8);
  uint64_t v177 = v3;
  MEMORY[0x1F4188790](v3);
  v171 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA38);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  v170 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA40);
  uint64_t v150 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  v169 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA48);
  uint64_t v148 = *(void *)(v149 - 8);
  MEMORY[0x1F4188790](v149);
  v168 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA50);
  uint64_t v146 = *(void *)(v147 - 8);
  MEMORY[0x1F4188790](v147);
  v167 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA58);
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  v166 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA60);
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  v165 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA68);
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  v164 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA70);
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  v163 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA78);
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  v162 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA80);
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  v161 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA88);
  uint64_t v132 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  v160 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA90);
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x1F4188790](v131);
  v159 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEA98);
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  v158 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAA0);
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  v157 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAA8);
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  uint64_t v156 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAB0);
  uint64_t v123 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  v153 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAB8);
  uint64_t v121 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  v175 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAC0);
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119);
  v174 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAC8);
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117);
  long long v155 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAD0);
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  long long v154 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAD8);
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  v173 = (char *)&v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAE0);
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  char v152 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAE8);
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v28 = (char *)&v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAF0);
  uint64_t v107 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v101 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEAF8);
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v35 = (char *)&v101 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1[3];
  v178 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v36);
  sub_1A3D7019C();
  uint64_t v37 = v179;
  sub_1A4096FDC();
  if (v37) {
    goto LABEL_53;
  }
  uint64_t v102 = v31;
  uint64_t v101 = v29;
  uint64_t v103 = v28;
  uint64_t v38 = v173;
  uint64_t v39 = v174;
  uint64_t v40 = v175;
  uint64_t v104 = 0;
  uint64_t v42 = v176;
  uint64_t v41 = v177;
  uint64_t v179 = v33;
  uint64_t v43 = v35;
  uint64_t v44 = sub_1A4096D3C();
  if (*(void *)(v44 + 16) != 1)
  {
    uint64_t v48 = v32;
    uint64_t v49 = sub_1A4096ABC();
    swift_allocError();
    char v51 = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *char v51 = &type metadata for BarcodeSymbology;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v49 - 8) + 104))(v51, *MEMORY[0x1E4FBBA70], v49);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v179 + 8))(v35, v48);
LABEL_53:
    uint64_t v95 = (uint64_t)v178;
    return __swift_destroy_boxed_opaque_existential_1(v95);
  }
  char v45 = *(unsigned char *)(v44 + 32);
  switch(v45)
  {
    case 1:
      char v180 = 1;
      sub_1A3D7097C();
      uint64_t v52 = v103;
      uint64_t v53 = v104;
      sub_1A4096C7C();
      if (v53) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v108 + 8))(v52, v109);
      goto LABEL_61;
    case 2:
      char v180 = 2;
      sub_1A3D70928();
      uint64_t v54 = v152;
      uint64_t v55 = v104;
      sub_1A4096C7C();
      if (v55) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v110 + 8))(v54, v111);
      goto LABEL_61;
    case 3:
      char v180 = 3;
      sub_1A3D708D4();
      uint64_t v56 = v104;
      sub_1A4096C7C();
      if (v56) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v112 + 8))(v38, v113);
      goto LABEL_61;
    case 4:
      char v180 = 4;
      sub_1A3D70880();
      uint64_t v57 = v154;
      uint64_t v58 = v104;
      sub_1A4096C7C();
      if (v58) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v114 + 8))(v57, v115);
      goto LABEL_61;
    case 5:
      char v180 = 5;
      sub_1A3D7082C();
      uint64_t v59 = v155;
      uint64_t v60 = v104;
      sub_1A4096C7C();
      if (v60) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v116 + 8))(v59, v117);
      goto LABEL_61;
    case 6:
      char v180 = 6;
      sub_1A3D707D8();
      uint64_t v61 = v104;
      sub_1A4096C7C();
      if (v61) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v118 + 8))(v39, v119);
      goto LABEL_61;
    case 7:
      char v180 = 7;
      sub_1A3D70784();
      uint64_t v62 = v104;
      sub_1A4096C7C();
      if (v62) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v121 + 8))(v40, v120);
      goto LABEL_61;
    case 8:
      char v180 = 8;
      sub_1A3D70730();
      uint64_t v63 = v153;
      uint64_t v64 = v104;
      sub_1A4096C7C();
      if (v64) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v123 + 8))(v63, v122);
      goto LABEL_61;
    case 9:
      char v180 = 9;
      sub_1A3D706DC();
      uint64_t v65 = v156;
      uint64_t v66 = v104;
      sub_1A4096C7C();
      if (v66) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v124 + 8))(v65, v125);
      goto LABEL_61;
    case 10:
      char v180 = 10;
      sub_1A3D70688();
      uint64_t v67 = v157;
      uint64_t v68 = v104;
      sub_1A4096C7C();
      if (v68) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v126 + 8))(v67, v127);
      goto LABEL_61;
    case 11:
      char v180 = 11;
      sub_1A3D70634();
      uint64_t v69 = v158;
      uint64_t v70 = v104;
      sub_1A4096C7C();
      if (v70) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v128 + 8))(v69, v129);
      goto LABEL_61;
    case 12:
      char v180 = 12;
      sub_1A3D705E0();
      uint64_t v71 = v159;
      uint64_t v72 = v104;
      sub_1A4096C7C();
      if (v72) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v130 + 8))(v71, v131);
      goto LABEL_61;
    case 13:
      char v180 = 13;
      sub_1A3D7058C();
      uint64_t v73 = v160;
      uint64_t v74 = v104;
      sub_1A4096C7C();
      if (v74) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v132 + 8))(v73, v133);
      goto LABEL_61;
    case 14:
      char v180 = 14;
      sub_1A3D70538();
      uint64_t v75 = v161;
      uint64_t v76 = v104;
      sub_1A4096C7C();
      if (v76) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v134 + 8))(v75, v135);
      goto LABEL_61;
    case 15:
      char v180 = 15;
      sub_1A3D704E4();
      uint64_t v77 = v162;
      uint64_t v78 = v104;
      sub_1A4096C7C();
      if (v78) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v136 + 8))(v77, v137);
      goto LABEL_61;
    case 16:
      char v180 = 16;
      sub_1A3D70490();
      uint64_t v79 = v163;
      uint64_t v80 = v104;
      sub_1A4096C7C();
      if (v80) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v138 + 8))(v79, v139);
      goto LABEL_61;
    case 17:
      char v180 = 17;
      sub_1A3D7043C();
      char v81 = v164;
      uint64_t v82 = v104;
      sub_1A4096C7C();
      if (v82) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v140 + 8))(v81, v141);
      goto LABEL_61;
    case 18:
      char v180 = 18;
      sub_1A3D703E8();
      uint64_t v83 = v165;
      uint64_t v84 = v104;
      sub_1A4096C7C();
      if (v84) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v142 + 8))(v83, v143);
      goto LABEL_61;
    case 19:
      char v180 = 19;
      sub_1A3D70394();
      uint64_t v85 = v166;
      uint64_t v86 = v104;
      sub_1A4096C7C();
      if (v86) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v144 + 8))(v85, v145);
      goto LABEL_61;
    case 20:
      char v180 = 20;
      sub_1A3D70340();
      uint64_t v87 = v167;
      uint64_t v88 = v104;
      sub_1A4096C7C();
      if (v88) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v146 + 8))(v87, v147);
      goto LABEL_61;
    case 21:
      char v180 = 21;
      sub_1A3D702EC();
      uint64_t v89 = v168;
      uint64_t v90 = v104;
      sub_1A4096C7C();
      if (v90) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v148 + 8))(v89, v149);
      goto LABEL_61;
    case 22:
      char v180 = 22;
      sub_1A3D70298();
      uint64_t v91 = v169;
      uint64_t v92 = v104;
      sub_1A4096C7C();
      if (v92) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v150 + 8))(v91, v151);
      goto LABEL_61;
    case 23:
      char v180 = 23;
      sub_1A3D70244();
      uint64_t v93 = v170;
      uint64_t v94 = v104;
      sub_1A4096C7C();
      if (v94) {
        goto LABEL_52;
      }
      (*(void (**)(char *, uint64_t))(v105 + 8))(v93, v106);
      goto LABEL_61;
    case 24:
      uint64_t v97 = v41;
      char v180 = 24;
      sub_1A3D701F0();
      uint64_t v98 = v171;
      uint64_t v99 = v104;
      sub_1A4096C7C();
      if (v99)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v179 + 8))(v43, v32);
        uint64_t v95 = (uint64_t)v178;
        return __swift_destroy_boxed_opaque_existential_1(v95);
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v98, v97);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v179 + 8))(v43, v32);
      uint64_t v95 = (uint64_t)v178;
      uint64_t v100 = v172;
      goto LABEL_62;
    default:
      char v180 = 0;
      sub_1A3D709D0();
      char v46 = v102;
      uint64_t v47 = v104;
      sub_1A4096C7C();
      if (v47)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v179 + 8))(v35, v32);
        goto LABEL_53;
      }
      (*(void (**)(char *, uint64_t))(v107 + 8))(v46, v101);
LABEL_61:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v179 + 8))(v35, v32);
      uint64_t v95 = (uint64_t)v178;
      uint64_t v100 = v172;
LABEL_62:
      *uint64_t v100 = v45;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v95);
}

void sub_1A3D6F808(void *a1@<X8>)
{
  *a1 = &unk_1EF7456E8;
}

uint64_t sub_1A3D6F818@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return BarcodeSymbology.init(from:)(a1, a2);
}

uint64_t sub_1A3D6F830(void *a1)
{
  return BarcodeSymbology.encode(to:)(a1);
}

BOOL static ElementType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ElementType.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D6F88C()
{
  if (*v0) {
    return 0x656C62756F64;
  }
  else {
    return 0x74616F6C66;
  }
}

uint64_t sub_1A3D6F8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D74D40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D6F8E8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70A24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6F924(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70A24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6F960(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70A78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6F99C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70A78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D6F9D8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70ACC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D6FA14(uint64_t a1)
{
  unint64_t v2 = sub_1A3D70ACC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ElementType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB00);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB08);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB10);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D70A24();
  sub_1A4096FEC();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3D70A78();
    uint64_t v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3D70ACC();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t ElementType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB18);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB20);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB28);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D70A24();
  uint64_t v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *char v22 = &type metadata for ElementType;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3D70A78();
    uint64_t v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3D70ACC();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A3D70150@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ElementType.init(from:)(a1, a2);
}

uint64_t sub_1A3D70168(void *a1)
{
  return ElementType.encode(to:)(a1);
}

uint64_t sub_1A3D70180@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (result == 1) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_1A3D7019C()
{
  unint64_t result = qword_1E96125C8;
  if (!qword_1E96125C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125C8);
  }
  return result;
}

unint64_t sub_1A3D701F0()
{
  unint64_t result = qword_1E96125D0;
  if (!qword_1E96125D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125D0);
  }
  return result;
}

unint64_t sub_1A3D70244()
{
  unint64_t result = qword_1E96125D8;
  if (!qword_1E96125D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125D8);
  }
  return result;
}

unint64_t sub_1A3D70298()
{
  unint64_t result = qword_1E96125E0;
  if (!qword_1E96125E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125E0);
  }
  return result;
}

unint64_t sub_1A3D702EC()
{
  unint64_t result = qword_1E96125E8;
  if (!qword_1E96125E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125E8);
  }
  return result;
}

unint64_t sub_1A3D70340()
{
  unint64_t result = qword_1E96125F0;
  if (!qword_1E96125F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125F0);
  }
  return result;
}

unint64_t sub_1A3D70394()
{
  unint64_t result = qword_1E96125F8;
  if (!qword_1E96125F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96125F8);
  }
  return result;
}

unint64_t sub_1A3D703E8()
{
  unint64_t result = qword_1E9612600;
  if (!qword_1E9612600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612600);
  }
  return result;
}

unint64_t sub_1A3D7043C()
{
  unint64_t result = qword_1E9612608;
  if (!qword_1E9612608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612608);
  }
  return result;
}

unint64_t sub_1A3D70490()
{
  unint64_t result = qword_1E9612610;
  if (!qword_1E9612610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612610);
  }
  return result;
}

unint64_t sub_1A3D704E4()
{
  unint64_t result = qword_1E9612618;
  if (!qword_1E9612618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612618);
  }
  return result;
}

unint64_t sub_1A3D70538()
{
  unint64_t result = qword_1E9612620;
  if (!qword_1E9612620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612620);
  }
  return result;
}

unint64_t sub_1A3D7058C()
{
  unint64_t result = qword_1E9612628;
  if (!qword_1E9612628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612628);
  }
  return result;
}

unint64_t sub_1A3D705E0()
{
  unint64_t result = qword_1E9612630;
  if (!qword_1E9612630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612630);
  }
  return result;
}

unint64_t sub_1A3D70634()
{
  unint64_t result = qword_1E9612638;
  if (!qword_1E9612638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612638);
  }
  return result;
}

unint64_t sub_1A3D70688()
{
  unint64_t result = qword_1E9612640;
  if (!qword_1E9612640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612640);
  }
  return result;
}

unint64_t sub_1A3D706DC()
{
  unint64_t result = qword_1E9612648;
  if (!qword_1E9612648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612648);
  }
  return result;
}

unint64_t sub_1A3D70730()
{
  unint64_t result = qword_1E9612650;
  if (!qword_1E9612650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612650);
  }
  return result;
}

unint64_t sub_1A3D70784()
{
  unint64_t result = qword_1E9612658;
  if (!qword_1E9612658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612658);
  }
  return result;
}

unint64_t sub_1A3D707D8()
{
  unint64_t result = qword_1E9612660;
  if (!qword_1E9612660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612660);
  }
  return result;
}

unint64_t sub_1A3D7082C()
{
  unint64_t result = qword_1E9612668;
  if (!qword_1E9612668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612668);
  }
  return result;
}

unint64_t sub_1A3D70880()
{
  unint64_t result = qword_1E9612670;
  if (!qword_1E9612670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612670);
  }
  return result;
}

unint64_t sub_1A3D708D4()
{
  unint64_t result = qword_1E9612678;
  if (!qword_1E9612678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612678);
  }
  return result;
}

unint64_t sub_1A3D70928()
{
  unint64_t result = qword_1E9612680;
  if (!qword_1E9612680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612680);
  }
  return result;
}

unint64_t sub_1A3D7097C()
{
  unint64_t result = qword_1E9612688;
  if (!qword_1E9612688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612688);
  }
  return result;
}

unint64_t sub_1A3D709D0()
{
  unint64_t result = qword_1E9612690;
  if (!qword_1E9612690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612690);
  }
  return result;
}

unint64_t sub_1A3D70A24()
{
  unint64_t result = qword_1E9612698;
  if (!qword_1E9612698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9612698);
  }
  return result;
}

unint64_t sub_1A3D70A78()
{
  unint64_t result = qword_1E96126A0;
  if (!qword_1E96126A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96126A0);
  }
  return result;
}

unint64_t sub_1A3D70ACC()
{
  unint64_t result = qword_1E96126A8[0];
  if (!qword_1E96126A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96126A8);
  }
  return result;
}

uint64_t sub_1A3D70B20()
{
  return sub_1A3D70C4C(&qword_1E95EEB30, &qword_1E95EEB38);
}

unint64_t sub_1A3D70B4C()
{
  unint64_t result = qword_1E95EEB40;
  if (!qword_1E95EEB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEB40);
  }
  return result;
}

unint64_t sub_1A3D70BA4()
{
  unint64_t result = qword_1E95EEB48;
  if (!qword_1E95EEB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEB48);
  }
  return result;
}

uint64_t sub_1A3D70BF8()
{
  return sub_1A3D70C4C(&qword_1E95EEB50, &qword_1E95EEB58);
}

uint64_t sub_1A3D70C24()
{
  return sub_1A3D70C4C(&qword_1E95EEB60, &qword_1E95EEB68);
}

uint64_t sub_1A3D70C4C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D70CA0()
{
  unint64_t result = qword_1E95EEB70;
  if (!qword_1E95EEB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEB70);
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageCropAndScaleAction()
{
  return &type metadata for ImageCropAndScaleAction;
}

ValueMetadata *type metadata accessor for ImagePixelDimensions()
{
  return &type metadata for ImagePixelDimensions;
}

ValueMetadata *type metadata accessor for Chirality()
{
  return &type metadata for Chirality;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet()
{
  return &type metadata for TextRecognitionCharacterSet;
}

ValueMetadata *type metadata accessor for BarcodeSymbology()
{
  return &type metadata for BarcodeSymbology;
}

ValueMetadata *type metadata accessor for ElementType()
{
  return &type metadata for ElementType;
}

ValueMetadata *type metadata accessor for ElementType.CodingKeys()
{
  return &type metadata for ElementType.CodingKeys;
}

ValueMetadata *type metadata accessor for ElementType.FloatCodingKeys()
{
  return &type metadata for ElementType.FloatCodingKeys;
}

ValueMetadata *type metadata accessor for ElementType.DoubleCodingKeys()
{
  return &type metadata for ElementType.DoubleCodingKeys;
}

uint64_t getEnumTagSinglePayload for AnimalBodyPoseObservation.JointName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v8 = v6 - 25;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6Vision16BarcodeSymbologyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *unint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D70EFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.CodingKeys()
{
  return &type metadata for BarcodeSymbology.CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.AztecCodingKeys()
{
  return &type metadata for BarcodeSymbology.AztecCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Code39CodingKeys()
{
  return &type metadata for BarcodeSymbology.Code39CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Code39ChecksumCodingKeys()
{
  return &type metadata for BarcodeSymbology.Code39ChecksumCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Code39FullASCIICodingKeys()
{
  return &type metadata for BarcodeSymbology.Code39FullASCIICodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Code39FullASCIIChecksumCodingKeys()
{
  return &type metadata for BarcodeSymbology.Code39FullASCIIChecksumCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Code93CodingKeys()
{
  return &type metadata for BarcodeSymbology.Code93CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Code93iCodingKeys()
{
  return &type metadata for BarcodeSymbology.Code93iCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Code128CodingKeys()
{
  return &type metadata for BarcodeSymbology.Code128CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.DataMatrixCodingKeys()
{
  return &type metadata for BarcodeSymbology.DataMatrixCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Ean8CodingKeys()
{
  return &type metadata for BarcodeSymbology.Ean8CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Ean13CodingKeys()
{
  return &type metadata for BarcodeSymbology.Ean13CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.I2of5CodingKeys()
{
  return &type metadata for BarcodeSymbology.I2of5CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.I2of5ChecksumCodingKeys()
{
  return &type metadata for BarcodeSymbology.I2of5ChecksumCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Itf14CodingKeys()
{
  return &type metadata for BarcodeSymbology.Itf14CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Pdf417CodingKeys()
{
  return &type metadata for BarcodeSymbology.Pdf417CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.QrCodingKeys()
{
  return &type metadata for BarcodeSymbology.QrCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.UpceCodingKeys()
{
  return &type metadata for BarcodeSymbology.UpceCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.CodabarCodingKeys()
{
  return &type metadata for BarcodeSymbology.CodabarCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Gs1DataBarCodingKeys()
{
  return &type metadata for BarcodeSymbology.Gs1DataBarCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Gs1DataBarExpandedCodingKeys()
{
  return &type metadata for BarcodeSymbology.Gs1DataBarExpandedCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.Gs1DataBarLimitedCodingKeys()
{
  return &type metadata for BarcodeSymbology.Gs1DataBarLimitedCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.MicroPDF417CodingKeys()
{
  return &type metadata for BarcodeSymbology.MicroPDF417CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.MicroQRCodingKeys()
{
  return &type metadata for BarcodeSymbology.MicroQRCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.MsiPlesseyCodingKeys()
{
  return &type metadata for BarcodeSymbology.MsiPlesseyCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeSymbology.AppClipCodeCodingKeys()
{
  return &type metadata for BarcodeSymbology.AppClipCodeCodingKeys;
}

uint64_t _s6Vision27TextRecognitionCharacterSetOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6Vision27TextRecognitionCharacterSetOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D71220);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.CodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.CodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.NoneCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.AsciiCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.AsciiCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.EnglishCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.EnglishCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.DanishCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.DanishCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.DutchCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.DutchCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.FrenchCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.FrenchCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.GermanCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.GermanCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.IcelandicCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.IcelandicCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.ItalianCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.ItalianCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.NorwegianCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.NorwegianCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.PortugueseCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.PortugueseCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.SpanishCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.SpanishCodingKeys;
}

ValueMetadata *type metadata accessor for TextRecognitionCharacterSet.SwedishCodingKeys()
{
  return &type metadata for TextRecognitionCharacterSet.SwedishCodingKeys;
}

unsigned char *_s6Vision11ElementTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D713F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Chirality.CodingKeys()
{
  return &type metadata for Chirality.CodingKeys;
}

ValueMetadata *type metadata accessor for Chirality.LeftCodingKeys()
{
  return &type metadata for Chirality.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for Chirality.RightCodingKeys()
{
  return &type metadata for Chirality.RightCodingKeys;
}

unsigned char *_s6Vision23ImageCropAndScaleActionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D71518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageCropAndScaleAction.CodingKeys()
{
  return &type metadata for ImageCropAndScaleAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageCropAndScaleAction.CenterCropCodingKeys()
{
  return &type metadata for ImageCropAndScaleAction.CenterCropCodingKeys;
}

ValueMetadata *type metadata accessor for ImageCropAndScaleAction.ScaleToFitCodingKeys()
{
  return &type metadata for ImageCropAndScaleAction.ScaleToFitCodingKeys;
}

ValueMetadata *type metadata accessor for ImageCropAndScaleAction.ScaleToFillCodingKeys()
{
  return &type metadata for ImageCropAndScaleAction.ScaleToFillCodingKeys;
}

ValueMetadata *type metadata accessor for ImageCropAndScaleAction.ScaleToFitPlus90CCWRotationCodingKeys()
{
  return &type metadata for ImageCropAndScaleAction.ScaleToFitPlus90CCWRotationCodingKeys;
}

ValueMetadata *type metadata accessor for ImageCropAndScaleAction.ScaleToFillPlus90CCWRotationCodingKeys()
{
  return &type metadata for ImageCropAndScaleAction.ScaleToFillPlus90CCWRotationCodingKeys;
}

unint64_t sub_1A3D715A4()
{
  unint64_t result = qword_1E9613830[0];
  if (!qword_1E9613830[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9613830);
  }
  return result;
}

unint64_t sub_1A3D715FC()
{
  unint64_t result = qword_1E9613C40[0];
  if (!qword_1E9613C40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9613C40);
  }
  return result;
}

unint64_t sub_1A3D71654()
{
  unint64_t result = qword_1E9614B50[0];
  if (!qword_1E9614B50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9614B50);
  }
  return result;
}

unint64_t sub_1A3D716AC()
{
  unint64_t result = qword_1E96166E0[0];
  if (!qword_1E96166E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96166E0);
  }
  return result;
}

unint64_t sub_1A3D71704()
{
  unint64_t result = qword_1E9616AF0;
  if (!qword_1E9616AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9616AF0);
  }
  return result;
}

unint64_t sub_1A3D7175C()
{
  unint64_t result = qword_1E9616C00;
  if (!qword_1E9616C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9616C00);
  }
  return result;
}

unint64_t sub_1A3D717B4()
{
  unint64_t result = qword_1E9616C08[0];
  if (!qword_1E9616C08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9616C08);
  }
  return result;
}

unint64_t sub_1A3D7180C()
{
  unint64_t result = qword_1E9616C90;
  if (!qword_1E9616C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9616C90);
  }
  return result;
}

unint64_t sub_1A3D71864()
{
  unint64_t result = qword_1E9616C98[0];
  if (!qword_1E9616C98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9616C98);
  }
  return result;
}

unint64_t sub_1A3D718BC()
{
  unint64_t result = qword_1E9616D20;
  if (!qword_1E9616D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9616D20);
  }
  return result;
}

unint64_t sub_1A3D71914()
{
  unint64_t result = qword_1E9616D28[0];
  if (!qword_1E9616D28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9616D28);
  }
  return result;
}

unint64_t sub_1A3D7196C()
{
  unint64_t result = qword_1E9616DB0;
  if (!qword_1E9616DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9616DB0);
  }
  return result;
}

unint64_t sub_1A3D719C4()
{
  unint64_t result = qword_1E9616DB8[0];
  if (!qword_1E9616DB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9616DB8);
  }
  return result;
}

unint64_t sub_1A3D71A1C()
{
  unint64_t result = qword_1E9616E40;
  if (!qword_1E9616E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9616E40);
  }
  return result;
}

unint64_t sub_1A3D71A74()
{
  unint64_t result = qword_1E9616E48[0];
  if (!qword_1E9616E48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9616E48);
  }
  return result;
}

unint64_t sub_1A3D71ACC()
{
  unint64_t result = qword_1E9616ED0;
  if (!qword_1E9616ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9616ED0);
  }
  return result;
}

unint64_t sub_1A3D71B24()
{
  unint64_t result = qword_1E9616ED8[0];
  if (!qword_1E9616ED8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9616ED8);
  }
  return result;
}

unint64_t sub_1A3D71B7C()
{
  unint64_t result = qword_1E9616F60;
  if (!qword_1E9616F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9616F60);
  }
  return result;
}

unint64_t sub_1A3D71BD4()
{
  unint64_t result = qword_1E9616F68[0];
  if (!qword_1E9616F68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9616F68);
  }
  return result;
}

unint64_t sub_1A3D71C2C()
{
  unint64_t result = qword_1E9616FF0;
  if (!qword_1E9616FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9616FF0);
  }
  return result;
}

unint64_t sub_1A3D71C84()
{
  unint64_t result = qword_1E9616FF8[0];
  if (!qword_1E9616FF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9616FF8);
  }
  return result;
}

unint64_t sub_1A3D71CDC()
{
  unint64_t result = qword_1E9617080;
  if (!qword_1E9617080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617080);
  }
  return result;
}

unint64_t sub_1A3D71D34()
{
  unint64_t result = qword_1E9617088[0];
  if (!qword_1E9617088[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617088);
  }
  return result;
}

unint64_t sub_1A3D71D8C()
{
  unint64_t result = qword_1E9617110;
  if (!qword_1E9617110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617110);
  }
  return result;
}

unint64_t sub_1A3D71DE4()
{
  unint64_t result = qword_1E9617118[0];
  if (!qword_1E9617118[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617118);
  }
  return result;
}

unint64_t sub_1A3D71E3C()
{
  unint64_t result = qword_1E96171A0;
  if (!qword_1E96171A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96171A0);
  }
  return result;
}

unint64_t sub_1A3D71E94()
{
  unint64_t result = qword_1E96171A8[0];
  if (!qword_1E96171A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96171A8);
  }
  return result;
}

unint64_t sub_1A3D71EEC()
{
  unint64_t result = qword_1E9617230;
  if (!qword_1E9617230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617230);
  }
  return result;
}

unint64_t sub_1A3D71F44()
{
  unint64_t result = qword_1E9617238[0];
  if (!qword_1E9617238[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617238);
  }
  return result;
}

unint64_t sub_1A3D71F9C()
{
  unint64_t result = qword_1E96172C0;
  if (!qword_1E96172C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96172C0);
  }
  return result;
}

unint64_t sub_1A3D71FF4()
{
  unint64_t result = qword_1E96172C8[0];
  if (!qword_1E96172C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96172C8);
  }
  return result;
}

unint64_t sub_1A3D7204C()
{
  unint64_t result = qword_1E9617350;
  if (!qword_1E9617350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617350);
  }
  return result;
}

unint64_t sub_1A3D720A4()
{
  unint64_t result = qword_1E9617358[0];
  if (!qword_1E9617358[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617358);
  }
  return result;
}

unint64_t sub_1A3D720FC()
{
  unint64_t result = qword_1E96173E0;
  if (!qword_1E96173E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96173E0);
  }
  return result;
}

unint64_t sub_1A3D72154()
{
  unint64_t result = qword_1E96173E8[0];
  if (!qword_1E96173E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96173E8);
  }
  return result;
}

unint64_t sub_1A3D721AC()
{
  unint64_t result = qword_1E9617470;
  if (!qword_1E9617470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617470);
  }
  return result;
}

unint64_t sub_1A3D72204()
{
  unint64_t result = qword_1E9617478;
  if (!qword_1E9617478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617478);
  }
  return result;
}

unint64_t sub_1A3D7225C()
{
  unint64_t result = qword_1E9617500;
  if (!qword_1E9617500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617500);
  }
  return result;
}

unint64_t sub_1A3D722B4()
{
  unint64_t result = qword_1E9617508[0];
  if (!qword_1E9617508[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617508);
  }
  return result;
}

unint64_t sub_1A3D7230C()
{
  unint64_t result = qword_1E9617590;
  if (!qword_1E9617590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617590);
  }
  return result;
}

unint64_t sub_1A3D72364()
{
  unint64_t result = qword_1E9617598[0];
  if (!qword_1E9617598[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617598);
  }
  return result;
}

unint64_t sub_1A3D723BC()
{
  unint64_t result = qword_1E9617620;
  if (!qword_1E9617620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617620);
  }
  return result;
}

unint64_t sub_1A3D72414()
{
  unint64_t result = qword_1E9617628[0];
  if (!qword_1E9617628[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617628);
  }
  return result;
}

unint64_t sub_1A3D7246C()
{
  unint64_t result = qword_1E96176B0;
  if (!qword_1E96176B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96176B0);
  }
  return result;
}

unint64_t sub_1A3D724C4()
{
  unint64_t result = qword_1E96176B8[0];
  if (!qword_1E96176B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96176B8);
  }
  return result;
}

unint64_t sub_1A3D7251C()
{
  unint64_t result = qword_1E9617740;
  if (!qword_1E9617740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617740);
  }
  return result;
}

unint64_t sub_1A3D72574()
{
  unint64_t result = qword_1E9617748[0];
  if (!qword_1E9617748[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617748);
  }
  return result;
}

unint64_t sub_1A3D725CC()
{
  unint64_t result = qword_1E96177D0;
  if (!qword_1E96177D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96177D0);
  }
  return result;
}

unint64_t sub_1A3D72624()
{
  unint64_t result = qword_1E96177D8[0];
  if (!qword_1E96177D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96177D8);
  }
  return result;
}

unint64_t sub_1A3D7267C()
{
  unint64_t result = qword_1E9617860;
  if (!qword_1E9617860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617860);
  }
  return result;
}

unint64_t sub_1A3D726D4()
{
  unint64_t result = qword_1E9617868[0];
  if (!qword_1E9617868[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617868);
  }
  return result;
}

unint64_t sub_1A3D7272C()
{
  unint64_t result = qword_1E96178F0;
  if (!qword_1E96178F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96178F0);
  }
  return result;
}

unint64_t sub_1A3D72784()
{
  unint64_t result = qword_1E96178F8[0];
  if (!qword_1E96178F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96178F8);
  }
  return result;
}

unint64_t sub_1A3D727DC()
{
  unint64_t result = qword_1E9617980;
  if (!qword_1E9617980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617980);
  }
  return result;
}

unint64_t sub_1A3D72834()
{
  unint64_t result = qword_1E9617988[0];
  if (!qword_1E9617988[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617988);
  }
  return result;
}

unint64_t sub_1A3D7288C()
{
  unint64_t result = qword_1E9617A10;
  if (!qword_1E9617A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617A10);
  }
  return result;
}

unint64_t sub_1A3D728E4()
{
  unint64_t result = qword_1E9617A18[0];
  if (!qword_1E9617A18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617A18);
  }
  return result;
}

unint64_t sub_1A3D7293C()
{
  unint64_t result = qword_1E9617AA0;
  if (!qword_1E9617AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617AA0);
  }
  return result;
}

unint64_t sub_1A3D72994()
{
  unint64_t result = qword_1E9617AA8[0];
  if (!qword_1E9617AA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617AA8);
  }
  return result;
}

unint64_t sub_1A3D729EC()
{
  unint64_t result = qword_1E9617B30;
  if (!qword_1E9617B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617B30);
  }
  return result;
}

unint64_t sub_1A3D72A44()
{
  unint64_t result = qword_1E9617B38[0];
  if (!qword_1E9617B38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617B38);
  }
  return result;
}

unint64_t sub_1A3D72A9C()
{
  unint64_t result = qword_1E9617BC0;
  if (!qword_1E9617BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617BC0);
  }
  return result;
}

unint64_t sub_1A3D72AF4()
{
  unint64_t result = qword_1E9617BC8[0];
  if (!qword_1E9617BC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617BC8);
  }
  return result;
}

unint64_t sub_1A3D72B4C()
{
  unint64_t result = qword_1E9617CD0;
  if (!qword_1E9617CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617CD0);
  }
  return result;
}

unint64_t sub_1A3D72BA4()
{
  unint64_t result = qword_1E9617CD8[0];
  if (!qword_1E9617CD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617CD8);
  }
  return result;
}

unint64_t sub_1A3D72BFC()
{
  unint64_t result = qword_1E9617D60;
  if (!qword_1E9617D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617D60);
  }
  return result;
}

unint64_t sub_1A3D72C54()
{
  unint64_t result = qword_1E9617D68[0];
  if (!qword_1E9617D68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617D68);
  }
  return result;
}

unint64_t sub_1A3D72CAC()
{
  unint64_t result = qword_1E9617DF0;
  if (!qword_1E9617DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617DF0);
  }
  return result;
}

unint64_t sub_1A3D72D04()
{
  unint64_t result = qword_1E9617DF8[0];
  if (!qword_1E9617DF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617DF8);
  }
  return result;
}

unint64_t sub_1A3D72D5C()
{
  unint64_t result = qword_1E9617E80;
  if (!qword_1E9617E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617E80);
  }
  return result;
}

unint64_t sub_1A3D72DB4()
{
  unint64_t result = qword_1E9617E88[0];
  if (!qword_1E9617E88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617E88);
  }
  return result;
}

unint64_t sub_1A3D72E0C()
{
  unint64_t result = qword_1E9617F10;
  if (!qword_1E9617F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617F10);
  }
  return result;
}

unint64_t sub_1A3D72E64()
{
  unint64_t result = qword_1E9617F18[0];
  if (!qword_1E9617F18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617F18);
  }
  return result;
}

unint64_t sub_1A3D72EBC()
{
  unint64_t result = qword_1E9617FA0;
  if (!qword_1E9617FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9617FA0);
  }
  return result;
}

unint64_t sub_1A3D72F14()
{
  unint64_t result = qword_1E9617FA8[0];
  if (!qword_1E9617FA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9617FA8);
  }
  return result;
}

unint64_t sub_1A3D72F6C()
{
  unint64_t result = qword_1E9618030;
  if (!qword_1E9618030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618030);
  }
  return result;
}

unint64_t sub_1A3D72FC4()
{
  unint64_t result = qword_1E9618038[0];
  if (!qword_1E9618038[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618038);
  }
  return result;
}

unint64_t sub_1A3D7301C()
{
  unint64_t result = qword_1E96180C0;
  if (!qword_1E96180C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96180C0);
  }
  return result;
}

unint64_t sub_1A3D73074()
{
  unint64_t result = qword_1E96180C8[0];
  if (!qword_1E96180C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96180C8);
  }
  return result;
}

unint64_t sub_1A3D730CC()
{
  unint64_t result = qword_1E9618150;
  if (!qword_1E9618150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618150);
  }
  return result;
}

unint64_t sub_1A3D73124()
{
  unint64_t result = qword_1E9618158[0];
  if (!qword_1E9618158[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618158);
  }
  return result;
}

unint64_t sub_1A3D7317C()
{
  unint64_t result = qword_1E96181E0;
  if (!qword_1E96181E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96181E0);
  }
  return result;
}

unint64_t sub_1A3D731D4()
{
  unint64_t result = qword_1E96181E8[0];
  if (!qword_1E96181E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96181E8);
  }
  return result;
}

unint64_t sub_1A3D7322C()
{
  unint64_t result = qword_1E9618270;
  if (!qword_1E9618270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618270);
  }
  return result;
}

unint64_t sub_1A3D73284()
{
  unint64_t result = qword_1E9618278;
  if (!qword_1E9618278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618278);
  }
  return result;
}

unint64_t sub_1A3D732DC()
{
  unint64_t result = qword_1E9618300;
  if (!qword_1E9618300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618300);
  }
  return result;
}

unint64_t sub_1A3D73334()
{
  unint64_t result = qword_1E9618308[0];
  if (!qword_1E9618308[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618308);
  }
  return result;
}

unint64_t sub_1A3D7338C()
{
  unint64_t result = qword_1E9618390;
  if (!qword_1E9618390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618390);
  }
  return result;
}

unint64_t sub_1A3D733E4()
{
  unint64_t result = qword_1E9618398[0];
  if (!qword_1E9618398[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618398);
  }
  return result;
}

unint64_t sub_1A3D7343C()
{
  unint64_t result = qword_1E9618420;
  if (!qword_1E9618420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618420);
  }
  return result;
}

unint64_t sub_1A3D73494()
{
  unint64_t result = qword_1E9618428[0];
  if (!qword_1E9618428[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618428);
  }
  return result;
}

unint64_t sub_1A3D734EC()
{
  unint64_t result = qword_1E96184B0;
  if (!qword_1E96184B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96184B0);
  }
  return result;
}

unint64_t sub_1A3D73544()
{
  unint64_t result = qword_1E96184B8[0];
  if (!qword_1E96184B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96184B8);
  }
  return result;
}

unint64_t sub_1A3D7359C()
{
  unint64_t result = qword_1E9618540;
  if (!qword_1E9618540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618540);
  }
  return result;
}

unint64_t sub_1A3D735F4()
{
  unint64_t result = qword_1E9618548[0];
  if (!qword_1E9618548[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618548);
  }
  return result;
}

unint64_t sub_1A3D7364C()
{
  unint64_t result = qword_1E96185D0;
  if (!qword_1E96185D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96185D0);
  }
  return result;
}

unint64_t sub_1A3D736A4()
{
  unint64_t result = qword_1E96185D8[0];
  if (!qword_1E96185D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96185D8);
  }
  return result;
}

unint64_t sub_1A3D736FC()
{
  unint64_t result = qword_1E9618660;
  if (!qword_1E9618660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618660);
  }
  return result;
}

unint64_t sub_1A3D73754()
{
  unint64_t result = qword_1E9618668[0];
  if (!qword_1E9618668[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618668);
  }
  return result;
}

unint64_t sub_1A3D737AC()
{
  unint64_t result = qword_1E96186F0;
  if (!qword_1E96186F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96186F0);
  }
  return result;
}

unint64_t sub_1A3D73804()
{
  unint64_t result = qword_1E96186F8[0];
  if (!qword_1E96186F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96186F8);
  }
  return result;
}

unint64_t sub_1A3D7385C()
{
  unint64_t result = qword_1E9618780;
  if (!qword_1E9618780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618780);
  }
  return result;
}

unint64_t sub_1A3D738B4()
{
  unint64_t result = qword_1E9618788[0];
  if (!qword_1E9618788[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618788);
  }
  return result;
}

unint64_t sub_1A3D7390C()
{
  unint64_t result = qword_1E9618810;
  if (!qword_1E9618810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618810);
  }
  return result;
}

unint64_t sub_1A3D73964()
{
  unint64_t result = qword_1E9618818[0];
  if (!qword_1E9618818[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618818);
  }
  return result;
}

unint64_t sub_1A3D739BC()
{
  unint64_t result = qword_1E96188A0;
  if (!qword_1E96188A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96188A0);
  }
  return result;
}

unint64_t sub_1A3D73A14()
{
  unint64_t result = qword_1E96188A8[0];
  if (!qword_1E96188A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96188A8);
  }
  return result;
}

unint64_t sub_1A3D73A6C()
{
  unint64_t result = qword_1E9618930;
  if (!qword_1E9618930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618930);
  }
  return result;
}

unint64_t sub_1A3D73AC4()
{
  unint64_t result = qword_1E9618938[0];
  if (!qword_1E9618938[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618938);
  }
  return result;
}

uint64_t sub_1A3D73B18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72437265746E6563 && a2 == 0xEA0000000000706FLL;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x466F54656C616373 && a2 == 0xEA00000000007469 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x466F54656C616373 && a2 == 0xEB000000006C6C69 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A40B5BA0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B5BC0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A3D73D3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1952867692 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A3D73E18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6969637361 && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6873696C676E65 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6873696E6164 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6863747564 && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x68636E657266 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E616D726567 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x69646E616C656369 && a2 == 0xE900000000000063 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E61696C617469 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6169676577726F6ELL && a2 == 0xE90000000000006ELL || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6575677574726F70 && a2 == 0xEA00000000006573 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6873696E617073 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x68736964657773 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_1A3D7433C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6365747A61 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x393365646F63 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6843393365646F63 && a2 == 0xEE006D75736B6365 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7546393365646F63 && a2 == 0xEF49494353416C6CLL || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B5BE0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x333965646F63 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69333965646F63 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x38323165646F63 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7274614D61746164 && a2 == 0xEA00000000007869 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 946757989 && a2 == 0xE400000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x33316E6165 && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x35666F3269 && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x65684335666F3269 && a2 == 0xED00006D75736B63 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x3431667469 && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x373134666470 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 29297 && a2 == 0xE200000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 1701015669 && a2 == 0xE400000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x72616261646F63 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4261746144317367 && a2 == 0xEA00000000007261 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A40B5C00 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A40B5C20 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x4644506F7263696DLL && a2 == 0xEB00000000373134 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x52516F7263696DLL && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x7373656C5069736DLL && a2 == 0xEA00000000007965 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x4370696C43707061 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 24;
    }
    else {
      return 25;
    }
  }
}

uint64_t sub_1A3D74D40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616F6C66 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C62756F64 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void QuadrilateralProviding.boundingBox.getter(uint64_t a1@<X0>, void *a2@<X1>, double *a3@<X8>)
{
  void (*v5)(_OWORD *__return_ptr);
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void (*v29)(long long *__return_ptr, uint64_t, void *);
  void (*v30)(long long *__return_ptr, uint64_t, void *);
  void (*v31)(long long *__return_ptr, uint64_t, void *);
  long long v33;
  long long v34;
  long long v35;
  _OWORD v36[2];
  uint64_t vars8;

  uint64_t v5 = (void (*)(_OWORD *__return_ptr))a2[2];
  v5(v36);
  uint64_t v35 = v36[0];
  char v6 = NormalizedPoint.x.getter();
  uint64_t v31 = (void (*)(long long *__return_ptr, uint64_t, void *))a2[3];
  v31(&v35, a1, a2);
  char v34 = v35;
  BOOL v7 = NormalizedPoint.x.getter();
  uint64_t v30 = (void (*)(long long *__return_ptr, uint64_t, void *))a2[5];
  v30(&v34, a1, a2);
  char v33 = v34;
  int v8 = NormalizedPoint.x.getter();
  uint64_t v29 = (void (*)(long long *__return_ptr, uint64_t, void *))a2[4];
  v29(&v33, a1, a2);
  uint64_t v9 = NormalizedPoint.x.getter();
  if (v7 >= v6) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = v7;
  }
  if (v8 < v10) {
    uint64_t v10 = v8;
  }
  if (v9 >= v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = v9;
  }
  ((void (*)(_OWORD *__return_ptr, uint64_t, void *))v5)(v36, a1, a2);
  uint64_t v35 = v36[0];
  char v12 = NormalizedPoint.y.getter();
  v31(&v35, a1, a2);
  char v34 = v35;
  uint64_t v13 = NormalizedPoint.y.getter();
  v30(&v34, a1, a2);
  char v33 = v34;
  uint64_t v14 = NormalizedPoint.y.getter();
  v29(&v33, a1, a2);
  uint64_t v15 = NormalizedPoint.y.getter();
  if (v12 > v13) {
    char v16 = v12;
  }
  else {
    char v16 = v13;
  }
  if (v16 <= v14) {
    char v16 = v14;
  }
  if (v16 > v15) {
    char v17 = v16;
  }
  else {
    char v17 = v15;
  }
  ((void (*)(_OWORD *__return_ptr, uint64_t, void *))v5)(v36, a1, a2);
  uint64_t v35 = v36[0];
  uint64_t v18 = NormalizedPoint.x.getter();
  v31(&v35, a1, a2);
  char v34 = v35;
  uint64_t v19 = NormalizedPoint.x.getter();
  v30(&v34, a1, a2);
  char v33 = v34;
  uint64_t v20 = NormalizedPoint.x.getter();
  v29(&v33, a1, a2);
  char v21 = NormalizedPoint.x.getter();
  if (v18 > v19) {
    char v22 = v18;
  }
  else {
    char v22 = v19;
  }
  if (v22 <= v20) {
    char v22 = v20;
  }
  if (v22 > v21) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = v21;
  }
  ((void (*)(_OWORD *__return_ptr, uint64_t, void *))v5)(v36, a1, a2);
  uint64_t v35 = v36[0];
  uint64_t v24 = NormalizedPoint.y.getter();
  v31(&v35, a1, a2);
  char v34 = v35;
  uint64_t v25 = NormalizedPoint.y.getter();
  v30(&v34, a1, a2);
  char v33 = v34;
  uint64_t v26 = NormalizedPoint.y.getter();
  v29(&v33, a1, a2);
  uint64_t v27 = NormalizedPoint.y.getter();
  if (v25 >= v24) {
    uint64_t v28 = v24;
  }
  else {
    uint64_t v28 = v25;
  }
  if (v26 < v28) {
    uint64_t v28 = v26;
  }
  if (v27 < v28) {
    uint64_t v28 = v27;
  }

  NormalizedRect.init(x:y:width:height:)(a3, v11, v28, v23 - v11, v17 - v28);
}

uint64_t sub_1A3D75270(uint64_t a1, uint64_t a2, void (**a3)(void *__return_ptr, void, void))
{
  ((void (**)(long long *__return_ptr, uint64_t, void))a3)[2](&v7, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC510);
  sub_1A3C97A70();
  uint64_t result = sub_1A4096DBC();
  if (!v3)
  {
    ((void (**)(long long *__return_ptr, uint64_t, void))a3)[3](&v7, a2, a3);
    sub_1A4096DBC();
    ((void (**)(long long *__return_ptr, uint64_t, void))a3)[5](&v7, a2, a3);
    sub_1A4096DBC();
    ((void (**)(long long *__return_ptr, uint64_t, void))a3)[4](&v7, a2, a3);
    return sub_1A4096DBC();
  }
  return result;
}

uint64_t sub_1A3D75450(uint64_t a1, void (**a2)(void *__return_ptr, void, void))
{
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  ((void (**)(long long *__return_ptr, uint64_t, void))a2)[2](&v5, a1, a2);
  sub_1A3C970F0();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  ((void (**)(long long *__return_ptr, uint64_t, void))a2)[3](&v5, a1, a2);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  ((void (**)(long long *__return_ptr, uint64_t, void))a2)[5](&v5, a1, a2);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  ((void (**)(long long *__return_ptr, uint64_t, void))a2)[4](&v5, a1, a2);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A3D7569C()
{
  uint64_t result = 0x7466654C706F74;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7468676952706F74;
      break;
    case 2:
      uint64_t result = 0x69526D6F74746F62;
      break;
    case 3:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D75738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D757D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D75760(uint64_t a1)
{
  unint64_t v2 = sub_1A3C9C5D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D7579C(uint64_t a1)
{
  unint64_t v2 = sub_1A3C9C5D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D757D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7466654C706F74 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7468676952706F74 && a2 == 0xE800000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69526D6F74746F62 && a2 == 0xEB00000000746867 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654C6D6F74746F62 && a2 == 0xEA00000000007466)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1A3D759BC()
{
  unint64_t result = qword_1E95EEB78;
  if (!qword_1E95EEB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEB78);
  }
  return result;
}

unint64_t sub_1A3D75A14()
{
  unint64_t result = qword_1E95EEB80;
  if (!qword_1E95EEB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEB80);
  }
  return result;
}

unint64_t sub_1A3D75A6C()
{
  unint64_t result = qword_1E95EEB88;
  if (!qword_1E95EEB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEB88);
  }
  return result;
}

uint64_t dispatch thunk of QuadrilateralProviding.topLeft.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of QuadrilateralProviding.topRight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of QuadrilateralProviding.bottomRight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of QuadrilateralProviding.bottomLeft.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

unsigned char *storeEnumTagSinglePayload for QuadrilateralCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D75BDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuadrilateralCodingKeys()
{
  return &type metadata for QuadrilateralCodingKeys;
}

id sub_1A3D75C14()
{
  type metadata accessor for ImageRequestHandler();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);

  return v1;
}

uint64_t static GenerateImageFeaturePrintRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static GenerateImageFeaturePrintRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t GenerateImageFeaturePrintRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D75CA8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D75F68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D75CE4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D75F68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D75D20(uint64_t a1)
{
  unint64_t v2 = sub_1A3D75FBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D75D5C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D75FBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GenerateImageFeaturePrintRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB90);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB98);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D75F68();
  sub_1A4096FEC();
  sub_1A3D75FBC();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D75F68()
{
  unint64_t result = qword_1E9618C58;
  if (!qword_1E9618C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9618C58);
  }
  return result;
}

unint64_t sub_1A3D75FBC()
{
  unint64_t result = qword_1E9618C60[0];
  if (!qword_1E9618C60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9618C60);
  }
  return result;
}

uint64_t GenerateImageFeaturePrintRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t GenerateImageFeaturePrintRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEBA0);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEBA8);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D75F68();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D75FBC();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for GenerateImageFeaturePrintRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D7633C(void *a1)
{
  return GenerateImageFeaturePrintRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D76354(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB90);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEB98);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D75F68();
  sub_1A4096FEC();
  sub_1A3D75FBC();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double GenerateImageFeaturePrintRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(&v8);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3D7670C();
    sub_1A3E2C988((uint64_t)&type metadata for GenerateImageFeaturePrintRequest, v5, v6);
  }
  *(unsigned char *)a2 = 2;
  *(__n128 *)(a2 + 8) = v8;
  double result = v9[0];
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v9;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v4;
  return result;
}

void GenerateImageFeaturePrintRequest.cropAndScaleAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *GenerateImageFeaturePrintRequest.cropAndScaleAction.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*GenerateImageFeaturePrintRequest.cropAndScaleAction.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 GenerateImageFeaturePrintRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 GenerateImageFeaturePrintRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*GenerateImageFeaturePrintRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D76630()
{
  unint64_t v0 = sub_1A3D7670C();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for GenerateImageFeaturePrintRequest, v0);
  qword_1E9618C48 = result;
  return result;
}

uint64_t static GenerateImageFeaturePrintRequest.supportedRevisions.getter()
{
  if (qword_1E9618C40 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void GenerateImageFeaturePrintRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 152;
}

void GenerateImageFeaturePrintRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *GenerateImageFeaturePrintRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*GenerateImageFeaturePrintRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D7670C()
{
  unint64_t result = qword_1E95EEBB0;
  if (!qword_1E95EEBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEBB0);
  }
  return result;
}

int *sub_1A3D76760()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC20);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(7, 0, 19);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(7, 0, 19);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(7, 0, 19);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for GenerateImageFeaturePrintRequest.Revision, v0 + 32);
  qword_1E9643D38 = v0;
  return result;
}

uint64_t GenerateImageFeaturePrintRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  sub_1A3CA7378();
  sub_1A40960DC();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t GenerateImageFeaturePrintRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1A4096F2C();
  sub_1A3CA7378();
  sub_1A40960DC();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3D769EC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D76EEC();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D76A28@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3D7670C();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D76A7C(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3D7670C();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D76AD0(_WORD *a1@<X8>)
{
  *a1 = 152;
}

uint64_t sub_1A3D76ADC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7670C();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D76B20()
{
  if (qword_1E9618C50 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D76B7C(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA308();

  return sub_1A3E2C684(a1, a2);
}

void sub_1A3D76BC8(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(objc_allocWithZone((Class)VNCoreSceneUnderstandingDetectorSceneprintConfiguration), sel_initWithObservationsRecipient_, a2);
  uint64_t v4 = sub_1A409617C();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC5C8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A40E88E0;
  *(void *)(v7 + 32) = v3;
  v12[0] = v7;
  sub_1A409632C();
  v12[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEBB8);
  __n128 v8 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
  id v9 = v3;
  uint64_t v10 = (void (*)(unsigned char *, void))v8(v11);
  sub_1A3C8BC40((uint64_t)v12, v4, v6);
  v10(v11, 0);
}

void sub_1A3D76CF8(uint64_t a1, uint64_t a2)
{
}

unint64_t sub_1A3D76D14()
{
  unint64_t result = qword_1E95EEBC0[0];
  if (!qword_1E95EEBC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95EEBC0);
  }
  return result;
}

unint64_t sub_1A3D76D68(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF0F0();
  unint64_t result = sub_1A3D76D98();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D76D98()
{
  unint64_t result = qword_1E95EEBF8;
  if (!qword_1E95EEBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEBF8);
  }
  return result;
}

unint64_t sub_1A3D76DF0()
{
  unint64_t result = qword_1E95EEC00;
  if (!qword_1E95EEC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEC00);
  }
  return result;
}

unint64_t sub_1A3D76E48()
{
  unint64_t result = qword_1E95EEC08;
  if (!qword_1E95EEC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEC08);
  }
  return result;
}

unint64_t sub_1A3D76E9C(uint64_t a1)
{
  unint64_t result = sub_1A3CCA308();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D76EC4(uint64_t a1)
{
  unint64_t result = sub_1A3D76EEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D76EEC()
{
  unint64_t result = qword_1E95EEC10;
  if (!qword_1E95EEC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEC10);
  }
  return result;
}

uint64_t sub_1A3D76F40()
{
  return sub_1A3D77270(&qword_1E95EEC18, (void (*)(uint64_t))type metadata accessor for FeaturePrintObservation);
}

unint64_t sub_1A3D76F88(uint64_t a1)
{
  unint64_t result = sub_1A3D7670C();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for GenerateImageFeaturePrintRequest()
{
  return &type metadata for GenerateImageFeaturePrintRequest;
}

ValueMetadata *type metadata accessor for GenerateImageFeaturePrintRequest.Revision()
{
  return &type metadata for GenerateImageFeaturePrintRequest.Revision;
}

unsigned char *_s6Vision32GenerateImageFeaturePrintRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D77070);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateImageFeaturePrintRequest.Revision.CodingKeys()
{
  return &type metadata for GenerateImageFeaturePrintRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerateImageFeaturePrintRequest.Revision.Revision2CodingKeys()
{
  return &type metadata for GenerateImageFeaturePrintRequest.Revision.Revision2CodingKeys;
}

unint64_t sub_1A3D770BC()
{
  unint64_t result = qword_1E96194F0;
  if (!qword_1E96194F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96194F0);
  }
  return result;
}

unint64_t sub_1A3D77114()
{
  unint64_t result = qword_1E9619600;
  if (!qword_1E9619600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9619600);
  }
  return result;
}

unint64_t sub_1A3D7716C()
{
  unint64_t result = qword_1E9619608[0];
  if (!qword_1E9619608[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9619608);
  }
  return result;
}

unint64_t sub_1A3D771C4()
{
  unint64_t result = qword_1E9619690;
  if (!qword_1E9619690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9619690);
  }
  return result;
}

unint64_t sub_1A3D7721C()
{
  unint64_t result = qword_1E9619698[0];
  if (!qword_1E9619698[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9619698);
  }
  return result;
}

uint64_t sub_1A3D77270(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static HumanBodyPose3DObservation.EstimationTechnique.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HumanBodyPose3DObservation.EstimationTechnique.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D77300()
{
  if (*v0) {
    return 0x646572757361656DLL;
  }
  else {
    return 0x636E657265666572;
  }
}

uint64_t sub_1A3D77340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D7DD2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D77368(uint64_t a1)
{
  unint64_t v2 = sub_1A3D77774();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D773A4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D77774();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D773E0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D777C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D7741C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D777C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D77458(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7781C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D77494(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7781C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HumanBodyPose3DObservation.EstimationTechnique.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC28);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC30);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC38);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D77774();
  sub_1A4096FEC();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3D777C8();
    uint64_t v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3D7781C();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_1A3D77774()
{
  unint64_t result = qword_1E9619730;
  if (!qword_1E9619730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9619730);
  }
  return result;
}

unint64_t sub_1A3D777C8()
{
  unint64_t result = qword_1E9619738;
  if (!qword_1E9619738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9619738);
  }
  return result;
}

unint64_t sub_1A3D7781C()
{
  unint64_t result = qword_1E9619740;
  if (!qword_1E9619740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9619740);
  }
  return result;
}

uint64_t HumanBodyPose3DObservation.EstimationTechnique.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t HumanBodyPose3DObservation.EstimationTechnique.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC40);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC48);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC50);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D77774();
  uint64_t v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *char v22 = &type metadata for HumanBodyPose3DObservation.EstimationTechnique;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3D777C8();
    uint64_t v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3D7781C();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A3D77D10@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return HumanBodyPose3DObservation.EstimationTechnique.init(from:)(a1, a2);
}

uint64_t sub_1A3D77D28(void *a1)
{
  return HumanBodyPose3DObservation.EstimationTechnique.encode(to:)(a1);
}

void HumanBodyPose3DObservation.heightEstimationTechnique.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t HumanBodyPose3DObservation.bodyHeight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HumanBodyPose3DObservation() + 20);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for HumanBodyPose3DObservation()
{
  uint64_t result = qword_1E961A150;
  if (!qword_1E961A150) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 HumanBodyPose3DObservation.cameraOriginMatrix.getter()
{
  return *(__n128 *)(v0 + *(int *)(type metadata accessor for HumanBodyPose3DObservation() + 24));
}

uint64_t HumanBodyPose3DObservation.availableJointNames.getter()
{
  type metadata accessor for HumanBodyPose3DObservation();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A3D7DAA4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void *HumanBodyPose3DObservation.availableJointsGroupNames.getter()
{
  return &unk_1EF74C910;
}

void *static HumanBodyPose3DObservation.JointsGroupName.allCases.getter()
{
  return &unk_1EF74C558;
}

uint64_t HumanBodyPose3DObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HumanBodyPose3DObservation() + 28);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

float HumanBodyPose3DObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for HumanBodyPose3DObservation() + 32));
}

__n128 HumanBodyPose3DObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HumanBodyPose3DObservation() + 36);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t HumanBodyPose3DObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for HumanBodyPose3DObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t HumanBodyPose3DObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v0 = type metadata accessor for HumanBodyPose3DObservation();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v1 = sub_1A3D7E0C4(&qword_1E95EEC60, (void (*)(uint64_t))type metadata accessor for HumanBodyPose3DObservation);
  sub_1A3D8AC8C(v0, (uint64_t)&off_1EF74CBC8, v1);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

void __swiftcall HumanBodyPose3DObservation.joint(for:)(Vision::Joint3D_optional *__return_ptr retstr, Vision::HumanBodyPose3DObservation::JointName a2)
{
  uint64_t v3 = (unsigned __int8 *)a2;
  uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for HumanBodyPose3DObservation() + 44));
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1A3D7C774(*v3), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(v5 + 56) + 160 * v6;
    simd_float4 v9 = *(simd_float4 *)(v8 + 16);
    simd_float4 v10 = *(simd_float4 *)(v8 + 32);
    simd_float4 v11 = *(simd_float4 *)(v8 + 48);
    simd_float4 v12 = *(simd_float4 *)(v8 + 64);
    simd_float4 v13 = *(simd_float4 *)(v8 + 80);
    simd_float4 v14 = *(simd_float4 *)(v8 + 96);
    simd_float4 v15 = *(simd_float4 *)(v8 + 112);
    uint64_t v16 = *(void *)(v8 + 128);
    char v17 = *(void **)(v8 + 136);
    uint64_t v18 = *(void *)(v8 + 144);
    uint64_t v19 = *(void **)(v8 + 152);
    retstr->value.position.columns[0] = *(simd_float4 *)v8;
    retstr->value.position.columns[1] = v9;
    retstr->value.position.columns[2] = v10;
    retstr->value.position.columns[3] = v11;
    retstr->value.localPosition.columns[0] = v12;
    retstr->value.localPosition.columns[1] = v13;
    retstr->value.localPosition.columns[2] = v14;
    retstr->value.localPosition.columns[3] = v15;
    retstr->value.identifier._countAndFlagsBits = v16;
    retstr->value.identifier._object = v17;
    retstr->value.parentJoint._countAndFlagsBits = v18;
    retstr->value.parentJoint._object = v19;
    TtTrkRpnNode::config((TtTrkRpnNode *)retstr);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1A3D7DB7C(v20);
    sub_1A3CCB8B8((uint64_t)v20, (uint64_t)retstr, &qword_1E95EEC68);
  }
}

uint64_t HumanBodyPose3DObservation.allJoints(in:)(unsigned __int8 *a1)
{
  if (*a1 == 6)
  {
    uint64_t v2 = *(void **)(v1 + *(int *)(type metadata accessor for HumanBodyPose3DObservation() + 44));
    swift_bridgeObjectRetain();
    return (uint64_t)v2;
  }
  v46[0] = *a1;
  uint64_t v3 = sub_1A3D78544(v46);
  if (v3) {
    char v4 = v3;
  }
  else {
    char v4 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (void *)sub_1A3D78620(MEMORY[0x1E4FBC860]);
  uint64_t v5 = v4[2];
  if (!v5)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  uint64_t v6 = 0;
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for HumanBodyPose3DObservation() + 44));
  uint64_t v35 = v5;
  uint64_t v36 = v4;
  uint64_t v34 = v7;
  while (1)
  {
    unsigned __int8 v9 = *((unsigned char *)v4 + v6 + 32);
    if (!*(void *)(v7 + 16) || (unint64_t v10 = sub_1A3D7C774(*((unsigned char *)v4 + v6 + 32)), (v11 & 1) == 0))
    {
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_1A3D7C774(v9);
      char v27 = v26;
      swift_bridgeObjectRelease();
      if (v27)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)char v46 = v2;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1A3D7D8C4();
          uint64_t v2 = *(void **)v46;
        }
        sub_1A3D7D348(v25, (uint64_t)v2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_10;
    }
    uint64_t v12 = *(void *)(v7 + 56) + 160 * v10;
    long long v37 = *(_OWORD *)v12;
    long long v38 = *(_OWORD *)(v12 + 16);
    long long v39 = *(_OWORD *)(v12 + 32);
    long long v40 = *(_OWORD *)(v12 + 48);
    long long v41 = *(_OWORD *)(v12 + 64);
    long long v42 = *(_OWORD *)(v12 + 80);
    long long v43 = *(_OWORD *)(v12 + 96);
    long long v44 = *(_OWORD *)(v12 + 112);
    uint64_t v13 = *(void *)(v12 + 128);
    uint64_t v14 = *(void *)(v12 + 136);
    uint64_t v15 = *(void *)(v12 + 152);
    uint64_t v45 = *(void *)(v12 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)char v46 = v2;
    unint64_t v18 = sub_1A3D7C774(v9);
    uint64_t v19 = v2[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (v2[3] >= v21)
    {
      if ((v16 & 1) == 0) {
        sub_1A3D7D8C4();
      }
    }
    else
    {
      sub_1A3D7CD98(v21, v16);
      unint64_t v23 = sub_1A3D7C774(v9);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_30;
      }
      unint64_t v18 = v23;
    }
    uint64_t v2 = *(void **)v46;
    if (v22)
    {
      uint64_t v8 = *(void *)(*(void *)v46 + 56) + 160 * v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_OWORD *)uint64_t v8 = v37;
      *(_OWORD *)(v8 + 16) = v38;
      *(_OWORD *)(v8 + 32) = v39;
      *(_OWORD *)(v8 + 48) = v40;
      *(_OWORD *)(v8 + 64) = v41;
      *(_OWORD *)(v8 + 80) = v42;
      *(_OWORD *)(v8 + 96) = v43;
      *(_OWORD *)(v8 + 112) = v44;
      *(void *)(v8 + 128) = v13;
      *(void *)(v8 + 136) = v14;
      *(void *)(v8 + 144) = v45;
      *(void *)(v8 + 152) = v15;
    }
    else
    {
      *(void *)(*(void *)v46 + 8 * (v18 >> 6) + 64) |= 1 << v18;
      *(unsigned char *)(v2[6] + v18) = v9;
      uint64_t v29 = v2[7] + 160 * v18;
      *(_OWORD *)uint64_t v29 = v37;
      *(_OWORD *)(v29 + 16) = v38;
      *(_OWORD *)(v29 + 32) = v39;
      *(_OWORD *)(v29 + 48) = v40;
      *(_OWORD *)(v29 + 64) = v41;
      *(_OWORD *)(v29 + 80) = v42;
      *(_OWORD *)(v29 + 96) = v43;
      *(_OWORD *)(v29 + 112) = v44;
      *(void *)(v29 + 128) = v13;
      *(void *)(v29 + 136) = v14;
      *(void *)(v29 + 144) = v45;
      *(void *)(v29 + 152) = v15;
      uint64_t v30 = v2[2];
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (v31) {
        goto LABEL_29;
      }
      v2[2] = v32;
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v35;
    char v4 = v36;
    uint64_t v7 = v34;
LABEL_10:
    if (v5 == ++v6) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_1A4096EBC();
  __break(1u);
  return result;
}

void *sub_1A3D78544(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = type metadata accessor for HumanBodyPose3DObservation();
  uint64_t result = 0;
  unsigned int v5 = *(unsigned __int16 *)(v1 + *(int *)(v3 + 40));
  if (v5 <= 0xFFF7)
  {
    if (v5 >> 3 == 13)
    {
      uint64_t result = &unk_1EF74C788;
      switch(v2)
      {
        case 1:
          uint64_t result = &unk_1EF74C6C0;
          break;
        case 2:
          uint64_t result = &unk_1EF74C6E8;
          break;
        case 3:
          uint64_t result = &unk_1EF74C710;
          break;
        case 4:
          uint64_t result = &unk_1EF74C738;
          break;
        case 5:
          uint64_t result = &unk_1EF74C760;
          break;
        default:
          return result;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1A3D78620(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEDD8);
  uint64_t v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  char v4 = (long long *)(a1 + 112);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 80);
    long long v23 = *(v4 - 4);
    long long v21 = *(v4 - 2);
    long long v22 = *(v4 - 3);
    long long v19 = *v4;
    long long v20 = *(v4 - 1);
    long long v17 = v4[2];
    long long v18 = v4[1];
    long long v16 = v4[3];
    uint64_t v6 = *((void *)v4 + 8);
    uint64_t v7 = *((void *)v4 + 9);
    uint64_t v9 = *((void *)v4 + 10);
    uint64_t v8 = *((void *)v4 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3D7C774(v5);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v12 = v2[7] + 160 * result;
    *(_OWORD *)uint64_t v12 = v23;
    *(_OWORD *)(v12 + 16) = v22;
    *(_OWORD *)(v12 + 32) = v21;
    *(_OWORD *)(v12 + 48) = v20;
    *(_OWORD *)(v12 + 64) = v19;
    *(_OWORD *)(v12 + 80) = v18;
    *(_OWORD *)(v12 + 96) = v17;
    *(_OWORD *)(v12 + 112) = v16;
    *(void *)(v12 + 128) = v6;
    *(void *)(v12 + 136) = v7;
    *(void *)(v12 + 144) = v9;
    *(void *)(v12 + 152) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

Vision::NormalizedPoint __swiftcall HumanBodyPose3DObservation.pointInImage(for:)(Vision::HumanBodyPose3DObservation::JointName a1)
{
  uint64_t v3 = (unsigned __int8 *)a1;
  char v4 = v1;
  uint64_t v5 = type metadata accessor for HumanBodyPose3DObservation();
  if (*(void *)(*(void *)(v2 + *(int *)(v5 + 44)) + 16)
    && (uint64_t v6 = v5, v7 = (TtTrkRpnNode *)sub_1A3D7C774(*v3), (v8 & 1) != 0))
  {
    TtTrkRpnNode::config(v7);
    NormalizedPoint.init(imagePoint:in:)((CGPoint)__PAIR128__(v10, v9), *(CGSize *)(v2 + *(int *)(v6 + 56)));
    Vision::NormalizedPoint v13 = NormalizedPoint.verticallyFlipped()();
    double y = v13.cgPoint.y;
    double x = v13.cgPoint.x;
  }
  else
  {
    static NormalizedPoint.zero.getter(v4);
  }
  result.cgPoint.double y = y;
  result.cgPoint.double x = x;
  return result;
}

Vision::HumanBodyPose3DObservation::JointName __swiftcall HumanBodyPose3DObservation.parentJointName(for:)(Vision::HumanBodyPose3DObservation::JointName a1)
{
  uint64_t v3 = (unsigned __int8 *)a1;
  char v4 = v1;
  unint64_t v5 = type metadata accessor for HumanBodyPose3DObservation();
  uint64_t v6 = *(void *)(v2 + *(int *)(v5 + 44));
  if (*(void *)(v6 + 16))
  {
    unint64_t v5 = sub_1A3D7C774(*v3);
    char v7 = 15;
    if (v8)
    {
      uint64_t v9 = *(void *)(v6 + 56) + 160 * v5;
      uint64_t v10 = *(void *)(v9 + 144);
      char v11 = *(void **)(v9 + 152);
      swift_bridgeObjectRetain();
      v12._countAndFlagsBits = v10;
      v12._object = v11;
      LOBYTE(v5) = HumanBodyPose3DObservation.JointName.init(rawValue:)(v12);
      if (v14 == 17) {
        char v7 = 15;
      }
      else {
        char v7 = v14;
      }
    }
  }
  else
  {
    char v7 = 15;
  }
  *char v4 = v7;
  return (char)v5;
}

Vision::HumanBodyPose3DObservation::JointName_optional __swiftcall HumanBodyPose3DObservation.JointName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A4096E7C();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 17;
  if (v3 < 0x11) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void __swiftcall HumanBodyPose3DObservation.cameraRelativePosition(for:)(simd_float4x4 *__return_ptr retstr, Vision::HumanBodyPose3DObservation::JointName a2)
{
  unint64_t v3 = (unsigned __int8 *)a2;
  if (*(void *)(*(void *)(v2 + *(int *)(type metadata accessor for HumanBodyPose3DObservation() + 44)) + 16)) {
    sub_1A3D7C774(*v3);
  }
}

uint64_t HumanBodyPose3DObservation.JointName.rawValue.getter()
{
  uint64_t result = 0x64616548706F74;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65487265746E6563;
      break;
    case 2:
      uint64_t result = 0x68537265746E6563;
      break;
    case 3:
      uint64_t result = 0x756F68537466656CLL;
      break;
    case 4:
      uint64_t result = 0x6F68537468676972;
      break;
    case 5:
      uint64_t result = 0x6F626C457466656CLL;
      break;
    case 6:
      uint64_t result = 0x626C457468676972;
      break;
    case 7:
      uint64_t result = 0x736972577466656CLL;
      break;
    case 8:
      uint64_t result = 0x6972577468676972;
      break;
    case 9:
      uint64_t result = 0x7069487466656CLL;
      break;
    case 0xA:
      uint64_t result = 0x7069487468676972;
      break;
    case 0xB:
      uint64_t result = 0x65656E4B7466656CLL;
      break;
    case 0xC:
      uint64_t result = 0x656E4B7468676972;
      break;
    case 0xD:
      uint64_t result = 0x6C6B6E417466656CLL;
      break;
    case 0xE:
      uint64_t result = 0x6B6E417468676972;
      break;
    case 0xF:
      uint64_t result = 1953460082;
      break;
    case 0x10:
      uint64_t result = 0x656E697073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D78D14()
{
  return sub_1A3D78D20();
}

uint64_t sub_1A3D78D20()
{
  uint64_t v0 = HumanBodyPose3DObservation.JointName.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == HumanBodyPose3DObservation.JointName.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A3D78DB8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1684104552;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1684104552;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6D72417466656CLL;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x67654C7466656CLL;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6D72417468676972;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x67654C7468676972;
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F73726F74;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6D72417466656CLL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x67654C7466656CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6D72417468676972) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x67654C7468676972;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6F73726F74) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1A4096E5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Vision::HumanBodyPose3DObservation::JointName_optional sub_1A3D78FAC(Swift::String *a1)
{
  return HumanBodyPose3DObservation.JointName.init(rawValue:)(*a1);
}

uint64_t sub_1A3D78FB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HumanBodyPose3DObservation.JointName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A3D78FE0()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D79048()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D79150()
{
  HumanBodyPose3DObservation.JointName.rawValue.getter();
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D791B4()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D79218()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D7931C()
{
  return sub_1A40962CC();
}

uint64_t sub_1A3D7937C()
{
  return sub_1A40962AC();
}

Vision::HumanBodyPose3DObservation::JointsGroupName_optional __swiftcall HumanBodyPose3DObservation.JointsGroupName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A4096C5C();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t HumanBodyPose3DObservation.JointsGroupName.rawValue.getter()
{
  uint64_t result = 1684104552;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D72417466656CLL;
      break;
    case 2:
      uint64_t result = 0x67654C7466656CLL;
      break;
    case 3:
      uint64_t result = 0x6D72417468676972;
      break;
    case 4:
      uint64_t result = 0x67654C7468676972;
      break;
    case 5:
      uint64_t result = 0x6F73726F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D794E4(unsigned __int8 *a1, char *a2)
{
  return sub_1A3D78DB8(*a1, *a2);
}

Vision::HumanBodyPose3DObservation::JointsGroupName_optional sub_1A3D794F0(Swift::String *a1)
{
  return HumanBodyPose3DObservation.JointsGroupName.init(rawValue:)(*a1);
}

void sub_1A3D794FC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1684104552;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6D72417466656CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x67654C7466656CLL;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x6D72417468676972;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x67654C7468676972;
      a1[1] = 0xE800000000000000;
      break;
    case 5:
      *a1 = 0x6F73726F74;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_1A3D795CC(void *a1@<X8>)
{
  *a1 = &unk_1EF74C558;
}

uint64_t sub_1A3D795DC()
{
  return sub_1A3D79048();
}

uint64_t sub_1A3D795E4()
{
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D796D4()
{
  return sub_1A3D79218();
}

uint64_t sub_1A3D796E0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v8 = v7 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v9 >= v30) {
      return 1;
    }
    unint64_t v10 = *(void *)(v29 + 8 * v9);
    ++v3;
    if (!v10)
    {
      int64_t v3 = v9 + 1;
      if (v9 + 1 >= v30) {
        return 1;
      }
      unint64_t v10 = *(void *)(v29 + 8 * v3);
      if (!v10)
      {
        int64_t v3 = v9 + 2;
        if (v9 + 2 >= v30) {
          return 1;
        }
        unint64_t v10 = *(void *)(v29 + 8 * v3);
        if (!v10)
        {
          int64_t v3 = v9 + 3;
          if (v9 + 3 >= v30) {
            return 1;
          }
          unint64_t v10 = *(void *)(v29 + 8 * v3);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v3 << 6);
LABEL_24:
    char v12 = *(unsigned char *)(*(void *)(v2 + 48) + v8);
    uint64_t v13 = *(void *)(v2 + 56) + 160 * v8;
    long long v14 = *(_OWORD *)v13;
    long long v15 = *(_OWORD *)(v13 + 16);
    long long v16 = *(_OWORD *)(v13 + 32);
    long long v17 = *(_OWORD *)(v13 + 48);
    long long v18 = *(_OWORD *)(v13 + 64);
    long long v19 = *(_OWORD *)(v13 + 80);
    long long v20 = *(_OWORD *)(v13 + 96);
    long long v21 = *(_OWORD *)(v13 + 112);
    uint64_t v22 = *(void *)(v13 + 128);
    uint64_t v23 = *(void *)(v13 + 136);
    uint64_t v24 = *(void *)(v13 + 144);
    uint64_t v25 = *(void *)(v13 + 152);
    v31[0] = v12;
    long long v32 = v14;
    long long v33 = v15;
    long long v34 = v16;
    long long v35 = v17;
    long long v36 = v18;
    long long v37 = v19;
    long long v38 = v20;
    long long v39 = v21;
    uint64_t v40 = v22;
    uint64_t v41 = v23;
    uint64_t v42 = v24;
    uint64_t v43 = v25;
    TtTrkRpnNode::config((TtTrkRpnNode *)v31);
    sub_1A3CCB8B8((uint64_t)v31, (uint64_t)v44, &qword_1E95EEDC8);
    unsigned __int8 v26 = v44[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A3D7C774(v26);
    if ((v27 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    sub_1A3D803A4();
    char v28 = sub_1A409612C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      return 0;
    }
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v30) {
    return 1;
  }
  unint64_t v10 = *(void *)(v29 + 8 * v11);
  if (v10)
  {
    int64_t v3 = v11;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v30) {
      return 1;
    }
    unint64_t v10 = *(void *)(v29 + 8 * v3);
    ++v11;
    if (v10) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t HumanBodyPose3DObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D79A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D7E0C4(&qword_1E95EEC60, (void (*)(uint64_t))type metadata accessor for HumanBodyPose3DObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3D79AD8@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, BOOL *a4@<X8>)
{
  v70[1] = *(id *)MEMORY[0x1E4F143B8];
  __int16 v64 = *a2;
  id v7 = (id)sub_1A3D78620(MEMORY[0x1E4FBC860]);
  id v8 = objc_msgSend(a1, sel_availableJointNames);
  _s3__C9JointNameVMa_0(0);
  uint64_t v9 = sub_1A409630C();

  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v60 = a3;
    uint64_t v62 = a4;
    for (uint64_t i = 0; i != v10; ++i)
    {
      char v12 = *(void **)(v9 + 8 * i + 32);
      v70[0] = 0;
      id v13 = v12;
      id v14 = objc_msgSend(a1, sel_recognizedPointForJointName_error_, v13, v70);
      id v15 = v70[0];
      if (v14)
      {
        long long v16 = v14;
        id v17 = v13;
        id v18 = v15;
        sub_1A3D7A360(v17, (char *)v70);
        uint64_t v19 = LOBYTE(v70[0]);
        sub_1A3D7A360(objc_msgSend(v16, sel_parentJoint), (char *)v70);
        if (LOBYTE(v70[0]) == 17)
        {
LABEL_3:
        }
        else
        {
          objc_msgSend(v16, sel_position);
          objc_msgSend(v16, sel_localPosition);
          uint64_t v22 = (simd_float4x4 *)0xE700000000000000;
          uint64_t v23 = 0x64616548706F74;
          switch((int)v19)
          {
            case 0:
              break;
            case 1:
              uint64_t v23 = 0x65487265746E6563;
              uint64_t v22 = (simd_float4x4 *)0xEA00000000006461;
              break;
            case 2:
              uint64_t v23 = 0x68537265746E6563;
              uint64_t v22 = (simd_float4x4 *)0xEE007265646C756FLL;
              break;
            case 3:
              uint64_t v23 = 0x756F68537466656CLL;
              uint64_t v22 = (simd_float4x4 *)0xEC0000007265646CLL;
              break;
            case 4:
              uint64_t v23 = 0x6F68537468676972;
              uint64_t v22 = (simd_float4x4 *)0xED00007265646C75;
              break;
            case 5:
              uint64_t v23 = 0x6F626C457466656CLL;
              uint64_t v22 = (simd_float4x4 *)0xE900000000000077;
              break;
            case 6:
              uint64_t v23 = 0x626C457468676972;
              uint64_t v22 = (simd_float4x4 *)0xEA0000000000776FLL;
              break;
            case 7:
              uint64_t v23 = 0x736972577466656CLL;
              uint64_t v22 = (simd_float4x4 *)0xE900000000000074;
              break;
            case 8:
              uint64_t v23 = 0x6972577468676972;
              uint64_t v22 = (simd_float4x4 *)0xEA00000000007473;
              break;
            case 9:
              uint64_t v23 = 0x7069487466656CLL;
              break;
            case 10:
              uint64_t v22 = (simd_float4x4 *)0xE800000000000000;
              uint64_t v23 = 0x7069487468676972;
              break;
            case 11:
              uint64_t v22 = (simd_float4x4 *)0xE800000000000000;
              uint64_t v23 = 0x65656E4B7466656CLL;
              break;
            case 12:
              uint64_t v23 = 0x656E4B7468676972;
              goto LABEL_23;
            case 13:
              uint64_t v23 = 0x6C6B6E417466656CLL;
LABEL_23:
              uint64_t v22 = (simd_float4x4 *)0xE900000000000065;
              break;
            case 14:
              uint64_t v23 = 0x6B6E417468676972;
              uint64_t v22 = (simd_float4x4 *)0xEA0000000000656CLL;
              break;
            case 15:
              uint64_t v22 = (simd_float4x4 *)0xE400000000000000;
              uint64_t v23 = 1953460082;
              break;
            case 16:
              uint64_t v22 = (simd_float4x4 *)0xE500000000000000;
              uint64_t v23 = 0x656E697073;
              break;
            default:
              goto LABEL_3;
          }
          unint64_t v26 = 0xE700000000000000;
          uint64_t v27 = 0x64616548706F74;
          switch(v19)
          {
            case 0:
              break;
            case 1:
              uint64_t v27 = 0x65487265746E6563;
              unint64_t v26 = 0xEA00000000006461;
              break;
            case 2:
              uint64_t v27 = 0x68537265746E6563;
              unint64_t v26 = 0xEE007265646C756FLL;
              break;
            case 3:
              uint64_t v27 = 0x756F68537466656CLL;
              unint64_t v26 = 0xEC0000007265646CLL;
              break;
            case 4:
              uint64_t v27 = 0x6F68537468676972;
              unint64_t v26 = 0xED00007265646C75;
              break;
            case 5:
              uint64_t v27 = 0x6F626C457466656CLL;
              unint64_t v26 = 0xE900000000000077;
              break;
            case 6:
              uint64_t v27 = 0x626C457468676972;
              unint64_t v26 = 0xEA0000000000776FLL;
              break;
            case 7:
              uint64_t v27 = 0x736972577466656CLL;
              unint64_t v26 = 0xE900000000000074;
              break;
            case 8:
              uint64_t v27 = 0x6972577468676972;
              unint64_t v26 = 0xEA00000000007473;
              break;
            case 9:
              uint64_t v27 = 0x7069487466656CLL;
              break;
            case 10:
              unint64_t v26 = 0xE800000000000000;
              uint64_t v27 = 0x7069487468676972;
              break;
            case 11:
              unint64_t v26 = 0xE800000000000000;
              uint64_t v27 = 0x65656E4B7466656CLL;
              break;
            case 12:
              uint64_t v27 = 0x656E4B7468676972;
              goto LABEL_41;
            case 13:
              uint64_t v27 = 0x6C6B6E417466656CLL;
LABEL_41:
              unint64_t v26 = 0xE900000000000065;
              break;
            case 14:
              uint64_t v27 = 0x6B6E417468676972;
              unint64_t v26 = 0xEA0000000000656CLL;
              break;
            case 15:
              unint64_t v26 = 0xE400000000000000;
              uint64_t v27 = 1953460082;
              break;
            case 16:
              unint64_t v26 = 0xE500000000000000;
              uint64_t v27 = 0x656E697073;
              break;
            default:
              JUMPOUT(0);
          }
          Joint3D.init(position:localPosition:identifer:parentJoint:)(&v69, (simd_float4x4 *)v23, v22, *(Swift::String *)&v27, *(Swift::String *)&v20);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v70[0] = v7;
          sub_1A3D7D740(&v69, v19, isUniquelyReferenced_nonNull_native);
          id v7 = v70[0];

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        id v24 = v70[0];
        uint64_t v25 = (void *)sub_1A4095AEC();

        swift_willThrow();
      }
    }
    swift_bridgeObjectRelease();
    a4 = v62;
    a3 = v60;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  BOOL v29 = objc_msgSend(a1, sel_heightEstimation) == (id)1;
  objc_msgSend(a1, sel_bodyHeight);
  id v30 = objc_msgSend(self, sel_meters);
  BOOL v31 = (int *)type metadata accessor for HumanBodyPose3DObservation();
  sub_1A3D7E120();
  sub_1A40959DC();
  objc_msgSend(a1, sel_cameraOriginMatrix);
  long long v67 = v33;
  long long v68 = v32;
  long long v65 = v35;
  long long v66 = v34;
  id v36 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v38 = v37;
  objc_msgSend(a1, sel__cameraIntrinsics);
  long long v61 = v40;
  long long v63 = v39;
  long long v59 = v41;
  objc_msgSend(a1, sel__cameraRootTransform);
  long long v57 = v43;
  long long v58 = v42;
  long long v55 = v45;
  long long v56 = v44;
  objc_msgSend(a1, sel__inputSize);
  uint64_t v47 = v46;
  uint64_t v49 = v48;

  *a4 = v29;
  uint64_t v50 = &a4[v31[6]];
  *(_OWORD *)uint64_t v50 = v68;
  *((_OWORD *)v50 + 1) = v67;
  *((_OWORD *)v50 + 2) = v66;
  *((_OWORD *)v50 + 3) = v65;
  *(_DWORD *)&a4[v31[8]] = v38;
  uint64_t result = sub_1A3CCB8B8(a3, (uint64_t)&a4[v31[9]], &qword_1E95EBE78);
  *(_WORD *)&a4[v31[10]] = v64;
  *(void *)&a4[v31[11]] = v7;
  uint64_t v52 = &a4[v31[12]];
  *(_OWORD *)uint64_t v52 = v63;
  *((_OWORD *)v52 + 1) = v61;
  *((_OWORD *)v52 + 2) = v59;
  uint64_t v53 = &a4[v31[13]];
  *(_OWORD *)uint64_t v53 = v58;
  *((_OWORD *)v53 + 1) = v57;
  *((_OWORD *)v53 + 2) = v56;
  *((_OWORD *)v53 + 3) = v55;
  uint64_t v54 = &a4[v31[14]];
  *(void *)uint64_t v54 = v47;
  *((void *)v54 + 1) = v49;
  return result;
}

void sub_1A3D7A360(void *a1@<X0>, char *a2@<X8>)
{
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1A409617C();
  uint64_t v8 = v7;
  if (v6 == sub_1A409617C() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  char v11 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_10:

    char v18 = 0;
    goto LABEL_11;
  }
  sub_1A409617C();
  char v12 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  id v13 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1A409617C();
  uint64_t v16 = v15;
  if (v14 == sub_1A409617C() && v16 == v17)
  {

    swift_bridgeObjectRelease_n();
LABEL_13:

    char v18 = 1;
    goto LABEL_11;
  }
  char v19 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_13;
  }
  sub_1A409617C();
  uint64_t v20 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  long long v21 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1A409617C();
  uint64_t v24 = v23;
  if (v22 == sub_1A409617C() && v24 == v25)
  {

    swift_bridgeObjectRelease_n();
LABEL_18:

    char v18 = 2;
    goto LABEL_11;
  }
  char v26 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_18;
  }
  sub_1A409617C();
  uint64_t v27 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v28 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_1A409617C();
  uint64_t v31 = v30;
  if (v29 == sub_1A409617C() && v31 == v32)
  {

    swift_bridgeObjectRelease_n();
LABEL_23:

    char v18 = 3;
    goto LABEL_11;
  }
  char v33 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_23;
  }
  sub_1A409617C();
  long long v34 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  long long v35 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_1A409617C();
  uint64_t v38 = v37;
  if (v36 == sub_1A409617C() && v38 == v39)
  {

    swift_bridgeObjectRelease_n();
LABEL_28:

    char v18 = 4;
    goto LABEL_11;
  }
  char v40 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v40) {
    goto LABEL_28;
  }
  sub_1A409617C();
  long long v41 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  long long v42 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_1A409617C();
  uint64_t v45 = v44;
  if (v43 == sub_1A409617C() && v45 == v46)
  {

    swift_bridgeObjectRelease_n();
LABEL_33:

    char v18 = 5;
    goto LABEL_11;
  }
  char v47 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v47) {
    goto LABEL_33;
  }
  sub_1A409617C();
  uint64_t v48 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v49 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_1A409617C();
  uint64_t v52 = v51;
  if (v50 == sub_1A409617C() && v52 == v53)
  {

    swift_bridgeObjectRelease_n();
LABEL_38:

    char v18 = 6;
    goto LABEL_11;
  }
  char v54 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v54) {
    goto LABEL_38;
  }
  sub_1A409617C();
  long long v55 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  long long v56 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v57 = sub_1A409617C();
  uint64_t v59 = v58;
  if (v57 == sub_1A409617C() && v59 == v60)
  {

    swift_bridgeObjectRelease_n();
LABEL_43:

    char v18 = 7;
    goto LABEL_11;
  }
  char v61 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v61) {
    goto LABEL_43;
  }
  sub_1A409617C();
  uint64_t v62 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  long long v63 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v64 = sub_1A409617C();
  uint64_t v66 = v65;
  if (v64 == sub_1A409617C() && v66 == v67)
  {

    swift_bridgeObjectRelease_n();
LABEL_48:

    char v18 = 8;
    goto LABEL_11;
  }
  char v68 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v68) {
    goto LABEL_48;
  }
  sub_1A409617C();
  Vision::Joint3D v69 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v70 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v71 = sub_1A409617C();
  uint64_t v73 = v72;
  if (v71 == sub_1A409617C() && v73 == v74)
  {

    swift_bridgeObjectRelease_n();
LABEL_53:

    char v18 = 9;
    goto LABEL_11;
  }
  char v75 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v75) {
    goto LABEL_53;
  }
  sub_1A409617C();
  uint64_t v76 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v77 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v78 = sub_1A409617C();
  uint64_t v80 = v79;
  if (v78 == sub_1A409617C() && v80 == v81)
  {

    swift_bridgeObjectRelease_n();
LABEL_58:

    char v18 = 10;
    goto LABEL_11;
  }
  char v82 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v82) {
    goto LABEL_58;
  }
  sub_1A409617C();
  uint64_t v83 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v84 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v85 = sub_1A409617C();
  uint64_t v87 = v86;
  if (v85 == sub_1A409617C() && v87 == v88)
  {

    swift_bridgeObjectRelease_n();
LABEL_63:

    char v18 = 11;
    goto LABEL_11;
  }
  char v89 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v89) {
    goto LABEL_63;
  }
  sub_1A409617C();
  uint64_t v90 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v91 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v92 = sub_1A409617C();
  uint64_t v94 = v93;
  if (v92 == sub_1A409617C() && v94 == v95)
  {

    swift_bridgeObjectRelease_n();
LABEL_68:

    char v18 = 12;
    goto LABEL_11;
  }
  char v96 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v96) {
    goto LABEL_68;
  }
  sub_1A409617C();
  uint64_t v97 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v98 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v99 = sub_1A409617C();
  uint64_t v101 = v100;
  if (v99 == sub_1A409617C() && v101 == v102)
  {

    swift_bridgeObjectRelease_n();
LABEL_73:

    char v18 = 13;
    goto LABEL_11;
  }
  char v103 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v103) {
    goto LABEL_73;
  }
  sub_1A409617C();
  uint64_t v104 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v105 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v106 = sub_1A409617C();
  uint64_t v108 = v107;
  if (v106 == sub_1A409617C() && v108 == v109)
  {

    swift_bridgeObjectRelease_n();
LABEL_78:

    char v18 = 14;
    goto LABEL_11;
  }
  char v110 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v110) {
    goto LABEL_78;
  }
  sub_1A409617C();
  uint64_t v111 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v112 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v113 = sub_1A409617C();
  uint64_t v115 = v114;
  if (v113 == sub_1A409617C() && v115 == v116)
  {

    swift_bridgeObjectRelease_n();
LABEL_83:

    char v18 = 15;
    goto LABEL_11;
  }
  char v117 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v117) {
    goto LABEL_83;
  }
  sub_1A409617C();
  uint64_t v118 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v119 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v120 = sub_1A409617C();
  uint64_t v122 = v121;
  if (v120 == sub_1A409617C() && v122 == v123)
  {
    id v124 = a1;

    swift_bridgeObjectRelease_n();
    char v18 = 16;
  }
  else
  {
    char v125 = sub_1A4096E5C();
    id v126 = a1;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v125) {
      char v18 = 16;
    }
    else {
      char v18 = 17;
    }
  }
LABEL_11:
  *a2 = v18;
}

uint64_t HumanBodyPose3DObservation.init(_:)@<X0>(void *a1@<X0>, BOOL *a2@<X8>)
{
  __int16 v6 = -8;
  objc_msgSend(a1, sel_timeRange, static NormalizedRect.fullImage.getter(v5).n128_f64[0]);
  char v8 = 0;
  return sub_1A3D79AD8(a1, &v6, (uint64_t)&v7, a2);
}

uint64_t sub_1A3D7B178@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, BOOL *a4@<X8>)
{
  __int16 v5 = *a2;
  return sub_1A3D79AD8(a1, &v5, a3, a4);
}

unint64_t sub_1A3D7B1A4(char a1)
{
  unint64_t result = 0x746176726573626FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E696F4A6C6C61;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6769654879646F62;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x69736E6972746E69;
      break;
    case 6:
      unint64_t result = 0x616D497475706E69;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A3D7B2D8()
{
  return sub_1A3D7B1A4(*v0);
}

uint64_t sub_1A3D7B2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D7FFCC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A3D7B308(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1A3D7B314(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7E160();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D7B350(uint64_t a1)
{
  unint64_t v2 = sub_1A3D7E160();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HumanBodyPose3DObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x1F4188790](v3);
  __int16 v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1A4095C7C();
  uint64_t v47 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  long long v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC80);
  uint64_t v44 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = (int *)type metadata accessor for HumanBodyPose3DObservation();
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1A3D7E160();
  uint64_t v16 = v49;
  sub_1A4096FDC();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  }
  *(void *)&long long v40 = v7;
  *(void *)&long long v39 = v5;
  uint64_t v49 = v10;
  uint64_t v41 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC88);
  char v55 = 1;
  sub_1A3D7E370(&qword_1E95EEC90, (void (*)(void))sub_1A3D7E1B4, (void (*)(void))sub_1A3D7E208);
  sub_1A4096CFC();
  char v18 = v52;
  char v19 = v51;
  *(void *)&v52[v51[11]] = v53;
  LOBYTE(v53) = 0;
  sub_1A3C80D74();
  sub_1A4096C7C();
  uint64_t v20 = v50;
  uint64_t v38 = v11;
  LOBYTE(v53) = 0;
  sub_1A3D7E0C4((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  uint64_t v21 = v40;
  sub_1A4096CFC();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v47 + 32))(&v18[v19[7]], v21, v20);
  LOBYTE(v53) = 1;
  sub_1A4096CDC();
  *(_DWORD *)&v18[v19[8]] = v22;
  char v55 = 3;
  sub_1A3C80E6C();
  sub_1A4096CFC();
  if (BYTE1(v53)) {
    __int16 v23 = 256;
  }
  else {
    __int16 v23 = 0;
  }
  *(_WORD *)&v18[v19[10]] = v23 | v53;
  sub_1A3D2B130((uint64_t)v54);
  sub_1A3CCB8B8((uint64_t)v54, (uint64_t)&v18[v19[9]], &qword_1E95EBE78);
  char v55 = 2;
  sub_1A3D7E25C();
  sub_1A4096CFC();
  unsigned char *v18 = v53;
  LOBYTE(v53) = 3;
  sub_1A3D7E6F0(&qword_1E95EECB0, &qword_1E95EEC58);
  sub_1A4096CFC();
  (*(void (**)(unsigned char *, void, uint64_t))(v45 + 32))(&v18[v19[5]], v39, v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EECB8);
  char v55 = 4;
  sub_1A3D7E4F4(&qword_1E95EECC0, &qword_1E95EECC8);
  sub_1A4096CFC();
  uint64_t result = v53;
  unint64_t v24 = *(void *)(v53 + 16);
  if (!v24)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v24 == 1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v24 < 3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v24 == 3)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  long long v40 = *(_OWORD *)(v53 + 32);
  long long v39 = *(_OWORD *)(v53 + 48);
  long long v37 = *(_OWORD *)(v53 + 64);
  long long v36 = *(_OWORD *)(v53 + 80);
  swift_bridgeObjectRelease();
  uint64_t v25 = &v52[v51[6]];
  long long v26 = v39;
  *(_OWORD *)uint64_t v25 = v40;
  *((_OWORD *)v25 + 1) = v26;
  long long v27 = v36;
  *((_OWORD *)v25 + 2) = v37;
  *((_OWORD *)v25 + 3) = v27;
  char v55 = 7;
  sub_1A4096CFC();
  uint64_t result = v53;
  unint64_t v28 = *(void *)(v53 + 16);
  if (!v28)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v28 == 1)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v28 < 3)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v28 == 3)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  long long v40 = *(_OWORD *)(v53 + 32);
  long long v39 = *(_OWORD *)(v53 + 48);
  long long v37 = *(_OWORD *)(v53 + 64);
  long long v36 = *(_OWORD *)(v53 + 80);
  swift_bridgeObjectRelease();
  uint64_t v29 = &v52[v51[13]];
  long long v30 = v39;
  *(_OWORD *)uint64_t v29 = v40;
  *((_OWORD *)v29 + 1) = v30;
  long long v31 = v36;
  *((_OWORD *)v29 + 2) = v37;
  *((_OWORD *)v29 + 3) = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EECD8);
  char v55 = 5;
  sub_1A3D7E57C(&qword_1E95EECE0, &qword_1E95EC4B8);
  sub_1A4096CFC();
  uint64_t result = v53;
  unint64_t v32 = *(void *)(v53 + 16);
  if (!v32)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v32 == 1)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v32 >= 3)
  {
    long long v40 = *(_OWORD *)(v53 + 32);
    long long v39 = *(_OWORD *)(v53 + 48);
    long long v37 = *(_OWORD *)(v53 + 64);
    swift_bridgeObjectRelease();
    char v33 = &v52[v51[12]];
    long long v34 = v39;
    *(_OWORD *)char v33 = v40;
    *((_OWORD *)v33 + 1) = v34;
    *((_OWORD *)v33 + 2) = v37;
    type metadata accessor for CGSize(0);
    char v55 = 6;
    sub_1A3D7E0C4(&qword_1E95EECE8, type metadata accessor for CGSize);
    sub_1A4096CFC();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v49, v41);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v38);
    uint64_t v35 = (uint64_t)v52;
    *(_OWORD *)&v52[v51[14]] = v53;
    sub_1A3D7E2B0(v35, v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    return sub_1A3D7E314(v35);
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t HumanBodyPose3DObservation.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EECF0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D7E160();
  sub_1A4096FEC();
  uint64_t v11 = (int *)type metadata accessor for HumanBodyPose3DObservation();
  *(void *)&long long v38 = *(void *)&v2[v11[11]];
  char v39 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC88);
  sub_1A3D7E370(&qword_1E95EECF8, (void (*)(void))sub_1A3D7E3F8, (void (*)(void))sub_1A3D7E44C);
  uint64_t v12 = v37;
  sub_1A4096DBC();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v35 = v6;
  uint64_t v37 = v8;
  LOBYTE(v38) = *v2;
  char v39 = 2;
  sub_1A3D7E4A0();
  sub_1A4096DBC();
  uint64_t v34 = v4;
  uint64_t v14 = v10;
  uint64_t v15 = v2;
  LOBYTE(v38) = 3;
  uint64_t v16 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  uint64_t v17 = (uint64_t)v11;
  sub_1A3D7E6F0(&qword_1E95EED18, &qword_1E95EEC58);
  sub_1A4096DBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EED20);
  char v18 = (_OWORD *)swift_allocObject();
  long long v33 = xmmword_1A40F83D0;
  v18[1] = xmmword_1A40F83D0;
  char v19 = &v15[v11[6]];
  long long v20 = v19[1];
  id v18[2] = *v19;
  v18[3] = v20;
  long long v21 = v19[3];
  v18[4] = v19[2];
  v18[5] = v21;
  *(void *)&long long v38 = v18;
  char v39 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EECB8);
  v32[1] = sub_1A3D7E4F4(&qword_1E95EED28, &qword_1E95EED30);
  sub_1A4096DBC();
  swift_bridgeObjectRelease();
  int v22 = (_OWORD *)swift_allocObject();
  v22[1] = v33;
  __int16 v23 = &v15[v11[13]];
  long long v24 = v23[1];
  _OWORD v22[2] = *v23;
  v22[3] = v24;
  long long v25 = v23[3];
  v22[4] = v23[2];
  v22[5] = v25;
  *(void *)&long long v38 = v22;
  char v39 = 7;
  sub_1A4096DBC();
  swift_bridgeObjectRelease();
  long long v38 = *(_OWORD *)&v15[v11[14]];
  char v39 = 6;
  type metadata accessor for CGSize(0);
  sub_1A3D7E0C4(&qword_1E95EED38, type metadata accessor for CGSize);
  sub_1A4096DBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EED40);
  long long v26 = (_OWORD *)swift_allocObject();
  v26[1] = xmmword_1A40F83E0;
  long long v27 = &v15[v11[12]];
  long long v28 = v27[1];
  void v26[2] = *v27;
  void v26[3] = v28;
  v26[4] = v27[2];
  *(void *)&long long v38 = v26;
  char v39 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EECD8);
  sub_1A3D7E57C(&qword_1E95EED48, &qword_1E95EC498);
  sub_1A4096DBC();
  swift_bridgeObjectRelease();
  uint64_t v29 = v37;
  LOBYTE(v38) = 0;
  sub_1A3C80D74();
  uint64_t v30 = (uint64_t)v35;
  sub_1A4096D5C();
  uint64_t v31 = sub_1A3D7E0C4(&qword_1E95EEC60, (void (*)(uint64_t))type metadata accessor for HumanBodyPose3DObservation);
  sub_1A3D2A9D0(v30, v17, (uint64_t)&off_1EF74CBC8, v31);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v30, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v16);
}

uint64_t sub_1A3D7C654@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HumanBodyPose3DObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3D7C66C(void *a1)
{
  return HumanBodyPose3DObservation.encode(to:)(a1);
}

uint64_t sub_1A3D7C684(uint64_t a1)
{
  uint64_t v2 = sub_1A3D7E0C4(&qword_1E95EEDB8, _s3__C9JointNameVMa_0);
  uint64_t v3 = sub_1A3D7E0C4((unint64_t *)&unk_1E95F0030, _s3__C9JointNameVMa_0);
  uint64_t v4 = sub_1A3D7E0C4(&qword_1E95EDE28, type metadata accessor for VNRecognizedPointKey);

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

unint64_t sub_1A3D7C774(unsigned __int8 a1)
{
  sub_1A4096F2C();
  HumanBodyPose3DObservation.JointName.rawValue.getter();
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A4096F7C();

  return sub_1A3D7C800(a1, v2);
}

unint64_t sub_1A3D7C800(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE700000000000000;
      uint64_t v8 = 0x64616548706F74;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x65487265746E6563;
          unint64_t v7 = 0xEA00000000006461;
          break;
        case 2:
          uint64_t v8 = 0x68537265746E6563;
          unint64_t v7 = 0xEE007265646C756FLL;
          break;
        case 3:
          uint64_t v8 = 0x756F68537466656CLL;
          unint64_t v7 = 0xEC0000007265646CLL;
          break;
        case 4:
          uint64_t v8 = 0x6F68537468676972;
          unint64_t v7 = 0xED00007265646C75;
          break;
        case 5:
          unint64_t v7 = 0xE900000000000077;
          uint64_t v8 = 0x6F626C457466656CLL;
          break;
        case 6:
          unint64_t v7 = 0xEA0000000000776FLL;
          uint64_t v8 = 0x626C457468676972;
          break;
        case 7:
          unint64_t v7 = 0xE900000000000074;
          uint64_t v8 = 0x736972577466656CLL;
          break;
        case 8:
          uint64_t v8 = 0x6972577468676972;
          unint64_t v7 = 0xEA00000000007473;
          break;
        case 9:
          uint64_t v8 = 0x7069487466656CLL;
          break;
        case 0xA:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7069487468676972;
          break;
        case 0xB:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x65656E4B7466656CLL;
          break;
        case 0xC:
          uint64_t v8 = 0x656E4B7468676972;
          goto LABEL_17;
        case 0xD:
          uint64_t v8 = 0x6C6B6E417466656CLL;
LABEL_17:
          unint64_t v7 = 0xE900000000000065;
          break;
        case 0xE:
          unint64_t v7 = 0xEA0000000000656CLL;
          uint64_t v8 = 0x6B6E417468676972;
          break;
        case 0xF:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1953460082;
          break;
        case 0x10:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x656E697073;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE700000000000000;
      switch(v6)
      {
        case 1:
          uint64_t v11 = 0x65487265746E6563;
          uint64_t v12 = 25697;
          goto LABEL_41;
        case 2:
          unint64_t v9 = 0xEE007265646C756FLL;
          if (v8 != 0x68537265746E6563) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 3:
          unint64_t v9 = 0xEC0000007265646CLL;
          if (v8 != 0x756F68537466656CLL) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 4:
          unint64_t v9 = 0xED00007265646C75;
          if (v8 != 0x6F68537468676972) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 5:
          unint64_t v9 = 0xE900000000000077;
          if (v8 != 0x6F626C457466656CLL) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 6:
          unint64_t v9 = 0xEA0000000000776FLL;
          if (v8 != 0x626C457468676972) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 7:
          unint64_t v9 = 0xE900000000000074;
          if (v8 != 0x736972577466656CLL) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 8:
          uint64_t v11 = 0x6972577468676972;
          uint64_t v12 = 29811;
LABEL_41:
          unint64_t v9 = v12 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
          if (v8 != v11) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 9:
          if (v8 != 0x7069487466656CLL) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 10:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x7069487468676972) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 11:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x65656E4B7466656CLL) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 12:
          uint64_t v13 = 0x656E4B7468676972;
          goto LABEL_51;
        case 13:
          uint64_t v13 = 0x6C6B6E417466656CLL;
LABEL_51:
          unint64_t v9 = 0xE900000000000065;
          if (v8 != v13) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 14:
          unint64_t v9 = 0xEA0000000000656CLL;
          if (v8 != 0x6B6E417468676972) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 15:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1953460082) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 16:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x656E697073) {
            goto LABEL_24;
          }
          goto LABEL_23;
        default:
          if (v8 != 0x64616548706F74) {
            goto LABEL_24;
          }
LABEL_23:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_24:
          char v10 = sub_1A4096E5C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v10) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_1A3D7CD98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEDD8);
  char v39 = a2;
  uint64_t v6 = sub_1A4096C1C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_40;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = v37[v21];
    ++v12;
    if (!v22)
    {
      int64_t v12 = v21 + 1;
      if (v21 + 1 >= v36) {
        break;
      }
      unint64_t v22 = v37[v12];
      if (!v22)
      {
        int64_t v23 = v21 + 2;
        if (v23 >= v36) {
          break;
        }
        unint64_t v22 = v37[v23];
        if (!v22)
        {
          while (1)
          {
            int64_t v12 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_41;
            }
            if (v12 >= v36) {
              goto LABEL_34;
            }
            unint64_t v22 = v37[v12];
            ++v23;
            if (v22) {
              goto LABEL_30;
            }
          }
        }
        int64_t v12 = v23;
      }
    }
LABEL_30:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_31:
    char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v29 = *(void *)(v5 + 56) + 160 * v20;
    long long v46 = *(_OWORD *)(v29 + 16);
    long long v47 = *(_OWORD *)v29;
    long long v44 = *(_OWORD *)(v29 + 48);
    long long v45 = *(_OWORD *)(v29 + 32);
    long long v42 = *(_OWORD *)(v29 + 80);
    long long v43 = *(_OWORD *)(v29 + 64);
    long long v40 = *(_OWORD *)(v29 + 112);
    long long v41 = *(_OWORD *)(v29 + 96);
    uint64_t v31 = *(void *)(v29 + 128);
    uint64_t v30 = *(void *)(v29 + 136);
    uint64_t v32 = *(void *)(v29 + 144);
    uint64_t v33 = *(void *)(v29 + 152);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A4096F2C();
    sub_1A40961CC();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1A4096F7C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v24 = 0;
    unint64_t v25 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v25 && (v24 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x1A3D7D304);
      }
      BOOL v26 = v16 == v25;
      if (v16 == v25) {
        unint64_t v16 = 0;
      }
      v24 |= v26;
      uint64_t v27 = *(void *)(v11 + 8 * v16);
    }
    while (v27 == -1);
    unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
LABEL_8:
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
    uint64_t v18 = *(void *)(v7 + 56) + 160 * v17;
    *(_OWORD *)uint64_t v18 = v47;
    *(_OWORD *)(v18 + 16) = v46;
    *(_OWORD *)(v18 + 32) = v45;
    *(_OWORD *)(v18 + 48) = v44;
    *(_OWORD *)(v18 + 64) = v43;
    *(_OWORD *)(v18 + 80) = v42;
    *(_OWORD *)(v18 + 96) = v41;
    *(_OWORD *)(v18 + 112) = v40;
    *(void *)(v18 + 128) = v31;
    *(void *)(v18 + 136) = v30;
    *(void *)(v18 + 144) = v32;
    *(void *)(v18 + 152) = v33;
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v3 = v2;
  if (v39)
  {
    uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
    if (v34 >= 64) {
      bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v37 = -1 << v34;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1A3D7D348(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A40969EC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A4096F2C();
        sub_1A40961CC();
        swift_bridgeObjectRelease();
        uint64_t result = sub_1A4096F7C();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          int64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t result = v13 + 160 * v3;
          uint64_t v14 = (const void *)(v13 + 160 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v14 + 160))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v14, 0xA0uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v15 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v16 = *v15;
    uint64_t v17 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v15 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v17 = *v15;
    uint64_t v16 = (-1 << result) - 1;
  }
  *unint64_t v15 = v17 & v16;
  uint64_t v18 = *(void *)(a2 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
    JUMPOUT(0x1A3D7D6FCLL);
  }
  *(void *)(a2 + 16) = v20;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

uint64_t sub_1A3D7D740(_OWORD *a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1A3D7C774(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < result || (a3 & 1) == 0)
  {
    if (v15 < result || (a3 & 1) != 0)
    {
      sub_1A3D7CD98(result, a3 & 1);
      uint64_t result = sub_1A3D7C774(a2);
      if ((v14 & 1) != (v18 & 1))
      {
LABEL_17:
        uint64_t result = sub_1A4096EBC();
        __break(1u);
        return result;
      }
      unint64_t v10 = result;
      uint64_t v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_1A3D7D8C4();
  }
  uint64_t v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    BOOL v19 = (_OWORD *)(v16[7] + 160 * v10);
    long long v20 = a1[1];
    *BOOL v19 = *a1;
    v19[1] = v20;
    long long v21 = a1[2];
    long long v22 = a1[3];
    long long v23 = a1[5];
    v19[4] = a1[4];
    v19[5] = v23;
    v19[2] = v21;
    _OWORD v19[3] = v22;
    long long v24 = a1[6];
    long long v25 = a1[7];
    long long v26 = a1[9];
    v19[8] = a1[8];
    v19[9] = v26;
    v19[6] = v24;
    v19[7] = v25;
    uint64_t v27 = v16[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (!v28)
    {
      v16[2] = v29;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 160 * v10;

  return sub_1A3D803F8((uint64_t)a1, v17);
}

void *sub_1A3D7D8C4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEDD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      int64_t v9 = v30 + 1;
      if (v30 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v6 + 8 * v9);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v31 - 1) & v31;
    unint64_t v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 160 * v15;
    long long v17 = *(_OWORD *)v16;
    long long v18 = *(_OWORD *)(v16 + 16);
    long long v19 = *(_OWORD *)(v16 + 32);
    long long v20 = *(_OWORD *)(v16 + 48);
    long long v21 = *(_OWORD *)(v16 + 64);
    long long v22 = *(_OWORD *)(v16 + 80);
    long long v23 = *(_OWORD *)(v16 + 96);
    long long v24 = *(_OWORD *)(v16 + 112);
    uint64_t v26 = *(void *)(v16 + 128);
    uint64_t v25 = *(void *)(v16 + 136);
    uint64_t v27 = *(void *)(v16 + 144);
    uint64_t v28 = *(void *)(v16 + 152);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v29 = *(void *)(v4 + 56) + 160 * v15;
    *(_OWORD *)uint64_t v29 = v17;
    *(_OWORD *)(v29 + 16) = v18;
    *(_OWORD *)(v29 + 32) = v19;
    *(_OWORD *)(v29 + 48) = v20;
    *(_OWORD *)(v29 + 64) = v21;
    *(_OWORD *)(v29 + 80) = v22;
    *(_OWORD *)(v29 + 96) = v23;
    *(_OWORD *)(v29 + 112) = v24;
    *(void *)(v29 + 128) = v26;
    *(void *)(v29 + 136) = v25;
    *(void *)(v29 + 144) = v27;
    *(void *)(v29 + 152) = v28;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v13) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v6 + 8 * v32);
  if (v31)
  {
    int64_t v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v9);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A3D7DAA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEDE0);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_1A3D7DB98(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1A3C91DE0();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

double sub_1A3D7DB7C(_OWORD *a1)
{
  double result = 0.0;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void *sub_1A3D7DB98(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *double result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1A3D7DD2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E657265666572 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646572757361656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL _s6Vision26HumanBodyPose3DObservationV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for HumanBodyPose3DObservation();
  sub_1A3D7E120();
  if ((sub_1A40959CC() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = v4[6];
  if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v5 + 16], *(float32x4_t *)&a2[v5 + 16]), (int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v5], *(float32x4_t *)&a2[v5])), vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v5 + 32], *(float32x4_t *)&a2[v5 + 32]), (int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v5 + 48], *(float32x4_t *)&a2[v5 + 48])))) & 0x80000000) == 0|| (sub_1A4095C4C() & 1) == 0|| *(float *)&a1[v4[8]] != *(float *)&a2[v4[8]])
  {
    return 0;
  }
  uint64_t v6 = v4[9];
  unsigned __int8 v7 = a1[v6 + 48];
  int64_t v8 = &a2[v6];
  if (v7)
  {
    if (!v8[48]) {
      return 0;
    }
  }
  else if ((v8[48] & 1) != 0 || (sub_1A409669C() & 1) == 0)
  {
    return 0;
  }
  uint64_t v9 = v4[10];
  unsigned int v10 = *(unsigned __int16 *)&a1[v9];
  unsigned int v11 = *(unsigned __int16 *)&a2[v9];
  if (v10 > 0xFFF7)
  {
    if (v11 > 0xFFF7) {
      goto LABEL_16;
    }
    return 0;
  }
  if (v11 > 0xFFF7) {
    return 0;
  }
  sub_1A3C832B8();
  if ((sub_1A409612C() & 1) == 0) {
    return 0;
  }
LABEL_16:
  if ((sub_1A3D796E0(*(void *)&a1[v4[11]], *(void *)&a2[v4[11]]) & 1) == 0) {
    return 0;
  }
  uint64_t v12 = v4[12];
  uint32x4_t v13 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v12 + 16], *(float32x4_t *)&a2[v12 + 16]), (int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v12], *(float32x4_t *)&a2[v12])), (int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v12 + 32], *(float32x4_t *)&a2[v12 + 32]));
  v13.i32[3] = v13.i32[2];
  if ((vminvq_u32(v13) & 0x80000000) == 0) {
    return 0;
  }
  uint64_t v14 = v4[13];
  if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v14 + 16], *(float32x4_t *)&a2[v14 + 16]), (int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v14], *(float32x4_t *)&a2[v14])), vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v14 + 32], *(float32x4_t *)&a2[v14 + 32]), (int8x16_t)vceqq_f32(*(float32x4_t *)&a1[v14 + 48], *(float32x4_t *)&a2[v14 + 48])))) & 0x80000000) == 0)return 0; {
  uint64_t v16 = v4[14];
  }
  double v17 = *(double *)&a1[v16];
  double v18 = *(double *)&a1[v16 + 8];
  long long v19 = (double *)&a2[v16];
  double v20 = v19[1];
  BOOL v21 = v17 == *v19;
  return v18 == v20 && v21;
}

uint64_t sub_1A3D7E0C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void _s3__C9JointNameVMa_0(uint64_t a1)
{
}

unint64_t sub_1A3D7E120()
{
  unint64_t result = qword_1E95EEC78;
  if (!qword_1E95EEC78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EEC78);
  }
  return result;
}

unint64_t sub_1A3D7E160()
{
  unint64_t result = qword_1E9619748[0];
  if (!qword_1E9619748[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9619748);
  }
  return result;
}

unint64_t sub_1A3D7E1B4()
{
  unint64_t result = qword_1E95EEC98;
  if (!qword_1E95EEC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEC98);
  }
  return result;
}

unint64_t sub_1A3D7E208()
{
  unint64_t result = qword_1E95EECA0;
  if (!qword_1E95EECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EECA0);
  }
  return result;
}

unint64_t sub_1A3D7E25C()
{
  unint64_t result = qword_1E95EECA8;
  if (!qword_1E95EECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EECA8);
  }
  return result;
}

uint64_t sub_1A3D7E2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HumanBodyPose3DObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D7E314(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HumanBodyPose3DObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3D7E370(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EEC88);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D7E3F8()
{
  unint64_t result = qword_1E95EED00;
  if (!qword_1E95EED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EED00);
  }
  return result;
}

unint64_t sub_1A3D7E44C()
{
  unint64_t result = qword_1E95EED08;
  if (!qword_1E95EED08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EED08);
  }
  return result;
}

unint64_t sub_1A3D7E4A0()
{
  unint64_t result = qword_1E95EED10;
  if (!qword_1E95EED10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EED10);
  }
  return result;
}

uint64_t sub_1A3D7E4F4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EECB8);
    sub_1A3D7E6F0(a2, &qword_1E95EECD0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3D7E57C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EECD8);
    sub_1A3D7E6F0(a2, &qword_1E95EC460);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D7E608()
{
  unint64_t result = qword_1E95EED50;
  if (!qword_1E95EED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EED50);
  }
  return result;
}

unint64_t sub_1A3D7E660()
{
  unint64_t result = qword_1E95EED58;
  if (!qword_1E95EED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EED58);
  }
  return result;
}

uint64_t sub_1A3D7E6B4()
{
  return sub_1A3D7E6F0(&qword_1E95EED60, &qword_1E95EED68);
}

uint64_t sub_1A3D7E6F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D7E738()
{
  unint64_t result = qword_1E95EED70;
  if (!qword_1E95EED70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EED70);
  }
  return result;
}

uint64_t sub_1A3D7E78C(void *a1)
{
  a1[1] = sub_1A3D7E0C4(&qword_1E95EED78, (void (*)(uint64_t))type metadata accessor for HumanBodyPose3DObservation);
  a1[2] = sub_1A3D7E0C4(&qword_1E95EED80, (void (*)(uint64_t))type metadata accessor for HumanBodyPose3DObservation);
  a1[3] = sub_1A3D7E0C4(&qword_1E95EED88, (void (*)(uint64_t))type metadata accessor for HumanBodyPose3DObservation);
  uint64_t result = sub_1A3D7E0C4(&qword_1E95EEC70, (void (*)(uint64_t))type metadata accessor for HumanBodyPose3DObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3D7E860()
{
  return sub_1A3D7E0C4(&qword_1E95ED168, (void (*)(uint64_t))type metadata accessor for HumanBodyPose3DObservation);
}

uint64_t sub_1A3D7E8A8(uint64_t a1)
{
  uint64_t result = sub_1A3D7E0C4(&qword_1E95EEC60, (void (*)(uint64_t))type metadata accessor for HumanBodyPose3DObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HumanBodyPose3DObservation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    int64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint32x4_t v13 = (_OWORD *)((char *)v4 + v11);
    uint64_t v14 = (_OWORD *)((char *)a2 + v11);
    long long v15 = v14[1];
    *uint32x4_t v13 = *v14;
    v13[1] = v15;
    long long v16 = v14[3];
    __n128 v13[2] = v14[2];
    v13[3] = v16;
    double v17 = (char *)v4 + v12;
    double v18 = (char *)a2 + v12;
    uint64_t v19 = sub_1A4095C7C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[9];
    *(_DWORD *)((char *)v4 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    BOOL v21 = (char *)v4 + v20;
    long long v22 = (char *)a2 + v20;
    long long v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)BOOL v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
    *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    v21[48] = v22[48];
    uint64_t v24 = a3[11];
    *(_WORD *)((char *)v4 + a3[10]) = *(_WORD *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v24) = *(uint64_t *)((char *)a2 + v24);
    uint64_t v25 = a3[12];
    uint64_t v26 = a3[13];
    long long v27 = *(_OWORD *)((char *)a2 + v25);
    long long v28 = *(_OWORD *)((char *)a2 + v25 + 16);
    long long v29 = *(_OWORD *)((char *)a2 + v25 + 32);
    int64_t v30 = (_OWORD *)((char *)v4 + v25);
    _OWORD *v30 = v27;
    v30[1] = v28;
    v30[2] = v29;
    unint64_t v31 = (_OWORD *)((char *)v4 + v26);
    int64_t v32 = (_OWORD *)((char *)a2 + v26);
    long long v33 = v32[1];
    *unint64_t v31 = *v32;
    v31[1] = v33;
    long long v34 = v32[3];
    v31[2] = v32[2];
    v31[3] = v34;
    *(_OWORD *)((char *)v4 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for HumanBodyPose3DObservation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

unsigned char *initializeWithCopy for HumanBodyPose3DObservation(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint32x4_t v13 = &a2[v10];
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  long long v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  long long v16 = &a1[v11];
  double v17 = &a2[v11];
  uint64_t v18 = sub_1A4095C7C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[9];
  *(_DWORD *)&a1[a3[8]] = *(_DWORD *)&a2[a3[8]];
  uint64_t v20 = &a1[v19];
  BOOL v21 = &a2[v19];
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  v20[48] = v21[48];
  uint64_t v23 = a3[11];
  *(_WORD *)&a1[a3[10]] = *(_WORD *)&a2[a3[10]];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  uint64_t v24 = a3[12];
  uint64_t v25 = a3[13];
  long long v26 = *(_OWORD *)&a2[v24];
  long long v27 = *(_OWORD *)&a2[v24 + 16];
  long long v28 = *(_OWORD *)&a2[v24 + 32];
  long long v29 = &a1[v24];
  _OWORD *v29 = v26;
  v29[1] = v27;
  v29[2] = v28;
  int64_t v30 = &a1[v25];
  unint64_t v31 = &a2[v25];
  long long v32 = v31[1];
  _OWORD *v30 = *v31;
  v30[1] = v32;
  long long v33 = v31[3];
  v30[2] = v31[2];
  v30[3] = v33;
  *(_OWORD *)&a1[a3[14]] = *(_OWORD *)&a2[a3[14]];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *assignWithCopy for HumanBodyPose3DObservation(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  long long v11[2] = v12[2];
  v11[3] = v12[3];
  uint64_t v13 = a3[7];
  long long v14 = &a1[v13];
  long long v15 = &a2[v13];
  uint64_t v16 = sub_1A4095C7C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  *(_DWORD *)&a1[a3[8]] = *(_DWORD *)&a2[a3[8]];
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  char v20 = v19[48];
  long long v22 = *((_OWORD *)v19 + 1);
  long long v21 = *((_OWORD *)v19 + 2);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v22;
  *((_OWORD *)v18 + 2) = v21;
  v18[48] = v20;
  *(_WORD *)&a1[a3[10]] = *(_WORD *)&a2[a3[10]];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[12];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  _OWORD v24[2] = v25[2];
  uint64_t v26 = a3[13];
  long long v27 = &a1[v26];
  long long v28 = &a2[v26];
  *long long v27 = *v28;
  v27[1] = v28[1];
  _OWORD v27[2] = v28[2];
  void v27[3] = v28[3];
  uint64_t v29 = a3[14];
  int64_t v30 = &a1[v29];
  unint64_t v31 = &a2[v29];
  void *v30 = *v31;
  v30[1] = v31[1];
  return a1;
}

unsigned char *initializeWithTake for HumanBodyPose3DObservation(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  long long v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  uint64_t v16 = &a1[v11];
  uint64_t v17 = &a2[v11];
  uint64_t v18 = sub_1A4095C7C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[9];
  *(_DWORD *)&a1[a3[8]] = *(_DWORD *)&a2[a3[8]];
  char v20 = &a1[v19];
  long long v21 = &a2[v19];
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)char v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  v20[48] = v21[48];
  uint64_t v23 = a3[11];
  *(_WORD *)&a1[a3[10]] = *(_WORD *)&a2[a3[10]];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  uint64_t v24 = a3[12];
  uint64_t v25 = a3[13];
  long long v26 = *(_OWORD *)&a2[v24];
  long long v27 = *(_OWORD *)&a2[v24 + 16];
  long long v28 = *(_OWORD *)&a2[v24 + 32];
  uint64_t v29 = &a1[v24];
  _OWORD *v29 = v26;
  v29[1] = v27;
  v29[2] = v28;
  int64_t v30 = &a1[v25];
  unint64_t v31 = &a2[v25];
  long long v32 = v31[1];
  _OWORD *v30 = *v31;
  v30[1] = v32;
  long long v33 = v31[3];
  v30[2] = v31[2];
  v30[3] = v33;
  *(_OWORD *)&a1[a3[14]] = *(_OWORD *)&a2[a3[14]];
  return a1;
}

unsigned char *assignWithTake for HumanBodyPose3DObservation(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  long long v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  uint64_t v16 = &a1[v11];
  uint64_t v17 = &a2[v11];
  uint64_t v18 = sub_1A4095C7C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[9];
  *(_DWORD *)&a1[a3[8]] = *(_DWORD *)&a2[a3[8]];
  char v20 = &a1[v19];
  long long v21 = &a2[v19];
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)char v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  v20[48] = v21[48];
  uint64_t v23 = a3[11];
  *(_WORD *)&a1[a3[10]] = *(_WORD *)&a2[a3[10]];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[12];
  uint64_t v25 = a3[13];
  long long v26 = *(_OWORD *)&a2[v24];
  long long v27 = *(_OWORD *)&a2[v24 + 16];
  long long v28 = *(_OWORD *)&a2[v24 + 32];
  uint64_t v29 = &a1[v24];
  _OWORD *v29 = v26;
  v29[1] = v27;
  v29[2] = v28;
  int64_t v30 = &a1[v25];
  unint64_t v31 = &a2[v25];
  long long v32 = v31[1];
  _OWORD *v30 = *v31;
  v30[1] = v32;
  long long v33 = v31[3];
  v30[2] = v31[2];
  v30[3] = v33;
  *(_OWORD *)&a1[a3[14]] = *(_OWORD *)&a2[a3[14]];
  return a1;
}

uint64_t getEnumTagSinglePayload for HumanBodyPose3DObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D7F1C4);
}

uint64_t sub_1A3D7F1C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1A4095C7C();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[11]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for HumanBodyPose3DObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D7F2EC);
}

uint64_t sub_1A3D7F2EC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEC58);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_1A4095C7C();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[11]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_1A3D7F3FC()
{
  sub_1A3D7F51C();
  if (v0 <= 0x3F)
  {
    sub_1A4095C7C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1A3D7F51C()
{
  if (!qword_1E95EED90)
  {
    sub_1A3D7E120();
    unint64_t v0 = sub_1A4095A1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E95EED90);
    }
  }
}

ValueMetadata *type metadata accessor for HumanBodyPose3DObservation.EstimationTechnique()
{
  return &type metadata for HumanBodyPose3DObservation.EstimationTechnique;
}

uint64_t getEnumTagSinglePayload for HumanBodyPose3DObservation.JointName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HumanBodyPose3DObservation.JointName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D7F6E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyPose3DObservation.JointName()
{
  return &type metadata for HumanBodyPose3DObservation.JointName;
}

unsigned char *storeEnumTagSinglePayload for HumanBodyPose3DObservation.JointsGroupName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D7F7E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyPose3DObservation.JointsGroupName()
{
  return &type metadata for HumanBodyPose3DObservation.JointsGroupName;
}

__n128 __swift_memcpy48_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void type metadata accessor for simd_float3x3(uint64_t a1)
{
}

__n128 __swift_memcpy64_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1A3D7F85C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A3D7F87C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for HumanBodyPose3DObservation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HumanBodyPose3DObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D7FA28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyPose3DObservation.CodingKeys()
{
  return &type metadata for HumanBodyPose3DObservation.CodingKeys;
}

unsigned char *_s6Vision26HumanBodyPose3DObservationV19EstimationTechniqueOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D7FB2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyPose3DObservation.EstimationTechnique.CodingKeys()
{
  return &type metadata for HumanBodyPose3DObservation.EstimationTechnique.CodingKeys;
}

ValueMetadata *type metadata accessor for HumanBodyPose3DObservation.EstimationTechnique.ReferenceCodingKeys()
{
  return &type metadata for HumanBodyPose3DObservation.EstimationTechnique.ReferenceCodingKeys;
}

ValueMetadata *type metadata accessor for HumanBodyPose3DObservation.EstimationTechnique.MeasuredCodingKeys()
{
  return &type metadata for HumanBodyPose3DObservation.EstimationTechnique.MeasuredCodingKeys;
}

unint64_t sub_1A3D7FB88()
{
  unint64_t result = qword_1E961A460[0];
  if (!qword_1E961A460[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961A460);
  }
  return result;
}

uint64_t sub_1A3D7FBDC()
{
  return sub_1A3D7E0C4((unint64_t *)&unk_1E95EFFE0, _s3__C9JointNameVMa_0);
}

uint64_t sub_1A3D7FC24()
{
  return sub_1A3D7E0C4(&qword_1E95EEDB0, _s3__C9JointNameVMa_0);
}

uint64_t sub_1A3D7FC6C()
{
  return sub_1A3D7E0C4(&qword_1E95EFFF0, _s3__C9JointNameVMa_0);
}

unint64_t sub_1A3D7FCB8()
{
  unint64_t result = qword_1E961A970[0];
  if (!qword_1E961A970[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961A970);
  }
  return result;
}

unint64_t sub_1A3D7FD10()
{
  unint64_t result = qword_1E961AA80;
  if (!qword_1E961AA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961AA80);
  }
  return result;
}

unint64_t sub_1A3D7FD68()
{
  unint64_t result = qword_1E961AA88[0];
  if (!qword_1E961AA88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961AA88);
  }
  return result;
}

unint64_t sub_1A3D7FDC0()
{
  unint64_t result = qword_1E961AB10;
  if (!qword_1E961AB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961AB10);
  }
  return result;
}

unint64_t sub_1A3D7FE18()
{
  unint64_t result = qword_1E961AB18[0];
  if (!qword_1E961AB18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961AB18);
  }
  return result;
}

unint64_t sub_1A3D7FE70()
{
  unint64_t result = qword_1E961ABA0;
  if (!qword_1E961ABA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961ABA0);
  }
  return result;
}

unint64_t sub_1A3D7FEC8()
{
  unint64_t result = qword_1E961ABA8[0];
  if (!qword_1E961ABA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961ABA8);
  }
  return result;
}

unint64_t sub_1A3D7FF20()
{
  unint64_t result = qword_1E961AC30;
  if (!qword_1E961AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961AC30);
  }
  return result;
}

unint64_t sub_1A3D7FF78()
{
  unint64_t result = qword_1E961AC38[0];
  if (!qword_1E961AC38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961AC38);
  }
  return result;
}

uint64_t sub_1A3D7FFCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F4A6C6C61 && a2 == 0xE900000000000073 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A40B5CF0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6769654879646F62 && a2 == 0xEA00000000007468 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A40B5D10 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69736E6972746E69 && a2 == 0xEA00000000007363 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x616D497475706E69 && a2 == 0xEE00657A69536567 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A40B5D30)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_1A3D80350()
{
  unint64_t result = qword_1E95EEDC0;
  if (!qword_1E95EEDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEDC0);
  }
  return result;
}

unint64_t sub_1A3D803A4()
{
  unint64_t result = qword_1E95EEDD0;
  if (!qword_1E95EEDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEDD0);
  }
  return result;
}

uint64_t sub_1A3D803F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t static DetectFaceLandmarksRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static DetectFaceLandmarksRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t DetectFaceLandmarksRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D8048C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8074C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D804C8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8074C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D80504(uint64_t a1)
{
  unint64_t v2 = sub_1A3D807A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D80540(uint64_t a1)
{
  unint64_t v2 = sub_1A3D807A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectFaceLandmarksRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEDE8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEDF0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8074C();
  sub_1A4096FEC();
  sub_1A3D807A0();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D8074C()
{
  unint64_t result = qword_1E961ACD8;
  if (!qword_1E961ACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961ACD8);
  }
  return result;
}

unint64_t sub_1A3D807A0()
{
  unint64_t result = qword_1E961ACE0[0];
  if (!qword_1E961ACE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961ACE0);
  }
  return result;
}

uint64_t DetectFaceLandmarksRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectFaceLandmarksRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEDF8);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEE00);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8074C();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D807A0();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      unint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *unint64_t v13 = &type metadata for DetectFaceLandmarksRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D80B20(void *a1)
{
  return DetectFaceLandmarksRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D80B38(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEDE8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEDF0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8074C();
  sub_1A4096FEC();
  sub_1A3D807A0();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double DetectFaceLandmarksRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v8);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3D81018();
    sub_1A3E2C988((uint64_t)&type metadata for DetectFaceLandmarksRequest, v5, v6);
  }
  *(void *)a2 = 0;
  *(__n128 *)(a2 + 8) = v8[0];
  *(__n128 *)(a2 + 24) = v8[1];
  *(void *)&double result = 65793;
  *(_DWORD *)(a2 + 40) = 65793;
  *(void *)(a2 + 48) = 0;
  *(_WORD *)(a2 + 56) = 1;
  *(void *)(a2 + 64) = v4;
  return result;
}

uint64_t DetectFaceLandmarksRequest.inputFaceObservations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DetectFaceLandmarksRequest.inputFaceObservations.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*DetectFaceLandmarksRequest.inputFaceObservations.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 DetectFaceLandmarksRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 DetectFaceLandmarksRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*DetectFaceLandmarksRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D80E40()
{
  unint64_t v0 = sub_1A3D81018();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for DetectFaceLandmarksRequest, v0);
  qword_1E961ACC8 = result;
  return result;
}

uint64_t static DetectFaceLandmarksRequest.supportedRevisions.getter()
{
  if (qword_1E961ACC0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void DetectFaceLandmarksRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 80;
}

uint64_t DetectFaceLandmarksRequest.refineMouthRegion.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t DetectFaceLandmarksRequest.refineMouthRegion.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t (*DetectFaceLandmarksRequest.refineMouthRegion.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectFaceLandmarksRequest.refineLeftEyeRegion.getter()
{
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t DetectFaceLandmarksRequest.refineLeftEyeRegion.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 41) = result;
  return result;
}

uint64_t (*DetectFaceLandmarksRequest.refineLeftEyeRegion.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectFaceLandmarksRequest.refineRightEyeRegion.getter()
{
  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t DetectFaceLandmarksRequest.refineRightEyeRegion.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 42) = result;
  return result;
}

uint64_t (*DetectFaceLandmarksRequest.refineRightEyeRegion.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectFaceLandmarksRequest.performBlinkDetection.getter()
{
  return *(unsigned __int8 *)(v0 + 43);
}

uint64_t DetectFaceLandmarksRequest.performBlinkDetection.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 43) = result;
  return result;
}

uint64_t (*DetectFaceLandmarksRequest.performBlinkDetection.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectFaceLandmarksRequest.cascadeStepCount.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t DetectFaceLandmarksRequest.cascadeStepCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*DetectFaceLandmarksRequest.cascadeStepCount.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void DetectFaceLandmarksRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 57);
}

unsigned char *DetectFaceLandmarksRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 57) = *result;
  return result;
}

uint64_t (*DetectFaceLandmarksRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D81018()
{
  unint64_t result = qword_1E95EEE08;
  if (!qword_1E95EEE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEE08);
  }
  return result;
}

int *sub_1A3D8106C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEE68);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(3, 0, 22);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(3, 0, 22);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(3, 0, 22);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for DetectFaceLandmarksRequest.Revision, v0 + 32);
  qword_1E9643D40 = v0;
  return result;
}

uint64_t DetectFaceLandmarksRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  int v4 = *((unsigned __int8 *)v1 + 56);
  uint64_t v5 = v1[8];
  if (*v1)
  {
    sub_1A4096F4C();
    uint64_t v6 = *(void *)(v3 + 16);
    sub_1A4096F3C();
    if (v6)
    {
      int v11 = v4;
      uint64_t v7 = *(void *)(type metadata accessor for FaceObservation() - 8);
      uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v9 = *(void *)(v7 + 72);
      sub_1A3CFE194(&qword_1E95ED678, (void (*)(uint64_t))type metadata accessor for FaceObservation);
      swift_bridgeObjectRetain();
      do
      {
        sub_1A40960DC();
        v8 += v9;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      int v4 = v11;
    }
  }
  else
  {
    sub_1A4096F4C();
  }
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  sub_1A4096F4C();
  sub_1A4096F4C();
  sub_1A4096F4C();
  sub_1A4096F4C();
  if (!v4) {
    sub_1A4096F3C();
  }
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t DetectFaceLandmarksRequest.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 40);
  char v2 = *((unsigned char *)v0 + 41);
  char v3 = *((unsigned char *)v0 + 42);
  char v4 = *((unsigned char *)v0 + 43);
  uint64_t v5 = v0[6];
  char v6 = *((unsigned char *)v0 + 56);
  char v7 = *((unsigned char *)v0 + 57);
  uint64_t v8 = v0[8];
  uint64_t v12 = *v0;
  long long v9 = *(_OWORD *)(v0 + 3);
  long long v13 = *(_OWORD *)(v0 + 1);
  long long v14 = v9;
  char v15 = v1;
  char v16 = v2;
  char v17 = v3;
  char v18 = v4;
  uint64_t v19 = v5;
  char v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  sub_1A4096F2C();
  DetectFaceLandmarksRequest.hash(into:)(v11);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D81400(uint64_t a1)
{
  unint64_t v2 = sub_1A3D81CA8();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D8143C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3D81018();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D81490(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3D81018();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D814E4(_WORD *a1@<X8>)
{
  *a1 = 80;
}

void sub_1A3D814F0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 57);
}

unsigned char *sub_1A3D814FC(unsigned char *result)
{
  *(unsigned char *)(v1 + 57) = *result;
  return result;
}

uint64_t (*sub_1A3D81508())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D81528(uint64_t a1)
{
  unint64_t v2 = sub_1A3D81018();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D81564()
{
  char v1 = *((unsigned char *)v0 + 40);
  char v2 = *((unsigned char *)v0 + 41);
  char v3 = *((unsigned char *)v0 + 42);
  char v4 = *((unsigned char *)v0 + 43);
  uint64_t v5 = v0[6];
  char v6 = *((unsigned char *)v0 + 56);
  char v7 = *((unsigned char *)v0 + 57);
  uint64_t v8 = v0[8];
  uint64_t v12 = *v0;
  long long v9 = *(_OWORD *)(v0 + 3);
  long long v13 = *(_OWORD *)(v0 + 1);
  long long v14 = v9;
  char v15 = v1;
  char v16 = v2;
  char v17 = v3;
  char v18 = v4;
  uint64_t v19 = v5;
  char v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  sub_1A4096F2C();
  DetectFaceLandmarksRequest.hash(into:)(v11);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D81600()
{
  char v1 = *((unsigned char *)v0 + 40);
  char v2 = *((unsigned char *)v0 + 41);
  char v3 = *((unsigned char *)v0 + 42);
  char v4 = *((unsigned char *)v0 + 43);
  uint64_t v5 = v0[6];
  char v6 = *((unsigned char *)v0 + 56);
  char v7 = *((unsigned char *)v0 + 57);
  uint64_t v8 = v0[8];
  uint64_t v12 = *v0;
  long long v9 = *(_OWORD *)(v0 + 3);
  long long v13 = *(_OWORD *)(v0 + 1);
  long long v14 = v9;
  char v15 = v1;
  char v16 = v2;
  char v17 = v3;
  char v18 = v4;
  uint64_t v19 = v5;
  char v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  sub_1A4096F2C();
  DetectFaceLandmarksRequest.hash(into:)(v11);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D81698@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)v1)
  {
    uint64_t result = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    long long v11 = *(_OWORD *)(v1 + 8);
    unsigned __int8 v12 = 5;
    DetectFaceRectanglesRequest.init(_:)(&v12, v13);
    char v6 = v14;
    int v7 = v15;
    char v8 = v16;
    char v9 = v17;
    uint64_t v10 = v18;
    *(void *)(a1 + 24) = &type metadata for DetectFaceRectanglesRequest;
    *(void *)(a1 + 32) = sub_1A3CFDA54();
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = v11;
    *(void *)(result + 32) = v5;
    *(void *)(result + 40) = v4;
    *(unsigned char *)(result + 48) = v6;
    *(_DWORD *)(result + 52) = v7;
    *(unsigned char *)(result + 56) = v8;
    *(unsigned char *)(result + 57) = v9;
    *(void *)(result + 64) = v10;
  }
  *(void *)a1 = result;
  return result;
}

uint64_t sub_1A3D81774()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D8177C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*sub_1A3D817A8())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D817C8()
{
  if (qword_1E961ACD0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D81824()
{
  return sub_1A409617C();
}

uint64_t sub_1A3D8184C(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA604();

  return sub_1A3E2C684(a1, a2);
}

unint64_t sub_1A3D8189C(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 40);
  char v4 = *(unsigned char *)(v1 + 41);
  char v5 = *(unsigned char *)(v1 + 42);
  char v6 = *(unsigned char *)(v1 + 43);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 57);
  uint64_t v10 = *(void *)(v1 + 64);
  id v30 = *(id *)v1;
  long long v11 = *(_OWORD *)(v1 + 24);
  long long v31 = *(_OWORD *)(v1 + 8);
  uint64_t v33 = *((void *)&v11 + 1);
  char v34 = v3;
  char v35 = v4;
  char v36 = v5;
  char v37 = v6;
  uint64_t v38 = v7;
  char v39 = v8;
  char v40 = v9;
  uint64_t v41 = v10;
  unint64_t v12 = sub_1A3D81CA8();
  unint64_t v13 = sub_1A3D45608(a1, (uint64_t)&type metadata for DetectFaceLandmarksRequest, v12);
  uint64_t v14 = sub_1A409617C();
  uint64_t v16 = v15;
  unint64_t v17 = MEMORY[0x1E4FBB390];
  unint64_t v32 = MEMORY[0x1E4FBB390];
  LOBYTE(v30) = v6;
  sub_1A3C856F4(&v30, v29);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v29, v14, v16, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1A409617C();
  uint64_t v21 = v20;
  id v22 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, 2);
  unint64_t v32 = sub_1A3D2C080();
  id v30 = v22;
  sub_1A3C856F4(&v30, v29);
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v29, v19, v21, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1A409617C();
  uint64_t v26 = v25;
  unint64_t v32 = v17;
  LOBYTE(v30) = v6;
  sub_1A3C856F4(&v30, v29);
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v29, v24, v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t _s6Vision26DetectFaceLandmarksRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  CGPoint v2 = *(CGPoint *)(a1 + 8);
  CGSize v3 = *(CGSize *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 40);
  int v5 = *(unsigned __int8 *)(a1 + 41);
  int v6 = *(unsigned __int8 *)(a1 + 42);
  uint64_t v26 = *(void *)(a1 + 48);
  char v29 = *(unsigned char *)(a1 + 56);
  int v30 = *(unsigned __int8 *)(a1 + 43);
  uint64_t v7 = *(void *)a2;
  CGPoint v8 = *(CGPoint *)(a2 + 8);
  CGSize v9 = *(CGSize *)(a2 + 24);
  int v10 = *(unsigned __int8 *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 41);
  int v12 = *(unsigned __int8 *)(a2 + 42);
  int v13 = *(unsigned __int8 *)(a2 + 43);
  uint64_t v23 = *(void *)(a1 + 64);
  uint64_t v24 = *(void *)(a2 + 48);
  char v27 = *(unsigned char *)(a1 + 57);
  int v28 = *(unsigned __int8 *)(a2 + 56);
  char v25 = *(unsigned char *)(a2 + 57);
  uint64_t v22 = *(void *)(a2 + 64);
  if (*(void *)a1)
  {
    if (!v7) {
      return 0;
    }
    CGSize v20 = *(CGSize *)(a1 + 24);
    CGPoint v21 = *(CGPoint *)(a1 + 8);
    CGSize v18 = *(CGSize *)(a2 + 24);
    CGPoint v19 = *(CGPoint *)(a2 + 8);
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    char v15 = sub_1A3CCFB38(v14, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    CGSize v9 = v18;
    CGPoint v8 = v19;
    CGSize v3 = v20;
    CGPoint v2 = v21;
    if ((v15 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  v32.origin = v2;
  v32.size = v3;
  v31.origin = v8;
  v31.size = v9;
  if (!static NormalizedRect.== infix(_:_:)(&v32, &v31)
    || ((v4 ^ v10) & 1) != 0
    || ((v5 ^ v11) & 1) != 0
    || ((v6 ^ v12) & 1) != 0
    || ((v30 ^ v13) & 1) != 0)
  {
    return 0;
  }
  if (v29)
  {
    if (!v28) {
      return 0;
    }
  }
  else
  {
    char v16 = v28;
    if (v26 != v24) {
      char v16 = 1;
    }
    if (v16) {
      return 0;
    }
  }
  LOBYTE(v32.origin.x) = v27;
  LOBYTE(v31.origin.x) = v25;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v32, (unsigned __int8 *)&v31)) {
    return 0;
  }

  return sub_1A3C8FF4C(v23, v22);
}

uint64_t sub_1A3D81C70()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

unint64_t sub_1A3D81CA8()
{
  unint64_t result = qword_1E95EEE10;
  if (!qword_1E95EEE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEE10);
  }
  return result;
}

unint64_t sub_1A3D81D00()
{
  unint64_t result = qword_1E95EEE18[0];
  if (!qword_1E95EEE18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95EEE18);
  }
  return result;
}

unint64_t sub_1A3D81D54(uint64_t a1)
{
  unint64_t result = sub_1A3CCA604();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D81D7C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF33C();
  unint64_t result = sub_1A3D81DAC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D81DAC()
{
  unint64_t result = qword_1E95EEE50;
  if (!qword_1E95EEE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEE50);
  }
  return result;
}

unint64_t sub_1A3D81E04()
{
  unint64_t result = qword_1E95EEE58;
  if (!qword_1E95EEE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEE58);
  }
  return result;
}

unint64_t sub_1A3D81E5C()
{
  unint64_t result = qword_1E95EEE60;
  if (!qword_1E95EEE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEE60);
  }
  return result;
}

unint64_t sub_1A3D81EB0(uint64_t a1)
{
  unint64_t result = sub_1A3D81018();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for DetectFaceLandmarksRequest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectFaceLandmarksRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectFaceLandmarksRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectFaceLandmarksRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DetectFaceLandmarksRequest()
{
  return &type metadata for DetectFaceLandmarksRequest;
}

ValueMetadata *type metadata accessor for DetectFaceLandmarksRequest.Revision()
{
  return &type metadata for DetectFaceLandmarksRequest.Revision;
}

unsigned char *_s6Vision26DetectFaceLandmarksRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D8218CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectFaceLandmarksRequest.Revision.CodingKeys()
{
  return &type metadata for DetectFaceLandmarksRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectFaceLandmarksRequest.Revision.Revision3CodingKeys()
{
  return &type metadata for DetectFaceLandmarksRequest.Revision.Revision3CodingKeys;
}

unint64_t sub_1A3D821D8()
{
  unint64_t result = qword_1E961B4F0;
  if (!qword_1E961B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961B4F0);
  }
  return result;
}

unint64_t sub_1A3D82230()
{
  unint64_t result = qword_1E961B600;
  if (!qword_1E961B600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961B600);
  }
  return result;
}

unint64_t sub_1A3D82288()
{
  unint64_t result = qword_1E961B608[0];
  if (!qword_1E961B608[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961B608);
  }
  return result;
}

unint64_t sub_1A3D822E0()
{
  unint64_t result = qword_1E961B690;
  if (!qword_1E961B690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961B690);
  }
  return result;
}

unint64_t sub_1A3D82338()
{
  unint64_t result = qword_1E961B698[0];
  if (!qword_1E961B698[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961B698);
  }
  return result;
}

uint64_t static GenerateAttentionBasedSaliencyImageRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static GenerateAttentionBasedSaliencyImageRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t GenerateAttentionBasedSaliencyImageRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D823C8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D82688();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D82404(uint64_t a1)
{
  unint64_t v2 = sub_1A3D82688();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D82440(uint64_t a1)
{
  unint64_t v2 = sub_1A3D826DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8247C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D826DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GenerateAttentionBasedSaliencyImageRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEE70);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEE78);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  CGSize v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D82688();
  sub_1A4096FEC();
  sub_1A3D826DC();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D82688()
{
  unint64_t result = qword_1E961B738;
  if (!qword_1E961B738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961B738);
  }
  return result;
}

unint64_t sub_1A3D826DC()
{
  unint64_t result = qword_1E961B740[0];
  if (!qword_1E961B740[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961B740);
  }
  return result;
}

uint64_t GenerateAttentionBasedSaliencyImageRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t GenerateAttentionBasedSaliencyImageRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEE80);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEE88);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D82688();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D826DC();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      int v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *int v13 = &type metadata for GenerateAttentionBasedSaliencyImageRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D82A5C(void *a1)
{
  return GenerateAttentionBasedSaliencyImageRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D82A74(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEE70);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEE78);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D82688();
  sub_1A4096FEC();
  sub_1A3D826DC();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double GenerateAttentionBasedSaliencyImageRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v9);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3D82DD8();
    sub_1A3E2C988((uint64_t)&type metadata for GenerateAttentionBasedSaliencyImageRequest, v5, v6);
  }
  double result = v9[0].n128_f64[0];
  __n128 v8 = v9[1];
  *a2 = v9[0];
  a2[1] = v8;
  a2[2].n128_u8[0] = 0;
  a2[2].n128_u64[1] = v4;
  return result;
}

__n128 GenerateAttentionBasedSaliencyImageRequest.regionOfInterest.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 GenerateAttentionBasedSaliencyImageRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*GenerateAttentionBasedSaliencyImageRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D82CFC()
{
  unint64_t v0 = sub_1A3D82DD8();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for GenerateAttentionBasedSaliencyImageRequest, v0);
  qword_1E961B728 = result;
  return result;
}

uint64_t static GenerateAttentionBasedSaliencyImageRequest.supportedRevisions.getter()
{
  if (qword_1E961B720 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void GenerateAttentionBasedSaliencyImageRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 144;
}

void GenerateAttentionBasedSaliencyImageRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *GenerateAttentionBasedSaliencyImageRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*GenerateAttentionBasedSaliencyImageRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D82DD8()
{
  unint64_t result = qword_1E95EEE90;
  if (!qword_1E95EEE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEE90);
  }
  return result;
}

int *sub_1A3D82E2C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEF00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(7, 0, 20);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(7, 0, 20);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(7, 0, 20);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for GenerateAttentionBasedSaliencyImageRequest.Revision, v0 + 32);
  qword_1E9643D48 = v0;
  return result;
}

uint64_t GenerateAttentionBasedSaliencyImageRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t GenerateAttentionBasedSaliencyImageRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1A4096F2C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3D83058(uint64_t a1)
{
  unint64_t v2 = sub_1A3D83554();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D83094@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3D82DD8();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D830E8(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3D82DD8();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D8313C(_WORD *a1@<X8>)
{
  *a1 = 144;
}

uint64_t sub_1A3D83148(uint64_t a1)
{
  unint64_t v2 = sub_1A3D82DD8();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D83188()
{
  if (qword_1E961B730 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D831E4(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA394();

  return sub_1A3E2C684(a1, a2);
}

void sub_1A3D83230(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(objc_allocWithZone((Class)VNCoreSceneUnderstandingDetectorImageSaliencyAConfiguration), sel_initWithObservationsRecipient_, a2);
  uint64_t v4 = sub_1A409617C();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC5C8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A40E88E0;
  *(void *)(v7 + 32) = v3;
  v12[0] = v7;
  sub_1A409632C();
  v12[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEE98);
  __n128 v8 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
  id v9 = v3;
  uint64_t v10 = (void (*)(unsigned char *, void))v8(v11);
  sub_1A3C8BC40((uint64_t)v12, v4, v6);
  v10(v11, 0);
}

void sub_1A3D83360(uint64_t a1, uint64_t a2)
{
}

unint64_t sub_1A3D8337C()
{
  unint64_t result = qword_1E95EEEA0;
  if (!qword_1E95EEEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEEA0);
  }
  return result;
}

unint64_t sub_1A3D833D0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF144();
  unint64_t result = sub_1A3D83400();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D83400()
{
  unint64_t result = qword_1E95EEED8;
  if (!qword_1E95EEED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEED8);
  }
  return result;
}

unint64_t sub_1A3D83458()
{
  unint64_t result = qword_1E95EEEE0;
  if (!qword_1E95EEEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEEE0);
  }
  return result;
}

unint64_t sub_1A3D834B0()
{
  unint64_t result = qword_1E95EEEE8;
  if (!qword_1E95EEEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEEE8);
  }
  return result;
}

unint64_t sub_1A3D83504(uint64_t a1)
{
  unint64_t result = sub_1A3CCA394();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D8352C(uint64_t a1)
{
  unint64_t result = sub_1A3D83554();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D83554()
{
  unint64_t result = qword_1E95EEEF0;
  if (!qword_1E95EEEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEEF0);
  }
  return result;
}

uint64_t sub_1A3D835A8()
{
  return sub_1A3D838D8(&qword_1E95EEEF8, (void (*)(uint64_t))type metadata accessor for SaliencyImageObservation);
}

unint64_t sub_1A3D835F0(uint64_t a1)
{
  unint64_t result = sub_1A3D82DD8();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for GenerateAttentionBasedSaliencyImageRequest()
{
  return &type metadata for GenerateAttentionBasedSaliencyImageRequest;
}

ValueMetadata *type metadata accessor for GenerateAttentionBasedSaliencyImageRequest.Revision()
{
  return &type metadata for GenerateAttentionBasedSaliencyImageRequest.Revision;
}

unsigned char *_s6Vision42GenerateAttentionBasedSaliencyImageRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D836D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateAttentionBasedSaliencyImageRequest.Revision.CodingKeys()
{
  return &type metadata for GenerateAttentionBasedSaliencyImageRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerateAttentionBasedSaliencyImageRequest.Revision.Revision2CodingKeys()
{
  return &type metadata for GenerateAttentionBasedSaliencyImageRequest.Revision.Revision2CodingKeys;
}

unint64_t sub_1A3D83724()
{
  unint64_t result = qword_1E961BFD0[0];
  if (!qword_1E961BFD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961BFD0);
  }
  return result;
}

unint64_t sub_1A3D8377C()
{
  unint64_t result = qword_1E961C0E0;
  if (!qword_1E961C0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961C0E0);
  }
  return result;
}

unint64_t sub_1A3D837D4()
{
  unint64_t result = qword_1E961C0E8[0];
  if (!qword_1E961C0E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961C0E8);
  }
  return result;
}

unint64_t sub_1A3D8382C()
{
  unint64_t result = qword_1E961C170;
  if (!qword_1E961C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961C170);
  }
  return result;
}

unint64_t sub_1A3D83884()
{
  unint64_t result = qword_1E961C178;
  if (!qword_1E961C178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961C178);
  }
  return result;
}

uint64_t sub_1A3D838D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AnimalBodyPoseObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A4095C7C();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

float AnimalBodyPoseObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for AnimalBodyPoseObservation() + 20));
}

uint64_t type metadata accessor for AnimalBodyPoseObservation()
{
  uint64_t result = qword_1E961CB20;
  if (!qword_1E961CB20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 AnimalBodyPoseObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnimalBodyPoseObservation() + 24);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t AnimalBodyPoseObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for AnimalBodyPoseObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AnimalBodyPoseObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v0 = type metadata accessor for AnimalBodyPoseObservation();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v1 = sub_1A3D83C3C(&qword_1E95EEF08, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
  sub_1A3D8AC8C(v0, (uint64_t)&off_1EF74B848, v1);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

uint64_t AnimalBodyPoseObservation.allJoints(in:)(char *a1)
{
  char v4 = *a1;
  uint64_t v1 = type metadata accessor for AnimalBodyPoseObservation();
  uint64_t v2 = sub_1A3D83C3C(&qword_1E95EEF10, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
  return sub_1A3D65800((uint64_t)&v4, v1, v2);
}

uint64_t sub_1A3D83C3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Vision::AnimalBodyPoseObservation::JointName_optional __swiftcall AnimalBodyPoseObservation.JointName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A4096E7C();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 7;
  switch(v3)
  {
    case 0:
      goto LABEL_9;
    case 1:
      char v5 = 1;
      goto LABEL_9;
    case 2:
      char v5 = 2;
      goto LABEL_9;
    case 3:
      char v5 = 3;
      goto LABEL_9;
    case 4:
      char v5 = 4;
      goto LABEL_9;
    case 5:
      char v5 = 5;
      goto LABEL_9;
    case 6:
      char v5 = 6;
LABEL_9:
      char v6 = v5;
      break;
    case 7:
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    default:
      char v6 = 25;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

uint64_t AnimalBodyPoseObservation.JointName.rawValue.getter()
{
  uint64_t result = 0x547261457466656CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4D7261457466656CLL;
      break;
    case 2:
      uint64_t result = 0x427261457466656CLL;
      break;
    case 3:
      uint64_t result = 0x6579457466656CLL;
      break;
    case 4:
      uint64_t result = 1801676142;
      break;
    case 5:
      uint64_t result = 1702063982;
      break;
    case 6:
      uint64_t result = 0x6579457468676972;
      break;
    case 7:
    case 8:
    case 9:
      uint64_t result = 0x7261457468676972;
      break;
    case 0xA:
    case 0xE:
    case 0x12:
      uint64_t result = 0x6B6361427466656CLL;
      break;
    case 0xB:
      uint64_t result = 0x6E6F72467466656CLL;
      break;
    case 0xC:
    case 0x11:
    case 0x15:
      uint64_t result = 0x6F72467468676972;
      break;
    case 0xD:
      uint64_t result = 0x6361427468676972;
      break;
    case 0xF:
      uint64_t result = 0x6E6F72467466656CLL;
      break;
    case 0x10:
      uint64_t result = 0x6361427468676972;
      break;
    case 0x13:
      uint64_t result = 0x6E6F72467466656CLL;
      break;
    case 0x14:
      uint64_t result = 0x6361427468676972;
      break;
    case 0x16:
      uint64_t result = 0x706F546C696174;
      break;
    case 0x17:
      uint64_t result = 0x6464694D6C696174;
      break;
    case 0x18:
      uint64_t result = 0x74746F426C696174;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D8416C()
{
  return sub_1A3D84178();
}

uint64_t sub_1A3D84178()
{
  uint64_t v0 = AnimalBodyPoseObservation.JointName.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == AnimalBodyPoseObservation.JointName.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A3D84210(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7367656C65726F66;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7367656C65726F66;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1684104552;
      break;
    case 2:
      uint64_t v5 = 0x7367656C646E6968;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1818845556;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6B6E757274;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1684104552) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 0x7367656C646E6968) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1818845556;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6B6E757274) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1A4096E5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Vision::AnimalBodyPoseObservation::JointName_optional sub_1A3D843AC(Swift::String *a1)
{
  return AnimalBodyPoseObservation.JointName.init(rawValue:)(*a1);
}

uint64_t sub_1A3D843B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AnimalBodyPoseObservation.JointName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A3D843E0()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D84448()
{
  AnimalBodyPoseObservation.JointName.rawValue.getter();
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D844AC()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D84510()
{
  return sub_1A40962CC();
}

uint64_t sub_1A3D84570()
{
  return sub_1A40962AC();
}

Vision::AnimalBodyPoseObservation::JointsGroupName_optional __swiftcall AnimalBodyPoseObservation.JointsGroupName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A4096C5C();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static AnimalBodyPoseObservation.JointsGroupName.allCases.getter()
{
  return &unk_1EF74B288;
}

uint64_t AnimalBodyPoseObservation.JointsGroupName.rawValue.getter()
{
  uint64_t result = 0x7367656C65726F66;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684104552;
      break;
    case 2:
      uint64_t result = 0x7367656C646E6968;
      break;
    case 3:
      uint64_t result = 1818845556;
      break;
    case 4:
      uint64_t result = 0x6B6E757274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D846BC(unsigned __int8 *a1, char *a2)
{
  return sub_1A3D84210(*a1, *a2);
}

Vision::AnimalBodyPoseObservation::JointsGroupName_optional sub_1A3D846C8(Swift::String *a1)
{
  return AnimalBodyPoseObservation.JointsGroupName.init(rawValue:)(*a1);
}

void sub_1A3D846D4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x7367656C65726F66;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1684104552;
      goto LABEL_3;
    case 2:
      *a1 = 0x7367656C646E6968;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 1818845556;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x6B6E757274;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_1A3D84778(void *a1@<X8>)
{
  *a1 = &unk_1EF74B3D8;
}

uint64_t sub_1A3D84788()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D84868()
{
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D84930()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D84A10(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            return 1;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    char v14 = *(unsigned char *)(*(void *)(v2 + 48) + v10);
    swift_bridgeObjectRetain();
    sub_1A3D87270(v14);
    if ((v15 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    sub_1A3C97B1C();
    char v16 = sub_1A409612C();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t AnimalBodyPoseObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D84CA4(uint64_t a1)
{
  uint64_t v2 = sub_1A3D83C3C(&qword_1E95EEF10, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);

  return sub_1A3D65D74(a1, v2);
}

uint64_t sub_1A3D84D10()
{
  sub_1A3D83C3C(&qword_1E95EEF10, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);

  return sub_1A3D65E58();
}

uint64_t sub_1A3D84D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D83C3C(&qword_1E95EEF10, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);

  return sub_1A3D65728(a1, a2, v4);
}

uint64_t sub_1A3D84E00(char *a1, uint64_t a2)
{
  char v5 = *a1;
  uint64_t v3 = sub_1A3D83C3C(&qword_1E95EEF10, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
  return sub_1A3D65800((uint64_t)&v5, a2, v3);
}

uint64_t sub_1A3D84E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3D83C3C(&qword_1E95EEF08, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3D84EF8()
{
  if (*v0) {
    return 0x746E696F4A6C6C61;
  }
  else {
    return 0x746176726573626FLL;
  }
}

uint64_t sub_1A3D84F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D89690(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D84F68(uint64_t a1)
{
  unint64_t v2 = sub_1A3D884FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D84FA4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D884FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AnimalBodyPoseObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v34 = sub_1A4095C7C();
  uint64_t v30 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  CGRect v32 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEF20);
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AnimalBodyPoseObservation();
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A3D884FC();
  char v14 = v36;
  sub_1A4096FDC();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  char v36 = (int *)v10;
  uint64_t v15 = v33;
  uint64_t v16 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEF28);
  char v37 = 1;
  sub_1A3D88664(&qword_1E95EEF30, (void (*)(void))sub_1A3D88550, (void (*)(void))sub_1A3D32850);
  sub_1A4096CFC();
  uint64_t v17 = v9;
  uint64_t v18 = (uint64_t)v12;
  uint64_t v28 = v36[8];
  *(void *)&v12[v28] = v39;
  LOBYTE(v39) = 0;
  sub_1A3C80D74();
  CGPoint v19 = v6;
  sub_1A4096C7C();
  uint64_t v26 = v17;
  uint64_t v27 = v7;
  LOBYTE(v39) = 0;
  sub_1A3D83C3C((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  CGSize v20 = v32;
  uint64_t v21 = v4;
  sub_1A4096CFC();
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v18, v20, v16);
  LOBYTE(v39) = 1;
  sub_1A4096CDC();
  *(_DWORD *)(v18 + v36[5]) = v22;
  char v37 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  uint64_t v23 = v31;
  uint64_t v24 = v36;
  *(_WORD *)(v18 + v36[7]) = v39;
  sub_1A3D2B130((uint64_t)v38);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v21);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v26, v27);
  sub_1A3C7D648((uint64_t)v38, v18 + v24[6]);
  sub_1A3D885A4(v18, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_1A3D88608(v18);
}

uint64_t AnimalBodyPoseObservation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEF40);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D884FC();
  sub_1A4096FEC();
  uint64_t v12 = type metadata accessor for AnimalBodyPoseObservation();
  uint64_t v20 = *(void *)(v3 + *(int *)(v12 + 32));
  char v19 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEF28);
  sub_1A3D88664(&qword_1E95EEF48, (void (*)(void))sub_1A3D886EC, (void (*)(void))sub_1A3D32A44);
  sub_1A4096DBC();
  if (!v2)
  {
    char v18 = 0;
    sub_1A3C80D74();
    sub_1A4096D5C();
    uint64_t v13 = sub_1A3D83C3C(&qword_1E95EEF08, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
    sub_1A3D2A9D0((uint64_t)v7, v12, (uint64_t)&off_1EF74B848, v13);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A3D85874@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AnimalBodyPoseObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3D8588C(void *a1)
{
  return AnimalBodyPoseObservation.encode(to:)(a1);
}

void *sub_1A3D858A4(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = type metadata accessor for AnimalBodyPoseObservation();
  uint64_t result = 0;
  unsigned int v5 = *(unsigned __int16 *)(v1 + *(int *)(v3 + 28));
  if (v5 <= 0xFFF7)
  {
    if (v5 >> 3 == 5)
    {
      uint64_t result = &unk_1EF74B4A8;
      switch(v2)
      {
        case 1:
          uint64_t result = &unk_1EF74B400;
          break;
        case 2:
          uint64_t result = &unk_1EF74B430;
          break;
        case 3:
          uint64_t result = &unk_1EF74B458;
          break;
        case 4:
          uint64_t result = &unk_1EF74B480;
          break;
        default:
          return result;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A3D85974@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  __int16 v41 = *a2;
  unint64_t v7 = sub_1A3D85C3C(MEMORY[0x1E4FBC860]);
  id v8 = objc_msgSend(a1, sel_availableJointNames);
  _s3__C9JointNameVMa_1(0);
  uint64_t v9 = sub_1A409630C();

  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v39 = a3;
    uint64_t v40 = a4;
    uint64_t v11 = 0;
    uint64_t v12 = &selRef_nmsThreshold;
    uint64_t v42 = v9;
    do
    {
      uint64_t v15 = *(void **)(v9 + 8 * v11 + 32);
      *(void *)&long long v44 = 0;
      id v16 = v15;
      id v17 = objc_msgSend(a1, v12[325], v16, &v44);
      char v18 = (void *)v44;
      if (v17)
      {
        char v19 = v17;
        id v20 = v16;
        id v21 = v18;
        sub_1A3D85D70(v20, (char *)&v44);
        char v22 = v44;
        if (v44 == 25)
        {
        }
        else
        {
          objc_msgSend(v19, sel_location);
          NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v24, v23));
          uint64_t v25 = AnimalBodyPoseObservation.JointName.rawValue.getter();
          uint64_t v26 = v10;
          uint64_t v27 = a1;
          uint64_t v28 = v12;
          uint64_t v30 = v29;
          objc_msgSend(v19, sel_confidence);
          uint64_t v31 = v30;
          uint64_t v12 = v28;
          a1 = v27;
          uint64_t v10 = v26;
          uint64_t v9 = v42;
          sub_1A3C977C4(&v44, v25, v31, (uint64_t)v43, v32);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v44 = v7;
          sub_1A3D88078((uint64_t)v43, v22, isUniquelyReferenced_nonNull_native);
          unint64_t v7 = v44;

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        id v13 = (id)v44;
        char v14 = (void *)sub_1A4095AEC();

        swift_willThrow();
      }
      ++v11;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    a3 = v39;
    a4 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v34 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v36 = v35;

  char v37 = (int *)type metadata accessor for AnimalBodyPoseObservation();
  *(_DWORD *)(a4 + v37[5]) = v36;
  uint64_t result = sub_1A3C7D648(a3, a4 + v37[6]);
  *(_WORD *)(a4 + v37[7]) = v41;
  *(void *)(a4 + v37[8]) = v7;
  return result;
}

unint64_t sub_1A3D85C3C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEFD0);
  uint64_t v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_DWORD *)(a1 + 72);
  while (1)
  {
    char v5 = *((unsigned char *)v4 - 40);
    uint64_t v6 = *((void *)v4 - 4);
    uint64_t v7 = *((void *)v4 - 3);
    uint64_t v9 = *((void *)v4 - 2);
    uint64_t v8 = *((void *)v4 - 1);
    int v10 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3D87270(v5);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v13 = v2[7] + 40 * result;
    *(void *)uint64_t v13 = v6;
    *(void *)(v13 + 8) = v7;
    *(void *)(v13 + 16) = v9;
    *(void *)(v13 + 24) = v8;
    *(_DWORD *)(v13 + 32) = v10;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1A3D85D70(void *a1@<X0>, char *a2@<X8>)
{
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1A409617C();
  uint64_t v8 = v7;
  if (v6 == sub_1A409617C() && v8 == v9)
  {
    char v12 = 0;
    goto LABEL_10;
  }
  char v11 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v12 = 0;
  if (v11)
  {
LABEL_11:

    goto LABEL_12;
  }
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1A409617C();
  uint64_t v15 = v14;
  if (v13 == sub_1A409617C() && v15 == v16)
  {
    char v12 = 1;
LABEL_10:

    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v17 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
    char v12 = 1;
    goto LABEL_11;
  }
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1A409617C();
  uint64_t v20 = v19;
  if (v18 == sub_1A409617C() && v20 == v21)
  {
    char v12 = 2;
    goto LABEL_10;
  }
  char v22 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
    char v12 = 2;
    goto LABEL_11;
  }
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1A409617C();
  uint64_t v25 = v24;
  if (v23 == sub_1A409617C() && v25 == v26)
  {
    char v12 = 3;
    goto LABEL_10;
  }
  char v27 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
    char v12 = 3;
    goto LABEL_11;
  }
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1A409617C();
  uint64_t v30 = v29;
  if (v28 == sub_1A409617C() && v30 == v31)
  {
    char v12 = 4;
    goto LABEL_10;
  }
  char v32 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v32)
  {
    char v12 = 4;
    goto LABEL_11;
  }
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_1A409617C();
  uint64_t v35 = v34;
  if (v33 == sub_1A409617C() && v35 == v36)
  {
    char v12 = 5;
    goto LABEL_10;
  }
  char v37 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37)
  {
    char v12 = 5;
    goto LABEL_11;
  }
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  char v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_1A409617C();
  uint64_t v40 = v39;
  if (v38 == sub_1A409617C() && v40 == v41)
  {
    char v12 = 6;
    goto LABEL_10;
  }
  char v42 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v42)
  {
    char v12 = 6;
    goto LABEL_11;
  }
  sub_1A409617C();
  long long v43 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  long long v44 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_1A409617C();
  uint64_t v47 = v46;
  if (v45 == sub_1A409617C() && v47 == v48)
  {

    swift_bridgeObjectRelease_n();
LABEL_44:

    char v12 = 7;
    goto LABEL_12;
  }
  char v49 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v49) {
    goto LABEL_44;
  }
  sub_1A409617C();
  uint64_t v50 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v51 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v52 = sub_1A409617C();
  uint64_t v54 = v53;
  if (v52 == sub_1A409617C() && v54 == v55)
  {

    swift_bridgeObjectRelease_n();
LABEL_49:

    char v12 = 8;
    goto LABEL_12;
  }
  char v56 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v56) {
    goto LABEL_49;
  }
  sub_1A409617C();
  uint64_t v57 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v58 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v59 = sub_1A409617C();
  uint64_t v61 = v60;
  if (v59 == sub_1A409617C() && v61 == v62)
  {

    swift_bridgeObjectRelease_n();
LABEL_54:

    char v12 = 9;
    goto LABEL_12;
  }
  char v63 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v63) {
    goto LABEL_54;
  }
  sub_1A409617C();
  uint64_t v64 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v65 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v66 = sub_1A409617C();
  uint64_t v68 = v67;
  if (v66 == sub_1A409617C() && v68 == v69)
  {

    swift_bridgeObjectRelease_n();
LABEL_59:

    char v12 = 10;
    goto LABEL_12;
  }
  char v70 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v70) {
    goto LABEL_59;
  }
  sub_1A409617C();
  uint64_t v71 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v72 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v73 = sub_1A409617C();
  uint64_t v75 = v74;
  if (v73 == sub_1A409617C() && v75 == v76)
  {

    swift_bridgeObjectRelease_n();
LABEL_64:

    char v12 = 11;
    goto LABEL_12;
  }
  char v77 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v77) {
    goto LABEL_64;
  }
  sub_1A409617C();
  uint64_t v78 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v79 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v80 = sub_1A409617C();
  uint64_t v82 = v81;
  if (v80 == sub_1A409617C() && v82 == v83)
  {

    swift_bridgeObjectRelease_n();
LABEL_69:

    char v12 = 12;
    goto LABEL_12;
  }
  char v84 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v84) {
    goto LABEL_69;
  }
  sub_1A409617C();
  uint64_t v85 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v86 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v87 = sub_1A409617C();
  uint64_t v89 = v88;
  if (v87 == sub_1A409617C() && v89 == v90)
  {

    swift_bridgeObjectRelease_n();
LABEL_74:

    char v12 = 13;
    goto LABEL_12;
  }
  char v91 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v91) {
    goto LABEL_74;
  }
  sub_1A409617C();
  uint64_t v92 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v93 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v94 = sub_1A409617C();
  uint64_t v96 = v95;
  if (v94 == sub_1A409617C() && v96 == v97)
  {

    swift_bridgeObjectRelease_n();
LABEL_79:

    char v12 = 14;
    goto LABEL_12;
  }
  char v98 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v98) {
    goto LABEL_79;
  }
  sub_1A409617C();
  uint64_t v99 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v100 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v101 = sub_1A409617C();
  uint64_t v103 = v102;
  if (v101 == sub_1A409617C() && v103 == v104)
  {

    swift_bridgeObjectRelease_n();
LABEL_84:

    char v12 = 15;
    goto LABEL_12;
  }
  char v105 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v105) {
    goto LABEL_84;
  }
  sub_1A409617C();
  uint64_t v106 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v107 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v108 = sub_1A409617C();
  uint64_t v110 = v109;
  if (v108 == sub_1A409617C() && v110 == v111)
  {

    swift_bridgeObjectRelease_n();
LABEL_89:

    char v12 = 16;
    goto LABEL_12;
  }
  char v112 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v112) {
    goto LABEL_89;
  }
  sub_1A409617C();
  uint64_t v113 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v114 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v115 = sub_1A409617C();
  uint64_t v117 = v116;
  if (v115 == sub_1A409617C() && v117 == v118)
  {

    swift_bridgeObjectRelease_n();
LABEL_94:

    char v12 = 17;
    goto LABEL_12;
  }
  char v119 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v119) {
    goto LABEL_94;
  }
  sub_1A409617C();
  uint64_t v120 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v121 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v122 = sub_1A409617C();
  uint64_t v124 = v123;
  if (v122 == sub_1A409617C() && v124 == v125)
  {

    swift_bridgeObjectRelease_n();
LABEL_99:

    char v12 = 18;
    goto LABEL_12;
  }
  char v126 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v126) {
    goto LABEL_99;
  }
  sub_1A409617C();
  uint64_t v127 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v128 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v129 = sub_1A409617C();
  uint64_t v131 = v130;
  if (v129 == sub_1A409617C() && v131 == v132)
  {

    swift_bridgeObjectRelease_n();
LABEL_104:

    char v12 = 19;
    goto LABEL_12;
  }
  char v133 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v133) {
    goto LABEL_104;
  }
  sub_1A409617C();
  uint64_t v134 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v135 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v136 = sub_1A409617C();
  uint64_t v138 = v137;
  if (v136 == sub_1A409617C() && v138 == v139)
  {

    swift_bridgeObjectRelease_n();
LABEL_109:

    char v12 = 20;
    goto LABEL_12;
  }
  char v140 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v140) {
    goto LABEL_109;
  }
  sub_1A409617C();
  uint64_t v141 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v142 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v143 = sub_1A409617C();
  uint64_t v145 = v144;
  if (v143 == sub_1A409617C() && v145 == v146)
  {

    swift_bridgeObjectRelease_n();
LABEL_114:

    char v12 = 21;
    goto LABEL_12;
  }
  char v147 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v147) {
    goto LABEL_114;
  }
  sub_1A409617C();
  uint64_t v148 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v149 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v150 = sub_1A409617C();
  uint64_t v152 = v151;
  if (v150 == sub_1A409617C() && v152 == v153)
  {

    swift_bridgeObjectRelease_n();
LABEL_119:

    char v12 = 22;
    goto LABEL_12;
  }
  char v154 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v154) {
    goto LABEL_119;
  }
  sub_1A409617C();
  long long v155 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v156 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v157 = sub_1A409617C();
  uint64_t v159 = v158;
  if (v157 == sub_1A409617C() && v159 == v160)
  {

    swift_bridgeObjectRelease_n();
LABEL_124:

    char v12 = 23;
    goto LABEL_12;
  }
  char v161 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v161) {
    goto LABEL_124;
  }
  sub_1A409617C();
  v162 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  v163 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v164 = sub_1A409617C();
  uint64_t v166 = v165;
  if (v164 == sub_1A409617C() && v166 == v167)
  {
    id v168 = a1;

    swift_bridgeObjectRelease_n();
    char v12 = 24;
  }
  else
  {
    char v169 = sub_1A4096E5C();
    id v170 = a1;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v169) {
      char v12 = 24;
    }
    else {
      char v12 = 25;
    }
  }
LABEL_12:
  *a2 = v12;
}

uint64_t AnimalBodyPoseObservation.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __int16 v6 = -8;
  objc_msgSend(a1, sel_timeRange, static NormalizedRect.fullImage.getter(v5).n128_f64[0]);
  char v8 = 0;
  return sub_1A3D85974(a1, &v6, (uint64_t)&v7, a2);
}

uint64_t sub_1A3D87154@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  __int16 v5 = *a2;
  return sub_1A3D85974(a1, &v5, a3, a4);
}

uint64_t sub_1A3D87180(uint64_t a1)
{
  uint64_t v2 = sub_1A3D83C3C((unint64_t *)&unk_1E95F0050, _s3__C9JointNameVMa_1);
  uint64_t v3 = sub_1A3D83C3C(&qword_1E95EEFC8, _s3__C9JointNameVMa_1);
  uint64_t v4 = sub_1A3D83C3C(&qword_1E95EDE28, type metadata accessor for VNRecognizedPointKey);

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

unint64_t sub_1A3D87270(char a1)
{
  sub_1A4096F2C();
  AnimalBodyPoseObservation.JointName.rawValue.getter();
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A4096F7C();

  return sub_1A3D872FC(a1, v2);
}

unint64_t sub_1A3D872FC(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      unint64_t v7 = 0xEA0000000000706FLL;
      uint64_t v8 = 0x547261457466656CLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x4D7261457466656CLL;
          unsigned int v9 = 1818518633;
          goto LABEL_23;
        case 2:
          uint64_t v8 = 0x427261457466656CLL;
          unint64_t v7 = 0xED00006D6F74746FLL;
          break;
        case 3:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6579457466656CLL;
          break;
        case 4:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1801676142;
          break;
        case 5:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1702063982;
          break;
        case 6:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6579457468676972;
          break;
        case 7:
          unint64_t v7 = 0xEB00000000706F54;
          goto LABEL_14;
        case 8:
          uint64_t v10 = 0x656C6464694DLL;
          goto LABEL_13;
        case 9:
          uint64_t v10 = 0x6D6F74746F42;
LABEL_13:
          unint64_t v7 = v10 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
LABEL_14:
          uint64_t v8 = 0x7261457468676972;
          break;
        case 0xA:
          unint64_t v7 = 0xED0000776F626C45;
          goto LABEL_26;
        case 0xB:
          unint64_t v11 = 0xEE00776F626C456BLL;
          goto LABEL_21;
        case 0xC:
          unint64_t v7 = 0xEF776F626C45746ELL;
          goto LABEL_31;
        case 0xD:
          uint64_t v8 = 0x6361427468676972;
          unint64_t v7 = 0xEE00776F626C456BLL;
          break;
        case 0xE:
          unint64_t v7 = 0xEC00000065656E4BLL;
          goto LABEL_26;
        case 0xF:
          unint64_t v11 = 0xED000065656E4B6BLL;
LABEL_21:
          unint64_t v7 = v11 + 9;
          goto LABEL_28;
        case 0x10:
          uint64_t v8 = 0x6361427468676972;
          unsigned int v9 = 1701727083;
LABEL_23:
          unint64_t v7 = v9 | 0xED00006500000000;
          break;
        case 0x11:
          unint64_t v7 = 0xEE0065656E4B746ELL;
          goto LABEL_31;
        case 0x12:
          unint64_t v7 = 0xEB00000000776150;
LABEL_26:
          uint64_t v8 = 0x6B6361427466656CLL;
          break;
        case 0x13:
          unint64_t v7 = 0xEC00000077615074;
LABEL_28:
          uint64_t v8 = 0x6E6F72467466656CLL;
          break;
        case 0x14:
          uint64_t v8 = 0x6361427468676972;
          unint64_t v7 = 0xEC0000007761506BLL;
          break;
        case 0x15:
          unint64_t v7 = 0xED0000776150746ELL;
LABEL_31:
          uint64_t v8 = 0x6F72467468676972;
          break;
        case 0x16:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x706F546C696174;
          break;
        case 0x17:
          uint64_t v8 = 0x6464694D6C696174;
          unint64_t v7 = 0xEA0000000000656CLL;
          break;
        case 0x18:
          uint64_t v8 = 0x74746F426C696174;
          unint64_t v7 = 0xEA00000000006D6FLL;
          break;
        default:
          break;
      }
      unint64_t v12 = 0xEA0000000000706FLL;
      uint64_t v13 = 0x547261457466656CLL;
      switch(a1)
      {
        case 1:
          uint64_t v14 = 0x4D7261457466656CLL;
          uint64_t v15 = 1818518633;
          goto LABEL_61;
        case 2:
          uint64_t v14 = 0x427261457466656CLL;
          unint64_t v16 = 0x6D6F74746FLL;
          goto LABEL_62;
        case 3:
          unint64_t v12 = 0xE700000000000000;
          if (v8 != 0x6579457466656CLL) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 4:
          unint64_t v12 = 0xE400000000000000;
          if (v8 != 1801676142) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 5:
          unint64_t v12 = 0xE400000000000000;
          if (v8 != 1702063982) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 6:
          unint64_t v12 = 0xE800000000000000;
          if (v8 != 0x6579457468676972) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 7:
          unint64_t v12 = 0xEB00000000706F54;
          goto LABEL_50;
        case 8:
          uint64_t v17 = 0x656C6464694DLL;
          goto LABEL_49;
        case 9:
          uint64_t v17 = 0x6D6F74746F42;
LABEL_49:
          unint64_t v12 = v17 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
LABEL_50:
          if (v8 != 0x7261457468676972) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 10:
          unint64_t v12 = 0xED0000776F626C45;
          goto LABEL_66;
        case 11:
          unint64_t v18 = 0xEE00776F626C456BLL;
          goto LABEL_59;
        case 12:
          unint64_t v12 = 0xEF776F626C45746ELL;
          goto LABEL_74;
        case 13:
          unint64_t v12 = 0xEE00776F626C456BLL;
          if (v8 != 0x6361427468676972) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 14:
          unint64_t v12 = 0xEC00000065656E4BLL;
          goto LABEL_66;
        case 15:
          unint64_t v18 = 0xED000065656E4B6BLL;
LABEL_59:
          unint64_t v12 = v18 + 9;
          goto LABEL_69;
        case 16:
          uint64_t v14 = 0x6361427468676972;
          uint64_t v15 = 1701727083;
LABEL_61:
          unint64_t v16 = v15 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
LABEL_62:
          unint64_t v12 = v16 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          if (v8 != v14) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 17:
          unint64_t v12 = 0xEE0065656E4B746ELL;
          goto LABEL_74;
        case 18:
          unint64_t v12 = 0xEB00000000776150;
LABEL_66:
          if (v8 != 0x6B6361427466656CLL) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 19:
          unint64_t v12 = 0xEC00000077615074;
LABEL_69:
          if (v8 != 0x6E6F72467466656CLL) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 20:
          unint64_t v12 = 0xEC0000007761506BLL;
          if (v8 != 0x6361427468676972) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 21:
          unint64_t v12 = 0xED0000776150746ELL;
LABEL_74:
          if (v8 != 0x6F72467468676972) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 22:
          unint64_t v12 = 0xE700000000000000;
          if (v8 != 0x706F546C696174) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 23:
          uint64_t v13 = 0x6464694D6C696174;
          unint64_t v12 = 0xEA0000000000656CLL;
          goto LABEL_79;
        case 24:
          unint64_t v12 = 0xEA00000000006D6FLL;
          if (v8 != 0x74746F426C696174) {
            goto LABEL_81;
          }
          goto LABEL_80;
        default:
LABEL_79:
          if (v8 != v13) {
            goto LABEL_81;
          }
LABEL_80:
          if (v7 == v12)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_81:
          char v19 = sub_1A4096E5C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v19) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v6;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_1A3D87A44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEFD0);
  uint64_t v6 = sub_1A4096C1C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v20 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v21 = v20 | (v12 << 6);
    goto LABEL_30;
  }
  int64_t v22 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_41;
  }
  if (v22 >= v38)
  {
    swift_release();
    uint64_t v3 = v37;
    uint64_t v23 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_36:
      uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
      if (v35 >= 64) {
        bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v23 = -1 << v35;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v39 + 8 * v22);
    ++v12;
    if (v24) {
      goto LABEL_29;
    }
    int64_t v12 = v22 + 1;
    if (v22 + 1 >= v38) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v39 + 8 * v12);
    if (v24)
    {
LABEL_29:
      unint64_t v10 = (v24 - 1) & v24;
      unint64_t v21 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_30:
      char v30 = *(unsigned char *)(*(void *)(v5 + 48) + v21);
      uint64_t v31 = *(void *)(v5 + 56) + 40 * v21;
      long long v40 = *(_OWORD *)v31;
      uint64_t v33 = *(void *)(v31 + 16);
      uint64_t v32 = *(void *)(v31 + 24);
      int v34 = *(_DWORD *)(v31 + 32);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1A4096F2C();
      sub_1A40961CC();
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_1A4096F7C();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      unint64_t v17 = (-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6));
      if (v17)
      {
        unint64_t v18 = __clz(__rbit64(v17)) | v15 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      while (++v16 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
        if (v29 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v29)) + (v16 << 6);
LABEL_7:
          *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v7 + 48) + v18) = v30;
          uint64_t v19 = *(void *)(v7 + 56) + 40 * v18;
          *(_OWORD *)uint64_t v19 = v40;
          *(void *)(v19 + 16) = v33;
          *(void *)(v19 + 24) = v32;
          *(_DWORD *)(v19 + 32) = v34;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x1A3D88014);
    }
    int64_t v25 = v22 + 2;
    if (v25 < v38)
    {
      unint64_t v24 = *(void *)(v39 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          int64_t v12 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            goto LABEL_42;
          }
          if (v12 >= v38) {
            goto LABEL_33;
          }
          unint64_t v24 = *(void *)(v39 + 8 * v12);
          ++v25;
          if (v24) {
            goto LABEL_29;
          }
        }
      }
      int64_t v12 = v25;
      goto LABEL_29;
    }
LABEL_33:
    swift_release();
    uint64_t v3 = v37;
    if (a2) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A3D88078(uint64_t a1, char a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1A3D87270(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < result || (a3 & 1) == 0)
  {
    if (v15 < result || (a3 & 1) != 0)
    {
      sub_1A3D87A44(result, a3 & 1);
      uint64_t result = sub_1A3D87270(a2);
      if ((v14 & 1) != (v18 & 1))
      {
LABEL_17:
        uint64_t result = sub_1A4096EBC();
        __break(1u);
        return result;
      }
      unint64_t v10 = result;
      unint64_t v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_1A3D881E4();
  }
  unint64_t v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    uint64_t v19 = v16[7] + 40 * v10;
    long long v20 = *(_OWORD *)a1;
    long long v21 = *(_OWORD *)(a1 + 16);
    *(_DWORD *)(v19 + 32) = *(_DWORD *)(a1 + 32);
    *(_OWORD *)uint64_t v19 = v20;
    *(_OWORD *)(v19 + 16) = v21;
    uint64_t v22 = v16[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 40 * v10;

  return sub_1A3D3508C(a1, v17);
}

void *sub_1A3D881E4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEFD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 40 * v15;
    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v17 = *(void *)(v16 + 24);
    int v19 = *(_DWORD *)(v16 + 32);
    long long v20 = *(_OWORD *)v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v21 = *(void *)(v4 + 56) + 40 * v15;
    *(_OWORD *)uint64_t v21 = v20;
    *(void *)(v21 + 16) = v18;
    *(void *)(v21 + 24) = v17;
    *(_DWORD *)(v21 + 32) = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s6Vision25AnimalBodyPoseObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1A4095C4C() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v4 = type metadata accessor for AnimalBodyPoseObservation();
  if (*(float *)(a1 + *(int *)(v4 + 20)) != *(float *)(a2 + *(int *)(v4 + 20))) {
    goto LABEL_14;
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(int *)(v4 + 24);
  char v7 = *(unsigned char *)(a1 + v6 + 48);
  uint64_t v8 = a2 + v6;
  if (v7)
  {
    if (!*(unsigned char *)(v8 + 48)) {
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(v8 + 48) & 1) != 0 || (sub_1A409669C() & 1) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v9 = *(int *)(v5 + 28);
  unsigned int v10 = *(unsigned __int16 *)(a1 + v9);
  unsigned int v11 = *(unsigned __int16 *)(a2 + v9);
  if (v10 <= 0xFFF7)
  {
    if (v11 > 0xFFF7) {
      goto LABEL_14;
    }
    sub_1A3C832B8();
    if ((sub_1A409612C() & 1) == 0) {
      goto LABEL_14;
    }
  }
  else if (v11 <= 0xFFF7)
  {
LABEL_14:
    char v12 = 0;
    return v12 & 1;
  }
  char v12 = sub_1A3D84A10(*(void *)(a1 + *(int *)(v5 + 32)), *(void *)(a2 + *(int *)(v5 + 32)));
  return v12 & 1;
}

unint64_t sub_1A3D884FC()
{
  unint64_t result = qword_1E961C210[0];
  if (!qword_1E961C210[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961C210);
  }
  return result;
}

unint64_t sub_1A3D88550()
{
  unint64_t result = qword_1E95EEF38;
  if (!qword_1E95EEF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEF38);
  }
  return result;
}

uint64_t sub_1A3D885A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnimalBodyPoseObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D88608(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnimalBodyPoseObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3D88664(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EEF28);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3D886EC()
{
  unint64_t result = qword_1E95EEF50;
  if (!qword_1E95EEF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEF50);
  }
  return result;
}

void _s3__C9JointNameVMa_1(uint64_t a1)
{
}

unint64_t sub_1A3D88758()
{
  unint64_t result = qword_1E95EEF58;
  if (!qword_1E95EEF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEF58);
  }
  return result;
}

unint64_t sub_1A3D887B0()
{
  unint64_t result = qword_1E95EEF60;
  if (!qword_1E95EEF60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EEF68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEF60);
  }
  return result;
}

unint64_t sub_1A3D88810()
{
  unint64_t result = qword_1E95EEF70;
  if (!qword_1E95EEF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEF70);
  }
  return result;
}

uint64_t sub_1A3D88864(void *a1)
{
  a1[1] = sub_1A3D83C3C(&qword_1E95EEF78, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
  a1[2] = sub_1A3D83C3C(&qword_1E95EEF80, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
  a1[3] = sub_1A3D83C3C(&qword_1E95EEF88, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
  uint64_t result = sub_1A3D83C3C(&qword_1E95EEF18, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
  a1[4] = result;
  return result;
}

unint64_t sub_1A3D88944()
{
  unint64_t result = qword_1E95EEF90;
  if (!qword_1E95EEF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEF90);
  }
  return result;
}

unint64_t sub_1A3D8899C()
{
  unint64_t result = qword_1E95EEF98;
  if (!qword_1E95EEF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEF98);
  }
  return result;
}

unint64_t sub_1A3D889F4()
{
  unint64_t result = qword_1E95EEFA0;
  if (!qword_1E95EEFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEFA0);
  }
  return result;
}

unint64_t sub_1A3D88A4C()
{
  unint64_t result = qword_1E95EEFA8;
  if (!qword_1E95EEFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEFA8);
  }
  return result;
}

uint64_t sub_1A3D88AA0()
{
  return sub_1A3D83C3C(&qword_1E95ED150, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
}

uint64_t sub_1A3D88AE8(uint64_t a1)
{
  uint64_t result = sub_1A3D83C3C(&qword_1E95EEFB0, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3D88B40(uint64_t a1)
{
  uint64_t result = sub_1A3D83C3C(&qword_1E95EEF08, (void (*)(uint64_t))type metadata accessor for AnimalBodyPoseObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AnimalBodyPoseObservation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A4095C7C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    v9[48] = v10[48];
    uint64_t v12 = a3[8];
    *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AnimalBodyPoseObservation(uint64_t a1)
{
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnimalBodyPoseObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v11 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnimalBodyPoseObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 48);
  long long v12 = *(_OWORD *)(v9 + 16);
  long long v11 = *(_OWORD *)(v9 + 32);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v12;
  *(_OWORD *)(v8 + 32) = v11;
  *(unsigned char *)(v8 + 48) = v10;
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnimalBodyPoseObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v11 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimalBodyPoseObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3D88F58);
}

uint64_t sub_1A3D88F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AnimalBodyPoseObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3D8902C);
}

uint64_t sub_1A3D8902C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095C7C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A3D890E8()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnimalBodyPoseObservation.JointName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *uint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D89270);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimalBodyPoseObservation.JointName()
{
  return &type metadata for AnimalBodyPoseObservation.JointName;
}

unsigned char *storeEnumTagSinglePayload for AnimalBodyPoseObservation.JointsGroupName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D89374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimalBodyPoseObservation.JointsGroupName()
{
  return &type metadata for AnimalBodyPoseObservation.JointsGroupName;
}

unsigned char *storeEnumTagSinglePayload for AnimalBodyPoseObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D89478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimalBodyPoseObservation.CodingKeys()
{
  return &type metadata for AnimalBodyPoseObservation.CodingKeys;
}

unint64_t sub_1A3D894B4()
{
  unint64_t result = qword_1E961CC30[0];
  if (!qword_1E961CC30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961CC30);
  }
  return result;
}

uint64_t sub_1A3D89508()
{
  return sub_1A3D83C3C((unint64_t *)&unk_1E95EFFB0, _s3__C9JointNameVMa_1);
}

uint64_t sub_1A3D89550()
{
  return sub_1A3D83C3C(&qword_1E95EEFC0, _s3__C9JointNameVMa_1);
}

uint64_t sub_1A3D89598()
{
  return sub_1A3D83C3C(&qword_1E95EFFC0, _s3__C9JointNameVMa_1);
}

unint64_t sub_1A3D895E4()
{
  unint64_t result = qword_1E961CEC0;
  if (!qword_1E961CEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961CEC0);
  }
  return result;
}

unint64_t sub_1A3D8963C()
{
  unint64_t result = qword_1E961CEC8[0];
  if (!qword_1E961CEC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961CEC8);
  }
  return result;
}

uint64_t sub_1A3D89690(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F4A6C6C61 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static GenerateForegroundInstanceMaskRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static GenerateForegroundInstanceMaskRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t GenerateForegroundInstanceMaskRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D897E0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D89AA0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8981C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D89AA0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D89858(uint64_t a1)
{
  unint64_t v2 = sub_1A3D89AF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D89894(uint64_t a1)
{
  unint64_t v2 = sub_1A3D89AF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GenerateForegroundInstanceMaskRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEFD8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEFE0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D89AA0();
  sub_1A4096FEC();
  sub_1A3D89AF4();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D89AA0()
{
  unint64_t result = qword_1E961CF68;
  if (!qword_1E961CF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961CF68);
  }
  return result;
}

unint64_t sub_1A3D89AF4()
{
  unint64_t result = qword_1E961CF70[0];
  if (!qword_1E961CF70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961CF70);
  }
  return result;
}

uint64_t GenerateForegroundInstanceMaskRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t GenerateForegroundInstanceMaskRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEFE8);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEFF0);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D89AA0();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D89AF4();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for GenerateForegroundInstanceMaskRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D89E74(void *a1)
{
  return GenerateForegroundInstanceMaskRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D89E8C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEFD8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EEFE0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D89AA0();
  sub_1A4096FEC();
  sub_1A3D89AF4();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double GenerateForegroundInstanceMaskRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v9);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3D8A1F0();
    sub_1A3E2C988((uint64_t)&type metadata for GenerateForegroundInstanceMaskRequest, v5, v6);
  }
  double result = v9[0].n128_f64[0];
  __n128 v8 = v9[1];
  *a2 = v9[0];
  a2[1] = v8;
  a2[2].n128_u8[0] = 0;
  a2[2].n128_u64[1] = v4;
  return result;
}

__n128 GenerateForegroundInstanceMaskRequest.regionOfInterest.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 GenerateForegroundInstanceMaskRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*GenerateForegroundInstanceMaskRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D8A114()
{
  unint64_t v0 = sub_1A3D8A1F0();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for GenerateForegroundInstanceMaskRequest, v0);
  qword_1E961CF58 = result;
  return result;
}

uint64_t static GenerateForegroundInstanceMaskRequest.supportedRevisions.getter()
{
  if (qword_1E961CF50 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void GenerateForegroundInstanceMaskRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 160;
}

void GenerateForegroundInstanceMaskRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *GenerateForegroundInstanceMaskRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*GenerateForegroundInstanceMaskRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D8A1F0()
{
  unint64_t result = qword_1E95EEFF8;
  if (!qword_1E95EEFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EEFF8);
  }
  return result;
}

int *sub_1A3D8A244()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF058);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(7, 0, 31);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(7, 0, 31);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(7, 0, 31);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for GenerateForegroundInstanceMaskRequest.Revision, v0 + 32);
  qword_1E9643D50 = v0;
  return result;
}

uint64_t GenerateForegroundInstanceMaskRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t GenerateForegroundInstanceMaskRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1A4096F2C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3D8A470(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8AB0C();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D8A4AC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3D8A1F0();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D8A500(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3D8A1F0();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D8A554(_WORD *a1@<X8>)
{
  *a1 = 160;
}

uint64_t sub_1A3D8A560(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8A1F0();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D8A5A0()
{
  if (qword_1E961CF60 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D8A5FC()
{
  return sub_1A409617C();
}

uint64_t sub_1A3D8A624(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA2B4();

  return sub_1A3E2C684(a1, a2);
}

unint64_t sub_1A3D8A674()
{
  unint64_t result = qword_1E95EF000;
  if (!qword_1E95EF000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF000);
  }
  return result;
}

unint64_t sub_1A3D8A6C8(uint64_t a1)
{
  unint64_t result = sub_1A3CCA2B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D8A6F0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF09C();
  unint64_t result = sub_1A3D8A720();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D8A720()
{
  unint64_t result = qword_1E95EF038;
  if (!qword_1E95EF038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF038);
  }
  return result;
}

unint64_t sub_1A3D8A778()
{
  unint64_t result = qword_1E95EF040;
  if (!qword_1E95EF040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF040);
  }
  return result;
}

unint64_t sub_1A3D8A7D0()
{
  unint64_t result = qword_1E95EF048;
  if (!qword_1E95EF048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF048);
  }
  return result;
}

unint64_t sub_1A3D8A824(uint64_t a1)
{
  unint64_t result = sub_1A3D8A1F0();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for GenerateForegroundInstanceMaskRequest()
{
  return &type metadata for GenerateForegroundInstanceMaskRequest;
}

ValueMetadata *type metadata accessor for GenerateForegroundInstanceMaskRequest.Revision()
{
  return &type metadata for GenerateForegroundInstanceMaskRequest.Revision;
}

unsigned char *_s6Vision37GenerateForegroundInstanceMaskRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D8A90CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateForegroundInstanceMaskRequest.Revision.CodingKeys()
{
  return &type metadata for GenerateForegroundInstanceMaskRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerateForegroundInstanceMaskRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for GenerateForegroundInstanceMaskRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3D8A958()
{
  unint64_t result = qword_1E961D780[0];
  if (!qword_1E961D780[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961D780);
  }
  return result;
}

unint64_t sub_1A3D8A9B0()
{
  unint64_t result = qword_1E961D890;
  if (!qword_1E961D890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961D890);
  }
  return result;
}

unint64_t sub_1A3D8AA08()
{
  unint64_t result = qword_1E961D898[0];
  if (!qword_1E961D898[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961D898);
  }
  return result;
}

unint64_t sub_1A3D8AA60()
{
  unint64_t result = qword_1E961D920;
  if (!qword_1E961D920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961D920);
  }
  return result;
}

unint64_t sub_1A3D8AAB8()
{
  unint64_t result = qword_1E961D928[0];
  if (!qword_1E961D928[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961D928);
  }
  return result;
}

unint64_t sub_1A3D8AB0C()
{
  unint64_t result = qword_1E95EF050;
  if (!qword_1E95EF050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF050);
  }
  return result;
}

uint64_t VisionObservation.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A4095C7C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  __n128 v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  sub_1A3D8AFD8((unint64_t *)&qword_1E95EC2D0);
  sub_1A40960DC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A3D8AC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A4095C7C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __n128 v8 = (char *)&range - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a1, a3);
  sub_1A3D8AFD8(&qword_1E95EBE68);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1A409621C();
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a1, a3);
  sub_1A40965EC();
  long long v14 = v16;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 56))(v15, a1, a3);
  sub_1A3C7D648((uint64_t)v15, (uint64_t)&v16);
  if ((v19 & 1) == 0)
  {
    long long v20 = v16;
    long long v21 = v17;
    long long v22 = v18;
    long long v9 = v16;
    long long v10 = v17;
    long long v11 = v18;
    sub_1A409621C();
    if ((sub_1A40966DC() & 1) != 0 && (sub_1A409668C() & 1) == 0)
    {
      *(_OWORD *)&range.start.CMTimeValue value = v9;
      *(_OWORD *)&range.start.CMTimeEpoch epoch = v10;
      *(_OWORD *)&range.duration.uint64_t timescale = v11;
      range.start.CMTimeValue value = (CMTimeValue)CMTimeRangeCopyDescription(0, &range);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF060);
      sub_1A409619C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A409621C();
    }
  }
  return v14;
}

uint64_t sub_1A3D8AFD8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A4095C7C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of VisionObservation.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of VisionObservation.confidence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of VisionObservation.timeRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of VisionObservation.originatingRequestDescriptor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t static DetectRectanglesRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static DetectRectanglesRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t DetectRectanglesRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D8B0A4(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8B364();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8B0E0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8B364();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D8B11C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8B3B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8B158(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8B3B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectRectanglesRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF068);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF070);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8B364();
  sub_1A4096FEC();
  sub_1A3D8B3B8();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D8B364()
{
  unint64_t result = qword_1E961D9C8;
  if (!qword_1E961D9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961D9C8);
  }
  return result;
}

unint64_t sub_1A3D8B3B8()
{
  unint64_t result = qword_1E961D9D0;
  if (!qword_1E961D9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961D9D0);
  }
  return result;
}

uint64_t DetectRectanglesRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectRectanglesRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF078);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF080);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8B364();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D8B3B8();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for DetectRectanglesRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D8B738(void *a1)
{
  return DetectRectanglesRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D8B750(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF068);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF070);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8B364();
  sub_1A4096FEC();
  sub_1A3D8B3B8();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t DetectRectanglesRequest.init(_:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(&v21);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3D8C6C8();
    sub_1A3E2C988((uint64_t)&type metadata for DetectRectanglesRequest, v5, v6);
  }
  __n128 v7 = v21;
  uint64_t v8 = v22;
  uint64_t v9 = v23;
  unint64_t v10 = sub_1A3D8C71C();
  uint64_t v11 = sub_1A3D4507C((uint64_t)&type metadata for DetectRectanglesRequest, v10);
  uint64_t v13 = v12;
  uint64_t v14 = sub_1A409617C();
  if (!v13)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v20 = 2;
    long long v19 = xmmword_1A40FA210;
    goto LABEL_13;
  }
  if (v14 == v11 && v13 == v15)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    long long v19 = xmmword_1A40FA210;
    goto LABEL_12;
  }
  char v17 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  long long v19 = xmmword_1A40FA210;
  if (v17)
  {
LABEL_12:
    char v20 = 1;
    goto LABEL_13;
  }
  char v20 = 2;
LABEL_13:
  *(_OWORD *)a2 = v19;
  *(_DWORD *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 1;
  *(__n128 *)(a2 + 32) = v7;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  *(unsigned char *)(a2 + 64) = v20;
  *(unsigned char *)(a2 + 65) = 0;
  *(void *)(a2 + 72) = v4;
  return result;
}

float DetectRectanglesRequest.minimumAspectRatio.getter()
{
  return *(float *)v0;
}

void DetectRectanglesRequest.minimumAspectRatio.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*DetectRectanglesRequest.minimumAspectRatio.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

float DetectRectanglesRequest.maximumAspectRatio.getter()
{
  return *(float *)(v0 + 4);
}

void DetectRectanglesRequest.maximumAspectRatio.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*DetectRectanglesRequest.maximumAspectRatio.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

float DetectRectanglesRequest.quadratureToleranceDegrees.getter()
{
  return *(float *)(v0 + 8);
}

void DetectRectanglesRequest.quadratureToleranceDegrees.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*DetectRectanglesRequest.quadratureToleranceDegrees.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

float DetectRectanglesRequest.minimumSize.getter()
{
  return *(float *)(v0 + 12);
}

void DetectRectanglesRequest.minimumSize.setter(float a1)
{
  *(float *)(v1 + 12) = a1;
}

uint64_t (*DetectRectanglesRequest.minimumSize.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

float DetectRectanglesRequest.minimumConfidence.getter()
{
  return *(float *)(v0 + 16);
}

void DetectRectanglesRequest.minimumConfidence.setter(float a1)
{
  *(float *)(v1 + 16) = a1;
}

uint64_t (*DetectRectanglesRequest.minimumConfidence.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectRectanglesRequest.maximumObservations.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t DetectRectanglesRequest.maximumObservations.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*DetectRectanglesRequest.maximumObservations.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 DetectRectanglesRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 DetectRectanglesRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v3;
  return result;
}

uint64_t (*DetectRectanglesRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D8BC04()
{
  unint64_t v0 = sub_1A3D8C6C8();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for DetectRectanglesRequest, v0);
  qword_1E961D9B8 = result;
  return result;
}

uint64_t static DetectRectanglesRequest.supportedRevisions.getter()
{
  if (qword_1E961D9B0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void DetectRectanglesRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 120;
}

BOOL static DetectRectanglesRequest.Algorithm.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DetectRectanglesRequest.Algorithm.hash(into:)()
{
  return sub_1A4096F3C();
}

unint64_t sub_1A3D8BCEC()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1A3D8BD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3D8DFD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3D8BD54(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8C770();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8BD90(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8C770();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D8BDCC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8C818();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8BE08(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8C818();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D8BE44(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8C7C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8BE80(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8C7C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static DetectRectanglesRequest.Algorithm.allCases.getter()
{
  return &unk_1EF7494A0;
}

uint64_t DetectRectanglesRequest.Algorithm.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF098);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  long long v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF0A0);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  __n128 v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF0A8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8C770();
  sub_1A4096FEC();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3D8C7C4();
    uint64_t v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3D8C818();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t DetectRectanglesRequest.Algorithm.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectRectanglesRequest.Algorithm.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF0B0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF0B8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __n128 v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF0C0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8C770();
  uint64_t v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *char v22 = &type metadata for DetectRectanglesRequest.Algorithm;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3D8C7C4();
    long long v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3D8C818();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

void sub_1A3D8C60C(void *a1@<X8>)
{
  *a1 = &unk_1EF749558;
}

uint64_t sub_1A3D8C61C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DetectRectanglesRequest.Algorithm.init(from:)(a1, a2);
}

uint64_t sub_1A3D8C634(void *a1)
{
  return DetectRectanglesRequest.Algorithm.encode(to:)(a1);
}

void DetectRectanglesRequest.algorithm.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

unsigned char *DetectRectanglesRequest.algorithm.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 64) = *result;
  return result;
}

uint64_t (*DetectRectanglesRequest.algorithm.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void *DetectRectanglesRequest.supportedAlgorithms.getter()
{
  return &unk_1EF749268;
}

void DetectRectanglesRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 65);
}

unsigned char *DetectRectanglesRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 65) = *result;
  return result;
}

uint64_t (*DetectRectanglesRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D8C6C8()
{
  unint64_t result = qword_1E95EF088;
  if (!qword_1E95EF088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF088);
  }
  return result;
}

unint64_t sub_1A3D8C71C()
{
  unint64_t result = qword_1E95EF090;
  if (!qword_1E95EF090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF090);
  }
  return result;
}

unint64_t sub_1A3D8C770()
{
  unint64_t result = qword_1E961D9D8;
  if (!qword_1E961D9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961D9D8);
  }
  return result;
}

unint64_t sub_1A3D8C7C4()
{
  unint64_t result = qword_1E961D9E0;
  if (!qword_1E961D9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961D9E0);
  }
  return result;
}

unint64_t sub_1A3D8C818()
{
  unint64_t result = qword_1E961D9E8[0];
  if (!qword_1E961D9E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961D9E8);
  }
  return result;
}

int *sub_1A3D8C86C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF138);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(1, 0, 0);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(1, 0, 0);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(1, 0, 0);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for DetectRectanglesRequest.Revision, v0 + 32);
  qword_1E9643D58 = v0;
  return result;
}

uint64_t DetectRectanglesRequest.hash(into:)(long long *a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  sub_1A4096F5C();
  sub_1A4096F5C();
  sub_1A4096F5C();
  sub_1A4096F5C();
  sub_1A4096F5C();
  sub_1A4096F3C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  if (v3 != 2) {
    sub_1A4096F3C();
  }
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t DetectRectanglesRequest.hashValue.getter()
{
  int v1 = *(_DWORD *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 64);
  char v4 = *(unsigned char *)(v0 + 65);
  uint64_t v5 = *(void *)(v0 + 72);
  *(_OWORD *)&v8[9] = *(_OWORD *)v0;
  int v9 = v1;
  uint64_t v10 = v2;
  long long v6 = *(_OWORD *)(v0 + 48);
  long long v11 = *(_OWORD *)(v0 + 32);
  long long v12 = v6;
  char v13 = v3;
  char v14 = v4;
  uint64_t v15 = v5;
  sub_1A4096F2C();
  DetectRectanglesRequest.hash(into:)((long long *)v8);
  return sub_1A4096F7C();
}

__n128 sub_1A3D8CB04@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1A3D8CB10(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v3;
  return result;
}

uint64_t sub_1A3D8CB1C(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8C71C();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D8CB58@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3D8C6C8();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D8CBAC(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3D8C6C8();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D8CC00(_WORD *a1@<X8>)
{
  *a1 = 120;
}

void sub_1A3D8CC0C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 65);
}

unsigned char *sub_1A3D8CC18(unsigned char *result)
{
  *(unsigned char *)(v1 + 65) = *result;
  return result;
}

uint64_t (*sub_1A3D8CC24())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D8CC44(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8C6C8();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D8CC80()
{
  int v1 = *(_DWORD *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 64);
  char v4 = *(unsigned char *)(v0 + 65);
  uint64_t v5 = *(void *)(v0 + 72);
  *(_OWORD *)&v8[9] = *(_OWORD *)v0;
  int v9 = v1;
  uint64_t v10 = v2;
  long long v6 = *(_OWORD *)(v0 + 48);
  long long v11 = *(_OWORD *)(v0 + 32);
  long long v12 = v6;
  char v13 = v3;
  char v14 = v4;
  uint64_t v15 = v5;
  sub_1A4096F2C();
  DetectRectanglesRequest.hash(into:)((long long *)v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D8CD00()
{
  int v1 = *(_DWORD *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 64);
  char v4 = *(unsigned char *)(v0 + 65);
  uint64_t v5 = *(void *)(v0 + 72);
  *(_OWORD *)&v8[9] = *(_OWORD *)v0;
  int v9 = v1;
  uint64_t v10 = v2;
  long long v6 = *(_OWORD *)(v0 + 48);
  long long v11 = *(_OWORD *)(v0 + 32);
  long long v12 = v6;
  char v13 = v3;
  char v14 = v4;
  uint64_t v15 = v5;
  sub_1A4096F2C();
  DetectRectanglesRequest.hash(into:)((long long *)v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D8CD7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D8CD84(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*sub_1A3D8CDB0())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D8CDD0()
{
  if (qword_1E961D9C0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D8CE2C()
{
  return sub_1A409617C();
}

uint64_t sub_1A3D8CE54(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA47C();

  return sub_1A3E2C684(a1, a2);
}

void sub_1A3D8CEA0(uint64_t a1, uint64_t a2)
{
  int v7 = *v2;
  int v6 = v2[1];
  int v9 = v2[2];
  int v8 = v2[3];
  int v10 = v2[4];
  uint64_t v11 = *((void *)v2 + 3);
  int v12 = *((unsigned __int8 *)v2 + 64);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3D8D4F4();
  if (objc_msgSend(ObjCClassFromMetadata, sel_isSubclassOfClass_, swift_getObjCClassFromMetadata()))
  {
    uint64_t v59 = a2;
    uint64_t v14 = sub_1A409617C();
    if (v12 == 2)
    {
LABEL_25:
      __break(1u);
      return;
    }
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    uint64_t v18 = 1;
    if (v12) {
      uint64_t v18 = 2;
    }
    uint64_t v62 = MEMORY[0x1E4FBB550];
    v61[0] = v18;
    uint64_t v19 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
    uint64_t v20 = (void (*)(unsigned char *, void))v19(v60);
    sub_1A3C8BC40((uint64_t)v61, v16, v17);
    v20(v60, 0);
    uint64_t v21 = sub_1A409617C();
    uint64_t v23 = v22;
    uint64_t v24 = MEMORY[0x1E4FBB470];
    uint64_t v62 = MEMORY[0x1E4FBB470];
    LODWORD(v61[0]) = v10;
    uint64_t v25 = (void (*)(unsigned char *, void))v19(v60);
    sub_1A3C8BC40((uint64_t)v61, v21, v23);
    v25(v60, 0);
    uint64_t v26 = sub_1A409617C();
    uint64_t v28 = v27;
    uint64_t v62 = MEMORY[0x1E4FBB390];
    LOBYTE(v61[0]) = 0;
    uint64_t v29 = (void (*)(unsigned char *, void))v19(v60);
    sub_1A3C8BC40((uint64_t)v61, v26, v28);
    v29(v60, 0);
    uint64_t v30 = sub_1A409617C();
    uint64_t v32 = v31;
    uint64_t v62 = v24;
    LODWORD(v61[0]) = v7;
    char v33 = (void (*)(unsigned char *, void))v19(v60);
    sub_1A3C8BC40((uint64_t)v61, v30, v32);
    v33(v60, 0);
    uint64_t v34 = sub_1A409617C();
    uint64_t v36 = v35;
    uint64_t v62 = v24;
    LODWORD(v61[0]) = v6;
    char v37 = (void (*)(unsigned char *, void))v19(v60);
    sub_1A3C8BC40((uint64_t)v61, v34, v36);
    v37(v60, 0);
    uint64_t v38 = sub_1A409617C();
    uint64_t v40 = v39;
    uint64_t v62 = v24;
    LODWORD(v61[0]) = v9;
    uint64_t v41 = (void (*)(unsigned char *, void))v19(v60);
    sub_1A3C8BC40((uint64_t)v61, v38, v40);
    v41(v60, 0);
    uint64_t v42 = sub_1A409617C();
    uint64_t v44 = v43;
    uint64_t v62 = v24;
    LODWORD(v61[0]) = v8;
    uint64_t v45 = (uint64_t (*)(unsigned char *, void))v19(v60);
    sub_1A3C8BC40((uint64_t)v61, v42, v44);
    uint64_t v46 = v45(v60, 0);
    uint64_t v47 = v11;
    if (v11 != 0x7FFFFFFFFFFFFFFFLL && v11) {
      goto LABEL_19;
    }
    uint64_t v48 = (void *)(*(uint64_t (**)(uint64_t))(**(void **)(v59 + 16) + 120))(v46);
    if (v3) {
      return;
    }
    char v49 = v48;
    id v50 = objc_msgSend(v48, sel_width);
    id v51 = objc_msgSend(v49, sel_height);

    if ((uint64_t)v51 >= (uint64_t)v50) {
      uint64_t v52 = (uint64_t)v50;
    }
    else {
      uint64_t v52 = (uint64_t)v51;
    }
    if ((uint64_t)v51 <= (uint64_t)v50) {
      uint64_t v53 = (uint64_t)v50;
    }
    else {
      uint64_t v53 = (uint64_t)v51;
    }
    double v54 = ceil((double)v53 * 256.0 / (double)v52);
    if ((~*(void *)&v54 & 0x7FF0000000000000) != 0)
    {
      if (v54 > -9.22337204e18)
      {
        if (v54 < 9.22337204e18)
        {
          if ((unint64_t)((uint64_t)v54 - 0x80000000000000) >> 56 == 255)
          {
            uint64_t v47 = 16 * (uint64_t)v54;
LABEL_19:
            uint64_t v55 = sub_1A409617C();
            uint64_t v57 = v56;
            uint64_t v62 = MEMORY[0x1E4FBB550];
            v61[0] = v47;
            uint64_t v58 = (void (*)(unsigned char *, void))v19(v60);
            sub_1A3C8BC40((uint64_t)v61, v55, v57);
            v58(v60, 0);
            return;
          }
          goto LABEL_24;
        }
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_23;
  }
}

void sub_1A3D8D3B8(uint64_t a1, uint64_t a2)
{
}

uint64_t _s6Vision23DetectRectanglesRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)a1, *(float32x4_t *)a2)), 0xFuLL))) & 1) == 0) {
    return 0;
  }
  if (*(float *)(a1 + 16) != *(float *)(a2 + 16)) {
    return 0;
  }
  if (*(void *)(a1 + 24) != *(void *)(a2 + 24)) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 65);
  uint64_t v4 = *(void *)(a1 + 72);
  int v5 = *(unsigned __int8 *)(a2 + 64);
  char v6 = *(unsigned char *)(a2 + 65);
  uint64_t v7 = *(void *)(a2 + 72);
  CGSize v8 = *(CGSize *)(a1 + 48);
  v12.origin = *(CGPoint *)(a1 + 32);
  v12.size = v8;
  CGSize v9 = *(CGSize *)(a2 + 48);
  v11.origin = *(CGPoint *)(a2 + 32);
  v11.size = v9;
  if (!static NormalizedRect.== infix(_:_:)(&v12, &v11)) {
    return 0;
  }
  if (v2 == 2)
  {
    if (v5 != 2) {
      return 0;
    }
  }
  else if (v5 == 2 || ((v5 ^ v2) & 1) != 0)
  {
    return 0;
  }
  LOBYTE(v12.origin.x) = v3;
  LOBYTE(v11.origin.x) = v6;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v12, (unsigned __int8 *)&v11)) {
    return 0;
  }

  return sub_1A3C8FF4C(v4, v7);
}

unint64_t sub_1A3D8D4F4()
{
  unint64_t result = qword_1E95EF0C8;
  if (!qword_1E95EF0C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EF0C8);
  }
  return result;
}

unint64_t sub_1A3D8D538()
{
  unint64_t result = qword_1E95EF0D0;
  if (!qword_1E95EF0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF0D0);
  }
  return result;
}

unint64_t sub_1A3D8D590()
{
  unint64_t result = qword_1E95EF0D8;
  if (!qword_1E95EF0D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EF0E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF0D8);
  }
  return result;
}

unint64_t sub_1A3D8D5F0()
{
  unint64_t result = qword_1E95EF0E8;
  if (!qword_1E95EF0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF0E8);
  }
  return result;
}

unint64_t sub_1A3D8D644(uint64_t a1)
{
  unint64_t result = sub_1A3CCA47C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D8D66C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF1EC();
  unint64_t result = sub_1A3D8D69C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D8D69C()
{
  unint64_t result = qword_1E95EF120;
  if (!qword_1E95EF120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF120);
  }
  return result;
}

unint64_t sub_1A3D8D6F4()
{
  unint64_t result = qword_1E95EF128;
  if (!qword_1E95EF128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF128);
  }
  return result;
}

unint64_t sub_1A3D8D74C()
{
  unint64_t result = qword_1E95EF130;
  if (!qword_1E95EF130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF130);
  }
  return result;
}

uint64_t sub_1A3D8D7A0()
{
  return sub_1A3D8E0BC(&qword_1E95EC538, (void (*)(uint64_t))type metadata accessor for RectangleObservation);
}

unint64_t sub_1A3D8D7E8(uint64_t a1)
{
  unint64_t result = sub_1A3D8C6C8();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t initializeWithCopy for DetectRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectRectanglesRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DetectRectanglesRequest()
{
  return &type metadata for DetectRectanglesRequest;
}

ValueMetadata *type metadata accessor for DetectRectanglesRequest.Revision()
{
  return &type metadata for DetectRectanglesRequest.Revision;
}

ValueMetadata *type metadata accessor for DetectRectanglesRequest.Algorithm()
{
  return &type metadata for DetectRectanglesRequest.Algorithm;
}

unsigned char *_s6Vision23DetectRectanglesRequestV9AlgorithmOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D8DA74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectRectanglesRequest.Algorithm.CodingKeys()
{
  return &type metadata for DetectRectanglesRequest.Algorithm.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectRectanglesRequest.Algorithm.FastFourierTransformCodingKeys()
{
  return &type metadata for DetectRectanglesRequest.Algorithm.FastFourierTransformCodingKeys;
}

ValueMetadata *type metadata accessor for DetectRectanglesRequest.Algorithm.QuadrilateralDetectionCodingKeys()
{
  return &type metadata for DetectRectanglesRequest.Algorithm.QuadrilateralDetectionCodingKeys;
}

unsigned char *_s6Vision23DetectRectanglesRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D8DB68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectRectanglesRequest.Revision.CodingKeys()
{
  return &type metadata for DetectRectanglesRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectRectanglesRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for DetectRectanglesRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3D8DBB4()
{
  unint64_t result = qword_1E961E470[0];
  if (!qword_1E961E470[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961E470);
  }
  return result;
}

unint64_t sub_1A3D8DC0C()
{
  unint64_t result = qword_1E961E880[0];
  if (!qword_1E961E880[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961E880);
  }
  return result;
}

unint64_t sub_1A3D8DC64()
{
  unint64_t result = qword_1E961E990;
  if (!qword_1E961E990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961E990);
  }
  return result;
}

unint64_t sub_1A3D8DCBC()
{
  unint64_t result = qword_1E961E998[0];
  if (!qword_1E961E998[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961E998);
  }
  return result;
}

unint64_t sub_1A3D8DD14()
{
  unint64_t result = qword_1E961EA20;
  if (!qword_1E961EA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961EA20);
  }
  return result;
}

unint64_t sub_1A3D8DD6C()
{
  unint64_t result = qword_1E961EA28[0];
  if (!qword_1E961EA28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961EA28);
  }
  return result;
}

unint64_t sub_1A3D8DDC4()
{
  unint64_t result = qword_1E961EAB0;
  if (!qword_1E961EAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961EAB0);
  }
  return result;
}

unint64_t sub_1A3D8DE1C()
{
  unint64_t result = qword_1E961EAB8[0];
  if (!qword_1E961EAB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961EAB8);
  }
  return result;
}

unint64_t sub_1A3D8DE74()
{
  unint64_t result = qword_1E961EB40;
  if (!qword_1E961EB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961EB40);
  }
  return result;
}

unint64_t sub_1A3D8DECC()
{
  unint64_t result = qword_1E961EB48[0];
  if (!qword_1E961EB48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961EB48);
  }
  return result;
}

unint64_t sub_1A3D8DF24()
{
  unint64_t result = qword_1E961EBD0;
  if (!qword_1E961EBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961EBD0);
  }
  return result;
}

unint64_t sub_1A3D8DF7C()
{
  unint64_t result = qword_1E961EBD8[0];
  if (!qword_1E961EBD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961EBD8);
  }
  return result;
}

uint64_t sub_1A3D8DFD0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001A40B5EE0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A40B5F00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A3D8E0BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1A3D8E108()
{
  return &unk_1A40FAA00;
}

void *sub_1A3D8E114()
{
  return &unk_1A40FAA04;
}

void *sub_1A3D8E120()
{
  return &unk_1A40FAA08;
}

void *sub_1A3D8E12C()
{
  return &unk_1A40FAA0C;
}

ValueMetadata *type metadata accessor for E5RTComputeDeviceType()
{
  return &type metadata for E5RTComputeDeviceType;
}

uint64_t static RecognizeTextRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static RecognizeTextRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t RecognizeTextRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D8E180(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8E440();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8E1BC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8E440();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D8E1F8(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8E494();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8E234(uint64_t a1)
{
  unint64_t v2 = sub_1A3D8E494();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecognizeTextRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF140);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF148);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  CGSize v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8E440();
  sub_1A4096FEC();
  sub_1A3D8E494();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3D8E440()
{
  unint64_t result = qword_1E961ECF8;
  if (!qword_1E961ECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961ECF8);
  }
  return result;
}

unint64_t sub_1A3D8E494()
{
  unint64_t result = qword_1E961ED00;
  if (!qword_1E961ED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961ED00);
  }
  return result;
}

uint64_t RecognizeTextRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t RecognizeTextRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF150);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF158);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8E440();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3D8E494();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      char v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *char v13 = &type metadata for RecognizeTextRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3D8E814(void *a1)
{
  return RecognizeTextRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3D8E82C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF140);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF148);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D8E440();
  sub_1A4096FEC();
  sub_1A3D8E494();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double RecognizeTextRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF160);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF168);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF170);
  MEMORY[0x1F4188790](v10 - 8);
  CGRect v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v13 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF178);
  sub_1A4095D0C();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1A40E7700;
  sub_1A4095C8C();
  uint64_t v15 = sub_1A4095C9C();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 0, 1, v15);
  uint64_t v16 = sub_1A4095CCC();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  sub_1A4095CAC();
  uint64_t v17 = sub_1A4095CBC();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 0, 1, v17);
  sub_1A4095CEC();
  static NormalizedRect.fullImage.getter(v25);
  unint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v19 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v13 == 1)
  {
    unint64_t v20 = sub_1A3D902B8();
    sub_1A3E2C988((uint64_t)&type metadata for RecognizeTextRequest, v20, v21);
  }
  a2->n128_u32[0] = 1023410176;
  a2->n128_u16[2] = 0;
  a2->n128_u64[1] = v14;
  a2[1].n128_u8[0] = 1;
  a2[1].n128_u64[1] = v18;
  double result = v25[0].n128_f64[0];
  __n128 v23 = v25[1];
  a2[2] = v25[0];
  a2[3] = v23;
  a2[4].n128_u16[0] = 0;
  a2[4].n128_u64[1] = v19;
  return result;
}

BOOL static RecognizeTextRequest.RecognitionLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RecognizeTextRequest.RecognitionLevel.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3D8ED48(uint64_t a1)
{
  unint64_t v2 = sub_1A3D903B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8ED84(uint64_t a1)
{
  unint64_t v2 = sub_1A3D903B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D8EDC0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D9030C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8EDFC(uint64_t a1)
{
  unint64_t v2 = sub_1A3D9030C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3D8EE38(uint64_t a1)
{
  unint64_t v2 = sub_1A3D90360();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3D8EE74(uint64_t a1)
{
  unint64_t v2 = sub_1A3D90360();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static RecognizeTextRequest.RecognitionLevel.allCases.getter()
{
  return &unk_1EF747BA8;
}

uint64_t RecognizeTextRequest.RecognitionLevel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF188);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF190);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF198);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D9030C();
  sub_1A4096FEC();
  int v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3D90360();
    uint64_t v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3D903B4();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t RecognizeTextRequest.RecognitionLevel.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t RecognizeTextRequest.RecognitionLevel.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF1A0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF1A8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF1B0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3D9030C();
  uint64_t v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *char v22 = &type metadata for RecognizeTextRequest.RecognitionLevel;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3D90360();
    unint64_t v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3D903B4();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

void sub_1A3D8F600(void *a1@<X8>)
{
  *a1 = &unk_1EF747C60;
}

uint64_t sub_1A3D8F610@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return RecognizeTextRequest.RecognitionLevel.init(from:)(a1, a2);
}

uint64_t sub_1A3D8F628(void *a1)
{
  return RecognizeTextRequest.RecognitionLevel.encode(to:)(a1);
}

float RecognizeTextRequest.minimumTextHeightFraction.getter()
{
  return *(float *)v0;
}

void RecognizeTextRequest.minimumTextHeightFraction.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*RecognizeTextRequest.minimumTextHeightFraction.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void RecognizeTextRequest.recognitionLevel.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 4);
}

unsigned char *RecognizeTextRequest.recognitionLevel.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*RecognizeTextRequest.recognitionLevel.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t RecognizeTextRequest.automaticallyDetectsLanguage.getter()
{
  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t RecognizeTextRequest.automaticallyDetectsLanguage.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result;
  return result;
}

uint64_t (*RecognizeTextRequest.automaticallyDetectsLanguage.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t RecognizeTextRequest.recognitionLanguages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecognizeTextRequest.recognitionLanguages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*RecognizeTextRequest.recognitionLanguages.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t RecognizeTextRequest.usesLanguageCorrection.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t RecognizeTextRequest.usesLanguageCorrection.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*RecognizeTextRequest.usesLanguageCorrection.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t RecognizeTextRequest.customWords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecognizeTextRequest.customWords.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*RecognizeTextRequest.customWords.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void *RecognizeTextRequest.supportedRecognitionLanguages.getter()
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1A4095D0C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v29[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v3) = *(unsigned char *)(v0 + 4);
  char v5 = *(unsigned char *)(v0 + 5);
  uint64_t v6 = *(void **)(v0 + 8);
  char v7 = *(unsigned char *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + 24);
  char v9 = *(unsigned char *)(v0 + 64);
  char v10 = *(unsigned char *)(v0 + 65);
  uint64_t v11 = *(void *)(v0 + 72);
  LODWORD(v29[0]) = *(_DWORD *)v0;
  BYTE4(v29[0]) = v3;
  BYTE5(v29[0]) = v5;
  v29[1] = v6;
  char v30 = v7;
  uint64_t v31 = v8;
  long long v12 = *(_OWORD *)(v0 + 48);
  long long v32 = *(_OWORD *)(v0 + 32);
  long long v33 = v12;
  char v34 = v9;
  char v35 = v10;
  uint64_t v36 = v11;
  unint64_t v13 = sub_1A3D8FAB4(0);
  uint64_t v14 = self;
  sub_1A3C8F944(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  v29[0] = 0;
  id v16 = objc_msgSend(v14, sel_supportedLanguagesForProcessOptions_error_, v15, v29);

  id v17 = v29[0];
  if (!v16)
  {
    id v25 = v29[0];
    uint64_t v26 = (void *)sub_1A4095AEC();

    swift_willThrow();
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = sub_1A409630C();
  id v19 = v17;

  int64_t v20 = *(void *)(v18 + 16);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    return (void *)MEMORY[0x1E4FBC860];
  }
  v29[0] = (id)MEMORY[0x1E4FBC860];
  sub_1A3D90D14(0, v20, 0);
  char v21 = v29[0];
  uint64_t v22 = v18 + 40;
  do
  {
    swift_bridgeObjectRetain();
    sub_1A4095CDC();
    v29[0] = v21;
    unint64_t v24 = v21[2];
    unint64_t v23 = v21[3];
    if (v24 >= v23 >> 1)
    {
      sub_1A3D90D14(v23 > 1, v24 + 1, 1);
      char v21 = v29[0];
    }
    v22 += 16;
    void v21[2] = v24 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v24, v4, v1);
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  return v21;
}

unint64_t sub_1A3D8FAB4(uint64_t a1)
{
  uint64_t v90 = sub_1A4095D0C();
  uint64_t v3 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  char v5 = (char *)v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(unsigned char *)(v1 + 4);
  int v7 = *(unsigned __int8 *)(v1 + 5);
  uint64_t v8 = *(void *)(v1 + 8);
  int v9 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  int v11 = *(unsigned __int8 *)(v1 + 64);
  LOBYTE(v4) = *(unsigned char *)(v1 + 65);
  uint64_t v12 = *(void *)(v1 + 72);
  LODWORD(v93) = *(_DWORD *)v1;
  BYTE4(v93) = v6;
  int v85 = v7;
  int v86 = v9;
  BYTE5(v93) = v7;
  *((void *)&v93 + 1) = v8;
  char v94 = v9;
  uint64_t v87 = v10;
  uint64_t v95 = v10;
  long long v13 = *(_OWORD *)(v1 + 48);
  long long v96 = *(_OWORD *)(v1 + 32);
  long long v97 = v13;
  char v98 = v11;
  char v99 = v4;
  uint64_t v100 = v12;
  unint64_t v14 = sub_1A3D90D34();
  unint64_t v15 = sub_1A3D45608(a1, (uint64_t)&type metadata for RecognizeTextRequest, v14);
  uint64_t v16 = sub_1A409617C();
  uint64_t v18 = v17;
  uint64_t v19 = MEMORY[0x1E4FBB390];
  uint64_t v95 = MEMORY[0x1E4FBB390];
  LOBYTE(v93) = v6;
  sub_1A3C856F4(&v93, v92);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v15;
  sub_1A3C8D048(v92, v16, v18, isUniquelyReferenced_nonNull_native);
  unint64_t v21 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1A409617C();
  uint64_t v24 = v23;
  uint64_t v95 = MEMORY[0x1E4FBB550];
  *(void *)&long long v93 = 10;
  sub_1A3C856F4(&v93, v92);
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v21;
  uint64_t v26 = v8;
  sub_1A3C8D048(v92, v22, v24, v25);
  unint64_t v27 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v83 = sub_1A409617C();
  uint64_t v84 = v28;
  int64_t v29 = *(void *)(v8 + 16);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  if (v29)
  {
    v81[0] = v27;
    int v82 = v11;
    *(void *)&long long v93 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1A3D4F15C(0, v29, 0);
    long long v32 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v31 = v3 + 16;
    uint64_t v89 = v32;
    unint64_t v33 = (*(unsigned __int8 *)(v31 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 64);
    v81[1] = v26;
    uint64_t v34 = v26 + v33;
    uint64_t v88 = *(void *)(v31 + 56);
    do
    {
      uint64_t v35 = v90;
      v89(v5, v34, v90);
      uint64_t v36 = sub_1A4095CFC();
      uint64_t v38 = v37;
      (*(void (**)(char *, uint64_t))(v31 - 8))(v5, v35);
      uint64_t v30 = v93;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A3D4F15C(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v30 = v93;
      }
      unint64_t v40 = *(void *)(v30 + 16);
      unint64_t v39 = *(void *)(v30 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1A3D4F15C((char *)(v39 > 1), v40 + 1, 1);
        uint64_t v30 = v93;
      }
      *(void *)(v30 + 16) = v40 + 1;
      uint64_t v41 = v30 + 16 * v40;
      *(void *)(v41 + 32) = v36;
      *(void *)(v41 + 40) = v38;
      v34 += v88;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    LOBYTE(v11) = v82;
    uint64_t v19 = MEMORY[0x1E4FBB390];
    unint64_t v27 = v81[0];
  }
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE408);
  uint64_t v95 = v42;
  *(void *)&long long v93 = v30;
  sub_1A3C856F4(&v93, v92);
  char v43 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v27;
  sub_1A3C8D048(v92, v83, v84, v43);
  unint64_t v44 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_1A409617C();
  uint64_t v47 = v46;
  uint64_t v95 = MEMORY[0x1E4FBB550];
  *(void *)&long long v93 = 3;
  sub_1A3C856F4(&v93, v92);
  char v48 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v44;
  sub_1A3C8D048(v92, v45, v47, v48);
  unint64_t v49 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_1A409617C();
  uint64_t v52 = v51;
  uint64_t v95 = v19;
  LOBYTE(v93) = v85;
  sub_1A3C856F4(&v93, v92);
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v49;
  sub_1A3C8D048(v92, v50, v52, v53);
  unint64_t v54 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = sub_1A409617C();
  uint64_t v57 = v56;
  uint64_t v95 = v19;
  LOBYTE(v93) = v86 ^ 1;
  sub_1A3C856F4(&v93, v92);
  char v58 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v54;
  sub_1A3C8D048(v92, v55, v57, v58);
  unint64_t v59 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_1A409617C();
  uint64_t v62 = v61;
  uint64_t v95 = v42;
  *(void *)&long long v93 = v87;
  sub_1A3C856F4(&v93, v92);
  swift_bridgeObjectRetain();
  char v63 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v59;
  sub_1A3C8D048(v92, v60, v62, v63);
  unint64_t v64 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v65 = sub_1A409617C();
  uint64_t v67 = v66;
  uint64_t v95 = v19;
  LOBYTE(v93) = 1;
  sub_1A3C856F4(&v93, v92);
  char v68 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v64;
  sub_1A3C8D048(v92, v65, v67, v68);
  unint64_t v69 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v70 = sub_1A409617C();
  uint64_t v72 = v71;
  uint64_t v95 = v19;
  LOBYTE(v93) = 1;
  sub_1A3C856F4(&v93, v92);
  char v73 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v69;
  sub_1A3C8D048(v92, v70, v72, v73);
  unint64_t v74 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v75 = sub_1A409617C();
  uint64_t v77 = v76;
  uint64_t v95 = v19;
  LOBYTE(v93) = v11;
  sub_1A3C856F4(&v93, v92);
  char v78 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v91 = v74;
  sub_1A3C8D048(v92, v75, v77, v78);
  unint64_t v79 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v79;
}

__n128 RecognizeTextRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 RecognizeTextRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v3;
  return result;
}

uint64_t (*RecognizeTextRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3D901AC()
{
  unint64_t v0 = sub_1A3D902B8();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for RecognizeTextRequest, v0);
  qword_1E961ECE8 = result;
  return result;
}

uint64_t static RecognizeTextRequest.supportedRevisions.getter()
{
  if (qword_1E961ECE0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void RecognizeTextRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 200;
}

uint64_t RecognizeTextRequest.keepResourcesLoaded.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t RecognizeTextRequest.keepResourcesLoaded.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t (*RecognizeTextRequest.keepResourcesLoaded.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void RecognizeTextRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 65);
}

unsigned char *RecognizeTextRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 65) = *result;
  return result;
}

uint64_t (*RecognizeTextRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3D902B8()
{
  unint64_t result = qword_1E95EF180;
  if (!qword_1E95EF180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF180);
  }
  return result;
}

unint64_t sub_1A3D9030C()
{
  unint64_t result = qword_1E961ED08;
  if (!qword_1E961ED08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961ED08);
  }
  return result;
}

unint64_t sub_1A3D90360()
{
  unint64_t result = qword_1E961ED10;
  if (!qword_1E961ED10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961ED10);
  }
  return result;
}

unint64_t sub_1A3D903B4()
{
  unint64_t result = qword_1E961ED18[0];
  if (!qword_1E961ED18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961ED18);
  }
  return result;
}

int *sub_1A3D90408()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF258);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(6, 0, 9);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(6, 0, 9);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(6, 0, 9);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for RecognizeTextRequest.Revision, v0 + 32);
  qword_1E9643D60 = v0;
  return result;
}

uint64_t RecognizeTextRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[9];
  sub_1A4096F5C();
  sub_1A4096F3C();
  sub_1A4096F4C();
  swift_bridgeObjectRetain();
  sub_1A3D90F5C((uint64_t)a1, v3);
  swift_bridgeObjectRelease();
  sub_1A4096F4C();
  sub_1A4096F3C();
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A40961CC();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D90654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095D0C();
  MEMORY[0x1F4188790](v4);
  __n128 v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v24 = 1;
    }
    else
    {
      uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
      unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v13 = v6 + 16;
      uint64_t v32 = v7;
      unint64_t v33 = v14;
      uint64_t v15 = (v12 + 32) & ~v12;
      uint64_t v16 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v30 = v16;
      uint64_t v31 = (void (**)(uint64_t, uint64_t))(v13 - 8);
      uint64_t v17 = v11 - 1;
      uint64_t v18 = v7;
      do
      {
        uint64_t v19 = a1;
        int64_t v20 = v10;
        unint64_t v21 = v10;
        uint64_t v22 = v33;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v33)(v20, a1 + v15, v4, v8);
        uint64_t v23 = a2;
        v22(v18, a2 + v15, v4);
        uint64_t v10 = v21;
        sub_1A3D9216C(&qword_1E95EF240, MEMORY[0x1E4F27A38]);
        char v24 = sub_1A409612C();
        char v25 = *v31;
        (*v31)(v18, v4);
        v25((uint64_t)v21, v4);
        BOOL v27 = v17-- != 0;
        if ((v24 & 1) == 0) {
          break;
        }
        v15 += v30;
        a2 = v23;
        a1 = v19;
      }
      while (v27);
    }
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_1A3D90874(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1A4096E5C(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1A4096E5C() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t RecognizeTextRequest.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 4);
  char v2 = *((unsigned char *)v0 + 5);
  uint64_t v3 = *((void *)v0 + 1);
  char v4 = *((unsigned char *)v0 + 16);
  uint64_t v5 = *((void *)v0 + 3);
  char v6 = *((unsigned char *)v0 + 64);
  char v7 = *((unsigned char *)v0 + 65);
  uint64_t v8 = *((void *)v0 + 9);
  int v12 = *v0;
  char v13 = v1;
  char v14 = v2;
  uint64_t v15 = v3;
  char v16 = v4;
  uint64_t v17 = v5;
  long long v9 = *((_OWORD *)v0 + 3);
  long long v18 = *((_OWORD *)v0 + 2);
  long long v19 = v9;
  char v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  sub_1A4096F2C();
  RecognizeTextRequest.hash(into:)(v11);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D909D0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D90D34();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3D90A0C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3D902B8();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3D90A60(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3D902B8();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3D90AB4(_WORD *a1@<X8>)
{
  *a1 = 200;
}

uint64_t sub_1A3D90AC0(uint64_t a1)
{
  unint64_t v2 = sub_1A3D902B8();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3D90AFC()
{
  char v1 = *((unsigned char *)v0 + 4);
  char v2 = *((unsigned char *)v0 + 5);
  uint64_t v3 = *((void *)v0 + 1);
  char v4 = *((unsigned char *)v0 + 16);
  uint64_t v5 = *((void *)v0 + 3);
  char v6 = *((unsigned char *)v0 + 64);
  char v7 = *((unsigned char *)v0 + 65);
  uint64_t v8 = *((void *)v0 + 9);
  int v12 = *v0;
  char v13 = v1;
  char v14 = v2;
  uint64_t v15 = v3;
  char v16 = v4;
  uint64_t v17 = v5;
  long long v9 = *((_OWORD *)v0 + 3);
  long long v18 = *((_OWORD *)v0 + 2);
  long long v19 = v9;
  char v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  sub_1A4096F2C();
  RecognizeTextRequest.hash(into:)(v11);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D90B94()
{
  char v1 = *((unsigned char *)v0 + 4);
  char v2 = *((unsigned char *)v0 + 5);
  uint64_t v3 = *((void *)v0 + 1);
  char v4 = *((unsigned char *)v0 + 16);
  uint64_t v5 = *((void *)v0 + 3);
  char v6 = *((unsigned char *)v0 + 64);
  char v7 = *((unsigned char *)v0 + 65);
  uint64_t v8 = *((void *)v0 + 9);
  int v12 = *v0;
  char v13 = v1;
  char v14 = v2;
  uint64_t v15 = v3;
  char v16 = v4;
  uint64_t v17 = v5;
  long long v9 = *((_OWORD *)v0 + 3);
  long long v18 = *((_OWORD *)v0 + 2);
  long long v19 = v9;
  char v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  sub_1A4096F2C();
  RecognizeTextRequest.hash(into:)(v11);
  return sub_1A4096F7C();
}

uint64_t sub_1A3D90C28()
{
  if (qword_1E961ECF0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3D90C84()
{
  return sub_1A409617C();
}

uint64_t sub_1A3D90CAC(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA138();

  return sub_1A3E2C684(a1, a2);
}

void sub_1A3D90CFC(uint64_t a1)
{
}

size_t sub_1A3D90D14(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1A3D90D88(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

unint64_t sub_1A3D90D34()
{
  unint64_t result = qword_1E95EF1B8;
  if (!qword_1E95EF1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF1B8);
  }
  return result;
}

size_t sub_1A3D90D88(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    char v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF178);
  uint64_t v10 = *(void *)(sub_1A4095D0C() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  char v13 = (void *)swift_allocObject();
  unint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  __n128 v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_1A4095D0C() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_1A3D90F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095D0C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF248);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v27 = a1;
  sub_1A4096F3C();
  if (v11)
  {
    char v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    unint64_t v15 = v12 + 40;
    uint64_t v16 = v12;
    uint64_t v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    char v24 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    char v25 = v13;
    long long v18 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v26 = v16;
    uint64_t v19 = *(void *)(v16 + 56);
    unint64_t v22 = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v19;
    while (1)
    {
      v25(v10, v14, v4);
      char v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v10, 0, 1, v4);
      uint64_t result = (*v17)(v10, 1, v4);
      if (result == 1) {
        break;
      }
      (*v24)(v7, v10, v4);
      sub_1A3D9216C(&qword_1E95EF250, MEMORY[0x1E4F27A38]);
      sub_1A40960DC();
      (*v18)(v7, v4);
      v14 += v23;
      if (!--v11) {
        return v20(v10, 1, 1, v4);
      }
    }
  }
  else
  {
    char v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v20(v10, 1, 1, v4);
  }
  return result;
}

uint64_t _s6Vision20RecognizeTextRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2) {
    return 0;
  }
  if ((*(unsigned __int8 *)(a1 + 4) ^ *(unsigned __int8 *)(a2 + 4))) {
    return 0;
  }
  if ((*(unsigned __int8 *)(a1 + 5) ^ *(unsigned __int8 *)(a2 + 5))) {
    return 0;
  }
  char v2 = *(void **)(a1 + 24);
  CGSize v15 = *(CGSize *)(a1 + 48);
  CGPoint v16 = *(CGPoint *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 65);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void **)(a2 + 24);
  CGSize v13 = *(CGSize *)(a2 + 48);
  CGPoint v14 = *(CGPoint *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 64);
  char v8 = *(unsigned char *)(a2 + 65);
  uint64_t v9 = *(void *)(a2 + 72);
  int v10 = *(unsigned __int8 *)(a2 + 16);
  int v11 = *(unsigned __int8 *)(a1 + 16);
  if ((sub_1A3D90654(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) == 0) {
    return 0;
  }
  if ((v10 ^ v11)) {
    return 0;
  }
  if ((sub_1A3D90874(v2, v6) & 1) == 0) {
    return 0;
  }
  v18.origin = v16;
  v18.size = v15;
  v17.origin = v14;
  v17.size = v13;
  if (!static NormalizedRect.== infix(_:_:)(&v18, &v17)) {
    return 0;
  }
  if ((v3 ^ v7)) {
    return 0;
  }
  LOBYTE(v18.origin.x) = v4;
  LOBYTE(v17.origin.x) = v8;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v18, (unsigned __int8 *)&v17)) {
    return 0;
  }

  return sub_1A3C8FF4C(v5, v9);
}

void sub_1A3D91330(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  int v3 = *v1;
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8C73C(0, &qword_1E95EF230);
  if (objc_msgSend(ObjCClassFromMetadata, sel_isSubclassOfClass_, swift_getObjCClassFromMetadata()))
  {
    id v5 = objc_msgSend(objc_allocWithZone((Class)VNRecognizeTextRequest), sel_init);
    v20[0] = 0;
    unsigned int v6 = objc_msgSend(v5, sel_setRevision_error_, 3, v20);
    id v7 = v20[0];
    if (v6)
    {
      uint64_t v8 = sub_1A409617C();
      uint64_t v10 = v9;
      uint64_t v21 = MEMORY[0x1E4FBB470];
      LODWORD(v20[0]) = v3;
      int v11 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
      id v12 = v7;
      CGSize v13 = (void (*)(unsigned char *, void))v11(v19);
      sub_1A3C8BC40((uint64_t)v20, v8, v10);
      v13(v19, 0);
      uint64_t v14 = sub_1A409617C();
      uint64_t v16 = v15;
      uint64_t v21 = sub_1A3C8C73C(0, &qword_1E95EF238);
      v20[0] = v5;
      id v5 = v5;
      CGRect v17 = (void (*)(unsigned char *, void))v11(v19);
      sub_1A3C8BC40((uint64_t)v20, v14, v16);
      v17(v19, 0);
    }
    else
    {
      id v18 = v20[0];
      sub_1A4095AEC();

      swift_willThrow();
    }
  }
}

unint64_t sub_1A3D9156C()
{
  unint64_t result = qword_1E95EF1C0;
  if (!qword_1E95EF1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF1C0);
  }
  return result;
}

unint64_t sub_1A3D915C4()
{
  unint64_t result = qword_1E95EF1C8;
  if (!qword_1E95EF1C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EF1D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF1C8);
  }
  return result;
}

unint64_t sub_1A3D91624()
{
  unint64_t result = qword_1E95EF1D8[0];
  if (!qword_1E95EF1D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95EF1D8);
  }
  return result;
}

unint64_t sub_1A3D91678(uint64_t a1)
{
  unint64_t result = sub_1A3CCA138();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3D916A0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCEFA0();
  unint64_t result = sub_1A3D916D0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3D916D0()
{
  unint64_t result = qword_1E95EF210;
  if (!qword_1E95EF210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF210);
  }
  return result;
}

unint64_t sub_1A3D91728()
{
  unint64_t result = qword_1E95EF218;
  if (!qword_1E95EF218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF218);
  }
  return result;
}

unint64_t sub_1A3D91780()
{
  unint64_t result = qword_1E95EF220;
  if (!qword_1E95EF220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF220);
  }
  return result;
}

uint64_t sub_1A3D917D4()
{
  return sub_1A3D9216C(&qword_1E95EF228, (void (*)(uint64_t))type metadata accessor for RecognizedTextObservation);
}

unint64_t sub_1A3D9181C(uint64_t a1)
{
  unint64_t result = sub_1A3D902B8();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for RecognizeTextRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RecognizeTextRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RecognizeTextRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RecognizeTextRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecognizeTextRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecognizeTextRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecognizeTextRequest()
{
  return &type metadata for RecognizeTextRequest;
}

ValueMetadata *type metadata accessor for RecognizeTextRequest.Revision()
{
  return &type metadata for RecognizeTextRequest.Revision;
}

ValueMetadata *type metadata accessor for RecognizeTextRequest.RecognitionLevel()
{
  return &type metadata for RecognizeTextRequest.RecognitionLevel;
}

unsigned char *_s6Vision20RecognizeTextRequestV16RecognitionLevelOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D91C10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecognizeTextRequest.RecognitionLevel.CodingKeys()
{
  return &type metadata for RecognizeTextRequest.RecognitionLevel.CodingKeys;
}

ValueMetadata *type metadata accessor for RecognizeTextRequest.RecognitionLevel.AccurateCodingKeys()
{
  return &type metadata for RecognizeTextRequest.RecognitionLevel.AccurateCodingKeys;
}

ValueMetadata *type metadata accessor for RecognizeTextRequest.RecognitionLevel.FastCodingKeys()
{
  return &type metadata for RecognizeTextRequest.RecognitionLevel.FastCodingKeys;
}

unsigned char *_s6Vision20RecognizeTextRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D91D04);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecognizeTextRequest.Revision.CodingKeys()
{
  return &type metadata for RecognizeTextRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for RecognizeTextRequest.Revision.Revision3CodingKeys()
{
  return &type metadata for RecognizeTextRequest.Revision.Revision3CodingKeys;
}

unint64_t sub_1A3D91D50()
{
  unint64_t result = qword_1E961F7A0[0];
  if (!qword_1E961F7A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961F7A0);
  }
  return result;
}

unint64_t sub_1A3D91DA8()
{
  unint64_t result = qword_1E961FBB0[0];
  if (!qword_1E961FBB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961FBB0);
  }
  return result;
}

unint64_t sub_1A3D91E00()
{
  unint64_t result = qword_1E961FCC0;
  if (!qword_1E961FCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961FCC0);
  }
  return result;
}

unint64_t sub_1A3D91E58()
{
  unint64_t result = qword_1E961FCC8[0];
  if (!qword_1E961FCC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961FCC8);
  }
  return result;
}

unint64_t sub_1A3D91EB0()
{
  unint64_t result = qword_1E961FD50;
  if (!qword_1E961FD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961FD50);
  }
  return result;
}

unint64_t sub_1A3D91F08()
{
  unint64_t result = qword_1E961FD58[0];
  if (!qword_1E961FD58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961FD58);
  }
  return result;
}

unint64_t sub_1A3D91F60()
{
  unint64_t result = qword_1E961FDE0;
  if (!qword_1E961FDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961FDE0);
  }
  return result;
}

unint64_t sub_1A3D91FB8()
{
  unint64_t result = qword_1E961FDE8[0];
  if (!qword_1E961FDE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961FDE8);
  }
  return result;
}

unint64_t sub_1A3D92010()
{
  unint64_t result = qword_1E961FE70;
  if (!qword_1E961FE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961FE70);
  }
  return result;
}

unint64_t sub_1A3D92068()
{
  unint64_t result = qword_1E961FE78;
  if (!qword_1E961FE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961FE78);
  }
  return result;
}

unint64_t sub_1A3D920C0()
{
  unint64_t result = qword_1E961FF00;
  if (!qword_1E961FF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E961FF00);
  }
  return result;
}

unint64_t sub_1A3D92118()
{
  unint64_t result = qword_1E961FF08[0];
  if (!qword_1E961FF08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E961FF08);
  }
  return result;
}

uint64_t sub_1A3D9216C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char **sub_1A3D921B8()
{
  return &off_1E5B1A678;
}

char **sub_1A3D921C4()
{
  return &off_1E5B1A690;
}

char **sub_1A3D921D0()
{
  return &off_1E5B1A6A8;
}

char **sub_1A3D921DC()
{
  return &off_1E5B1A6C0;
}

char **sub_1A3D921E8()
{
  return &off_1E5B1A6D8;
}

char **sub_1A3D921F4()
{
  return &off_1E5B1A6F0;
}

char **sub_1A3D92200()
{
  return &off_1E5B1A708;
}

char **sub_1A3D9220C()
{
  return &off_1E5B1A720;
}

char **sub_1A3D92218()
{
  return &off_1E5B1A738;
}

char **sub_1A3D92224()
{
  return &off_1E5B1A750;
}

char **sub_1A3D92230()
{
  return &off_1E5B1A768;
}

char **sub_1A3D9223C()
{
  return &off_1E5B1A780;
}

char **sub_1A3D92248()
{
  return &off_1E5B1A798;
}

char **sub_1A3D92254()
{
  return &off_1E5B1A7B0;
}

char **sub_1A3D92260()
{
  return &off_1E5B1A7C8;
}

char **sub_1A3D9226C()
{
  return &off_1E5B1A7E0;
}

char **sub_1A3D92278()
{
  return &off_1E5B1A7F8;
}

char **sub_1A3D92284()
{
  return &off_1E5B1A810;
}

char **sub_1A3D92290()
{
  return &off_1E5B1A828;
}

char **sub_1A3D9229C()
{
  return &off_1E5B1A840;
}

uint64_t sub_1A3D922A8()
{
  uint64_t v0 = sub_1A409690C();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1A4095EFC();
  __swift_allocate_value_buffer(v1, qword_1E9643D68);
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9643D68);
  sub_1A40968FC();
  return sub_1A4095EEC();
}

uint64_t sub_1A3D9236C()
{
  if (qword_1E961FF90 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A4095EFC();

  return __swift_project_value_buffer(v0, (uint64_t)qword_1E9643D68);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

ValueMetadata *type metadata accessor for SignpostLogger()
{
  return &type metadata for SignpostLogger;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_1A3D9247C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  DetectCameraGazeRequest.descriptor.getter(v20);
  char v7 = v20[0];
  char v8 = BYTE1(v20[0]);
  DetectCameraGazeRequest.regionOfInterest.getter((uint64_t)v20);
  uint64_t v9 = v20[0];
  uint64_t v10 = v20[1];
  uint64_t v11 = v20[2];
  uint64_t v12 = v20[3];
  CGSize v13 = (os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC6Vision23DetectCameraGazeRequest_state);
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v15 = *v13 + 4;
  swift_retain();
  os_unfair_lock_lock(v14 + 6);
  sub_1A3CF5780(v15, &v21);
  os_unfair_lock_unlock(v14 + 6);
  if (v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = v21;
    swift_release();
    uint64_t v21 = a1;
    uint64_t v17 = type metadata accessor for DetectCameraGazeRequest();
    uint64_t v18 = sub_1A3D938D0(&qword_1E95EDAD0, (void (*)(uint64_t))type metadata accessor for DetectCameraGazeRequest);
    uint64_t v19 = sub_1A3E2DBC8(a2, v17, v18);
    swift_release();
    swift_release();
    *(unsigned char *)a3 = v7;
    *(unsigned char *)(a3 + 1) = v8;
    *(_OWORD *)(a3 + 8) = xmmword_1A40FB240;
    *(unsigned char *)(a3 + 24) = 5;
    *(void *)(a3 + 32) = v9;
    *(void *)(a3 + 40) = v10;
    *(void *)(a3 + 48) = v11;
    *(void *)(a3 + 56) = v12;
    *(void *)(a3 + 64) = v16;
    *(void *)(a3 + 72) = v19;
  }
}

uint64_t sub_1A3D9261C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1A3D92674(a1, a2);
  return v4;
}

uint64_t sub_1A3D92674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v25 = *v2;
  v2[2] = MEMORY[0x1E4FBC860];
  v2[3] = 0;
  char v7 = v2 + 3;
  sub_1A3C85678(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBFD8);
  type metadata accessor for DetectCameraGazeRequest();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v9 = v22[0];
    sub_1A3C85678(a1, (uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED208);
    swift_dynamicCast();
    uint64_t v11 = v23;
    uint64_t v10 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v11, v10);
    swift_beginAccess();
    *char v7 = v12;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    sub_1A3D9247C(v9, a2, (uint64_t)v16);
    __swift_destroy_boxed_opaque_existential_1(a1);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_deallocPartialClassInstance();
    }
    else
    {
      char v13 = v16[1];
      char v14 = v18;
      *((unsigned char *)v4 + 32) = v16[0];
      *((unsigned char *)v4 + 33) = v13;
      *(_OWORD *)(v4 + 5) = v17;
      *((unsigned char *)v4 + 56) = v14;
      long long v15 = v20;
      *((_OWORD *)v4 + 4) = v19;
      *((_OWORD *)v4 + 5) = v15;
      *((_OWORD *)v4 + 6) = v21;
    }
    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D92858(uint64_t a1)
{
  v2[50] = a1;
  v2[51] = v1;
  v2[52] = type metadata accessor for SingleFaceTemporalGazeScoresState(0);
  v2[53] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FaceObservation();
  v2[54] = v3;
  v2[55] = *(void *)(v3 - 8);
  v2[56] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A3D92948, 0, 0);
}

uint64_t sub_1A3D92948()
{
  uint64_t v1 = *(void *)(v0 + 408);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)(v0 + 456) = v2;
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v0 + 464) = v4;
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 408);
    swift_bridgeObjectRetain();
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_beginAccess();
    uint64_t v6 = *(void *)(v5 + 40);
    *(void *)(v0 + 472) = v6;
    uint64_t v7 = *(void *)(v5 + 48);
    *(void *)(v0 + 480) = v7;
    char v8 = *(unsigned char *)(v5 + 56);
    *(unsigned char *)(v0 + 512) = v8;
    uint64_t v9 = *(void *)(v5 + 104);
    *(void *)(v0 + 488) = v9;
    sub_1A3CE11C8(v6, v7, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A3D92B4C;
    return sub_1A3DE4F94(v0 + 16, v6, v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v13 = MEMORY[0x1E4FBC860];
    return v12(v13);
  }
}

uint64_t sub_1A3D92B4C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 504) = v0;
  swift_task_dealloc();
  unsigned __int8 v3 = *(unsigned char *)(v2 + 512);
  uint64_t v4 = *(void *)(v2 + 480);
  uint64_t v5 = *(void *)(v2 + 472);
  swift_bridgeObjectRelease();
  sub_1A3CE124C(v5, v4, v3);
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1A3D936C4;
  }
  else
  {
    uint64_t v6 = sub_1A3D92CF4;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

unint64_t sub_1A3D92CF4()
{
  uint64_t v1 = *(void *)(v0 + 400);
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1A3C9DA4C(MEMORY[0x1E4FBC860]);
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    uint64_t v70 = (void *)(v0 + 16);
    unint64_t v69 = (_OWORD *)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 456);
    uint64_t v73 = *(void *)(v0 + 440);
    uint64_t v67 = (uint64_t *)(v0 + 312);
    char v68 = (_OWORD *)(v0 + 280);
    uint64_t v6 = *(void *)(v0 + 408);
    swift_retain();
    unint64_t v7 = sub_1A3D945AC(5);
    uint64_t v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC5C8);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1A40E88E0;
    *(void *)(v10 + 32) = v4;
    uint64_t v75 = v10;
    sub_1A409632C();
    *(void *)(v0 + 144) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED4E0);
    *(void *)(v0 + 120) = v75;
    sub_1A3C856F4((_OWORD *)(v0 + 120), (_OWORD *)(v0 + 152));
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A3C8D048((_OWORD *)(v0 + 152), v7, v9, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v12 = sub_1A3D945AC(4);
    uint64_t v14 = v13;
    char v15 = *(unsigned char *)(v6 + 33);
    *(unsigned char *)(v0 + 184) = *(unsigned char *)(v6 + 32);
    if (v5) {
      uint64_t v16 = v5;
    }
    else {
      uint64_t v16 = v2;
    }
    uint64_t v71 = v16;
    *(void *)(v0 + 208) = &type metadata for RequestDescriptor;
    *(unsigned char *)(v0 + 185) = v15;
    sub_1A3C856F4((_OWORD *)(v0 + 184), (_OWORD *)(v0 + 56));
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A3C8D048((_OWORD *)(v0 + 56), v12, v14, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v18 = (double)sub_1A3CB60E4();
    uint64_t v19 = v6;
    double v20 = (double)sub_1A3CB6270();
    long long v21 = *(void (**)(uint64_t))(**(void **)(v6 + 96) + 256);
    uint64_t v22 = swift_retain();
    v21(v22);
    swift_release();
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    uint64_t v23 = 0;
    uint64_t v24 = v71 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
    unint64_t v65 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    uint64_t v64 = *(void *)(v73 + 72);
    uint64_t v25 = *(void *)(v0 + 504);
    uint64_t v66 = v6;
    while (1)
    {
      uint64_t v74 = v23;
      uint64_t v26 = *(void *)(v0 + 448);
      sub_1A3CF9F14(v24, v26, (uint64_t (*)(void))type metadata accessor for FaceObservation);
      uint64_t v27 = *(void (**)(uint64_t, double, double))(**(void **)(v19 + 96) + 272);
      swift_retain();
      v27(v26, v18, v20);
      if (v25) {
        break;
      }
      uint64_t v72 = v24;
      uint64_t v28 = *(void *)(v0 + 448);
      uint64_t v30 = *(void *)(v0 + 416);
      uint64_t v29 = *(void *)(v0 + 424);
      swift_release();
      unint64_t v31 = sub_1A3D945AC(6);
      uint64_t v32 = (double *)v19;
      uint64_t v34 = v33;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF410);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1A40E7700;
      sub_1A3CF9F14(v28, v35 + v65, (uint64_t (*)(void))type metadata accessor for FaceObservation);
      *(void *)(v0 + 272) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF300);
      *(void *)(v0 + 248) = v35;
      sub_1A3C856F4((_OWORD *)(v0 + 248), v68);
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      sub_1A3C8D048(v68, v31, v34, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_1A3D9E028();
      uint64_t v39 = v38;
      *(void *)(v0 + 336) = v30;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v67);
      sub_1A3CF9F14(v29, (uint64_t)boxed_opaque_existential_1, type metadata accessor for SingleFaceTemporalGazeScoresState);
      sub_1A3C856F4(v67, v69);
      char v41 = swift_isUniquelyReferenced_nonNull_native();
      sub_1A3C8D048(v69, v37, v39, v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v42 = *(void *)(v0 + 40);
      uint64_t v43 = *(void *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1(v70, v42);
      double v44 = v32[8];
      double v45 = v32[9];
      double v46 = v32[10];
      double v47 = v32[11];
      char v48 = *(void (**)(uint64_t, uint64_t, uint64_t, double, double, double, double))(v43 + 16);
      *(void *)(v0 + 112) = swift_getAssociatedTypeWitness();
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 88));
      uint64_t v49 = swift_bridgeObjectRetain();
      v48(v49, v42, v43, v44, v45, v46, v47);
      uint64_t v50 = *(void *)(v0 + 448);
      uint64_t v23 = v74 + 1;
      uint64_t v51 = *(void *)(v0 + 464);
      uint64_t v52 = *(void *)(v0 + 424);
      swift_bridgeObjectRelease();
      swift_dynamicCast();
      sub_1A3CF4CA4(*(void *)(v0 + 392));
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      sub_1A3D938D0((unint64_t *)&qword_1E95ED530, (void (*)(uint64_t))type metadata accessor for FaceObservation);
      sub_1A4096E1C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      sub_1A3CF9F7C(v52, type metadata accessor for SingleFaceTemporalGazeScoresState);
      sub_1A3CF9F7C(v50, (uint64_t (*)(void))type metadata accessor for FaceObservation);
      uint64_t v25 = 0;
      uint64_t v24 = v72 + v64;
      BOOL v53 = v74 + 1 == v51;
      uint64_t v19 = v66;
      if (v53)
      {
        uint64_t v54 = *(void *)(v0 + 432);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A4096A2C();
        swift_bridgeObjectRelease();
        uint64_t v55 = swift_bridgeObjectRetain();
        MEMORY[0x1A6253FB0](v55, v54);
        sub_1A409621C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A3D5D2DC(2);
        swift_bridgeObjectRelease();
        uint64_t v56 = sub_1A3CF4DCC(v2);
        swift_bridgeObjectRelease();
        uint64_t v57 = *(void (**)(uint64_t))(**(void **)(v66 + 96) + 264);
        uint64_t v58 = swift_retain();
        v57(v58);
        swift_release();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
        swift_task_dealloc();
        swift_task_dealloc();
        unint64_t v59 = *(uint64_t (**)(uint64_t))(v0 + 8);
        return v59(v56);
      }
    }
    uint64_t v60 = *(void *)(v0 + 448);
    swift_release();
    sub_1A3CF9F7C(v60, (uint64_t (*)(void))type metadata accessor for FaceObservation);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = *(void (**)(uint64_t))(**(void **)(v19 + 96) + 264);
    uint64_t v62 = swift_retain();
    v61(v62);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    swift_task_dealloc();
    swift_task_dealloc();
    char v63 = *(uint64_t (**)(void))(v0 + 8);
    return v63();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D936C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3D93734(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A3C9FD14;
  return sub_1A3D92858(a1);
}

uint64_t sub_1A3D937C8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A3C9FEEC;
  return sub_1A3D28EA4(a1, v4, (uint64_t)&off_1EF757910);
}

uint64_t sub_1A3D9389C(uint64_t a1)
{
  return sub_1A3CF3B58(a1, *v1, (uint64_t)&off_1EF7578E8);
}

uint64_t sub_1A3D938D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CameraGazeDetectorPerformingOperation()
{
  return self;
}

ValueMetadata *type metadata accessor for CameraGazeDetectorPerformingOperation.Options()
{
  return &type metadata for CameraGazeDetectorPerformingOperation.Options;
}

uint64_t sub_1A3D9394C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  unsigned int v50 = a3;
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  uint64_t v52 = sub_1A4095ECC();
  uint64_t v7 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = sub_1A4095EFC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A3D9236C();
  uint64_t v46 = v14;
  uint64_t v47 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  double v18 = sub_1A3D92224();
  uint64_t v19 = *v18;
  char v20 = *((unsigned char *)v18 + 16);
  long long v21 = v12;
  sub_1A4095EBC();
  double v45 = v16;
  uint64_t v22 = sub_1A4095EDC();
  int v23 = sub_1A409678C();
  uint64_t result = sub_1A40968EC();
  if (result)
  {
    int v42 = v23;
    if (v20)
    {
      if (!((unint64_t)v19 >> 32))
      {
        if (v19 >> 11 == 27)
        {
LABEL_17:
          __break(1u);
          return result;
        }
        if (v19 >> 16 <= 0x10)
        {
          uint64_t v25 = v6;
          uint64_t v38 = &v55;
          goto LABEL_10;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      if (v19)
      {
        uint64_t v25 = v6;
        uint64_t v38 = v19;
LABEL_10:
        uint64_t v41 = v7;
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        uint64_t v39 = v21;
        unint64_t v40 = v27;
        v27(v9, v21, v52);
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 136315138;
        uint64_t v54 = v29;
        uint64_t v30 = (*(uint64_t (**)(void))(v25 + 136))();
        uint64_t v53 = sub_1A3CB8AB0(v30, v31, &v54);
        uint64_t v6 = v25;
        sub_1A409695C();
        long long v21 = v39;
        swift_bridgeObjectRelease();
        os_signpost_id_t v32 = sub_1A4095EAC();
        _os_signpost_emit_with_name_impl(&dword_1A3C62000, v22, (os_signpost_type_t)v42, v32, v38, "Detector (%s): createDetector", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A6257B40](v29, -1, -1);
        MEMORY[0x1A6257B40](v28, -1, -1);

        uint64_t v7 = v41;
        uint64_t v26 = v52;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v52);
        v40(v9, v21, v26);
        goto LABEL_11;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }

  uint64_t v26 = v52;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v21, v52);
LABEL_11:
  sub_1A4095F3C();
  swift_allocObject();
  uint64_t v33 = sub_1A4095F2C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v26);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
  uint64_t v34 = v51;
  uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t, void))(v6 + 152))(v48, v49, v50);
  if (!v34)
  {
    uint64_t v36 = v35;
    (*(void (**)(uint64_t))(v6 + 192))(v43);
    (*(void (**)(void))(v36 + 96))();
    swift_bridgeObjectRelease();
  }
  sub_1A3D93DCC(v33, v6);
  return swift_release();
}

uint64_t sub_1A3D93DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v2 = sub_1A4095F0C();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v43 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A4095ECC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v42 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = sub_1A4095EFC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A3D9236C();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v15 = sub_1A3D92224();
  uint64_t v44 = *v15;
  char v16 = *((unsigned char *)v15 + 16);
  uint64_t v17 = sub_1A4095EDC();
  sub_1A4095F1C();
  int v38 = sub_1A409677C();
  uint64_t result = sub_1A40968EC();
  if ((result & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v36 = v13;
  uint64_t v37 = v10;
  if (v16)
  {
    if (!((unint64_t)v44 >> 32))
    {
      if (v44 >> 11 == 27)
      {
LABEL_18:
        __break(1u);
        return result;
      }
      long long v21 = v43;
      if (v44 >> 16 <= 0x10)
      {
        uint64_t v19 = v17;
        uint64_t v20 = v5;
        uint64_t v44 = &v47;
        goto LABEL_10;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v44)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v19 = v17;
  uint64_t v20 = v5;
  long long v21 = v43;
LABEL_10:
  swift_retain();
  sub_1A4095F4C();
  swift_release();
  uint64_t v23 = v39;
  uint64_t v22 = v40;
  uint64_t v24 = v9;
  if ((*(unsigned int (**)(const char *, uint64_t))(v39 + 88))(v21, v40) == *MEMORY[0x1E4FBD340])
  {
    char v25 = 0;
    char v26 = 0;
    uint64_t v43 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(const char *, uint64_t))(v23 + 8))(v21, v22);
    uint64_t v43 = "Detector (%s): createDetector";
    char v26 = 2;
    char v25 = 1;
  }
  uint64_t v27 = v11;
  uint64_t v28 = v42;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v42, v24, v4);
  uint64_t v29 = swift_slowAlloc();
  uint64_t v30 = v4;
  uint64_t v31 = swift_slowAlloc();
  uint64_t v46 = v31;
  *(unsigned char *)uint64_t v29 = v26;
  *(unsigned char *)(v29 + 1) = v25;
  *(_WORD *)(v29 + 2) = 2080;
  uint64_t v32 = (*(uint64_t (**)(void))(v41 + 136))();
  uint64_t v45 = sub_1A3CB8AB0(v32, v33, &v46);
  sub_1A409695C();
  swift_bridgeObjectRelease();
  os_signpost_id_t v34 = sub_1A4095EAC();
  _os_signpost_emit_with_name_impl(&dword_1A3C62000, v19, (os_signpost_type_t)v38, v34, v44, v43, (uint8_t *)v29, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1A6257B40](v31, -1, -1);
  MEMORY[0x1A6257B40](v29, -1, -1);

  uint64_t v35 = *(void (**)(char *, uint64_t))(v20 + 8);
  v35(v24, v30);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v36, v37);
  return ((uint64_t (*)(char *, uint64_t))v35)(v28, v30);
}

uint64_t sub_1A3D94290()
{
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD00000000000001DLL;
  *(void *)(v0 + 8) = 0x80000001A40B6350;
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 20;
  return swift_willThrow();
}

unint64_t sub_1A3D94300(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF2A8);
  uint64_t v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *((unsigned __int8 *)v4 - 8);
    uint64_t v8 = *v4;
    sub_1A3CE11C8(v5, v6, *((unsigned char *)v4 - 8));
    unint64_t result = sub_1A3D956AC(v5, v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = v2[6] + 24 * result;
    *(void *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v6;
    *(unsigned char *)(v11 + 16) = v7;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A3D9443C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF280);
  sub_1A409619C();
  uint64_t v0 = sub_1A3D95818();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1A3D944A4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40FB2D0;
  *(_OWORD *)(inited + 32) = xmmword_1A40EC350;
  *(unsigned char *)(inited + 48) = 5;
  *(void *)(inited + 56) = type metadata accessor for ScreenGazeDetector();
  *(_OWORD *)(inited + 64) = xmmword_1A40EC470;
  *(unsigned char *)(inited + 80) = 5;
  *(void *)(inited + 88) = type metadata accessor for DeviceGazeDetector();
  *(_OWORD *)(inited + 96) = xmmword_1A40FB240;
  *(unsigned char *)(inited + 112) = 5;
  *(void *)(inited + 120) = type metadata accessor for CameraGazeDetector();
  *(_OWORD *)(inited + 128) = xmmword_1A40EC3E0;
  *(unsigned char *)(inited + 144) = 5;
  *(void *)(inited + 152) = type metadata accessor for FaceAnalyzerDetector();
  *(_OWORD *)(inited + 160) = xmmword_1A40EC1B0;
  *(unsigned char *)(inited + 176) = 5;
  *(void *)(inited + 184) = type metadata accessor for TorsoPrintGenerator();
  *(_OWORD *)(inited + 192) = xmmword_1A40EC2B0;
  *(unsigned char *)(inited + 208) = 5;
  *(void *)(inited + 216) = type metadata accessor for FaceLivelinessScoreDetector();
  unint64_t result = sub_1A3D94300(inited);
  qword_1E9643D80 = result;
  return result;
}

unint64_t sub_1A3D945AC(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0xD000000000000023;
      break;
    case 9:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 10:
      unint64_t result = 0x6E6F6973736573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3D946E0(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1A3D945AC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1A3D945AC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A3D9476C()
{
  char v1 = *v0;
  sub_1A4096F2C();
  sub_1A3D945AC(v1);
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3D947D0()
{
  sub_1A3D945AC(*v0);
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D94824()
{
  char v1 = *v0;
  sub_1A4096F2C();
  sub_1A3D945AC(v1);
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3D94884@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A3D95A08();
  *a1 = result;
  return result;
}

unint64_t sub_1A3D948B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A3D945AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A3D948E0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A3D94930(a1);
  return v2;
}

void *sub_1A3D94930(uint64_t a1)
{
  v1[2] = sub_1A3C9DA4C(MEMORY[0x1E4FBC860]);
  (*(void (**)(void))(*v1 + 128))();
  swift_beginAccess();
  v1[2] = a1;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1A3C8CA6C(0x6E6F6973736573, 0xE700000000000000, v4);
  swift_endAccess();
  sub_1A3CA2EB8((uint64_t)v4, (uint64_t *)&unk_1E95EF700);
  return v1;
}

unint64_t sub_1A3D94A48(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for ImageBuffer();
  unint64_t result = sub_1A3CB0894(0xD000000000000011, 0x80000001A40B62D0, a1, v3, 1u, 1u);
  if (v1) {
    return v3;
  }
  if (*(void *)(result + 16))
  {
    sub_1A3C8D3F0(result + 32, (uint64_t)v8);
    swift_bridgeObjectRelease();
    swift_dynamicCast();
    uint64_t v3 = v9;
    uint64_t v5 = sub_1A3CB60E4();
    uint64_t v6 = sub_1A3CB6270();
    MEMORY[0x1F4188790](v6);
    sub_1A3CB0FF8(v5, v7);
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3D94B90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (*(uint64_t (**)(void))(v1 + 160))();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v6 = NSStringFromClass(ObjCClassFromMetadata);
  uint64_t v7 = sub_1A409617C();
  uint64_t v9 = v8;

  int64_t v10 = 0;
  uint64_t v34 = v7;
  uint64_t v35 = v9;
  uint64_t v11 = *(void *)(v4 + 56);
  uint64_t v28 = v4 + 56;
  uint64_t v30 = v4;
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  if ((v13 & v11) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v15 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v10 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(v30 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    if (!*(void *)(a1 + 16)) {
      break;
    }
    uint64_t v22 = *v20;
    uint64_t v23 = v34;
    uint64_t v24 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1A3C8C844(v23, v24);
    if (v26)
    {
      sub_1A3C8D3F0(*(void *)(a1 + 56) + 32 * v25, (uint64_t)&v31);
    }
    else
    {
      long long v31 = 0u;
      long long v32 = 0u;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (!*((void *)&v32 + 1)) {
      goto LABEL_30;
    }
    sub_1A3C856F4(&v31, v33);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, _OWORD *))(v2 + 168))(&v31, v22, v21, v33);
    sub_1A409621C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A4096BAC();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      break;
    }
    if (v17 >= v29) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v28 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v28 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v29) {
          goto LABEL_26;
        }
        unint64_t v18 = *(void *)(v28 + 8 * v10);
        if (!v18)
        {
          int64_t v19 = v17 + 3;
          if (v19 >= v29)
          {
LABEL_26:
            swift_release();
            return v34;
          }
          unint64_t v18 = *(void *)(v28 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v10 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_28;
              }
              if (v10 >= v29) {
                goto LABEL_26;
              }
              unint64_t v18 = *(void *)(v28 + 8 * v10);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          int64_t v10 = v19;
        }
      }
    }
LABEL_18:
    unint64_t v14 = (v18 - 1) & v18;
  }
  long long v31 = 0u;
  long long v32 = 0u;
  uint64_t result = swift_bridgeObjectRetain();
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A3D94E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1E961FFA0 != -1) {
    swift_once();
  }
  if (*(void *)(qword_1E9643D80 + 16))
  {
    sub_1A3CE11C8(a1, a2, a3);
    sub_1A3D956AC(a1, a2, a3);
    if (v6)
    {
      sub_1A3CE124C(a1, a2, a3);
      type metadata accessor for Detector();
      return swift_dynamicCastMetatypeUnconditional();
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = sub_1A3CE124C(a1, a2, a3);
  __break(1u);
  return result;
}

uint64_t sub_1A3D94F8C()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1A3D94F98@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1A3C8D3F0(a1, a2);
}

uint64_t sub_1A3D94FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  uint64_t v11 = sub_1A3D94B90(a4);
  uint64_t v13 = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 152))(a1, a2, a3);
  if (!v5)
  {
    uint64_t v15 = (*(uint64_t (**)(uint64_t))(v10 + 192))(a4);
    uint64_t v16 = sub_1A3D94B90(v15);
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    if (v11 == v16 && v13 == v18)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v20 = sub_1A4096E5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        char v14 = 0;
        return v14 & 1;
      }
    }
    char v14 = 1;
    return v14 & 1;
  }
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t sub_1A3D950F0()
{
  sub_1A3C8CA6C(0xD000000000000011, 0x80000001A40B62D0, v1);
  sub_1A3CA2EB8((uint64_t)v1, (uint64_t *)&unk_1E95EF700);
  sub_1A3C8CA6C(0x656C6C65636E6163, 0xE900000000000072, v1);
  return sub_1A3CA2EB8((uint64_t)v1, (uint64_t *)&unk_1E95EF700);
}

unint64_t sub_1A3D95178(uint64_t a1)
{
  unint64_t v12 = sub_1A3C9DA4C(MEMORY[0x1E4FBC860]);
  (*(void (**)(unint64_t *))(v1 + 200))(&v12);
  swift_bridgeObjectRetain();
  unint64_t v3 = v12;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v10 = v3;
  sub_1A3CB915C(a1, (uint64_t)sub_1A3CB9108, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v10);
  unint64_t v12 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t *))(v1 + 184))(&v12);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1A3D95AAC;
  *(void *)(v5 + 24) = 0;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF288);
  *(void *)&long long v10 = sub_1A3D95B70;
  *((void *)&v10 + 1) = v5;
  sub_1A3C856F4(&v10, v9);
  unint64_t v6 = v12;
  char v7 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v9, 0xD000000000000012, 0x80000001A40B62B0, v7);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A3D952F0()
{
  uint64_t v2 = &type metadata for ImageCropAndScaleAction;
  v1[0] = 0;
  sub_1A3C8BC40((uint64_t)v1, 0xD000000000000017, 0x80000001A40B3120);
  uint64_t v2 = &type metadata for ModelFileBackingStoreType;
  v1[0] = 0;
  return sub_1A3C8BC40((uint64_t)v1, 0xD000000000000011, 0x80000001A40B6270);
}

uint64_t sub_1A3D9537C()
{
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD000000000000020;
  *(void *)(v0 + 8) = 0x80000001A40B6370;
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 20;
  return swift_willThrow();
}

uint64_t sub_1A3D953EC()
{
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD00000000000001FLL;
  *(void *)(v0 + 8) = 0x80000001A40B63A0;
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 20;
  return swift_willThrow();
}

uint64_t sub_1A3D9545C()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A3D95480()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))() & 1;
}

uint64_t sub_1A3D954C8()
{
  return sub_1A3C89194();
}

uint64_t sub_1A3D954D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v14 = type metadata accessor for Detector();
  return sub_1A3D95E98(a1, v14, a2, a3, a4, a5, a6, a7);
}

void sub_1A3D95554(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for Detector();
  sub_1A3D96640(a1, v13, a7, a2, a3, a4, a5);
}

uint64_t sub_1A3D955D4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 208))();
}

uint64_t sub_1A3D95618()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216))();
}

uint64_t sub_1A3D9565C()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1A3D95670()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1A3D95684()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_1A3D956AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A3D95D88();
  uint64_t v6 = sub_1A40960CC();
  return sub_1A3D95734(a1, a2, a3, v6);
}

unint64_t sub_1A3D95734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v6 = a4 & ~v5;
  if ((*(void *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = ~v5;
    sub_1A3CE11E4();
    do
    {
      if (sub_1A409612C()) {
        break;
      }
      unint64_t v6 = (v6 + 1) & v7;
    }
    while (((*(void *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_1A3D95818()
{
  uint64_t v0 = sub_1A4095A3C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4095A2C();
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  uint64_t v4 = sub_1A40961DC();
  BOOL v5 = __OFADD__(v4, 5);
  uint64_t result = v4 + 5;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1A6253E50](result);
    id v7 = objc_allocWithZone(MEMORY[0x1E4F28FE8]);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_1A409614C();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithString_, v8);

    char v10 = 0;
    while ((objc_msgSend(v9, sel_isAtEnd) & 1) == 0)
    {
      sub_1A40968BC();
      if (v12)
      {
        sub_1A409621C();
        swift_bridgeObjectRelease();
      }
      sub_1A40968AC();
      if (v11)
      {
        if (v10) {
          sub_1A409621C();
        }
        sub_1A409621C();
        swift_bridgeObjectRelease();
        char v10 = 1;
      }
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);

    return v13[0];
  }
  return result;
}

uint64_t sub_1A3D95A08()
{
  unint64_t v0 = sub_1A4096C5C();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A3D95A54()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 136))();
}

uint64_t type metadata accessor for Detector()
{
  return self;
}

id sub_1A3D95AAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  uint64_t v3 = *MEMORY[0x1E4F1E808];
  uint64_t v4 = sub_1A4095F8C();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104))(a2, v3, v4);

  return a1;
}

uint64_t sub_1A3D95B38()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3D95B70(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_1A3D95BA0()
{
  unint64_t result = qword_1E95EF290;
  if (!qword_1E95EF290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF290);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Detector.Options(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Detector.Options(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D95D50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Detector.Options()
{
  return &type metadata for Detector.Options;
}

unint64_t sub_1A3D95D88()
{
  unint64_t result = qword_1E95EF298;
  if (!qword_1E95EF298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF298);
  }
  return result;
}

unint64_t sub_1A3D95DDC()
{
  return 0xD00000000000003ELL;
}

void *sub_1A3D95DF8(uint64_t a1)
{
  return sub_1A3D9A5DC(a1);
}

uint64_t sub_1A3D95E44()
{
  sub_1A3D9A5F4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScreenGazeDetector_iPhone()
{
  return self;
}

uint64_t sub_1A3D95E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v40 = a2;
  uint64_t v39 = a4;
  uint64_t v42 = sub_1A4095ECC();
  uint64_t v14 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  int64_t v19 = &v34[-v18];
  uint64_t v20 = sub_1A4095EFC();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = &v34[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v43 = a1;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1A3D9236C();
  uint64_t v37 = v21;
  uint64_t v38 = v20;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v21 + 16))(v23, v24, v20);
  unint64_t v25 = sub_1A3D92230();
  char v26 = *v25;
  char v27 = *((unsigned char *)v25 + 16);
  sub_1A4095EBC();
  uint64_t v36 = v23;
  uint64_t v28 = sub_1A4095EDC();
  int v35 = sub_1A409678C();
  uint64_t result = sub_1A40968EC();
  uint64_t v41 = a3;
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  if ((v27 & 1) == 0)
  {
    if (!v26)
    {
      __break(1u);
LABEL_5:

      uint64_t v30 = v42;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16))(v16, v19, v42);
LABEL_11:
      sub_1A4095F3C();
      swift_allocObject();
      sub_1A4095F2C();
      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v19, v30);
      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v36, v38);
      (*(void (**)(uint64_t *, uint64_t, double, double, double, double))(v41 + 24))(&v43, v40, a5, a6, a7, a8);
      swift_bridgeObjectRelease();
      sub_1A3D96244();
      return swift_release();
    }
LABEL_10:
    long long v31 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16);
    v31(v16, v19, v42);
    long long v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v32 = 0;
    os_signpost_id_t v33 = sub_1A4095EAC();
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v28, (os_signpost_type_t)v35, v33, v26, "Detector: process", v32, 2u);
    MEMORY[0x1A6257B40](v32, -1, -1);

    uint64_t v30 = v42;
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v42);
    v31(v16, v19, v30);
    goto LABEL_11;
  }
  if ((unint64_t)v26 >> 32)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v26 >> 11 != 27)
  {
    if (v26 >> 16 <= 0x10)
    {
      char v26 = &v44;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1A3D96244()
{
  uint64_t v0 = sub_1A4095F0C();
  uint64_t v29 = *(void *)(v0 - 8);
  uint64_t v30 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v28 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1A4095ECC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  long long v31 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  BOOL v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_1A4095EFC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A3D9236C();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v13 = sub_1A3D92230();
  long long v32 = *v13;
  char v14 = *((unsigned char *)v13 + 16);
  uint64_t v15 = sub_1A4095EDC();
  sub_1A4095F1C();
  int v27 = sub_1A409677C();
  uint64_t result = sub_1A40968EC();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v26 = v8;
  if ((v14 & 1) == 0)
  {
    if (!v32)
    {
      __break(1u);
LABEL_5:

      (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v32 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v32 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v32 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v32 = &v33;
LABEL_10:
  swift_retain();
  uint64_t v17 = v28;
  sub_1A4095F4C();
  swift_release();
  uint64_t v19 = v29;
  uint64_t v18 = v30;
  if ((*(unsigned int (**)(char *, uint64_t))(v29 + 88))(v17, v30) == *MEMORY[0x1E4FBD340])
  {
    uint64_t v20 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    uint64_t v20 = "Detector: process";
  }
  uint64_t v21 = v31;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v31, v7, v2);
  uint64_t v22 = v2;
  uint64_t v23 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v23 = 0;
  os_signpost_id_t v24 = sub_1A4095EAC();
  _os_signpost_emit_with_name_impl(&dword_1A3C62000, v15, (os_signpost_type_t)v27, v24, v32, v20, v23, 2u);
  MEMORY[0x1A6257B40](v23, -1, -1);

  unint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
  v25(v7, v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v26);
  return ((uint64_t (*)(char *, uint64_t))v25)(v21, v22);
}

void sub_1A3D96640(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v15 = (*(uint64_t (**)(void))(a3 + 32))();
  if (!v7)
  {
    uint64_t v16 = (void *)v15;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(a3 + 40))(v15, a1, a2, a3, a4, a5, a6, a7);
  }
}

void *sub_1A3D96700()
{
  return &unk_1E95EF2B0;
}

unint64_t sub_1A3D9670C()
{
  return 0xD000000000000030;
}

unint64_t sub_1A3D96728()
{
  return 0xD000000000000010;
}

uint64_t sub_1A3D96744(uint64_t a1)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A3CB0BA4(a1);
  if (!v1)
  {
    sub_1A3CFB1AC();
    uint64_t v4 = sub_1A4096E1C();
    uint64_t v6 = v5;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.unsupportedRevision(message:)(v4, v6, v7);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A3D968DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a2;
  int v3 = *(_DWORD *)(a2 + 8);
  __int16 v4 = *(_WORD *)(a2 + 12);
  __int16 v9 = -8192;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  uint64_t v6 = v2;
  __int16 v8 = v4;
  int v7 = v3;
  return sub_1A3D0AEE4(&v6);
}

uint64_t type metadata accessor for DeviceGazeDetector()
{
  return self;
}

uint64_t sub_1A3D969B0(uint64_t a1)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A3CB0BA4(a1);
  if (!v1)
  {
    sub_1A3CFB1AC();
    uint64_t v4 = sub_1A4096E1C();
    uint64_t v6 = v5;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.unsupportedRevision(message:)(v4, v6, v7);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

void *sub_1A3D96B48(uint64_t a1)
{
  return sub_1A3DA1D70(a1);
}

uint64_t sub_1A3D96B94()
{
  return 0x706F726365636166;
}

uint64_t sub_1A3D96BAC()
{
  return 1852399981;
}

unint64_t sub_1A3D96BBC()
{
  return 0xD00000000000002ELL;
}

float sub_1A3D96BD8()
{
  return 1.0;
}

uint64_t sub_1A3D96BE0()
{
  uint64_t v0 = sub_1A3D94F8C();
  uint64_t v1 = MEMORY[0x1E4FBC870];

  return sub_1A3D96C14(v1, v0);
}

uint64_t sub_1A3D96C14(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A3D9839C(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A3D96D94(uint64_t a1)
{
  void (*v11)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t);
  long long v12;
  uint64_t v13;
  unsigned char v14[40];

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A3DA1C90();
  if (v2) {
    return swift_release();
  }
  uint64_t v8 = v5;
  uint64_t v9 = v6;
  unint64_t v10 = sub_1A3CEF9A8();
  swift_beginAccess();
  uint64_t v11 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t))(*(void *)*v10 + 120);
  swift_retain();
  swift_retain();
  v11(&v12, v8, v9, sub_1A3D97934, v4);
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v13)
  {
    swift_release();
    sub_1A3C856DC(&v12, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF2D0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF330);
    return swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D96F34(uint64_t a1)
{
  return sub_1A3DA2ED0(a1);
}

unint64_t sub_1A3D96F4C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF2E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = MEMORY[0x1E4FBC860];
  return sub_1A3D96FAC(inited);
}

unint64_t sub_1A3D96FAC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF310);
  uint64_t v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    char v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3C8C7D8(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A3D970B0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v58 = a3;
  char v55 = a4;
  uint64_t v52 = type metadata accessor for FaceObservation();
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF2E8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v51 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  unint64_t v59 = &v46[-v10];
  LODWORD(v57) = *a2;
  int v56 = a2[1];
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A40FB470;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x6E69727065636166;
  *(void *)(v12 + 24) = 0xE900000000000074;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 256;
  uint64_t v61 = a1;
  *(void *)&long long v66 = a1;
  int64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = v12;
  v14[4] = v11;
  uint64_t v14[5] = 128;
  uint64_t v15 = type metadata accessor for NamedObjects();
  unint64_t v16 = sub_1A3D97EAC();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v60 = v15;
  uint64_t v17 = v15;
  uint64_t v18 = v16;
  uint64_t v19 = v16;
  uint64_t v20 = v62;
  sub_1A3E0B2A4(0x6E69727065636166, 0xE900000000000074, (void (*)(uint64_t, unint64_t))sub_1A3D97AD8, (uint64_t)v14, v17, v19);
  if (v20) {
    goto LABEL_2;
  }
  uint64_t v49 = v11 + 16;
  uint64_t v62 = v11;
  uint64_t v50 = v13;
  swift_release();
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 16) = 0;
  uint64_t v48 = v21 + 16;
  swift_beginAccess();
  *(void *)(v12 + 16) = 0x6E656469666E6F63;
  *(void *)(v12 + 24) = 0xEA00000000006563;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v13 + 16) = 2;
  *(void *)&long long v66 = v61;
  uint64_t v23 = *(void *)(v12 + 16);
  uint64_t v22 = *(void *)(v12 + 24);
  os_signpost_id_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = 2;
  v24[3] = v23;
  v24[4] = v22;
  v24[5] = v21;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_1A3E0B2A4(v23, v22, (void (*)(uint64_t, unint64_t))sub_1A3D97F54, (uint64_t)v24, v60, v18);
  uint64_t v60 = v21;
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  uint64_t v61 = 0;
  uint64_t v26 = *(void *)(v62 + 16);
  unint64_t v27 = *(void *)(v62 + 24);
  char v65 = 0;
  uint64_t v28 = (float *)v48;
  swift_beginAccess();
  float v29 = *v28;
  char v64 = 1;
  v63[0] = v57;
  v63[1] = v56;
  sub_1A3C7D1A8(v26, v27);
  sub_1A3C7F1B0(v26, v27, 128, &v65, &v64, v63, (uint64_t)&v66, v29);
  unint64_t v57 = *((void *)&v66 + 1);
  uint64_t v30 = v66;
  uint64_t v31 = v67;
  uint64_t v32 = v68;
  uint64_t v33 = HIDWORD(v68);
  int v34 = v69;
  BOOL v35 = v70;
  uint64_t v36 = v59;
  uint64_t v37 = v61;
  sub_1A3CB0C64(v58, (uint64_t)v59);
  uint64_t v61 = v37;
  if (v37)
  {
    sub_1A3C7D218(v30, v57);
LABEL_2:
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  BOOL v47 = v35;
  uint64_t v48 = v33;
  uint64_t v49 = v32;
  int v56 = v34;
  uint64_t v58 = v31;
  uint64_t v38 = v51;
  sub_1A3D98280((uint64_t)v36, (uint64_t)v51);
  uint64_t v39 = v53;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v53 + 48))(v38, 1, v52);
  if (result != 1)
  {
    unint64_t v40 = v57;
    *(void *)&long long v66 = v30;
    *((void *)&v66 + 1) = v57;
    uint64_t v67 = v58;
    uint64_t v68 = v49 | (v48 << 32);
    unsigned __int16 v69 = v56;
    BOOL v70 = v47;
    sub_1A3C7D1A8(v30, v57);
    uint64_t v41 = v54;
    sub_1A3DF78A8((uint64_t)v38, &v66, (uint64_t)v54);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF410);
    unint64_t v42 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1A40E7700;
    sub_1A3CF54DC((uint64_t)v41, v43 + v42);
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF300);
    uint64_t v45 = v55;
    v55[3] = v44;
    sub_1A3C7D218(v30, v40);
    uint64_t *v45 = v43;
    sub_1A3CF5540((uint64_t)v41);
    sub_1A3D982E8((uint64_t)v36);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3D97780(_WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A4096BAC();
  sub_1A3D5D2DC(2);
  uint64_t result = swift_bridgeObjectRelease();
  if ((unint64_t)(a4 - 0x2000000000000000) >> 62 == 3)
  {
    uint64_t v8 = sub_1A3CABA10(4 * a4);
    uint64_t v10 = v9;
    swift_beginAccess();
    uint64_t v11 = *a3;
    unint64_t v12 = a3[1];
    *a3 = v8;
    a3[1] = v10;
    uint64_t result = sub_1A3C7D218(v11, v12);
    if (a1)
    {
      swift_beginAccess();
      sub_1A3D98ED0(a3, a4, a1);
      return swift_endAccess();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3D978FC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3D97934@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A3DA29DC(*(void *)(v1 + 24));
  if (!v2)
  {
    if (result)
    {
      sub_1A3E0F298(result, 1852399981, 0xE400000000000000, 0x706F726365636166, 0xE800000000000000, (uint64_t)&unk_1EF757C20, 0, 0, v8, 0, 0);
      uint64_t v5 = v9;
      uint64_t v6 = __swift_project_boxed_opaque_existential_1(v8, v9);
      a1[3] = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v6, v5);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A3D97A48()
{
  sub_1A3C7D218(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3D97A80()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A3D97A90()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3D97AD8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[5];
  uint64_t v6 = (uint64_t *)(v2[2] + 16);
  uint64_t v7 = (uint64_t *)(v2[4] + 16);
  unint64_t v8 = a2 >> 62;
  unint64_t v9 = a2;
  uint64_t v11 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_release();
        swift_release();
        __break(1u);
LABEL_21:
        sub_1A3C7D218(a1, v9);
        __break(1u);
        JUMPOUT(0x1A3D97E8CLL);
      }
      uint64_t v11 = HIDWORD(a1) - (int)a1;
LABEL_6:
      uint64_t v21 = v3;
      swift_beginAccess();
      if (v11 >= *v6)
      {
        switch((int)v8)
        {
          case 1:
            if (a1 >> 32 < (int)a1) {
              goto LABEL_19;
            }
            swift_retain();
            sub_1A3D98E2C((int)a1, a1 >> 32, v9 & 0x3FFFFFFFFFFFFFFFLL, v7, v5);
            if (v3) {
              goto LABEL_21;
            }
            uint64_t result = sub_1A3C7D218(a1, v9);
            break;
          case 2:
            v9 &= 0x3FFFFFFFFFFFFFFFuLL;
            uint64_t v19 = *(void *)(a1 + 16);
            uint64_t v20 = *(void *)(a1 + 24);
            swift_retain();
            swift_retain();
            sub_1A3D98E2C(v19, v20, v9, v7, v5);
            if (v21) {
              goto LABEL_20;
            }
            swift_release();
            return swift_release();
          case 3:
            *(void *)((char *)&v22 + 6) = 0;
            *(void *)&long long v22 = 0;
            uint64_t v18 = (char *)&v22;
            return sub_1A3D97780(&v22, (uint64_t)v18, v7, v5);
          default:
            *(void *)&long long v22 = a1;
            WORD4(v22) = v9;
            BYTE10(v22) = BYTE2(v9);
            BYTE11(v22) = BYTE3(v9);
            BYTE12(v22) = BYTE4(v9);
            BYTE13(v22) = BYTE5(v9);
            uint64_t v18 = (char *)&v22 + BYTE6(v9);
            return sub_1A3D97780(&v22, (uint64_t)v18, v7, v5);
        }
      }
      else
      {
        *(void *)&long long v22 = 0;
        *((void *)&v22 + 1) = 0xE000000000000000;
        sub_1A4096A2C();
        swift_beginAccess();
        uint64_t v15 = *(void *)(v4 + 16);
        uint64_t v14 = *(void *)(v4 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v23 = v15;
        uint64_t v24 = v14;
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        swift_beginAccess();
        uint64_t v25 = *v6;
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(v15, v14, v16);
        swift_bridgeObjectRelease();
        return swift_willThrow();
      }
      return result;
    case 2uLL:
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      uint64_t v11 = v12 - v13;
      if (!__OFSUB__(v12, v13)) {
        goto LABEL_6;
      }
      goto LABEL_18;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v11 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_1A3D97EAC()
{
  unint64_t result = qword_1E95EF2F0;
  if (!qword_1E95EF2F0)
  {
    type metadata accessor for NamedObjects();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF2F0);
  }
  return result;
}

uint64_t sub_1A3D97F04()
{
  return MEMORY[0x1F4186498](v0, 20, 7);
}

uint64_t sub_1A3D97F14()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3D97F54(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  uint64_t v6 = (_DWORD *)(v2[5] + 16);
  unint64_t v7 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v10 < v3)
      {
LABEL_14:
        sub_1A4096A2C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(v4, v5, v24);
        swift_bridgeObjectRelease();
        return swift_willThrow();
      }
      else if (v7)
      {
        if (v7 == 1)
        {
          if ((int)a1 <= a1 >> 32)
          {
            sub_1A3C7D1A8(a1, a2);
            uint64_t v13 = sub_1A4095A5C();
            if (!v13)
            {
LABEL_25:
              sub_1A4095A7C();
              __break(1u);
              goto LABEL_26;
            }
            uint64_t v14 = v13;
            uint64_t v15 = sub_1A4095A8C();
            uint64_t v16 = (int)a1 - v15;
            if (!__OFSUB__((int)a1, v15))
            {
              sub_1A4095A7C();
              _H0 = *(_WORD *)(v14 + v16);
              __asm { FCVT            S8, H0 }
              swift_beginAccess();
              *uint64_t v6 = _S8;
              return sub_1A3C7D218(a1, a2);
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
          goto LABEL_22;
        }
        uint64_t v27 = *(void *)(a1 + 16);
        swift_retain();
        swift_retain();
        uint64_t v28 = sub_1A4095A5C();
        if (!v28)
        {
LABEL_26:
          sub_1A4095A7C();
          __break(1u);
          JUMPOUT(0x1A3D98270);
        }
        uint64_t v29 = v28;
        uint64_t v30 = sub_1A4095A8C();
        _VF = __OFSUB__(v27, v30);
        uint64_t v31 = v27 - v30;
        if (_VF) {
          goto LABEL_23;
        }
        sub_1A4095A7C();
        _H0 = *(_WORD *)(v29 + v31);
        __asm { FCVT            S8, H0 }
        swift_beginAccess();
        *uint64_t v6 = _S8;
        swift_release();
        return swift_release();
      }
      else
      {
        _H0 = a1;
        __asm { FCVT            S8, H0 }
        uint64_t result = swift_beginAccess();
        *uint64_t v6 = _S8;
      }
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_6;
      }
      goto LABEL_21;
    case 3uLL:
      if (v3 > 0) {
        goto LABEL_14;
      }
      uint64_t result = swift_beginAccess();
      *uint64_t v6 = 0;
      return result;
    default:
      uint64_t v10 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1A3D98280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D982E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF2E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3D98348()
{
  sub_1A3DA2194();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FaceAnalyzerDetector()
{
  return self;
}

uint64_t sub_1A3D9839C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1A4096F2C();
  swift_bridgeObjectRetain();
  sub_1A40961CC();
  uint64_t v8 = sub_1A4096F7C();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A4096E5C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A4096E5C() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A3D9882C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1A3D9854C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF318);
  uint64_t v3 = sub_1A4096A1C();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1A4096F2C();
      sub_1A40961CC();
      uint64_t result = sub_1A4096F7C();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A3D9882C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1A3D9854C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1A3D989C8();
      goto LABEL_22;
    }
    sub_1A3D98B7C();
  }
  uint64_t v11 = *v4;
  sub_1A4096F2C();
  sub_1A40961CC();
  uint64_t result = sub_1A4096F7C();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1A4096E5C(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1A4096EAC();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1A4096E5C();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_1A3D989C8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF318);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096A0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A3D98B7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF318);
  uint64_t v3 = sub_1A4096A1C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1A4096F2C();
    swift_bridgeObjectRetain();
    sub_1A40961CC();
    uint64_t result = sub_1A4096F7C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A3D98E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t result = sub_1A4095A5C();
  uint64_t v10 = (_WORD *)result;
  if (result)
  {
    uint64_t result = sub_1A4095A8C();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    uint64_t v10 = (_WORD *)((char *)v10 + a1 - result);
  }
  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v13 = sub_1A4095A7C();
  if (v13 >= v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  unint64_t v15 = (char *)v10 + v14;
  if (v10) {
    uint64_t v16 = (uint64_t)v15;
  }
  else {
    uint64_t v16 = 0;
  }
  return sub_1A3D97780(v10, v16, a4, a5);
}

void *sub_1A3D98ED0(void *result, uint64_t a2, _WORD *a3)
{
  uint64_t v8 = *result;
  unint64_t v7 = result[1];
  BOOL v11 = result;
  switch(v7 >> 62)
  {
    case 1uLL:
      uint64_t v56 = *result;
      uint64_t v57 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = (void *)sub_1A3D991F8((int *)&v56, a2, a3);
      uint64_t v22 = v56;
      unint64_t v23 = v57 | 0x4000000000000000;
      goto LABEL_37;
    case 2uLL:
      uint64_t v56 = *result;
      uint64_t v57 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1A4095BAC();
      uint64_t v3 = v57;
      uint64_t v58 = v56;
      uint64_t v6 = *(void *)(v56 + 16);
      uint64_t v24 = sub_1A4095A5C();
      if (!v24) {
        goto LABEL_45;
      }
      uint64_t v4 = v24;
      uint64_t v25 = sub_1A4095A8C();
      uint64_t v26 = v6 - v25;
      if (__OFSUB__(v6, v25)) {
        goto LABEL_40;
      }
      uint64_t v5 = v25;
      uint64_t result = (void *)sub_1A4095A7C();
      unint64_t v27 = a2 - 1;
      if (__OFSUB__(a2, 1)) {
        goto LABEL_43;
      }
      if ((v27 & 0x8000000000000000) != 0) {
        goto LABEL_44;
      }
      _H0 = *a3;
      __asm { FCVT            S0, H0 }
      *(_DWORD *)(v4 + v26) = _S0;
      if (a2 == 1) {
        goto LABEL_29;
      }
      if (v27 < 0x10
        || (v26 + v4 + 4 < (unint64_t)&a3[a2]
          ? (_CF = (unint64_t)(a3 + 1) >= v4 + v6 + 4 * a2 - v5)
          : (_CF = 1),
            !_CF))
      {
LABEL_26:
        unint64_t v31 = 0;
LABEL_27:
        unint64_t v38 = ~v31 + a2;
        uint64_t v39 = &a3[v31 + 1];
        unint64_t v40 = (_DWORD *)(v6 + 4 * v31 - v5 + v4 + 4);
        do
        {
          __int16 v41 = *v39++;
          _H0 = v41;
          __asm { FCVT            S0, H0 }
          *v40++ = _S0;
          --v38;
        }
        while (v38);
        goto LABEL_29;
      }
      unint64_t v31 = v27 & 0xFFFFFFFFFFFFFFF0;
      uint64_t v32 = (float16x4_t *)(a3 + 9);
      uint64_t v33 = (float32x4_t *)(v26 + v4 + 36);
      unint64_t v34 = v27 & 0xFFFFFFFFFFFFFFF0;
      do
      {
        float16x8_t v35 = *(float16x8_t *)v32[-2].i8;
        float32x4_t v36 = vcvtq_f32_f16(*v32);
        float32x4_t v37 = vcvt_hight_f32_f16(*(float16x8_t *)v32->i8);
        v33[-2] = vcvtq_f32_f16(*(float16x4_t *)v35.i8);
        v33[-1] = vcvt_hight_f32_f16(v35);
        float32x4_t *v33 = v36;
        v33[1] = v37;
        v33 += 4;
        v32 += 4;
        v34 -= 16;
      }
      while (v34);
      if (v27 != v31) {
        goto LABEL_27;
      }
LABEL_29:
      *BOOL v11 = v58;
      v11[1] = v3 | 0x8000000000000000;
      return result;
    case 3uLL:
      if (__OFSUB__(a2, 1)) {
        goto LABEL_41;
      }
      if (((a2 - 1) & 0x8000000000000000) == 0) {
        return result;
      }
      __break(1u);
      goto LABEL_26;
    default:
      BYTE4(v56) = BYTE4(*result);
      BYTE5(v56) = BYTE5(v8);
      BYTE6(v56) = BYTE6(v8);
      HIBYTE(v56) = HIBYTE(v8);
      LOWORD(v57) = v7;
      BYTE2(v57) = BYTE2(v7);
      BYTE3(v57) = BYTE3(v7);
      unint64_t v12 = HIDWORD(v7);
      BYTE4(v57) = BYTE4(v7);
      unint64_t v13 = v7 >> 40;
      BYTE5(v57) = BYTE5(v7);
      unint64_t v14 = HIWORD(v7);
      BYTE6(v57) = v14;
      unint64_t v15 = a2 - 1;
      if (__OFSUB__(a2, 1))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        JUMPOUT(0x1A3D991E8);
      }
      if ((v15 & 0x8000000000000000) != 0) {
        goto LABEL_42;
      }
      _H0 = *a3;
      __asm { FCVT            S0, H0 }
      LODWORD(v56) = _S0;
      if (a2 == 1) {
        goto LABEL_36;
      }
      if (v15 >= 0x10)
      {
        unint64_t v21 = v15 & 0xFFFFFFFFFFFFFFF0;
        uint64_t v44 = (float16x4_t *)(a3 + 9);
        uint64_t v45 = (float32x4_t *)((char *)&v59 + 4);
        unint64_t v46 = v15 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          float16x8_t v47 = *(float16x8_t *)v44[-2].i8;
          float32x4_t v48 = vcvtq_f32_f16(*v44);
          float32x4_t v49 = vcvt_hight_f32_f16(*(float16x8_t *)v44->i8);
          v45[-2] = vcvtq_f32_f16(*(float16x4_t *)v47.i8);
          v45[-1] = vcvt_hight_f32_f16(v47);
          float32x4_t *v45 = v48;
          v45[1] = v49;
          v45 += 4;
          v44 += 4;
          v46 -= 16;
        }
        while (v46);
        if (v15 == v21) {
          goto LABEL_35;
        }
      }
      else
      {
        unint64_t v21 = 0;
      }
      unint64_t v50 = ~v21 + a2;
      uint64_t v51 = &a3[v21 + 1];
      uint64_t v52 = (_DWORD *)&v56 + v21 + 1;
      do
      {
        __int16 v53 = *v51++;
        _H0 = v53;
        __asm { FCVT            S0, H0 }
        *v52++ = _S0;
        --v50;
      }
      while (v50);
LABEL_35:
      LOBYTE(v12) = BYTE4(v57);
      LOBYTE(v13) = BYTE5(v57);
      LOBYTE(v14) = BYTE6(v57);
LABEL_36:
      uint64_t v22 = v56;
      unint64_t v23 = v57 | ((unint64_t)v12 << 32) | ((unint64_t)v13 << 40) | ((unint64_t)v14 << 48);
LABEL_37:
      *BOOL v11 = v22;
      v11[1] = v23;
      return result;
  }
}

uint64_t sub_1A3D991F8(int *a1, uint64_t a2, _WORD *a3)
{
  uint64_t result = sub_1A4095BDC();
  uint64_t v7 = *a1;
  if (a1[1] < (int)v7)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t result = sub_1A4095A5C();
  if (!result)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  uint64_t result = sub_1A4095A8C();
  uint64_t v9 = v7 - result;
  if (__OFSUB__(v7, result)) {
    goto LABEL_19;
  }
  uint64_t v10 = result;
  uint64_t result = sub_1A4095A7C();
  unint64_t v11 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  _H0 = *a3;
  __asm { FCVT            S0, H0 }
  *(_DWORD *)(v8 + v9) = _S0;
  if (a2 == 1) {
    return result;
  }
  if (v11 < 0x10 || v9 + v8 + 4 < (unint64_t)&a3[a2] && (unint64_t)(a3 + 1) < v8 + v7 + 4 * a2 - v10)
  {
    unint64_t v18 = 0;
LABEL_11:
    uint64_t v19 = ~v18 + a2;
    uint64_t v20 = &a3[v18 + 1];
    unint64_t v21 = (_DWORD *)(v7 + 4 * v18 - v10 + v8 + 4);
    do
    {
      __int16 v22 = *v20++;
      _H0 = v22;
      __asm { FCVT            S0, H0 }
      *v21++ = _S0;
      --v19;
    }
    while (v19);
    return result;
  }
  unint64_t v18 = v11 & 0xFFFFFFFFFFFFFFF0;
  uint64_t v25 = (float16x4_t *)(a3 + 9);
  uint64_t v26 = (float32x4_t *)(v9 + v8 + 36);
  unint64_t v27 = v11 & 0xFFFFFFFFFFFFFFF0;
  do
  {
    float16x8_t v28 = *(float16x8_t *)v25[-2].i8;
    float32x4_t v29 = vcvtq_f32_f16(*v25);
    float32x4_t v30 = vcvt_hight_f32_f16(*(float16x8_t *)v25->i8);
    v26[-2] = vcvtq_f32_f16(*(float16x4_t *)v28.i8);
    v26[-1] = vcvt_hight_f32_f16(v28);
    float32x4_t *v26 = v29;
    v26[1] = v30;
    v26 += 4;
    v25 += 4;
    v27 -= 16;
  }
  while (v27);
  if (v11 != v18) {
    goto LABEL_11;
  }
  return result;
}

unint64_t sub_1A3D9935C()
{
  return 0xD00000000000003ALL;
}

uint64_t type metadata accessor for ScreenGazeDetector_iPad()
{
  return self;
}

void *sub_1A3D9939C()
{
  return &unk_1E95EF320;
}

uint64_t sub_1A3D993A8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  *(void *)&v20[0] = 0xD00000000000002FLL;
  *((void *)&v20[0] + 1) = 0x80000001A40B64D0;
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A3CB0BA4(a1);
  if (!v2)
  {
    if (*(void *)(a1 + 16)
      && (unsigned int v6 = LOBYTE(v20[0]), v7 = sub_1A3C8C844(0x69536E6565726373, 0xEA0000000000657ALL), (v8 & 1) != 0))
    {
      sub_1A3C8D3F0(*(void *)(a1 + 56) + 32 * v7, (uint64_t)v19);
      sub_1A3C856F4(v19, v20);
      if (v6 >> 3 == 31)
      {
        sub_1A3C8D3F0((uint64_t)v20, (uint64_t)v19);
        if (swift_dynamicCast())
        {
          if (v18) {
            uint64_t v9 = type metadata accessor for ScreenGazeDetector_iPad();
          }
          else {
            uint64_t v9 = type metadata accessor for ScreenGazeDetector_iPhone();
          }
          uint64_t v10 = swift_bridgeObjectRetain();
          unint64_t v11 = sub_1A3D95DF8(v10);
          a2[3] = v9;
          a2[4] = &off_1EC382FC8;
          *a2 = v11;
        }
        else
        {
          sub_1A4096A2C();
          sub_1A409621C();
          sub_1A4096BAC();
          sub_1A3C85624();
          swift_allocError();
          static VisionError.invalidArgument(message:)(0, 0xE000000000000000, v17);
          swift_bridgeObjectRelease();
          swift_willThrow();
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      }
      else
      {
        LOWORD(v19[0]) = v6;
        sub_1A3CFB1AC();
        uint64_t v13 = sub_1A4096E1C();
        uint64_t v15 = v14;
        sub_1A3C85624();
        swift_allocError();
        static VisionError.unsupportedRevision(message:)(v13, v15, v16);
        swift_bridgeObjectRelease();
        swift_willThrow();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      }
    }
    else
    {
      sub_1A3C85624();
      swift_allocError();
      static VisionError.invalidArgument(message:)(0xD00000000000001CLL, 0x80000001A40B66E0, v12);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1A3D996F4(char a1)
{
  if (a1) {
    return 0x656A624F65636166;
  }
  else {
    return 0x69536E6565726373;
  }
}

uint64_t sub_1A3D9973C()
{
  return 31096;
}

float sub_1A3D99748()
{
  return 1.2;
}

uint64_t sub_1A3D99758(char *a1, char *a2)
{
  return sub_1A3D99764(*a1, *a2);
}

uint64_t sub_1A3D99764(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656A624F65636166;
  }
  else {
    uint64_t v3 = 0x69536E6565726373;
  }
  if (v2) {
    unint64_t v4 = 0xEA0000000000657ALL;
  }
  else {
    unint64_t v4 = 0xEF65746174537463;
  }
  if (a2) {
    uint64_t v5 = 0x656A624F65636166;
  }
  else {
    uint64_t v5 = 0x69536E6565726373;
  }
  if (a2) {
    unint64_t v6 = 0xEF65746174537463;
  }
  else {
    unint64_t v6 = 0xEA0000000000657ALL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1A3D9981C()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D998B0()
{
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3D99930()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D999C0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A4096C5C();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1A3D99A20(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x69536E6565726373;
  if (*v1) {
    uint64_t v2 = 0x656A624F65636166;
  }
  unint64_t v3 = 0xEA0000000000657ALL;
  if (*v1) {
    unint64_t v3 = 0xEF65746174537463;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A3D99A70@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 296))();
  if (!v2)
  {
    sub_1A3CB1CD8();
    uint64_t v6 = v5;
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
      sub_1A4095B2C();
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_1A4095B9C();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A3D99B50(uint64_t a1)
{
  void (*v13)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t);
  long long v14;
  uint64_t v15;
  unsigned char v16[40];

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + 320);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = v5(v6);
  if (v2) {
    return swift_release();
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = sub_1A3CEF9A8();
  swift_beginAccess();
  uint64_t v13 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t))(*(void *)*v12 + 120);
  swift_retain();
  swift_retain();
  v13(&v14, v10, v11, sub_1A3D9A630, v4);
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
    swift_release();
    sub_1A3C856DC(&v14, (uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF2D0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF330);
    return swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D99D00()
{
  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t sub_1A3D99D28@<X0>(unint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  unint64_t v93 = a1;
  uint64_t v92 = a4;
  uint64_t v94 = *v4;
  uint64_t v8 = type metadata accessor for FaceObservation();
  uint64_t v91 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v80[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF340);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v80[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for SingleFaceTemporalGazeState(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = &v80[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v18 = *a2;
  int v19 = a2[1];
  uint64_t result = sub_1A3CB00BC(0x656A624F65636166, 0xEF65746174537463, a3, v20, (uint64_t)v13);
  if (!v5)
  {
    uint64_t v90 = 0;
    uint64_t v22 = v94;
    int v99 = v18;
    uint64_t v88 = v10;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_1A3D9A814((uint64_t)v13);
      sub_1A3C85624();
      swift_allocError();
      static VisionError.internalError(message:)(0xD000000000000047, 0x80000001A40B6730, v23);
      return swift_willThrow();
    }
    int v81 = v19;
    uint64_t v87 = v17;
    sub_1A3D9A874((uint64_t)v13, (uint64_t)v17);
    uint64_t v24 = swift_allocObject();
    uint64_t v82 = v24 + 16;
    sub_1A3DF5B2C(v24 + 16);
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v22;
    uint64_t v27 = (*(uint64_t (**)(void))(v22 + 472))();
    uint64_t v29 = v28;
    *(void *)(v25 + 16) = v27;
    uint64_t v83 = v25 + 16;
    *(void *)(v25 + 24) = v28;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = 8;
    uint64_t v84 = (uint64_t *)(v30 + 16);
    v98.n128_u64[0] = v93;
    unint64_t v31 = (void *)swift_allocObject();
    v31[2] = v30;
    v31[3] = v25;
    _OWORD v31[4] = v24;
    uint64_t v32 = type metadata accessor for NamedObjects();
    unint64_t v33 = sub_1A3D97EAC();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v89 = v25;
    swift_retain();
    uint64_t v86 = v24;
    swift_retain();
    uint64_t v85 = v32;
    uint64_t v34 = v32;
    uint64_t v35 = v33;
    uint64_t v36 = v33;
    uint64_t v37 = v90;
    sub_1A3E0B2A4(v27, v29, (void (*)(uint64_t, unint64_t))sub_1A3D9ACC4, (uint64_t)v31, v34, v36);
    if (v37)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v58 = (uint64_t)v87;
    }
    else
    {
      uint64_t v90 = v30;
      swift_release();
      uint64_t v38 = swift_bridgeObjectRelease();
      uint64_t v39 = *(uint64_t (**)(uint64_t))(v26 + 480);
      uint64_t v40 = v39(v38);
      uint64_t v42 = v41;
      swift_beginAccess();
      uint64_t v43 = v89;
      *(void *)(v89 + 16) = v40;
      *(void *)(v43 + 24) = v42;
      swift_bridgeObjectRelease();
      uint64_t v44 = v84;
      uint64_t v45 = swift_beginAccess();
      *uint64_t v44 = 12;
      v98.n128_u64[0] = v93;
      uint64_t v46 = v39(v45);
      uint64_t v48 = v47;
      uint64_t v49 = *v44;
      uint64_t v51 = *(void *)(v43 + 16);
      uint64_t v50 = *(void *)(v43 + 24);
      uint64_t v52 = (void *)swift_allocObject();
      __n128 v52[2] = v49;
      v52[3] = v51;
      uint64_t v53 = v86;
      v52[4] = v50;
      v52[5] = v53;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1A3E0B2A4(v46, v48, (void (*)(uint64_t, unint64_t))sub_1A3D9B0D0, (uint64_t)v52, v85, v35);
      swift_release();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      float32x2_t v54 = *(float32x2_t *)(v53 + 16);
      float v55 = *(float *)(v53 + 24);
      double v56 = *(double *)(v53 + 32);
      double v57 = *(double *)(v53 + 40);
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      uint64_t v58 = (uint64_t)v87;
      if (v87[16] == 1)
      {
        uint64_t v59 = (char *)*((void *)v87 + 7);
        uint64_t v60 = *((void *)v59 + 2);
        uint64_t v61 = v92;
        uint64_t v62 = (uint64_t)v88;
        uint64_t v63 = v91;
        if (v60 == *((void *)v87 + 1))
        {
          if (!v60)
          {
            __break(1u);
            return result;
          }
          float v64 = *((float *)v59 + 10);
          float32x2_t v65 = *(float32x2_t *)(v59 + 32);
          *(float64x2_t *)(v87 + 40) = vsubq_f64(*(float64x2_t *)(v87 + 40), *((float64x2_t *)v59 + 3));
          *(float32x2_t *)(v58 + 24) = vsub_f32(*(float32x2_t *)(v58 + 24), v65);
          *(float *)(v58 + 32) = *(float *)(v58 + 32) - v64;
          sub_1A3D9AB54(0, 1);
          uint64_t v59 = *(char **)(v58 + 56);
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v59 = sub_1A3D9AA58(0, *((void *)v59 + 2) + 1, 1, v59);
        }
        unint64_t v67 = *((void *)v59 + 2);
        unint64_t v66 = *((void *)v59 + 3);
        uint64_t v68 = v67 + 1;
        if (v67 >= v66 >> 1) {
          uint64_t v59 = sub_1A3D9AA58((char *)(v66 > 1), v67 + 1, 1, v59);
        }
        *((void *)v59 + 2) = v68;
        unsigned __int16 v69 = &v59[32 * v67];
        *((float32x2_t *)v69 + 4) = v54;
        *((float *)v69 + 10) = v55;
        *((double *)v69 + 6) = v56;
        *((double *)v69 + 7) = v57;
        *(void *)(v58 + 56) = v59;
        double v70 = v56 + *(double *)(v58 + 40);
        double v71 = v57 + *(double *)(v58 + 48);
        *(double *)(v58 + 40) = v70;
        *(double *)(v58 + 48) = v71;
        int32x2_t v72 = vdup_n_s32(0x7F800000u);
        float32x2_t v73 = vadd_f32(v54, (float32x2_t)vbsl_s8(vorn_s8((int8x8_t)vceqz_s32((int32x2_t)vand_s8(*(int8x8_t *)(v58 + 24), (int8x8_t)0x7F0000007FLL)), (int8x8_t)vceq_s32((int32x2_t)vand_s8(*(int8x8_t *)(v58 + 24), (int8x8_t)v72), v72)), *(int8x8_t *)(v58 + 24), (int8x8_t)0x8000000080000000));
        *(float32x2_t *)(v58 + 24) = v73;
        float v74 = *(float *)(v58 + 32);
        if ((LODWORD(v74) & 0x7FFFFF) != 0 && (~LODWORD(v74) & 0x7F800000) == 0) {
          float v74 = -0.0;
        }
        float v76 = v55 + v74;
        *(float *)(v58 + 32) = v76;
        sub_1A3DF5B2C((uint64_t)&v98);
        double v77 = (double)v68;
        double v56 = v70 / (double)v68;
        double v57 = v71 / (double)v68;
        *(float *)&double v77 = (float)v68;
        float32x2_t v54 = vdiv_f32(v73, (float32x2_t)vdup_lane_s32(*(int32x2_t *)&v77, 0));
        float v55 = v76 / (float)v68;
      }
      else
      {
        uint64_t v61 = v92;
        uint64_t v62 = (uint64_t)v88;
        uint64_t v63 = v91;
      }
      v95.n128_u64[0] = (unint64_t)v54;
      v95.n128_f32[2] = v55;
      double v96 = v56;
      double v97 = v57;
      v100[0] = v99;
      v100[1] = v81;
      sub_1A3DF65AC(&v95, v100, &v98);
      v98.n128_u64[1] = v98.n128_u32[2];
      sub_1A3D0A44C((uint64_t)&v98, v62);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF410);
      unint64_t v78 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_1A40E7700;
      sub_1A3CF54DC(v62, v79 + v78);
      void v61[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF300);
      uint64_t *v61 = v79;
      sub_1A3CB9B74(v62, (uint64_t (*)(void))type metadata accessor for FaceObservation);
    }
    return sub_1A3CB9B74(v58, type metadata accessor for SingleFaceTemporalGazeState);
  }
  return result;
}

void *sub_1A3D9A5DC(uint64_t a1)
{
  return sub_1A3DA1D70(a1);
}

uint64_t sub_1A3D9A5F8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3D9A630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t result = (*(uint64_t (**)(void))(v5 + 344))(*(void *)(v3 + 24));
  if (!v2)
  {
    uint64_t v7 = result;
    if (result)
    {
      uint64_t v8 = (*(uint64_t (**)(void))(v5 + 464))();
      uint64_t v10 = v9;
      uint64_t v11 = (*(uint64_t (**)(void))(v5 + 456))();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF370);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1A40FB4C0;
      *(void *)(v14 + 32) = (*(uint64_t (**)(void))(v5 + 472))();
      *(void *)(v14 + 40) = v15;
      *(void *)(v14 + 48) = (*(uint64_t (**)(void))(v5 + 480))();
      *(void *)(v14 + 56) = v16;
      sub_1A3E0F298(v7, v8, v10, v11, v13, v14, 0, 0, v20, 0, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v21;
      int v18 = __swift_project_boxed_opaque_existential_1(v20, v21);
      a1[3] = v17;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(boxed_opaque_existential_1, v18, v17);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A3D9A814(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF340);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3D9A874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleFaceTemporalGazeState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A3D9A8DC()
{
  unint64_t result = qword_1E95EF348;
  if (!qword_1E95EF348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF348);
  }
  return result;
}

uint64_t type metadata accessor for ScreenGazeDetector()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ScreenGazeDetector.Options(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3D9AA20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenGazeDetector.Options()
{
  return &type metadata for ScreenGazeDetector.Options;
}

char *sub_1A3D9AA58(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF358);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1A3D9AB54(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    unint64_t result = (unint64_t)sub_1A3D9AA58((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  unint64_t result = v4 + 32 + 32 * v6;
  uint64_t v14 = (const void *)(v4 + 32 + 32 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 32 * v13) {
    unint64_t result = (unint64_t)memmove((void *)result, v14, 32 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A3D9AC5C()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3D9AC6C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A3D9AC7C()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A3D9ACC4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  int64_t v5 = (void *)(v2[2] + 16);
  unint64_t v6 = a2 >> 62;
  uint64_t v9 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        sub_1A4095A7C();
        __break(1u);
LABEL_25:
        sub_1A4095A7C();
        __break(1u);
        JUMPOUT(0x1A3D9B070);
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      swift_beginAccess();
      if (v9 >= *v5)
      {
        switch((int)v6)
        {
          case 1:
            if ((int)a1 > a1 >> 32) {
              goto LABEL_21;
            }
            sub_1A3C7D1A8(a1, a2);
            uint64_t v16 = sub_1A4095A5C();
            if (!v16) {
              goto LABEL_24;
            }
            uint64_t v17 = v16;
            uint64_t v18 = sub_1A4095A8C();
            uint64_t v19 = (int)a1 - v18;
            if (__OFSUB__((int)a1, v18)) {
              goto LABEL_23;
            }
            sub_1A4095A7C();
            double v20 = *(float *)(v17 + v19);
            swift_beginAccess();
            *(double *)(v4 + 32) = v20;
            *(double *)(v4 + 40) = *(float *)(v17 + v19 + 4);
            uint64_t result = sub_1A3C7D218(a1, a2);
            break;
          case 2:
            uint64_t v21 = *(void *)(a1 + 16);
            swift_retain();
            swift_retain();
            uint64_t v22 = sub_1A4095A5C();
            if (!v22) {
              goto LABEL_25;
            }
            uint64_t v23 = v22;
            uint64_t v24 = sub_1A4095A8C();
            BOOL v25 = __OFSUB__(v21, v24);
            uint64_t v26 = v21 - v24;
            if (v25) {
              goto LABEL_22;
            }
            sub_1A4095A7C();
            uint64_t v27 = (float *)(v23 + v26);
            double v28 = *v27;
            swift_beginAccess();
            *(double *)(v4 + 32) = v28;
            *(double *)(v4 + 40) = v27[1];
            swift_release();
            return swift_release();
          case 3:
            uint64_t result = swift_beginAccess();
            *(void *)(v4 + 32) = 0;
            *(void *)(v4 + 40) = 0;
            return result;
          default:
            uint64_t result = swift_beginAccess();
            *(double *)(v4 + 32) = *(float *)&a1;
            *(double *)(v4 + 40) = *((float *)&a1 + 1);
            return result;
        }
      }
      else
      {
        sub_1A4096A2C();
        swift_beginAccess();
        uint64_t v13 = *(void *)(v3 + 16);
        uint64_t v12 = *(void *)(v3 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        swift_beginAccess();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(v13, v12, v14);
        swift_bridgeObjectRelease();
        return swift_willThrow();
      }
      return result;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_20;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1A3D9B090()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3D9B0D0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  unint64_t v7 = (_DWORD *)v2[5];
  unint64_t v8 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v10 < v4)
      {
LABEL_14:
        sub_1A4096A2C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(v5, v6, v19);
        swift_bridgeObjectRelease();
        return swift_willThrow();
      }
      else if (v8)
      {
        if (v8 == 1)
        {
          if ((int)a1 <= a1 >> 32)
          {
            sub_1A3C7D1A8(a1, a2);
            uint64_t v13 = sub_1A4095A5C();
            if (!v13)
            {
LABEL_25:
              sub_1A4095A7C();
              __break(1u);
              goto LABEL_26;
            }
            uint64_t v14 = v13;
            uint64_t v15 = sub_1A4095A8C();
            uint64_t v16 = (int)a1 - v15;
            if (!__OFSUB__((int)a1, v15))
            {
              sub_1A4095A7C();
              int v17 = *(_DWORD *)(v14 + v16);
              swift_beginAccess();
              v7[4] = v17;
              v7[5] = *(_DWORD *)(v14 + v16 + 4);
              v7[6] = *(_DWORD *)(v14 + v16 + 8);
              return sub_1A3C7D218(a1, a2);
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
          goto LABEL_22;
        }
        uint64_t v20 = *(void *)(a1 + 16);
        swift_retain();
        swift_retain();
        uint64_t v21 = sub_1A4095A5C();
        if (!v21)
        {
LABEL_26:
          sub_1A4095A7C();
          __break(1u);
          JUMPOUT(0x1A3D9B410);
        }
        uint64_t v22 = v21;
        uint64_t v23 = sub_1A4095A8C();
        BOOL v24 = __OFSUB__(v20, v23);
        uint64_t v25 = v20 - v23;
        if (v24) {
          goto LABEL_23;
        }
        sub_1A4095A7C();
        uint64_t v26 = (int *)(v22 + v25);
        int v27 = *v26;
        swift_beginAccess();
        v7[4] = v27;
        v7[5] = v26[1];
        v7[6] = v26[2];
        swift_release();
        return swift_release();
      }
      else
      {
        uint64_t result = swift_beginAccess();
        *((void *)v7 + 2) = a1;
        v7[6] = a2;
      }
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_6;
      }
      goto LABEL_21;
    case 3uLL:
      if (v4 > 0) {
        goto LABEL_14;
      }
      uint64_t result = swift_beginAccess();
      *((void *)v7 + 2) = 0;
      v7[6] = 0;
      return result;
    default:
      uint64_t v10 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1A3D9B424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 200) = a5;
  *(void *)(v6 + 208) = v5;
  *(unsigned char *)(v6 + 248) = a4;
  *(void *)(v6 + 184) = a2;
  *(void *)(v6 + 192) = a3;
  *(void *)(v6 + 176) = a1;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 128)
                                                                            + **(int **)(*(void *)v5 + 128));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 216) = v11;
  *uint64_t v11 = v6;
  v11[1] = sub_1A3D9B56C;
  return v13(v6 + 16, a2, a3, a4, a5);
}

uint64_t sub_1A3D9B56C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  if (v0) {
    uint64_t v4 = sub_1A3D9BA48;
  }
  else {
    uint64_t v4 = sub_1A3D9B698;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1A3D9B698()
{
  sub_1A3D9BACC(v0 + 16, v0 + 56);
  uint64_t v1 = *(void *)(v0 + 80);
  sub_1A3CA2EB8(v0 + 56, (uint64_t *)&unk_1E95EF380);
  if (v1)
  {
    uint64_t result = sub_1A3D9BACC(v0 + 16, v0 + 136);
    if (*(void *)(v0 + 160))
    {
      uint64_t v3 = *(void *)(v0 + 176);
      sub_1A3CA2EB8(v0 + 16, (uint64_t *)&unk_1E95EF380);
      sub_1A3C856DC((long long *)(v0 + 136), v3);
      uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
      return v4();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)(v0 + 208)
                                                                                          + 136)
                                                                              + **(int **)(**(void **)(v0 + 208)
                                                                                         + 136));
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1A3D9B850;
    uint64_t v6 = *(void *)(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v9 = *(unsigned __int8 *)(v0 + 248);
    return v10(v0 + 96, v7, v8, v9, v6);
  }
  return result;
}

uint64_t sub_1A3D9B850()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  if (v0) {
    uint64_t v4 = sub_1A3D9BA60;
  }
  else {
    uint64_t v4 = sub_1A3D9B97C;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1A3D9B97C()
{
  sub_1A3CA2EB8(v0 + 16, (uint64_t *)&unk_1E95EF380);
  sub_1A3CCB8B8(v0 + 96, v0 + 16, (uint64_t *)&unk_1E95EF380);
  uint64_t result = sub_1A3D9BACC(v0 + 16, v0 + 136);
  if (*(void *)(v0 + 160))
  {
    uint64_t v2 = *(void *)(v0 + 176);
    sub_1A3CA2EB8(v0 + 16, (uint64_t *)&unk_1E95EF380);
    sub_1A3C856DC((long long *)(v0 + 136), v2);
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D9BA48()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A3D9BA60()
{
  sub_1A3CA2EB8(v0 + 16, (uint64_t *)&unk_1E95EF380);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3D9BACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3D9BB34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 144) = a5;
  *(void *)(v6 + 152) = v5;
  *(unsigned char *)(v6 + 160) = a4;
  *(void *)(v6 + 128) = a2;
  *(void *)(v6 + 136) = a3;
  *(void *)(v6 + 120) = a1;
  return MEMORY[0x1F4188298](sub_1A3D9BB60, v5, 0);
}

uint64_t sub_1A3D9BB60()
{
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 152);
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v16 = v0 + 16;
    uint64_t v5 = v3 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = *(void *)(v0 + 136);
      uint64_t v6 = *(void *)(v0 + 144);
      uint64_t v8 = *(void *)(v0 + 128);
      uint64_t v9 = *(unsigned __int8 *)(v0 + 160);
      sub_1A3C85678(v5, v0 + 56);
      uint64_t v11 = *(void *)(v0 + 80);
      uint64_t v10 = *(void *)(v0 + 88);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v11);
      if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9, v6, v11, v10))break; {
      __swift_destroy_boxed_opaque_existential_1(v0 + 56);
      }
      v5 += 40;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v0 + 16;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v1 = v0 + 16;
    sub_1A3CA2EB8(v16, &qword_1E95EF390);
    sub_1A3C85678(v0 + 56, v16);
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
LABEL_7:
  sub_1A3CCB8B8(v1, v0 + 56, &qword_1E95EF390);
  uint64_t v12 = *(void *)(v0 + 120);
  if (*(void *)(v0 + 80))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF398);
    __swift_instantiateConcreteTypeFromMangledName(qword_1E95EF3A0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v13 = *(void *)(v0 + 120);
      *(void *)(v13 + 32) = 0;
      *(_OWORD *)uint64_t v13 = 0u;
      *(_OWORD *)(v13 + 16) = 0u;
    }
  }
  else
  {
    sub_1A3CA2EB8(v0 + 56, &qword_1E95EF390);
    *(_OWORD *)uint64_t v12 = 0u;
    *(_OWORD *)(v12 + 16) = 0u;
    *(void *)(v12 + 32) = 0;
  }
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1A3D9BD98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 144) = a5;
  *(void *)(v6 + 152) = v5;
  *(unsigned char *)(v6 + 160) = a4;
  *(void *)(v6 + 128) = a2;
  *(void *)(v6 + 136) = a3;
  *(void *)(v6 + 120) = a1;
  return MEMORY[0x1F4188298](sub_1A3D9BDC4, v5, 0);
}

uint64_t sub_1A3D9BDC4()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 160);
  uint64_t v5 = type metadata accessor for Detector();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 88))(v3, v1, v4, v2);
  uint64_t v6 = *(void *)(v0 + 152);
  sub_1A3C85678(*(void *)(v0 + 120), v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E95EF3A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF398);
  swift_dynamicCast();
  uint64_t v7 = (void *)(v6 + 112);
  swift_beginAccess();
  uint64_t v8 = *(void **)(v6 + 112);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v6 + 112) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_1A3D9CD28(0, v8[2] + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v8 = sub_1A3D9CD28((void *)(v10 > 1), v11 + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  _OWORD v8[2] = v11 + 1;
  sub_1A3C856DC((long long *)(v0 + 56), (uint64_t)&v8[5 * v11 + 4]);
  swift_endAccess();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1A3D9BF88(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = v4;
  *(unsigned char *)(v5 + 72) = a3;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a2;
  return MEMORY[0x1F4188298](sub_1A3D9BFB0, v4, 0);
}

uint64_t sub_1A3D9BFB0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v4 = (uint64_t *)(*(void *)(v0 + 64) + 112);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 72);
  swift_beginAccess();
  sub_1A3CE11C8(v3, v2, v5);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A3D9CE4C(v4, v3, v2, v5, v1);
  int64_t v7 = *(void *)(*v4 + 16);
  if (v7 < result)
  {
    __break(1u);
  }
  else
  {
    sub_1A3D9D200(result, v7);
    swift_endAccess();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  return result;
}

uint64_t sub_1A3D9C09C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v56 = a5;
  uint64_t v9 = sub_1A4095ECC();
  uint64_t v54 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v52 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v45 - v12;
  uint64_t v13 = sub_1A4095EFC();
  uint64_t v55 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 24);
  uint64_t v57 = a3;
  uint64_t v18 = a3;
  uint64_t v19 = v56;
  LODWORD(v58) = a4;
  LODWORD(v20) = v17(a2, v18, a4, v56, v16, v20);
  if ((v20 & 1) == 0) {
    return v20 & 1;
  }
  uint64_t v51 = v9;
  uint64_t v21 = sub_1A3D9236C();
  uint64_t v22 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v15, v21, v13);
  uint64_t v23 = sub_1A3D92218();
  uint64_t v50 = *v23;
  char v24 = *((unsigned char *)v23 + 16);
  uint64_t v25 = v57;
  unsigned __int8 v26 = v58;
  sub_1A3CE11C8(a2, v57, v58);
  swift_bridgeObjectRetain();
  sub_1A3CE11C8(a2, v25, v26);
  swift_bridgeObjectRetain();
  int v27 = v53;
  sub_1A4095EBC();
  double v28 = sub_1A4095EDC();
  int v49 = sub_1A409679C();
  if ((sub_1A40968EC() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    uint64_t v31 = v57;
    unsigned __int8 v32 = v58;
    sub_1A3CE124C(a2, v57, v58);
    sub_1A3CE124C(a2, v31, v32);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v51);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v13);
    return v20 & 1;
  }
  os_log_t v45 = v28;
  unsigned __int8 v29 = v58;
  uint64_t v47 = v15;
  uint64_t v48 = v13;
  int v46 = v20;
  if (v24)
  {
    if ((unint64_t)v50 >> 32)
    {
      __break(1u);
    }
    else
    {
      uint64_t v30 = v51;
      if (v50 >> 11 == 27)
      {
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      if (v50 >> 16 <= 0x10)
      {
        uint64_t v19 = v57;
        uint64_t v50 = &v63;
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v19 = v57;
  if (v50)
  {
    uint64_t v30 = v51;
LABEL_11:
    unint64_t v33 = v52;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v52, v27, v30);
    uint64_t v34 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v59 = a2;
    uint64_t v62 = v58;
    *(_DWORD *)uint64_t v34 = 136315394;
    uint64_t v60 = v19;
    unsigned __int8 v61 = v29;
    sub_1A3CE11C8(a2, v19, v29);
    uint64_t v35 = sub_1A409619C();
    uint64_t v59 = sub_1A3CB8AB0(v35, v36, &v62);
    sub_1A409695C();
    swift_bridgeObjectRelease();
    sub_1A3CE124C(a2, v19, v29);
    sub_1A3CE124C(a2, v19, v29);
    *(_WORD *)(v34 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1A409603C();
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v59 = sub_1A3CB8AB0(v20, v38, &v62);
    sub_1A409695C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_signpost_id_t v39 = sub_1A4095EAC();
    os_log_t v40 = v45;
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v45, (os_signpost_type_t)v49, v39, v50, "Session is releasing detector of type %s with options %s", (uint8_t *)v34, 0x16u);
    uint64_t v41 = v58;
    swift_arrayDestroy();
    MEMORY[0x1A6257B40](v41, -1, -1);
    MEMORY[0x1A6257B40](v34, -1, -1);

    uint64_t v42 = *(void (**)(char *, uint64_t))(v54 + 8);
    uint64_t v43 = v51;
    v42(v27, v51);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v47, v48);
    v42(v33, v43);
    LOBYTE(v20) = v46;
    return v20 & 1;
  }
LABEL_16:
  swift_bridgeObjectRelease_n();
  sub_1A3CE124C(a2, v19, v29);
  uint64_t result = sub_1A3CE124C(a2, v19, v29);
  __break(1u);
  return result;
}

uint64_t sub_1A3D9C634()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x1F4188298](sub_1A3D9C654, v0, 0);
}

uint64_t sub_1A3D9C654()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_beginAccess();
  *(void *)(v1 + 112) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A3D9C6D8()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1A3D9C710()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = MEMORY[0x1E4FBC860];
  return v0;
}

uint64_t sub_1A3D9C754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v5 + 120)
                                                                            + **(int **)(**(void **)v5 + 120));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1A3C8D594;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t sub_1A3D9C890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v5 + 128)
                                                                            + **(int **)(**(void **)v5 + 128));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1A3C8A9A4;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t sub_1A3D9C9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v5 + 136)
                                                                            + **(int **)(**(void **)v5 + 136));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1A3C8D594;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t sub_1A3D9CB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v4 + 144)
                                                                   + **(int **)(**(void **)v4 + 144));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1A3C8A9A4;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_1A3D9CC30()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(**(void **)v0 + 152) + **(int **)(**(void **)v0 + 152));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A3C8D594;
  return v4();
}

void *sub_1A3D9CD28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF3E8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A3D9D0F0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3D9CE4C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v28 = a1;
  uint64_t v10 = *a1;
  uint64_t v11 = *(void *)(*a1 + 16);
  if (!v11)
  {
    unint64_t v12 = 0;
LABEL_11:
    sub_1A3CE124C(a2, a3, a4);
    swift_bridgeObjectRelease();
    return v12;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = 0;
  uint64_t v13 = 72;
  while (1)
  {
    char v14 = sub_1A3D9C09C((void *)(v10 + v13 - 40), a2, a3, a4, a5);
    if (v5)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (v14) {
      break;
    }
    ++v12;
    v13 += 40;
    if (v11 == v12)
    {
      swift_bridgeObjectRelease();
      unint64_t v12 = *(void *)(v10 + 16);
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v12, 1))
  {
    unint64_t v16 = *(void *)(v10 + 16);
    if (v12 + 1 == v16) {
      goto LABEL_11;
    }
    unint64_t v17 = v12 + 1;
    while (v17 < v16)
    {
      sub_1A3C85678(v10 + v13, (uint64_t)v27);
      char v18 = sub_1A3D9C09C(v27, a2, a3, a4, a5);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      if ((v18 & 1) == 0)
      {
        if (v17 != v12)
        {
          if ((v12 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          uint64_t v19 = (void *)*v28;
          unint64_t v20 = *(void *)(*v28 + 16);
          if (v12 >= v20) {
            goto LABEL_32;
          }
          uint64_t result = sub_1A3C85678((uint64_t)&v19[5 * v12 + 4], (uint64_t)v27);
          if (v17 >= v20) {
            goto LABEL_33;
          }
          sub_1A3C85678((uint64_t)&v19[(unint64_t)v13 / 8], (uint64_t)v26);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *double v28 = (uint64_t)v19;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1A3D9D0DC(v19);
            uint64_t v19 = (void *)result;
            *double v28 = result;
          }
          if (v12 >= v19[2]) {
            goto LABEL_34;
          }
          uint64_t v21 = (uint64_t)&v19[5 * v12 + 4];
          __swift_destroy_boxed_opaque_existential_1(v21);
          uint64_t result = sub_1A3C856DC(v26, v21);
          uint64_t v22 = *v28;
          if (v17 >= *(void *)(*v28 + 16)) {
            goto LABEL_35;
          }
          uint64_t v23 = v22 + v13;
          __swift_destroy_boxed_opaque_existential_1(v22 + v13);
          uint64_t result = sub_1A3C856DC(v27, v23);
        }
        if (__OFADD__(v12++, 1)) {
          goto LABEL_30;
        }
      }
      unint64_t v25 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_29;
      }
      uint64_t v10 = *v28;
      unint64_t v16 = *(void *)(*v28 + 16);
      ++v17;
      v13 += 40;
      if (v25 == v16) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1A3D9D0DC(void *a1)
{
  return sub_1A3D9CD28(0, a1[2], 0, a1);
}

uint64_t sub_1A3D9D0F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF398);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A4096C3C();
  __break(1u);
  return result;
}

uint64_t sub_1A3D9D200(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1A3D9CD28(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF398);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    unint64_t v16 = (char *)&v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= (void *)&v16[40 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      _OWORD v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1A4096C3C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DetectorCache()
{
  return self;
}

uint64_t sub_1A3D9D3A4(uint64_t a1)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A3CB0BA4(a1);
  if (!v1)
  {
    sub_1A3CFB1AC();
    uint64_t v4 = sub_1A4096E1C();
    uint64_t v6 = v5;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.unsupportedRevision(message:)(v4, v6, v7);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1A3D9D53C()
{
  return 0xD000000000000038;
}

uint64_t sub_1A3D9D558(uint64_t a1)
{
  void (*v11)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t);
  long long v12;
  uint64_t v13;
  unsigned char v14[40];

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A3DA1C90();
  if (v2) {
    return swift_release();
  }
  uint64_t v8 = v5;
  uint64_t v9 = v6;
  uint64_t v10 = sub_1A3CEF9A8();
  swift_beginAccess();
  int64_t v11 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t))(*(void *)*v10 + 120);
  swift_retain();
  swift_retain();
  v11(&v12, v8, v9, sub_1A3D9DA78, v4);
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v13)
  {
    swift_release();
    sub_1A3C856DC(&v12, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF2D0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF330);
    return swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D9D6F8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v34 = a3;
  uint64_t v30 = a4;
  uint64_t v8 = type metadata accessor for FaceObservation();
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF2E8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v35 = (uint64_t)&v30 - v15;
  int v16 = *a2;
  int v32 = a2[1];
  int v33 = v16;
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  uint64_t v36 = a1;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A40FB650;
  *(void *)(v18 + 32) = 0xEE0065726F63735FLL;
  *(void *)(v18 + 40) = v17;
  uint64_t v19 = type metadata accessor for NamedObjects();
  unint64_t v20 = sub_1A3D97EAC();
  swift_retain();
  sub_1A3E0B2A4(0x7373656E6576696CLL, 0xEE0065726F63735FLL, (void (*)(uint64_t, unint64_t))sub_1A3D9DBDC, v18, v19, v20);
  if (v5)
  {
    swift_release();
    return swift_release();
  }
  swift_release();
  swift_beginAccess();
  float v21 = *(float *)(v17 + 16);
  v39[0] = v33;
  v39[1] = v32;
  sub_1A3DF6E8C(v39, (uint64_t)&v37, v21);
  int v22 = v37;
  __int16 v23 = v38;
  sub_1A3CB0C64(v34, v35);
  sub_1A3D98280(v35, (uint64_t)v13);
  uint64_t v24 = v31;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v13, 1, v8);
  if (result != 1)
  {
    int v37 = v22;
    __int16 v38 = v23;
    sub_1A3DF7DD0((uint64_t)v13, &v37, (uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF410);
    unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1A40E7700;
    sub_1A3CF54DC((uint64_t)v10, v27 + v26);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF300);
    unsigned __int8 v29 = v30;
    v30[3] = v28;
    uint64_t *v29 = v27;
    sub_1A3CF5540((uint64_t)v10);
    sub_1A3D982E8(v35);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3D9DA40()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3D9DA78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A3DA29DC(*(void *)(v1 + 24));
  if (!v2)
  {
    if (result)
    {
      sub_1A3E0F298(result, 1852399981, 0xE400000000000000, 0x706F726365636166, 0xE800000000000000, (uint64_t)&unk_1EF757F80, 0, 0, v8, 0, 0);
      uint64_t v5 = v9;
      uint64_t v6 = __swift_project_boxed_opaque_existential_1(v8, v9);
      a1[3] = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v6, v5);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A3D9DB8C()
{
  return MEMORY[0x1F4186498](v0, 20, 7);
}

uint64_t sub_1A3D9DB9C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3D9DBDC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = (_DWORD *)(*(void *)(v2 + 40) + 16);
  unint64_t v5 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v8 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v8 < v3)
      {
LABEL_14:
        sub_1A4096A2C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(0, 0xE000000000000000, v22);
        swift_bridgeObjectRelease();
        return swift_willThrow();
      }
      else if (v5)
      {
        if (v5 == 1)
        {
          if ((int)a1 <= a1 >> 32)
          {
            sub_1A3C7D1A8(a1, a2);
            uint64_t v11 = sub_1A4095A5C();
            if (!v11)
            {
LABEL_25:
              sub_1A4095A7C();
              __break(1u);
              goto LABEL_26;
            }
            uint64_t v12 = v11;
            uint64_t v13 = sub_1A4095A8C();
            uint64_t v14 = (int)a1 - v13;
            if (!__OFSUB__((int)a1, v13))
            {
              sub_1A4095A7C();
              _H0 = *(_WORD *)(v12 + v14);
              __asm { FCVT            S8, H0 }
              swift_beginAccess();
              *uint64_t v4 = _S8;
              return sub_1A3C7D218(a1, a2);
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
          goto LABEL_22;
        }
        uint64_t v25 = *(void *)(a1 + 16);
        swift_retain();
        swift_retain();
        uint64_t v26 = sub_1A4095A5C();
        if (!v26)
        {
LABEL_26:
          sub_1A4095A7C();
          __break(1u);
          JUMPOUT(0x1A3D9DEF8);
        }
        uint64_t v27 = v26;
        uint64_t v28 = sub_1A4095A8C();
        _VF = __OFSUB__(v25, v28);
        uint64_t v29 = v25 - v28;
        if (_VF) {
          goto LABEL_23;
        }
        sub_1A4095A7C();
        _H0 = *(_WORD *)(v27 + v29);
        __asm { FCVT            S8, H0 }
        swift_beginAccess();
        *uint64_t v4 = _S8;
        swift_release();
        return swift_release();
      }
      else
      {
        _H0 = a1;
        __asm { FCVT            S8, H0 }
        uint64_t result = swift_beginAccess();
        *uint64_t v4 = _S8;
      }
      return result;
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v8 = v9 - v10;
      if (!__OFSUB__(v9, v10)) {
        goto LABEL_6;
      }
      goto LABEL_21;
    case 3uLL:
      if (v3 > 0) {
        goto LABEL_14;
      }
      uint64_t result = swift_beginAccess();
      *uint64_t v4 = 0;
      return result;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t type metadata accessor for FaceLivelinessScoreDetector()
{
  return self;
}

uint64_t sub_1A3D9DF2C()
{
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD000000000000026;
  *(void *)(v0 + 8) = 0x80000001A40B68D0;
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 20;
  return swift_willThrow();
}

uint64_t sub_1A3D9DF9C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF370);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A40E7700;
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 472))();
  if (v1)
  {
    *(void *)(v2 + 16) = 0;
    swift_release();
  }
  else
  {
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v4;
  }
  return v2;
}

uint64_t sub_1A3D9E028()
{
  return 0x656A624F65636166;
}

uint64_t sub_1A3D9E04C()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D9E0AC()
{
  return sub_1A40961CC();
}

uint64_t sub_1A3D9E0D0()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3D9E12C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A4096C5C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A3D9E180(void *a1@<X8>)
{
  *a1 = 0x656A624F65636166;
  a1[1] = 0xEF65746174537463;
}

uint64_t sub_1A3D9E1A8(uint64_t a1)
{
  void (*v13)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t);
  long long v14;
  uint64_t v15;
  unsigned char v16[40];

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v1;
  unint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + 320);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = v5(v6);
  if (v2) {
    return swift_release();
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = sub_1A3CEF9A8();
  swift_beginAccess();
  uint64_t v13 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t))(*(void *)*v12 + 120);
  swift_retain();
  swift_retain();
  v13(&v14, v10, v11, sub_1A3D9E390, v4);
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
    swift_release();
    sub_1A3C856DC(&v14, (uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF2D0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF330);
    return swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D9E358()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3D9E390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v19 = 0xD000000000000041;
  unint64_t v20 = 0x80000001A40B6BA0;
  sub_1A409603C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 344))(v4);
  if (!v2)
  {
    uint64_t v7 = result;
    if (result)
    {
      uint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      sub_1A4096A2C();
      sub_1A409621C();
      sub_1A409621C();
      uint64_t v22 = v7;
      type metadata accessor for E5RTProgramLibrary();
      sub_1A4096BAC();
      sub_1A3D5D2DC(2);
      uint64_t v8 = swift_bridgeObjectRelease();
      uint64_t v9 = (*(uint64_t (**)(uint64_t))(v5 + 464))(v8);
      uint64_t v11 = v10;
      uint64_t v12 = (*(uint64_t (**)(void))(v5 + 456))();
      uint64_t v14 = v13;
      uint64_t v15 = (*(uint64_t (**)(void))(v5 + 480))();
      sub_1A3E0F298(v7, v9, v11, v12, v14, v15, 0, 0, &v19, 0, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v21;
      uint64_t v17 = __swift_project_boxed_opaque_existential_1(&v19, v21);
      a1[3] = v16;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_1, v17, v16);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A3D9E680@<X0>(unint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v75 = a3;
  int32x2_t v72 = a4;
  uint64_t v73 = *v4;
  unint64_t v74 = a1;
  uint64_t v6 = type metadata accessor for FaceObservation();
  uint64_t v71 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF3F8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SingleFaceTemporalGazeScoresState(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *a2;
  int v17 = a2[1];
  uint64_t v19 = v18;
  sub_1A3D5D2DC(2);
  uint64_t v20 = (uint64_t)v76;
  uint64_t result = sub_1A3CB00BC(0x656A624F65636166, 0xEF65746174537463, v75, v19, (uint64_t)v11);
  if (!v20)
  {
    uint64_t v75 = 0;
    float v76 = v15;
    int v69 = v16;
    int v70 = v17;
    v66[1] = v6;
    unint64_t v67 = v4;
    uint64_t v68 = v8;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v19) == 1)
    {
      sub_1A3D9F0C8((uint64_t)v11);
      sub_1A3C85624();
      swift_allocError();
      static VisionError.internalError(message:)(0xD000000000000047, 0x80000001A40B6730, v22);
      return swift_willThrow();
    }
    v66[0] = v19;
    sub_1A3D9F128((uint64_t)v11, (uint64_t)v76);
    unint64_t v83 = 0;
    unint64_t v84 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    unint64_t v83 = 0xD00000000000002FLL;
    unint64_t v84 = 0x80000001A40B6A70;
    unint64_t v23 = v74;
    unint64_t v81 = v74;
    uint64_t v24 = type metadata accessor for NamedObjects();
    sub_1A3D9FD94(&qword_1E95EF430, (void (*)(uint64_t))type metadata accessor for NamedObjects);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_allocObject();
    *(int32x2_t *)&double v26 = sub_1A3DF5234((int32x2_t *)(v25 + 16));
    uint64_t v27 = *(uint64_t (**)(double))(v73 + 472);
    uint64_t v28 = v75;
    uint64_t v29 = v27(v26);
    if (v28)
    {
      swift_release();
      uint64_t v39 = (uint64_t)v76;
    }
    else
    {
      uint64_t v31 = v29;
      uint64_t v32 = v30;
      uint64_t v75 = v25 + 16;
      unint64_t v83 = v23;
      uint64_t v33 = ((uint64_t (*)(void))v27)();
      uint64_t v35 = v34;
      uint64_t v36 = v24;
      int v37 = (void *)swift_allocObject();
      v37[2] = 6;
      v37[3] = v31;
      v37[4] = v32;
      v37[5] = v25;
      uint64_t v38 = sub_1A3D9FD94((unint64_t *)&qword_1E95EF2F0, (void (*)(uint64_t))type metadata accessor for NamedObjects);
      swift_retain();
      sub_1A3E0B2A4(v33, v35, (void (*)(uint64_t, unint64_t))sub_1A3D9F8D0, (uint64_t)v37, v36, v38);
      uint64_t v39 = (uint64_t)v76;
      swift_release();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      float32x2_t v40 = *(float32x2_t *)(v25 + 16);
      float v41 = *(float *)(v25 + 24);
      swift_release();
      unint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      unint64_t v81 = 0xD00000000000003BLL;
      unint64_t v82 = 0x80000001A40B6940;
      float32x2_t v77 = v40;
      float v78 = v41;
      sub_1A3D9F18C();
      sub_1A4096E1C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      uint64_t result = swift_bridgeObjectRelease();
      if (*(unsigned char *)(v39 + 16) == 1)
      {
        uint64_t v42 = *(float32x2_t **)(v39 + 32);
        float32x2_t v43 = v42[2];
        unsigned __int8 v45 = v69;
        unsigned __int8 v44 = v70;
        if (*(void *)&v43 == *(void *)(v39 + 8))
        {
          if (!*(void *)&v43)
          {
            __break(1u);
            return result;
          }
          float v46 = v42[5].f32[0];
          *(float32x2_t *)(v39 + 20) = vsub_f32(*(float32x2_t *)(v39 + 20), v42[4]);
          *(float *)(v39 + 28) = *(float *)(v39 + 28) - v46;
          sub_1A3D9F76C(0, 1);
          uint64_t v42 = *(float32x2_t **)(v39 + 32);
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v42 = (float32x2_t *)sub_1A3D9F654(0, *(void *)&v42[2] + 1, 1, (char *)v42);
        }
        unint64_t v48 = (unint64_t)v42[2];
        unint64_t v47 = (unint64_t)v42[3];
        uint64_t v49 = v48 + 1;
        if (v48 >= v47 >> 1) {
          uint64_t v42 = (float32x2_t *)sub_1A3D9F654((char *)(v47 > 1), v48 + 1, 1, (char *)v42);
        }
        void v42[2] = (float32x2_t)v49;
        uint64_t v50 = (float32x2_t *)((char *)v42 + 12 * v48);
        v50[4] = v40;
        v50[5].f32[0] = v41;
        *(void *)(v39 + 32) = v42;
        int32x2_t v51 = vdup_n_s32(0x7F800000u);
        float32x2_t v52 = vadd_f32(v40, (float32x2_t)vbsl_s8(vorn_s8((int8x8_t)vceqz_s32((int32x2_t)vand_s8(*(int8x8_t *)(v39 + 20), (int8x8_t)0x7F0000007FLL)), (int8x8_t)vceq_s32((int32x2_t)vand_s8(*(int8x8_t *)(v39 + 20), (int8x8_t)v51), v51)), *(int8x8_t *)(v39 + 20), (int8x8_t)0x8000000080000000));
        *(float32x2_t *)(v39 + 20) = v52;
        float v53 = *(float *)(v39 + 28);
        if ((LODWORD(v53) & 0x7FFFFF) != 0 && (~LODWORD(v53) & 0x7F800000) == 0) {
          float v53 = -0.0;
        }
        float v55 = v41 + v53;
        *(float *)(v39 + 28) = v55;
        int32x2_t v56 = sub_1A3DF5234((int32x2_t *)&v81);
        *(float *)v56.i32 = (float)v49;
        float32x2_t v40 = vdiv_f32(v52, (float32x2_t)vdup_lane_s32(v56, 0));
        float v41 = v55 / (float)v49;
      }
      else
      {
        unsigned __int8 v45 = v69;
        unsigned __int8 v44 = v70;
      }
      unint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      unint64_t v81 = 0xD000000000000040;
      unint64_t v82 = 0x80000001A40B6980;
      float32x2_t v77 = v40;
      float v78 = v41;
      sub_1A4096E1C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      float32x2_t v77 = v40;
      float v78 = v41;
      v80[0] = v45;
      v80[1] = v44;
      sub_1A3DF5EA4((uint64_t)&v77, v80, (uint64_t)&v81);
      int32x2_t v57 = (int32x2_t)v81;
      float v58 = *(float *)&v82;
      __int16 v59 = WORD2(v82);
      unint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_1A4096A2C();
      sub_1A409621C();
      sub_1A409621C();
      float32x2_t v77 = (float32x2_t)v57;
      float v78 = v58;
      __int16 v79 = v59;
      sub_1A4096BAC();
      sub_1A409621C();
      sub_1A4096BAC();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      uint64_t v60 = (uint64_t)v68;
      uint64_t v61 = *v67;
      unint64_t v81 = (unint64_t)v57;
      WORD2(v82) = v59;
      *(float *)&unint64_t v82 = v58;
      (*(void (**)(uint64_t, unint64_t *))(v61 + 488))(v39, &v81);
      unint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      unint64_t v81 = 0xD000000000000047;
      unint64_t v82 = 0x80000001A40B69D0;
      sub_1A3D9FD94((unint64_t *)&qword_1E95ED530, (void (*)(uint64_t))type metadata accessor for FaceObservation);
      sub_1A4096E1C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF410);
      unint64_t v62 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_1A40E7700;
      sub_1A3CF54DC(v60, v63 + v62);
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF300);
      float32x2_t v65 = v72;
      v72[3] = v64;
      *float32x2_t v65 = v63;
      sub_1A3D9F1E0(v60, (uint64_t (*)(void))type metadata accessor for FaceObservation);
    }
    return sub_1A3D9F1E0(v39, type metadata accessor for SingleFaceTemporalGazeScoresState);
  }
  return result;
}

uint64_t sub_1A3D9F0C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF3F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3D9F128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleFaceTemporalGazeScoresState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A3D9F18C()
{
  unint64_t result = qword_1E95EF400;
  if (!qword_1E95EF400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF400);
  }
  return result;
}

uint64_t sub_1A3D9F1E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A3D9F240(__int16 *a1, uint64_t a2, _DWORD *a3)
{
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A4096BAC();
  sub_1A3D5D2DC(2);
  uint64_t result = swift_bridgeObjectRelease();
  if (a1)
  {
    _H0 = *a1;
    __asm { FCVT            S8, H0 }
    swift_beginAccess();
    *a3 = _S8;
    _H0 = a1[1];
    __asm { FCVT            S0, H0 }
    a3[1] = _S0;
    LOWORD(_S0) = a1[2];
    __asm { FCVT            S0, H0 }
    a3[2] = _S0;
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    swift_beginAccess();
    sub_1A40965EC();
    sub_1A409621C();
    swift_beginAccess();
    sub_1A40965EC();
    sub_1A409621C();
    swift_beginAccess();
    sub_1A40965EC();
    sub_1A3D5D2DC(2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3D9F494()
{
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD00000000000002CLL;
  *(void *)(v0 + 8) = 0x80000001A40B6A20;
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 20;
  return swift_willThrow();
}

unint64_t sub_1A3D9F508()
{
  unint64_t result = qword_1E95EF420;
  if (!qword_1E95EF420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF420);
  }
  return result;
}

uint64_t type metadata accessor for CommonGazeDetector()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CommonGazeDetector.Options(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3D9F61CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonGazeDetector.Options()
{
  return &type metadata for CommonGazeDetector.Options;
}

char *sub_1A3D9F654(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF428);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 12);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[12 * v8]) {
      memmove(v12, v13, 12 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 12 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1A3D9F76C(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    unint64_t result = (unint64_t)sub_1A3D9F654((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  unint64_t result = v4 + 32 + 12 * v6;
  uint64_t v14 = (const void *)(v4 + 32 + 12 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 12 * v13) {
    unint64_t result = (unint64_t)memmove((void *)result, v14, 12 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A3D9F880()
{
  return MEMORY[0x1F4186498](v0, 28, 7);
}

uint64_t sub_1A3D9F890()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3D9F8D0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  unint64_t v5 = a2 >> 62;
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        swift_release();
        uint64_t v30 = swift_release();
        __break(1u);
LABEL_43:
        sub_1A3C7D218(v30, v31);
        __break(1u);
        JUMPOUT(0x1A3D9FD74);
      }
      uint64_t v8 = HIDWORD(a1) - (int)a1;
LABEL_6:
      uint64_t v32 = (_DWORD *)(*(void *)(v2 + 40) + 16);
      *(void *)&long long v33 = 0;
      *((void *)&v33 + 1) = 0xE000000000000000;
      sub_1A4096A2C();
      sub_1A409621C();
      sub_1A409621C();
      sub_1A4096E1C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A409621C();
      uint64_t v34 = v4;
      sub_1A4096E1C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      if (v8 >= v4)
      {
        switch((int)v5)
        {
          case 1:
            if (a1 >> 32 < (int)a1) {
              goto LABEL_38;
            }
            sub_1A3C7D1A8(a1, a2);
            uint64_t v24 = (__int16 *)sub_1A4095A5C();
            if (!v24) {
              goto LABEL_28;
            }
            uint64_t v25 = sub_1A4095A8C();
            if (__OFSUB__((int)a1, v25)) {
              goto LABEL_41;
            }
            uint64_t v24 = (__int16 *)((char *)v24 + (int)a1 - v25);
LABEL_28:
            uint64_t v26 = sub_1A4095A7C();
            if (v26 >= (a1 >> 32) - (int)a1) {
              uint64_t v27 = (a1 >> 32) - (int)a1;
            }
            else {
              uint64_t v27 = v26;
            }
            uint64_t v28 = (char *)v24 + v27;
            if (v24) {
              uint64_t v29 = (uint64_t)v28;
            }
            else {
              uint64_t v29 = 0;
            }
            sub_1A3D9F240(v24, v29, v32);
            uint64_t v30 = a1;
            unint64_t v31 = a2;
            if (v3) {
              goto LABEL_43;
            }
            uint64_t result = sub_1A3C7D218(a1, a2);
            break;
          case 2:
            uint64_t v14 = *(void *)(a1 + 16);
            uint64_t v15 = *(void *)(a1 + 24);
            swift_retain();
            swift_retain();
            uint64_t v16 = (__int16 *)sub_1A4095A5C();
            if (!v16) {
              goto LABEL_13;
            }
            uint64_t v17 = sub_1A4095A8C();
            if (__OFSUB__(v14, v17)) {
              goto LABEL_40;
            }
            uint64_t v16 = (__int16 *)((char *)v16 + v14 - v17);
LABEL_13:
            BOOL v18 = __OFSUB__(v15, v14);
            uint64_t v19 = v15 - v14;
            if (v18) {
              goto LABEL_39;
            }
            uint64_t v20 = sub_1A4095A7C();
            if (v20 >= v19) {
              uint64_t v21 = v19;
            }
            else {
              uint64_t v21 = v20;
            }
            uint64_t v22 = (char *)v16 + v21;
            if (v16) {
              uint64_t v23 = (uint64_t)v22;
            }
            else {
              uint64_t v23 = 0;
            }
            sub_1A3D9F240(v16, v23, v32);
            if (v3) {
              goto LABEL_42;
            }
            swift_release();
            uint64_t result = swift_release();
            break;
          case 3:
            *(void *)((char *)&v33 + 6) = 0;
            *(void *)&long long v33 = 0;
            uint64_t v13 = (char *)&v33;
            return sub_1A3D9F240((__int16 *)&v33, (uint64_t)v13, v32);
          default:
            *(void *)&long long v33 = a1;
            WORD4(v33) = a2;
            BYTE10(v33) = BYTE2(a2);
            BYTE11(v33) = BYTE3(a2);
            BYTE12(v33) = BYTE4(a2);
            BYTE13(v33) = BYTE5(a2);
            uint64_t v13 = (char *)&v33 + BYTE6(a2);
            return sub_1A3D9F240((__int16 *)&v33, (uint64_t)v13, v32);
        }
      }
      else
      {
        sub_1A4096A2C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        uint64_t v34 = v4;
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(0, 0xE000000000000000, v11);
        swift_bridgeObjectRelease();
        return swift_willThrow();
      }
      return result;
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v8 = v9 - v10;
      if (!__OFSUB__(v9, v10)) {
        goto LABEL_6;
      }
      goto LABEL_37;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1A3D9FD94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1A3D9FDDC()
{
  return &unk_1E95EF438;
}

unint64_t sub_1A3D9FDE8()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1A3D9FE04()
{
  return 0x5F657A61676D6163;
}

uint64_t sub_1A3D9FE28(uint64_t a1)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A3CB0BA4(a1);
  if (!v1)
  {
    sub_1A3CFB1AC();
    uint64_t v4 = sub_1A4096E1C();
    uint64_t v6 = v5;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.unsupportedRevision(message:)(v4, v6, v7);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A3D9FFC4(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 8);
  __int16 v3 = *(_WORD *)(a2 + 12);
  uint64_t v5 = *(void *)a2;
  __int16 v7 = v3;
  int v6 = v2;
  return sub_1A3D0AEFC(&v5);
}

uint64_t type metadata accessor for CameraGazeDetector()
{
  return self;
}

uint64_t sub_1A3DA0038(uint64_t a1)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A3CB0BA4(a1);
  if (!v1)
  {
    sub_1A3CFB1AC();
    uint64_t v4 = sub_1A4096E1C();
    uint64_t v6 = v5;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.unsupportedRevision(message:)(v4, v6, v7);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1A3DA01D0()
{
  return 0xD000000000000030;
}

uint64_t sub_1A3DA01EC(uint64_t a1)
{
  void (*v11)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t);
  long long v12;
  uint64_t v13;
  unsigned char v14[40];

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A3DA1C90();
  if (v2) {
    return swift_release();
  }
  uint64_t v8 = v5;
  uint64_t v9 = v6;
  uint64_t v10 = sub_1A3CEF9A8();
  swift_beginAccess();
  uint64_t v11 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t))(*(void *)*v10 + 120);
  swift_retain();
  swift_retain();
  v11(&v12, v8, v9, sub_1A3DA0C24, v4);
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v13)
  {
    swift_release();
    sub_1A3C856DC(&v12, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF2D0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF330);
    return swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3DA038C(uint64_t a1)
{
  return sub_1A3DA3104(a1);
}

uint64_t sub_1A3DA03A4@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v58 = a3;
  float v55 = a4;
  uint64_t v52 = type metadata accessor for HumanObservation();
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF470);
  MEMORY[0x1F4188790](v7 - 8);
  int32x2_t v51 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  __int16 v59 = &v46[-v10];
  LODWORD(v57) = *a2;
  int v56 = a2[1];
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A40FB470;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x6972706F73726F74;
  *(void *)(v12 + 24) = 0xEA0000000000746ELL;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 256;
  uint64_t v61 = a1;
  uint64_t v66 = a1;
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = v12;
  v14[4] = v11;
  uint64_t v14[5] = 128;
  uint64_t v15 = type metadata accessor for NamedObjects();
  unint64_t v16 = sub_1A3D97EAC();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v60 = v15;
  uint64_t v17 = v15;
  uint64_t v18 = v16;
  uint64_t v19 = v16;
  uint64_t v20 = v62;
  sub_1A3E0B2A4(0x6972706F73726F74, 0xEA0000000000746ELL, (void (*)(uint64_t, unint64_t))sub_1A3DA0DC8, (uint64_t)v14, v17, v19);
  if (v20) {
    goto LABEL_2;
  }
  uint64_t v49 = v11 + 16;
  uint64_t v62 = v11;
  uint64_t v50 = v13;
  swift_release();
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 16) = 0;
  uint64_t v48 = v21 + 16;
  swift_beginAccess();
  *(void *)(v12 + 16) = 0x6E656469666E6F63;
  *(void *)(v12 + 24) = 0xEA00000000006563;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v13 + 16) = 2;
  uint64_t v66 = v61;
  uint64_t v23 = *(void *)(v12 + 16);
  uint64_t v22 = *(void *)(v12 + 24);
  uint64_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = 2;
  v24[3] = v23;
  v24[4] = v22;
  v24[5] = v21;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_1A3E0B2A4(v23, v22, (void (*)(uint64_t, unint64_t))sub_1A3DA11EC, (uint64_t)v24, v60, v18);
  uint64_t v60 = v21;
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  uint64_t v61 = 0;
  uint64_t v26 = *(void *)(v62 + 16);
  unint64_t v27 = *(void *)(v62 + 24);
  char v65 = 0;
  uint64_t v28 = (float *)v48;
  swift_beginAccess();
  float v29 = *v28;
  char v64 = 1;
  v63[0] = v57;
  v63[1] = v56;
  sub_1A3C7D1A8(v26, v27);
  sub_1A3C7F1B0(v26, v27, 128, &v65, &v64, v63, (uint64_t)&v66, v29);
  uint64_t v30 = v66;
  unint64_t v57 = v67;
  uint64_t v31 = v68;
  uint64_t v32 = v69;
  uint64_t v33 = HIDWORD(v69);
  int v34 = v70;
  BOOL v35 = v71;
  uint64_t v36 = v59;
  uint64_t v37 = v61;
  sub_1A3CB0CA0(v58, (uint64_t)v59);
  uint64_t v61 = v37;
  if (v37)
  {
    sub_1A3C7D218(v30, v57);
LABEL_2:
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  BOOL v47 = v35;
  uint64_t v48 = v33;
  uint64_t v49 = v32;
  int v56 = v34;
  uint64_t v58 = v31;
  uint64_t v38 = v51;
  sub_1A3DA1518((uint64_t)v36, (uint64_t)v51);
  uint64_t v39 = v53;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v53 + 48))(v38, 1, v52);
  if (result != 1)
  {
    unint64_t v40 = v57;
    uint64_t v66 = v30;
    unint64_t v67 = v57;
    uint64_t v68 = v58;
    uint64_t v69 = v49 | (v48 << 32);
    unsigned __int16 v70 = v56;
    BOOL v71 = v47;
    sub_1A3C7D1A8(v30, v57);
    float v41 = v54;
    sub_1A3C7FD1C((uint64_t)v38, (uint64_t)&v66, (uint64_t)v54);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED1F8);
    unint64_t v42 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1A40E7700;
    sub_1A3C80EC0((uint64_t)v41, v43 + v42);
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF440);
    unsigned __int8 v45 = v55;
    v55[3] = v44;
    sub_1A3C7D218(v30, v40);
    uint64_t *v45 = v43;
    sub_1A3C80F24((uint64_t)v41);
    sub_1A3DA1580((uint64_t)v36);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3DA0A78(_WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A4096BAC();
  sub_1A3D5D2DC(2);
  uint64_t result = swift_bridgeObjectRelease();
  if ((unint64_t)(a4 - 0x2000000000000000) >> 62 == 3)
  {
    uint64_t v8 = sub_1A3CABA10(4 * a4);
    uint64_t v10 = v9;
    swift_beginAccess();
    uint64_t v11 = *a3;
    unint64_t v12 = a3[1];
    *a3 = v8;
    a3[1] = v10;
    uint64_t result = sub_1A3C7D218(v11, v12);
    if (a1)
    {
      swift_beginAccess();
      sub_1A3DA16A8(a3, a4, a1);
      return swift_endAccess();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3DA0BEC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3DA0C24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A3DA29DC(*(void *)(v1 + 24));
  if (!v2)
  {
    if (result)
    {
      sub_1A3E0F298(result, 1852399981, 0xE400000000000000, 0x706F726365636166, 0xE800000000000000, (uint64_t)&unk_1EF758168, 0, 0, v8, 0, 0);
      uint64_t v5 = v9;
      uint64_t v6 = __swift_project_boxed_opaque_existential_1(v8, v9);
      a1[3] = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v6, v5);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A3DA0D38()
{
  sub_1A3C7D218(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3DA0D70()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A3DA0D80()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3DA0DC8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[5];
  uint64_t v6 = (uint64_t *)(v2[2] + 16);
  uint64_t v7 = (uint64_t *)(v2[4] + 16);
  unint64_t v8 = a2 >> 62;
  unint64_t v9 = a2;
  uint64_t v11 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_release();
        swift_release();
        __break(1u);
LABEL_21:
        sub_1A3C7D218(a1, v9);
        __break(1u);
        JUMPOUT(0x1A3DA117CLL);
      }
      uint64_t v11 = HIDWORD(a1) - (int)a1;
LABEL_6:
      uint64_t v21 = v3;
      swift_beginAccess();
      if (v11 >= *v6)
      {
        switch((int)v8)
        {
          case 1:
            if (a1 >> 32 < (int)a1) {
              goto LABEL_19;
            }
            swift_retain();
            sub_1A3DA1604((int)a1, a1 >> 32, v9 & 0x3FFFFFFFFFFFFFFFLL, v7, v5);
            if (v3) {
              goto LABEL_21;
            }
            uint64_t result = sub_1A3C7D218(a1, v9);
            break;
          case 2:
            v9 &= 0x3FFFFFFFFFFFFFFFuLL;
            uint64_t v19 = *(void *)(a1 + 16);
            uint64_t v20 = *(void *)(a1 + 24);
            swift_retain();
            swift_retain();
            sub_1A3DA1604(v19, v20, v9, v7, v5);
            if (v21) {
              goto LABEL_20;
            }
            swift_release();
            return swift_release();
          case 3:
            *(void *)((char *)&v22 + 6) = 0;
            *(void *)&long long v22 = 0;
            uint64_t v18 = (char *)&v22;
            return sub_1A3DA0A78(&v22, (uint64_t)v18, v7, v5);
          default:
            *(void *)&long long v22 = a1;
            WORD4(v22) = v9;
            BYTE10(v22) = BYTE2(v9);
            BYTE11(v22) = BYTE3(v9);
            BYTE12(v22) = BYTE4(v9);
            BYTE13(v22) = BYTE5(v9);
            uint64_t v18 = (char *)&v22 + BYTE6(v9);
            return sub_1A3DA0A78(&v22, (uint64_t)v18, v7, v5);
        }
      }
      else
      {
        *(void *)&long long v22 = 0;
        *((void *)&v22 + 1) = 0xE000000000000000;
        sub_1A4096A2C();
        swift_beginAccess();
        uint64_t v15 = *(void *)(v4 + 16);
        uint64_t v14 = *(void *)(v4 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v23 = v15;
        uint64_t v24 = v14;
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        swift_beginAccess();
        uint64_t v25 = *v6;
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(v15, v14, v16);
        swift_bridgeObjectRelease();
        return swift_willThrow();
      }
      return result;
    case 2uLL:
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      uint64_t v11 = v12 - v13;
      if (!__OFSUB__(v12, v13)) {
        goto LABEL_6;
      }
      goto LABEL_18;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v11 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1A3DA119C()
{
  return MEMORY[0x1F4186498](v0, 20, 7);
}

uint64_t sub_1A3DA11AC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3DA11EC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  uint64_t v6 = (_DWORD *)(v2[5] + 16);
  unint64_t v7 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v10 < v3)
      {
LABEL_14:
        sub_1A4096A2C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(v4, v5, v24);
        swift_bridgeObjectRelease();
        return swift_willThrow();
      }
      else if (v7)
      {
        if (v7 == 1)
        {
          if ((int)a1 <= a1 >> 32)
          {
            sub_1A3C7D1A8(a1, a2);
            uint64_t v13 = sub_1A4095A5C();
            if (!v13)
            {
LABEL_25:
              sub_1A4095A7C();
              __break(1u);
              goto LABEL_26;
            }
            uint64_t v14 = v13;
            uint64_t v15 = sub_1A4095A8C();
            uint64_t v16 = (int)a1 - v15;
            if (!__OFSUB__((int)a1, v15))
            {
              sub_1A4095A7C();
              _H0 = *(_WORD *)(v14 + v16);
              __asm { FCVT            S8, H0 }
              swift_beginAccess();
              *uint64_t v6 = _S8;
              return sub_1A3C7D218(a1, a2);
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
          goto LABEL_22;
        }
        uint64_t v27 = *(void *)(a1 + 16);
        swift_retain();
        swift_retain();
        uint64_t v28 = sub_1A4095A5C();
        if (!v28)
        {
LABEL_26:
          sub_1A4095A7C();
          __break(1u);
          JUMPOUT(0x1A3DA1508);
        }
        uint64_t v29 = v28;
        uint64_t v30 = sub_1A4095A8C();
        _VF = __OFSUB__(v27, v30);
        uint64_t v31 = v27 - v30;
        if (_VF) {
          goto LABEL_23;
        }
        sub_1A4095A7C();
        _H0 = *(_WORD *)(v29 + v31);
        __asm { FCVT            S8, H0 }
        swift_beginAccess();
        *uint64_t v6 = _S8;
        swift_release();
        return swift_release();
      }
      else
      {
        _H0 = a1;
        __asm { FCVT            S8, H0 }
        uint64_t result = swift_beginAccess();
        *uint64_t v6 = _S8;
      }
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_6;
      }
      goto LABEL_21;
    case 3uLL:
      if (v3 > 0) {
        goto LABEL_14;
      }
      uint64_t result = swift_beginAccess();
      *uint64_t v6 = 0;
      return result;
    default:
      uint64_t v10 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1A3DA1518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3DA1580(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TorsoPrintGenerator()
{
  return self;
}

uint64_t sub_1A3DA1604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t result = sub_1A4095A5C();
  uint64_t v10 = (_WORD *)result;
  if (result)
  {
    uint64_t result = sub_1A4095A8C();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    uint64_t v10 = (_WORD *)((char *)v10 + a1 - result);
  }
  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v13 = sub_1A4095A7C();
  if (v13 >= v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  uint64_t v15 = (char *)v10 + v14;
  if (v10) {
    uint64_t v16 = (uint64_t)v15;
  }
  else {
    uint64_t v16 = 0;
  }
  return sub_1A3DA0A78(v10, v16, a4, a5);
}