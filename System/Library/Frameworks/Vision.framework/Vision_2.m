void *sub_1A3DA16A8(void *result, uint64_t a2, _WORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v31;
  float16x4_t *v32;
  float32x4_t *v33;
  unint64_t v34;
  float16x8_t v35;
  float32x4_t v36;
  float32x4_t v37;
  unint64_t v38;
  __int16 *v39;
  _DWORD *v40;
  __int16 v41;
  float16x4_t *v44;
  float32x4_t *v45;
  unint64_t v46;
  float16x8_t v47;
  float32x4_t v48;
  float32x4_t v49;
  unint64_t v50;
  __int16 *v51;
  _DWORD *v52;
  __int16 v53;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v8 = *result;
  v7 = result[1];
  v11 = result;
  switch(v7 >> 62)
  {
    case 1uLL:
      v56 = *result;
      v57 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      result = (void *)sub_1A3D991F8((int *)&v56, a2, a3);
      v22 = v56;
      v23 = v57 | 0x4000000000000000;
      goto LABEL_37;
    case 2uLL:
      v56 = *result;
      v57 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1A4095BAC();
      v3 = v57;
      v58 = v56;
      v6 = *(void *)(v56 + 16);
      v24 = sub_1A4095A5C();
      if (!v24) {
        goto LABEL_45;
      }
      v4 = v24;
      v25 = sub_1A4095A8C();
      v26 = v6 - v25;
      if (__OFSUB__(v6, v25)) {
        goto LABEL_40;
      }
      v5 = v25;
      result = (void *)sub_1A4095A7C();
      v27 = a2 - 1;
      if (__OFSUB__(a2, 1)) {
        goto LABEL_43;
      }
      if ((v27 & 0x8000000000000000) != 0) {
        goto LABEL_44;
      }
      _H0 = *a3;
      __asm { FCVT            S0, H0 }
      *(_DWORD *)(v4 + v26) = _S0;
      if (a2 == 1) {
        goto LABEL_29;
      }
      if (v27 < 0x10
        || (v26 + v4 + 4 < (unint64_t)&a3[a2]
          ? (_CF = (unint64_t)(a3 + 1) >= v4 + v6 + 4 * a2 - v5)
          : (_CF = 1),
            !_CF))
      {
LABEL_26:
        v31 = 0;
LABEL_27:
        v38 = ~v31 + a2;
        v39 = &a3[v31 + 1];
        v40 = (_DWORD *)(v6 + 4 * v31 - v5 + v4 + 4);
        do
        {
          v41 = *v39++;
          _H0 = v41;
          __asm { FCVT            S0, H0 }
          *v40++ = _S0;
          --v38;
        }
        while (v38);
        goto LABEL_29;
      }
      v31 = v27 & 0xFFFFFFFFFFFFFFF0;
      v32 = (float16x4_t *)(a3 + 9);
      v33 = (float32x4_t *)(v26 + v4 + 36);
      v34 = v27 & 0xFFFFFFFFFFFFFFF0;
      do
      {
        v35 = *(float16x8_t *)v32[-2].i8;
        v36 = vcvtq_f32_f16(*v32);
        v37 = vcvt_hight_f32_f16(*(float16x8_t *)v32->i8);
        v33[-2] = vcvtq_f32_f16(*(float16x4_t *)v35.i8);
        v33[-1] = vcvt_hight_f32_f16(v35);
        *v33 = v36;
        v33[1] = v37;
        v33 += 4;
        v32 += 4;
        v34 -= 16;
      }
      while (v34);
      if (v27 != v31) {
        goto LABEL_27;
      }
LABEL_29:
      *v11 = v58;
      v11[1] = v3 | 0x8000000000000000;
      return result;
    case 3uLL:
      if (__OFSUB__(a2, 1)) {
        goto LABEL_41;
      }
      if (((a2 - 1) & 0x8000000000000000) == 0) {
        return result;
      }
      __break(1u);
      goto LABEL_26;
    default:
      BYTE4(v56) = BYTE4(*result);
      BYTE5(v56) = BYTE5(v8);
      BYTE6(v56) = BYTE6(v8);
      HIBYTE(v56) = HIBYTE(v8);
      LOWORD(v57) = v7;
      BYTE2(v57) = BYTE2(v7);
      BYTE3(v57) = BYTE3(v7);
      v12 = HIDWORD(v7);
      BYTE4(v57) = BYTE4(v7);
      v13 = v7 >> 40;
      BYTE5(v57) = BYTE5(v7);
      v14 = HIWORD(v7);
      BYTE6(v57) = v14;
      v15 = a2 - 1;
      if (__OFSUB__(a2, 1))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        JUMPOUT(0x1A3DA19C0);
      }
      if ((v15 & 0x8000000000000000) != 0) {
        goto LABEL_42;
      }
      _H0 = *a3;
      __asm { FCVT            S0, H0 }
      LODWORD(v56) = _S0;
      if (a2 == 1) {
        goto LABEL_36;
      }
      if (v15 >= 0x10)
      {
        v21 = v15 & 0xFFFFFFFFFFFFFFF0;
        v44 = (float16x4_t *)(a3 + 9);
        v45 = (float32x4_t *)((char *)&v59 + 4);
        v46 = v15 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v47 = *(float16x8_t *)v44[-2].i8;
          v48 = vcvtq_f32_f16(*v44);
          v49 = vcvt_hight_f32_f16(*(float16x8_t *)v44->i8);
          v45[-2] = vcvtq_f32_f16(*(float16x4_t *)v47.i8);
          v45[-1] = vcvt_hight_f32_f16(v47);
          *v45 = v48;
          v45[1] = v49;
          v45 += 4;
          v44 += 4;
          v46 -= 16;
        }
        while (v46);
        if (v15 == v21) {
          goto LABEL_35;
        }
      }
      else
      {
        v21 = 0;
      }
      v50 = ~v21 + a2;
      v51 = &a3[v21 + 1];
      v52 = (_DWORD *)&v56 + v21 + 1;
      do
      {
        v53 = *v51++;
        _H0 = v53;
        __asm { FCVT            S0, H0 }
        *v52++ = _S0;
        --v50;
      }
      while (v50);
LABEL_35:
      LOBYTE(v12) = BYTE4(v57);
      LOBYTE(v13) = BYTE5(v57);
      LOBYTE(v14) = BYTE6(v57);
LABEL_36:
      v22 = v56;
      v23 = v57 | ((unint64_t)v12 << 32) | ((unint64_t)v13 << 40) | ((unint64_t)v14 << 48);
LABEL_37:
      *v11 = v22;
      v11[1] = v23;
      return result;
  }
}

uint64_t sub_1A3DA19D4()
{
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v1 = v0[6];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 3, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v3 + 16))(v6, v4);
  sub_1A4096E3C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  sub_1A409621C();
  v8[1] = v0[8];
  type metadata accessor for E5RTExecutionContext();
  sub_1A4096BAC();
  return v9;
}

uint64_t sub_1A3DA1B68()
{
  sub_1A3C85624();
  swift_allocError();
  *(_OWORD *)uint64_t v0 = xmmword_1A40FB790;
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 20;
  return swift_willThrow();
}

uint64_t sub_1A3DA1BC8()
{
  return sub_1A3DA1C28(0xD000000000000013, 0x80000001A40B6D50);
}

uint64_t sub_1A3DA1BF8()
{
  return sub_1A3DA1C28(0xD000000000000011, 0x80000001A40B6D70);
}

uint64_t sub_1A3DA1C28(uint64_t a1, uint64_t a2)
{
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v4 = a1;
  *(void *)(v4 + 8) = a2;
  *(_DWORD *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 20) = 20;
  return swift_willThrow();
}

uint64_t sub_1A3DA1C90()
{
  uint64_t v2 = v0;
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v4 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1A409617C();

  sub_1A409621C();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1A409621C();
  (*(void (**)(uint64_t))(v2 + 296))(v5);
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1A3DA1D70(uint64_t a1)
{
  void (*v6)(long long *__return_ptr, uint64_t);
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  long long v17[2];
  uint64_t *v18;

  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  v6 = *(void (**)(long long *__return_ptr, uint64_t))(*v1 + 360);
  swift_retain();
  v6(v17, a1);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for E5RTBasedDetector();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1A3C856DC(v17, (uint64_t)(v1 + 3));
    *(void *)&v17[0] = 0;
    *((void *)&v17[0] + 1) = 0xE000000000000000;
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    v7 = v1[6];
    v8 = __swift_project_boxed_opaque_existential_1(v1 + 3, v7);
    v18 = &v16;
    uint64_t v9 = *(void *)(v7 - 8);
    unint64_t v10 = MEMORY[0x1F4188790](v8);
    v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
    sub_1A4096E3C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    sub_1A3C85678((uint64_t)(v1 + 3), (uint64_t)v17);
    v14 = (*(uint64_t (**)(long long *))(v5 + 392))(v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    v3[8] = v14;
    swift_release();
    v15 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_1A3D94930(v15);
    *(void *)&v17[0] = 0;
    *((void *)&v17[0] + 1) = 0xE000000000000000;
    swift_retain();
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    *(void *)&v17[0] = 0xD000000000000024;
    *((void *)&v17[0] + 1) = 0x80000001A40B6DC0;
    type metadata accessor for E5RTBasedDetector();
    sub_1A3CA9EBC((uint64_t)v3);
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A409603C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t type metadata accessor for E5RTBasedDetector()
{
  return self;
}

uint64_t sub_1A3DA2164()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_release();
}

uint64_t sub_1A3DA2194()
{
  uint64_t v1 = *v0;
  uint64_t v48 = sub_1A4095ECC();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  v45 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v40 - v4;
  uint64_t v6 = sub_1A4095EFC();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (*(uint64_t (**)(__n128))(v1 + 320))(v8);
  uint64_t v13 = v12;
  v14 = sub_1A3CEF9A8();
  swift_beginAccess();
  v15 = *(void (**)(uint64_t, uint64_t))(*(void *)*v14 + 128);
  swift_retain();
  v15(v11, v13);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  sub_1A4096A2C();
  uint64_t v53 = v51;
  unint64_t v54 = v52;
  sub_1A409621C();
  sub_1A409621C();
  uint64_t v47 = v1;
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  v16 = sub_1A3CEF9A8();
  swift_beginAccess();
  uint64_t v50 = *v16;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED478);
  sub_1A3DA2980();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1A3D9236C();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v17, v6);
  v18 = sub_1A3D9223C();
  v19 = *v18;
  char v20 = *((unsigned char *)v18 + 16);
  uint64_t v21 = v49;
  swift_retain_n();
  sub_1A4095EBC();
  v22 = sub_1A4095EDC();
  int v23 = sub_1A409679C();
  uint64_t result = sub_1A40968EC();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v43 = v7;
  uint64_t v44 = v6;
  v42 = v10;
  int v41 = v23;
  if ((v20 & 1) == 0)
  {
    if (!v19)
    {
      swift_release_n();
      __break(1u);
LABEL_5:
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v5, v48);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      uint64_t v25 = v47;
LABEL_11:
      uint64_t v53 = 0;
      unint64_t v54 = 0xE000000000000000;
      sub_1A4096A2C();
      uint64_t v38 = swift_bridgeObjectRelease();
      uint64_t v53 = 0x726F746365746544;
      unint64_t v54 = 0xEA00000000002820;
      (*(void (**)(uint64_t))(v25 + 136))(v38);
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A409621C();
      type metadata accessor for E5RTBasedDetector();
      sub_1A3CA9EBC(v21);
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A409621C();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      uint64_t v39 = sub_1A3D9545C();
      __swift_destroy_boxed_opaque_existential_1(v39 + 24);
      swift_release();
      return v39;
    }
LABEL_10:
    uint64_t v26 = v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v5, v48);
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v40 = v5;
    uint64_t v29 = v28;
    uint64_t v53 = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v25 = v47;
    uint64_t v30 = (*(uint64_t (**)(void))(v47 + 136))();
    uint64_t v50 = sub_1A3CB8AB0(v30, v31, &v53);
    sub_1A409695C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    type metadata accessor for E5RTBasedDetector();
    uint64_t v21 = v49;
    uint64_t v32 = sub_1A3CA9EBC(v49);
    uint64_t v50 = sub_1A3CB8AB0(v32, v33, &v53);
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    v34 = v45;
    os_signpost_id_t v35 = sub_1A4095EAC();
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v22, (os_signpost_type_t)v41, v35, v19, "Detector (%s, %s) deallocated", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6257B40](v29, -1, -1);
    MEMORY[0x1A6257B40](v27, -1, -1);

    v36 = *(void (**)(char *, uint64_t))(v26 + 8);
    uint64_t v37 = v48;
    v36(v40, v48);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
    v36(v34, v37);
    goto LABEL_11;
  }
  if ((unint64_t)v19 >> 32)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v19 >> 11 != 27)
  {
    if (v19 >> 16 <= 0x10)
    {
      v19 = &v55;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_1A3DA2980()
{
  unint64_t result = qword_1E95EF450;
  if (!qword_1E95EF450)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95ED478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF450);
  }
  return result;
}

uint64_t sub_1A3DA29DC(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF458);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A4095B9C();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, __n128))(v1 + 336))(a1, v9);
  if (v2) {
    return v1;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    uint64_t v16 = 0xD000000000000024;
    unint64_t v17 = 0x80000001A40B6EB0;
    sub_1A3DA69A4((unint64_t *)&unk_1E95EF460, MEMORY[0x1E4F276F0]);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    uint64_t v13 = type metadata accessor for E5RTProgramLibrary();
    if ((*(uint64_t (**)(char *))(v13 + 240))(v11))
    {
      uint64_t v1 = sub_1A3E05E94((uint64_t)v11);
    }
    else
    {
      sub_1A3E20C3C((uint64_t)v11, &v16);
      uint64_t v14 = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 352))(&v16, a1);
      uint64_t v1 = sub_1A3E06120(&v16, v14 & 0x1FFFFFFFFLL);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3DA2D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_1A3E06B7C();
  uint64_t result = (*(uint64_t (**)(uint64_t))(v4 + 416))(a2);
  uint64_t v7 = result;
  if (!v3)
  {
    if (*(void *)(result + 16) && (unint64_t v8 = sub_1A3C8C7D8(0), (v9 & 1) != 0))
    {
      unint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unsigned int v11 = sub_1A3CAF8BC(v10);
      uint64_t v12 = swift_bridgeObjectRelease();
      char v13 = (*(uint64_t (**)(uint64_t))(v4 + 424))(v12);
      uint64_t v14 = 0x100000000;
      if ((v13 & 1) == 0) {
        uint64_t v14 = 0;
      }
      return v14 | v11;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A3DA2DF0()
{
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD00000000000001CLL;
  *(void *)(v0 + 8) = 0x80000001A40B6BF0;
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 20;
  return swift_willThrow();
}

uint64_t sub_1A3DA2E60()
{
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD000000000000021;
  *(void *)(v0 + 8) = 0x80000001A40B6EE0;
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 20;
  return swift_willThrow();
}

uint64_t sub_1A3DA2ED0(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF2E8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FaceObservation();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1A3CB0C64(a1, (uint64_t)v6);
  if (!v2)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1A3CA2EB8((uint64_t)v6, &qword_1E95EF2E8);
      sub_1A3C85624();
      swift_allocError();
      static VisionError.internalError(message:)(0xD00000000000003FLL, 0x80000001A40B6F10, v12);
      return swift_willThrow();
    }
    else
    {
      uint64_t v13 = sub_1A3DA61D8((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FaceObservation);
      uint64_t v14 = (double *)&v10[*(int *)(v7 + 40)];
      double v15 = *v14;
      double v16 = v14[1];
      double v17 = v14[2];
      double v18 = v14[3];
      float v19 = (*(float (**)(uint64_t))(v1 + 328))(v13);
      v21.origin.x = sub_1A3CAF89C(v15, v16, v17, v18, v19);
      NormalizedRect.init(normalizedRect:)(v21);
      return sub_1A3DA68F0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FaceObservation);
    }
  }
  return result;
}

uint64_t sub_1A3DA3104(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF470);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HumanObservation();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (double *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1A3CB0CA0(a1, (uint64_t)v6);
  if (!v2)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1A3CA2EB8((uint64_t)v6, (uint64_t *)&unk_1E95EF470);
      sub_1A3C85624();
      swift_allocError();
      static VisionError.internalError(message:)(0xD000000000000040, 0x80000001A40B6F50, v12);
      return swift_willThrow();
    }
    else
    {
      uint64_t v13 = sub_1A3DA61D8((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HumanObservation);
      double v14 = v10[1];
      double v15 = v10[2];
      double v16 = v10[3];
      double v17 = v10[4];
      float v18 = (*(float (**)(uint64_t))(v1 + 328))(v13);
      v20.origin.x = sub_1A3CAF89C(v14, v15, v16, v17, v18);
      NormalizedRect.init(normalizedRect:)(v20);
      return sub_1A3DA68F0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HumanObservation);
    }
  }
  return result;
}

uint64_t sub_1A3DA3330(void *a1)
{
  uint64_t v2 = sub_1A3E19D24();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v11 = *(void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v11 + 360))(v2, v4, v6, v8 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_1A3DA3430()
{
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD00000000000002ELL;
  *(void *)(v0 + 8) = 0x80000001A40B65F0;
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 20;
  return swift_willThrow();
}

uint64_t sub_1A3DA34A0(unint64_t *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v6 = (uint64_t)v5;
  v106 = a1;
  uint64_t v11 = *v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF2E8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v96 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v100 = (uint64_t)&v93 - v15;
  uint64_t v107 = sub_1A4095ECC();
  uint64_t v16 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  float v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  __C::CGRect v21 = (char *)&v93 - v20;
  uint64_t v22 = sub_1A4095EFC();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1A3D9236C();
  uint64_t v102 = v23;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v103 = v22;
  v27(v25, v26, v22);
  uint64_t v28 = sub_1A3D92248();
  uint64_t v29 = *v28;
  char v30 = *((unsigned char *)v28 + 16);
  swift_retain_n();
  sub_1A4095EBC();
  v101 = v25;
  unint64_t v31 = sub_1A4095EDC();
  int v99 = sub_1A409678C();
  char v32 = sub_1A40968EC();
  uint64_t v105 = v11;
  if (v32)
  {
    uint64_t v98 = v16;
    v97 = (void *)v6;
    if ((v30 & 1) == 0)
    {
      if (v29)
      {
        uint64_t v33 = v98;
        v95 = v29;
LABEL_10:
        v94 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
        v94(v18, v21, v107);
        uint64_t v36 = swift_slowAlloc();
        uint64_t v93 = swift_slowAlloc();
        v110[0] = v93;
        *(_DWORD *)uint64_t v36 = 136315394;
        uint64_t v37 = (*(uint64_t (**)(void))(v11 + 136))();
        *(void *)&long long v108 = sub_1A3CB8AB0(v37, v38, v110);
        sub_1A409695C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 12) = 2080;
        type metadata accessor for E5RTBasedDetector();
        uint64_t v6 = (uint64_t)v97;
        uint64_t v39 = sub_1A3CA9EBC((uint64_t)v97);
        *(void *)&long long v108 = sub_1A3CB8AB0(v39, v40, v110);
        uint64_t v35 = v107;
        sub_1A409695C();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v41 = sub_1A4095EAC();
        _os_signpost_emit_with_name_impl(&dword_1A3C62000, v31, (os_signpost_type_t)v99, v41, v95, "Detector (%s, %s): createRegionOfInterestCrop", (uint8_t *)v36, 0x16u);
        uint64_t v42 = v93;
        swift_arrayDestroy();
        MEMORY[0x1A6257B40](v42, -1, -1);
        uint64_t v16 = v98;
        MEMORY[0x1A6257B40](v36, -1, -1);

        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v35);
        v34 = v94;
        goto LABEL_11;
      }
LABEL_28:
      uint64_t result = swift_release_n();
      __break(1u);
      goto LABEL_29;
    }
    if ((unint64_t)v29 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v29 >> 11 == 27)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      uint64_t v33 = v98;
      if (v29 >> 16 <= 0x10)
      {
        v95 = &v114;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  swift_release_n();

  v34 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v35 = v107;
LABEL_11:
  uint64_t v43 = v106;
  v34(v18, v21, v35);
  sub_1A4095F3C();
  swift_allocObject();
  uint64_t v44 = sub_1A4095F2C();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v35);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v103);
  sub_1A3D5D2DC(2);
  uint64_t v45 = *v43;
  uint64_t v46 = v104;
  sub_1A3D94A48(*v43);
  if (v46)
  {
    uint64_t v58 = v44;
    uint64_t v59 = v6;
    goto LABEL_14;
  }
  double v47 = (double)sub_1A3CB60E4();
  unsigned int v48 = sub_1A3CB6270();
  static ImageCoordinateConversionHelpers.imageRectForNormalizedRect(normalizedRect:imageSize:)(a2, a3, a4, a5, v47, (double)v48);
  CGFloat v50 = v49;
  CGFloat v52 = v51;
  double v54 = v53;
  double v56 = v55;
  uint64_t v57 = v100;
  sub_1A3CB0C64(v45, v100);
  v97 = (void *)v6;
  uint64_t v61 = type metadata accessor for FaceObservation();
  v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 48);
  if (v62(v57, 1, v61) == 1)
  {
    v63 = v97;
    goto LABEL_18;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v105 + 368))(v110, v45);
  double v77 = *(double *)v110;
  double v78 = *(double *)&v110[1];
  double v79 = *(double *)&v110[2];
  double v80 = v111;
  double v81 = (double)sub_1A3CB60E4();
  unsigned int v82 = sub_1A3CB6270();
  static ImageCoordinateConversionHelpers.imageRectForNormalizedRect(normalizedRect:imageSize:)(v77, v78, v79, v80, v81, (double)v82);
  CGFloat v50 = v83;
  CGFloat v52 = v84;
  double v54 = v85;
  double v56 = v86;
  uint64_t v87 = v96;
  sub_1A3D98280(v100, v96);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v62)(v87, 1, v61);
  if (result != 1)
  {
    uint64_t v88 = sub_1A3DF3360();
    v63 = v97;
    uint64_t v90 = v88;
    sub_1A3DA68F0(v87, (uint64_t (*)(void))type metadata accessor for FaceObservation);
    unint64_t v91 = sub_1A3D945AC(8);
    double v111 = MEMORY[0x1E4FBB550];
    v110[0] = v90;
    sub_1A3C8BC40((uint64_t)v110, v91, v92);
LABEL_18:
    uint64_t v64 = *v106;
    unint64_t v65 = sub_1A3D945AC(0);
    LOBYTE(v108) = 0;
    sub_1A3CB0654(v65, v66, v64, (uint64_t)&v108, (uint64_t)&type metadata for ImageCropAndScaleAction, (uint64_t)v110);
    swift_bridgeObjectRelease();
    LOBYTE(v108) = v110[0];
    char v113 = 2;
    static ImageCropAndScaleAction.== infix(_:_:)(&v108, &v113);
    uint64_t v45 = v63[6];
    uint64_t v67 = v63[7];
    v68 = __swift_project_boxed_opaque_existential_1(v63 + 3, v45);
    uint64_t v69 = *(void *)(v45 - 8);
    __n128 v70 = MEMORY[0x1F4188790](v68);
    v72 = (char *)&v93 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v69 + 16))(v72, v70);
    (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v67 + 8) + 64))(&v108, v45);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v72, v45);
    if (v109)
    {
      sub_1A3C856DC(&v108, (uint64_t)v110);
      *(void *)&long long v108 = 0;
      *((void *)&v108 + 1) = 0xE000000000000000;
      sub_1A4096A2C();
      sub_1A409621C();
      sub_1A409621C();
      __swift_project_boxed_opaque_existential_1(v110, *(uint64_t *)&v111);
      sub_1A4096E3C();
      sub_1A409621C();
      __swift_project_boxed_opaque_existential_1(v110, *(uint64_t *)&v111);
      swift_getDynamicType();
      sub_1A409701C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      uint64_t v73 = *(void *)&v111;
      uint64_t v74 = v112;
      __swift_project_boxed_opaque_existential_1(v110, *(uint64_t *)&v111);
      LODWORD(v73) = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 24))(v73, v74);
      uint64_t v75 = *(void *)&v111;
      uint64_t v76 = v112;
      __swift_project_boxed_opaque_existential_1(v110, *(uint64_t *)&v111);
      LODWORD(v75) = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 32))(v75, v76);
      *(void *)&long long v108 = 0;
      *((void *)&v108 + 1) = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      uint64_t v45 = (uint64_t)sub_1A3CB6920(v73, (char *)v75, 1278226488, *v106, v50, v52, v54, v56);
      *(void *)&long long v108 = 0;
      *((void *)&v108 + 1) = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      swift_release();
      sub_1A3CA2EB8(v100, &qword_1E95EF2E8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
      sub_1A3DA4168(v44, (uint64_t)v97, v105);
      swift_release();
      return v45;
    }
    sub_1A3CA2EB8((uint64_t)&v108, (uint64_t *)&unk_1E95EF480);
    sub_1A3C85624();
    swift_allocError();
    static VisionError.internalError(message:)(0xD000000000000028, 0x80000001A40B6FD0, v89);
    swift_willThrow();
    swift_release();
    sub_1A3CA2EB8(v100, &qword_1E95EF2E8);
    uint64_t v58 = v44;
    uint64_t v59 = (uint64_t)v97;
LABEL_14:
    sub_1A3DA4168(v58, v59, v105);
    swift_release();
    return v45;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A3DA4168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a3;
  uint64_t v4 = sub_1A4095F0C();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  MEMORY[0x1F4188790](v4);
  double v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1A4095ECC();
  uint64_t v6 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v46 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = sub_1A4095EFC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A3D9236C();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v16 = sub_1A3D92248();
  double v49 = *v16;
  char v17 = *((unsigned char *)v16 + 16);
  swift_retain_n();
  float v18 = sub_1A4095EDC();
  sub_1A4095F1C();
  int v44 = sub_1A409677C();
  if ((sub_1A40968EC() & 1) == 0)
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = v12;
  uint64_t v39 = v14;
  os_log_t v37 = v18;
  uint64_t v40 = v11;
  uint64_t v41 = a2;
  if (v17)
  {
    if ((unint64_t)v49 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v49 >> 11 == 27)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v20 = v47;
      if (v49 >> 16 <= 0x10)
      {
        uint64_t v19 = v6;
        double v49 = &v52;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  if (!v49)
  {
LABEL_18:
    uint64_t result = swift_release_n();
    __break(1u);
    return result;
  }
  uint64_t v19 = v6;
  uint64_t v20 = v47;
LABEL_10:
  swift_retain();
  sub_1A4095F4C();
  swift_release();
  uint64_t v23 = v42;
  uint64_t v22 = v43;
  if ((*(unsigned int (**)(const char *, uint64_t))(v42 + 88))(v20, v43) == *MEMORY[0x1E4FBD340])
  {
    char v24 = 0;
    double v47 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(const char *, uint64_t))(v23 + 8))(v20, v22);
    double v47 = "Detector (%s, %s): createRegionOfInterestCrop";
    char v24 = 2;
  }
  uint64_t v25 = v10;
  uint64_t v26 = v46;
  uint64_t v27 = v48;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v46, v10, v48);
  uint64_t v28 = swift_slowAlloc();
  uint64_t v29 = swift_slowAlloc();
  uint64_t v51 = v29;
  *(unsigned char *)uint64_t v28 = v24;
  *(unsigned char *)(v28 + 1) = v24;
  *(_WORD *)(v28 + 2) = 2080;
  uint64_t v30 = (*(uint64_t (**)(void))(v45 + 136))();
  uint64_t v50 = sub_1A3CB8AB0(v30, v31, &v51);
  sub_1A409695C();
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 12) = 2080;
  type metadata accessor for E5RTBasedDetector();
  uint64_t v32 = sub_1A3CA9EBC(v41);
  uint64_t v50 = sub_1A3CB8AB0(v32, v33, &v51);
  sub_1A409695C();
  swift_release_n();
  swift_bridgeObjectRelease();
  os_signpost_id_t v34 = sub_1A4095EAC();
  os_log_t v35 = v37;
  _os_signpost_emit_with_name_impl(&dword_1A3C62000, v37, (os_signpost_type_t)v44, v34, v49, v47, (uint8_t *)v28, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1A6257B40](v29, -1, -1);
  MEMORY[0x1A6257B40](v28, -1, -1);

  uint64_t v36 = *(void (**)(char *, uint64_t))(v19 + 8);
  v36(v25, v27);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  return ((uint64_t (*)(char *, uint64_t))v36)(v26, v27);
}

uint64_t sub_1A3DA46B0@<X0>(char *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  v148 = a2;
  uint64_t v4 = (uint64_t)v3;
  v140 = a1;
  v130 = a3;
  uint64_t v152 = *v3;
  uint64_t v127 = sub_1A4095F0C();
  uint64_t v129 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  v128 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v141 = (os_log_t)type metadata accessor for E5RTInferenceFunctionDescriptor();
  MEMORY[0x1F4188790](v141);
  v133 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v139 = (char *)&v115 - v8;
  uint64_t v9 = sub_1A4095ECC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  v132 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v137 = (char *)&v115 - v13;
  MEMORY[0x1F4188790](v14);
  v153 = (char *)&v115 - v15;
  MEMORY[0x1F4188790](v16);
  float v18 = (char *)&v115 - v17;
  uint64_t v19 = sub_1A4095EFC();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  v131 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  v138 = (char *)&v115 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v115 - v25;
  uint64_t v27 = sub_1A3D9236C();
  uint64_t v150 = v20;
  uint64_t v28 = *(void (**)(const char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v135 = v27;
  uint64_t v149 = v19;
  uint64_t v136 = v20 + 16;
  v134 = v28;
  ((void (*)(char *))v28)(v26);
  uint64_t v29 = sub_1A3D92254();
  uint64_t v30 = *v29;
  char v31 = *((unsigned char *)v29 + 16);
  swift_retain_n();
  sub_1A4095EBC();
  uint64_t v32 = sub_1A4095EDC();
  LODWORD(v146) = sub_1A409678C();
  char v33 = sub_1A40968EC();
  v151 = (void **)v4;
  if ((v33 & 1) == 0)
  {
    swift_release_n();

    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    unint64_t v37 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v38 = v10;
    v36(v153, v18, v9);
    goto LABEL_11;
  }
  uint64_t v34 = v152;
  uint64_t v145 = v10;
  if ((v31 & 1) == 0)
  {
    if (!v30)
    {
LABEL_48:
      swift_release_n();
      __break(1u);
      goto LABEL_49;
    }
    uint64_t v35 = v145;
    v126 = v30;
    goto LABEL_10;
  }
  if ((unint64_t)v30 >> 32)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v30 >> 11 == 27)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v35 = v145;
  if (v30 >> 16 > 0x10)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v126 = &v158;
LABEL_10:
  v143 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  unint64_t v142 = (v35 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v143(v153, v18, v9);
  uint64_t v39 = swift_slowAlloc();
  uint64_t v144 = v9;
  uint64_t v40 = v39;
  uint64_t v41 = swift_slowAlloc();
  v156 = (void (*)(void, void, void))v41;
  *(_DWORD *)uint64_t v40 = 136315394;
  uint64_t v42 = (*(uint64_t (**)(void))(v34 + 136))();
  *(void *)&long long v155 = sub_1A3CB8AB0(v42, v43, (uint64_t *)&v156);
  sub_1A409695C();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 12) = 2080;
  type metadata accessor for E5RTBasedDetector();
  uint64_t v44 = sub_1A3CA9EBC((uint64_t)v151);
  *(void *)&long long v155 = sub_1A3CB8AB0(v44, v45, (uint64_t *)&v156);
  uint64_t v46 = v153;
  uint64_t v38 = v145;
  sub_1A409695C();
  swift_release_n();
  swift_bridgeObjectRelease();
  os_signpost_id_t v47 = sub_1A4095EAC();
  _os_signpost_emit_with_name_impl(&dword_1A3C62000, v32, (os_signpost_type_t)v146, v47, v126, "Detector (%s, %s): processRegionOfInterest", (uint8_t *)v40, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1A6257B40](v41, -1, -1);
  uint64_t v48 = v40;
  uint64_t v9 = v144;
  MEMORY[0x1A6257B40](v48, -1, -1);

  unint64_t v37 = v142;
  uint64_t v36 = v143;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v46, v9);
  v36(v46, v18, v9);
LABEL_11:
  double v49 = v36;
  uint64_t v50 = sub_1A4095F3C();
  swift_allocObject();
  uint64_t v146 = sub_1A4095F2C();
  double v53 = *(const char **)(v38 + 8);
  uint64_t v51 = v38 + 8;
  char v52 = v53;
  ((void (*)(char *, uint64_t))v53)(v18, v9);
  uint64_t v54 = v150 + 8;
  double v55 = *(void (**)(char *, uint64_t))(v150 + 8);
  v55(v26, v149);
  sub_1A3D5D2DC(2);
  uint64_t v56 = v147;
  sub_1A3CB0BA4(*v148);
  if (v56)
  {
    uint64_t v90 = v146;
    uint64_t v91 = (uint64_t)v151;
    uint64_t v92 = v152;
LABEL_24:
    sub_1A3DA59D4(v90, v91, v92, (uint64_t (*)(uint64_t))sub_1A3D92254);
    return swift_release();
  }
  v125 = (void (*)(const char *, uint64_t))v55;
  uint64_t v147 = v50;
  v126 = (char *)v52;
  unint64_t v142 = v37;
  v143 = v49;
  uint64_t v150 = v54;
  uint64_t v145 = v51;
  uint64_t v144 = v9;
  int v57 = v156;
  uint64_t v58 = (uint64_t)v151;
  int v59 = BYTE1(v156);
  v156 = 0;
  unint64_t v157 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  int v124 = v57;
  LOBYTE(v155) = v57;
  BYTE1(v155) = v59;
  sub_1A3CFB1AC();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v60 = v58 + 24;
  sub_1A3C85678(v58 + 24, (uint64_t)&v156);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF330);
  uint64_t v62 = (uint64_t)v139;
  swift_dynamicCast();
  v63 = (void **)v58;
  uint64_t v64 = sub_1A3DA6240(v140);
  v121 = "terestCrop(_:_:)";
  uint64_t v122 = v61;
  uint64_t v123 = v60;
  LODWORD(v140) = v59;
  sub_1A3DA68F0(v62, (uint64_t (*)(void))type metadata accessor for E5RTInferenceFunctionDescriptor);
  v156 = 0;
  unint64_t v157 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  unint64_t v65 = *(uint64_t (**)(uint64_t))(*v63[8] + 424);
  swift_retain();
  uint64_t v66 = v65(v64);
  uint64_t v119 = v64;
  swift_release();
  v156 = 0;
  unint64_t v157 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  v134(v138, v135, v149);
  uint64_t v67 = sub_1A3D9229C();
  v68 = *v67;
  char v69 = *((unsigned char *)v67 + 16);
  swift_retain_n();
  __n128 v70 = v137;
  sub_1A4095EBC();
  uint64_t v71 = sub_1A4095EDC();
  int v72 = sub_1A409678C();
  v120 = v71;
  char v73 = sub_1A40968EC();
  v139 = (char *)v66;
  v118 = v67;
  if (v73)
  {
    int v117 = v72;
    if ((v69 & 1) == 0)
    {
      if (!v68)
      {
LABEL_49:
        swift_release_n();
        __break(1u);
        goto LABEL_50;
      }
      uint64_t v74 = v68;
      goto LABEL_22;
    }
    if (!((unint64_t)v68 >> 32))
    {
      if (v68 >> 11 == 27)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      if (v68 >> 16 <= 0x10)
      {
        uint64_t v74 = &v159;
LABEL_22:
        uint64_t v76 = v153;
        v143(v153, v70, v144);
        uint64_t v79 = swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        v156 = (void (*)(void, void, void))v80;
        *(_DWORD *)uint64_t v79 = 136315394;
        uint64_t v116 = v79 + 4;
        uint64_t v81 = (*(uint64_t (**)(void))(v152 + 136))();
        *(void *)&long long v155 = sub_1A3CB8AB0(v81, v82, (uint64_t *)&v156);
        sub_1A409695C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v79 + 12) = 2080;
        uint64_t v116 = v79 + 14;
        type metadata accessor for E5RTBasedDetector();
        uint64_t v83 = sub_1A3CA9EBC((uint64_t)v63);
        *(void *)&long long v155 = sub_1A3CB8AB0(v83, v84, (uint64_t *)&v156);
        sub_1A409695C();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v85 = sub_1A4095EAC();
        double v86 = v120;
        _os_signpost_emit_with_name_impl(&dword_1A3C62000, v120, (os_signpost_type_t)v117, v85, v74, "Detector (%s, %s", (uint8_t *)v79, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A6257B40](v80, -1, -1);
        uint64_t v75 = v144;
        MEMORY[0x1A6257B40](v79, -1, -1);

        double v78 = v126;
        ((void (*)(char *, uint64_t))v126)(v76, v75);
        double v77 = v143;
        __n128 v70 = v137;
        goto LABEL_23;
      }
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  swift_release_n();

  uint64_t v75 = v144;
  uint64_t v76 = v153;
  double v77 = v143;
  double v78 = v126;
LABEL_23:
  char v87 = v124;
  v77(v76, v70, v75);
  swift_allocObject();
  uint64_t v88 = sub_1A4095F2C();
  ((void (*)(char *, uint64_t))v78)(v70, v75);
  v125(v138, v149);
  sub_1A3C85678(v123, (uint64_t)&v156);
  uint64_t v89 = (uint64_t)v133;
  swift_dynamicCast();
  LOBYTE(v154) = v87;
  BYTE1(v154) = (_BYTE)v140;
  ((void (*)(long long *__return_ptr, char *, uint64_t, uint64_t *, uint64_t))(*v63)[51])(&v155, v139, v89, &v154, *v148);
  sub_1A3DA68F0(v89, (uint64_t (*)(void))type metadata accessor for E5RTInferenceFunctionDescriptor);
  v94 = v131;
  v134(v131, v135, v149);
  unint64_t v95 = (unint64_t)*v118;
  char v96 = *((unsigned char *)v118 + 16);
  swift_retain_n();
  v97 = sub_1A4095EDC();
  uint64_t v98 = v132;
  v148 = (uint64_t *)v88;
  sub_1A4095F1C();
  LODWORD(v147) = sub_1A409677C();
  if ((sub_1A40968EC() & 1) == 0)
  {
    swift_release_n();

    ((void (*)(char *, uint64_t))v126)(v98, v144);
    v125(v94, v149);
    uint64_t v102 = v152;
LABEL_38:
    v156 = 0;
    unint64_t v157 = 0xE000000000000000;
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A4096BAC();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    sub_1A3C856F4(&v155, v130);
    uint64_t v90 = v146;
    uint64_t v91 = (uint64_t)v63;
    uint64_t v92 = v102;
    goto LABEL_24;
  }
  os_log_t v141 = v97;
  if (v96)
  {
    uint64_t v99 = v129;
    uint64_t v100 = v128;
    if (!HIDWORD(v95))
    {
      uint64_t v101 = v127;
      if (v95 >> 11 == 27)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      if (WORD1(v95) <= 0x10u)
      {
        v140 = &v160;
        goto LABEL_34;
      }
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v99 = v129;
  uint64_t v100 = v128;
  v140 = (char *)v95;
  if (v95)
  {
    uint64_t v101 = v127;
LABEL_34:
    swift_retain();
    sub_1A4095F4C();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t))(v99 + 88))(v100, v101) == *MEMORY[0x1E4FBD340])
    {
      char v103 = 0;
      v138 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v101);
      v138 = "Detector (%s, %s";
      char v103 = 2;
    }
    v143(v153, v132, v144);
    uint64_t v104 = swift_slowAlloc();
    v143 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
    v156 = (void (*)(void, void, void))v143;
    *(unsigned char *)uint64_t v104 = v103;
    *(unsigned char *)(v104 + 1) = v103;
    *(_WORD *)(v104 + 2) = 2080;
    uint64_t v102 = v152;
    uint64_t v105 = (*(uint64_t (**)(void))(v152 + 136))();
    uint64_t v154 = sub_1A3CB8AB0(v105, v106, (uint64_t *)&v156);
    sub_1A409695C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v104 + 12) = 2080;
    type metadata accessor for E5RTBasedDetector();
    v63 = v151;
    uint64_t v107 = sub_1A3CA9EBC((uint64_t)v151);
    uint64_t v154 = sub_1A3CB8AB0(v107, v108, (uint64_t *)&v156);
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v109 = v153;
    os_signpost_id_t v110 = sub_1A4095EAC();
    os_log_t v111 = v141;
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v141, (os_signpost_type_t)v147, v110, v140, v138, (uint8_t *)v104, 0x16u);
    uint64_t v112 = v143;
    swift_arrayDestroy();
    MEMORY[0x1A6257B40](v112, -1, -1);
    MEMORY[0x1A6257B40](v104, -1, -1);

    uint64_t v113 = v144;
    char v114 = v126;
    ((void (*)(char *, uint64_t))v126)(v132, v144);
    v125(v131, v149);
    ((void (*)(char *, uint64_t))v114)(v109, v113);
    goto LABEL_38;
  }
LABEL_50:
  uint64_t result = swift_release_n();
  __break(1u);
  return result;
}

uint64_t sub_1A3DA59D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v48 = a3;
  uint64_t v6 = sub_1A4095F0C();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v50 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1A4095ECC();
  uint64_t v8 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  double v49 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = sub_1A4095EFC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A3D9236C();
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v19 = a4(v18);
  char v52 = *(const char **)v19;
  char v20 = *(unsigned char *)(v19 + 16);
  swift_retain_n();
  uint64_t v21 = sub_1A4095EDC();
  sub_1A4095F1C();
  int v47 = sub_1A409677C();
  if ((sub_1A40968EC() & 1) == 0)
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  uint64_t v41 = v14;
  uint64_t v42 = v16;
  os_log_t v40 = v21;
  uint64_t v43 = v13;
  uint64_t v44 = a2;
  if (v20)
  {
    if ((unint64_t)v52 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v52 >> 11 == 27)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v23 = v50;
      if (v52 >> 16 <= 0x10)
      {
        uint64_t v22 = v8;
        char v52 = &v55;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  if (!v52)
  {
LABEL_18:
    uint64_t result = swift_release_n();
    __break(1u);
    return result;
  }
  uint64_t v22 = v8;
  uint64_t v23 = v50;
LABEL_10:
  swift_retain();
  sub_1A4095F4C();
  swift_release();
  uint64_t v26 = v45;
  uint64_t v25 = v46;
  if ((*(unsigned int (**)(const char *, uint64_t))(v45 + 88))(v23, v46) == *MEMORY[0x1E4FBD340])
  {
    char v27 = 0;
    uint64_t v50 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(const char *, uint64_t))(v26 + 8))(v23, v25);
    uint64_t v50 = "Detector (%s, %s): processRegionOfInterest";
    char v27 = 2;
  }
  uint64_t v28 = v12;
  uint64_t v29 = v49;
  uint64_t v30 = v51;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v49, v12, v51);
  uint64_t v31 = swift_slowAlloc();
  uint64_t v32 = swift_slowAlloc();
  uint64_t v54 = v32;
  *(unsigned char *)uint64_t v31 = v27;
  *(unsigned char *)(v31 + 1) = v27;
  *(_WORD *)(v31 + 2) = 2080;
  uint64_t v33 = (*(uint64_t (**)(void))(v48 + 136))();
  uint64_t v53 = sub_1A3CB8AB0(v33, v34, &v54);
  sub_1A409695C();
  swift_bridgeObjectRelease();
  *(_WORD *)(v31 + 12) = 2080;
  type metadata accessor for E5RTBasedDetector();
  uint64_t v35 = sub_1A3CA9EBC(v44);
  uint64_t v53 = sub_1A3CB8AB0(v35, v36, &v54);
  sub_1A409695C();
  swift_release_n();
  swift_bridgeObjectRelease();
  os_signpost_id_t v37 = sub_1A4095EAC();
  os_log_t v38 = v40;
  _os_signpost_emit_with_name_impl(&dword_1A3C62000, v40, (os_signpost_type_t)v47, v37, v52, v50, (uint8_t *)v31, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1A6257B40](v32, -1, -1);
  MEMORY[0x1A6257B40](v31, -1, -1);

  uint64_t v39 = *(void (**)(char *, uint64_t))(v22 + 8);
  v39(v28, v30);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  return ((uint64_t (*)(char *, uint64_t))v39)(v29, v30);
}

uint64_t sub_1A3DA5F24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(v1 + 3, v4);
  uint64_t v7 = *(void *)(v4 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v5 + 8) + 64))(&v22, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v4);
  if (*((void *)&v23 + 1))
  {
    sub_1A3C856DC(&v22, (uint64_t)v28);
    sub_1A3C856DC(v28, (uint64_t)v27);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF490);
    uint64_t result = swift_dynamicCast();
    uint64_t v12 = v24;
    int v13 = v25;
    long long v14 = v26;
    long long v15 = v23;
    *(_OWORD *)a1 = v22;
    *(_OWORD *)(a1 + 16) = v15;
    *(void *)(a1 + 32) = v12;
    *(_DWORD *)(a1 + 40) = v13;
    *(_OWORD *)(a1 + 48) = v14;
  }
  else
  {
    sub_1A3CA2EB8((uint64_t)&v22, (uint64_t *)&unk_1E95EF480);
    *(void *)&long long v22 = 0;
    *((void *)&v22 + 1) = 0xE000000000000000;
    uint64_t v16 = sub_1A4096A2C();
    uint64_t v17 = (*(uint64_t (**)(uint64_t))(*v2 + 288))(v16);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)&long long v22 = v17;
    *((void *)&v22 + 1) = v19;
    sub_1A409621C();
    long long v20 = v22;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.internalError(message:)(v20, *((uint64_t *)&v20 + 1), v21);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A3DA618C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 288))();
}

uint64_t sub_1A3DA61D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3DA6240(void *a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v45 = a1;
  uint64_t v3 = *v1;
  uint64_t v52 = sub_1A4095ECC();
  uint64_t v4 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = sub_1A4095EFC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A3D9236C();
  uint64_t v48 = v11;
  long long v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v49 = v10;
  v15(v13, v14, v10);
  uint64_t v16 = sub_1A3D92260();
  uint64_t v17 = *v16;
  char v18 = *((unsigned char *)v16 + 16);
  swift_retain_n();
  sub_1A4095EBC();
  int v47 = v13;
  uint64_t v19 = sub_1A4095EDC();
  int v46 = sub_1A409678C();
  char v20 = sub_1A40968EC();
  uint64_t v50 = v3;
  if (v20)
  {
    uint64_t v44 = v2;
    if ((v18 & 1) == 0)
    {
      if (v17)
      {
        uint64_t v21 = v3;
        os_log_t v40 = v17;
LABEL_10:
        uint64_t v43 = v4;
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
        v42(v6, v9, v52);
        uint64_t v23 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        *(void *)&v53[0] = v41;
        *(_DWORD *)uint64_t v23 = 136315394;
        uint64_t v24 = (*(uint64_t (**)(void))(v21 + 136))();
        uint64_t v54 = sub_1A3CB8AB0(v24, v25, (uint64_t *)v53);
        sub_1A409695C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2080;
        type metadata accessor for E5RTBasedDetector();
        uint64_t v2 = v44;
        uint64_t v26 = sub_1A3CA9EBC(v44);
        uint64_t v54 = sub_1A3CB8AB0(v26, v27, (uint64_t *)v53);
        sub_1A409695C();
        swift_release_n();
        uint64_t v22 = v52;
        swift_bridgeObjectRelease();
        os_signpost_id_t v28 = sub_1A4095EAC();
        _os_signpost_emit_with_name_impl(&dword_1A3C62000, v19, (os_signpost_type_t)v46, v28, v40, "Detector (%s, %s): processRegionOfInterest", (uint8_t *)v23, 0x16u);
        uint64_t v29 = v41;
        swift_arrayDestroy();
        MEMORY[0x1A6257B40](v29, -1, -1);
        MEMORY[0x1A6257B40](v23, -1, -1);

        uint64_t v4 = v43;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v22);
        v42(v6, v9, v22);
        goto LABEL_11;
      }
LABEL_19:
      uint64_t result = swift_release_n();
      __break(1u);
      return result;
    }
    if ((unint64_t)v17 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v17 >> 11 == 27)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      if (v17 >> 16 <= 0x10)
      {
        uint64_t v21 = v3;
        os_log_t v40 = &v61;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  swift_release_n();

  uint64_t v22 = v52;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v52);
LABEL_11:
  sub_1A4095F3C();
  swift_allocObject();
  uint64_t v30 = sub_1A4095F2C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v22);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v49);
  uint64_t v31 = type metadata accessor for NamedObjects();
  uint64_t v32 = v51;
  uint64_t v33 = sub_1A3E071DC();
  if (!v32)
  {
    uint64_t v22 = v33;
    uint64_t v56 = v33;
    unint64_t v34 = v45;
    if (v45)
    {
      sub_1A3DA5F24((uint64_t)&v57);
      *(void *)&v53[0] = 0;
      *((void *)&v53[0] + 1) = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      uint64_t v54 = 0xD00000000000003BLL;
      unint64_t v55 = 0x80000001A40B72C0;
      v53[0] = v57;
      v53[1] = v58;
      v53[2] = v59;
      v53[3] = v60;
      sub_1A3DA6950();
      sub_1A4096E1C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      uint64_t v36 = *((void *)&v58 + 1);
      uint64_t v35 = v58;
      uint64_t v37 = sub_1A3DA69A4((unint64_t *)&unk_1E95EF4A0, (void (*)(uint64_t))type metadata accessor for NamedObjects);
      sub_1A3E0C0F0(v34, v35, v36, v31, v37);
      sub_1A3DA69EC((uint64_t)&v57);
      uint64_t v22 = v56;
    }
  }
  sub_1A3DA59D4(v30, v2, v50, (uint64_t (*)(uint64_t))sub_1A3D92260);
  swift_release();
  return v22;
}

uint64_t sub_1A3DA68F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A3DA6950()
{
  unint64_t result = qword_1E95EF498;
  if (!qword_1E95EF498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF498);
  }
  return result;
}

uint64_t sub_1A3DA69A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3DA69EC(uint64_t a1)
{
  return a1;
}

void sub_1A3DA6A34()
{
}

uint64_t static ClassifyImageRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static ClassifyImageRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t ClassifyImageRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3DA6A80(uint64_t a1)
{
  unint64_t v2 = sub_1A3DA6D40();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DA6ABC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DA6D40();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DA6AF8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DA6D94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DA6B34(uint64_t a1)
{
  unint64_t v2 = sub_1A3DA6D94();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClassifyImageRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF4D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF4D8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DA6D40();
  sub_1A4096FEC();
  sub_1A3DA6D94();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3DA6D40()
{
  unint64_t result = qword_1E9620548;
  if (!qword_1E9620548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9620548);
  }
  return result;
}

unint64_t sub_1A3DA6D94()
{
  unint64_t result = qword_1E9620550[0];
  if (!qword_1E9620550[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9620550);
  }
  return result;
}

uint64_t ClassifyImageRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t ClassifyImageRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF4E0);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF4E8);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DA6D40();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3DA6D94();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      int v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *int v13 = &type metadata for ClassifyImageRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DA7114(void *a1)
{
  return ClassifyImageRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3DA712C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF4D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF4D8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DA6D40();
  sub_1A4096FEC();
  sub_1A3DA6D94();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double ClassifyImageRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(&v8);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3DA7960();
    sub_1A3E2C988((uint64_t)&type metadata for ClassifyImageRequest, v5, v6);
  }
  *(unsigned char *)a2 = 2;
  *(__n128 *)(a2 + 8) = v8;
  double result = v9[0];
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v9;
  *(void *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) = 1;
  *(void *)(a2 + 56) = 0;
  *(_WORD *)(a2 + 64) = 1;
  *(void *)(a2 + 72) = v4;
  return result;
}

uint64_t ClassifyImageRequest.supportedIdentifiers.getter()
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  char v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  uint64_t v3 = *((void *)v0 + 2);
  unint64_t v4 = (ValueMetadata *)*((void *)v0 + 3);
  unint64_t v5 = *((void *)v0 + 4);
  uint64_t v6 = *((void *)v0 + 5);
  int v7 = v0[48];
  uint64_t v8 = *((void *)v0 + 7);
  int v9 = v0[64];
  char v10 = v0[65];
  uint64_t v11 = *((void *)v0 + 9);
  type metadata accessor for Session();
  Session.__allocating_init()();
  char v38 = v1;
  LOBYTE(v40) = v1;
  *((void *)&v40 + 1) = v2;
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  unint64_t v43 = v5;
  uint64_t v44 = v6;
  char v45 = v7;
  uint64_t v46 = v8;
  char v47 = v9;
  char v48 = v10;
  uint64_t v49 = v11;
  unint64_t v12 = sub_1A3DA79B4();
  uint64_t v13 = swift_retain();
  sub_1A3D453DC(v13, (uint64_t)&type metadata for ClassifyImageRequest, v12);
  int v35 = v7;
  int v36 = v9;
  uint64_t v37 = v14;
  swift_release();
  sub_1A3DA7A08();
  if (!swift_dynamicCastMetatype())
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  type metadata accessor for CoreSceneUnderstandingDetectorRecipient();
  uint64_t v42 = &type metadata for ClassifyImageRequest;
  unint64_t v43 = sub_1A3DA7A48();
  uint64_t v15 = swift_allocObject();
  *(void *)&long long v40 = v15;
  *(unsigned char *)(v15 + 16) = v38;
  *(void *)(v15 + 24) = v2;
  *(void *)(v15 + 32) = v3;
  *(void *)(v15 + 40) = v4;
  *(void *)(v15 + 48) = v5;
  uint64_t v16 = v6;
  *(void *)(v15 + 56) = v6;
  *(unsigned char *)(v15 + 64) = v7;
  *(void *)(v15 + 72) = v8;
  *(unsigned char *)(v15 + 80) = v36;
  *(unsigned char *)(v15 + 81) = v10;
  *(void *)(v15 + 88) = v11;
  swift_bridgeObjectRetain();
  id v17 = sub_1A3C8379C(&v40);
  id v18 = objc_msgSend(objc_allocWithZone((Class)VNCoreSceneUnderstandingDetectorImageClassificationConfiguration), sel_initWithObservationsRecipient_, v17);
  if (v35) {
    uint64_t v16 = sub_1A40959BC();
  }
  objc_msgSend(v18, sel_setMaximumLeafClassifications_, v16, v11);
  if (v36) {
    uint64_t v8 = sub_1A40959BC();
  }
  objc_msgSend(v18, sel_setMaximumHierarchicalClassifications_, v8);
  uint64_t v19 = sub_1A409617C();
  uint64_t v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC5C8);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1A40E88E0;
  *(void *)(v22 + 32) = v18;
  *(void *)&long long v40 = v22;
  sub_1A409632C();
  uint64_t v23 = v40;
  uint64_t v42 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF510);
  *(void *)&long long v40 = v23;
  sub_1A3C856F4(&v40, v39);
  id v24 = v18;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v39, v19, v21, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8F944(v37);
  swift_bridgeObjectRelease();
  unint64_t v27 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  *(void *)&long long v40 = 0;
  id v28 = objc_msgSend(ObjCClassFromMetadata, sel_allClassificationIdentifiersWithConfigurationOptions_error_, v27, &v40);

  uint64_t v29 = (void *)v40;
  if (!v28)
  {
    id v32 = (id)v40;
    uint64_t v33 = (void *)sub_1A4095AEC();

    swift_willThrow();
    goto LABEL_10;
  }
  uint64_t v30 = sub_1A409630C();
  id v31 = v29;

  swift_release();
  return v30;
}

void ClassifyImageRequest.cropAndScaleAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ClassifyImageRequest.cropAndScaleAction.setter(unsigned char *result)
{
  *char v1 = *result;
  return result;
}

uint64_t (*ClassifyImageRequest.cropAndScaleAction.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 ClassifyImageRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 ClassifyImageRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*ClassifyImageRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DA780C()
{
  unint64_t v0 = sub_1A3DA7960();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for ClassifyImageRequest, v0);
  qword_1E9620538 = result;
  return result;
}

uint64_t static ClassifyImageRequest.supportedRevisions.getter()
{
  if (qword_1E9620530 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void ClassifyImageRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 16;
}

uint64_t ClassifyImageRequest.maximumLeafObservations.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ClassifyImageRequest.maximumLeafObservations.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*ClassifyImageRequest.maximumLeafObservations.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t ClassifyImageRequest.maximumHierarchicalObservations.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t ClassifyImageRequest.maximumHierarchicalObservations.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*ClassifyImageRequest.maximumHierarchicalObservations.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void ClassifyImageRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 65);
}

unsigned char *ClassifyImageRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 65) = *result;
  return result;
}

uint64_t (*ClassifyImageRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3DA7960()
{
  unint64_t result = qword_1E95EF4F0;
  if (!qword_1E95EF4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF4F0);
  }
  return result;
}

unint64_t sub_1A3DA79B4()
{
  unint64_t result = qword_1E95EF4F8;
  if (!qword_1E95EF4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF4F8);
  }
  return result;
}

unint64_t sub_1A3DA7A08()
{
  unint64_t result = qword_1E95EF500;
  if (!qword_1E95EF500)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EF500);
  }
  return result;
}

unint64_t sub_1A3DA7A48()
{
  unint64_t result = qword_1E95EF508;
  if (!qword_1E95EF508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF508);
  }
  return result;
}

uint64_t sub_1A3DA7A9C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 96, 7);
}

int *sub_1A3DA7AD4()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF570);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(7, 0, 19);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(7, 0, 19);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(7, 0, 19);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for ClassifyImageRequest.Revision, v0 + 32);
  qword_1E9643D88 = v0;
  return result;
}

uint64_t ClassifyImageRequest.hash(into:)(long long *a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 48);
  int v4 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  sub_1A3CA7378();
  sub_1A40960DC();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  if (v3 != 1)
  {
    sub_1A4096F4C();
    sub_1A4096F3C();
    if (!v4) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1A4096F4C();
    goto LABEL_6;
  }
  sub_1A4096F4C();
  if (v4) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1A4096F4C();
  sub_1A4096F3C();
LABEL_6:
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t ClassifyImageRequest.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 5);
  char v2 = v0[48];
  uint64_t v3 = *((void *)v0 + 7);
  char v4 = v0[64];
  char v5 = v0[65];
  uint64_t v6 = *((void *)v0 + 9);
  char v9 = *v0;
  long long v10 = *(_OWORD *)(v0 + 8);
  long long v11 = *(_OWORD *)(v0 + 24);
  uint64_t v12 = v1;
  char v13 = v2;
  uint64_t v14 = v3;
  char v15 = v4;
  char v16 = v5;
  uint64_t v17 = v6;
  sub_1A4096F2C();
  ClassifyImageRequest.hash(into:)(v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DA7D70(uint64_t a1)
{
  unint64_t v2 = sub_1A3DA79B4();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3DA7DAC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3DA7960();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3DA7E00(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3DA7960();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3DA7E54(_WORD *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1A3DA7E60(uint64_t a1)
{
  unint64_t v2 = sub_1A3DA7960();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3DA7E9C()
{
  uint64_t v1 = *((void *)v0 + 5);
  char v2 = v0[48];
  uint64_t v3 = *((void *)v0 + 7);
  char v4 = v0[64];
  char v5 = v0[65];
  uint64_t v6 = *((void *)v0 + 9);
  char v9 = *v0;
  long long v10 = *(_OWORD *)(v0 + 8);
  long long v11 = *(_OWORD *)(v0 + 24);
  uint64_t v12 = v1;
  char v13 = v2;
  uint64_t v14 = v3;
  char v15 = v4;
  char v16 = v5;
  uint64_t v17 = v6;
  sub_1A4096F2C();
  ClassifyImageRequest.hash(into:)(v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DA7F2C()
{
  uint64_t v1 = *((void *)v0 + 5);
  char v2 = v0[48];
  uint64_t v3 = *((void *)v0 + 7);
  char v4 = v0[64];
  char v5 = v0[65];
  uint64_t v6 = *((void *)v0 + 9);
  char v9 = *v0;
  long long v10 = *(_OWORD *)(v0 + 8);
  long long v11 = *(_OWORD *)(v0 + 24);
  uint64_t v12 = v1;
  char v13 = v2;
  uint64_t v14 = v3;
  char v15 = v4;
  char v16 = v5;
  uint64_t v17 = v6;
  sub_1A4096F2C();
  ClassifyImageRequest.hash(into:)(v8);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DA7FB8()
{
  if (qword_1E9620540 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DA8014(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA944();

  return sub_1A3E2C684(a1, a2);
}

void sub_1A3DA8060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 40);
  int v5 = *(unsigned __int8 *)(v2 + 48);
  uint64_t v6 = *(void *)(v2 + 56);
  int v7 = *(unsigned __int8 *)(v2 + 64);
  id v8 = objc_msgSend(objc_allocWithZone((Class)VNCoreSceneUnderstandingDetectorImageClassificationConfiguration), sel_initWithObservationsRecipient_, a2);
  if (v5 == 1) {
    uint64_t v4 = sub_1A40959BC();
  }
  objc_msgSend(v8, sel_setMaximumLeafClassifications_, v4);
  if (v7) {
    uint64_t v6 = sub_1A40959BC();
  }
  objc_msgSend(v8, sel_setMaximumHierarchicalClassifications_, v6);
  uint64_t v9 = sub_1A409617C();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC5C8);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1A40E88E0;
  *(void *)(v12 + 32) = v8;
  v17[0] = v12;
  sub_1A409632C();
  v17[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF510);
  char v13 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
  id v14 = v8;
  char v15 = (void (*)(unsigned char *, void))v13(v16);
  sub_1A3C8BC40((uint64_t)v17, v9, v11);
  v15(v16, 0);
}

uint64_t _s6Vision20ClassifyImageRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, char *a2)
{
  CGFloat v2 = *(double *)(a1 + 8);
  CGFloat v3 = *(double *)(a1 + 16);
  CGFloat v4 = *(double *)(a1 + 24);
  CGFloat v5 = *(double *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  char v9 = *(unsigned char *)(a1 + 64);
  char v10 = *(unsigned char *)(a1 + 65);
  char v11 = *a2;
  CGFloat v12 = *((double *)a2 + 1);
  CGFloat v13 = *((double *)a2 + 2);
  CGFloat v14 = *((double *)a2 + 3);
  CGFloat v15 = *((double *)a2 + 4);
  uint64_t v16 = *((void *)a2 + 5);
  int v17 = a2[48];
  uint64_t v18 = *((void *)a2 + 7);
  int v19 = a2[64];
  char v20 = a2[65];
  uint64_t v24 = *((void *)a2 + 9);
  uint64_t v25 = *(void *)(a1 + 72);
  LOBYTE(v27.origin.x) = *(unsigned char *)a1;
  LOBYTE(v26.origin.x) = v11;
  if ((static ImageCropAndScaleAction.== infix(_:_:)(&v27, &v26) & 1) == 0) {
    return 0;
  }
  v27.origin.x = v2;
  v27.origin.y = v3;
  v27.size.width = v4;
  v27.size.height = v5;
  v26.origin.x = v12;
  v26.origin.y = v13;
  v26.size.width = v14;
  v26.size.height = v15;
  if (!static NormalizedRect.== infix(_:_:)(&v27, &v26)) {
    return 0;
  }
  if (v7)
  {
    if (!v17) {
      return 0;
    }
  }
  else
  {
    if (v6 == v16) {
      char v21 = v17;
    }
    else {
      char v21 = 1;
    }
    if (v21) {
      return 0;
    }
  }
  if (v9)
  {
    if (!v19) {
      return 0;
    }
  }
  else
  {
    if (v8 == v18) {
      char v22 = v19;
    }
    else {
      char v22 = 1;
    }
    if (v22) {
      return 0;
    }
  }
  LOBYTE(v27.origin.x) = v10;
  LOBYTE(v26.origin.x) = v20;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v27, (unsigned __int8 *)&v26)) {
    return 0;
  }

  return sub_1A3C8FF4C(v25, v24);
}

unint64_t sub_1A3DA8364()
{
  unint64_t result = qword_1E95EF518[0];
  if (!qword_1E95EF518[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95EF518);
  }
  return result;
}

unint64_t sub_1A3DA83B8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF534();
  unint64_t result = sub_1A3DA83E8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3DA83E8()
{
  unint64_t result = qword_1E95EF550;
  if (!qword_1E95EF550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF550);
  }
  return result;
}

unint64_t sub_1A3DA8440()
{
  unint64_t result = qword_1E95EF558;
  if (!qword_1E95EF558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF558);
  }
  return result;
}

unint64_t sub_1A3DA8498()
{
  unint64_t result = qword_1E95EF560;
  if (!qword_1E95EF560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF560);
  }
  return result;
}

unint64_t sub_1A3DA84EC(uint64_t a1)
{
  unint64_t result = sub_1A3CCA944();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3DA8514(uint64_t a1)
{
  unint64_t result = sub_1A3DA79B4();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3DA853C()
{
  return sub_1A3DA89DC(&qword_1E95EF568, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
}

unint64_t sub_1A3DA8584(uint64_t a1)
{
  unint64_t result = sub_1A3DA7960();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t initializeWithCopy for ClassifyImageRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClassifyImageRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClassifyImageRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClassifyImageRequest()
{
  return &type metadata for ClassifyImageRequest;
}

ValueMetadata *type metadata accessor for ClassifyImageRequest.Revision()
{
  return &type metadata for ClassifyImageRequest.Revision;
}

unsigned char *_s6Vision20ClassifyImageRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DA87DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassifyImageRequest.Revision.CodingKeys()
{
  return &type metadata for ClassifyImageRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for ClassifyImageRequest.Revision.Revision2CodingKeys()
{
  return &type metadata for ClassifyImageRequest.Revision.Revision2CodingKeys;
}

unint64_t sub_1A3DA8828()
{
  unint64_t result = qword_1E9620DE0[0];
  if (!qword_1E9620DE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9620DE0);
  }
  return result;
}

unint64_t sub_1A3DA8880()
{
  unint64_t result = qword_1E9620EF0;
  if (!qword_1E9620EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9620EF0);
  }
  return result;
}

unint64_t sub_1A3DA88D8()
{
  unint64_t result = qword_1E9620EF8[0];
  if (!qword_1E9620EF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9620EF8);
  }
  return result;
}

unint64_t sub_1A3DA8930()
{
  unint64_t result = qword_1E9620F80;
  if (!qword_1E9620F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9620F80);
  }
  return result;
}

unint64_t sub_1A3DA8988()
{
  unint64_t result = qword_1E9620F88[0];
  if (!qword_1E9620F88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9620F88);
  }
  return result;
}

uint64_t sub_1A3DA89DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1A3DA8A28(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16);
}

uint64_t sub_1A3DA8A58()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DA8AC4()
{
  return sub_1A4096F5C();
}

uint64_t sub_1A3DA8B0C()
{
  return sub_1A4096F7C();
}

void CoreMLModelContainer.init(model:featureProvider:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v3 = objc_msgSend(a1, sel_modelDescription);
  id v4 = objc_msgSend(v3, sel_inputDescriptionsByName);

  sub_1A3C8C73C(0, (unint64_t *)&unk_1E95EF580);
  uint64_t v5 = sub_1A409602C();

  uint64_t v6 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_25:
    int v17 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    char v20 = *(void **)(*(void *)(v5 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    id v21 = v20;
    if (objc_msgSend(v21, sel_type) == (id)4)
    {
      id v22 = objc_msgSend(v21, sel_imageConstraint);

      if (v22)
      {
        swift_release();
        swift_bridgeObjectRelease();
        id v23 = objc_msgSend(v21, sel_imageConstraint);
        if (v23)
        {
          uint64_t v24 = v23;
          id v25 = objc_msgSend(v23, sel_pixelsWide);
          id v26 = objc_msgSend(v24, sel_pixelsHigh);
          unsigned int v27 = objc_msgSend(v24, sel_pixelFormatType);

          *(void *)a3 = v18;
          *(void *)(a3 + 8) = v19;
          *(void *)(a3 + 16) = v25;
          *(void *)(a3 + 24) = v26;
          *(_DWORD *)(a3 + 32) = v27;
          *(void *)(a3 + 40) = a2;
          *(void *)(a3 + 48) = a1;
          return;
        }

        goto LABEL_31;
      }
    }

    swift_bridgeObjectRelease();
  }
  int64_t v14 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v14 >= v10) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v14);
  ++v11;
  if (v15) {
    goto LABEL_24;
  }
  int64_t v11 = v14 + 1;
  if (v14 + 1 >= v10) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v11 = v14 + 2;
  if (v14 + 2 >= v10) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v11 = v14 + 3;
  if (v14 + 3 >= v10) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v11 = v14 + 4;
  if (v14 + 4 >= v10) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15)
  {
LABEL_24:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_25;
  }
  int64_t v16 = v14 + 5;
  if (v16 >= v10)
  {
LABEL_29:
    swift_release();
LABEL_31:
    swift_bridgeObjectRelease();
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v28 = 0xD00000000000003BLL;
    *(void *)(v28 + 8) = 0x80000001A40B7300;
    *(_DWORD *)(v28 + 16) = 0;
    *(unsigned char *)(v28 + 20) = 5;
    swift_willThrow();

    swift_unknownObjectRelease();
    return;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v10) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_24;
    }
  }
LABEL_33:
  __break(1u);
}

uint64_t CoreMLModelContainer.inputImageFeatureName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreMLModelContainer.inputImageFeatureName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CoreMLModelContainer.inputImageFeatureName.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

size_t sub_1A3DA8F4C()
{
  uint64_t v16 = sub_1A4095F8C();
  uint64_t v1 = *(void *)(v16 - 8);
  *(void *)&double v2 = MEMORY[0x1F4188790](v16).n128_u64[0];
  id v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*(id *)(v0 + 48), sel_configuration, v2);
  id v6 = objc_msgSend(v5, sel_computeUnits);

  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_computeDevicesOfTypes_, objc_msgSend(v7, sel_computeDeviceTypesForMLComputeUnits_, v6));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF590);
  unint64_t v9 = sub_1A409630C();

  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1A4096BFC();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v17 = MEMORY[0x1E4FBC860];
  size_t result = sub_1A3CC0EA8(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = 0;
    uint64_t v13 = v17;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        MEMORY[0x1A6254720](v12, v9);
      }
      else {
        swift_unknownObjectRetain();
      }
      sub_1A4095F7C();
      uint64_t v17 = v13;
      unint64_t v15 = *(void *)(v13 + 16);
      unint64_t v14 = *(void *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1A3CC0EA8(v14 > 1, v15 + 1, 1);
        uint64_t v13 = v17;
      }
      ++v12;
      *(void *)(v13 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v13+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v15, v4, v16);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void CoreMLModelContainer.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v5 = *(void **)(v2 + 40);
  id v4 = *(void **)(v2 + 48);
  sub_1A4096F3C();
  sub_1A4096F3C();
  sub_1A4096F5C();
  swift_bridgeObjectRetain();
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  if (v5)
  {
    id v6 = objc_msgSend(v5, sel_featureNames);
    uint64_t v7 = sub_1A40965FC();

    sub_1A4096F4C();
    swift_bridgeObjectRetain();
    sub_1A3DAA904(a1, v7);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1A4096F4C();
  }
  id v8 = objc_msgSend(v4, sel_configuration);
  sub_1A409687C();
}

uint64_t CoreMLModelContainer.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  int v2 = *(_DWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  v6[9] = *(void *)v0;
  v6[10] = v1;
  long long v7 = *(_OWORD *)(v0 + 16);
  int v8 = v2;
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  sub_1A4096F2C();
  CoreMLModelContainer.hash(into:)((uint64_t)v6);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DA9374()
{
  uint64_t v1 = *(void *)(v0 + 8);
  int v2 = *(_DWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  v6[9] = *(void *)v0;
  v6[10] = v1;
  long long v7 = *(_OWORD *)(v0 + 16);
  int v8 = v2;
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  sub_1A4096F2C();
  CoreMLModelContainer.hash(into:)((uint64_t)v6);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DA93DC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  int v2 = *(_DWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  v6[9] = *(void *)v0;
  v6[10] = v1;
  long long v7 = *(_OWORD *)(v0 + 16);
  int v8 = v2;
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  sub_1A4096F2C();
  CoreMLModelContainer.hash(into:)((uint64_t)v6);
  return sub_1A4096F7C();
}

uint64_t static CoreMLRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static CoreMLRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t CoreMLRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3DA9474(uint64_t a1)
{
  unint64_t v2 = sub_1A3DAAEC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DA94B0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DAAEC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DA94EC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DAAF14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DA9528(uint64_t a1)
{
  unint64_t v2 = sub_1A3DAAF14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CoreMLRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF598);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF5A0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DAAEC0();
  sub_1A4096FEC();
  sub_1A3DAAF14();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t CoreMLRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t CoreMLRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF5A8);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF5B0);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DAAEC0();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3DAAF14();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for CoreMLRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DA9A60(void *a1)
{
  return CoreMLRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3DA9A78(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF598);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF5A0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DAAEC0();
  sub_1A4096FEC();
  sub_1A3DAAF14();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double CoreMLRequest.init(model:_:)@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v11 = *a1;
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 3);
  int v5 = *((_DWORD *)a1 + 8);
  uint64_t v6 = *((void *)a1 + 5);
  uint64_t v7 = *((void *)a1 + 6);
  static NormalizedRect.fullImage.getter(v12);
  unint64_t v8 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  *(_OWORD *)a2 = v11;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(_DWORD *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v7;
  *(unsigned char *)(a2 + 56) = 2;
  double result = v12[0].n128_f64[0];
  __n128 v10 = v12[1];
  *(__n128 *)(a2 + 64) = v12[0];
  *(__n128 *)(a2 + 80) = v10;
  *(unsigned char *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = v8;
  return result;
}

uint64_t CoreMLRequest.modelContainer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  int v3 = *(_DWORD *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  int v5 = *(void **)(v1 + 48);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_DWORD *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  swift_unknownObjectRetain();
  id v6 = v5;

  return swift_bridgeObjectRetain();
}

void *CoreMLRequest.supportedIdentifiers.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_modelDescription);
  uint64_t v2 = objc_msgSend(v1, sel_classLabels);

  if (v2)
  {
    uint64_t v3 = sub_1A409630C();

    int64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
      sub_1A3D4F15C(0, v4, 0);
      uint64_t v5 = v3 + 32;
      uint64_t v2 = v15;
      do
      {
        sub_1A3C8D3F0(v5, (uint64_t)v14);
        sub_1A3C8D3F0((uint64_t)v14, (uint64_t)v13);
        uint64_t v6 = sub_1A409619C();
        uint64_t v8 = v7;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A3D4F15C(0, v2[2] + 1, 1);
          uint64_t v2 = v15;
        }
        unint64_t v10 = v2[2];
        unint64_t v9 = v2[3];
        if (v10 >= v9 >> 1)
        {
          sub_1A3D4F15C((char *)(v9 > 1), v10 + 1, 1);
          uint64_t v2 = v15;
        }
        v2[2] = v10 + 1;
        long long v11 = &v2[2 * v10];
        v11[4] = v6;
        v11[5] = v8;
        v5 += 32;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v2;
}

void CoreMLRequest.cropAndScaleAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

unsigned char *CoreMLRequest.cropAndScaleAction.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 56) = *result;
  return result;
}

uint64_t (*CoreMLRequest.cropAndScaleAction.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 CoreMLRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 64);
  long long v3 = *(_OWORD *)(v1 + 80);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 CoreMLRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 80) = v3;
  return result;
}

uint64_t (*CoreMLRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t CoreMLRequest.supportedComputeStageDevices.getter()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF5C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = sub_1A3DA8F4C();
  return sub_1A3CBFB84(inited);
}

uint64_t sub_1A3DA9FDC()
{
  unint64_t v0 = sub_1A3DABAE8();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for CoreMLRequest, v0);
  qword_1E9621018 = result;
  return result;
}

uint64_t static CoreMLRequest.supportedRevisions.getter()
{
  if (qword_1E9621010 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void CoreMLRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 32;
}

void CoreMLRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 96);
}

unsigned char *CoreMLRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 96) = *result;
  return result;
}

uint64_t (*CoreMLRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void sub_1A3DAA0B8()
{
  qword_1E9643D90 = MEMORY[0x1E4FBC860];
}

uint64_t CoreMLRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 104);
  CoreMLModelContainer.hash(into:)((uint64_t)a1);
  sub_1A3CA7378();
  sub_1A40960DC();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t CoreMLRequest.hashValue.getter()
{
  uint64_t v1 = v0[1];
  int v2 = *((_DWORD *)v0 + 8);
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  char v5 = *((unsigned char *)v0 + 56);
  char v6 = *((unsigned char *)v0 + 96);
  uint64_t v7 = v0[13];
  uint64_t v11 = *v0;
  uint64_t v12 = v1;
  long long v13 = *((_OWORD *)v0 + 1);
  int v14 = v2;
  uint64_t v15 = v3;
  uint64_t v16 = v4;
  char v17 = v5;
  long long v8 = *((_OWORD *)v0 + 5);
  long long v18 = *((_OWORD *)v0 + 4);
  long long v19 = v8;
  char v20 = v6;
  uint64_t v21 = v7;
  sub_1A4096F2C();
  CoreMLRequest.hash(into:)(v10);
  return sub_1A4096F7C();
}

__n128 sub_1A3DAA268@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 64);
  long long v3 = *(_OWORD *)(v1 + 80);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1A3DAA274(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 80) = v3;
  return result;
}

unint64_t sub_1A3DAA280()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF5C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = sub_1A3DA8F4C();
  return sub_1A3CBFB84(inited);
}

uint64_t sub_1A3DAA318@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3DABAE8();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3DAA36C(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3DABAE8();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3DAA3C0(_WORD *a1@<X8>)
{
  *a1 = 32;
}

void sub_1A3DAA3CC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 96);
}

unsigned char *sub_1A3DAA3D8(unsigned char *result)
{
  *(unsigned char *)(v1 + 96) = *result;
  return result;
}

uint64_t (*sub_1A3DAA3E4())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DAA404(uint64_t a1)
{
  unint64_t v2 = sub_1A3DABAE8();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3DAA440()
{
  uint64_t v1 = v0[1];
  int v2 = *((_DWORD *)v0 + 8);
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  char v5 = *((unsigned char *)v0 + 56);
  char v6 = *((unsigned char *)v0 + 96);
  uint64_t v7 = v0[13];
  uint64_t v11 = *v0;
  uint64_t v12 = v1;
  long long v13 = *((_OWORD *)v0 + 1);
  int v14 = v2;
  uint64_t v15 = v3;
  uint64_t v16 = v4;
  char v17 = v5;
  long long v8 = *((_OWORD *)v0 + 5);
  long long v18 = *((_OWORD *)v0 + 4);
  long long v19 = v8;
  char v20 = v6;
  uint64_t v21 = v7;
  sub_1A4096F2C();
  CoreMLRequest.hash(into:)(v10);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DAA4CC()
{
  uint64_t v1 = v0[1];
  int v2 = *((_DWORD *)v0 + 8);
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  char v5 = *((unsigned char *)v0 + 56);
  char v6 = *((unsigned char *)v0 + 96);
  uint64_t v7 = v0[13];
  uint64_t v11 = *v0;
  uint64_t v12 = v1;
  long long v13 = *((_OWORD *)v0 + 1);
  int v14 = v2;
  uint64_t v15 = v3;
  uint64_t v16 = v4;
  char v17 = v5;
  long long v8 = *((_OWORD *)v0 + 5);
  long long v18 = *((_OWORD *)v0 + 4);
  long long v19 = v8;
  char v20 = v6;
  uint64_t v21 = v7;
  sub_1A4096F2C();
  CoreMLRequest.hash(into:)(v10);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DAA554()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DAA55C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*sub_1A3DAA588())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DAA5A8()
{
  if (qword_1E9621020 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DAA604()
{
  return 2;
}

uint64_t sub_1A3DAA614(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA8A0();

  return sub_1A3E2C684(a1, a2);
}

uint64_t sub_1A3DAA660(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1A4096F2C();
    swift_bridgeObjectRetain();
    sub_1A40961CC();
    uint64_t v18 = sub_1A4096F7C();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    id v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1A4096E5C() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        unsigned int v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1A4096E5C() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1A3DAA904(uint64_t a1, uint64_t a2)
{
  sub_1A4096F7C();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1A4096F3C();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_1A4096F2C();
    swift_bridgeObjectRetain();
    sub_1A40961CC();
    uint64_t v11 = sub_1A4096F7C();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void _s6Vision20CoreMLModelContainerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)
    || *(void *)(a1 + 24) != *(void *)(a2 + 24)
    || *(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
  {
    return;
  }
  uint64_t v5 = *(void **)(a2 + 40);
  uint64_t v4 = *(void **)(a2 + 48);
  uint64_t v6 = *(void **)(a1 + 40);
  id v7 = objc_msgSend(*(id *)(a1 + 48), sel_modelDescription);
  id v8 = objc_msgSend(v4, sel_modelDescription);
  sub_1A3C8C73C(0, &qword_1E95EF6E0);
  LOBYTE(v4) = sub_1A409686C();

  if ((v4 & 1) == 0 || !v6 || !v5) {
    return;
  }
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v9 = objc_msgSend(v6, sel_featureNames);
  uint64_t v10 = sub_1A40965FC();

  id v11 = objc_msgSend(v5, sel_featureNames);
  uint64_t v12 = sub_1A40965FC();

  LOBYTE(v11) = sub_1A3DAA660(v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_42:
    swift_unknownObjectRelease();
    return;
  }
  id v13 = objc_msgSend(v6, sel_featureNames);
  uint64_t v14 = sub_1A40965FC();

  int64_t v15 = 0;
  uint64_t v28 = v14 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  uint64_t v18 = v17 & *(void *)(v14 + 56);
  int64_t v29 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    v18 &= v18 - 1;
LABEL_33:
    swift_bridgeObjectRetain();
    id v22 = (void *)sub_1A409614C();
    id v23 = objc_msgSend(v6, sel_featureValueForName_, v22);

    uint64_t v24 = (void *)sub_1A409614C();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v5, sel_featureValueForName_, v24);

    if (v23)
    {
      if (!v25)
      {
        swift_unknownObjectRelease();
        swift_release();

        goto LABEL_42;
      }
      sub_1A3C8C73C(0, &qword_1E95EF6E8);
      id v26 = v23;
      char v27 = sub_1A409686C();

      if ((v27 & 1) == 0)
      {
        swift_unknownObjectRelease();
        swift_release();
        goto LABEL_42;
      }
    }
    else if (v25)
    {
      swift_unknownObjectRelease();
      swift_release();

      goto LABEL_42;
    }
  }
  int64_t v19 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v19 >= v29) {
    goto LABEL_39;
  }
  uint64_t v20 = *(void *)(v28 + 8 * v19);
  ++v15;
  if (v20) {
    goto LABEL_32;
  }
  int64_t v15 = v19 + 1;
  if (v19 + 1 >= v29) {
    goto LABEL_39;
  }
  uint64_t v20 = *(void *)(v28 + 8 * v15);
  if (v20) {
    goto LABEL_32;
  }
  int64_t v15 = v19 + 2;
  if (v19 + 2 >= v29) {
    goto LABEL_39;
  }
  uint64_t v20 = *(void *)(v28 + 8 * v15);
  if (v20)
  {
LABEL_32:
    uint64_t v18 = (v20 - 1) & v20;
    goto LABEL_33;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v29)
  {
LABEL_39:
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_39;
    }
    uint64_t v20 = *(void *)(v28 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_32;
    }
  }
LABEL_45:
  __break(1u);
}

unint64_t sub_1A3DAAEC0()
{
  unint64_t result = qword_1E9621028;
  if (!qword_1E9621028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9621028);
  }
  return result;
}

unint64_t sub_1A3DAAF14()
{
  unint64_t result = qword_1E9621030[0];
  if (!qword_1E9621030[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9621030);
  }
  return result;
}

uint64_t _s6Vision13CoreMLRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  CGFloat v2 = *(double *)(a1 + 8);
  int v3 = *(_DWORD *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  CGFloat v7 = *(double *)(a1 + 64);
  CGFloat v8 = *(double *)(a1 + 72);
  CGFloat v9 = *(double *)(a1 + 80);
  CGFloat v10 = *(double *)(a1 + 88);
  char v11 = *(unsigned char *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  CGFloat v13 = *(double *)a2;
  CGFloat v14 = *(double *)(a2 + 8);
  int v15 = *(_DWORD *)(a2 + 32);
  uint64_t v16 = *(void *)(a2 + 40);
  uint64_t v17 = *(void *)(a2 + 48);
  char v18 = *(unsigned char *)(a2 + 56);
  CGFloat v19 = *(double *)(a2 + 64);
  CGFloat v20 = *(double *)(a2 + 72);
  CGFloat v21 = *(double *)(a2 + 80);
  CGFloat v22 = *(double *)(a2 + 88);
  char v23 = *(unsigned char *)(a2 + 96);
  uint64_t v24 = *(void *)(a2 + 104);
  v31.origin.x = *(CGFloat *)a1;
  v31.origin.y = v2;
  v31.size = *(CGSize *)(a1 + 16);
  int v32 = v3;
  uint64_t v33 = v4;
  uint64_t v34 = v5;
  v27.origin.x = v13;
  v27.origin.y = v14;
  v27.size = *(CGSize *)(a2 + 16);
  int v28 = v15;
  uint64_t v29 = v16;
  uint64_t v30 = v17;
  _s6Vision20CoreMLModelContainerV2eeoiySbAC_ACtFZ_0((uint64_t)&v31, (uint64_t)&v27);
  if ((v25 & 1) == 0) {
    return 0;
  }
  LOBYTE(v31.origin.x) = v6;
  LOBYTE(v27.origin.x) = v18;
  if ((static ImageCropAndScaleAction.== infix(_:_:)(&v31, &v27) & 1) == 0) {
    return 0;
  }
  v31.origin.x = v7;
  v31.origin.y = v8;
  v31.size.width = v9;
  v31.size.height = v10;
  v27.origin.x = v19;
  v27.origin.y = v20;
  v27.size.width = v21;
  v27.size.height = v22;
  if (!static NormalizedRect.== infix(_:_:)(&v31, &v27)) {
    return 0;
  }
  LOBYTE(v31.origin.x) = v11;
  LOBYTE(v27.origin.x) = v23;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v31, (unsigned __int8 *)&v27)) {
    return 0;
  }

  return sub_1A3C8FF4C(v12, v24);
}

unint64_t sub_1A3DAB0CC()
{
  unint64_t result = qword_1E95EF5E0;
  if (!qword_1E95EF5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF5E0);
  }
  return result;
}

unint64_t sub_1A3DAB128()
{
  unint64_t result = qword_1E95EF5F0;
  if (!qword_1E95EF5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF5F0);
  }
  return result;
}

unint64_t sub_1A3DAB17C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF4E0();
  unint64_t result = sub_1A3DAB1AC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3DAB1AC()
{
  unint64_t result = qword_1E95EF630;
  if (!qword_1E95EF630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF630);
  }
  return result;
}

unint64_t sub_1A3DAB208()
{
  unint64_t result = qword_1E95EF640;
  if (!qword_1E95EF640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF640);
  }
  return result;
}

unint64_t sub_1A3DAB25C(uint64_t a1)
{
  unint64_t result = sub_1A3CCA8A0();
  *(void *)(a1 + 8) = result;
  return result;
}

void destroy for CoreMLModelContainer(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  CGFloat v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for CoreMLModelContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for CoreMLModelContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = *(void **)(a2 + 48);
  id v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for CoreMLModelContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  id v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for CoreMLModelContainer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreMLModelContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreMLModelContainer()
{
  return &type metadata for CoreMLModelContainer;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CoreMLModelContainer.InputImage(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CoreMLModelContainer.InputImage(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CoreMLModelContainer.InputImage()
{
  return &type metadata for CoreMLModelContainer.InputImage;
}

uint64_t destroy for CoreMLRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreMLRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreMLRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = *(void **)(a2 + 48);
  long long v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for CoreMLRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  long long v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreMLRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreMLRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreMLRequest()
{
  return &type metadata for CoreMLRequest;
}

ValueMetadata *type metadata accessor for CoreMLRequest.Revision()
{
  return &type metadata for CoreMLRequest.Revision;
}

unsigned char *_s6Vision13CoreMLRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DAB8E8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreMLRequest.Revision.CodingKeys()
{
  return &type metadata for CoreMLRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for CoreMLRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for CoreMLRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3DAB934()
{
  unint64_t result = qword_1E96219C0[0];
  if (!qword_1E96219C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96219C0);
  }
  return result;
}

unint64_t sub_1A3DAB98C()
{
  unint64_t result = qword_1E9621AD0;
  if (!qword_1E9621AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9621AD0);
  }
  return result;
}

unint64_t sub_1A3DAB9E4()
{
  unint64_t result = qword_1E9621AD8[0];
  if (!qword_1E9621AD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9621AD8);
  }
  return result;
}

unint64_t sub_1A3DABA3C()
{
  unint64_t result = qword_1E9621B60;
  if (!qword_1E9621B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9621B60);
  }
  return result;
}

unint64_t sub_1A3DABA94()
{
  unint64_t result = qword_1E9621B68[0];
  if (!qword_1E9621B68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9621B68);
  }
  return result;
}

unint64_t sub_1A3DABAE8()
{
  unint64_t result = qword_1E95EF6A8;
  if (!qword_1E95EF6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF6A8);
  }
  return result;
}

uint64_t sub_1A3DABB40(uint64_t a1)
{
  uint64_t v2 = sub_1A409617C();
  v5[3] = MEMORY[0x1E4FBB808];
  v5[0] = a1;
  return sub_1A3C8BC40((uint64_t)v5, v2, v3);
}

void sub_1A3DABBA0(uint64_t a1)
{
  uint64_t v3 = sub_1A4095F8C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF6B0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  CGFloat v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v41 - v11;
  if (!a1)
  {
    uint64_t v39 = sub_1A409617C();
    sub_1A3C8CA6C(v39, v40, &v51);
    swift_bridgeObjectRelease();
    sub_1A3CA2EB8((uint64_t)&v51, (uint64_t *)&unk_1E95EF700);
    return;
  }
  uint64_t v43 = v1;
  id v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA60]), sel_init);
  int64_t v50 = 0;
  uint64_t v47 = v4;
  uint64_t v48 = a1;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v14 = a1 + 64;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v14 - 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v46 = v4 + 16;
  CGFloat v19 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  CGFloat v20 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v44 = v14;
  int64_t v45 = (unint64_t)(v16 + 63) >> 6;
  int64_t v42 = v45 - 1;
  while (1)
  {
    if (v18)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v22 = v21 | (v50 << 6);
LABEL_7:
      uint64_t v23 = v47;
      uint64_t v24 = *(void *)(v48 + 56);
      *CGFloat v10 = *(unsigned char *)(*(void *)(v48 + 48) + v22);
      uint64_t v25 = v24 + *(void *)(v23 + 72) * v22;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC3A8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v23 + 16))(&v10[*(int *)(v26 + 48)], v25, v3);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 0, 1, v26);
      goto LABEL_26;
    }
    int64_t v27 = v50 + 1;
    if (__OFADD__(v50, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 < v45)
    {
      unint64_t v28 = *(void *)(v44 + 8 * v27);
      if (v28) {
        goto LABEL_11;
      }
      int64_t v29 = v50 + 2;
      ++v50;
      if (v27 + 1 < v45)
      {
        unint64_t v28 = *(void *)(v44 + 8 * v29);
        if (v28) {
          goto LABEL_14;
        }
        int64_t v50 = v27 + 1;
        if (v27 + 2 < v45)
        {
          unint64_t v28 = *(void *)(v44 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_11;
          }
          int64_t v29 = v27 + 3;
          int64_t v50 = v27 + 2;
          if (v27 + 3 < v45) {
            break;
          }
        }
      }
    }
LABEL_25:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC3A8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 1, 1, v30);
    unint64_t v18 = 0;
LABEL_26:
    sub_1A3CCB8B8((uint64_t)v10, (uint64_t)v12, (uint64_t *)&unk_1E95EF6B0);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC3A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v12, 1, v31) == 1)
    {
      swift_release();
      uint64_t v36 = sub_1A409617C();
      uint64_t v38 = v37;
      uint64_t v52 = sub_1A3C8C73C(0, (unint64_t *)&unk_1E95EF710);
      *(void *)&long long v51 = v49;
      sub_1A3C8BC40((uint64_t)&v51, v36, v38);
      return;
    }
    char v32 = *v12;
    (*v19)(v6, &v12[*(int *)(v31 + 48)], v3);
    LOBYTE(v51) = v32;
    id v33 = sub_1A3CAC3F4();
    uint64_t v34 = sub_1A4095F5C();
    *(void *)&long long v51 = v33;
    type metadata accessor for VNComputeStage();
    id v35 = v33;
    swift_unknownObjectRetain();
    objc_msgSend(v49, sel___swift_setObject_forKeyedSubscript_, v34, sub_1A4096E8C());

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease();
    (*v20)(v6, v3);
  }
  unint64_t v28 = *(void *)(v44 + 8 * v29);
  if (v28)
  {
LABEL_14:
    int64_t v27 = v29;
LABEL_11:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v22 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v50 = v27;
    goto LABEL_7;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v45)
    {
      int64_t v50 = v42;
      goto LABEL_25;
    }
    unint64_t v28 = *(void *)(v44 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_11;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1A3DAC0C4(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v4 = sub_1A409617C();
  if (v2 == 2)
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  else
  {
    *((void *)&v7 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v6) = a1 & 1;
  }
  return sub_1A3C8BC40((uint64_t)&v6, v4, v3);
}

uint64_t sub_1A3DAC148(uint64_t a1)
{
  return sub_1A3DAC6F4(a1, (uint64_t)VNDetectorOption_OriginatingRequestSpecifier, (unint64_t *)&qword_1E95EC718);
}

uint64_t sub_1A3DAC164(uint64_t a1)
{
  uint64_t v2 = sub_1A409617C();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_1A3C8C844(v2, v3), (v5 & 1) == 0))
  {
    long long v10 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_1A3C8D3F0(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_13:
    sub_1A3CA2EB8((uint64_t)&v10, (uint64_t *)&unk_1E95EF700);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF720);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return 0;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A4096BFC();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x1A6254720](0);
    goto LABEL_10;
  }
  if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(v9 + 32);
LABEL_10:
    uint64_t v7 = (uint64_t)v8;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_1A3DAC2B4(void *a1)
{
  if (!a1) {
    goto LABEL_23;
  }
  uint64_t v3 = sub_1A409617C();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  if (!*(void *)(v6 + 16))
  {
    long long v21 = 0u;
    long long v22 = 0u;
    id v12 = a1;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v7 = v3;
  id v8 = a1;
  unint64_t v9 = sub_1A3C8C844(v7, v5);
  if ((v10 & 1) == 0)
  {
    long long v21 = 0u;
    long long v22 = 0u;
    goto LABEL_15;
  }
  sub_1A3C8D3F0(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1))
  {
LABEL_16:
    sub_1A3CA2EB8((uint64_t)&v21, (uint64_t *)&unk_1E95EF700);
    goto LABEL_17;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF720);
  if (swift_dynamicCast())
  {
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1A4096BFC();
      swift_bridgeObjectRelease();
      if (v18 != 1) {
        goto LABEL_23;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1A4096BFC();
      swift_bridgeObjectRelease();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_21;
      }
    }
    else if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
    {
      goto LABEL_23;
    }
    if ((v20 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v11 = *(void *)(v20 + 32);
      goto LABEL_11;
    }
LABEL_21:
    uint64_t v11 = MEMORY[0x1A6254720](0);
    swift_unknownObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    if ((id)v11 == v8)
    {

      return;
    }
    while (1)
    {
LABEL_23:
      sub_1A4096BEC();
      __break(1u);
    }
  }
LABEL_17:
  uint64_t v13 = sub_1A409617C();
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC5C8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1A40E88E0;
  *(void *)(v16 + 32) = a1;
  *(void *)&long long v21 = v16;
  sub_1A409632C();
  uint64_t v17 = v21;
  *((void *)&v22 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF720);
  *(void *)&long long v21 = v17;
  sub_1A3C8BC40((uint64_t)&v21, v13, v15);
}

uint64_t sub_1A3DAC588(uint64_t a1)
{
  uint64_t v2 = sub_1A409617C();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_1A3C8C844(v2, v3), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1A3C8D3F0(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_7:
    sub_1A3CA2EB8((uint64_t)&v8, (uint64_t *)&unk_1E95EF700);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v7;
  }
  return 0;
}

uint64_t sub_1A3DAC654(uint64_t a1, char a2)
{
  return sub_1A3DAC660(a1, a2);
}

uint64_t sub_1A3DAC660(uint64_t a1, char a2)
{
  uint64_t v5 = sub_1A409617C();
  if (a2)
  {
    a1 = 0;
    v7[1] = 0;
    v7[2] = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBB808];
  }
  v7[0] = a1;
  return sub_1A3C8BC40((uint64_t)v7, v5, v4);
}

uint64_t sub_1A3DAC6D8(uint64_t a1)
{
  return sub_1A3DAC6F4(a1, (uint64_t)VNDetectorProcessOption_Canceller, &qword_1E95EF738);
}

uint64_t sub_1A3DAC6F4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5 = sub_1A409617C();
  uint64_t v7 = v6;
  if (a1)
  {
    *((void *)&v10 + 1) = sub_1A3C8C73C(0, a3);
    *(void *)&long long v9 = a1;
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  return sub_1A3C8BC40((uint64_t)&v9, v5, v7);
}

uint64_t sub_1A3DAC77C(uint64_t a1)
{
  return sub_1A3DAC6F4(a1, (uint64_t)VNDetectorProcessOption_Session, &qword_1E95EF740);
}

id sub_1A3DAC798(uint64_t a1, uint64_t a2)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8F944(a1);
  uint64_t v5 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(ObjCClassFromMetadata, sel_keyForDetectorWithConfigurationOptions_, v5);

  sub_1A3C8F944(a2);
  uint64_t v7 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(ObjCClassFromMetadata, sel_keyForDetectorWithConfigurationOptions_, v7);

  id v9 = objc_msgSend(v6, sel_isEqual_, v8);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1A3DAC96C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = v5;
  *(double *)(v6 + 40) = a4;
  *(double *)(v6 + 48) = a5;
  *(double *)(v6 + 24) = a2;
  *(double *)(v6 + 32) = a3;
  return MEMORY[0x1F4188298](sub_1A3DACA04, 0, 0);
}

uint64_t sub_1A3DACA04()
{
  uint64_t v2 = *((void *)v0 + 7);
  uint64_t v1 = (void *)*((void *)v0 + 8);
  double v4 = v0[5];
  double v3 = v0[6];
  double v6 = v0[3];
  double v5 = v0[4];
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA60]), sel_init);
  sub_1A3C8F944(v2);
  uint64_t v8 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setDictionary_, v8);

  uint64_t v9 = qos_class_self();
  v0[2] = 0.0;
  id v10 = objc_msgSend(v1, sel_processUsingQualityOfServiceClass_options_regionOfInterest_warningRecorder_error_progressHandler_, v9, v7, 0, v0 + 2, 0, v6, v5, v4, v3);
  uint64_t v11 = (void *)*((void *)v0 + 2);
  if (v10)
  {
    id v12 = v10;
    uint64_t v13 = sub_1A409630C();
    id v14 = v11;

    uint64_t v15 = (uint64_t (*)(uint64_t))*((void *)v0 + 1);
    return v15(v13);
  }
  else
  {
    id v17 = v11;
    sub_1A4095AEC();

    swift_willThrow();
    uint64_t v18 = (uint64_t (*)(void))*((void *)v0 + 1);
    return v18();
  }
}

uint64_t sub_1A3DACDBC(int a1, void *aBlock, double a3, double a4, double a5, double a6, void *a7)
{
  v7[2] = a7;
  void v7[3] = _Block_copy(aBlock);
  uint64_t v13 = sub_1A409602C();
  v7[4] = v13;
  id v14 = a7;
  uint64_t v15 = swift_task_alloc();
  v7[5] = v15;
  *(void *)uint64_t v15 = v7;
  *(void *)(v15 + 8) = sub_1A3DACEE4;
  *(void *)(v15 + 56) = v13;
  *(void *)(v15 + 64) = v14;
  *(double *)(v15 + 40) = a5;
  *(double *)(v15 + 48) = a6;
  *(double *)(v15 + 24) = a3;
  *(double *)(v15 + 32) = a4;
  return MEMORY[0x1F4188298](sub_1A3DACA04, 0, 0);
}

uint64_t sub_1A3DACEE4()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  double v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_1A4095ADC();

    uint64_t v7 = 0;
    uint64_t v8 = (void *)v6;
  }
  else
  {
    uint64_t v7 = sub_1A40962FC();
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v8 = (void *)v7;
  }
  uint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  id v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t sub_1A3DAD098(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  double v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *double v4 = v3;
  v4[1] = sub_1A3C8D594;
  return v6();
}

uint64_t sub_1A3DAD164(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1A3C8D594;
  return v7();
}

uint64_t sub_1A3DAD230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A409649C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A409648C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A3CA2EB8(a1, &qword_1E95EF780);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A409643C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1A3DAD3DC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v46 = sub_1A4095F8C();
  uint64_t v5 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  int64_t v45 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2B8);
  int v43 = a2;
  uint64_t v8 = sub_1A4096C1C();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v41 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v10 + 63) >> 6;
  int64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v44 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v14 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v40) {
      break;
    }
    long long v21 = v41;
    unint64_t v22 = v41[v20];
    ++v16;
    if (!v22)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v22 = v41[v16];
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = v41[v23];
        if (!v22)
        {
          while (1)
          {
            int64_t v16 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v40) {
              goto LABEL_34;
            }
            unint64_t v22 = v41[v16];
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v23;
      }
    }
LABEL_21:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v7 + 56);
    uint64_t v25 = v7;
    char v26 = *(unsigned char *)(*(void *)(v7 + 48) + v19);
    uint64_t v27 = v5;
    uint64_t v28 = *(void *)(v5 + 72);
    uint64_t v29 = v24 + v28 * v19;
    if (v43) {
      (*v44)(v45, v29, v46);
    }
    else {
      (*v42)(v45, v29, v46);
    }
    char v47 = v26;
    sub_1A3C8D4B4();
    uint64_t result = sub_1A40960CC();
    uint64_t v30 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v31) & ~*(void *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v9 + 48) + v17) = v26;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v44)(*(void *)(v9 + 56) + v28 * v17, v45, v46);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v25;
    uint64_t v5 = v27;
  }
  swift_release();
  uint64_t v3 = v39;
  long long v21 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v7 + 32);
  if (v37 >= 64) {
    bzero(v21, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v21 = -1 << v37;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

void *sub_1A3DAD7C8()
{
  uint64_t v1 = sub_1A4095F8C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2B8);
  unint64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1A4096C0C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t *v22 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    char v16 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    unint64_t v17 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v17, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v16;
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v17, v4, v1);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A3DADA54()
{
  _Block_release(*(const void **)(v0 + 56));

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A3DADA9C()
{
  double v2 = v0[2];
  double v3 = v0[3];
  double v4 = v0[4];
  double v5 = v0[5];
  uint64_t v6 = *((void *)v0 + 6);
  uint64_t v7 = (void *)*((void *)v0 + 7);
  uint64_t v8 = (void *)*((void *)v0 + 8);
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *unint64_t v9 = v1;
  v9[1] = sub_1A3C8D594;
  int64_t v10 = (uint64_t (*)(int, void *, double, double, double, double, void *))((char *)&dword_1E95EF788
                                                                                    + dword_1E95EF788);
  return v10(v6, v7, v2, v3, v4, v5, v8);
}

uint64_t sub_1A3DADB7C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  double v4 = (int *)v0[4];
  double v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *double v5 = v1;
  v5[1] = sub_1A3C8D594;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1E95EF798 + dword_1E95EF798);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_4Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3DADC80(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A3C8A9A4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E95EF7A8 + dword_1E95EF7A8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1A3DADD4C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3DADD84(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A3C8A9A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E95EF7B8 + dword_1E95EF7B8);
  return v6(a1, v4);
}

uint64_t ClassificationObservation.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

BOOL ClassificationObservation.hasPrecisionRecallCurve.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ClassificationObservation() + 36)) != 0;
}

uint64_t type metadata accessor for ClassificationObservation()
{
  uint64_t result = qword_1E9622000;
  if (!qword_1E9622000) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ClassificationObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClassificationObservation() + 20);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

float ClassificationObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for ClassificationObservation() + 24));
}

__n128 ClassificationObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClassificationObservation() + 28);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

unint64_t ClassificationObservation.description.getter()
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v0 = type metadata accessor for ClassificationObservation();
  uint64_t v1 = sub_1A3DAF608(&qword_1E95EC5F8, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
  sub_1A3D8AC8C(v0, (uint64_t)&off_1EF74B930, v1);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0xD000000000000026;
}

Swift::Bool __swiftcall ClassificationObservation.hasMinimumRecall(_:forPrecision:)(Swift::Float _, Swift::Float forPrecision)
{
  uint64_t v5 = type metadata accessor for ClassificationObservation();
  uint64_t v6 = *(void **)(v2 + *(int *)(v5 + 36));
  if (!v6) {
    return 0;
  }
  float v7 = *(float *)(v2 + *(int *)(v5 + 24));
  if (v7 <= 0.0) {
    return 0;
  }
  id v8 = v6;
  *(Swift::Float *)&double v9 = forPrecision;
  objc_msgSend(v8, sel_confidenceThresholdForPrecision_, v9);
  if (v7 <= v10)
  {

    return 0;
  }
  else
  {
    if (_ <= 0.0)
    {
    }
    else
    {
      objc_msgSend(v8, sel_recallOfConfidence_);
      float v12 = v11;

      if (v12 < _) {
        return 0;
      }
    }
    return 1;
  }
}

Swift::Bool __swiftcall ClassificationObservation.hasMinimumPrecision(_:forRecall:)(Swift::Float _, Swift::Float forRecall)
{
  uint64_t v5 = type metadata accessor for ClassificationObservation();
  uint64_t v6 = *(void **)(v2 + *(int *)(v5 + 36));
  if (!v6) {
    return 0;
  }
  float v7 = *(float *)(v2 + *(int *)(v5 + 24));
  if (v7 <= 0.0) {
    return 0;
  }
  id v8 = v6;
  *(Swift::Float *)&double v9 = forRecall;
  objc_msgSend(v8, sel_confidenceThresholdForRecall_, v9);
  if (v7 < v10)
  {

    return 0;
  }
  if (_ <= 0.0)
  {
  }
  else
  {
    objc_msgSend(v8, sel_precisionOfConfidence_);
    float v13 = v12;

    if (v13 < _) {
      return 0;
    }
  }
  return 1;
}

uint64_t ClassificationObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for ClassificationObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t ClassificationObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DAE318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3DAF608(&qword_1E95EC5F8, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3DAE39C()
{
  uint64_t v1 = 0x7363697274656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x746176726573626FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1A3DAE404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DB004C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DAE42C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DAF3D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DAE468(uint64_t a1)
{
  unint64_t v2 = sub_1A3DAF3D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClassificationObservation.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  v35[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v32 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF7E0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  float v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DAF3D8();
  sub_1A4096FEC();
  LOBYTE(v35[0]) = 0;
  uint64_t v11 = v33;
  sub_1A4096D7C();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v33 = v7;
  uint64_t v30 = v6;
  uint64_t v31 = v4;
  uint64_t v13 = v32;
  uint64_t v29 = type metadata accessor for ClassificationObservation();
  unint64_t v14 = *(void **)(v2 + *(int *)(v29 + 36));
  if (v14)
  {
    uint64_t v28 = v2;
    unint64_t v15 = self;
    v35[0] = 0;
    id v16 = v14;
    id v17 = objc_msgSend(v15, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v16, 0, v35);
    id v18 = v35[0];
    uint64_t v19 = v8;
    if (!v17)
    {
      int64_t v24 = v18;
      sub_1A4095AEC();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v33);
    }
    uint64_t v20 = v13;
    uint64_t v21 = (void *)sub_1A4095C1C();
    uint64_t v23 = v22;

    v35[0] = v21;
    v35[1] = v23;
    char v34 = 1;
    sub_1A3C81178();
    sub_1A4096DBC();

    sub_1A3C7D218((uint64_t)v21, (unint64_t)v23);
  }
  else
  {
    uint64_t v20 = v13;
    uint64_t v19 = v8;
  }
  LOBYTE(v35[0]) = 2;
  sub_1A3C80D74();
  uint64_t v25 = (uint64_t)v30;
  uint64_t v26 = v33;
  sub_1A4096D5C();
  uint64_t v27 = sub_1A3DAF608(&qword_1E95EC5F8, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
  sub_1A3D2A9D0(v25, v29, (uint64_t)&off_1EF74B930, v27);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v25, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v10, v26);
}

void ClassificationObservation.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v35 = sub_1A4095C7C();
  uint64_t v31 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v32 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF7E8);
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ClassificationObservation();
  MEMORY[0x1F4188790](v10);
  float v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A3DAF3D8();
  unint64_t v14 = v37;
  sub_1A4096FDC();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  else
  {
    uint64_t v37 = v6;
    uint64_t v29 = v4;
    uint64_t v15 = v34;
    LOBYTE(v38) = 0;
    *float v12 = sub_1A4096CBC();
    v12[1] = v16;
    char v41 = 1;
    sub_1A3C812C8();
    sub_1A4096CAC();
    uint64_t v28 = v9;
    unint64_t v17 = v39;
    if (v39 >> 60 == 15)
    {
      id v18 = 0;
    }
    else
    {
      uint64_t v19 = v38;
      sub_1A3C8C73C(0, &qword_1E95EC800);
      sub_1A3C8C73C(0, &qword_1E95EF7F0);
      id v18 = (void *)sub_1A409673C();
      sub_1A3D3CECC(v19, v17);
    }
    uint64_t v27 = (int *)v10;
    *(uint64_t *)((char *)v12 + *(int *)(v10 + 36)) = (uint64_t)v18;
    LOBYTE(v38) = 2;
    sub_1A3C80D74();
    id v20 = v18;
    sub_1A4096C7C();
    id v26 = v20;
    LOBYTE(v38) = 0;
    sub_1A3DAF608((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
    uint64_t v21 = v33;
    sub_1A4096CFC();
    unint64_t v22 = v27;
    (*(void (**)(char *, char *))(v31 + 32))((char *)v12 + v27[5], v21);
    LOBYTE(v38) = 1;
    sub_1A4096CDC();
    *(_DWORD *)((char *)v12 + v22[6]) = v23;
    char v41 = 3;
    sub_1A3C80E6C();
    sub_1A4096CAC();
    int64_t v24 = v26;
    *(_WORD *)((char *)v12 + v22[8]) = v38;
    uint64_t v25 = v37;
    sub_1A3D2B130((uint64_t)v40);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v29);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v28, v7);
    sub_1A3C7D648((uint64_t)v40, (uint64_t)v12 + v22[7]);
    sub_1A3DAF42C((uint64_t)v12, v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    sub_1A3DAF490((uint64_t)v12);
  }
}

void sub_1A3DAEF40(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A3DAEF58(void *a1)
{
  return ClassificationObservation.encode(to:)(a1);
}

uint64_t sub_1A3DAEF70@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  __int16 v7 = *a2;
  id v8 = objc_msgSend(a1, sel_identifier);
  uint64_t v9 = sub_1A409617C();
  uint64_t v11 = v10;

  id v12 = objc_msgSend(a1, sel_uuid);
  uint64_t v13 = (int *)type metadata accessor for ClassificationObservation();
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v15 = v14;
  id v16 = objc_msgSend(a1, sel_classificationMetrics);

  *a4 = v9;
  a4[1] = v11;
  *(_DWORD *)((char *)a4 + v13[6]) = v15;
  uint64_t result = sub_1A3C7D648(a3, (uint64_t)a4 + v13[7]);
  *(_WORD *)((char *)a4 + v13[8]) = v7;
  *(uint64_t *)((char *)a4 + v13[9]) = (uint64_t)v16;
  return result;
}

__n128 ClassificationObservation.init(_:)@<Q0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  objc_msgSend(a1, sel_timeRange, static NormalizedRect.fullImage.getter(v19).n128_f64[0]);
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_1A409617C();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(a1, sel_uuid);
  uint64_t v9 = (int *)type metadata accessor for ClassificationObservation();
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v11 = v10;
  id v12 = objc_msgSend(a1, sel_classificationMetrics);

  *a2 = v5;
  a2[1] = v7;
  *(_DWORD *)((char *)a2 + v9[6]) = v11;
  uint64_t v13 = (__n128 *)((char *)a2 + v9[7]);
  __n128 result = v16;
  *uint64_t v13 = v15;
  v13[1] = v16;
  v13[2].n128_u64[0] = v17;
  v13[2].n128_u64[1] = v18;
  v13[3].n128_u8[0] = 0;
  *(_WORD *)((char *)a2 + v9[8]) = -8;
  *(uint64_t *)((char *)a2 + v9[9]) = (uint64_t)v12;
  return result;
}

uint64_t sub_1A3DAF1D0@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  __int16 v5 = *a2;
  return sub_1A3DAEF70(a1, &v5, a3, a4);
}

uint64_t _s6Vision25ClassificationObservationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1A4096E5C(), result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = (int *)type metadata accessor for ClassificationObservation();
    if ((sub_1A4095C4C() & 1) == 0 || *(float *)((char *)a1 + v7[6]) != *(float *)((char *)a2 + v7[6])) {
      return 0;
    }
    uint64_t v8 = v7[7];
    char v9 = *((unsigned char *)a1 + v8 + 48);
    int v10 = (char *)a2 + v8;
    if (v9)
    {
      if (!v10[48]) {
        return 0;
      }
    }
    else if ((v10[48] & 1) != 0 || (sub_1A409669C() & 1) == 0)
    {
      return 0;
    }
    uint64_t v11 = v7[8];
    unsigned int v12 = *(unsigned __int16 *)((char *)a1 + v11);
    unsigned int v13 = *(unsigned __int16 *)((char *)a2 + v11);
    if (v12 <= 0xFFF7)
    {
      if (v13 > 0xFFF7) {
        return 0;
      }
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
    }
    else if (v13 <= 0xFFF7)
    {
      return 0;
    }
    uint64_t v14 = v7[9];
    __n128 v15 = *(void **)((char *)a1 + v14);
    __n128 v16 = *(void **)((char *)a2 + v14);
    if (v15)
    {
      if (!v16) {
        return 0;
      }
      sub_1A3C8C73C(0, &qword_1E95EF7F0);
      id v17 = v16;
      id v18 = v15;
      char v19 = sub_1A409686C();

      if ((v19 & 1) == 0) {
        return 0;
      }
    }
    else if (v16)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_1A3DAF3D8()
{
  unint64_t result = qword_1E9621C70;
  if (!qword_1E9621C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9621C70);
  }
  return result;
}

uint64_t sub_1A3DAF42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClassificationObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3DAF490(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClassificationObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3DAF4EC(void *a1)
{
  a1[1] = sub_1A3DAF608(&qword_1E95EF7F8, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
  a1[2] = sub_1A3DAF608(&qword_1E95EE448, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
  a1[3] = sub_1A3DAF608(&qword_1E95EE430, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
  uint64_t result = sub_1A3DAF608(&qword_1E95EF7D8, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3DAF5C0()
{
  return sub_1A3DAF608(&qword_1E95ED188, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
}

uint64_t sub_1A3DAF608(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3DAF650(uint64_t a1)
{
  uint64_t result = sub_1A3DAF608(&qword_1E95EC5F8, (void (*)(uint64_t))type metadata accessor for ClassificationObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClassificationObservation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    char v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A4095C7C();
    unsigned int v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(_DWORD *)((char *)v4 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    uint64_t v14 = (char *)v4 + v13;
    __n128 v15 = (char *)a2 + v13;
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    v14[48] = v15[48];
    uint64_t v17 = a3[9];
    *(_WORD *)((char *)v4 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    id v18 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v4 + v17) = (uint64_t)v18;
    id v19 = v18;
  }
  return v4;
}

void destroy for ClassificationObservation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 36));
}

void *initializeWithCopy for ClassificationObservation(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A4095C7C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  v13[48] = v14[48];
  uint64_t v16 = a3[9];
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  uint64_t v17 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v17;
  id v18 = v17;
  return a1;
}

void *assignWithCopy for ClassificationObservation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[48];
  long long v15 = *((_OWORD *)v12 + 1);
  long long v14 = *((_OWORD *)v12 + 2);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v15;
  *((_OWORD *)v11 + 2) = v14;
  v11[48] = v13;
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = *(void **)((char *)a1 + v16);
  id v18 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v18;
  id v19 = v18;

  return a1;
}

_OWORD *initializeWithTake for ClassificationObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  v11[48] = v12[48];
  uint64_t v14 = a3[9];
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  return a1;
}

void *assignWithTake for ClassificationObservation(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  long long v13 = (char *)a2 + v11;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  v12[48] = v13[48];
  uint64_t v15 = a3[9];
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  uint64_t v16 = *(void **)((char *)a1 + v15);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);

  return a1;
}

uint64_t getEnumTagSinglePayload for ClassificationObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3DAFC10);
}

uint64_t sub_1A3DAFC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A4095C7C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ClassificationObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3DAFCD4);
}

uint64_t sub_1A3DAFCD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A4095C7C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A3DAFD7C()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClassificationObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DAFF0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationObservation.CodingKeys()
{
  return &type metadata for ClassificationObservation.CodingKeys;
}

unint64_t sub_1A3DAFF48()
{
  unint64_t result = qword_1E9622110[0];
  if (!qword_1E9622110[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9622110);
  }
  return result;
}

unint64_t sub_1A3DAFFA0()
{
  unint64_t result = qword_1E9622220;
  if (!qword_1E9622220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9622220);
  }
  return result;
}

unint64_t sub_1A3DAFFF8()
{
  unint64_t result = qword_1E9622228[0];
  if (!qword_1E9622228[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9622228);
  }
  return result;
}

uint64_t sub_1A3DB004C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

__n128 ImageHomographicAlignmentObservation.warpTransform.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t ImageHomographicAlignmentObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ImageHomographicAlignmentObservation() + 20);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ImageHomographicAlignmentObservation()
{
  uint64_t result = qword_1E9622640;
  if (!qword_1E9622640) {
    return swift_getSingletonMetadata();
  }
  return result;
}

float ImageHomographicAlignmentObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for ImageHomographicAlignmentObservation() + 24));
}

__n128 ImageHomographicAlignmentObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ImageHomographicAlignmentObservation() + 28);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t ImageHomographicAlignmentObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for ImageHomographicAlignmentObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t ImageHomographicAlignmentObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  uint64_t v0 = type metadata accessor for ImageHomographicAlignmentObservation();
  uint64_t v1 = sub_1A3DB1F14(&qword_1E95ED368, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);
  sub_1A3D8AC8C(v0, (uint64_t)&off_1EF74F370, v1);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

CIImage __swiftcall ImageHomographicAlignmentObservation.applyTransform(to:)(CIImage to)
{
  Class isa = to.super.isa;
  [(objc_class *)to.super.isa extent];
  double MinX = CGRectGetMinX(v34);
  [(objc_class *)isa extent];
  CGFloat MaxY = CGRectGetMaxY(v35);
  float v5 = MinX;
  *(float *)&CGFloat MaxY = MaxY;
  float32x4_t v32 = v1[1];
  float32x4_t v30 = *v1;
  float32x4_t v31 = v1[2];
  int32x4_t v6 = (int32x4_t)vaddq_f32(v31, vmlaq_n_f32(vmulq_n_f32(*v1, v5), v32, *(float *)&MaxY));
  float64x2_t v29 = vcvtq_f64_f32(vdiv_f32(*(float32x2_t *)v6.i8, (float32x2_t)vdup_laneq_s32(v6, 2)));
  [(objc_class *)isa extent];
  double MaxX = CGRectGetMaxX(v36);
  [(objc_class *)isa extent];
  CGFloat v8 = CGRectGetMaxY(v37);
  float v9 = MaxX;
  *(float *)&CGFloat v8 = v8;
  int32x4_t v10 = (int32x4_t)vaddq_f32(v31, vmlaq_n_f32(vmulq_n_f32(v30, v9), v32, *(float *)&v8));
  float64x2_t v28 = vcvtq_f64_f32(vdiv_f32(*(float32x2_t *)v10.i8, (float32x2_t)vdup_laneq_s32(v10, 2)));
  [(objc_class *)isa extent];
  double v11 = CGRectGetMinX(v38);
  [(objc_class *)isa extent];
  CGFloat MinY = CGRectGetMinY(v39);
  float v13 = v11;
  *(float *)&CGFloat MinY = MinY;
  int32x4_t v14 = (int32x4_t)vaddq_f32(v31, vmlaq_n_f32(vmulq_n_f32(v30, v13), v32, *(float *)&MinY));
  float64x2_t v27 = vcvtq_f64_f32(vdiv_f32(*(float32x2_t *)v14.i8, (float32x2_t)vdup_laneq_s32(v14, 2)));
  [(objc_class *)isa extent];
  double v15 = CGRectGetMaxX(v40);
  [(objc_class *)isa extent];
  CGFloat v16 = CGRectGetMinY(v41);
  float v17 = v15;
  *(float *)&CGFloat v16 = v16;
  int32x4_t v18 = (int32x4_t)vaddq_f32(v31, vmlaq_n_f32(vmulq_n_f32(v30, v17), v32, *(float *)&v16));
  float64x2_t v33 = vcvtq_f64_f32(vdiv_f32(*(float32x2_t *)v18.i8, (float32x2_t)vdup_laneq_s32(v18, 2)));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF800);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40F83D0;
  strcpy((char *)(inited + 32), "inputTopLeft");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E080]), sel_initWithCGPoint_, *(_OWORD *)&v29);
  strcpy((char *)(inited + 56), "inputTopRight");
  *(_WORD *)(inited + 70) = -4864;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E080]), sel_initWithCGPoint_, *(_OWORD *)&v28);
  *(void *)(inited + 80) = 0xD000000000000010;
  *(void *)(inited + 88) = 0x80000001A40B74B0;
  *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E080]), sel_initWithCGPoint_, *(_OWORD *)&v27);
  *(void *)(inited + 104) = 0x746F427475706E69;
  *(void *)(inited + 112) = 0xEF7466654C6D6F74;
  *(void *)(inited + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E080]), sel_initWithCGPoint_, *(_OWORD *)&v33);
  unint64_t v20 = sub_1A3DB079C(inited);
  uint64_t v21 = (void *)sub_1A409614C();
  sub_1A3DB08B8(v20);
  swift_bridgeObjectRelease();
  unint64_t v22 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  int v23 = (objc_class *)[(objc_class *)isa imageByApplyingFilter:v21 withInputParameters:v22];

  uint64_t v25 = v23;
  result._priv = v24;
  result.super.Class isa = v25;
  return result;
}

unint64_t sub_1A3DB079C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF840);
  BOOL v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  char v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1A3C8C844(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    double v11 = (uint64_t *)(v2[6] + 16 * result);
    *double v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A3DB08B8(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF4B0);
    BOOL v2 = (void *)sub_1A4096C2C();
  }
  else
  {
    BOOL v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v34 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v33 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v38;
  uint64_t v7 = &v40;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x1E4FBC840] + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v33) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v33) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v33) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v34 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v33) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v34 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v33)
          {
            unint64_t v21 = *(void *)(v34 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v33) {
                break;
              }
              unint64_t v21 = *(void *)(v34 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1A3C91DE0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = v18 | (i << 6))
  {
    int64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v25 = *(void **)(*(void *)(v1 + 56) + 8 * v19);
    uint64_t v36 = *v24;
    uint64_t v37 = v24[1];
    sub_1A3DB2650();
    swift_bridgeObjectRetain();
    id v26 = v25;
    swift_dynamicCast();
    sub_1A3C856F4(v6, v7);
    sub_1A3C856F4(v7, v41);
    sub_1A3C856F4(v41, &v39);
    unint64_t result = sub_1A3C8C844(v36, v37);
    unint64_t v27 = result;
    if (v28)
    {
      unint64_t v35 = v5;
      double v11 = v7;
      uint64_t v12 = v6;
      uint64_t v13 = v1;
      int64_t v14 = i;
      uint64_t v15 = v10;
      CGFloat v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v16 = v36;
      v16[1] = v37;
      uint64_t v10 = v15;
      int64_t i = v14;
      uint64_t v1 = v13;
      uint64_t v6 = v12;
      uint64_t v7 = v11;
      unint64_t v5 = v35;
      float v17 = (_OWORD *)(v2[7] + 32 * v27);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      unint64_t result = (unint64_t)sub_1A3C856F4(&v39, v17);
      if (!v35) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    float64x2_t v29 = (uint64_t *)(v2[6] + 16 * result);
    *float64x2_t v29 = v36;
    v29[1] = v37;
    unint64_t result = (unint64_t)sub_1A3C856F4(&v39, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v30 = v2[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_34;
    }
    v2[2] = v32;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v18 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A3DB0C10@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 *a4@<X3>, _OWORD *a5@<X8>, float a6@<S0>)
{
  __int16 v10 = *a4;
  long long v11 = a1[1];
  *a5 = *a1;
  a5[1] = v11;
  a5[2] = a1[2];
  uint64_t v12 = (int *)type metadata accessor for ImageHomographicAlignmentObservation();
  uint64_t v13 = (char *)a5 + v12[5];
  uint64_t v14 = sub_1A4095C7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a2, v14);
  *(float *)((char *)a5 + v12[6]) = a6;
  uint64_t result = sub_1A3C7D648(a3, (uint64_t)a5 + v12[7]);
  *(_WORD *)((char *)a5 + v12[8]) = v10;
  return result;
}

uint64_t ImageHomographicAlignmentObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DB0D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3DB1F14(&qword_1E95ED368, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3DB0DE8()
{
  if (*v0) {
    return 0x6E61725470726177;
  }
  else {
    return 0x746176726573626FLL;
  }
}

uint64_t sub_1A3DB0E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DB2520(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DB0E60(uint64_t a1)
{
  unint64_t v2 = sub_1A3DB1C64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB0E9C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DB1C64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ImageHomographicAlignmentObservation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF810);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DB1C64();
  sub_1A4096FEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EED40);
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *v3;
  long long v14 = v3[1];
  v12[1] = xmmword_1A40F83E0;
  v12[2] = v13;
  long long v15 = v3[2];
  __n128 v12[3] = v14;
  v12[4] = v15;
  int64_t v24 = v12;
  char v23 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EECD8);
  sub_1A3DB1CB8(&qword_1E95EED48, &qword_1E95EC498);
  sub_1A4096DBC();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    char v22 = 0;
    sub_1A3C80D74();
    sub_1A4096D5C();
    uint64_t v16 = type metadata accessor for ImageHomographicAlignmentObservation();
    uint64_t v17 = sub_1A3DB1F14(&qword_1E95ED368, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);
    sub_1A3D2A9D0((uint64_t)v7, v16, (uint64_t)&off_1EF74F370, v17);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t ImageHomographicAlignmentObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v41 = sub_1A4095C7C();
  uint64_t v37 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v40 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF818);
  uint64_t v39 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ImageHomographicAlignmentObservation();
  MEMORY[0x1F4188790](v9);
  long long v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DB1C64();
  uint64_t v12 = v43;
  sub_1A4096FDC();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v34 = v9;
  unint64_t v35 = v6;
  int v43 = v11;
  uint64_t v14 = v39;
  long long v13 = v40;
  uint64_t v15 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EECD8);
  char v44 = 1;
  sub_1A3DB1CB8(&qword_1E95EECE0, &qword_1E95EC4B8);
  uint64_t v16 = v8;
  sub_1A4096CFC();
  uint64_t result = v46;
  unint64_t v18 = *(void *)(v46 + 16);
  if (v18)
  {
    uint64_t v19 = v43;
    if (v18 != 1)
    {
      if (v18 >= 3)
      {
        long long v20 = *(_OWORD *)(v46 + 32);
        long long v32 = *(_OWORD *)(v46 + 48);
        long long v33 = v20;
        long long v31 = *(_OWORD *)(v46 + 64);
        swift_bridgeObjectRelease();
        long long v21 = v32;
        _OWORD *v19 = v33;
        v19[1] = v21;
        __n128 v19[2] = v31;
        LOBYTE(v46) = 0;
        sub_1A3C80D74();
        sub_1A4096C7C();
        *(void *)&long long v33 = v16;
        LOBYTE(v46) = 0;
        sub_1A3DB1F14((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
        uint64_t v22 = v15;
        uint64_t v23 = v4;
        sub_1A4096CFC();
        uint64_t v24 = v34;
        uint64_t v25 = v43;
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))((char *)v43 + *(int *)(v34 + 20), v13, v22);
        LOBYTE(v46) = 1;
        sub_1A4096CDC();
        *(_DWORD *)((char *)v25 + *(int *)(v24 + 24)) = v26;
        char v44 = 3;
        sub_1A3C80E6C();
        sub_1A4096CAC();
        uint64_t v27 = v38;
        uint64_t v28 = *(int *)(v24 + 32);
        uint64_t v29 = (uint64_t)v43;
        *(_WORD *)((char *)v43 + v28) = v46;
        uint64_t v30 = v35;
        sub_1A3D2B130((uint64_t)v45);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v23);
        (*(void (**)(void, uint64_t))(v14 + 8))(v33, v42);
        sub_1A3C7D648((uint64_t)v45, v29 + *(int *)(v34 + 28));
        sub_1A3DB1D38(v29, v36);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
        return sub_1A3DB1D9C(v29);
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1A3DB17CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageHomographicAlignmentObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3DB17E4(void *a1)
{
  return ImageHomographicAlignmentObservation.encode(to:)(a1);
}

uint64_t sub_1A3DB17FC@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  __int16 v7 = *a2;
  objc_msgSend(a1, sel_warpTransform);
  long long v17 = v9;
  long long v18 = v8;
  long long v16 = v10;
  id v11 = objc_msgSend(a1, sel_uuid);
  uint64_t v12 = (int *)type metadata accessor for ImageHomographicAlignmentObservation();
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v14 = v13;

  *a4 = v18;
  a4[1] = v17;
  a4[2] = v16;
  *(_DWORD *)((char *)a4 + v12[6]) = v14;
  uint64_t result = sub_1A3C7D648(a3, (uint64_t)a4 + v12[7]);
  *(_WORD *)((char *)a4 + v12[8]) = v7;
  return result;
}

__n128 ImageHomographicAlignmentObservation.init(_:)@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  objc_msgSend(a1, sel_timeRange, static NormalizedRect.fullImage.getter(v20).n128_f64[0]);
  objc_msgSend(a1, sel_warpTransform);
  long long v14 = v5;
  long long v15 = v4;
  long long v13 = v6;
  id v7 = objc_msgSend(a1, sel_uuid);
  long long v8 = (int *)type metadata accessor for ImageHomographicAlignmentObservation();
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v10 = v9;

  *a2 = v15;
  a2[1] = v14;
  a2[2] = v13;
  *(_DWORD *)((char *)a2 + v8[6]) = v10;
  id v11 = (__n128 *)((char *)a2 + v8[7]);
  __n128 result = v17;
  *id v11 = v16;
  v11[1] = v17;
  v11[2].n128_u64[0] = v18;
  v11[2].n128_u64[1] = v19;
  v11[3].n128_u8[0] = 0;
  *(_WORD *)((char *)a2 + v8[8]) = -8;
  return result;
}

uint64_t sub_1A3DB1A04@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, int *a4@<X4>, _OWORD *a5@<X8>)
{
  __int16 v9 = *a2;
  objc_msgSend(a1, sel_warpTransform);
  long long v19 = v11;
  long long v20 = v10;
  long long v18 = v12;
  id v13 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v15 = v14;

  *a5 = v20;
  a5[1] = v19;
  a5[2] = v18;
  uint64_t v16 = a4[7];
  *(_DWORD *)((char *)a5 + a4[6]) = v15;
  uint64_t result = sub_1A3C7D648(a3, (uint64_t)a5 + v16);
  *(_WORD *)((char *)a5 + a4[8]) = v9;
  return result;
}

uint64_t _s6Vision36ImageHomographicAlignmentObservationV2eeoiySbAC_ACtFZ_0(float32x4_t *a1, float32x4_t *a2)
{
  uint32x4_t v2 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1[1], a2[1]), (int8x16_t)vceqq_f32(*a1, *a2)), (int8x16_t)vceqq_f32(a1[2], a2[2]));
  v2.i32[3] = v2.i32[2];
  if ((vminvq_u32(v2) & 0x80000000) == 0) {
    return 0;
  }
  long long v5 = (int *)type metadata accessor for ImageHomographicAlignmentObservation();
  if ((sub_1A4095C4C() & 1) == 0 || *(float *)((char *)a1->f32 + v5[6]) != *(float *)((char *)a2->f32 + v5[6])) {
    return 0;
  }
  uint64_t v6 = v5[7];
  __int8 v7 = a1[3].i8[v6];
  long long v8 = (char *)a2 + v6;
  if ((v7 & 1) == 0)
  {
    if ((v8[48] & 1) != 0 || (sub_1A409669C() & 1) == 0) {
      return 0;
    }
LABEL_9:
    uint64_t v9 = v5[8];
    unsigned int v10 = *(unsigned __int16 *)((char *)a1->u16 + v9);
    unsigned int v11 = *(unsigned __int16 *)((char *)a2->u16 + v9);
    if (v10 <= 0xFFF7)
    {
      if (v11 > 0xFFF7) {
        return 0;
      }
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
    }
    else if (v11 <= 0xFFF7)
    {
      return 0;
    }
    return 1;
  }
  if (v8[48]) {
    goto LABEL_9;
  }
  return 0;
}

unint64_t sub_1A3DB1C64()
{
  unint64_t result = qword_1E96222B0[0];
  if (!qword_1E96222B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96222B0);
  }
  return result;
}

uint64_t sub_1A3DB1CB8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EECD8);
    sub_1A3C99E00(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3DB1D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageHomographicAlignmentObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3DB1D9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageHomographicAlignmentObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3DB1DF8(void *a1)
{
  a1[1] = sub_1A3DB1F14(&qword_1E95ECFC0, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);
  a1[2] = sub_1A3DB1F14(&qword_1E95EF820, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);
  a1[3] = sub_1A3DB1F14(&qword_1E95EF828, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);
  uint64_t result = sub_1A3DB1F14(&qword_1E95EF808, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3DB1ECC()
{
  return sub_1A3DB1F14(&qword_1E95EF830, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);
}

uint64_t sub_1A3DB1F14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3DB1F5C(uint64_t a1)
{
  uint64_t result = sub_1A3DB1F14(&qword_1E95ED368, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

_OWORD *assignWithCopy for ImageHomographicAlignmentObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = a3[5];
  __int8 v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  unsigned int v11 = (char *)a1 + v10;
  long long v12 = (char *)a2 + v10;
  char v13 = v12[48];
  long long v15 = *((_OWORD *)v12 + 1);
  long long v14 = *((_OWORD *)v12 + 2);
  *(_OWORD *)unsigned int v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v15;
  *((_OWORD *)v11 + 2) = v14;
  v11[48] = v13;
  *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageHomographicAlignmentObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3DB20A0);
}

uint64_t sub_1A3DB20A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    int v12 = (*(unsigned __int8 *)(a1 + *(int *)(a3 + 32)) >> 3) | (32 * *(unsigned __int8 *)(a1 + *(int *)(a3 + 32) + 1));
    unsigned int v13 = v12 ^ 0x1FFE;
    unsigned int v14 = v12 ^ 0x1FFF;
    if (v13 >> 1 >= 0xFED) {
      return 0;
    }
    else {
      return v14;
    }
  }
}

uint64_t storeEnumTagSinglePayload for ImageHomographicAlignmentObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3DB218C);
}

uint64_t sub_1A3DB218C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095C7C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(_WORD *)(a1 + *(int *)(a4 + 32)) = __PAIR16__((8 * ~a2) >> 24, 8 * ~(_BYTE)a2);
  }
  return result;
}

uint64_t sub_1A3DB225C()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ImageHomographicAlignmentObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DB23E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageHomographicAlignmentObservation.CodingKeys()
{
  return &type metadata for ImageHomographicAlignmentObservation.CodingKeys;
}

unint64_t sub_1A3DB241C()
{
  unint64_t result = qword_1E9622750[0];
  if (!qword_1E9622750[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9622750);
  }
  return result;
}

unint64_t sub_1A3DB2474()
{
  unint64_t result = qword_1E9622860;
  if (!qword_1E9622860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9622860);
  }
  return result;
}

unint64_t sub_1A3DB24CC()
{
  unint64_t result = qword_1E9622868[0];
  if (!qword_1E9622868[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9622868);
  }
  return result;
}

uint64_t sub_1A3DB2520(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E61725470726177 && a2 == 0xED00006D726F6673)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1A3DB2650()
{
  unint64_t result = qword_1E95EF838;
  if (!qword_1E95EF838)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EF838);
  }
  return result;
}

uint64_t sub_1A3DB2690()
{
  if (*v0) {
    return 0x746176726573626FLL;
  }
  else {
    return 0x6675426C65786970;
  }
}

uint64_t sub_1A3DB26DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DB3330(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DB2704(uint64_t a1)
{
  unint64_t v2 = sub_1A3DB3454();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB2740(uint64_t a1)
{
  unint64_t v2 = sub_1A3DB3454();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1A3DB277C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 24);
  uint64_t v11 = (__CVBuffer *)v10(a2, a4);
  CVPixelBufferLockBaseAddress(v11, 1uLL);

  int v12 = (__CVBuffer *)v10(a2, a4);
  BaseAddress = (char *)CVPixelBufferGetBaseAddress(v12);

  if (BaseAddress)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 16))(a5, &BaseAddress[*(void *)(*(void *)(a3 - 8) + 72) * a1], a3);
    unsigned int v14 = (__CVBuffer *)v10(a2, a4);
    CVPixelBufferUnlockBaseAddress(v14, 1uLL);
  }
  else
  {
    sub_1A4096BEC();
    __break(1u);
  }
}

void sub_1A3DB28E0(void *a1, uint64_t a2, void *a3)
{
  void (*v14)(id *__return_ptr, uint64_t, uint64_t, __n128);
  id v15;
  void *v16;
  uint64_t (*v17)(uint64_t, void *);
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  id v41[3];

  _OWORD v41[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v35 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF848);
  uint64_t v36 = *(void *)(v38 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v38);
  int v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a3[1];
  unsigned int v14 = *(void (**)(id *__return_ptr, uint64_t, uint64_t, __n128))(v13 + 8);
  uint64_t v39 = a2;
  v14(v41, a2, v13, v10);
  if (LOWORD(v41[0]) > 0xFFF7u)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v40 = (uint64_t)v41[0] & 0x1FF;
  long long v15 = sub_1A3DBF9C8();
  if (!v15)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  uint64_t v16 = v15;
  __n128 v17 = (uint64_t (*)(uint64_t, void *))a3[3];
  uint64_t v34 = v3;
  long long v18 = (void *)v17(v39, a3);
  long long v19 = objc_msgSend(objc_allocWithZone((Class)VNPixelBufferObservation), sel_initWithOriginatingRequestSpecifier_featureName_CVPixelBuffer_, v16, 0, v18);

  if (!v19) {
    goto LABEL_12;
  }
  long long v20 = self;
  v41[0] = 0;
  long long v21 = objc_msgSend(v20, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v19, 1, v41);
  uint64_t v22 = v41[0];
  if (v21)
  {
    long long v31 = v13;
    long long v32 = v8;
    long long v33 = v7;
    uint64_t v23 = (void *)sub_1A4095C1C();
    uint64_t v25 = v24;

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1A3DB3454();
    sub_1A4096FEC();
    v41[0] = v23;
    v41[1] = v25;
    LOBYTE(v40) = 0;
    sub_1A3C81178();
    int v26 = v37;
    uint64_t v27 = v38;
    sub_1A4096DBC();
    if (v26)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v27);

      sub_1A3C7D218((uint64_t)v23, (unint64_t)v25);
    }
    else
    {
      LOBYTE(v41[0]) = 1;
      sub_1A3C80D74();
      uint64_t v29 = (uint64_t)v35;
      sub_1A4096D5C();
      sub_1A3D2A9D0(v29, v39, v31, a3[2]);
      sub_1A3C7D218((uint64_t)v23, (unint64_t)v25);

      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v29, v33);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v27);
    }
  }
  else
  {
    uint64_t v28 = v22;
    sub_1A4095AEC();

    swift_willThrow();
  }
}

void *sub_1A3DB2CDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a2;
  uint64_t v43 = sub_1A4095C7C();
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  char v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v29[-v8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF858);
  uint64_t v42 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  long long v15 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = a1[3];
  char v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1A3DB3454();
  __n128 v17 = v45;
  sub_1A4096FDC();
  if (v17) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  unint64_t v35 = v6;
  uint64_t v36 = v9;
  int64_t v45 = v12;
  uint64_t v19 = v42;
  uint64_t v18 = v43;
  char v46 = 0;
  sub_1A3C812C8();
  sub_1A4096CFC();
  uint64_t v21 = v47[0];
  unint64_t v20 = v47[1];
  sub_1A3C8C73C(0, &qword_1E95EC800);
  sub_1A3C8C73C(0, &qword_1E95EC570);
  uint64_t result = (void *)sub_1A409673C();
  uint64_t v33 = v21;
  unint64_t v34 = v20;
  if (result)
  {
    uint64_t v23 = result;
    id v32 = objc_msgSend(result, sel_pixelBuffer);
    LOBYTE(v47[0]) = 1;
    sub_1A3C80D74();
    sub_1A4096C7C();
    id v31 = v23;
    LOBYTE(v47[0]) = 0;
    sub_1A3DB34A8();
    sub_1A4096CFC();
    LOBYTE(v47[0]) = 1;
    sub_1A4096CDC();
    float v25 = v24;
    char v46 = 3;
    sub_1A3C80E6C();
    sub_1A4096CAC();
    uint64_t v26 = v40;
    int v30 = LOWORD(v47[0]);
    uint64_t v27 = v45;
    sub_1A3D2B130((uint64_t)v48);
    uint64_t v28 = v35;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 16))(v35, v36, v18);
    LOWORD(v47[0]) = v30;
    (*(void (**)(unsigned char *, unsigned char *, void *, id, uint64_t, float))(v39 + 48))(v28, v48, v47, v32, v38, v25);

    sub_1A3C7D218(v33, v34);
    (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v36, v18);
    (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v27, v10);
    (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v15, v13);
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3DB3330(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6675426C65786970 && a2 == 0xEB00000000726566;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1A3DB3454()
{
  unint64_t result = qword_1E95EF850;
  if (!qword_1E95EF850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF850);
  }
  return result;
}

unint64_t sub_1A3DB34A8()
{
  unint64_t result = qword_1E95EBED8;
  if (!qword_1E95EBED8)
  {
    sub_1A4095C7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EBED8);
  }
  return result;
}

unint64_t sub_1A3DB3504()
{
  unint64_t result = qword_1E95EF860;
  if (!qword_1E95EF860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF860);
  }
  return result;
}

unint64_t sub_1A3DB355C()
{
  unint64_t result = qword_1E95EF868;
  if (!qword_1E95EF868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF868);
  }
  return result;
}

unint64_t sub_1A3DB35B4()
{
  unint64_t result = qword_1E95EF870;
  if (!qword_1E95EF870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF870);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PixelBufferCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DB36D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferCodingKeys()
{
  return &type metadata for PixelBufferCodingKeys;
}

uint64_t sub_1A3DB370C()
{
  if ((sub_1A4095AFC() & 1) == 0) {
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF878);
  sub_1A4095B6C();
  uint64_t result = v3;
  if (!v3)
  {
    __break(1u);
    return result;
  }
  uint64_t result = sub_1A409613C();
  if (!v1)
  {
    __break(1u);
LABEL_5:
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(0xD00000000000001ELL, 0x80000001A40B7520, v2);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A3DB37D4()
{
  if ((sub_1A4095AFC() & 1) == 0)
  {
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(0xD00000000000001ELL, 0x80000001A40B7520, v3);
    swift_willThrow();
    return v0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF878);
  sub_1A4095B6C();
  uint64_t result = v4;
  if (v4)
  {
    uint64_t result = sub_1A409613C();
    if (v2)
    {
      sub_1A4095B3C();
      sub_1A3CA62F0();
      uint64_t v0 = sub_1A409698C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3DB392C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A3DB3934@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1A3DB392C(a1, a2);
}

uint64_t DetectedDocumentObservation.globalSegmentationMask.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A3DB5AEC(v1, a1, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
}

uint64_t DetectedDocumentObservation.globalSegmentationMask.setter(uint64_t a1)
{
  return sub_1A3DB3988(a1, v1);
}

uint64_t sub_1A3DB3988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PixelBufferObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DetectedDocumentObservation.globalSegmentationMask.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 DetectedDocumentObservation.topLeft.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + *(int *)(type metadata accessor for DetectedDocumentObservation() + 20));
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for DetectedDocumentObservation()
{
  uint64_t result = qword_1E9622F00;
  if (!qword_1E9622F00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DetectedDocumentObservation.topLeft.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = type metadata accessor for DetectedDocumentObservation();
  uint64_t v5 = (void *)(v1 + *(int *)(result + 20));
  *uint64_t v5 = v2;
  v5[1] = v3;
  return result;
}

uint64_t (*DetectedDocumentObservation.topLeft.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 DetectedDocumentObservation.topRight.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + *(int *)(type metadata accessor for DetectedDocumentObservation() + 24));
  *a1 = result;
  return result;
}

uint64_t DetectedDocumentObservation.topRight.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = type metadata accessor for DetectedDocumentObservation();
  uint64_t v5 = (void *)(v1 + *(int *)(result + 24));
  *uint64_t v5 = v2;
  v5[1] = v3;
  return result;
}

uint64_t (*DetectedDocumentObservation.topRight.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 DetectedDocumentObservation.bottomRight.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + *(int *)(type metadata accessor for DetectedDocumentObservation() + 28));
  *a1 = result;
  return result;
}

uint64_t DetectedDocumentObservation.bottomRight.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = type metadata accessor for DetectedDocumentObservation();
  uint64_t v5 = (void *)(v1 + *(int *)(result + 28));
  *uint64_t v5 = v2;
  v5[1] = v3;
  return result;
}

uint64_t (*DetectedDocumentObservation.bottomRight.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 DetectedDocumentObservation.bottomLeft.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + *(int *)(type metadata accessor for DetectedDocumentObservation() + 32));
  *a1 = result;
  return result;
}

uint64_t DetectedDocumentObservation.bottomLeft.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = type metadata accessor for DetectedDocumentObservation();
  uint64_t v5 = (void *)(v1 + *(int *)(result + 32));
  *uint64_t v5 = v2;
  v5[1] = v3;
  return result;
}

uint64_t (*DetectedDocumentObservation.bottomLeft.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectedDocumentObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DetectedDocumentObservation() + 36);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

float DetectedDocumentObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for DetectedDocumentObservation() + 40));
}

__n128 DetectedDocumentObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DetectedDocumentObservation() + 44);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t DetectedDocumentObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v0 = type metadata accessor for DetectedDocumentObservation();
  sub_1A3DB6C5C(v0, (uint64_t)&protocol witness table for DetectedDocumentObservation);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  type metadata accessor for PixelBufferObservation();
  sub_1A3DB5CD0(&qword_1E95ECCD0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v1 = sub_1A3DB5CD0(&qword_1E95EF880, (void (*)(uint64_t))type metadata accessor for DetectedDocumentObservation);
  sub_1A3D8AC8C(v0, (uint64_t)&off_1EF74D5D0, v1);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

uint64_t DetectedDocumentObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for DetectedDocumentObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t DetectedDocumentObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DB4064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_1A4095C7C();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

float sub_1A3DB40D4(uint64_t a1)
{
  return *(float *)(v1 + *(int *)(a1 + 40));
}

__n128 sub_1A3DB40E0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 44);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(unsigned char *)(a2 + 48) = v4;
  return result;
}

uint64_t sub_1A3DB4104@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *(_WORD *)(v2 + *(int *)(result + 48));
  return result;
}

__n128 sub_1A3DB4114@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *(__n128 *)(v2 + *(int *)(a1 + 20));
  *a2 = result;
  return result;
}

__n128 sub_1A3DB4124@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *(__n128 *)(v2 + *(int *)(a1 + 24));
  *a2 = result;
  return result;
}

__n128 sub_1A3DB4134@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *(__n128 *)(v2 + *(int *)(a1 + 28));
  *a2 = result;
  return result;
}

__n128 sub_1A3DB4144@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *(__n128 *)(v2 + *(int *)(a1 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_1A3DB4154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3DB5CD0(&qword_1E95EF880, (void (*)(uint64_t))type metadata accessor for DetectedDocumentObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

void sub_1A3DB41D8(uint64_t a1@<X0>, double *a2@<X8>)
{
}

uint64_t sub_1A3DB41E4()
{
  unint64_t v1 = 0x6C676E6174636572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746176726573626FLL;
  }
}

uint64_t sub_1A3DB4250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DB6AE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DB4278(uint64_t a1)
{
  unint64_t v2 = sub_1A3DB5A98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB42B4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DB5A98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectedDocumentObservation.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v18 = v2;
  uint64_t v19 = v3;
  MEMORY[0x1F4188790](v2);
  long long v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC510);
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v21 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF890);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DB5A98();
  sub_1A4096FEC();
  char v25 = 2;
  type metadata accessor for PixelBufferObservation();
  sub_1A3DB5CD0(&qword_1E95EE5D8, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  uint64_t v12 = v22;
  sub_1A4096DBC();
  if (!v12)
  {
    uint64_t v22 = v6;
    char v24 = 1;
    sub_1A3C9C5D8();
    uint64_t v13 = (uint64_t)v21;
    sub_1A4096D5C();
    uint64_t v14 = type metadata accessor for DetectedDocumentObservation();
    sub_1A3D75270(v13, v14, (void (**)(void *__return_ptr, void, void))&protocol witness table for DetectedDocumentObservation);
    char v23 = 0;
    sub_1A3C80D74();
    sub_1A4096D5C();
    uint64_t v15 = sub_1A3DB5CD0(&qword_1E95EF880, (void (*)(uint64_t))type metadata accessor for DetectedDocumentObservation);
    sub_1A3D2A9D0((uint64_t)v5, v14, (uint64_t)&off_1EF74D5D0, v15);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v18);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t DetectedDocumentObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v27 = sub_1A4095C7C();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v28 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  int v30 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC528);
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PixelBufferObservation();
  MEMORY[0x1F4188790](v8);
  unint64_t v34 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF898);
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DetectedDocumentObservation();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  unint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1A3DB5A98();
  uint64_t v17 = v36;
  sub_1A4096FDC();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  char v23 = (int *)v13;
  uint64_t v36 = v7;
  uint64_t v18 = v33;
  LOBYTE(v37) = 2;
  sub_1A3DB5CD0(&qword_1E95EE5D0, (void (*)(uint64_t))type metadata accessor for PixelBufferObservation);
  uint64_t v19 = (uint64_t)v34;
  sub_1A4096CFC();
  sub_1A3D54040(v19, (uint64_t)v15);
  LOBYTE(v37) = 1;
  sub_1A3C9C5D8();
  sub_1A4096C7C();
  char v39 = 0;
  sub_1A3C97AC4();
  sub_1A4096CFC();
  *(_OWORD *)&v15[v23[5]] = v37;
  char v39 = 1;
  sub_1A4096CFC();
  *(_OWORD *)&v15[v23[6]] = v37;
  char v39 = 3;
  sub_1A4096CFC();
  *(_OWORD *)&v15[v23[8]] = v37;
  char v39 = 2;
  sub_1A4096CFC();
  *(_OWORD *)&v15[v23[7]] = v37;
  LOBYTE(v37) = 0;
  sub_1A3C80D74();
  sub_1A4096C7C();
  LOBYTE(v37) = 0;
  sub_1A3DB5CD0((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  uint64_t v21 = v27;
  sub_1A4096CFC();
  unint64_t v34 = v12;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v15[v23[9]], v28, v21);
  LOBYTE(v37) = 1;
  sub_1A4096CDC();
  *(_DWORD *)&v15[v23[10]] = v22;
  char v39 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  *(_WORD *)&v15[v23[12]] = v37;
  sub_1A3D2B130((uint64_t)v38);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v29);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v32);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v34, v10);
  sub_1A3C7D648((uint64_t)v38, (uint64_t)&v15[v23[11]]);
  sub_1A3DB5AEC((uint64_t)v15, v24, (uint64_t (*)(void))type metadata accessor for DetectedDocumentObservation);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_1A3DB5B54((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DetectedDocumentObservation);
}

uint64_t sub_1A3DB4FE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DetectedDocumentObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3DB5000(void *a1)
{
  return DetectedDocumentObservation.encode(to:)(a1);
}

id sub_1A3DB5018@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1A4095C7C();
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PixelBufferObservation();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v51 - v15;
  __int16 v17 = *a2;
  id result = objc_msgSend(a1, sel_globalSegmentationMask);
  if (result)
  {
    uint64_t v19 = result;
    id v20 = objc_msgSend(result, sel_pixelBuffer);

    id v21 = objc_msgSend(a1, sel_uuid);
    sub_1A4095C5C();

    objc_msgSend(a1, sel_confidence);
    float v23 = v22;
    LOWORD(v60[0]) = v17;
    id v24 = v20;
    sub_1A3D59318((uint64_t)v10, a3, (__int16 *)v60, (uint64_t)v24, (uint64_t)v16, v23);
    sub_1A3DB5AEC((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
    objc_msgSend(a1, sel_topLeft);
    NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v26, v25));
    uint64_t v27 = v60[1];
    uint64_t v51 = v60[0];
    objc_msgSend(a1, sel_topRight);
    Vision::NormalizedPoint v30 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v29, v28));
    uint64_t v31 = v58;
    uint64_t v32 = v59;
    objc_msgSend(a1, sel_bottomRight, v30.cgPoint.x, v30.cgPoint.y);
    Vision::NormalizedPoint v35 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v34, v33));
    uint64_t v36 = v56;
    uint64_t v37 = v57;
    objc_msgSend(a1, sel_bottomLeft, v35.cgPoint.x, v35.cgPoint.y);
    Vision::NormalizedPoint v40 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v39, v38));
    uint64_t v42 = v54;
    uint64_t v41 = v55;
    id v43 = objc_msgSend(a1, sel_uuid, v40.cgPoint.x, v40.cgPoint.y);
    sub_1A4095C5C();

    objc_msgSend(a1, sel_confidence);
    int v45 = v44;

    sub_1A3DB5B54((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
    sub_1A3D54040((uint64_t)v14, a4);
    char v46 = (int *)type metadata accessor for DetectedDocumentObservation();
    char v47 = (void *)(a4 + v46[5]);
    *char v47 = v51;
    v47[1] = v27;
    uint64_t v48 = (void *)(a4 + v46[6]);
    *uint64_t v48 = v31;
    v48[1] = v32;
    id v49 = (void *)(a4 + v46[7]);
    *id v49 = v36;
    v49[1] = v37;
    int64_t v50 = (void *)(a4 + v46[8]);
    *int64_t v50 = v42;
    v50[1] = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(a4 + v46[9], v10, v53);
    *(_DWORD *)(a4 + v46[10]) = v45;
    id result = (id)sub_1A3C7D648(a3, a4 + v46[11]);
    *(_WORD *)(a4 + v46[12]) = v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t DetectedDocumentObservation.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PixelBufferObservation();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = MEMORY[0x1F4188790](v11).n128_u64[0];
  uint64_t v14 = (char *)&v56 - v13;
  id v15 = objc_msgSend(a1, sel_globalSegmentationMask, v12);
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_pixelBuffer);

    CVPixelBufferRef v20 = sub_1A3CAB15C();
    uint64_t v59 = v5;

    id v21 = objc_msgSend(a1, sel_uuid);
    sub_1A4095C5C();

    objc_msgSend(a1, sel_confidence);
    float v23 = v22;
    objc_msgSend(a1, sel_timeRange);
    char v72 = 0;
    LOWORD(v60[0]) = -8;
    id v24 = v20;
    sub_1A3D59318((uint64_t)v7, (uint64_t)v71, (__int16 *)v60, (uint64_t)v24, (uint64_t)v14, v23);
    sub_1A3DB5AEC((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
    objc_msgSend(a1, sel_topLeft);
    NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v26, v25));
    uint64_t v27 = v70;
    uint64_t v58 = v69;
    objc_msgSend(a1, sel_topRight);
    Vision::NormalizedPoint v30 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v29, v28));
    uint64_t v31 = v67;
    uint64_t v32 = v68;
    objc_msgSend(a1, sel_bottomRight, v30.cgPoint.x, v30.cgPoint.y);
    Vision::NormalizedPoint v35 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v34, v33));
    uint64_t v36 = v65;
    uint64_t v37 = v66;
    objc_msgSend(a1, sel_bottomLeft, v35.cgPoint.x, v35.cgPoint.y);
    Vision::NormalizedPoint v40 = NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v39, v38));
    uint64_t v41 = v63;
    uint64_t v42 = v64;
    id v43 = objc_msgSend(a1, sel_uuid, v40.cgPoint.x, v40.cgPoint.y);
    sub_1A4095C5C();

    objc_msgSend(a1, sel_confidence);
    int v45 = v44;
    objc_msgSend(a1, sel_timeRange);
    long long v57 = v60[0];
    long long v56 = v60[1];
    uint64_t v46 = v61;
    uint64_t v47 = v62;

    sub_1A3DB5B54((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PixelBufferObservation);
    sub_1A3D54040((uint64_t)v10, a2);
    uint64_t v48 = (int *)type metadata accessor for DetectedDocumentObservation();
    id v49 = (void *)(a2 + v48[5]);
    *id v49 = v58;
    v49[1] = v27;
    int64_t v50 = (void *)(a2 + v48[6]);
    *int64_t v50 = v31;
    v50[1] = v32;
    uint64_t v51 = (void *)(a2 + v48[7]);
    *uint64_t v51 = v36;
    v51[1] = v37;
    uint64_t v52 = (void *)(a2 + v48[8]);
    *uint64_t v52 = v41;
    v52[1] = v42;
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(a2 + v48[9], v7, v4);
    *(_DWORD *)(a2 + v48[10]) = v45;
    uint64_t v53 = a2 + v48[11];
    long long v54 = v56;
    *(_OWORD *)uint64_t v53 = v57;
    *(_OWORD *)(v53 + 16) = v54;
    *(void *)(v53 + 32) = v46;
    *(void *)(v53 + 40) = v47;
    *(unsigned char *)(v53 + 48) = 0;
    *(_WORD *)(a2 + v48[12]) = -8;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v48 - 1) + 56))(a2, 0, 1, v48);
  }
  else
  {

    uint64_t v18 = type metadata accessor for DetectedDocumentObservation();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    return v19(a2, 1, 1, v18);
  }
}

id sub_1A3DB5880@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  __int16 v5 = *a2;
  return sub_1A3DB5018(a1, &v5, a3, a4);
}

uint64_t _s6Vision27DetectedDocumentObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((static PixelBufferObservation.== infix(_:_:)(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for DetectedDocumentObservation();
  uint64_t v5 = v4[5];
  v30[0] = *(_OWORD *)(a1 + v5);
  v27[0] = *(_OWORD *)(a2 + v5);
  if (!static NormalizedPoint.== infix(_:_:)((double *)v30, (double *)v27)) {
    return 0;
  }
  uint64_t v6 = v4[6];
  v30[0] = *(_OWORD *)(a1 + v6);
  v27[0] = *(_OWORD *)(a2 + v6);
  if (!static NormalizedPoint.== infix(_:_:)((double *)v30, (double *)v27)) {
    return 0;
  }
  uint64_t v7 = v4[7];
  v30[0] = *(_OWORD *)(a1 + v7);
  v27[0] = *(_OWORD *)(a2 + v7);
  if (!static NormalizedPoint.== infix(_:_:)((double *)v30, (double *)v27)) {
    return 0;
  }
  uint64_t v8 = v4[8];
  v30[0] = *(_OWORD *)(a1 + v8);
  v27[0] = *(_OWORD *)(a2 + v8);
  if (!static NormalizedPoint.== infix(_:_:)((double *)v30, (double *)v27)
    || (sub_1A4095C4C() & 1) == 0
    || *(float *)(a1 + v4[10]) != *(float *)(a2 + v4[10]))
  {
    return 0;
  }
  uint64_t v9 = v4[11];
  uint64_t v10 = (uint64_t *)(a1 + v9);
  char v11 = *(unsigned char *)(a1 + v9 + 48);
  double v12 = (uint64_t *)(a2 + v9);
  if ((v11 & 1) == 0)
  {
    if (v12[6]) {
      return 0;
    }
    uint64_t v13 = *v10;
    uint64_t v14 = v10[1];
    long long v15 = *((_OWORD *)v10 + 1);
    uint64_t v17 = v10[4];
    uint64_t v16 = v10[5];
    uint64_t v18 = *v12;
    uint64_t v19 = v12[1];
    long long v20 = *((_OWORD *)v12 + 1);
    uint64_t v22 = v12[4];
    uint64_t v21 = v12[5];
    *(void *)&v27[0] = v13;
    *((void *)&v27[0] + 1) = v14;
    v27[1] = v15;
    uint64_t v28 = v17;
    uint64_t v29 = v16;
    *(void *)&v30[0] = v18;
    *((void *)&v30[0] + 1) = v19;
    v30[1] = v20;
    uint64_t v31 = v22;
    uint64_t v32 = v21;
    if ((sub_1A409669C() & 1) == 0) {
      return 0;
    }
LABEL_13:
    uint64_t v23 = v4[12];
    unsigned int v24 = *(unsigned __int16 *)(a1 + v23);
    unsigned int v25 = *(unsigned __int16 *)(a2 + v23);
    if (v24 <= 0xFFF7)
    {
      if (v25 > 0xFFF7) {
        return 0;
      }
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
    }
    else if (v25 <= 0xFFF7)
    {
      return 0;
    }
    return 1;
  }
  if (*((unsigned char *)v12 + 48)) {
    goto LABEL_13;
  }
  return 0;
}

unint64_t sub_1A3DB5A98()
{
  unint64_t result = qword_1E9622B70[0];
  if (!qword_1E9622B70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9622B70);
  }
  return result;
}

uint64_t sub_1A3DB5AEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3DB5B54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A3DB5BB4(void *a1)
{
  a1[1] = sub_1A3DB5CD0(&qword_1E95EF8A0, (void (*)(uint64_t))type metadata accessor for DetectedDocumentObservation);
  a1[2] = sub_1A3DB5CD0(&qword_1E95EF8A8, (void (*)(uint64_t))type metadata accessor for DetectedDocumentObservation);
  a1[3] = sub_1A3DB5CD0(&qword_1E95EF8B0, (void (*)(uint64_t))type metadata accessor for DetectedDocumentObservation);
  uint64_t result = sub_1A3DB5CD0(&qword_1E95EF888, (void (*)(uint64_t))type metadata accessor for DetectedDocumentObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3DB5C88()
{
  return sub_1A3DB5CD0(&qword_1E95ED148, (void (*)(uint64_t))type metadata accessor for DetectedDocumentObservation);
}

uint64_t sub_1A3DB5CD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3DB5D18(uint64_t a1)
{
  uint64_t result = sub_1A3DB5CD0(&qword_1E95EF880, (void (*)(uint64_t))type metadata accessor for DetectedDocumentObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for DetectedDocumentObservation(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A4095C7C();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = (int *)type metadata accessor for PixelBufferObservation();
    *(_DWORD *)&a1[v9[5]] = *(_DWORD *)((char *)a2 + v9[5]);
    uint64_t v10 = v9[6];
    char v11 = &a1[v10];
    double v12 = (char *)a2 + v10;
    v11[48] = v12[48];
    long long v13 = *((_OWORD *)v12 + 2);
    long long v14 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v13;
    *(_OWORD *)char v11 = v14;
    *(_WORD *)&a1[v9[7]] = *(_WORD *)((char *)a2 + v9[7]);
    uint64_t v15 = v9[8];
    uint64_t v16 = *(void **)((char *)a2 + v15);
    *(void *)&a1[v15] = v16;
    uint64_t v17 = a3[6];
    *(_OWORD *)&a1[a3[5]] = *(_OWORD *)((char *)a2 + a3[5]);
    *(_OWORD *)&a1[v17] = *(_OWORD *)((char *)a2 + v17);
    uint64_t v18 = a3[8];
    *(_OWORD *)&a1[a3[7]] = *(_OWORD *)((char *)a2 + a3[7]);
    *(_OWORD *)&a1[v18] = *(_OWORD *)((char *)a2 + v18);
    uint64_t v19 = a3[9];
    long long v20 = &a1[v19];
    uint64_t v21 = (char *)a2 + v19;
    id v22 = v16;
    v8(v20, v21, v7);
    uint64_t v23 = a3[11];
    *(_DWORD *)&a1[a3[10]] = *(_DWORD *)((char *)a2 + a3[10]);
    unsigned int v24 = &a1[v23];
    unsigned int v25 = (char *)a2 + v23;
    long long v26 = *((_OWORD *)v25 + 1);
    *(_OWORD *)unsigned int v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v26;
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    v24[48] = v25[48];
    *(_WORD *)&a1[a3[12]] = *(_WORD *)((char *)a2 + a3[12]);
  }
  return a1;
}

uint64_t destroy for DetectedDocumentObservation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);

  uint64_t v5 = a1 + *(int *)(a2 + 36);

  return v7(v5, v4);
}

uint64_t initializeWithCopy for DetectedDocumentObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for PixelBufferObservation();
  *(_DWORD *)(a1 + v8[5]) = *(_DWORD *)(a2 + v8[5]);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  char v11 = (long long *)(a2 + v9);
  *(unsigned char *)(v10 + 48) = *((unsigned char *)v11 + 48);
  long long v12 = v11[2];
  long long v13 = *v11;
  *(_OWORD *)(v10 + 16) = v11[1];
  *(_OWORD *)(v10 + 32) = v12;
  *(_OWORD *)uint64_t v10 = v13;
  *(_WORD *)(a1 + v8[7]) = *(_WORD *)(a2 + v8[7]);
  uint64_t v14 = v8[8];
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  uint64_t v16 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  uint64_t v17 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  id v21 = v15;
  v7(v19, v20, v6);
  uint64_t v22 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  long long v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(unsigned char *)(v23 + 48) = *(unsigned char *)(v24 + 48);
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithCopy for DetectedDocumentObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for PixelBufferObservation();
  *(_DWORD *)(a1 + v8[5]) = *(_DWORD *)(a2 + v8[5]);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  char v12 = *(unsigned char *)(v11 + 48);
  long long v14 = *(_OWORD *)(v11 + 16);
  long long v13 = *(_OWORD *)(v11 + 32);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v14;
  *(_OWORD *)(v10 + 32) = v13;
  *(unsigned char *)(v10 + 48) = v12;
  *(_WORD *)(a1 + v8[7]) = *(_WORD *)(a2 + v8[7]);
  uint64_t v15 = v8[8];
  uint64_t v16 = *(void **)(a2 + v15);
  uint64_t v17 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = v16;
  id v18 = v16;

  uint64_t v19 = a3[5];
  uint64_t v20 = (void *)(a1 + v19);
  id v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  uint64_t v22 = a3[6];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  uint64_t v25 = a3[7];
  long long v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *long long v26 = *v27;
  v26[1] = v27[1];
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)(a1 + v28);
  Vision::NormalizedPoint v30 = (void *)(a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  v7(a1 + a3[9], a2 + a3[9], v6);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  char v34 = *(unsigned char *)(v33 + 48);
  long long v36 = *(_OWORD *)(v33 + 16);
  long long v35 = *(_OWORD *)(v33 + 32);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v36;
  *(_OWORD *)(v32 + 32) = v35;
  *(unsigned char *)(v32 + 48) = v34;
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  return a1;
}

uint64_t initializeWithTake for DetectedDocumentObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for PixelBufferObservation();
  *(_DWORD *)(a1 + v8[5]) = *(_DWORD *)(a2 + v8[5]);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (long long *)(a2 + v9);
  *(unsigned char *)(v10 + 48) = *((unsigned char *)v11 + 48);
  long long v12 = v11[2];
  long long v13 = *v11;
  *(_OWORD *)(v10 + 16) = v11[1];
  *(_OWORD *)(v10 + 32) = v12;
  *(_OWORD *)uint64_t v10 = v13;
  *(_WORD *)(a1 + v8[7]) = *(_WORD *)(a2 + v8[7]);
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v14 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v7(a1 + a3[9], a2 + a3[9], v6);
  uint64_t v16 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(unsigned char *)(v17 + 48) = *(unsigned char *)(v18 + 48);
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for DetectedDocumentObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for PixelBufferObservation();
  *(_DWORD *)(a1 + v8[5]) = *(_DWORD *)(a2 + v8[5]);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (long long *)(a2 + v9);
  *(unsigned char *)(v10 + 48) = *((unsigned char *)v11 + 48);
  long long v12 = v11[2];
  long long v13 = *v11;
  *(_OWORD *)(v10 + 16) = v11[1];
  *(_OWORD *)(v10 + 32) = v12;
  *(_OWORD *)uint64_t v10 = v13;
  *(_WORD *)(a1 + v8[7]) = *(_WORD *)(a2 + v8[7]);
  uint64_t v14 = v8[8];
  uint64_t v15 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);

  uint64_t v16 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  uint64_t v17 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v7(a1 + a3[9], a2 + a3[9], v6);
  uint64_t v18 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(unsigned char *)(v19 + 48) = *(unsigned char *)(v20 + 48);
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectedDocumentObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3DB6580);
}

uint64_t sub_1A3DB6580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PixelBufferObservation();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_1A4095C7C();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      int v14 = (*(unsigned __int8 *)(a1 + *(int *)(a3 + 48)) >> 3) | (32 * *(unsigned __int8 *)(a1 + *(int *)(a3 + 48) + 1));
      unsigned int v15 = v14 ^ 0x1FFE;
      unsigned int v16 = v14 ^ 0x1FFF;
      if (v15 >> 1 >= 0xFED) {
        return 0;
      }
      else {
        return v16;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 36);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for DetectedDocumentObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3DB66BC);
}

uint64_t sub_1A3DB66BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PixelBufferObservation();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1A4095C7C();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(_WORD *)(a1 + *(int *)(a4 + 48)) = __PAIR16__((8 * ~a2) >> 24, 8 * ~(_BYTE)a2);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 36);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1A3DB67DC()
{
  uint64_t result = type metadata accessor for PixelBufferObservation();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1A4095C7C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DetectedDocumentObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DB69A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectedDocumentObservation.CodingKeys()
{
  return &type metadata for DetectedDocumentObservation.CodingKeys;
}

unint64_t sub_1A3DB69DC()
{
  unint64_t result = qword_1E9623010[0];
  if (!qword_1E9623010[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9623010);
  }
  return result;
}

unint64_t sub_1A3DB6A34()
{
  unint64_t result = qword_1E9623120;
  if (!qword_1E9623120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623120);
  }
  return result;
}

unint64_t sub_1A3DB6A8C()
{
  unint64_t result = qword_1E9623128[0];
  if (!qword_1E9623128[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9623128);
  }
  return result;
}

uint64_t sub_1A3DB6AE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C676E6174636572 && a2 == 0xE900000000000065 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A40B7580)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A3DB6C5C(uint64_t a1, uint64_t a2)
{
  strcpy((char *)v4, "boundingBox: ");
  HIWORD(v4[1]) = -4864;
  (*(void (**)(long long *__return_ptr))(a2 + 8))(&v3);
  sub_1A3C7D5B0();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return v4[0];
}

uint64_t dispatch thunk of BoundingBoxProviding.boundingBox.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t RequestDescriptor.description.getter()
{
  return 0;
}

uint64_t sub_1A3DB78FC()
{
  uint64_t v1 = 0x526E776F6E6B6E55;
  uint64_t v2 = sub_1A4096FAC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v4) = *v0;
  char v6 = v0[1];
  v26[3] = &type metadata for RequestDescriptor;
  LOBYTE(v26[0]) = v4;
  BYTE1(v26[0]) = v6;
  sub_1A4096F8C();
  sub_1A4096F9C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A3DB7B30(&v27);
  swift_release();
  if (v30)
  {
    long long v7 = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    if (*((void *)&v7 + 1))
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1A3DBFDEC(1);
      uint64_t v10 = v9;
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      swift_bridgeObjectRelease();
      *(void *)&long long v27 = v8;
      *((void *)&v27 + 1) = v10;
      uint64_t v28 = v12;
      uint64_t v29 = v14;
      sub_1A3DBFE88();
      uint64_t v15 = sub_1A409697C();
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      unint64_t v18 = sub_1A3DBFEDC(1uLL, v7, *((unint64_t *)&v7 + 1));
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      v26[0] = v15;
      v26[1] = v17;
      *(void *)&long long v27 = v18;
      *((void *)&v27 + 1) = v20;
      uint64_t v28 = v22;
      uint64_t v29 = v24;
      sub_1A3DBFF8C();
      swift_bridgeObjectRetain();
      sub_1A409620C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v26[0];
    }
  }
  else
  {
    sub_1A3DB7C4C((uint64_t)&v27);
  }
  return v1;
}

uint64_t sub_1A3DB7B30@<X0>(_OWORD *a1@<X8>)
{
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v2 = sub_1A4096A5C();
  swift_getObjectType();
  uint64_t result = sub_1A4096A5C();
  if (v2 == result)
  {
    char v4 = sub_1A4096A6C();
    swift_unknownObjectRelease();
    if (v4)
    {
      uint64_t result = swift_unknownObjectRelease();
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
    else
    {
      sub_1A4096BCC();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3DB7C4C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF8B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t RequestDescriptor.hash(into:)()
{
  if (v0[1]) {
    int v1 = 32;
  }
  else {
    int v1 = 0;
  }
  switch(v1 | (*v0 >> 3))
  {
    case 1:
      sub_1A4096F3C();
      sub_1A3DC14F8();
      break;
    case 2:
      sub_1A4096F3C();
      sub_1A3DC14A4();
      break;
    case 3:
      sub_1A4096F3C();
      sub_1A3DC1450();
      break;
    case 4:
      sub_1A4096F3C();
      sub_1A3DC13FC();
      break;
    case 5:
      sub_1A4096F3C();
      sub_1A3DC13A8();
      break;
    case 6:
      sub_1A4096F3C();
      sub_1A3DC1354();
      break;
    case 7:
      sub_1A4096F3C();
      sub_1A3DC1300();
      break;
    case 8:
      sub_1A4096F3C();
      sub_1A3DC12AC();
      break;
    case 9:
      sub_1A4096F3C();
      sub_1A3DC1258();
      break;
    case 0xA:
      sub_1A4096F3C();
      sub_1A3DC1204();
      break;
    case 0xB:
      sub_1A4096F3C();
      sub_1A3DC11B0();
      break;
    case 0xC:
      sub_1A4096F3C();
      sub_1A3DC115C();
      break;
    case 0xD:
      sub_1A4096F3C();
      sub_1A3DC1108();
      break;
    case 0xE:
      sub_1A4096F3C();
      sub_1A3DC10B4();
      break;
    case 0xF:
      sub_1A4096F3C();
      sub_1A3DC1060();
      break;
    case 0x10:
      sub_1A4096F3C();
      sub_1A3DC100C();
      break;
    case 0x11:
      sub_1A4096F3C();
      sub_1A3DC0FB8();
      break;
    case 0x12:
      sub_1A4096F3C();
      sub_1A3DC0F64();
      break;
    case 0x13:
      sub_1A4096F3C();
      sub_1A3DC0F10();
      break;
    case 0x14:
      sub_1A4096F3C();
      sub_1A3DC0EBC();
      break;
    case 0x15:
      sub_1A4096F3C();
      sub_1A3DC0E68();
      break;
    case 0x16:
      sub_1A4096F3C();
      sub_1A3DC0E14();
      break;
    case 0x17:
      sub_1A4096F3C();
      sub_1A3DC0DC0();
      break;
    case 0x18:
      sub_1A4096F3C();
      sub_1A3DC0D6C();
      break;
    case 0x19:
      sub_1A4096F3C();
      sub_1A3DC0D18();
      break;
    case 0x1A:
      sub_1A4096F3C();
      sub_1A3DC0CC4();
      break;
    case 0x1B:
      sub_1A4096F3C();
      sub_1A3DC0C70();
      break;
    case 0x1C:
      sub_1A4096F3C();
      sub_1A3DC0C1C();
      break;
    case 0x1D:
      sub_1A4096F3C();
      sub_1A3DC0BC8();
      break;
    case 0x1E:
      sub_1A4096F3C();
      sub_1A3DC0B74();
      break;
    case 0x1F:
      sub_1A4096F3C();
      sub_1A3DC0B20();
      break;
    case 0x20:
      sub_1A4096F3C();
      sub_1A3DC0ACC();
      break;
    case 0x21:
      sub_1A4096F3C();
      sub_1A3DC0A78();
      break;
    case 0x22:
      sub_1A4096F3C();
      sub_1A3DC0A24();
      break;
    case 0x23:
      sub_1A4096F3C();
      sub_1A3DC09D0();
      break;
    case 0x24:
      sub_1A4096F3C();
      sub_1A3DC097C();
      break;
    case 0x25:
      sub_1A4096F3C();
      sub_1A3DC0928();
      break;
    default:
      sub_1A4096F3C();
      sub_1A3DC154C();
      break;
  }
  return sub_1A40960DC();
}

uint64_t sub_1A3DB82A0()
{
  return 12383;
}

uint64_t sub_1A3DB82B0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC169C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB82EC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC169C();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A3DB8328(char a1)
{
  unint64_t result = 0xD00000000000001BLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000025;
      break;
    case 4:
      unint64_t result = 0x65524C4D65726F63;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD000000000000021;
      break;
    case 9:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    case 12:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 13:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 15:
    case 24:
    case 28:
    case 31:
    case 32:
    case 33:
      unint64_t result = 0xD000000000000017;
      break;
    case 16:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 17:
      unint64_t result = 0xD000000000000019;
      break;
    case 18:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 19:
      unint64_t result = 0xD000000000000020;
      break;
    case 20:
      unint64_t result = 0xD000000000000025;
      break;
    case 21:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 22:
      unint64_t result = 0xD000000000000021;
      break;
    case 23:
      unint64_t result = 0xD000000000000021;
      break;
    case 25:
      unint64_t result = 0xD000000000000014;
      break;
    case 26:
      unint64_t result = 0xD000000000000028;
      break;
    case 27:
      unint64_t result = 0xD000000000000012;
      break;
    case 29:
      unint64_t result = 0xD000000000000015;
      break;
    case 30:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 34:
      unint64_t result = 0xD000000000000018;
      break;
    case 35:
      unint64_t result = 0xD000000000000019;
      break;
    case 36:
      unint64_t result = 0xD000000000000023;
      break;
    case 37:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3DB8668(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2C44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB86A4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2C44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB86E0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2CEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB871C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2CEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A3DB8758()
{
  return sub_1A3DB8328(*v0);
}

uint64_t sub_1A3DB8760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DC6AAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A3DB8788(unsigned char *a1@<X8>)
{
  *a1 = 38;
}

uint64_t sub_1A3DB8794(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC15A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB87D0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC15A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB880C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2B9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8848(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2B9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8884(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2AF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB88C0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2AF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB88FC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2A4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8938(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2A4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8974(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1894();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB89B0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1894();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB89EC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC29A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8A28(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC29A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8A64(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC193C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8AA0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC193C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8ADC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC28FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8B18(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC28FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8B54(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2854();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8B90(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2854();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8BCC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC27AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8C08(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC27AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8C44(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2E3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8C80(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2E3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8CBC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2704();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8CF8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2704();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8D34(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC25B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8D70(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC25B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8DAC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC265C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8DE8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC265C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8E24(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC250C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8E60(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC250C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8E9C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC15F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8ED8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC15F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8F14(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2D94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8F50(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2D94();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB8F8C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2464();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB8FC8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2464();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB9004(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC19E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9040(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC19E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB907C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC23BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB90B8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC23BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB90F4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2314();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9130(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2314();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB916C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC226C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB91A8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC226C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB91E4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC17EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9220(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC17EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB925C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC211C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9298(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC211C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB92D4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC21C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9310(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC21C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB934C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2074();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9388(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC2074();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB93C4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1F24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9400(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1F24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB943C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1FCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9478(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1FCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB94B4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1744();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB94F0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1744();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB952C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1E7C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9568(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1E7C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB95A4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1DD4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB95E0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1DD4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB961C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1D2C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9658(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1D2C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB9694(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1C84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB96D0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1C84();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB970C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1BDC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB9748(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1BDC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB9784(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1B34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB97C0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1B34();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DB97FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A3DB987C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1A8C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DB98B8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC1A8C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RequestDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA00);
  uint64_t v164 = *(void *)(v3 - 8);
  uint64_t v165 = v3;
  MEMORY[0x1F4188790](v3);
  v163 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA08);
  uint64_t v161 = *(void *)(v5 - 8);
  uint64_t v162 = v5;
  MEMORY[0x1F4188790](v5);
  char v160 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA10);
  uint64_t v158 = *(void *)(v7 - 8);
  uint64_t v159 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v157 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA18);
  uint64_t v155 = *(void *)(v9 - 8);
  uint64_t v156 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v154 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA20);
  uint64_t v152 = *(void *)(v11 - 8);
  uint64_t v153 = v11;
  MEMORY[0x1F4188790](v11);
  v151 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA28);
  uint64_t v149 = *(void *)(v13 - 8);
  uint64_t v150 = v13;
  MEMORY[0x1F4188790](v13);
  v148 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA30);
  v146[1] = *(void *)(v147 - 8);
  MEMORY[0x1F4188790](v147);
  v146[0] = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA38);
  v144[1] = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  v144[0] = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA40);
  v142[1] = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  v142[0] = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA48);
  v140[1] = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  v140[0] = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA50);
  v138[1] = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  v138[0] = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA58);
  v136[1] = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  v136[0] = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA60);
  v134[1] = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  v134[0] = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA68);
  uint64_t v132 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  v131 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA70);
  v129[1] = *(void *)(v130 - 8);
  MEMORY[0x1F4188790](v130);
  v129[0] = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA78);
  v127[1] = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  v127[0] = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA80);
  v125[1] = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  v125[0] = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA88);
  v123[1] = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  v123[0] = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA90);
  v121[1] = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  v121[0] = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFA98);
  v119[1] = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  v119[0] = (char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAA0);
  v117[1] = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  v117[0] = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAA8);
  v115[1] = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  v115[0] = (char *)&v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAB0);
  v113[1] = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  v113[0] = (char *)&v73 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAB8);
  v111[1] = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  v111[0] = (char *)&v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAC0);
  v109[1] = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  v109[0] = (char *)&v73 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAC8);
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  unint64_t v106 = (char *)&v73 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAD0);
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105);
  char v103 = (char *)&v73 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAD8);
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v100 = (char *)&v73 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAE0);
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  v97 = (char *)&v73 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAE8);
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  v94 = (char *)&v73 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAF0);
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v91 = (char *)&v73 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFAF8);
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v88 = (char *)&v73 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFB00);
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  os_signpost_id_t v85 = (char *)&v73 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFB08);
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  unint64_t v82 = (char *)&v73 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFB10);
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v79 = (char *)&v73 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFB18);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v76 = (char *)&v73 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFB20);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v46 = (char *)&v73 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFB28);
  uint64_t v73 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  id v49 = (char *)&v73 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFB30);
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v168 = v50;
  uint64_t v169 = v51;
  MEMORY[0x1F4188790](v50);
  uint64_t v53 = (char *)&v73 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v54 = *v1;
  int v55 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DC15A0();
  v167 = v53;
  sub_1A4096FEC();
  if (v55) {
    int v56 = 32;
  }
  else {
    int v56 = 0;
  }
  switch(v56 | (v54 >> 3))
  {
    case 1u:
      char v59 = v54 & 7;
      char v171 = 1;
      sub_1A3DC2D94();
      uint64_t v61 = v167;
      uint64_t v60 = v168;
      sub_1A4096D5C();
      char v171 = v59;
      sub_1A3DC2DE8();
      uint64_t v62 = v75;
      sub_1A4096DBC();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v62);
      return (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v61, v60);
    case 2u:
      char v171 = 2;
      sub_1A3DC2CEC();
      uint64_t v64 = v76;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2D40();
      uint64_t v65 = v78;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v109;
      goto LABEL_37;
    case 3u:
      char v171 = 3;
      sub_1A3DC2C44();
      uint64_t v64 = v79;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2C98();
      uint64_t v65 = v81;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v111;
      goto LABEL_37;
    case 4u:
      char v171 = 4;
      sub_1A3DC2B9C();
      uint64_t v64 = v82;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2BF0();
      uint64_t v65 = v84;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v113;
      goto LABEL_37;
    case 5u:
      char v171 = 5;
      sub_1A3DC2AF4();
      uint64_t v64 = v85;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2B48();
      uint64_t v65 = v87;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v115;
      goto LABEL_37;
    case 6u:
      char v171 = 6;
      sub_1A3DC2A4C();
      uint64_t v64 = v88;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2AA0();
      uint64_t v65 = v90;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v117;
      goto LABEL_37;
    case 7u:
      char v171 = 7;
      sub_1A3DC29A4();
      uint64_t v64 = v91;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC29F8();
      uint64_t v65 = v93;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v119;
      goto LABEL_37;
    case 8u:
      char v171 = 8;
      sub_1A3DC28FC();
      uint64_t v64 = v94;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2950();
      uint64_t v65 = v96;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v121;
      goto LABEL_37;
    case 9u:
      char v171 = 9;
      sub_1A3DC2854();
      uint64_t v64 = v97;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC28A8();
      uint64_t v65 = v99;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v123;
      goto LABEL_37;
    case 0xAu:
      char v171 = 10;
      sub_1A3DC27AC();
      uint64_t v64 = v100;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2800();
      uint64_t v65 = v102;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v125;
      goto LABEL_37;
    case 0xBu:
      char v171 = 11;
      sub_1A3DC2704();
      uint64_t v64 = v103;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2758();
      uint64_t v65 = v105;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v127;
      goto LABEL_37;
    case 0xCu:
      char v171 = 12;
      sub_1A3DC265C();
      uint64_t v64 = v106;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC26B0();
      uint64_t v65 = v108;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v129;
      goto LABEL_37;
    case 0xDu:
      char v171 = 13;
      sub_1A3DC25B4();
      uint64_t v64 = (char *)v109[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2608();
      uint64_t v65 = v110;
      sub_1A4096DBC();
      uint64_t v66 = &v131;
      goto LABEL_37;
    case 0xEu:
      char v171 = 14;
      sub_1A3DC250C();
      uint64_t v64 = (char *)v111[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2560();
      uint64_t v65 = v112;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v134;
      goto LABEL_37;
    case 0xFu:
      char v171 = 15;
      sub_1A3DC2464();
      uint64_t v64 = (char *)v113[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC24B8();
      uint64_t v65 = v114;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v136;
      goto LABEL_37;
    case 0x10u:
      char v171 = 16;
      sub_1A3DC23BC();
      uint64_t v64 = (char *)v115[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2410();
      uint64_t v65 = v116;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v138;
      goto LABEL_37;
    case 0x11u:
      char v171 = 17;
      sub_1A3DC2314();
      uint64_t v64 = (char *)v117[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2368();
      uint64_t v65 = v118;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v140;
      goto LABEL_37;
    case 0x12u:
      char v171 = 18;
      sub_1A3DC226C();
      uint64_t v64 = (char *)v119[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC22C0();
      uint64_t v65 = v120;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v142;
      goto LABEL_37;
    case 0x13u:
      char v171 = 19;
      sub_1A3DC21C4();
      uint64_t v64 = (char *)v121[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2218();
      uint64_t v65 = v122;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v144;
      goto LABEL_37;
    case 0x14u:
      char v171 = 20;
      sub_1A3DC211C();
      uint64_t v64 = (char *)v123[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2170();
      uint64_t v65 = v124;
      sub_1A4096DBC();
      uint64_t v66 = (char **)v146;
      goto LABEL_37;
    case 0x15u:
      char v171 = 21;
      sub_1A3DC2074();
      uint64_t v64 = (char *)v125[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC20C8();
      uint64_t v65 = v126;
      sub_1A4096DBC();
      uint64_t v66 = &v148;
      goto LABEL_37;
    case 0x16u:
      char v171 = 22;
      sub_1A3DC1FCC();
      uint64_t v64 = (char *)v127[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC2020();
      uint64_t v65 = v128;
      sub_1A4096DBC();
      uint64_t v66 = &v151;
      goto LABEL_37;
    case 0x17u:
      char v171 = 23;
      sub_1A3DC1F24();
      uint64_t v64 = (char *)v129[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1F78();
      uint64_t v65 = v130;
      sub_1A4096DBC();
      uint64_t v66 = &v154;
      goto LABEL_37;
    case 0x18u:
      char v171 = 24;
      sub_1A3DC1E7C();
      uint64_t v67 = v131;
      uint64_t v69 = v167;
      uint64_t v68 = v168;
      sub_1A4096D5C();
      char v171 = v54 & 1;
      sub_1A3DC1ED0();
      uint64_t v70 = v133;
      sub_1A4096DBC();
      uint64_t v71 = v132;
      goto LABEL_47;
    case 0x19u:
      char v171 = 25;
      sub_1A3DC1DD4();
      uint64_t v64 = (char *)v134[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1E28();
      uint64_t v65 = v135;
      sub_1A4096DBC();
      uint64_t v66 = &v160;
      goto LABEL_37;
    case 0x1Au:
      char v171 = 26;
      sub_1A3DC1D2C();
      uint64_t v64 = (char *)v136[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1D80();
      uint64_t v65 = v137;
      sub_1A4096DBC();
      uint64_t v66 = &v163;
      goto LABEL_37;
    case 0x1Bu:
      char v171 = 27;
      sub_1A3DC1C84();
      uint64_t v64 = (char *)v138[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1CD8();
      uint64_t v65 = v139;
      sub_1A4096DBC();
      uint64_t v66 = (char **)&v166;
      goto LABEL_37;
    case 0x1Cu:
      char v171 = 28;
      sub_1A3DC1BDC();
      uint64_t v64 = (char *)v140[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1C30();
      uint64_t v65 = v141;
      sub_1A4096DBC();
      uint64_t v66 = (char **)&v169;
      goto LABEL_37;
    case 0x1Du:
      char v171 = 29;
      sub_1A3DC1B34();
      uint64_t v64 = (char *)v142[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1B88();
      uint64_t v65 = v143;
      sub_1A4096DBC();
      uint64_t v66 = (char **)&v170;
      goto LABEL_37;
    case 0x1Eu:
      char v171 = 30;
      sub_1A3DC1A8C();
      uint64_t v64 = (char *)v144[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1AE0();
      uint64_t v65 = v145;
      sub_1A4096DBC();
      uint64_t v66 = (char **)&v172;
      goto LABEL_37;
    case 0x1Fu:
      char v171 = 31;
      sub_1A3DC19E4();
      uint64_t v64 = (char *)v146[0];
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1A38();
      uint64_t v65 = v147;
      sub_1A4096DBC();
      uint64_t v66 = (char **)&v173;
LABEL_37:
      uint64_t v72 = (uint64_t)*(v66 - 32);
      goto LABEL_38;
    case 0x20u:
      char v171 = 32;
      sub_1A3DC193C();
      uint64_t v64 = v148;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1990();
      uint64_t v65 = v150;
      sub_1A4096DBC();
      uint64_t v72 = v149;
      goto LABEL_38;
    case 0x21u:
      char v171 = 33;
      sub_1A3DC1894();
      uint64_t v64 = v151;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC18E8();
      uint64_t v65 = v153;
      sub_1A4096DBC();
      uint64_t v72 = v152;
      goto LABEL_38;
    case 0x22u:
      char v171 = 34;
      sub_1A3DC17EC();
      uint64_t v64 = v154;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1840();
      uint64_t v65 = v156;
      sub_1A4096DBC();
      uint64_t v72 = v155;
      goto LABEL_38;
    case 0x23u:
      char v171 = 35;
      sub_1A3DC1744();
      uint64_t v64 = v157;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC1798();
      uint64_t v65 = v159;
      sub_1A4096DBC();
      uint64_t v72 = v158;
      goto LABEL_38;
    case 0x24u:
      char v171 = 36;
      sub_1A3DC169C();
      uint64_t v64 = v160;
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      sub_1A3DC16F0();
      uint64_t v65 = v162;
      sub_1A4096DBC();
      uint64_t v72 = v161;
LABEL_38:
      (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v65);
      return (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v58, v57);
    case 0x25u:
      char v171 = 37;
      sub_1A3DC15F4();
      uint64_t v67 = v163;
      uint64_t v69 = v167;
      uint64_t v68 = v168;
      sub_1A4096D5C();
      char v171 = v54 & 7;
      sub_1A3DC1648();
      uint64_t v70 = v165;
      sub_1A4096DBC();
      uint64_t v71 = v164;
LABEL_47:
      (*(void (**)(char *, uint64_t))(v71 + 8))(v67, v70);
      return (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v69, v68);
    default:
      char v171 = 0;
      sub_1A3DC2E3C();
      uint64_t v58 = v167;
      uint64_t v57 = v168;
      sub_1A4096D5C();
      char v171 = v54;
      sub_1A3DC2E90();
      sub_1A4096DBC();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v49, v47);
      return (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v58, v57);
  }
}

uint64_t RequestDescriptor.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t RequestDescriptor.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  v263 = a2;
  uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFC68);
  uint64_t v226 = *(void *)(v225 - 8);
  MEMORY[0x1F4188790](v225);
  v262 = (char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFC70);
  uint64_t v223 = *(void *)(v224 - 8);
  MEMORY[0x1F4188790](v224);
  v258 = (char *)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFC78);
  uint64_t v221 = *(void *)(v222 - 8);
  MEMORY[0x1F4188790](v222);
  v257 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFC80);
  uint64_t v219 = *(void *)(v220 - 8);
  MEMORY[0x1F4188790](v220);
  v256 = (char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFC88);
  uint64_t v217 = *(void *)(v218 - 8);
  MEMORY[0x1F4188790](v218);
  v255 = (char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFC90);
  uint64_t v215 = *(void *)(v216 - 8);
  MEMORY[0x1F4188790](v216);
  v254 = (char *)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFC98);
  uint64_t v213 = *(void *)(v214 - 8);
  MEMORY[0x1F4188790](v214);
  v253 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCA0);
  uint64_t v211 = *(void *)(v212 - 8);
  MEMORY[0x1F4188790](v212);
  v252 = (char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCA8);
  uint64_t v209 = *(void *)(v210 - 8);
  MEMORY[0x1F4188790](v210);
  v251 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCB0);
  uint64_t v207 = *(void *)(v208 - 8);
  MEMORY[0x1F4188790](v208);
  v250 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCB8);
  uint64_t v205 = *(void *)(v206 - 8);
  MEMORY[0x1F4188790](v206);
  v249 = (char *)&v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCC0);
  uint64_t v203 = *(void *)(v204 - 8);
  MEMORY[0x1F4188790](v204);
  v248 = (char *)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCC8);
  uint64_t v201 = *(void *)(v202 - 8);
  MEMORY[0x1F4188790](v202);
  v247 = (char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCD0);
  uint64_t v199 = *(void *)(v200 - 8);
  MEMORY[0x1F4188790](v200);
  v246 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCD8);
  uint64_t v197 = *(void *)(v198 - 8);
  MEMORY[0x1F4188790](v198);
  v245 = (char *)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCE0);
  uint64_t v195 = *(void *)(v196 - 8);
  MEMORY[0x1F4188790](v196);
  v244 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCE8);
  uint64_t v193 = *(void *)(v194 - 8);
  MEMORY[0x1F4188790](v194);
  v243 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCF0);
  uint64_t v191 = *(void *)(v192 - 8);
  MEMORY[0x1F4188790](v192);
  v242 = (char *)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFCF8);
  uint64_t v189 = *(void *)(v190 - 8);
  MEMORY[0x1F4188790](v190);
  v241 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD00);
  uint64_t v187 = *(void *)(v188 - 8);
  MEMORY[0x1F4188790](v188);
  v240 = (char *)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD08);
  uint64_t v185 = *(void *)(v186 - 8);
  MEMORY[0x1F4188790](v186);
  v239 = (char *)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD10);
  uint64_t v183 = *(void *)(v184 - 8);
  MEMORY[0x1F4188790](v184);
  v238 = (char *)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD18);
  uint64_t v181 = *(void *)(v182 - 8);
  MEMORY[0x1F4188790](v182);
  v237 = (char *)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD20);
  uint64_t v179 = *(void *)(v180 - 8);
  MEMORY[0x1F4188790](v180);
  v236 = (char *)&v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD28);
  uint64_t v177 = *(void *)(v178 - 8);
  MEMORY[0x1F4188790](v178);
  v235 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD30);
  uint64_t v175 = *(void *)(v176 - 8);
  MEMORY[0x1F4188790](v176);
  v230 = (char *)&v147 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD38);
  uint64_t v173 = *(void *)(v174 - 8);
  MEMORY[0x1F4188790](v174);
  v261 = (char *)&v147 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD40);
  uint64_t v171 = *(void *)(v172 - 8);
  MEMORY[0x1F4188790](v172);
  v234 = (char *)&v147 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD48);
  uint64_t v170 = *(void *)(v169 - 8);
  MEMORY[0x1F4188790](v169);
  v260 = (char *)&v147 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD50);
  uint64_t v167 = *(void *)(v168 - 8);
  MEMORY[0x1F4188790](v168);
  v233 = (char *)&v147 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD58);
  uint64_t v165 = *(void *)(v166 - 8);
  MEMORY[0x1F4188790](v166);
  v232 = (char *)&v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD60);
  uint64_t v163 = *(void *)(v164 - 8);
  MEMORY[0x1F4188790](v164);
  v231 = (char *)&v147 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD68);
  uint64_t v161 = *(void *)(v162 - 8);
  MEMORY[0x1F4188790](v162);
  v259 = (char *)&v147 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD70);
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x1F4188790](v160);
  v229 = (char *)&v147 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD78);
  uint64_t v157 = *(void *)(v158 - 8);
  MEMORY[0x1F4188790](v158);
  v228 = (char *)&v147 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD80);
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x1F4188790](v156);
  v227 = (char *)&v147 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD88);
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154);
  uint64_t v40 = (char *)&v147 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD90);
  uint64_t v152 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (char *)&v147 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EFD98);
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v47 = (char *)&v147 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a1[3];
  v264 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v48);
  sub_1A3DC15A0();
  uint64_t v49 = v265;
  sub_1A4096FDC();
  uint64_t v265 = v49;
  if (!v49)
  {
    uint64_t v149 = v43;
    uint64_t v148 = v41;
    uint64_t v150 = v40;
    uint64_t v51 = v259;
    uint64_t v50 = v260;
    uint64_t v53 = v261;
    uint64_t v52 = v262;
    uint64_t v151 = v45;
    unsigned int v54 = v263;
    uint64_t v55 = sub_1A4096D3C();
    if (*(void *)(v55 + 16) == 1)
    {
      switch(*(unsigned char *)(v55 + 32))
      {
        case 1:
          char v266 = 1;
          sub_1A3DC2D94();
          uint64_t v67 = v150;
          uint64_t v68 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v68;
          if (v68) {
            goto LABEL_119;
          }
          sub_1A3DC3AB4();
          uint64_t v69 = v154;
          uint64_t v70 = v265;
          sub_1A4096CFC();
          uint64_t v265 = v70;
          if (v70)
          {
            (*(void (**)(char *, uint64_t))(v153 + 8))(v67, v69);
            goto LABEL_119;
          }
          (*(void (**)(char *, uint64_t))(v153 + 8))(v67, v69);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v151 + 8))(v47, v44);
          char v61 = 0;
          char v62 = v266 | 8;
          goto LABEL_129;
        case 2:
          char v266 = 2;
          sub_1A3DC2CEC();
          uint64_t v53 = v227;
          uint64_t v71 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v71;
          if (v71) {
            goto LABEL_119;
          }
          sub_1A3DC3A60();
          uint64_t v57 = v156;
          uint64_t v72 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v72;
          uint64_t v60 = &v187;
          if (v72) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v155 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 16;
          goto LABEL_129;
        case 3:
          char v266 = 3;
          sub_1A3DC2C44();
          uint64_t v53 = v228;
          uint64_t v73 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v73;
          if (v73) {
            goto LABEL_119;
          }
          sub_1A3DC3A0C();
          uint64_t v57 = v158;
          uint64_t v74 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v74;
          uint64_t v60 = &v189;
          if (v74) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v157 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 24;
          goto LABEL_129;
        case 4:
          char v266 = 4;
          sub_1A3DC2B9C();
          uint64_t v53 = v229;
          uint64_t v75 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v75;
          if (v75) {
            goto LABEL_119;
          }
          sub_1A3DC39B8();
          uint64_t v57 = v160;
          uint64_t v76 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v76;
          uint64_t v60 = &v191;
          if (v76) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v159 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 32;
          goto LABEL_129;
        case 5:
          char v266 = 5;
          sub_1A3DC2AF4();
          uint64_t v77 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v77;
          if (v77) {
            goto LABEL_119;
          }
          sub_1A3DC3964();
          uint64_t v57 = v162;
          uint64_t v78 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v78;
          if (v78)
          {
            uint64_t v79 = *(void (**)(char *, uint64_t))(v161 + 8);
            uint64_t v80 = v51;
            goto LABEL_116;
          }
          (*(void (**)(char *, uint64_t))(v161 + 8))(v51, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 40;
          goto LABEL_129;
        case 6:
          char v266 = 6;
          sub_1A3DC2A4C();
          uint64_t v53 = v231;
          uint64_t v81 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v81;
          if (v81) {
            goto LABEL_119;
          }
          sub_1A3DC3910();
          uint64_t v57 = v164;
          uint64_t v82 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v82;
          uint64_t v60 = &v195;
          if (v82) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v163 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 48;
          goto LABEL_129;
        case 7:
          char v266 = 7;
          sub_1A3DC29A4();
          uint64_t v53 = v232;
          uint64_t v83 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v83;
          if (v83) {
            goto LABEL_119;
          }
          sub_1A3DC38BC();
          uint64_t v57 = v166;
          uint64_t v84 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v84;
          uint64_t v60 = &v197;
          if (v84) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v165 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 56;
          goto LABEL_129;
        case 8:
          char v266 = 8;
          sub_1A3DC28FC();
          uint64_t v53 = v233;
          uint64_t v85 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v85;
          if (v85) {
            goto LABEL_119;
          }
          sub_1A3DC3868();
          uint64_t v57 = v168;
          uint64_t v86 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v86;
          uint64_t v60 = &v199;
          if (v86) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v167 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 64;
          goto LABEL_129;
        case 9:
          char v266 = 9;
          sub_1A3DC2854();
          uint64_t v87 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v87;
          if (v87) {
            goto LABEL_119;
          }
          sub_1A3DC3814();
          uint64_t v57 = v169;
          uint64_t v88 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v88;
          if (v88)
          {
            uint64_t v79 = *(void (**)(char *, uint64_t))(v170 + 8);
            uint64_t v80 = v50;
            goto LABEL_116;
          }
          (*(void (**)(char *, uint64_t))(v170 + 8))(v50, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 72;
          goto LABEL_129;
        case 0xA:
          char v266 = 10;
          sub_1A3DC27AC();
          uint64_t v53 = v234;
          uint64_t v89 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v89;
          if (v89) {
            goto LABEL_119;
          }
          sub_1A3DC37C0();
          uint64_t v57 = v172;
          uint64_t v90 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v90;
          uint64_t v60 = &v203;
          if (v90) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v171 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 80;
          goto LABEL_129;
        case 0xB:
          char v266 = 11;
          sub_1A3DC2704();
          uint64_t v91 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v91;
          if (v91) {
            goto LABEL_119;
          }
          sub_1A3DC376C();
          uint64_t v57 = v174;
          uint64_t v92 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v92;
          uint64_t v60 = &v205;
          if (v92) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v173 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 88;
          goto LABEL_129;
        case 0xC:
          char v266 = 12;
          sub_1A3DC265C();
          uint64_t v53 = v230;
          uint64_t v93 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v93;
          if (v93) {
            goto LABEL_119;
          }
          sub_1A3DC3718();
          uint64_t v57 = v176;
          uint64_t v94 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v94;
          uint64_t v60 = &v207;
          if (v94) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v175 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 96;
          goto LABEL_129;
        case 0xD:
          char v266 = 13;
          sub_1A3DC25B4();
          uint64_t v53 = v235;
          uint64_t v95 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v95;
          if (v95) {
            goto LABEL_119;
          }
          sub_1A3DC36C4();
          uint64_t v57 = v178;
          uint64_t v96 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v96;
          uint64_t v60 = &v209;
          if (v96) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v177 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 104;
          goto LABEL_129;
        case 0xE:
          char v266 = 14;
          sub_1A3DC250C();
          uint64_t v53 = v236;
          uint64_t v97 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v97;
          if (v97) {
            goto LABEL_119;
          }
          sub_1A3DC3670();
          uint64_t v57 = v180;
          uint64_t v98 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v98;
          uint64_t v60 = &v211;
          if (v98) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v179 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 112;
          goto LABEL_129;
        case 0xF:
          char v266 = 15;
          sub_1A3DC2464();
          uint64_t v53 = v237;
          uint64_t v99 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v99;
          if (v99) {
            goto LABEL_119;
          }
          sub_1A3DC361C();
          uint64_t v57 = v182;
          uint64_t v100 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v100;
          uint64_t v60 = &v213;
          if (v100) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v181 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 120;
          goto LABEL_129;
        case 0x10:
          char v266 = 16;
          sub_1A3DC23BC();
          uint64_t v53 = v238;
          uint64_t v101 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v101;
          if (v101) {
            goto LABEL_119;
          }
          sub_1A3DC35C8();
          uint64_t v57 = v184;
          uint64_t v102 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v102;
          uint64_t v60 = &v215;
          if (v102) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v183 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = 0x80;
          goto LABEL_129;
        case 0x11:
          char v266 = 17;
          sub_1A3DC2314();
          uint64_t v53 = v239;
          uint64_t v103 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v103;
          if (v103) {
            goto LABEL_119;
          }
          sub_1A3DC3574();
          uint64_t v57 = v186;
          uint64_t v104 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v104;
          uint64_t v60 = &v217;
          if (v104) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v185 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -120;
          goto LABEL_129;
        case 0x12:
          char v266 = 18;
          sub_1A3DC226C();
          uint64_t v53 = v240;
          uint64_t v105 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v105;
          if (v105) {
            goto LABEL_119;
          }
          sub_1A3DC3520();
          uint64_t v57 = v188;
          uint64_t v106 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v106;
          uint64_t v60 = &v219;
          if (v106) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v187 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -112;
          goto LABEL_129;
        case 0x13:
          char v266 = 19;
          sub_1A3DC21C4();
          uint64_t v53 = v241;
          uint64_t v107 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v107;
          if (v107) {
            goto LABEL_119;
          }
          sub_1A3DC34CC();
          uint64_t v57 = v190;
          uint64_t v108 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v108;
          uint64_t v60 = &v221;
          if (v108) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v189 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -104;
          goto LABEL_129;
        case 0x14:
          char v266 = 20;
          sub_1A3DC211C();
          uint64_t v53 = v242;
          uint64_t v109 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v109;
          if (v109) {
            goto LABEL_119;
          }
          sub_1A3DC3478();
          uint64_t v57 = v192;
          uint64_t v110 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v110;
          uint64_t v60 = &v223;
          if (v110) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -96;
          goto LABEL_129;
        case 0x15:
          char v266 = 21;
          sub_1A3DC2074();
          uint64_t v53 = v243;
          uint64_t v111 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v111;
          if (v111) {
            goto LABEL_119;
          }
          sub_1A3DC3424();
          uint64_t v57 = v194;
          uint64_t v112 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v112;
          uint64_t v60 = &v225;
          if (v112) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v193 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -88;
          goto LABEL_129;
        case 0x16:
          char v266 = 22;
          sub_1A3DC1FCC();
          uint64_t v53 = v244;
          uint64_t v113 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v113;
          if (v113) {
            goto LABEL_119;
          }
          sub_1A3DC33D0();
          uint64_t v57 = v196;
          uint64_t v114 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v114;
          uint64_t v60 = (uint64_t *)&v227;
          if (v114) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v195 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -80;
          goto LABEL_129;
        case 0x17:
          char v266 = 23;
          sub_1A3DC1F24();
          uint64_t v53 = v245;
          uint64_t v115 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v115;
          if (v115) {
            goto LABEL_119;
          }
          sub_1A3DC337C();
          uint64_t v57 = v198;
          uint64_t v116 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v116;
          uint64_t v60 = (uint64_t *)&v229;
          if (v116) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v197 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -72;
          goto LABEL_129;
        case 0x18:
          char v266 = 24;
          sub_1A3DC1E7C();
          uint64_t v53 = v246;
          uint64_t v117 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v117;
          if (v117) {
            goto LABEL_119;
          }
          sub_1A3DC3328();
          uint64_t v57 = v200;
          uint64_t v118 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v118;
          uint64_t v60 = (uint64_t *)&v231;
          if (v118) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v199 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = v266 | 0xC0;
          goto LABEL_129;
        case 0x19:
          char v266 = 25;
          sub_1A3DC1DD4();
          uint64_t v53 = v247;
          uint64_t v119 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v119;
          if (v119) {
            goto LABEL_119;
          }
          sub_1A3DC32D4();
          uint64_t v57 = v202;
          uint64_t v120 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v120;
          uint64_t v60 = (uint64_t *)&v233;
          if (v120) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v201 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -56;
          goto LABEL_129;
        case 0x1A:
          char v266 = 26;
          sub_1A3DC1D2C();
          uint64_t v53 = v248;
          uint64_t v121 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v121;
          if (v121) {
            goto LABEL_119;
          }
          sub_1A3DC3280();
          uint64_t v57 = v204;
          uint64_t v122 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v122;
          uint64_t v60 = (uint64_t *)&v235;
          if (v122) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v203 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -48;
          goto LABEL_129;
        case 0x1B:
          char v266 = 27;
          sub_1A3DC1C84();
          uint64_t v53 = v249;
          uint64_t v123 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v123;
          if (v123) {
            goto LABEL_119;
          }
          sub_1A3DC322C();
          uint64_t v57 = v206;
          uint64_t v124 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v124;
          uint64_t v60 = (uint64_t *)&v237;
          if (v124) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v205 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -40;
          goto LABEL_129;
        case 0x1C:
          char v266 = 28;
          sub_1A3DC1BDC();
          uint64_t v53 = v250;
          uint64_t v125 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v125;
          if (v125) {
            goto LABEL_119;
          }
          sub_1A3DC31D8();
          uint64_t v57 = v208;
          uint64_t v126 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v126;
          uint64_t v60 = (uint64_t *)&v239;
          if (v126) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v207 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -32;
          goto LABEL_129;
        case 0x1D:
          char v266 = 29;
          sub_1A3DC1B34();
          uint64_t v53 = v251;
          uint64_t v127 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v127;
          if (v127) {
            goto LABEL_119;
          }
          sub_1A3DC3184();
          uint64_t v57 = v210;
          uint64_t v128 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v128;
          uint64_t v60 = (uint64_t *)&v241;
          if (v128) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v209 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -24;
          goto LABEL_129;
        case 0x1E:
          char v266 = 30;
          sub_1A3DC1A8C();
          uint64_t v53 = v252;
          uint64_t v129 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v129;
          if (v129) {
            goto LABEL_119;
          }
          sub_1A3DC3130();
          uint64_t v57 = v212;
          uint64_t v130 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v130;
          uint64_t v60 = (uint64_t *)&v243;
          if (v130) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v211 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -16;
          goto LABEL_129;
        case 0x1F:
          char v266 = 31;
          sub_1A3DC19E4();
          uint64_t v53 = v253;
          uint64_t v131 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v131;
          if (v131) {
            goto LABEL_119;
          }
          sub_1A3DC30DC();
          uint64_t v57 = v214;
          uint64_t v132 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v132;
          uint64_t v60 = (uint64_t *)&v245;
          if (v132) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v213 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 0;
          char v62 = -8;
          goto LABEL_129;
        case 0x20:
          char v266 = 32;
          sub_1A3DC193C();
          uint64_t v53 = v254;
          uint64_t v133 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v133;
          if (v133) {
            goto LABEL_119;
          }
          sub_1A3DC3088();
          uint64_t v57 = v216;
          uint64_t v134 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v134;
          uint64_t v60 = (uint64_t *)&v247;
          if (v134) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v215 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v62 = 0;
          goto LABEL_128;
        case 0x21:
          char v266 = 33;
          sub_1A3DC1894();
          uint64_t v53 = v255;
          uint64_t v135 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v135;
          if (v135) {
            goto LABEL_119;
          }
          sub_1A3DC3034();
          uint64_t v57 = v218;
          uint64_t v136 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v136;
          uint64_t v60 = (uint64_t *)&v249;
          if (v136) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v217 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 1;
          char v62 = 8;
          goto LABEL_129;
        case 0x22:
          char v266 = 34;
          sub_1A3DC17EC();
          uint64_t v53 = v256;
          uint64_t v137 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v137;
          if (v137) {
            goto LABEL_119;
          }
          sub_1A3DC2FE0();
          uint64_t v57 = v220;
          uint64_t v138 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v138;
          uint64_t v60 = (uint64_t *)&v251;
          if (v138) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v219 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 1;
          char v62 = 16;
          goto LABEL_129;
        case 0x23:
          char v266 = 35;
          sub_1A3DC1744();
          uint64_t v53 = v257;
          uint64_t v139 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v139;
          if (v139) {
            goto LABEL_119;
          }
          sub_1A3DC2F8C();
          uint64_t v57 = v222;
          uint64_t v140 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v140;
          uint64_t v60 = (uint64_t *)&v253;
          if (v140) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v221 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 1;
          char v62 = 24;
          goto LABEL_129;
        case 0x24:
          char v266 = 36;
          sub_1A3DC169C();
          uint64_t v53 = v258;
          uint64_t v141 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v141;
          if (v141) {
            goto LABEL_119;
          }
          sub_1A3DC2F38();
          uint64_t v57 = v224;
          uint64_t v142 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v142;
          uint64_t v60 = (uint64_t *)&v255;
          if (v142) {
            goto LABEL_115;
          }
          (*(void (**)(char *, uint64_t))(v223 + 8))(v53, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v61 = 1;
          char v62 = 32;
          goto LABEL_129;
        case 0x25:
          char v266 = 37;
          sub_1A3DC15F4();
          uint64_t v143 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v143;
          if (v143) {
            goto LABEL_119;
          }
          sub_1A3DC2EE4();
          uint64_t v145 = v225;
          uint64_t v146 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v146;
          if (v146)
          {
            (*(void (**)(char *, uint64_t))(v226 + 8))(v52, v145);
            goto LABEL_117;
          }
          (*(void (**)(char *, uint64_t))(v226 + 8))(v52, v145);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          char v62 = v266 | 0x28;
LABEL_128:
          char v61 = 1;
          goto LABEL_129;
        default:
          char v266 = 0;
          sub_1A3DC2E3C();
          uint64_t v53 = v149;
          uint64_t v56 = v265;
          sub_1A4096C7C();
          uint64_t v265 = v56;
          if (v56) {
            goto LABEL_119;
          }
          sub_1A3DC3B08();
          uint64_t v57 = v148;
          uint64_t v58 = v265;
          sub_1A4096CFC();
          uint64_t v59 = v151;
          uint64_t v265 = v58;
          uint64_t v60 = &v184;
          if (v58)
          {
LABEL_115:
            uint64_t v79 = *(void (**)(char *, uint64_t))(*(v60 - 32) + 8);
            uint64_t v80 = v53;
LABEL_116:
            v79(v80, v57);
LABEL_117:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v152 + 8))(v53, v57);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v44);
            char v61 = 0;
            char v62 = v266;
LABEL_129:
            *unsigned int v54 = v62;
            v54[1] = v61;
          }
          break;
      }
    }
    else
    {
      uint64_t v63 = sub_1A4096ABC();
      uint64_t v64 = swift_allocError();
      uint64_t v66 = v65;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v66 = &type metadata for RequestDescriptor;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v63 - 8) + 104))(v66, *MEMORY[0x1E4FBBA70], v63);
      uint64_t v265 = v64;
      swift_willThrow();
LABEL_119:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v151 + 8))(v47, v44);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v264);
}

uint64_t sub_1A3DBF6C0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return RequestDescriptor.init(from:)(a1, a2);
}

uint64_t sub_1A3DBF6D8(void *a1)
{
  return RequestDescriptor.encode(to:)(a1);
}

uint64_t sub_1A3DBF6F0()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DBF748()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DBF798()
{
  uint64_t result = 0;
  if (v0[1]) {
    int v2 = 32;
  }
  else {
    int v2 = 0;
  }
  switch(v2 | (*v0 >> 3))
  {
    case 0:
      uint64_t result = sub_1A3D5F588();
      break;
    case 1:
      uint64_t result = sub_1A3D61D80();
      break;
    case 2:
    case 0x12:
    case 0x13:
    case 0x15:
    case 0x1B:
      uint64_t result = sub_1A3CEEF54();
      break;
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 0xB:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x14:
    case 0x16:
    case 0x17:
    case 0x1A:
    case 0x1C:
    case 0x1D:
    case 0x1E:
      uint64_t result = sub_1A3C8BDD8();
      break;
    case 6:
      uint64_t result = sub_1A3DD41F0();
      break;
    case 9:
    case 0xA:
    case 0x19:
      uint64_t result = sub_1A3CFD91C();
      break;
    case 0xC:
      uint64_t result = sub_1A3DE8D90();
      break;
    case 0x18:
      uint64_t result = sub_1A3DCB204();
      break;
    case 0x25:
      uint64_t result = sub_1A3D36FD4();
      break;
    default:
      return result;
  }
  return result;
}

id sub_1A3DBF9C8()
{
  uint64_t v0 = sub_1A3DB78FC();
  uint64_t v2 = sub_1A3D38830(v0, v1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (!v4) {
    return 0;
  }
  uint64_t v5 = sub_1A3DBF798();
  if (v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v5;
  }
  sub_1A3DC3B5C();
  return sub_1A3DBFA7C(v2, v4, v7);
}

id sub_1A3DBFA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_specifierForRequestClassName_revision_error_, v4, a3, v9);

  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_1A4095AEC();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_1A3DBFB64@<X0>(__int16 *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_requestClassName);
  uint64_t v5 = sub_1A409617C();
  uint64_t v7 = v6;

  if (v5 == 0xD00000000000001DLL && v7 == 0x80000001A40B75A0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A3D5F76C((uint64_t)objc_msgSend(v2, sel_requestRevision), &v12);
    __int16 v9 = v12;
    if (v12 != 5)
    {
LABEL_6:
      *a1 = v9;
      return result;
    }
LABEL_5:
    __int16 v9 = -8;
    goto LABEL_6;
  }
  if (v5 == 0xD000000000000021 && v7 == 0x80000001A40B75C0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A3CFD928((uint64_t)objc_msgSend(v2, sel_requestRevision), (BOOL *)&v12);
    if ((v12 & 1) == 0)
    {
      __int16 v9 = 72;
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (v5 == 0xD00000000000001CLL && v7 == 0x80000001A40B75F0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  char v10 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_16:
    uint64_t result = sub_1A3CFD928((uint64_t)objc_msgSend(v2, sel_requestRevision), (BOOL *)&v12);
    if ((v12 & 1) == 0)
    {
      __int16 v9 = 80;
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  sub_1A4096A2C();
  id v11 = objc_msgSend(v2, sel_requestClassName);
  sub_1A409617C();
  swift_bridgeObjectRelease();

  sub_1A409621C();
  uint64_t result = sub_1A4096BEC();
  __break(1u);
  return result;
}

uint64_t sub_1A3DBFDEC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A40961FC();
    return sub_1A409626C();
  }
  return result;
}

unint64_t sub_1A3DBFE88()
{
  unint64_t result = qword_1E95EF8C0;
  if (!qword_1E95EF8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF8C0);
  }
  return result;
}

unint64_t sub_1A3DBFEDC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t result = sub_1A40961FC();
  if (v6) {
    unint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_1A409626C();
}

unint64_t sub_1A3DBFF8C()
{
  unint64_t result = qword_1E95EF8C8;
  if (!qword_1E95EF8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF8C8);
  }
  return result;
}

uint64_t _s6Vision17RequestDescriptorO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (a1[1]) {
    int v4 = 32;
  }
  else {
    int v4 = 0;
  }
  switch(v4 | (v2 >> 3))
  {
    case 1u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v7 = 32;
      }
      else {
        int v7 = 0;
      }
      if ((v7 | (v3 >> 3)) == 1)
      {
        unsigned __int8 v48 = v2 & 7;
        unsigned __int8 v47 = v3 & 7;
        BOOL v5 = static DetectHumanRectanglesRequest.Revision.== infix(_:_:)(&v48, &v47);
      }
      goto LABEL_263;
    case 2u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v8 = 32;
      }
      else {
        int v8 = 0;
      }
      if ((v8 | (v3 >> 3)) != 2) {
        goto LABEL_263;
      }
      uint64_t result = static ClassifyImageRequest.Revision.== infix(_:_:)();
      break;
    case 3u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v10 = 32;
      }
      else {
        int v10 = 0;
      }
      if ((v10 | (v3 >> 3)) != 3) {
        goto LABEL_263;
      }
      uint64_t result = static CalculateImageAestheticsScoresRequest.Revision.== infix(_:_:)();
      break;
    case 4u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v11 = 32;
      }
      else {
        int v11 = 0;
      }
      if ((v11 | (v3 >> 3)) != 4) {
        goto LABEL_263;
      }
      uint64_t result = static CoreMLRequest.Revision.== infix(_:_:)();
      break;
    case 5u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v12 = 32;
      }
      else {
        int v12 = 0;
      }
      if ((v12 | (v3 >> 3)) != 5) {
        goto LABEL_263;
      }
      uint64_t result = static DetectAnimalBodyPoseRequest.Revision.== infix(_:_:)();
      break;
    case 6u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v13 = 32;
      }
      else {
        int v13 = 0;
      }
      if ((v13 | (v3 >> 3)) != 6) {
        goto LABEL_263;
      }
      uint64_t result = static DetectBarcodesRequest.Revision.== infix(_:_:)();
      break;
    case 7u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v14 = 32;
      }
      else {
        int v14 = 0;
      }
      if ((v14 | (v3 >> 3)) != 7) {
        goto LABEL_263;
      }
      uint64_t result = static DetectContoursRequest.Revision.== infix(_:_:)();
      break;
    case 8u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v15 = 32;
      }
      else {
        int v15 = 0;
      }
      if ((v15 | (v3 >> 3)) != 8) {
        goto LABEL_263;
      }
      uint64_t result = static DetectDocumentSegmentationRequest.Revision.== infix(_:_:)();
      break;
    case 9u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v16 = 32;
      }
      else {
        int v16 = 0;
      }
      if ((v16 | (v3 >> 3)) != 9) {
        goto LABEL_263;
      }
      uint64_t result = static DetectFaceCaptureQualityRequest.Revision.== infix(_:_:)();
      break;
    case 0xAu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v17 = 32;
      }
      else {
        int v17 = 0;
      }
      if ((v17 | (v3 >> 3)) != 0xA) {
        goto LABEL_263;
      }
      uint64_t result = static DetectFaceLandmarksRequest.Revision.== infix(_:_:)();
      break;
    case 0xBu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v18 = 32;
      }
      else {
        int v18 = 0;
      }
      if ((v18 | (v3 >> 3)) != 0xB) {
        goto LABEL_263;
      }
      uint64_t result = static DetectHorizonRequest.Revision.== infix(_:_:)();
      break;
    case 0xCu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v19 = 32;
      }
      else {
        int v19 = 0;
      }
      if ((v19 | (v3 >> 3)) != 0xC) {
        goto LABEL_263;
      }
      uint64_t result = static DetectHumanBodyPoseRequest.Revision.== infix(_:_:)();
      break;
    case 0xDu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v20 = 32;
      }
      else {
        int v20 = 0;
      }
      if ((v20 | (v3 >> 3)) != 0xD) {
        goto LABEL_263;
      }
      uint64_t result = static DetectHumanBodyPose3DRequest.Revision.== infix(_:_:)();
      break;
    case 0xEu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v21 = 32;
      }
      else {
        int v21 = 0;
      }
      if ((v21 | (v3 >> 3)) != 0xE) {
        goto LABEL_263;
      }
      uint64_t result = static DetectHumanHandPoseRequest.Revision.== infix(_:_:)();
      break;
    case 0xFu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v22 = 32;
      }
      else {
        int v22 = 0;
      }
      if ((v22 | (v3 >> 3)) != 0xF) {
        goto LABEL_263;
      }
      uint64_t result = static DetectRectanglesRequest.Revision.== infix(_:_:)();
      break;
    case 0x10u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v23 = 32;
      }
      else {
        int v23 = 0;
      }
      if ((v23 | (v3 >> 3)) != 0x10) {
        goto LABEL_263;
      }
      uint64_t result = static DetectTextRectanglesRequest.Revision.== infix(_:_:)();
      break;
    case 0x11u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v24 = 32;
      }
      else {
        int v24 = 0;
      }
      if ((v24 | (v3 >> 3)) != 0x11) {
        goto LABEL_263;
      }
      uint64_t result = static DetectTrajectoriesRequest.Revision.== infix(_:_:)();
      break;
    case 0x12u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v25 = 32;
      }
      else {
        int v25 = 0;
      }
      if ((v25 | (v3 >> 3)) != 0x12) {
        goto LABEL_263;
      }
      uint64_t result = static GenerateAttentionBasedSaliencyImageRequest.Revision.== infix(_:_:)();
      break;
    case 0x13u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v26 = 32;
      }
      else {
        int v26 = 0;
      }
      if ((v26 | (v3 >> 3)) != 0x13) {
        goto LABEL_263;
      }
      uint64_t result = static GenerateImageFeaturePrintRequest.Revision.== infix(_:_:)();
      break;
    case 0x14u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v27 = 32;
      }
      else {
        int v27 = 0;
      }
      if ((v27 | (v3 >> 3)) != 0x14) {
        goto LABEL_263;
      }
      uint64_t result = static GenerateForegroundInstanceMaskRequest.Revision.== infix(_:_:)();
      break;
    case 0x15u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v28 = 32;
      }
      else {
        int v28 = 0;
      }
      if ((v28 | (v3 >> 3)) != 0x15) {
        goto LABEL_263;
      }
      uint64_t result = static GenerateObjectnessBasedSaliencyImageRequest.Revision.== infix(_:_:)();
      break;
    case 0x16u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v29 = 32;
      }
      else {
        int v29 = 0;
      }
      if ((v29 | (v3 >> 3)) != 0x16) {
        goto LABEL_263;
      }
      uint64_t result = static GeneratePersonSegmentationRequest.Revision.== infix(_:_:)();
      break;
    case 0x17u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v30 = 32;
      }
      else {
        int v30 = 0;
      }
      if ((v30 | (v3 >> 3)) != 0x17) {
        goto LABEL_263;
      }
      uint64_t result = static GeneratePersonInstanceMaskRequest.Revision.== infix(_:_:)();
      break;
    case 0x18u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v31 = 32;
      }
      else {
        int v31 = 0;
      }
      if ((v31 | (v3 >> 3)) == 0x18)
      {
        unsigned __int8 v50 = v2 & 1;
        unsigned __int8 v49 = v3 & 1;
        BOOL v5 = static RecognizeAnimalsRequest.Revision.== infix(_:_:)(&v50, &v49);
      }
      goto LABEL_263;
    case 0x19u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v32 = 32;
      }
      else {
        int v32 = 0;
      }
      if ((v32 | (v3 >> 3)) != 0x19) {
        goto LABEL_263;
      }
      uint64_t result = static RecognizeTextRequest.Revision.== infix(_:_:)();
      break;
    case 0x1Au:
      BOOL v5 = 0;
      if (a2[1]) {
        int v33 = 32;
      }
      else {
        int v33 = 0;
      }
      if ((v33 | (v3 >> 3)) != 0x1A) {
        goto LABEL_263;
      }
      uint64_t result = static TrackHomographicImageRegistrationRequest.Revision.== infix(_:_:)();
      break;
    case 0x1Bu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v34 = 32;
      }
      else {
        int v34 = 0;
      }
      if ((v34 | (v3 >> 3)) != 0x1B) {
        goto LABEL_263;
      }
      uint64_t result = static TrackObjectRequest.Revision.== infix(_:_:)();
      break;
    case 0x1Cu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v35 = 32;
      }
      else {
        int v35 = 0;
      }
      if ((v35 | (v3 >> 3)) != 0x1C) {
        goto LABEL_263;
      }
      uint64_t result = static TrackOpticalFlowRequest.Revision.== infix(_:_:)();
      break;
    case 0x1Du:
      BOOL v5 = 0;
      if (a2[1]) {
        int v36 = 32;
      }
      else {
        int v36 = 0;
      }
      if ((v36 | (v3 >> 3)) != 0x1D) {
        goto LABEL_263;
      }
      uint64_t result = static TrackRectangleRequest.Revision.== infix(_:_:)();
      break;
    case 0x1Eu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v37 = 32;
      }
      else {
        int v37 = 0;
      }
      if ((v37 | (v3 >> 3)) != 0x1E) {
        goto LABEL_263;
      }
      uint64_t result = static TrackTranslationalImageRegistrationRequest.Revision.== infix(_:_:)();
      break;
    case 0x1Fu:
      BOOL v5 = 0;
      if (a2[1]) {
        int v38 = 32;
      }
      else {
        int v38 = 0;
      }
      if ((v38 | (v3 >> 3)) != 0x1F) {
        goto LABEL_263;
      }
      uint64_t result = static DetectScreenGazeRequest.Revision.== infix(_:_:)();
      break;
    case 0x20u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v39 = 32;
      }
      else {
        int v39 = 0;
      }
      if ((v39 | (v3 >> 3)) != 0x20) {
        goto LABEL_263;
      }
      uint64_t result = static DetectDeviceGazeRequest.Revision.== infix(_:_:)();
      break;
    case 0x21u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v40 = 32;
      }
      else {
        int v40 = 0;
      }
      if ((v40 | (v3 >> 3)) != 0x21) {
        goto LABEL_263;
      }
      uint64_t result = static DetectCameraGazeRequest.Revision.== infix(_:_:)();
      break;
    case 0x22u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v41 = 32;
      }
      else {
        int v41 = 0;
      }
      if ((v41 | (v3 >> 3)) != 0x22) {
        goto LABEL_263;
      }
      uint64_t result = static GenerateFacePrintRequest.Revision.== infix(_:_:)();
      break;
    case 0x23u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v42 = 32;
      }
      else {
        int v42 = 0;
      }
      if ((v42 | (v3 >> 3)) != 0x23) {
        goto LABEL_263;
      }
      uint64_t result = static GenerateTorsoPrintRequest.Revision.== infix(_:_:)();
      break;
    case 0x24u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v43 = 32;
      }
      else {
        int v43 = 0;
      }
      if ((v43 | (v3 >> 3)) != 0x24) {
        goto LABEL_263;
      }
      uint64_t result = static CalculateFaceLivelinessScoreRequest.Revision.== infix(_:_:)();
      break;
    case 0x25u:
      BOOL v5 = 0;
      if (a2[1]) {
        int v44 = 32;
      }
      else {
        int v44 = 0;
      }
      if ((v44 | (v3 >> 3)) == 0x25)
      {
        unsigned __int8 v52 = v2 & 7;
        unsigned __int8 v51 = v3 & 7;
        BOOL v5 = static DetectHumanHeadRectanglesRequest.Revision.== infix(_:_:)(&v52, &v51);
      }
      goto LABEL_263;
    default:
      BOOL v5 = 0;
      if (a2[1]) {
        int v6 = 32;
      }
      else {
        int v6 = 0;
      }
      if (!(v6 | (v3 >> 3)))
      {
        unsigned __int8 v46 = v2;
        unsigned __int8 v45 = v3;
        BOOL v5 = static DetectFaceRectanglesRequest.Revision.== infix(_:_:)(&v46, &v45);
      }
LABEL_263:
      uint64_t result = v5;
      break;
  }
  return result;
}

unint64_t sub_1A3DC0928()
{
  unint64_t result = qword_1E95EF8D0;
  if (!qword_1E95EF8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF8D0);
  }
  return result;
}

unint64_t sub_1A3DC097C()
{
  unint64_t result = qword_1E95EF8D8;
  if (!qword_1E95EF8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF8D8);
  }
  return result;
}

unint64_t sub_1A3DC09D0()
{
  unint64_t result = qword_1E95EF8E0;
  if (!qword_1E95EF8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF8E0);
  }
  return result;
}

unint64_t sub_1A3DC0A24()
{
  unint64_t result = qword_1E95EF8E8;
  if (!qword_1E95EF8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF8E8);
  }
  return result;
}

unint64_t sub_1A3DC0A78()
{
  unint64_t result = qword_1E95EF8F0;
  if (!qword_1E95EF8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF8F0);
  }
  return result;
}

unint64_t sub_1A3DC0ACC()
{
  unint64_t result = qword_1E95EF8F8;
  if (!qword_1E95EF8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF8F8);
  }
  return result;
}

unint64_t sub_1A3DC0B20()
{
  unint64_t result = qword_1E95EF900;
  if (!qword_1E95EF900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF900);
  }
  return result;
}

unint64_t sub_1A3DC0B74()
{
  unint64_t result = qword_1E95EF908;
  if (!qword_1E95EF908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF908);
  }
  return result;
}

unint64_t sub_1A3DC0BC8()
{
  unint64_t result = qword_1E95EF910;
  if (!qword_1E95EF910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF910);
  }
  return result;
}

unint64_t sub_1A3DC0C1C()
{
  unint64_t result = qword_1E95EF918;
  if (!qword_1E95EF918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF918);
  }
  return result;
}

unint64_t sub_1A3DC0C70()
{
  unint64_t result = qword_1E95EF920;
  if (!qword_1E95EF920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF920);
  }
  return result;
}

unint64_t sub_1A3DC0CC4()
{
  unint64_t result = qword_1E95EF928;
  if (!qword_1E95EF928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF928);
  }
  return result;
}

unint64_t sub_1A3DC0D18()
{
  unint64_t result = qword_1E95EF930;
  if (!qword_1E95EF930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF930);
  }
  return result;
}

unint64_t sub_1A3DC0D6C()
{
  unint64_t result = qword_1E95EF938;
  if (!qword_1E95EF938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF938);
  }
  return result;
}

unint64_t sub_1A3DC0DC0()
{
  unint64_t result = qword_1E95EF940;
  if (!qword_1E95EF940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF940);
  }
  return result;
}

unint64_t sub_1A3DC0E14()
{
  unint64_t result = qword_1E95EF948;
  if (!qword_1E95EF948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF948);
  }
  return result;
}

unint64_t sub_1A3DC0E68()
{
  unint64_t result = qword_1E95EF950;
  if (!qword_1E95EF950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF950);
  }
  return result;
}

unint64_t sub_1A3DC0EBC()
{
  unint64_t result = qword_1E95EF958;
  if (!qword_1E95EF958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF958);
  }
  return result;
}

unint64_t sub_1A3DC0F10()
{
  unint64_t result = qword_1E95EF960;
  if (!qword_1E95EF960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF960);
  }
  return result;
}

unint64_t sub_1A3DC0F64()
{
  unint64_t result = qword_1E95EF968;
  if (!qword_1E95EF968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF968);
  }
  return result;
}

unint64_t sub_1A3DC0FB8()
{
  unint64_t result = qword_1E95EF970;
  if (!qword_1E95EF970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF970);
  }
  return result;
}

unint64_t sub_1A3DC100C()
{
  unint64_t result = qword_1E95EF978;
  if (!qword_1E95EF978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF978);
  }
  return result;
}

unint64_t sub_1A3DC1060()
{
  unint64_t result = qword_1E95EF980;
  if (!qword_1E95EF980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF980);
  }
  return result;
}

unint64_t sub_1A3DC10B4()
{
  unint64_t result = qword_1E95EF988;
  if (!qword_1E95EF988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF988);
  }
  return result;
}

unint64_t sub_1A3DC1108()
{
  unint64_t result = qword_1E95EF990;
  if (!qword_1E95EF990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF990);
  }
  return result;
}

unint64_t sub_1A3DC115C()
{
  unint64_t result = qword_1E95EF998;
  if (!qword_1E95EF998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF998);
  }
  return result;
}

unint64_t sub_1A3DC11B0()
{
  unint64_t result = qword_1E95EF9A0;
  if (!qword_1E95EF9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9A0);
  }
  return result;
}

unint64_t sub_1A3DC1204()
{
  unint64_t result = qword_1E95EF9A8;
  if (!qword_1E95EF9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9A8);
  }
  return result;
}

unint64_t sub_1A3DC1258()
{
  unint64_t result = qword_1E95EF9B0;
  if (!qword_1E95EF9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9B0);
  }
  return result;
}

unint64_t sub_1A3DC12AC()
{
  unint64_t result = qword_1E95EF9B8;
  if (!qword_1E95EF9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9B8);
  }
  return result;
}

unint64_t sub_1A3DC1300()
{
  unint64_t result = qword_1E95EF9C0;
  if (!qword_1E95EF9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9C0);
  }
  return result;
}

unint64_t sub_1A3DC1354()
{
  unint64_t result = qword_1E95EF9C8;
  if (!qword_1E95EF9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9C8);
  }
  return result;
}

unint64_t sub_1A3DC13A8()
{
  unint64_t result = qword_1E95EF9D0;
  if (!qword_1E95EF9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9D0);
  }
  return result;
}

unint64_t sub_1A3DC13FC()
{
  unint64_t result = qword_1E95EF9D8;
  if (!qword_1E95EF9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9D8);
  }
  return result;
}

unint64_t sub_1A3DC1450()
{
  unint64_t result = qword_1E95EF9E0;
  if (!qword_1E95EF9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9E0);
  }
  return result;
}

unint64_t sub_1A3DC14A4()
{
  unint64_t result = qword_1E95EF9E8;
  if (!qword_1E95EF9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9E8);
  }
  return result;
}

unint64_t sub_1A3DC14F8()
{
  unint64_t result = qword_1E95EF9F0;
  if (!qword_1E95EF9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9F0);
  }
  return result;
}

unint64_t sub_1A3DC154C()
{
  unint64_t result = qword_1E95EF9F8;
  if (!qword_1E95EF9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EF9F8);
  }
  return result;
}

unint64_t sub_1A3DC15A0()
{
  unint64_t result = qword_1E96231B0;
  if (!qword_1E96231B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231B0);
  }
  return result;
}

unint64_t sub_1A3DC15F4()
{
  unint64_t result = qword_1E96231B8;
  if (!qword_1E96231B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231B8);
  }
  return result;
}

unint64_t sub_1A3DC1648()
{
  unint64_t result = qword_1E95EFB38;
  if (!qword_1E95EFB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB38);
  }
  return result;
}

unint64_t sub_1A3DC169C()
{
  unint64_t result = qword_1E96231C0;
  if (!qword_1E96231C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231C0);
  }
  return result;
}

unint64_t sub_1A3DC16F0()
{
  unint64_t result = qword_1E95EFB40;
  if (!qword_1E95EFB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB40);
  }
  return result;
}

unint64_t sub_1A3DC1744()
{
  unint64_t result = qword_1E96231C8;
  if (!qword_1E96231C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231C8);
  }
  return result;
}

unint64_t sub_1A3DC1798()
{
  unint64_t result = qword_1E95EFB48;
  if (!qword_1E95EFB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB48);
  }
  return result;
}

unint64_t sub_1A3DC17EC()
{
  unint64_t result = qword_1E96231D0;
  if (!qword_1E96231D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231D0);
  }
  return result;
}

unint64_t sub_1A3DC1840()
{
  unint64_t result = qword_1E95EFB50;
  if (!qword_1E95EFB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB50);
  }
  return result;
}

unint64_t sub_1A3DC1894()
{
  unint64_t result = qword_1E96231D8;
  if (!qword_1E96231D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231D8);
  }
  return result;
}

unint64_t sub_1A3DC18E8()
{
  unint64_t result = qword_1E95EFB58;
  if (!qword_1E95EFB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB58);
  }
  return result;
}

unint64_t sub_1A3DC193C()
{
  unint64_t result = qword_1E96231E0;
  if (!qword_1E96231E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231E0);
  }
  return result;
}

unint64_t sub_1A3DC1990()
{
  unint64_t result = qword_1E95EFB60;
  if (!qword_1E95EFB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB60);
  }
  return result;
}

unint64_t sub_1A3DC19E4()
{
  unint64_t result = qword_1E96231E8;
  if (!qword_1E96231E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231E8);
  }
  return result;
}

unint64_t sub_1A3DC1A38()
{
  unint64_t result = qword_1E95EFB68;
  if (!qword_1E95EFB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB68);
  }
  return result;
}

unint64_t sub_1A3DC1A8C()
{
  unint64_t result = qword_1E96231F0;
  if (!qword_1E96231F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231F0);
  }
  return result;
}

unint64_t sub_1A3DC1AE0()
{
  unint64_t result = qword_1E95EFB70;
  if (!qword_1E95EFB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB70);
  }
  return result;
}

unint64_t sub_1A3DC1B34()
{
  unint64_t result = qword_1E96231F8;
  if (!qword_1E96231F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96231F8);
  }
  return result;
}

unint64_t sub_1A3DC1B88()
{
  unint64_t result = qword_1E95EFB78;
  if (!qword_1E95EFB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB78);
  }
  return result;
}

unint64_t sub_1A3DC1BDC()
{
  unint64_t result = qword_1E9623200;
  if (!qword_1E9623200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623200);
  }
  return result;
}

unint64_t sub_1A3DC1C30()
{
  unint64_t result = qword_1E95EFB80;
  if (!qword_1E95EFB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB80);
  }
  return result;
}

unint64_t sub_1A3DC1C84()
{
  unint64_t result = qword_1E9623208;
  if (!qword_1E9623208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623208);
  }
  return result;
}

unint64_t sub_1A3DC1CD8()
{
  unint64_t result = qword_1E95EFB88;
  if (!qword_1E95EFB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB88);
  }
  return result;
}

unint64_t sub_1A3DC1D2C()
{
  unint64_t result = qword_1E9623210;
  if (!qword_1E9623210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623210);
  }
  return result;
}

unint64_t sub_1A3DC1D80()
{
  unint64_t result = qword_1E95EFB90;
  if (!qword_1E95EFB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB90);
  }
  return result;
}

unint64_t sub_1A3DC1DD4()
{
  unint64_t result = qword_1E9623218;
  if (!qword_1E9623218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623218);
  }
  return result;
}

unint64_t sub_1A3DC1E28()
{
  unint64_t result = qword_1E95EFB98;
  if (!qword_1E95EFB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFB98);
  }
  return result;
}

unint64_t sub_1A3DC1E7C()
{
  unint64_t result = qword_1E9623220;
  if (!qword_1E9623220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623220);
  }
  return result;
}

unint64_t sub_1A3DC1ED0()
{
  unint64_t result = qword_1E95EFBA0;
  if (!qword_1E95EFBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBA0);
  }
  return result;
}

unint64_t sub_1A3DC1F24()
{
  unint64_t result = qword_1E9623228;
  if (!qword_1E9623228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623228);
  }
  return result;
}

unint64_t sub_1A3DC1F78()
{
  unint64_t result = qword_1E95EFBA8;
  if (!qword_1E95EFBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBA8);
  }
  return result;
}

unint64_t sub_1A3DC1FCC()
{
  unint64_t result = qword_1E9623230;
  if (!qword_1E9623230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623230);
  }
  return result;
}

unint64_t sub_1A3DC2020()
{
  unint64_t result = qword_1E95EFBB0;
  if (!qword_1E95EFBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBB0);
  }
  return result;
}

unint64_t sub_1A3DC2074()
{
  unint64_t result = qword_1E9623238;
  if (!qword_1E9623238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623238);
  }
  return result;
}

unint64_t sub_1A3DC20C8()
{
  unint64_t result = qword_1E95EFBB8;
  if (!qword_1E95EFBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBB8);
  }
  return result;
}

unint64_t sub_1A3DC211C()
{
  unint64_t result = qword_1E9623240;
  if (!qword_1E9623240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623240);
  }
  return result;
}

unint64_t sub_1A3DC2170()
{
  unint64_t result = qword_1E95EFBC0;
  if (!qword_1E95EFBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBC0);
  }
  return result;
}

unint64_t sub_1A3DC21C4()
{
  unint64_t result = qword_1E9623248;
  if (!qword_1E9623248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623248);
  }
  return result;
}

unint64_t sub_1A3DC2218()
{
  unint64_t result = qword_1E95EFBC8;
  if (!qword_1E95EFBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBC8);
  }
  return result;
}

unint64_t sub_1A3DC226C()
{
  unint64_t result = qword_1E9623250;
  if (!qword_1E9623250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623250);
  }
  return result;
}

unint64_t sub_1A3DC22C0()
{
  unint64_t result = qword_1E95EFBD0;
  if (!qword_1E95EFBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBD0);
  }
  return result;
}

unint64_t sub_1A3DC2314()
{
  unint64_t result = qword_1E9623258;
  if (!qword_1E9623258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623258);
  }
  return result;
}

unint64_t sub_1A3DC2368()
{
  unint64_t result = qword_1E95EFBD8;
  if (!qword_1E95EFBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBD8);
  }
  return result;
}

unint64_t sub_1A3DC23BC()
{
  unint64_t result = qword_1E9623260;
  if (!qword_1E9623260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623260);
  }
  return result;
}

unint64_t sub_1A3DC2410()
{
  unint64_t result = qword_1E95EFBE0;
  if (!qword_1E95EFBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBE0);
  }
  return result;
}

unint64_t sub_1A3DC2464()
{
  unint64_t result = qword_1E9623268;
  if (!qword_1E9623268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623268);
  }
  return result;
}

unint64_t sub_1A3DC24B8()
{
  unint64_t result = qword_1E95EFBE8;
  if (!qword_1E95EFBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBE8);
  }
  return result;
}

unint64_t sub_1A3DC250C()
{
  unint64_t result = qword_1E9623270;
  if (!qword_1E9623270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623270);
  }
  return result;
}

unint64_t sub_1A3DC2560()
{
  unint64_t result = qword_1E95EFBF0;
  if (!qword_1E95EFBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBF0);
  }
  return result;
}

unint64_t sub_1A3DC25B4()
{
  unint64_t result = qword_1E9623278;
  if (!qword_1E9623278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623278);
  }
  return result;
}

unint64_t sub_1A3DC2608()
{
  unint64_t result = qword_1E95EFBF8;
  if (!qword_1E95EFBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFBF8);
  }
  return result;
}

unint64_t sub_1A3DC265C()
{
  unint64_t result = qword_1E9623280;
  if (!qword_1E9623280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623280);
  }
  return result;
}

unint64_t sub_1A3DC26B0()
{
  unint64_t result = qword_1E95EFC00;
  if (!qword_1E95EFC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC00);
  }
  return result;
}

unint64_t sub_1A3DC2704()
{
  unint64_t result = qword_1E9623288;
  if (!qword_1E9623288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623288);
  }
  return result;
}

unint64_t sub_1A3DC2758()
{
  unint64_t result = qword_1E95EFC08;
  if (!qword_1E95EFC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC08);
  }
  return result;
}

unint64_t sub_1A3DC27AC()
{
  unint64_t result = qword_1E9623290;
  if (!qword_1E9623290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623290);
  }
  return result;
}

unint64_t sub_1A3DC2800()
{
  unint64_t result = qword_1E95EFC10;
  if (!qword_1E95EFC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC10);
  }
  return result;
}

unint64_t sub_1A3DC2854()
{
  unint64_t result = qword_1E9623298;
  if (!qword_1E9623298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9623298);
  }
  return result;
}

unint64_t sub_1A3DC28A8()
{
  unint64_t result = qword_1E95EFC18;
  if (!qword_1E95EFC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC18);
  }
  return result;
}

unint64_t sub_1A3DC28FC()
{
  unint64_t result = qword_1E96232A0;
  if (!qword_1E96232A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96232A0);
  }
  return result;
}

unint64_t sub_1A3DC2950()
{
  unint64_t result = qword_1E95EFC20;
  if (!qword_1E95EFC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC20);
  }
  return result;
}

unint64_t sub_1A3DC29A4()
{
  unint64_t result = qword_1E96232A8;
  if (!qword_1E96232A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96232A8);
  }
  return result;
}

unint64_t sub_1A3DC29F8()
{
  unint64_t result = qword_1E95EFC28;
  if (!qword_1E95EFC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC28);
  }
  return result;
}

unint64_t sub_1A3DC2A4C()
{
  unint64_t result = qword_1E96232B0;
  if (!qword_1E96232B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96232B0);
  }
  return result;
}

unint64_t sub_1A3DC2AA0()
{
  unint64_t result = qword_1E95EFC30;
  if (!qword_1E95EFC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC30);
  }
  return result;
}

unint64_t sub_1A3DC2AF4()
{
  unint64_t result = qword_1E96232B8;
  if (!qword_1E96232B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96232B8);
  }
  return result;
}

unint64_t sub_1A3DC2B48()
{
  unint64_t result = qword_1E95EFC38;
  if (!qword_1E95EFC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC38);
  }
  return result;
}

unint64_t sub_1A3DC2B9C()
{
  unint64_t result = qword_1E96232C0;
  if (!qword_1E96232C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96232C0);
  }
  return result;
}

unint64_t sub_1A3DC2BF0()
{
  unint64_t result = qword_1E95EFC40;
  if (!qword_1E95EFC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC40);
  }
  return result;
}

unint64_t sub_1A3DC2C44()
{
  unint64_t result = qword_1E96232C8;
  if (!qword_1E96232C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96232C8);
  }
  return result;
}

unint64_t sub_1A3DC2C98()
{
  unint64_t result = qword_1E95EFC48;
  if (!qword_1E95EFC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC48);
  }
  return result;
}

unint64_t sub_1A3DC2CEC()
{
  unint64_t result = qword_1E96232D0;
  if (!qword_1E96232D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96232D0);
  }
  return result;
}

unint64_t sub_1A3DC2D40()
{
  unint64_t result = qword_1E95EFC50;
  if (!qword_1E95EFC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC50);
  }
  return result;
}

unint64_t sub_1A3DC2D94()
{
  unint64_t result = qword_1E96232D8;
  if (!qword_1E96232D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96232D8);
  }
  return result;
}

unint64_t sub_1A3DC2DE8()
{
  unint64_t result = qword_1E95EFC58;
  if (!qword_1E95EFC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC58);
  }
  return result;
}

unint64_t sub_1A3DC2E3C()
{
  unint64_t result = qword_1E96232E0[0];
  if (!qword_1E96232E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96232E0);
  }
  return result;
}

unint64_t sub_1A3DC2E90()
{
  unint64_t result = qword_1E95EFC60;
  if (!qword_1E95EFC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFC60);
  }
  return result;
}

unint64_t sub_1A3DC2EE4()
{
  unint64_t result = qword_1E95EFDA0;
  if (!qword_1E95EFDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDA0);
  }
  return result;
}

unint64_t sub_1A3DC2F38()
{
  unint64_t result = qword_1E95EFDA8;
  if (!qword_1E95EFDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDA8);
  }
  return result;
}

unint64_t sub_1A3DC2F8C()
{
  unint64_t result = qword_1E95EFDB0;
  if (!qword_1E95EFDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDB0);
  }
  return result;
}

unint64_t sub_1A3DC2FE0()
{
  unint64_t result = qword_1E95EFDB8;
  if (!qword_1E95EFDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDB8);
  }
  return result;
}

unint64_t sub_1A3DC3034()
{
  unint64_t result = qword_1E95EFDC0;
  if (!qword_1E95EFDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDC0);
  }
  return result;
}

unint64_t sub_1A3DC3088()
{
  unint64_t result = qword_1E95EFDC8;
  if (!qword_1E95EFDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDC8);
  }
  return result;
}

unint64_t sub_1A3DC30DC()
{
  unint64_t result = qword_1E95EFDD0;
  if (!qword_1E95EFDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDD0);
  }
  return result;
}

unint64_t sub_1A3DC3130()
{
  unint64_t result = qword_1E95EFDD8;
  if (!qword_1E95EFDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDD8);
  }
  return result;
}

unint64_t sub_1A3DC3184()
{
  unint64_t result = qword_1E95EFDE0;
  if (!qword_1E95EFDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDE0);
  }
  return result;
}

unint64_t sub_1A3DC31D8()
{
  unint64_t result = qword_1E95EFDE8;
  if (!qword_1E95EFDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDE8);
  }
  return result;
}

unint64_t sub_1A3DC322C()
{
  unint64_t result = qword_1E95EFDF0;
  if (!qword_1E95EFDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDF0);
  }
  return result;
}

unint64_t sub_1A3DC3280()
{
  unint64_t result = qword_1E95EFDF8;
  if (!qword_1E95EFDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFDF8);
  }
  return result;
}

unint64_t sub_1A3DC32D4()
{
  unint64_t result = qword_1E95EFE00;
  if (!qword_1E95EFE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE00);
  }
  return result;
}

unint64_t sub_1A3DC3328()
{
  unint64_t result = qword_1E95EFE08;
  if (!qword_1E95EFE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE08);
  }
  return result;
}

unint64_t sub_1A3DC337C()
{
  unint64_t result = qword_1E95EFE10;
  if (!qword_1E95EFE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE10);
  }
  return result;
}

unint64_t sub_1A3DC33D0()
{
  unint64_t result = qword_1E95EFE18;
  if (!qword_1E95EFE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE18);
  }
  return result;
}

unint64_t sub_1A3DC3424()
{
  unint64_t result = qword_1E95EFE20;
  if (!qword_1E95EFE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE20);
  }
  return result;
}

unint64_t sub_1A3DC3478()
{
  unint64_t result = qword_1E95EFE28;
  if (!qword_1E95EFE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE28);
  }
  return result;
}

unint64_t sub_1A3DC34CC()
{
  unint64_t result = qword_1E95EFE30;
  if (!qword_1E95EFE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE30);
  }
  return result;
}

unint64_t sub_1A3DC3520()
{
  unint64_t result = qword_1E95EFE38;
  if (!qword_1E95EFE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE38);
  }
  return result;
}

unint64_t sub_1A3DC3574()
{
  unint64_t result = qword_1E95EFE40;
  if (!qword_1E95EFE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE40);
  }
  return result;
}

unint64_t sub_1A3DC35C8()
{
  unint64_t result = qword_1E95EFE48;
  if (!qword_1E95EFE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE48);
  }
  return result;
}

unint64_t sub_1A3DC361C()
{
  unint64_t result = qword_1E95EFE50;
  if (!qword_1E95EFE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE50);
  }
  return result;
}

unint64_t sub_1A3DC3670()
{
  unint64_t result = qword_1E95EFE58;
  if (!qword_1E95EFE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE58);
  }
  return result;
}

unint64_t sub_1A3DC36C4()
{
  unint64_t result = qword_1E95EFE60;
  if (!qword_1E95EFE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE60);
  }
  return result;
}

unint64_t sub_1A3DC3718()
{
  unint64_t result = qword_1E95EFE68;
  if (!qword_1E95EFE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE68);
  }
  return result;
}

unint64_t sub_1A3DC376C()
{
  unint64_t result = qword_1E95EFE70;
  if (!qword_1E95EFE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE70);
  }
  return result;
}

unint64_t sub_1A3DC37C0()
{
  unint64_t result = qword_1E95EFE78;
  if (!qword_1E95EFE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE78);
  }
  return result;
}

unint64_t sub_1A3DC3814()
{
  unint64_t result = qword_1E95EFE80;
  if (!qword_1E95EFE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE80);
  }
  return result;
}

unint64_t sub_1A3DC3868()
{
  unint64_t result = qword_1E95EFE88;
  if (!qword_1E95EFE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE88);
  }
  return result;
}

unint64_t sub_1A3DC38BC()
{
  unint64_t result = qword_1E95EFE90;
  if (!qword_1E95EFE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE90);
  }
  return result;
}

unint64_t sub_1A3DC3910()
{
  unint64_t result = qword_1E95EFE98;
  if (!qword_1E95EFE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFE98);
  }
  return result;
}

unint64_t sub_1A3DC3964()
{
  unint64_t result = qword_1E95EFEA0;
  if (!qword_1E95EFEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFEA0);
  }
  return result;
}

unint64_t sub_1A3DC39B8()
{
  unint64_t result = qword_1E95EFEA8;
  if (!qword_1E95EFEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFEA8);
  }
  return result;
}

unint64_t sub_1A3DC3A0C()
{
  unint64_t result = qword_1E95EFEB0;
  if (!qword_1E95EFEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFEB0);
  }
  return result;
}

unint64_t sub_1A3DC3A60()
{
  unint64_t result = qword_1E95EFEB8;
  if (!qword_1E95EFEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFEB8);
  }
  return result;
}

unint64_t sub_1A3DC3AB4()
{
  unint64_t result = qword_1E95EFEC0;
  if (!qword_1E95EFEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFEC0);
  }
  return result;
}

unint64_t sub_1A3DC3B08()
{
  unint64_t result = qword_1E95EFEC8;
  if (!qword_1E95EFEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95EFEC8);
  }
  return result;
}

unint64_t sub_1A3DC3B5C()
{
  unint64_t result = qword_1E95EC718;
  if (!qword_1E95EC718)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95EC718);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RequestDescriptor(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1FDB) {
    goto LABEL_17;
  }
  if (a2 + 57381 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 57381 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 57381;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 57381;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 57381;
    }
  }
LABEL_17:
  unsigned int v6 = ((*(unsigned __int8 *)a1 >> 3) | (32 * *((unsigned __int8 *)a1 + 1))) ^ 0x1FFF;
  if (v6 >> 1 >= 0xFED) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for RequestDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 57381 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 57381 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1FDB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1FDA)
  {
    unsigned int v6 = ((a2 - 8155) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 8155;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DC3D3CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(_WORD *)unint64_t result = __PAIR16__((-8 * a2) >> 24, -8 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1A3DC3D64(unsigned __int8 *a1)
{
  if (a1[1]) {
    int v1 = 32;
  }
  else {
    int v1 = 0;
  }
  return v1 | (*a1 >> 3);
}

unsigned char *sub_1A3DC3D80(unsigned char *result)
{
  *result &= 7u;
  return result;
}

unsigned char *sub_1A3DC3D90(unsigned char *result, char a2)
{
  *unint64_t result = *result & 7 | (8 * a2);
  result[1] = (a2 & 0x20) != 0;
  return result;
}

ValueMetadata *type metadata accessor for RequestDescriptor()
{
  return &type metadata for RequestDescriptor;
}

uint64_t getEnumTagSinglePayload for RequestDescriptor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDB) {
    goto LABEL_17;
  }
  if (a2 + 37 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 37) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 37;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 37;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 37;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x26;
  int v8 = v6 - 38;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RequestDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 37 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 37) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDA)
  {
    unsigned int v6 = ((a2 - 219) >> 8) + 1;
    *unint64_t result = a2 + 37;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DC3F14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 37;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestDescriptor.CodingKeys()
{
  return &type metadata for RequestDescriptor.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectFaceRectanglesRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectFaceRectanglesRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectHumanRectanglesRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectHumanRectanglesRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.ClassifyImageRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.ClassifyImageRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.CalculateImageAestheticsScoresRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.CalculateImageAestheticsScoresRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.CoreMLRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.CoreMLRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectAnimalBodyPoseRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectAnimalBodyPoseRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectBarcodesRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectBarcodesRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectContoursRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectContoursRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectDocumentSegmentationRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectDocumentSegmentationRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectFaceCaptureQualityRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectFaceCaptureQualityRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectFaceLandmarksRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectFaceLandmarksRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectHorizonRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectHorizonRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectHumanBodyPoseRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectHumanBodyPoseRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectHumanBodyPose3DRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectHumanBodyPose3DRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectHumanHandPoseRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectHumanHandPoseRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectRectanglesRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectRectanglesRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectTextRectanglesRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectTextRectanglesRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectTrajectoriesRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectTrajectoriesRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.GenerateAttentionBasedSaliencyImageRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.GenerateAttentionBasedSaliencyImageRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.GenerateImageFeaturePrintRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.GenerateImageFeaturePrintRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.GenerateForegroundInstanceMaskRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.GenerateForegroundInstanceMaskRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.GenerateObjectnessBasedSaliencyImageRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.GenerateObjectnessBasedSaliencyImageRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.GeneratePersonSegmentationRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.GeneratePersonSegmentationRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.GeneratePersonInstanceMaskRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.GeneratePersonInstanceMaskRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.RecognizeAnimalsRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.RecognizeAnimalsRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.RecognizeTextRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.RecognizeTextRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.TrackHomographicImageRegistrationRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.TrackHomographicImageRegistrationRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.TrackObjectRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.TrackObjectRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.TrackOpticalFlowRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.TrackOpticalFlowRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.TrackRectangleRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.TrackRectangleRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.TrackTranslationalImageRegistrationRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.TrackTranslationalImageRegistrationRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectScreenGazeRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectScreenGazeRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectDeviceGazeRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectDeviceGazeRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectCameraGazeRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectCameraGazeRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.GenerateFacePrintRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.GenerateFacePrintRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.GenerateTorsoPrintRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.GenerateTorsoPrintRequestCodingKeys;
}

ValueMetadata *type metadata accessor for RequestDescriptor.CalculateFaceLivelinessScoreRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.CalculateFaceLivelinessScoreRequestCodingKeys;
}

unsigned char *_s6Vision17RequestDescriptorO37DetectFaceRectanglesRequestCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DC423CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestDescriptor.DetectHumanHeadRectanglesRequestCodingKeys()
{
  return &type metadata for RequestDescriptor.DetectHumanHeadRectanglesRequestCodingKeys;
}

unint64_t sub_1A3DC4278()
{
  unint64_t result = qword_1E9623670[0];
  if (!qword_1E9623670[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9623670);
  }
  return result;
}

unint64_t sub_1A3DC42D0()
{
  unint64_t result = qword_1E9623880[0];
  if (!qword_1E9623880[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9623880);
  }
  return result;
}

unint64_t sub_1A3DC4328()
{
  unint64_t result = qword_1E9623A90[0];
  if (!qword_1E9623A90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9623A90);
  }
  return result;
}

unint64_t sub_1A3DC4380()
{
  unint64_t result = qword_1E9623CA0[0];
  if (!qword_1E9623CA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9623CA0);
  }
  return result;
}

unint64_t sub_1A3DC43D8()
{
  unint64_t result = qword_1E9623EB0[0];
  if (!qword_1E9623EB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9623EB0);
  }
  return result;
}

unint64_t sub_1A3DC4430()
{
  unint64_t result = qword_1E96240C0[0];
  if (!qword_1E96240C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96240C0);
  }
  return result;
}

unint64_t sub_1A3DC4488()
{
  unint64_t result = qword_1E96242D0[0];
  if (!qword_1E96242D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96242D0);
  }
  return result;
}

unint64_t sub_1A3DC44E0()
{
  unint64_t result = qword_1E96244E0[0];
  if (!qword_1E96244E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96244E0);
  }
  return result;
}

unint64_t sub_1A3DC4538()
{
  unint64_t result = qword_1E96246F0[0];
  if (!qword_1E96246F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96246F0);
  }
  return result;
}

unint64_t sub_1A3DC4590()
{
  unint64_t result = qword_1E9624900[0];
  if (!qword_1E9624900[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9624900);
  }
  return result;
}

unint64_t sub_1A3DC45E8()
{
  unint64_t result = qword_1E9624B10[0];
  if (!qword_1E9624B10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9624B10);
  }
  return result;
}

unint64_t sub_1A3DC4640()
{
  unint64_t result = qword_1E9624D20[0];
  if (!qword_1E9624D20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9624D20);
  }
  return result;
}

unint64_t sub_1A3DC4698()
{
  unint64_t result = qword_1E9624F30[0];
  if (!qword_1E9624F30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9624F30);
  }
  return result;
}

unint64_t sub_1A3DC46F0()
{
  unint64_t result = qword_1E9625140[0];
  if (!qword_1E9625140[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9625140);
  }
  return result;
}

unint64_t sub_1A3DC4748()
{
  unint64_t result = qword_1E9625350[0];
  if (!qword_1E9625350[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9625350);
  }
  return result;
}

unint64_t sub_1A3DC47A0()
{
  unint64_t result = qword_1E9625560[0];
  if (!qword_1E9625560[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9625560);
  }
  return result;
}

unint64_t sub_1A3DC47F8()
{
  unint64_t result = qword_1E9625770[0];
  if (!qword_1E9625770[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9625770);
  }
  return result;
}

unint64_t sub_1A3DC4850()
{
  unint64_t result = qword_1E9625980[0];
  if (!qword_1E9625980[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9625980);
  }
  return result;
}

unint64_t sub_1A3DC48A8()
{
  unint64_t result = qword_1E9625B90[0];
  if (!qword_1E9625B90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9625B90);
  }
  return result;
}

unint64_t sub_1A3DC4900()
{
  unint64_t result = qword_1E9625DA0[0];
  if (!qword_1E9625DA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9625DA0);
  }
  return result;
}

unint64_t sub_1A3DC4958()
{
  unint64_t result = qword_1E9625FB0[0];
  if (!qword_1E9625FB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9625FB0);
  }
  return result;
}

unint64_t sub_1A3DC49B0()
{
  unint64_t result = qword_1E96261C0[0];
  if (!qword_1E96261C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96261C0);
  }
  return result;
}

unint64_t sub_1A3DC4A08()
{
  unint64_t result = qword_1E96263D0[0];
  if (!qword_1E96263D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96263D0);
  }
  return result;
}

unint64_t sub_1A3DC4A60()
{
  unint64_t result = qword_1E96265E0[0];
  if (!qword_1E96265E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96265E0);
  }
  return result;
}

unint64_t sub_1A3DC4AB8()
{
  unint64_t result = qword_1E96267F0[0];
  if (!qword_1E96267F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96267F0);
  }
  return result;
}

unint64_t sub_1A3DC4B10()
{
  unint64_t result = qword_1E9626A00[0];
  if (!qword_1E9626A00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9626A00);
  }
  return result;
}

unint64_t sub_1A3DC4B68()
{
  unint64_t result = qword_1E9626C10[0];
  if (!qword_1E9626C10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9626C10);
  }
  return result;
}

unint64_t sub_1A3DC4BC0()
{
  unint64_t result = qword_1E9626E20[0];
  if (!qword_1E9626E20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9626E20);
  }
  return result;
}

unint64_t sub_1A3DC4C18()
{
  unint64_t result = qword_1E9627030[0];
  if (!qword_1E9627030[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9627030);
  }
  return result;
}

unint64_t sub_1A3DC4C70()
{
  unint64_t result = qword_1E9627240[0];
  if (!qword_1E9627240[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9627240);
  }
  return result;
}

unint64_t sub_1A3DC4CC8()
{
  unint64_t result = qword_1E9627450[0];
  if (!qword_1E9627450[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9627450);
  }
  return result;
}

unint64_t sub_1A3DC4D20()
{
  unint64_t result = qword_1E9627660[0];
  if (!qword_1E9627660[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9627660);
  }
  return result;
}

unint64_t sub_1A3DC4D78()
{
  unint64_t result = qword_1E9627870[0];
  if (!qword_1E9627870[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9627870);
  }
  return result;
}

unint64_t sub_1A3DC4DD0()
{
  unint64_t result = qword_1E9627A80[0];
  if (!qword_1E9627A80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9627A80);
  }
  return result;
}

unint64_t sub_1A3DC4E28()
{
  unint64_t result = qword_1E9627C90[0];
  if (!qword_1E9627C90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9627C90);
  }
  return result;
}

unint64_t sub_1A3DC4E80()
{
  unint64_t result = qword_1E9627EA0[0];
  if (!qword_1E9627EA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9627EA0);
  }
  return result;
}

unint64_t sub_1A3DC4ED8()
{
  unint64_t result = qword_1E96280B0[0];
  if (!qword_1E96280B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96280B0);
  }
  return result;
}

unint64_t sub_1A3DC4F30()
{
  unint64_t result = qword_1E96282C0[0];
  if (!qword_1E96282C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96282C0);
  }
  return result;
}

unint64_t sub_1A3DC4F88()
{
  unint64_t result = qword_1E96284D0[0];
  if (!qword_1E96284D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96284D0);
  }
  return result;
}

unint64_t sub_1A3DC4FE0()
{
  unint64_t result = qword_1E96285E0;
  if (!qword_1E96285E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96285E0);
  }
  return result;
}

unint64_t sub_1A3DC5038()
{
  unint64_t result = qword_1E96285E8[0];
  if (!qword_1E96285E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96285E8);
  }
  return result;
}

unint64_t sub_1A3DC5090()
{
  unint64_t result = qword_1E9628670;
  if (!qword_1E9628670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628670);
  }
  return result;
}

unint64_t sub_1A3DC50E8()
{
  unint64_t result = qword_1E9628678;
  if (!qword_1E9628678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628678);
  }
  return result;
}

unint64_t sub_1A3DC5140()
{
  unint64_t result = qword_1E9628700;
  if (!qword_1E9628700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628700);
  }
  return result;
}

unint64_t sub_1A3DC5198()
{
  unint64_t result = qword_1E9628708[0];
  if (!qword_1E9628708[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628708);
  }
  return result;
}

unint64_t sub_1A3DC51F0()
{
  unint64_t result = qword_1E9628790;
  if (!qword_1E9628790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628790);
  }
  return result;
}

unint64_t sub_1A3DC5248()
{
  unint64_t result = qword_1E9628798[0];
  if (!qword_1E9628798[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628798);
  }
  return result;
}

unint64_t sub_1A3DC52A0()
{
  unint64_t result = qword_1E9628820;
  if (!qword_1E9628820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628820);
  }
  return result;
}

unint64_t sub_1A3DC52F8()
{
  unint64_t result = qword_1E9628828[0];
  if (!qword_1E9628828[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628828);
  }
  return result;
}

unint64_t sub_1A3DC5350()
{
  unint64_t result = qword_1E96288B0;
  if (!qword_1E96288B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96288B0);
  }
  return result;
}

unint64_t sub_1A3DC53A8()
{
  unint64_t result = qword_1E96288B8[0];
  if (!qword_1E96288B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96288B8);
  }
  return result;
}

unint64_t sub_1A3DC5400()
{
  unint64_t result = qword_1E9628940;
  if (!qword_1E9628940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628940);
  }
  return result;
}

unint64_t sub_1A3DC5458()
{
  unint64_t result = qword_1E9628948[0];
  if (!qword_1E9628948[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628948);
  }
  return result;
}

unint64_t sub_1A3DC54B0()
{
  unint64_t result = qword_1E96289D0;
  if (!qword_1E96289D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96289D0);
  }
  return result;
}

unint64_t sub_1A3DC5508()
{
  unint64_t result = qword_1E96289D8[0];
  if (!qword_1E96289D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96289D8);
  }
  return result;
}

unint64_t sub_1A3DC5560()
{
  unint64_t result = qword_1E9628A60;
  if (!qword_1E9628A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628A60);
  }
  return result;
}

unint64_t sub_1A3DC55B8()
{
  unint64_t result = qword_1E9628A68[0];
  if (!qword_1E9628A68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628A68);
  }
  return result;
}

unint64_t sub_1A3DC5610()
{
  unint64_t result = qword_1E9628AF0;
  if (!qword_1E9628AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628AF0);
  }
  return result;
}

unint64_t sub_1A3DC5668()
{
  unint64_t result = qword_1E9628AF8[0];
  if (!qword_1E9628AF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628AF8);
  }
  return result;
}

unint64_t sub_1A3DC56C0()
{
  unint64_t result = qword_1E9628B80;
  if (!qword_1E9628B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628B80);
  }
  return result;
}

unint64_t sub_1A3DC5718()
{
  unint64_t result = qword_1E9628B88[0];
  if (!qword_1E9628B88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628B88);
  }
  return result;
}

unint64_t sub_1A3DC5770()
{
  unint64_t result = qword_1E9628C10;
  if (!qword_1E9628C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628C10);
  }
  return result;
}

unint64_t sub_1A3DC57C8()
{
  unint64_t result = qword_1E9628C18[0];
  if (!qword_1E9628C18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628C18);
  }
  return result;
}

unint64_t sub_1A3DC5820()
{
  unint64_t result = qword_1E9628CA0;
  if (!qword_1E9628CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628CA0);
  }
  return result;
}

unint64_t sub_1A3DC5878()
{
  unint64_t result = qword_1E9628CA8[0];
  if (!qword_1E9628CA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628CA8);
  }
  return result;
}

unint64_t sub_1A3DC58D0()
{
  unint64_t result = qword_1E9628D30;
  if (!qword_1E9628D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628D30);
  }
  return result;
}

unint64_t sub_1A3DC5928()
{
  unint64_t result = qword_1E9628D38[0];
  if (!qword_1E9628D38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628D38);
  }
  return result;
}

unint64_t sub_1A3DC5980()
{
  unint64_t result = qword_1E9628DC0;
  if (!qword_1E9628DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628DC0);
  }
  return result;
}

unint64_t sub_1A3DC59D8()
{
  unint64_t result = qword_1E9628DC8[0];
  if (!qword_1E9628DC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628DC8);
  }
  return result;
}

unint64_t sub_1A3DC5A30()
{
  unint64_t result = qword_1E9628E50;
  if (!qword_1E9628E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628E50);
  }
  return result;
}

unint64_t sub_1A3DC5A88()
{
  unint64_t result = qword_1E9628E58[0];
  if (!qword_1E9628E58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628E58);
  }
  return result;
}

unint64_t sub_1A3DC5AE0()
{
  unint64_t result = qword_1E9628EE0;
  if (!qword_1E9628EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628EE0);
  }
  return result;
}

unint64_t sub_1A3DC5B38()
{
  unint64_t result = qword_1E9628EE8[0];
  if (!qword_1E9628EE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9628EE8);
  }
  return result;
}

unint64_t sub_1A3DC5B90()
{
  unint64_t result = qword_1E9628F70;
  if (!qword_1E9628F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628F70);
  }
  return result;
}

unint64_t sub_1A3DC5BE8()
{
  unint64_t result = qword_1E9628F78;
  if (!qword_1E9628F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9628F78);
  }
  return result;
}

unint64_t sub_1A3DC5C40()
{
  unint64_t result = qword_1E9629000;
  if (!qword_1E9629000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629000);
  }
  return result;
}

unint64_t sub_1A3DC5C98()
{
  unint64_t result = qword_1E9629008[0];
  if (!qword_1E9629008[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629008);
  }
  return result;
}

unint64_t sub_1A3DC5CF0()
{
  unint64_t result = qword_1E9629090;
  if (!qword_1E9629090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629090);
  }
  return result;
}

unint64_t sub_1A3DC5D48()
{
  unint64_t result = qword_1E9629098[0];
  if (!qword_1E9629098[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629098);
  }
  return result;
}

unint64_t sub_1A3DC5DA0()
{
  unint64_t result = qword_1E9629120;
  if (!qword_1E9629120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629120);
  }
  return result;
}

unint64_t sub_1A3DC5DF8()
{
  unint64_t result = qword_1E9629128[0];
  if (!qword_1E9629128[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629128);
  }
  return result;
}

unint64_t sub_1A3DC5E50()
{
  unint64_t result = qword_1E96291B0;
  if (!qword_1E96291B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96291B0);
  }
  return result;
}

unint64_t sub_1A3DC5EA8()
{
  unint64_t result = qword_1E96291B8[0];
  if (!qword_1E96291B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96291B8);
  }
  return result;
}

unint64_t sub_1A3DC5F00()
{
  unint64_t result = qword_1E9629240;
  if (!qword_1E9629240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629240);
  }
  return result;
}

unint64_t sub_1A3DC5F58()
{
  unint64_t result = qword_1E9629248[0];
  if (!qword_1E9629248[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629248);
  }
  return result;
}

unint64_t sub_1A3DC5FB0()
{
  unint64_t result = qword_1E96292D0;
  if (!qword_1E96292D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96292D0);
  }
  return result;
}

unint64_t sub_1A3DC6008()
{
  unint64_t result = qword_1E96292D8[0];
  if (!qword_1E96292D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96292D8);
  }
  return result;
}

unint64_t sub_1A3DC6060()
{
  unint64_t result = qword_1E9629360;
  if (!qword_1E9629360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629360);
  }
  return result;
}

unint64_t sub_1A3DC60B8()
{
  unint64_t result = qword_1E9629368[0];
  if (!qword_1E9629368[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629368);
  }
  return result;
}

unint64_t sub_1A3DC6110()
{
  unint64_t result = qword_1E96293F0;
  if (!qword_1E96293F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96293F0);
  }
  return result;
}

unint64_t sub_1A3DC6168()
{
  unint64_t result = qword_1E96293F8[0];
  if (!qword_1E96293F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96293F8);
  }
  return result;
}

unint64_t sub_1A3DC61C0()
{
  unint64_t result = qword_1E9629480;
  if (!qword_1E9629480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629480);
  }
  return result;
}

unint64_t sub_1A3DC6218()
{
  unint64_t result = qword_1E9629488[0];
  if (!qword_1E9629488[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629488);
  }
  return result;
}

unint64_t sub_1A3DC6270()
{
  unint64_t result = qword_1E9629510;
  if (!qword_1E9629510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629510);
  }
  return result;
}

unint64_t sub_1A3DC62C8()
{
  unint64_t result = qword_1E9629518[0];
  if (!qword_1E9629518[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629518);
  }
  return result;
}

unint64_t sub_1A3DC6320()
{
  unint64_t result = qword_1E96295A0;
  if (!qword_1E96295A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96295A0);
  }
  return result;
}

unint64_t sub_1A3DC6378()
{
  unint64_t result = qword_1E96295A8[0];
  if (!qword_1E96295A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96295A8);
  }
  return result;
}

unint64_t sub_1A3DC63D0()
{
  unint64_t result = qword_1E9629630;
  if (!qword_1E9629630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629630);
  }
  return result;
}

unint64_t sub_1A3DC6428()
{
  unint64_t result = qword_1E9629638[0];
  if (!qword_1E9629638[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629638);
  }
  return result;
}

unint64_t sub_1A3DC6480()
{
  unint64_t result = qword_1E96296C0;
  if (!qword_1E96296C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96296C0);
  }
  return result;
}

unint64_t sub_1A3DC64D8()
{
  unint64_t result = qword_1E96296C8[0];
  if (!qword_1E96296C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96296C8);
  }
  return result;
}

unint64_t sub_1A3DC6530()
{
  unint64_t result = qword_1E9629750;
  if (!qword_1E9629750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629750);
  }
  return result;
}

unint64_t sub_1A3DC6588()
{
  unint64_t result = qword_1E9629758[0];
  if (!qword_1E9629758[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629758);
  }
  return result;
}

unint64_t sub_1A3DC65E0()
{
  unint64_t result = qword_1E96297E0;
  if (!qword_1E96297E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96297E0);
  }
  return result;
}

unint64_t sub_1A3DC6638()
{
  unint64_t result = qword_1E96297E8[0];
  if (!qword_1E96297E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96297E8);
  }
  return result;
}

unint64_t sub_1A3DC6690()
{
  unint64_t result = qword_1E9629870;
  if (!qword_1E9629870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629870);
  }
  return result;
}

unint64_t sub_1A3DC66E8()
{
  unint64_t result = qword_1E9629878;
  if (!qword_1E9629878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629878);
  }
  return result;
}

unint64_t sub_1A3DC6740()
{
  unint64_t result = qword_1E9629900;
  if (!qword_1E9629900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629900);
  }
  return result;
}

unint64_t sub_1A3DC6798()
{
  unint64_t result = qword_1E9629908[0];
  if (!qword_1E9629908[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629908);
  }
  return result;
}

unint64_t sub_1A3DC67F0()
{
  unint64_t result = qword_1E9629990;
  if (!qword_1E9629990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629990);
  }
  return result;
}

unint64_t sub_1A3DC6848()
{
  unint64_t result = qword_1E9629998[0];
  if (!qword_1E9629998[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629998);
  }
  return result;
}

unint64_t sub_1A3DC68A0()
{
  unint64_t result = qword_1E9629A20;
  if (!qword_1E9629A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629A20);
  }
  return result;
}

unint64_t sub_1A3DC68F8()
{
  unint64_t result = qword_1E9629A28[0];
  if (!qword_1E9629A28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629A28);
  }
  return result;
}

unint64_t sub_1A3DC6950()
{
  unint64_t result = qword_1E9629AB0;
  if (!qword_1E9629AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629AB0);
  }
  return result;
}

unint64_t sub_1A3DC69A8()
{
  unint64_t result = qword_1E9629AB8[0];
  if (!qword_1E9629AB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629AB8);
  }
  return result;
}

unint64_t sub_1A3DC6A00()
{
  unint64_t result = qword_1E9629B40;
  if (!qword_1E9629B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9629B40);
  }
  return result;
}

unint64_t sub_1A3DC6A58()
{
  unint64_t result = qword_1E9629B48[0];
  if (!qword_1E9629B48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9629B48);
  }
  return result;
}

uint64_t sub_1A3DC6AAC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A40B7660 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B7680 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A40B76A0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001A40B76C0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65524C4D65726F63 && a2 == 0xED00007473657571 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A40B76F0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A40B7710 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A40B7730 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A40B7750 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A40B7780 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A40B77A0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A40B77C0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A40B77E0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B7800 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A40B7820 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B7840 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A40B7860 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A40B7880 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001A40B78A0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001A40B78D0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001A40B7900 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001A40B7930 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A40B7960 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A40B7990 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B79C0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A40B79E0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001A40B7A00 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A40B7A30 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B7A50 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A40B7A70 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001A40B7A90 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B7AC0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B7AE0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B7B00 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A40B7B20 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A40B7B40 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001A40B7B60 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001A40B7B90)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 37;
    }
    else {
      return 38;
    }
  }
}

uint64_t VNFaceLandmarkRegion2D.normalizedPoints.getter()
{
  id v1 = v0;
  id v2 = objc_msgSend(v1, sel_normalizedPoints);
  uint64_t result = (uint64_t)objc_msgSend(v1, sel_pointCount);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    return (uint64_t)sub_1A3DC9248(v2, result);
  }
  return result;
}

uint64_t VNFaceLandmarkRegion2D.pointsInImage(imageSize:)(double a1, double a2)
{
  id v5 = v2;
  id v6 = objc_msgSend(v5, sel_pointsInImageOfSize_, a1, a2);
  uint64_t result = (uint64_t)objc_msgSend(v5, sel_pointCount);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    return (uint64_t)sub_1A3DC9248(v6, result);
  }
  return result;
}

char *VNFaceLandmarkRegion2D.precisionEstimatesPerPoint.getter()
{
  id v1 = objc_msgSend(v0, sel_precisionEstimatesPerPoint);
  if (!v1) {
    return (char *)v1;
  }
  sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EFED0);
  unint64_t v2 = sub_1A409630C();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A4096BFC();
  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return (char *)MEMORY[0x1E4FBC860];
  }
LABEL_4:
  int v12 = (void *)MEMORY[0x1E4FBC860];
  uint64_t result = sub_1A3DC8F28(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    id v1 = v12;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1A6254720](v5, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      BOOL v7 = v6;
      objc_msgSend(v6, sel_floatValue);
      int v9 = v8;

      unint64_t v11 = v12[2];
      unint64_t v10 = v12[3];
      if (v11 >= v10 >> 1) {
        sub_1A3DC8F28((char *)(v10 > 1), v11 + 1, 1);
      }
      ++v5;
      v12[2] = v11 + 1;
      *((_DWORD *)v12 + v11 + 8) = v9;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return (char *)v1;
  }
  __break(1u);
  return result;
}

unint64_t VNFaceObservation.faceCaptureQuality.getter()
{
  id v1 = objc_msgSend(v0, sel_faceCaptureQuality);
  unint64_t v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, sel_floatValue);
    unsigned int v4 = v3;

    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

id VNRecognizedText.boundingBox(for:)(uint64_t a1, void *a2)
{
  id v9[2] = *(id *)MEMORY[0x1E4F143B8];
  v9[1] = a2;
  id v3 = objc_msgSend(v2, sel_string);
  sub_1A409617C();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC7D0);
  sub_1A3CA6294();
  sub_1A3CA62F0();
  uint64_t v4 = sub_1A409688C();
  v9[0] = 0;
  id v6 = objc_msgSend(v2, sel_boundingBoxForRange_error_, v4, v5, v9);
  if (v9[0])
  {
    id v7 = v9[0];
    swift_willThrow();
  }
  return v6;
}

void *VNContour.normalizedPoints.getter()
{
  id v1 = v0;
  id v2 = objc_msgSend(v1, sel_normalizedPoints);
  id v3 = objc_msgSend(v1, sel_pointCount);

  return sub_1A3DC92EC(v2, (uint64_t)v3);
}

id VNDetectHumanBodyPoseRequest.supportedJointNames.getter()
{
  return sub_1A3DC7D10((SEL *)&selRef_supportedJointNamesAndReturnError_, type metadata accessor for JointName);
}

id VNDetectHumanBodyPoseRequest.supportedJointsGroupNames.getter()
{
  return sub_1A3DC7D10((SEL *)&selRef_supportedJointsGroupNamesAndReturnError_, _s3__C15JointsGroupNameVMa_2);
}

id sub_1A3DC7D10(SEL *a1, void (*a2)(void))
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  v10[0] = 0;
  id v4 = objc_msgSend(v2, *a1, v10);
  id v5 = v10[0];
  if (v4)
  {
    id v6 = v4;
    a2(0);
    id v7 = (id)sub_1A409630C();
    id v8 = v5;
  }
  else
  {
    id v7 = v10[0];
    sub_1A4095AEC();

    swift_willThrow();
  }
  return v7;
}

id VNDetectHumanHandPoseRequest.supportedJointNames.getter()
{
  return sub_1A3DC7D10((SEL *)&selRef_supportedJointNamesAndReturnError_, _s3__C9JointNameVMa_2);
}

id VNDetectHumanHandPoseRequest.supportedJointsGroupNames.getter()
{
  return sub_1A3DC7D10((SEL *)&selRef_supportedJointsGroupNamesAndReturnError_, _s3__C15JointsGroupNameVMa_1);
}

id VNDetectAnimalBodyPoseRequest.supportedJointNames.getter()
{
  return sub_1A3DC7D10((SEL *)&selRef_supportedJointNamesAndReturnError_, _s3__C9JointNameVMa_1);
}

id VNDetectAnimalBodyPoseRequest.supportedJointsGroupNames.getter()
{
  return sub_1A3DC7D10((SEL *)&selRef_supportedJointsGroupNamesAndReturnError_, _s3__C15JointsGroupNameVMa_0);
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> VNHumanBodyPose3DObservation.cameraRelativePosition(_:)(simd_float4x4 *__return_ptr retstr, VNHumanBodyPose3DObservationJointName a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  memset(v8, 0, sizeof(v8));
  id v7 = 0;
  if (objc_msgSend(v2, sel_getCameraRelativePosition_forJointName_error_, v8, a2, &v7))
  {
    id v3 = v7;
  }
  else
  {
    id v4 = v7;
    id v5 = (void *)sub_1A4095AEC();

    swift_willThrow();
    id v7 = v5;
    id v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFEF0);
    sub_1A3C8C73C(0, (unint64_t *)&qword_1E95ECDB8);
    if (swift_dynamicCast())
    {

      swift_willThrow();
    }
  }
}

id VNDetectHumanBodyPose3DRequest.supportedJointNames.getter()
{
  return sub_1A3DC7D10((SEL *)&selRef_supportedJointNamesAndReturnError_, _s3__C9JointNameVMa_0);
}

id VNDetectHumanBodyPose3DRequest.supportedJointsGroupNames.getter()
{
  return sub_1A3DC7D10((SEL *)&selRef_supportedJointsGroupNamesAndReturnError_, type metadata accessor for JointsGroupName);
}

size_t sub_1A3DC81A0(unint64_t a1)
{
  uint64_t v2 = sub_1A4095F8C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v18 - v7;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (!v9) {
    return v10;
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  size_t result = sub_1A3CC0EA8(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = v19;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        MEMORY[0x1A6254720](i, a1);
        sub_1A4095F7C();
        uint64_t v19 = v10;
        unint64_t v14 = *(void *)(v10 + 16);
        unint64_t v13 = *(void *)(v10 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_1A3CC0EA8(v13 > 1, v14 + 1, 1);
          uint64_t v10 = v19;
        }
        *(void *)(v10 + 16) = v14 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v14, v8, v2);
      }
    }
    else
    {
      unint64_t v15 = a1 + 32;
      do
      {
        swift_unknownObjectRetain();
        sub_1A4095F7C();
        uint64_t v19 = v10;
        unint64_t v17 = *(void *)(v10 + 16);
        unint64_t v16 = *(void *)(v10 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1A3CC0EA8(v16 > 1, v17 + 1, 1);
          uint64_t v10 = v19;
        }
        *(void *)(v10 + 16) = v17 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v17, v5, v2);
        v15 += 8;
        --v9;
      }
      while (v9);
    }
    return v10;
  }
  __break(1u);
  return result;
}

__CFString *static VNBarcodeSymbology.Aztec.getter()
{
  return @"VNBarcodeSymbologyAztec";
}

__CFString *static VNBarcodeSymbology.Code39.getter()
{
  return @"VNBarcodeSymbologyCode39";
}

__CFString *static VNBarcodeSymbology.Code39Checksum.getter()
{
  return @"VNBarcodeSymbologyCode39Checksum";
}

__CFString *static VNBarcodeSymbology.Code39FullASCII.getter()
{
  return @"VNBarcodeSymbologyCode39FullASCII";
}

__CFString *static VNBarcodeSymbology.Code39FullASCIIChecksum.getter()
{
  return @"VNBarcodeSymbologyCode39FullASCIIChecksum";
}

__CFString *static VNBarcodeSymbology.Code93.getter()
{
  return @"VNBarcodeSymbologyCode93";
}

__CFString *static VNBarcodeSymbology.Code93i.getter()
{
  return @"VNBarcodeSymbologyCode93i";
}

__CFString *static VNBarcodeSymbology.Code128.getter()
{
  return @"VNBarcodeSymbologyCode128";
}

__CFString *static VNBarcodeSymbology.DataMatrix.getter()
{
  return @"VNBarcodeSymbologyDataMatrix";
}

__CFString *static VNBarcodeSymbology.EAN8.getter()
{
  return @"VNBarcodeSymbologyEAN8";
}

__CFString *static VNBarcodeSymbology.EAN13.getter()
{
  return @"VNBarcodeSymbologyEAN13";
}

__CFString *static VNBarcodeSymbology.I2of5.getter()
{
  return @"VNBarcodeSymbologyI2of5";
}

__CFString *static VNBarcodeSymbology.I2of5Checksum.getter()
{
  return @"VNBarcodeSymbologyI2of5Checksum";
}

__CFString *static VNBarcodeSymbology.ITF14.getter()
{
  return @"VNBarcodeSymbologyITF14";
}

__CFString *static VNBarcodeSymbology.PDF417.getter()
{
  return @"VNBarcodeSymbologyPDF417";
}

__CFString *static VNBarcodeSymbology.QR.getter()
{
  return @"VNBarcodeSymbologyQR";
}

__CFString *static VNBarcodeSymbology.UPCE.getter()
{
  return @"VNBarcodeSymbologyUPCE";
}

id VNRequest.supportedComputeStageDevices.getter()
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  v8[0] = 0;
  id v1 = objc_msgSend(v0, sel_supportedComputeStageDevicesAndReturnError_, v8);
  id v2 = v8[0];
  if (v1)
  {
    uint64_t v3 = v1;
    type metadata accessor for VNComputeStage();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EE1D0);
    sub_1A3DC94BC((unint64_t *)&unk_1E95EF770, (void (*)(uint64_t))type metadata accessor for VNComputeStage);
    uint64_t v4 = sub_1A409602C();
    id v5 = v2;

    id v2 = (id)sub_1A3DC9044(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = v8[0];
    sub_1A4095AEC();

    swift_willThrow();
  }
  return v2;
}

uint64_t VNRequest.computeDevice(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (objc_msgSend(v2, sel_computeDeviceForComputeStage_, a1))
  {
    sub_1A4095F7C();
    uint64_t v4 = sub_1A4095F8C();
    id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v6 = v4;
    uint64_t v7 = a2;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v9 = sub_1A4095F8C();
    id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v6 = v9;
    uint64_t v7 = a2;
    uint64_t v8 = 1;
  }

  return v5(v7, v8, 1, v6);
}

uint64_t VNRequest.setComputeDevice(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFF00);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A3DC93F4(a1, (uint64_t)v8);
  uint64_t v9 = sub_1A4095F8C();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A3DC945C((uint64_t)v8);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = sub_1A4095F5C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  objc_msgSend(v3, sel_setComputeDevice_forComputeStage_, v11, a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A3DC8878(uint64_t a1, uint64_t a2)
{
  return sub_1A3DC8EB8(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1A3DC8890(uint64_t a1, id *a2)
{
  return sub_1A3D307D8(a1, a2);
}

uint64_t sub_1A3DC88A8(uint64_t a1, id *a2)
{
  return sub_1A3D3086C(a1, a2) & 1;
}

uint64_t sub_1A3DC88DC(uint64_t a1)
{
  uint64_t v2 = sub_1A3DC94BC(&qword_1E95F0080, _s3__C15JointsGroupNameVMa_2);
  uint64_t v3 = sub_1A3DC94BC(&qword_1E95F0088, _s3__C15JointsGroupNameVMa_2);
  uint64_t v4 = sub_1A3DC94BC((unint64_t *)&unk_1E95F0020, type metadata accessor for VNRecognizedPointGroupKey);

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A3DC89CC(uint64_t a1)
{
  uint64_t v2 = sub_1A3DC94BC(&qword_1E95F0070, _s3__C9JointNameVMa_2);
  uint64_t v3 = sub_1A3DC94BC(&qword_1E95F0078, _s3__C9JointNameVMa_2);
  uint64_t v4 = sub_1A3DC94BC(&qword_1E95EDE28, type metadata accessor for VNRecognizedPointKey);

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A3DC8ABC(uint64_t a1)
{
  uint64_t v2 = sub_1A3DC94BC(&qword_1E95F0060, _s3__C15JointsGroupNameVMa_1);
  uint64_t v3 = sub_1A3DC94BC(&qword_1E95F0068, _s3__C15JointsGroupNameVMa_1);
  uint64_t v4 = sub_1A3DC94BC((unint64_t *)&unk_1E95F0020, type metadata accessor for VNRecognizedPointGroupKey);

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A3DC8BAC(uint64_t a1)
{
  uint64_t v2 = sub_1A3DC94BC(&qword_1E95F0040, _s3__C15JointsGroupNameVMa_0);
  uint64_t v3 = sub_1A3DC94BC(&qword_1E95F0048, _s3__C15JointsGroupNameVMa_0);
  uint64_t v4 = sub_1A3DC94BC((unint64_t *)&unk_1E95F0020, type metadata accessor for VNRecognizedPointGroupKey);

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A3DC8C9C(uint64_t a1)
{
  uint64_t v2 = sub_1A3DC94BC(&qword_1E95F0010, type metadata accessor for JointsGroupName);
  uint64_t v3 = sub_1A3DC94BC(&qword_1E95F0018, type metadata accessor for JointsGroupName);
  uint64_t v4 = sub_1A3DC94BC((unint64_t *)&unk_1E95F0020, type metadata accessor for VNRecognizedPointGroupKey);

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A3DC8D94(uint64_t a1, uint64_t a2)
{
  return sub_1A3DC8DAC(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1A3DC8DAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1A409617C();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A3DC8DFC(uint64_t a1)
{
  uint64_t v2 = sub_1A3DC94BC((unint64_t *)&unk_1E95F0020, type metadata accessor for VNRecognizedPointGroupKey);
  uint64_t v3 = sub_1A3DC94BC(&qword_1E95F0110, type metadata accessor for VNRecognizedPointGroupKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A3DC8EB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1A409617C();
  uint64_t v6 = a3(v5);

  swift_bridgeObjectRelease();
  return v6;
}

char *sub_1A3DC8F28(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1A3DC8F48(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A3DC8F48(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F00B8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_1A3DC9044(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95F00A0);
  uint64_t result = sub_1A4096C0C();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v25 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v23 = v6;
  int64_t v24 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    id v17 = *(id *)(*(void *)(v25 + 48) + 8 * i);
    unint64_t v18 = swift_bridgeObjectRetain();
    size_t v19 = sub_1A3DC81A0(v18);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + 8 * i) = v17;
    *(void *)(v3[7] + 8 * i) = v19;
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v24) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v23 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v24) {
        return (uint64_t)v3;
      }
      unint64_t v15 = *(void *)(v23 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v24) {
          return (uint64_t)v3;
        }
        unint64_t v15 = *(void *)(v23 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v24) {
    return (uint64_t)v3;
  }
  unint64_t v15 = *(void *)(v23 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v24) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v23 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1A3DC9248(const void *a1, uint64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  if (a2 <= 0)
  {
    size_t v4 = 16 * a2;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95F00C0);
    size_t v4 = 16 * a2;
    uint64_t v5 = (void *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 17;
    }
    v5[2] = a2;
    v5[3] = 2 * (v7 >> 4);
  }
  memcpy(v5 + 4, a1, v4);
  return v5;
}

void *sub_1A3DC92EC(const void *a1, uint64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  if (a2 <= 0)
  {
    size_t v4 = 8 * a2;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F00B0);
    size_t v4 = 8 * a2;
    uint64_t v5 = (void *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    v5[2] = a2;
    v5[3] = 2 * (v7 >> 3);
  }
  memcpy(v5 + 4, a1, v4);
  return v5;
}

void _s3__C15JointsGroupNameVMa_2(uint64_t a1)
{
}

void _s3__C9JointNameVMa_2(uint64_t a1)
{
}

void _s3__C15JointsGroupNameVMa_1(uint64_t a1)
{
}

void _s3__C15JointsGroupNameVMa_0(uint64_t a1)
{
}

void type metadata accessor for JointsGroupName(uint64_t a1)
{
}

uint64_t sub_1A3DC93F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3DC945C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFF00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3DC94BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3DC9504()
{
  return sub_1A3DC94BC(&qword_1E95EFF68, _s3__C15JointsGroupNameVMa_2);
}

uint64_t sub_1A3DC954C()
{
  return sub_1A3DC94BC(&qword_1E95EFF70, _s3__C15JointsGroupNameVMa_2);
}

uint64_t sub_1A3DC9594()
{
  return sub_1A3DC94BC(&qword_1E95EFF78, _s3__C15JointsGroupNameVMa_2);
}

uint64_t sub_1A3DC95DC()
{
  return sub_1A3DC94BC(&qword_1E95EFF80, _s3__C9JointNameVMa_2);
}

uint64_t sub_1A3DC9624()
{
  return sub_1A3DC94BC(&qword_1E95EFF88, _s3__C9JointNameVMa_2);
}

uint64_t sub_1A3DC966C()
{
  return sub_1A3DC94BC(&qword_1E95EFF90, _s3__C9JointNameVMa_2);
}

uint64_t sub_1A3DC96B4()
{
  return sub_1A3DC94BC(&qword_1E95EFF98, _s3__C15JointsGroupNameVMa_1);
}

uint64_t sub_1A3DC96FC()
{
  return sub_1A3DC94BC(&qword_1E95EFFA0, _s3__C15JointsGroupNameVMa_1);
}

uint64_t sub_1A3DC9744()
{
  return sub_1A3DC94BC(&qword_1E95EFFA8, _s3__C15JointsGroupNameVMa_1);
}

uint64_t sub_1A3DC978C()
{
  return sub_1A3DC94BC(&qword_1E95EFFC8, _s3__C15JointsGroupNameVMa_0);
}

uint64_t sub_1A3DC97D4()
{
  return sub_1A3DC94BC(&qword_1E95EFFD0, _s3__C15JointsGroupNameVMa_0);
}

uint64_t sub_1A3DC981C()
{
  return sub_1A3DC94BC(&qword_1E95EFFD8, _s3__C15JointsGroupNameVMa_0);
}

uint64_t sub_1A3DC9864()
{
  return sub_1A3DC94BC(&qword_1E95EFFF8, type metadata accessor for JointsGroupName);
}

uint64_t sub_1A3DC98AC()
{
  return sub_1A3DC94BC(&qword_1E95F0000, type metadata accessor for JointsGroupName);
}

uint64_t sub_1A3DC98F4()
{
  return sub_1A3DC94BC(&qword_1E95F0008, type metadata accessor for JointsGroupName);
}

void type metadata accessor for VNRecognizedPointGroupKey(uint64_t a1)
{
}

uint64_t sub_1A3DC9950()
{
  return sub_1A3DC94BC(&qword_1E95F00F0, type metadata accessor for VNRecognizedPointGroupKey);
}

uint64_t sub_1A3DC9998()
{
  return sub_1A3DC94BC(&qword_1E95F00F8, type metadata accessor for VNRecognizedPointGroupKey);
}

uint64_t sub_1A3DC99E0()
{
  return sub_1A3DC94BC(&qword_1E95F0108, type metadata accessor for VNRecognizedPointGroupKey);
}

uint64_t static RecognizeAnimalsRequest.Revision.< infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

BOOL static RecognizeAnimalsRequest.Revision.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RecognizeAnimalsRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3DC9A90(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC9F54();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DC9ACC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC9F54();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DC9B08()
{
  if (*v0) {
    return 0x3576444F4E41;
  }
  else {
    return 0x6E6F697369766572;
  }
}

uint64_t sub_1A3DC9B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DCB420(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DC9B6C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC9F00();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DC9BA8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC9F00();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DC9BE4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC9FA8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DC9C20(uint64_t a1)
{
  unint64_t v2 = sub_1A3DC9FA8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecognizeAnimalsRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0118);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0120);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0128);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DC9F00();
  sub_1A4096FEC();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3DC9F54();
    int64_t v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3DC9FA8();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_1A3DC9F00()
{
  unint64_t result = qword_1E962AFE8;
  if (!qword_1E962AFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962AFE8);
  }
  return result;
}

unint64_t sub_1A3DC9F54()
{
  unint64_t result = qword_1E962AFF0;
  if (!qword_1E962AFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962AFF0);
  }
  return result;
}

unint64_t sub_1A3DC9FA8()
{
  unint64_t result = qword_1E962AFF8[0];
  if (!qword_1E962AFF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962AFF8);
  }
  return result;
}

uint64_t RecognizeAnimalsRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t RecognizeAnimalsRequest.Revision.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  int v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0130);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0138);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0140);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DC9F00();
  uint64_t v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  int v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  int64_t v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    void *v22 = &type metadata for RecognizeAnimalsRequest.Revision;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3DC9F54();
    unint64_t v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3DC9FA8();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A3DCA49C(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_1A3DCA4B0(unsigned char *a1, unsigned char *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_1A3DCA4C4(unsigned char *a1, unsigned char *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_1A3DCA4D8(unsigned char *a1, unsigned char *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_1A3DCA4EC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return RecognizeAnimalsRequest.Revision.init(from:)(a1, a2);
}

uint64_t sub_1A3DCA504(void *a1)
{
  return RecognizeAnimalsRequest.Revision.encode(to:)(a1);
}

double RecognizeAnimalsRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v10);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 2)
  {
    unint64_t v5 = sub_1A3DCAC24();
    sub_1A3E2C988((uint64_t)&type metadata for RecognizeAnimalsRequest, v5, (uint64_t)&v9);
    unsigned __int8 v6 = v9;
  }
  else
  {
    unsigned __int8 v6 = v3 & 1;
  }
  double result = v10[0].n128_f64[0];
  __n128 v8 = v10[1];
  *a2 = v10[0];
  a2[1] = v8;
  a2[2].n128_u8[0] = v6;
  a2[2].n128_u8[1] = 0;
  a2[2].n128_u64[1] = v4;
  return result;
}

Vision::RecognizeAnimalsRequest::Animal_optional __swiftcall RecognizeAnimalsRequest.Animal.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1A4096C5C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t RecognizeAnimalsRequest.Animal.rawValue.getter()
{
  if (*v0) {
    return 7627075;
  }
  else {
    return 6778692;
  }
}

Vision::RecognizeAnimalsRequest::Animal_optional sub_1A3DCA634(Swift::String *a1)
{
  return RecognizeAnimalsRequest.Animal.init(rawValue:)(*a1);
}

void sub_1A3DCA640(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6778692;
  if (*v1) {
    uint64_t v2 = 7627075;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1A3DCA668(char *a1, char *a2)
{
  return sub_1A3DCA674(*a1, *a2);
}

uint64_t sub_1A3DCA674(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 7627075;
  }
  else {
    uint64_t v2 = 6778692;
  }
  if (a2) {
    uint64_t v3 = 7627075;
  }
  else {
    uint64_t v3 = 6778692;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1A3DCA6E4()
{
  return sub_1A40962CC();
}

uint64_t sub_1A3DCA744()
{
  return sub_1A40962AC();
}

uint64_t sub_1A3DCA794()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DCA7FC()
{
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3DCA848()
{
  return sub_1A4096F7C();
}

char *RecognizeAnimalsRequest.supportedAnimals.getter()
{
  type metadata accessor for Session();
  Session.__allocating_init()();
  unint64_t v0 = sub_1A3DCAC78();
  uint64_t v1 = swift_retain();
  sub_1A3D453DC(v1, (uint64_t)&type metadata for RecognizeAnimalsRequest, v0);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A3C8C73C(0, &qword_1E95EDEB8);
  if (swift_dynamicCastMetatype())
  {
    id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_knownAnimalIdentifiers);
    uint64_t v5 = sub_1A409630C();

    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = v5 + 40;
      uint64_t v2 = (char *)MEMORY[0x1E4FBC860];
      while (1)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_1A4096C5C();
        swift_bridgeObjectRelease();
        if (!v8) {
          break;
        }
        if (v8 == 1)
        {
          char v9 = 1;
LABEL_13:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v2 = sub_1A3DCB334(0, *((void *)v2 + 2) + 1, 1, v2);
          }
          unint64_t v11 = *((void *)v2 + 2);
          unint64_t v10 = *((void *)v2 + 3);
          if (v11 >= v10 >> 1) {
            uint64_t v2 = sub_1A3DCB334((char *)(v10 > 1), v11 + 1, 1, v2);
          }
          *((void *)v2 + 2) = v11 + 1;
          v2[v11 + 32] = v9;
        }
        v7 += 16;
        if (!--v6)
        {
          swift_release();
          swift_bridgeObjectRelease_n();
          return v2;
        }
      }
      char v9 = 0;
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
  return (char *)MEMORY[0x1E4FBC860];
}

__n128 RecognizeAnimalsRequest.regionOfInterest.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 RecognizeAnimalsRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*RecognizeAnimalsRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void RecognizeAnimalsRequest.revision.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t sub_1A3DCAB40()
{
  unint64_t v0 = sub_1A3DCAC24();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for RecognizeAnimalsRequest, v0);
  qword_1E962AFD8 = result;
  return result;
}

uint64_t static RecognizeAnimalsRequest.supportedRevisions.getter()
{
  if (qword_1E962AFD0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void RecognizeAnimalsRequest.descriptor.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32) | 0xC0;
  a1[1] = 0;
}

void RecognizeAnimalsRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

unsigned char *RecognizeAnimalsRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 33) = *result;
  return result;
}

uint64_t (*RecognizeAnimalsRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3DCAC24()
{
  unint64_t result = qword_1E95F0148;
  if (!qword_1E95F0148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0148);
  }
  return result;
}

unint64_t sub_1A3DCAC78()
{
  unint64_t result = qword_1E95F0150;
  if (!qword_1E95F0150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0150);
  }
  return result;
}

int *sub_1A3DCACCC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F01C8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  char v8 = 0;
  uint64_t v1 = sub_1A3D09D64(5, 0, 21);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(5, 0, 21);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(5, 0, 21);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468((uint64_t)&v8, v2, v4, v6, (uint64_t)&type metadata for RecognizeAnimalsRequest.Revision, v0 + 32);
  qword_1E9643D98 = v0;
  return result;
}

uint64_t RecognizeAnimalsRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t RecognizeAnimalsRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1A4096F2C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3DCAF18(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCAC78();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3DCAF54@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3DCAC24();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3DCAFA8(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3DCAC24();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3DCAFFC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32) | 0xC0;
  a1[1] = 0;
}

void sub_1A3DCB010(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

unsigned char *sub_1A3DCB01C(unsigned char *result)
{
  *(unsigned char *)(v1 + 33) = *result;
  return result;
}

uint64_t (*sub_1A3DCB028())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DCB048(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCAC24();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3DCB08C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1A4096F2C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3DCB15C()
{
  if (qword_1E962AFE0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DCB1B8(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA1D4();

  return sub_1A3E2C684(a1, a2);
}

uint64_t sub_1A3DCB204()
{
  if (*v0) {
    return 3737841666;
  }
  else {
    return 2;
  }
}

size_t sub_1A3DCB224(size_t result, uint64_t a2)
{
  long long v3 = v2[1];
  v8[0] = *v2;
  v8[1] = v3;
  id v8[2] = v2[2];
  if (*(void *)(result + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1A3C8D3F0(result + 128, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0158);
    if (!swift_dynamicCast()) {
      return MEMORY[0x1E4FBC860];
    }
    sub_1A3C91688((uint64_t)v8);
    size_t v5 = sub_1A3DCB754(v6, (unint64_t)v8, a2);
    sub_1A3C916B4((uint64_t)v8);
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

size_t sub_1A3DCB304(size_t a1, uint64_t a2)
{
  return sub_1A3DCB224(a1, a2);
}

void sub_1A3DCB31C(uint64_t a1)
{
}

char *sub_1A3DCB334(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F01D0);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  char v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A3DCB420(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697369766572 && a2 == 0xE900000000000032;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x3576444F4E41 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t _s6Vision23RecognizeAnimalsRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 33);
  uint64_t v4 = *(void *)(a1 + 40);
  int v5 = *(unsigned __int8 *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 33);
  uint64_t v7 = *(void *)(a2 + 40);
  CGSize v8 = *(CGSize *)(a1 + 16);
  v12.origin = *(CGPoint *)a1;
  v12.size = v8;
  CGSize v9 = *(CGSize *)(a2 + 16);
  v11.origin = *(CGPoint *)a2;
  v11.size = v9;
  if (!static NormalizedRect.== infix(_:_:)(&v12, &v11)) {
    return 0;
  }
  if ((v2 ^ v5)) {
    return 0;
  }
  LOBYTE(v12.origin.x) = v3;
  LOBYTE(v11.origin.x) = v6;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v12, (unsigned __int8 *)&v11)) {
    return 0;
  }

  return sub_1A3C8FF4C(v4, v7);
}

void sub_1A3DCB5D8(uint64_t a1)
{
  int v4 = *(unsigned __int8 *)(v1 + 32);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8C73C(0, &qword_1E95EDEB8);
  if (objc_msgSend(ObjCClassFromMetadata, sel_isSubclassOfClass_, swift_getObjCClassFromMetadata()))
  {
    if (v4) {
      uint64_t v6 = 3737841666;
    }
    else {
      uint64_t v6 = 2;
    }
    uint64_t v7 = sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EC718);
    uint64_t v8 = sub_1A3C8C73C(0, &qword_1E95F01C0);
    id v9 = sub_1A3CA42A0(v8, v6);
    if (!v2)
    {
      unint64_t v10 = v9;
      uint64_t v11 = sub_1A409617C();
      uint64_t v13 = v12;
      v18[3] = v7;
      v18[0] = v10;
      int64_t v14 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
      id v15 = v10;
      char v16 = (void (*)(unsigned char *, void))v14(v17);
      sub_1A3C8BC40((uint64_t)v18, v11, v13);
      v16(v17, 0);
    }
  }
}

size_t sub_1A3DCB754(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v22 = a3;
  uint64_t v7 = type metadata accessor for RecognizedObjectObservation();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if (!v11) {
      return v12;
    }
    uint64_t v27 = MEMORY[0x1E4FBC860];
    size_t result = sub_1A3CD1048(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0) {
      break;
    }
    uint64_t v14 = 0;
    uint64_t v12 = v27;
    v20[1] = v4;
    unint64_t v21 = a1 & 0xC000000000000001;
    unsigned __int16 v15 = *(unsigned __int8 *)(a2 + 32) | 0xC0;
    long long v16 = *(_OWORD *)(a2 + 16);
    long long v25 = *(_OWORD *)a2;
    long long v26 = v16;
    uint64_t v4 = a1;
    while (v11 != v14)
    {
      if (v21) {
        id v17 = (id)MEMORY[0x1A6254720](v14, a1);
      }
      else {
        id v17 = *(id *)(a1 + 8 * v14 + 32);
      }
      unsigned __int16 v24 = v15;
      v23[0] = v25;
      v23[1] = v26;
      sub_1A3D4EBBC(v17, &v24, (double *)v23, v22, (uint64_t)v10);
      uint64_t v27 = v12;
      unint64_t v19 = *(void *)(v12 + 16);
      unint64_t v18 = *(void *)(v12 + 24);
      a2 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_1A3CD1048(v18 > 1, v19 + 1, 1);
        uint64_t v12 = v27;
      }
      ++v14;
      *(void *)(v12 + 16) = a2;
      sub_1A3DCBFFC((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v19);
      a1 = v4;
      if (v11 == v14) {
        return v12;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A3DCB970()
{
  unint64_t result = qword_1E95F0160;
  if (!qword_1E95F0160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0160);
  }
  return result;
}

unint64_t sub_1A3DCB9C8()
{
  unint64_t result = qword_1E95F0168[0];
  if (!qword_1E95F0168[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95F0168);
  }
  return result;
}

unint64_t sub_1A3DCBA1C(uint64_t a1)
{
  unint64_t result = sub_1A3CCA1D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3DCBA44(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCEFF4();
  unint64_t result = sub_1A3DCBA74();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3DCBA74()
{
  unint64_t result = qword_1E95F01A0;
  if (!qword_1E95F01A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F01A0);
  }
  return result;
}

unint64_t sub_1A3DCBACC()
{
  unint64_t result = qword_1E95F01A8;
  if (!qword_1E95F01A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F01A8);
  }
  return result;
}

unint64_t sub_1A3DCBB24()
{
  unint64_t result = qword_1E95F01B0;
  if (!qword_1E95F01B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F01B0);
  }
  return result;
}

uint64_t sub_1A3DCBB78()
{
  return sub_1A3DCC060(&qword_1E95EE458, (void (*)(uint64_t))type metadata accessor for RecognizedObjectObservation);
}

unint64_t sub_1A3DCBBC0(uint64_t a1)
{
  unint64_t result = sub_1A3DCAC24();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for RecognizeAnimalsRequest()
{
  return &type metadata for RecognizeAnimalsRequest;
}

ValueMetadata *type metadata accessor for RecognizeAnimalsRequest.Revision()
{
  return &type metadata for RecognizeAnimalsRequest.Revision;
}

ValueMetadata *type metadata accessor for RecognizeAnimalsRequest.Animal()
{
  return &type metadata for RecognizeAnimalsRequest.Animal;
}

unsigned char *_s6Vision23RecognizeAnimalsRequestV8RevisionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DCBCE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecognizeAnimalsRequest.Revision.CodingKeys()
{
  return &type metadata for RecognizeAnimalsRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for RecognizeAnimalsRequest.Revision.Revision2CodingKeys()
{
  return &type metadata for RecognizeAnimalsRequest.Revision.Revision2CodingKeys;
}

ValueMetadata *type metadata accessor for RecognizeAnimalsRequest.Revision.ANODv5CodingKeys()
{
  return &type metadata for RecognizeAnimalsRequest.Revision.ANODv5CodingKeys;
}

unint64_t sub_1A3DCBD44()
{
  unint64_t result = qword_1E962BB80[0];
  if (!qword_1E962BB80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962BB80);
  }
  return result;
}

unint64_t sub_1A3DCBD9C()
{
  unint64_t result = qword_1E962BC90;
  if (!qword_1E962BC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962BC90);
  }
  return result;
}

unint64_t sub_1A3DCBDF4()
{
  unint64_t result = qword_1E962BC98[0];
  if (!qword_1E962BC98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962BC98);
  }
  return result;
}

unint64_t sub_1A3DCBE4C()
{
  unint64_t result = qword_1E962BD20;
  if (!qword_1E962BD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962BD20);
  }
  return result;
}

unint64_t sub_1A3DCBEA4()
{
  unint64_t result = qword_1E962BD28[0];
  if (!qword_1E962BD28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962BD28);
  }
  return result;
}

unint64_t sub_1A3DCBEFC()
{
  unint64_t result = qword_1E962BDB0;
  if (!qword_1E962BDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962BDB0);
  }
  return result;
}

unint64_t sub_1A3DCBF54()
{
  unint64_t result = qword_1E962BDB8[0];
  if (!qword_1E962BDB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962BDB8);
  }
  return result;
}

unint64_t sub_1A3DCBFA8()
{
  unint64_t result = qword_1E95F01B8;
  if (!qword_1E95F01B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F01B8);
  }
  return result;
}

uint64_t sub_1A3DCBFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecognizedObjectObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3DCC060(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void NormalizedRect.init(x:y:width:height:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
}

Vision::NormalizedRect __swiftcall NormalizedRect.init(normalizedRect:)(Vision::NormalizedRect normalizedRect)
{
  *uint64_t v1 = normalizedRect;
  return normalizedRect;
}

Vision::NormalizedRect __swiftcall NormalizedRect.init(imageRect:in:)(Vision::NormalizedRect imageRect, CGSize in)
{
  int v3 = v2;
  if (in.width <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (in.width >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((*(void *)&in.width & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&in.height & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_10;
  }
  if (in.height <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (in.height < 9.22337204e18)
  {
    imageRect = (Vision::NormalizedRect)VNNormalizedRectForImageRect((CGRect)imageRect, (uint64_t)in.width, (uint64_t)in.height);
    *int v3 = imageRect;
    return imageRect;
  }
LABEL_12:
  __break(1u);
  return imageRect;
}

Vision::NormalizedRect __swiftcall NormalizedRect.init(imageRect:in:normalizedTo:)(Vision::NormalizedRect imageRect, CGSize in, Vision::NormalizedRect normalizedTo)
{
  uint64_t v5 = v4;
  if (in.width <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (in.width >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((*(void *)&in.width & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&in.height & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_10;
  }
  if (in.height <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (in.height < 9.22337204e18)
  {
    CGFloat v6 = *v3;
    CGFloat v7 = v3[1];
    v10.size.size_t width = v3[2];
    v10.size.size_t height = v3[3];
    size_t width = (uint64_t)in.width;
    size_t height = (uint64_t)in.height;
    v10.origin.x = v6;
    v10.origin.y = v7;
    imageRect = (Vision::NormalizedRect)VNNormalizedRectForImageRectUsingRegionOfInterest((CGRect)imageRect, width, height, v10);
    *uint64_t v5 = imageRect;
    return imageRect;
  }
LABEL_12:
  __break(1u);
  return imageRect;
}

__n128 static NormalizedRect.fullImage.getter@<Q0>(__n128 *a1@<X8>)
{
  a1->n128_u64[0] = 0;
  a1->n128_u64[1] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  a1[1] = result;
  return result;
}

double NormalizedRect.cgRect.getter()
{
  return *(double *)v0;
}

double NormalizedRect.origin.getter()
{
  return *(double *)v0;
}

double NormalizedRect.width.getter()
{
  return *(double *)(v0 + 16);
}

double NormalizedRect.height.getter()
{
  return *(double *)(v0 + 24);
}

__C::CGRect __swiftcall NormalizedRect.toImageCoordinates(_:origin:)(CGSize _, Vision::CoordinateOrigin origin)
{
  double height = _.height;
  double width = _.width;
  CGFloat v5 = *v2;
  double v6 = v2[1];
  double v7 = v2[2];
  double v8 = v2[3];
  if ((*(unsigned char *)origin & 1) == 0)
  {
LABEL_9:
    VNVerticallyFlippedNormalizedRect();
    if (width > -9.22337204e18)
    {
      if (width < 9.22337204e18)
      {
        if ((*(void *)&width & 0x7FF0000000000000) != 0x7FF0000000000000
          && (*(void *)&height & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (height > -9.22337204e18)
          {
            if (height < 9.22337204e18) {
              goto LABEL_15;
            }
LABEL_26:
            __break(1u);
            goto _$s6Vision14NormalizedRectV18toImageCoordinates_6originSo6CGRectVSo6CGSizeV_AA16CoordinateOriginOtF;
          }
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (width <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (width >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((*(void *)&width & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&height & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_20;
  }
  if (height <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (height >= 9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
LABEL_15:

  *(CGRect *)&CGFloat v5 = VNImageRectForNormalizedRect(*(CGRect *)&v5, (uint64_t)width, (uint64_t)height);
_$s6Vision14NormalizedRectV18toImageCoordinates_6originSo6CGRectVSo6CGSizeV_AA16CoordinateOriginOtF:
  result.size.double height = v8;
  result.size.double width = v7;
  result.origin.y = v6;
  result.origin.x = v5;
  return result;
}

Vision::NormalizedRect __swiftcall NormalizedRect.verticallyFlipped()()
{
  uint64_t v1 = v0;
  VNVerticallyFlippedNormalizedRect();
  *uint64_t v1 = v2;
  v1[1] = v3;
  v1[2] = v4;
  v1[3] = v5;
  result.cgRect.size.double height = v5;
  result.cgRect.size.double width = v4;
  result.cgRect.origin.y = v3;
  result.cgRect.origin.x = v2;
  return result;
}

__C::CGRect __swiftcall NormalizedRect.toImageCoordinates(from:imageSize:origin:)(Vision::NormalizedRect from, CGSize imageSize, Vision::CoordinateOrigin origin)
{
  double y = from.cgRect.origin.y;
  double x = from.cgRect.origin.x;
  uint64_t v8 = *(void *)origin;
  uint64_t v7 = *(void *)(origin + 8);
  uint64_t v10 = *(void *)(origin + 16);
  uint64_t v9 = *(void *)(origin + 24);
  CGFloat v11 = *v4;
  double v12 = v4[1];
  double v13 = v4[2];
  double v14 = v4[3];
  if ((*v3 & 1) == 0)
  {
    VNVerticallyFlippedNormalizedRect();
    double v22 = v21;
    CGFloat v11 = -9.22337204e18;
    if (x > -9.22337204e18)
    {
      CGFloat v11 = 9.22337204e18;
      if (x < 9.22337204e18)
      {
        if ((*(void *)&x & 0x7FF0000000000000) != 0x7FF0000000000000
          && (*(void *)&y & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          CGFloat v11 = -9.22337204e18;
          if (y > -9.22337204e18)
          {
            CGFloat v11 = 9.22337204e18;
            if (y < 9.22337204e18)
            {
              double v23 = v12;
              double v24 = v13;
              double v25 = v14;
              VNVerticallyFlippedNormalizedRect();
              uint64_t v17 = v26;
              uint64_t v18 = v27;
              uint64_t v19 = v28;
              uint64_t v20 = v29;
              CGFloat v11 = v22;
              double v12 = v23;
              double v13 = v24;
              double v14 = v25;
              size_t v15 = (uint64_t)x;
              size_t v16 = (uint64_t)y;
              goto LABEL_16;
            }
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (x <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (x >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((*(void *)&x & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&y & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_19;
  }
  if (y <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (y >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  size_t v15 = (uint64_t)x;
  size_t v16 = (uint64_t)y;
  uint64_t v17 = v8;
  uint64_t v18 = v7;
  uint64_t v19 = v10;
  uint64_t v20 = v9;
LABEL_16:
  *(CGRect *)&CGFloat v11 = VNImageRectForNormalizedRectUsingRegionOfInterest(*(CGRect *)&v11, v15, v16, *(CGRect *)&v17);
LABEL_27:
  result.size.double height = v14;
  result.size.double width = v13;
  result.origin.double y = v12;
  result.origin.double x = v11;
  return result;
}

uint64_t NormalizedRect.hash(into:)()
{
  return sub_1A3CAA030();
}

uint64_t NormalizedRect.description.getter()
{
  return 0;
}

BOOL static NormalizedRect.== infix(_:_:)(CGRect *a1, CGRect *a2)
{
  return CGRectEqualToRect(*a1, *a2);
}

uint64_t sub_1A3DCC798()
{
  return 0x746365526763;
}

uint64_t sub_1A3DCC7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746365526763 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A3DCC83C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCCA34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DCC878(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCCA34();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NormalizedRect.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F01D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(_OWORD *)v1;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DCCA34();
  sub_1A4096FEC();
  v10[1] = v10[0];
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  type metadata accessor for CGRect(0);
  sub_1A3DCCD80(&qword_1E95F01E0);
  sub_1A4096DBC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A3DCCA34()
{
  unint64_t result = qword_1E962BE40[0];
  if (!qword_1E962BE40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962BE40);
  }
  return result;
}

uint64_t NormalizedRect.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t NormalizedRect.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F01E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DCCA34();
  sub_1A4096FDC();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    sub_1A3DCCD80(&qword_1E95F01F0);
    sub_1A4096CFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

BOOL sub_1A3DCCC80(CGRect *a1, CGRect *a2)
{
  return CGRectEqualToRect(*a1, *a2);
}

uint64_t sub_1A3DCCCA8()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DCCD10()
{
  return sub_1A3CAA030();
}

uint64_t sub_1A3DCCD1C()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DCCD80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3DCCDC8()
{
  unint64_t result = qword_1E95F01F8;
  if (!qword_1E95F01F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F01F8);
  }
  return result;
}

uint64_t sub_1A3DCCE1C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return NormalizedRect.init(from:)(a1, a2);
}

uint64_t sub_1A3DCCE34(void *a1)
{
  return NormalizedRect.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for NormalizedRect()
{
  return &type metadata for NormalizedRect;
}

unsigned char *storeEnumTagSinglePayload for NormalizedRect.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DCCEFCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NormalizedRect.CodingKeys()
{
  return &type metadata for NormalizedRect.CodingKeys;
}

unint64_t sub_1A3DCCF38()
{
  unint64_t result = qword_1E962C1D0[0];
  if (!qword_1E962C1D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962C1D0);
  }
  return result;
}

unint64_t sub_1A3DCCF90()
{
  unint64_t result = qword_1E962C2E0;
  if (!qword_1E962C2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962C2E0);
  }
  return result;
}

unint64_t sub_1A3DCCFE8()
{
  unint64_t result = qword_1E962C2E8[0];
  if (!qword_1E962C2E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962C2E8);
  }
  return result;
}

id ContoursObservation.contourCount.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ContoursObservation() + 32));

  return objc_msgSend(v1, sel_contourCount);
}

uint64_t type metadata accessor for ContoursObservation()
{
  uint64_t result = qword_1E962C880;
  if (!qword_1E962C880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id ContoursObservation.normalizedPath.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for ContoursObservation() + 32)), sel_normalizedPath);

  return v1;
}

char *ContoursObservation.topLevelContours.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for ContoursObservation() + 32)), sel_topLevelContours);
  sub_1A3C8C73C(0, &qword_1E95F0200);
  unint64_t v2 = sub_1A409630C();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A4096BFC();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1A3DCEFB4(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v11;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1A6254720](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      id v8 = v7;
      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        sub_1A3DCEFB4((char *)(v9 > 1), v10 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return (char *)v6;
  }
  __break(1u);
  return result;
}

uint64_t ContoursObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A4095C7C();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

float ContoursObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for ContoursObservation() + 20));
}

__n128 ContoursObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContoursObservation() + 24);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t ContoursObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for ContoursObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ContoursObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v1 = type metadata accessor for ContoursObservation();
  unint64_t v2 = *(void **)(v0 + *(int *)(v1 + 32));
  objc_msgSend(v2, sel_contourCount);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  id v3 = objc_msgSend(v2, sel_topLevelContours);
  sub_1A3C8C73C(0, &qword_1E95F0200);
  unint64_t v4 = sub_1A409630C();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v5 = sub_1A3DCF47C(&qword_1E95F0208, (void (*)(uint64_t))type metadata accessor for ContoursObservation);
  sub_1A3D8AC8C(v1, (uint64_t)&off_1EF747540, v5);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

void __swiftcall ContoursObservation.contourAtIndex(_:)(Vision::ContoursObservation::Contour_optional *__return_ptr retstr, Swift::Int a2)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void **)(v2 + *(int *)(type metadata accessor for ContoursObservation() + 32));
  v10[0] = 0;
  uint64_t v6 = (objc_class *)objc_msgSend(v5, sel_contourAtIndex_error_, a2, v10);
  id v7 = v10[0];
  if (!v6)
  {
    id v8 = v7;
    unint64_t v9 = (void *)sub_1A4095AEC();

    swift_willThrow();
    uint64_t v6 = 0;
  }
  retstr->value.vnContour.super.Class isa = v6;
}

void ContoursObservation.countourAtIndexPath(_:)(void *a1@<X8>)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  id v3 = *(void **)(v1 + *(int *)(type metadata accessor for ContoursObservation() + 32));
  unint64_t v4 = (void *)sub_1A4095D4C();
  v9[0] = 0;
  id v5 = objc_msgSend(v3, sel_contourAtIndexPath_error_, v4, v9);

  id v6 = v9[0];
  if (!v5)
  {
    id v7 = v6;
    id v8 = (void *)sub_1A4095AEC();

    swift_willThrow();
    id v5 = 0;
  }
  *a1 = v5;
}

uint64_t ContoursObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DCD818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3DCF47C(&qword_1E95F0208, (void (*)(uint64_t))type metadata accessor for ContoursObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

id ContoursObservation.Contour.aspectRatio.getter()
{
  return objc_msgSend(*v0, sel_aspectRatio);
}

void ContoursObservation.Contour.indexPath.getter()
{
  id v1 = objc_msgSend(*v0, sel_indexPath);
  sub_1A4095D5C();
}

id ContoursObservation.Contour.normalizedPath.getter()
{
  id v1 = objc_msgSend(*v0, sel_normalizedPath);

  return v1;
}

id ContoursObservation.Contour.pointCount.getter()
{
  return objc_msgSend(*v0, sel_pointCount);
}

void *ContoursObservation.Contour.normalizedPoints.getter()
{
  return VNContour.normalizedPoints.getter();
}

char *ContoursObservation.Contour.childContours.getter()
{
  id v1 = objc_msgSend(*v0, sel_childContours);
  sub_1A3C8C73C(0, &qword_1E95F0200);
  unint64_t v2 = sub_1A409630C();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A4096BFC();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1A3DCEFB4(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v11;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1A6254720](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      id v8 = v7;
      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        sub_1A3DCEFB4((char *)(v9 > 1), v10 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return (char *)v6;
  }
  __break(1u);
  return result;
}

uint64_t ContoursObservation.Contour.description.getter()
{
  id v1 = *v0;
  sub_1A4096A2C();
  sub_1A409621C();
  objc_msgSend(v1, sel_pointCount);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  id v2 = objc_msgSend(v1, sel_childContours);
  sub_1A3C8C73C(0, &qword_1E95F0200);
  unint64_t v3 = sub_1A409630C();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

Swift::Double __swiftcall ContoursObservation.Contour.calculateArea(useOrientedArea:)(Swift::Bool useOrientedArea)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *v1;
  v8[0] = 0;
  id v7 = 0;
  if (objc_msgSend(self, sel_calculateArea_forContour_orientedArea_error_, v8, v2, useOrientedArea, &v7))
  {
    id v3 = v7;
  }
  else
  {
    id v4 = v7;
    uint64_t v5 = (void *)sub_1A4095AEC();

    swift_willThrow();
  }
  return *(double *)v8;
}

Swift::Double __swiftcall ContoursObservation.Contour.calculatePerimeter()()
{
  v7[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *v0;
  v7[0] = 0;
  id v6 = 0;
  if (objc_msgSend(self, sel_calculatePerimeter_forContour_error_, v7, v1, &v6))
  {
    id v2 = v6;
  }
  else
  {
    id v3 = v6;
    id v4 = (void *)sub_1A4095AEC();

    swift_willThrow();
  }
  return *(double *)v7;
}

void ContoursObservation.Contour.boundingCircle()(uint64_t a1@<X8>)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *v1;
  *(void *)&long long v16 = 0;
  id v4 = objc_msgSend(self, sel_boundingCircleForContour_error_, v3, &v16);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = (id)v16;
    id v7 = objc_msgSend(v5, sel_center);
    objc_msgSend(v7, sel_location);
    unint64_t v9 = v8;
    unint64_t v11 = v10;

    NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v11, v9));
    long long v15 = v16;
    objc_msgSend(v5, sel_radius);
    NormalizedCircle.init(center:radius:)(&v15, a1, v12);
  }
  else
  {
    id v13 = (id)v16;
    double v14 = (void *)sub_1A4095AEC();

    swift_willThrow();
    sub_1A4096BEC();
    __break(1u);
  }
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ContoursObservation.Contour.polygonApproximation(epsilon:)(Vision::ContoursObservation::Contour *__return_ptr retstr, Swift::Float epsilon)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  id v4 = *v2;
  v9[0] = 0;
  uint64_t v5 = (objc_class *)objc_msgSend(v4, sel_polygonApproximationWithEpsilon_error_, v9);
  id v6 = v9[0];
  if (v5)
  {
    retstr->vnContour.super.Class isa = v5;
    id v7 = v6;
  }
  else
  {
    id v8 = v9[0];
    sub_1A4095AEC();

    swift_willThrow();
  }
}

uint64_t static ContoursObservation.Contour.== infix(_:_:)()
{
  return sub_1A409686C() & 1;
}

void ContoursObservation.Contour.hash(into:)()
{
  id v1 = *v0;
  sub_1A409687C();
}

uint64_t ContoursObservation.Contour.hashValue.getter()
{
  id v1 = *v0;
  sub_1A4096F2C();
  id v2 = v1;
  sub_1A409687C();

  return sub_1A4096F7C();
}

uint64_t sub_1A3DCE184()
{
  id v1 = *v0;
  sub_1A4096F2C();
  id v2 = v1;
  sub_1A409687C();

  return sub_1A4096F7C();
}

void sub_1A3DCE1D4()
{
  id v1 = *v0;
  sub_1A409687C();
}

uint64_t sub_1A3DCE22C()
{
  id v1 = *v0;
  sub_1A4096F2C();
  id v2 = v1;
  sub_1A409687C();

  return sub_1A4096F7C();
}

uint64_t sub_1A3DCE27C()
{
  if (*v0) {
    return 0x746176726573626FLL;
  }
  else {
    return 0x756F746E6F436E76;
  }
}

uint64_t sub_1A3DCE2C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DCF9F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DCE2EC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCF24C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DCE328(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCF24C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ContoursObservation.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  long long v28[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0218);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DCF24C();
  sub_1A4096FEC();
  unint64_t v11 = self;
  uint64_t v12 = type metadata accessor for ContoursObservation();
  uint64_t v13 = *(int *)(v12 + 32);
  v24[1] = v2;
  uint64_t v14 = *(void *)(v2 + v13);
  v28[0] = 0;
  id v15 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v14, 1, v28);
  id v16 = v28[0];
  if (v15)
  {
    v24[0] = v4;
    uint64_t v17 = (void *)sub_1A4095C1C();
    uint64_t v19 = v18;

    v28[0] = v17;
    v28[1] = v19;
    char v27 = 0;
    sub_1A3C81178();
    uint64_t v20 = v26;
    sub_1A4096DBC();
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return sub_1A3C7D218((uint64_t)v17, (unint64_t)v19);
    }
    LOBYTE(v28[0]) = 1;
    sub_1A3C80D74();
    sub_1A4096D5C();
    uint64_t v23 = sub_1A3DCF47C(&qword_1E95F0208, (void (*)(uint64_t))type metadata accessor for ContoursObservation);
    sub_1A3D2A9D0((uint64_t)v6, v12, (uint64_t)&off_1EF747540, v23);
    sub_1A3C7D218((uint64_t)v17, (unint64_t)v19);
    (*(void (**)(char *, void))(v25 + 8))(v6, v24[0]);
  }
  else
  {
    double v22 = v16;
    sub_1A4095AEC();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void ContoursObservation.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v41 = sub_1A4095C7C();
  uint64_t v37 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  int v40 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0220);
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ContoursObservation();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A3DCF24C();
  uint64_t v14 = v43;
  sub_1A4096FDC();
  if (v14) {
    goto LABEL_3;
  }
  int v43 = (int *)v10;
  int v35 = v6;
  id v16 = v40;
  uint64_t v15 = v41;
  char v47 = 0;
  sub_1A3C812C8();
  sub_1A4096CFC();
  uint64_t v34 = v7;
  uint64_t v17 = v44;
  unint64_t v18 = v45;
  sub_1A3C8C73C(0, &qword_1E95EC800);
  sub_1A3C8C73C(0, &qword_1E95F0228);
  uint64_t v19 = sub_1A409673C();
  uint64_t v20 = (void *)v19;
  uint64_t v33 = v17;
  if (!v19)
  {
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v22 = 0xD00000000000001CLL;
    *(void *)(v22 + 8) = 0x80000001A40B7CE0;
    *(_DWORD *)(v22 + 16) = 0;
    *(unsigned char *)(v22 + 20) = 0;
    swift_willThrow();
    sub_1A3C7D218(v33, v18);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v34);
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    return;
  }
  unint64_t v30 = v18;
  uint64_t v21 = v43[8];
  int v31 = v12;
  v29[1] = v21;
  *(void *)&v12[v21] = v19;
  LOBYTE(v44) = 1;
  sub_1A3C80D74();
  id v32 = v20;
  sub_1A4096C7C();
  uint64_t v23 = v32;
  LOBYTE(v44) = 0;
  sub_1A3DCF47C((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  sub_1A4096CFC();
  uint64_t v24 = (uint64_t)v31;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v31, v16, v15);
  LOBYTE(v44) = 1;
  sub_1A4096CDC();
  *(_DWORD *)(v24 + v43[5]) = v25;
  char v47 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  uint64_t v26 = v43;
  *(_WORD *)(v24 + v43[7]) = v44;
  char v27 = v35;
  sub_1A3D2B130((uint64_t)v46);
  uint64_t v28 = v39;
  sub_1A3C7D218(v33, v30);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v4);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v34);
  sub_1A3C7D648((uint64_t)v46, v24 + v26[6]);
  sub_1A3DCF2A0(v24, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  sub_1A3DCF304(v24);
}

void sub_1A3DCEE04(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A3DCEE1C(void *a1)
{
  return ContoursObservation.encode(to:)(a1);
}

__n128 ContoursObservation.init(_:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  objc_msgSend(a1, sel_timeRange, static NormalizedRect.fullImage.getter(v14).n128_f64[0]);
  id v4 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v6 = v5;
  uint64_t v7 = (int *)type metadata accessor for ContoursObservation();
  *(_DWORD *)(a2 + v7[5]) = v6;
  uint64_t v8 = a2 + v7[6];
  __n128 result = v11;
  *(_OWORD *)uint64_t v8 = v10;
  *(__n128 *)(v8 + 16) = v11;
  *(void *)(v8 + 32) = v12;
  *(void *)(v8 + 40) = v13;
  *(unsigned char *)(v8 + 48) = 0;
  *(_WORD *)(a2 + v7[7]) = -8;
  *(void *)(a2 + v7[8]) = a1;
  return result;
}

uint64_t sub_1A3DCEF20@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, int *a4@<X4>, uint64_t a5@<X8>)
{
  __int16 v9 = *a2;
  id v10 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  uint64_t v11 = a4[6];
  *(_DWORD *)(a5 + a4[5]) = v12;
  uint64_t result = sub_1A3C7D648(a3, a5 + v11);
  uint64_t v14 = a4[8];
  *(_WORD *)(a5 + a4[7]) = v9;
  *(void *)(a5 + v14) = a1;
  return result;
}

char *sub_1A3DCEFB4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A3DCEFD4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A3DCEFD4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0250);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t _s6Vision19ContoursObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1A4095C4C() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v4 = type metadata accessor for ContoursObservation();
  if (*(float *)(a1 + *(int *)(v4 + 20)) != *(float *)(a2 + *(int *)(v4 + 20))) {
    goto LABEL_14;
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(int *)(v4 + 24);
  char v7 = *(unsigned char *)(a1 + v6 + 48);
  uint64_t v8 = a2 + v6;
  if (v7)
  {
    if (!*(unsigned char *)(v8 + 48)) {
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(v8 + 48) & 1) != 0 || (sub_1A409669C() & 1) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v9 = *(int *)(v5 + 28);
  unsigned int v10 = *(unsigned __int16 *)(a1 + v9);
  unsigned int v11 = *(unsigned __int16 *)(a2 + v9);
  if (v10 <= 0xFFF7)
  {
    if (v11 > 0xFFF7) {
      goto LABEL_14;
    }
    sub_1A3C832B8();
    if ((sub_1A409612C() & 1) == 0) {
      goto LABEL_14;
    }
  }
  else if (v11 <= 0xFFF7)
  {
LABEL_14:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1A3C8C73C(0, &qword_1E95EC7E8);
  char v12 = sub_1A409686C();
  return v12 & 1;
}

unint64_t sub_1A3DCF24C()
{
  unint64_t result = qword_1E962C370[0];
  if (!qword_1E962C370[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962C370);
  }
  return result;
}

uint64_t sub_1A3DCF2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContoursObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3DCF304(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContoursObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3DCF360(void *a1)
{
  a1[1] = sub_1A3DCF47C(&qword_1E95ED050, (void (*)(uint64_t))type metadata accessor for ContoursObservation);
  a1[2] = sub_1A3DCF47C(&qword_1E95F0230, (void (*)(uint64_t))type metadata accessor for ContoursObservation);
  a1[3] = sub_1A3DCF47C(&qword_1E95F0238, (void (*)(uint64_t))type metadata accessor for ContoursObservation);
  uint64_t result = sub_1A3DCF47C(&qword_1E95F0210, (void (*)(uint64_t))type metadata accessor for ContoursObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3DCF434()
{
  return sub_1A3DCF47C(&qword_1E95F0240, (void (*)(uint64_t))type metadata accessor for ContoursObservation);
}

uint64_t sub_1A3DCF47C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3DCF4C8()
{
  unint64_t result = qword_1E95F0248;
  if (!qword_1E95F0248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0248);
  }
  return result;
}

uint64_t sub_1A3DCF51C(uint64_t a1)
{
  uint64_t result = sub_1A3DCF47C(&qword_1E95F0208, (void (*)(uint64_t))type metadata accessor for ContoursObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ContoursObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3DCF588);
}

uint64_t sub_1A3DCF588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ContoursObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3DCF65C);
}

uint64_t sub_1A3DCF65C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095C7C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A3DCF718()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContoursObservation.Contour()
{
  return &type metadata for ContoursObservation.Contour;
}

unsigned char *storeEnumTagSinglePayload for ContoursObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DCF8B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContoursObservation.CodingKeys()
{
  return &type metadata for ContoursObservation.CodingKeys;
}

unint64_t sub_1A3DCF8EC()
{
  unint64_t result = qword_1E962C990[0];
  if (!qword_1E962C990[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962C990);
  }
  return result;
}

unint64_t sub_1A3DCF944()
{
  unint64_t result = qword_1E962CAA0;
  if (!qword_1E962CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CAA0);
  }
  return result;
}

unint64_t sub_1A3DCF99C()
{
  unint64_t result = qword_1E962CAA8[0];
  if (!qword_1E962CAA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962CAA8);
  }
  return result;
}

uint64_t sub_1A3DCF9F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F746E6F436E76 && a2 == 0xE900000000000072;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static DetectBarcodesRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static DetectBarcodesRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t DetectBarcodesRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3DCFB40()
{
  return 0x6E6F697369766572;
}

uint64_t sub_1A3DCFB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F697369766572 && a2 == 0xE900000000000034)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A3DCFC00(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCFEC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DCFC3C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCFEC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DCFC78(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCFF14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DCFCB4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DCFF14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectBarcodesRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0258);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0260);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DCFEC0();
  sub_1A4096FEC();
  sub_1A3DCFF14();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3DCFEC0()
{
  unint64_t result = qword_1E962CB48;
  if (!qword_1E962CB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB48);
  }
  return result;
}

unint64_t sub_1A3DCFF14()
{
  unint64_t result = qword_1E962CB50;
  if (!qword_1E962CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB50);
  }
  return result;
}

uint64_t DetectBarcodesRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectBarcodesRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0268);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0270);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DCFEC0();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3DCFF14();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for DetectBarcodesRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DD0294(void *a1)
{
  return DetectBarcodesRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3DD02AC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0258);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0260);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DCFEC0();
  sub_1A4096FEC();
  sub_1A3DCFF14();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double DetectBarcodesRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v9);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3DD34B0();
    sub_1A3E2C988((uint64_t)&type metadata for DetectBarcodesRequest, v5, v6);
  }
  a2->n128_u64[0] = (unint64_t)&unk_1EF748128;
  a2->n128_u8[8] = 0;
  __n128 v7 = v9[1];
  a2[1] = v9[0];
  a2[2] = v7;
  double result = 7.29112205e-304;
  a2[3].n128_u32[0] = 0x1000000;
  a2[3].n128_u8[4] = 0;
  a2[3].n128_u64[1] = v4;
  return result;
}

void *DetectBarcodesRequest.supportedSymbologies.getter()
{
  return &unk_1EF748128;
}

uint64_t DetectBarcodesRequest.symbologies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DetectBarcodesRequest.symbologies.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*DetectBarcodesRequest.symbologies.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectBarcodesRequest.coalescesCompositeSymbologies.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t DetectBarcodesRequest.coalescesCompositeSymbologies.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*DetectBarcodesRequest.coalescesCompositeSymbologies.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DD05A4()
{
  unint64_t v0 = sub_1A3DD34B0();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for DetectBarcodesRequest, v0);
  qword_1E962CB38 = result;
  return result;
}

uint64_t static DetectBarcodesRequest.supportedRevisions.getter()
{
  if (qword_1E962CB30 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

__n128 DetectBarcodesRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 DetectBarcodesRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v3;
  return result;
}

uint64_t (*DetectBarcodesRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void DetectBarcodesRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 48;
}

BOOL static DetectBarcodesRequest.LocateMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DetectBarcodesRequest.LocateMode.hash(into:)()
{
  return sub_1A4096F3C();
}

unint64_t sub_1A3DD06C4(char a1)
{
  unint64_t result = 0x6669636570736E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    case 12:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 13:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 14:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000019;
      break;
    case 16:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3DD08CC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD36FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0908(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD36FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0944(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD37A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0980(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD37A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD09BC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD38F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD09F8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD38F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0A34(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD38A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0A70(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD38A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0AAC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3A44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0AE8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3A44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0B24(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD39F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0B60(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD39F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0B9C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD36A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0BD8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD36A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0C14(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3750();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0C50(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3750();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0C8C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3600();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0CC8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3600();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0D04(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD384C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0D40(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD384C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0D7C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD37F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0DB8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD37F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0DF4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3654();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0E30(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3654();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0E6C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD399C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0EA8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD399C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD0EE4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3948();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0F20(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3948();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A3DD0F5C()
{
  return sub_1A3DD06C4(*v0);
}

uint64_t sub_1A3DD0F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DD5AE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A3DD0F8C(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_1A3DD0F98(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3504();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD0FD4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3504();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD1010(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD35AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD104C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD35AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD1088(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3558();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD10C4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3558();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD1100(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3A98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD113C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD3A98();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static DetectBarcodesRequest.LocateMode.allCases.getter()
{
  return &unk_1EF748410;
}

uint64_t DetectBarcodesRequest.LocateMode.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0280);
  uint64_t v96 = *(void *)(v4 - 8);
  uint64_t v97 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v95 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0288);
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v92 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0290);
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v89 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0298);
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v86 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02A0);
  uint64_t v84 = *(void *)(v12 - 8);
  uint64_t v85 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v83 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02A8);
  uint64_t v81 = *(void *)(v14 - 8);
  uint64_t v82 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v80 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02B0);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v77 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02B8);
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v74 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02C0);
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v71 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02C8);
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v68 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02D0);
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02D8);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  char v62 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02E0);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v59 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02E8);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v56 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02F0);
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F02F8);
  uint64_t v52 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  char v27 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0300);
  uint64_t v51 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  unint64_t v30 = (char *)&v51 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0308);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v99 = v31;
  uint64_t v100 = v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v51 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DD3504();
  uint64_t v98 = v34;
  sub_1A4096FEC();
  switch(v35)
  {
    case 1:
      char v101 = 1;
      sub_1A3DD3A44();
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v27, v25);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 2:
      char v101 = 2;
      sub_1A3DD39F0();
      uint64_t v38 = v53;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v55);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 3:
      char v101 = 3;
      sub_1A3DD399C();
      uint64_t v39 = v56;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v58);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 4:
      char v101 = 4;
      sub_1A3DD3948();
      int v40 = v59;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v61);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 5:
      char v101 = 5;
      sub_1A3DD38F4();
      uint64_t v41 = v62;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v64);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 6:
      char v101 = 6;
      sub_1A3DD38A0();
      int v42 = v65;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v67);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 7:
      char v101 = 7;
      sub_1A3DD384C();
      int v43 = v68;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v70);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 8:
      char v101 = 8;
      sub_1A3DD37F8();
      uint64_t v44 = v71;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v44, v73);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 9:
      char v101 = 9;
      sub_1A3DD37A4();
      unint64_t v45 = v74;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v76);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 10:
      char v101 = 10;
      sub_1A3DD3750();
      unsigned __int8 v46 = v77;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v46, v79);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
    case 11:
      char v101 = 11;
      sub_1A3DD36FC();
      char v47 = v80;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      uint64_t v49 = v81;
      uint64_t v48 = v82;
      goto LABEL_19;
    case 12:
      char v101 = 12;
      sub_1A3DD36A8();
      char v47 = v83;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      uint64_t v49 = v84;
      uint64_t v48 = v85;
      goto LABEL_19;
    case 13:
      char v101 = 13;
      sub_1A3DD3654();
      char v47 = v86;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      uint64_t v49 = v87;
      uint64_t v48 = v88;
      goto LABEL_19;
    case 14:
      char v101 = 14;
      sub_1A3DD3600();
      char v47 = v89;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      uint64_t v49 = v90;
      uint64_t v48 = v91;
      goto LABEL_19;
    case 15:
      char v101 = 15;
      sub_1A3DD35AC();
      char v47 = v92;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      uint64_t v49 = v93;
      uint64_t v48 = v94;
      goto LABEL_19;
    case 16:
      char v101 = 16;
      sub_1A3DD3558();
      char v47 = v95;
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      uint64_t v49 = v96;
      uint64_t v48 = v97;
LABEL_19:
      (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v48);
      break;
    default:
      char v101 = 0;
      sub_1A3DD3A98();
      uint64_t v37 = v98;
      uint64_t v36 = v99;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v30, v28);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v37, v36);
}

uint64_t DetectBarcodesRequest.LocateMode.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectBarcodesRequest.LocateMode.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v124 = a2;
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0310);
  uint64_t v107 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v119 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0318);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v118 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0320);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v117 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0328);
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v116 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0330);
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v115 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0338);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v114 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0340);
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v113 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0348);
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v112 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0350);
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v111 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0358);
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v122 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0360);
  uint64_t v88 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v121 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0368);
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v120 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0370);
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v110 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0378);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v109 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0380);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v108 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0388);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0390);
  uint64_t v76 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0398);
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1[3];
  uint64_t v125 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_1A3DD3504();
  uint64_t v28 = v126;
  sub_1A4096FDC();
  if (!v28)
  {
    uint64_t v73 = v22;
    uint64_t v72 = v20;
    uint64_t v74 = v19;
    unint64_t v30 = v120;
    uint64_t v29 = v121;
    uint64_t v31 = v122;
    uint64_t v75 = 0;
    uint64_t v33 = v123;
    uint64_t v32 = v124;
    uint64_t v126 = v24;
    uint64_t v34 = sub_1A4096D3C();
    if (*(void *)(v34 + 16) == 1)
    {
      char v35 = *(unsigned char *)(v34 + 32);
      switch(v35)
      {
        case 1:
          char v127 = 1;
          sub_1A3DD3A44();
          int v42 = v74;
          uint64_t v43 = v75;
          sub_1A4096C7C();
          if (v43) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v77 + 8))(v42, v78);
          goto LABEL_35;
        case 2:
          char v127 = 2;
          sub_1A3DD39F0();
          uint64_t v44 = v108;
          uint64_t v45 = v75;
          sub_1A4096C7C();
          if (v45) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v79 + 8))(v44, v80);
          goto LABEL_35;
        case 3:
          char v127 = 3;
          sub_1A3DD399C();
          unsigned __int8 v46 = v109;
          uint64_t v47 = v75;
          sub_1A4096C7C();
          if (v47) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v81 + 8))(v46, v82);
          goto LABEL_35;
        case 4:
          char v127 = 4;
          sub_1A3DD3948();
          uint64_t v48 = v110;
          uint64_t v49 = v75;
          sub_1A4096C7C();
          if (v49) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v83 + 8))(v48, v84);
          goto LABEL_35;
        case 5:
          char v127 = 5;
          sub_1A3DD38F4();
          uint64_t v50 = v75;
          sub_1A4096C7C();
          if (v50) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v85 + 8))(v30, v86);
          goto LABEL_35;
        case 6:
          char v127 = 6;
          sub_1A3DD38A0();
          uint64_t v51 = v75;
          sub_1A4096C7C();
          if (v51) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v88 + 8))(v29, v87);
          goto LABEL_35;
        case 7:
          char v127 = 7;
          sub_1A3DD384C();
          uint64_t v52 = v75;
          sub_1A4096C7C();
          if (v52) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v89 + 8))(v31, v90);
          goto LABEL_35;
        case 8:
          char v127 = 8;
          sub_1A3DD37F8();
          uint64_t v53 = v111;
          uint64_t v54 = v75;
          sub_1A4096C7C();
          if (v54) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v91 + 8))(v53, v92);
          goto LABEL_35;
        case 9:
          char v127 = 9;
          sub_1A3DD37A4();
          uint64_t v55 = v112;
          uint64_t v56 = v75;
          sub_1A4096C7C();
          if (v56) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v55, v94);
          goto LABEL_35;
        case 10:
          char v127 = 10;
          sub_1A3DD3750();
          uint64_t v57 = v113;
          uint64_t v58 = v75;
          sub_1A4096C7C();
          if (v58) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v95 + 8))(v57, v96);
          goto LABEL_35;
        case 11:
          char v127 = 11;
          sub_1A3DD36FC();
          uint64_t v59 = v114;
          uint64_t v60 = v75;
          sub_1A4096C7C();
          if (v60) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v97 + 8))(v59, v98);
          goto LABEL_35;
        case 12:
          char v127 = 12;
          sub_1A3DD36A8();
          uint64_t v61 = v115;
          uint64_t v62 = v75;
          sub_1A4096C7C();
          if (v62) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v99 + 8))(v61, v100);
          goto LABEL_35;
        case 13:
          char v127 = 13;
          sub_1A3DD3654();
          uint64_t v63 = v116;
          uint64_t v64 = v75;
          sub_1A4096C7C();
          if (v64) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v101 + 8))(v63, v102);
          goto LABEL_35;
        case 14:
          char v127 = 14;
          sub_1A3DD3600();
          uint64_t v65 = v117;
          uint64_t v66 = v75;
          sub_1A4096C7C();
          if (v66) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v103 + 8))(v65, v104);
          goto LABEL_35;
        case 15:
          char v127 = 15;
          sub_1A3DD35AC();
          uint64_t v67 = v118;
          uint64_t v68 = v75;
          sub_1A4096C7C();
          if (v68) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v105 + 8))(v67, v106);
          goto LABEL_35;
        case 16:
          char v127 = 16;
          sub_1A3DD3558();
          uint64_t v69 = v119;
          uint64_t v70 = v75;
          sub_1A4096C7C();
          if (v70) {
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v107 + 8))(v69, v33);
          goto LABEL_35;
        default:
          char v127 = 0;
          sub_1A3DD3A98();
          uint64_t v36 = v73;
          uint64_t v37 = v75;
          sub_1A4096C7C();
          if (v37)
          {
LABEL_39:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v126 + 8))(v26, v23);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v76 + 8))(v36, v72);
LABEL_35:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v126 + 8))(v26, v23);
            *uint64_t v32 = v35;
          }
          break;
      }
    }
    else
    {
      uint64_t v38 = v23;
      uint64_t v39 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v41 = v40;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v41 = &type metadata for DetectBarcodesRequest.LocateMode;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, *MEMORY[0x1E4FBBA70], v39);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v126 + 8))(v26, v38);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
}

void sub_1A3DD3364(void *a1@<X8>)
{
  *a1 = &unk_1EF748410;
}

uint64_t sub_1A3DD3374@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DetectBarcodesRequest.LocateMode.init(from:)(a1, a2);
}

uint64_t sub_1A3DD338C(void *a1)
{
  return DetectBarcodesRequest.LocateMode.encode(to:)(a1);
}

void DetectBarcodesRequest.locateMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *DetectBarcodesRequest.locateMode.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*DetectBarcodesRequest.locateMode.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void *DetectBarcodesRequest.availableLocateModes.getter()
{
  return &unk_1EF7484D8;
}

uint64_t DetectBarcodesRequest.stopAtFirstPyramidWith2DCode.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t DetectBarcodesRequest.stopAtFirstPyramidWith2DCode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 49) = result;
  return result;
}

uint64_t (*DetectBarcodesRequest.stopAtFirstPyramidWith2DCode.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectBarcodesRequest.useSegmentationPregating.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t DetectBarcodesRequest.useSegmentationPregating.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 50) = result;
  return result;
}

uint64_t (*DetectBarcodesRequest.useSegmentationPregating.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectBarcodesRequest.useMLDetector.getter()
{
  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t DetectBarcodesRequest.useMLDetector.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 51) = result;
  return result;
}

uint64_t (*DetectBarcodesRequest.useMLDetector.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void DetectBarcodesRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 52);
}

unsigned char *DetectBarcodesRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 52) = *result;
  return result;
}

uint64_t (*DetectBarcodesRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3DD34B0()
{
  unint64_t result = qword_1E95F0278;
  if (!qword_1E95F0278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0278);
  }
  return result;
}

unint64_t sub_1A3DD3504()
{
  unint64_t result = qword_1E962CB58;
  if (!qword_1E962CB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB58);
  }
  return result;
}

unint64_t sub_1A3DD3558()
{
  unint64_t result = qword_1E962CB60;
  if (!qword_1E962CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB60);
  }
  return result;
}

unint64_t sub_1A3DD35AC()
{
  unint64_t result = qword_1E962CB68;
  if (!qword_1E962CB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB68);
  }
  return result;
}

unint64_t sub_1A3DD3600()
{
  unint64_t result = qword_1E962CB70;
  if (!qword_1E962CB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB70);
  }
  return result;
}

unint64_t sub_1A3DD3654()
{
  unint64_t result = qword_1E962CB78;
  if (!qword_1E962CB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB78);
  }
  return result;
}

unint64_t sub_1A3DD36A8()
{
  unint64_t result = qword_1E962CB80;
  if (!qword_1E962CB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB80);
  }
  return result;
}

unint64_t sub_1A3DD36FC()
{
  unint64_t result = qword_1E962CB88;
  if (!qword_1E962CB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB88);
  }
  return result;
}

unint64_t sub_1A3DD3750()
{
  unint64_t result = qword_1E962CB90;
  if (!qword_1E962CB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB90);
  }
  return result;
}

unint64_t sub_1A3DD37A4()
{
  unint64_t result = qword_1E962CB98;
  if (!qword_1E962CB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CB98);
  }
  return result;
}

unint64_t sub_1A3DD37F8()
{
  unint64_t result = qword_1E962CBA0;
  if (!qword_1E962CBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CBA0);
  }
  return result;
}

unint64_t sub_1A3DD384C()
{
  unint64_t result = qword_1E962CBA8;
  if (!qword_1E962CBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CBA8);
  }
  return result;
}

unint64_t sub_1A3DD38A0()
{
  unint64_t result = qword_1E962CBB0;
  if (!qword_1E962CBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CBB0);
  }
  return result;
}

unint64_t sub_1A3DD38F4()
{
  unint64_t result = qword_1E962CBB8;
  if (!qword_1E962CBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CBB8);
  }
  return result;
}

unint64_t sub_1A3DD3948()
{
  unint64_t result = qword_1E962CBC0;
  if (!qword_1E962CBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CBC0);
  }
  return result;
}

unint64_t sub_1A3DD399C()
{
  unint64_t result = qword_1E962CBC8;
  if (!qword_1E962CBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CBC8);
  }
  return result;
}

unint64_t sub_1A3DD39F0()
{
  unint64_t result = qword_1E962CBD0;
  if (!qword_1E962CBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CBD0);
  }
  return result;
}

unint64_t sub_1A3DD3A44()
{
  unint64_t result = qword_1E962CBD8;
  if (!qword_1E962CBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962CBD8);
  }
  return result;
}

unint64_t sub_1A3DD3A98()
{
  unint64_t result = qword_1E962CBE0[0];
  if (!qword_1E962CBE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962CBE0);
  }
  return result;
}

int *sub_1A3DD3AEC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0418);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(7, 0, 23);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(7, 0, 23);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(7, 0, 23);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for DetectBarcodesRequest.Revision, v0 + 32);
  qword_1E9643DA0 = v0;
  return result;
}

uint64_t DetectBarcodesRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[7];
  swift_bridgeObjectRetain();
  sub_1A3DD41FC((uint64_t)a1, v3);
  swift_bridgeObjectRelease();
  sub_1A4096F4C();
  sub_1A4096F3C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  sub_1A4096F4C();
  sub_1A4096F4C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3DD3CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      sub_1A3D70CA0();
      uint64_t v5 = v2 - 1;
      do
      {
        ++v3;
        ++v4;
        char v6 = sub_1A409612C();
        BOOL v8 = v5-- != 0;
      }
      while ((v6 & 1) != 0 && v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t DetectBarcodesRequest.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 48);
  char v3 = *((unsigned char *)v0 + 49);
  char v4 = *((unsigned char *)v0 + 50);
  char v5 = *((unsigned char *)v0 + 51);
  char v6 = *((unsigned char *)v0 + 52);
  uint64_t v7 = v0[7];
  uint64_t v11 = *v0;
  char v12 = v1;
  long long v8 = *((_OWORD *)v0 + 2);
  long long v13 = *((_OWORD *)v0 + 1);
  long long v14 = v8;
  char v15 = v2;
  char v16 = v3;
  char v17 = v4;
  char v18 = v5;
  char v19 = v6;
  uint64_t v20 = v7;
  sub_1A4096F2C();
  DetectBarcodesRequest.hash(into:)(v10);
  return sub_1A4096F7C();
}

__n128 sub_1A3DD3E1C@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1A3DD3E28(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v3;
  return result;
}

uint64_t (*sub_1A3DD3E34())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DD3E54(uint64_t a1)
{
  unint64_t v2 = sub_1A3D62DEC();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3DD3E90@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3DD34B0();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3DD3EE4(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3DD34B0();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3DD3F38(_WORD *a1@<X8>)
{
  *a1 = 48;
}

void sub_1A3DD3F44(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 52);
}

unsigned char *sub_1A3DD3F50(unsigned char *result)
{
  *(unsigned char *)(v1 + 52) = *result;
  return result;
}

uint64_t (*sub_1A3DD3F5C())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DD3F7C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD34B0();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3DD3FB8()
{
  char v1 = *((unsigned char *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 48);
  char v3 = *((unsigned char *)v0 + 49);
  char v4 = *((unsigned char *)v0 + 50);
  char v5 = *((unsigned char *)v0 + 51);
  char v6 = *((unsigned char *)v0 + 52);
  uint64_t v7 = v0[7];
  uint64_t v11 = *v0;
  char v12 = v1;
  long long v8 = *((_OWORD *)v0 + 2);
  long long v13 = *((_OWORD *)v0 + 1);
  long long v14 = v8;
  char v15 = v2;
  char v16 = v3;
  char v17 = v4;
  char v18 = v5;
  char v19 = v6;
  uint64_t v20 = v7;
  sub_1A4096F2C();
  DetectBarcodesRequest.hash(into:)(v10);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DD4048()
{
  char v1 = *((unsigned char *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 48);
  char v3 = *((unsigned char *)v0 + 49);
  char v4 = *((unsigned char *)v0 + 50);
  char v5 = *((unsigned char *)v0 + 51);
  char v6 = *((unsigned char *)v0 + 52);
  uint64_t v7 = v0[7];
  uint64_t v11 = *v0;
  char v12 = v1;
  long long v8 = *((_OWORD *)v0 + 2);
  long long v13 = *((_OWORD *)v0 + 1);
  long long v14 = v8;
  char v15 = v2;
  char v16 = v3;
  char v17 = v4;
  char v18 = v5;
  char v19 = v6;
  uint64_t v20 = v7;
  sub_1A4096F2C();
  DetectBarcodesRequest.hash(into:)(v10);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DD40D4(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_1A3DD4100())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DD4120()
{
  if (qword_1E962CB40 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DD417C()
{
  return sub_1A409617C();
}

uint64_t sub_1A3DD41A4(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA7B8();

  return sub_1A3E2C684(a1, a2);
}

uint64_t sub_1A3DD41F0()
{
  return 4;
}

uint64_t sub_1A3DD41FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1A4096F3C();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    sub_1A3DD6150();
    do
    {
      ++v5;
      uint64_t result = sub_1A40960DC();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t _s6Vision21DetectBarcodesRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  CGFloat v3 = *(double *)(a1 + 16);
  CGFloat v4 = *(double *)(a1 + 24);
  CGFloat v5 = *(double *)(a1 + 32);
  CGFloat v6 = *(double *)(a1 + 40);
  int v7 = *(unsigned __int8 *)(a1 + 48);
  int v8 = *(unsigned __int8 *)(a1 + 49);
  int v9 = *(unsigned __int8 *)(a1 + 50);
  int v10 = *(unsigned __int8 *)(a1 + 51);
  uint64_t v22 = *(void *)(a1 + 56);
  int v11 = *(unsigned __int8 *)(a2 + 8);
  CGFloat v12 = *(double *)(a2 + 16);
  CGFloat v13 = *(double *)(a2 + 24);
  CGFloat v14 = *(double *)(a2 + 32);
  CGFloat v15 = *(double *)(a2 + 40);
  int v16 = *(unsigned __int8 *)(a2 + 48);
  int v17 = *(unsigned __int8 *)(a2 + 49);
  int v18 = *(unsigned __int8 *)(a2 + 50);
  int v19 = *(unsigned __int8 *)(a2 + 51);
  char v23 = *(unsigned char *)(a2 + 52);
  char v24 = *(unsigned char *)(a1 + 52);
  uint64_t v21 = *(void *)(a2 + 56);
  if ((sub_1A3DD3CDC(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  if ((v2 ^ v11)) {
    return 0;
  }
  v26.origin.double x = v3;
  v26.origin.double y = v4;
  v26.size.double width = v5;
  v26.size.double height = v6;
  v25.origin.double x = v12;
  v25.origin.double y = v13;
  v25.size.double width = v14;
  v25.size.double height = v15;
  if (!static NormalizedRect.== infix(_:_:)(&v26, &v25)) {
    return 0;
  }
  if (v7 != v16) {
    return 0;
  }
  if ((v8 ^ v17)) {
    return 0;
  }
  if ((v9 ^ v18)) {
    return 0;
  }
  if ((v10 ^ v19)) {
    return 0;
  }
  LOBYTE(v26.origin.x) = v24;
  LOBYTE(v25.origin.x) = v23;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v26, (unsigned __int8 *)&v25)) {
    return 0;
  }

  return sub_1A3C8FF4C(v22, v21);
}

unint64_t sub_1A3DD4408()
{
  unint64_t result = qword_1E95F03A0;
  if (!qword_1E95F03A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F03A0);
  }
  return result;
}

unint64_t sub_1A3DD4460()
{
  unint64_t result = qword_1E95F03A8;
  if (!qword_1E95F03A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F03B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F03A8);
  }
  return result;
}

unint64_t sub_1A3DD44C0()
{
  unint64_t result = qword_1E95F03B8[0];
  if (!qword_1E95F03B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95F03B8);
  }
  return result;
}

unint64_t sub_1A3DD4514(uint64_t a1)
{
  unint64_t result = sub_1A3CCA7B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3DD453C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF438();
  unint64_t result = sub_1A3DD456C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3DD456C()
{
  unint64_t result = qword_1E95F03F0;
  if (!qword_1E95F03F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F03F0);
  }
  return result;
}

unint64_t sub_1A3DD45C4()
{
  unint64_t result = qword_1E95F03F8;
  if (!qword_1E95F03F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F03F8);
  }
  return result;
}

unint64_t sub_1A3DD461C()
{
  unint64_t result = qword_1E95F0400;
  if (!qword_1E95F0400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0400);
  }
  return result;
}

uint64_t sub_1A3DD4670()
{
  return sub_1A3DD6108(&qword_1E95F0408, (void (*)(uint64_t))type metadata accessor for BarcodeObservation);
}

unint64_t sub_1A3DD46B8(uint64_t a1)
{
  unint64_t result = sub_1A3DD34B0();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for DetectBarcodesRequest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectBarcodesRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectBarcodesRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectBarcodesRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectBarcodesRequest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectBarcodesRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest()
{
  return &type metadata for DetectBarcodesRequest;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.Revision()
{
  return &type metadata for DetectBarcodesRequest.Revision;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode()
{
  return &type metadata for DetectBarcodesRequest.LocateMode;
}

unsigned char *_s6Vision21DetectBarcodesRequestV10LocateModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DD4A4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.UnspecifiedCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.UnspecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterOneVerticalCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterOneVerticalCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterOneVerticalThickCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterOneVerticalThickCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterThreeVerticalCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterThreeVerticalCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterThreeVerticalCrossedCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterThreeVerticalCrossedCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterOneHorizontalCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterOneHorizontalCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterOneHorizontalThickCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterOneHorizontalThickCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterThreeHorizontalCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterThreeHorizontalCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterThreeHorizontalCrossedCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterThreeHorizontalCrossedCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterOneEachDirectionCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterOneEachDirectionCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterThreeEachDirectionCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterThreeEachDirectionCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterFiveEachDirectionCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterFiveEachDirectionCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterThreeEachDirectionAndCoverageAndDiagonalsCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterThreeEachDirectionAndCoverageAndDiagonalsCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterThreeVerticalAndCoverageAndDiagonalsCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterThreeVerticalAndCoverageAndDiagonalsCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.CenterThreeHorizontalAndCoverageAndDiagonalsCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.CenterThreeHorizontalAndCoverageAndDiagonalsCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.RegularIntervalHorizontalCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.RegularIntervalHorizontalCodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.LocateMode.RegularIntervalVerticalCodingKeys()
{
  return &type metadata for DetectBarcodesRequest.LocateMode.RegularIntervalVerticalCodingKeys;
}

unsigned char *_s6Vision21DetectBarcodesRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DD4C30);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.Revision.CodingKeys()
{
  return &type metadata for DetectBarcodesRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectBarcodesRequest.Revision.Revision4CodingKeys()
{
  return &type metadata for DetectBarcodesRequest.Revision.Revision4CodingKeys;
}

unint64_t sub_1A3DD4C7C()
{
  unint64_t result = qword_1E962D670[0];
  if (!qword_1E962D670[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962D670);
  }
  return result;
}

unint64_t sub_1A3DD4CD4()
{
  unint64_t result = qword_1E962E980[0];
  if (!qword_1E962E980[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962E980);
  }
  return result;
}

unint64_t sub_1A3DD4D2C()
{
  unint64_t result = qword_1E962EA90;
  if (!qword_1E962EA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962EA90);
  }
  return result;
}

unint64_t sub_1A3DD4D84()
{
  unint64_t result = qword_1E962EA98[0];
  if (!qword_1E962EA98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962EA98);
  }
  return result;
}

unint64_t sub_1A3DD4DDC()
{
  unint64_t result = qword_1E962EB20;
  if (!qword_1E962EB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962EB20);
  }
  return result;
}

unint64_t sub_1A3DD4E34()
{
  unint64_t result = qword_1E962EB28[0];
  if (!qword_1E962EB28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962EB28);
  }
  return result;
}

unint64_t sub_1A3DD4E8C()
{
  unint64_t result = qword_1E962EBB0;
  if (!qword_1E962EBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962EBB0);
  }
  return result;
}

unint64_t sub_1A3DD4EE4()
{
  unint64_t result = qword_1E962EBB8[0];
  if (!qword_1E962EBB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962EBB8);
  }
  return result;
}

unint64_t sub_1A3DD4F3C()
{
  unint64_t result = qword_1E962EC40;
  if (!qword_1E962EC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962EC40);
  }
  return result;
}

unint64_t sub_1A3DD4F94()
{
  unint64_t result = qword_1E962EC48[0];
  if (!qword_1E962EC48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962EC48);
  }
  return result;
}

unint64_t sub_1A3DD4FEC()
{
  unint64_t result = qword_1E962ECD0;
  if (!qword_1E962ECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962ECD0);
  }
  return result;
}

unint64_t sub_1A3DD5044()
{
  unint64_t result = qword_1E962ECD8[0];
  if (!qword_1E962ECD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962ECD8);
  }
  return result;
}

unint64_t sub_1A3DD509C()
{
  unint64_t result = qword_1E962ED60;
  if (!qword_1E962ED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962ED60);
  }
  return result;
}

unint64_t sub_1A3DD50F4()
{
  unint64_t result = qword_1E962ED68[0];
  if (!qword_1E962ED68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962ED68);
  }
  return result;
}

unint64_t sub_1A3DD514C()
{
  unint64_t result = qword_1E962EDF0;
  if (!qword_1E962EDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962EDF0);
  }
  return result;
}

unint64_t sub_1A3DD51A4()
{
  unint64_t result = qword_1E962EDF8[0];
  if (!qword_1E962EDF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962EDF8);
  }
  return result;
}

unint64_t sub_1A3DD51FC()
{
  unint64_t result = qword_1E962EE80;
  if (!qword_1E962EE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962EE80);
  }
  return result;
}

unint64_t sub_1A3DD5254()
{
  unint64_t result = qword_1E962EE88[0];
  if (!qword_1E962EE88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962EE88);
  }
  return result;
}

unint64_t sub_1A3DD52AC()
{
  unint64_t result = qword_1E962EF10;
  if (!qword_1E962EF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962EF10);
  }
  return result;
}

unint64_t sub_1A3DD5304()
{
  unint64_t result = qword_1E962EF18[0];
  if (!qword_1E962EF18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962EF18);
  }
  return result;
}

unint64_t sub_1A3DD535C()
{
  unint64_t result = qword_1E962EFA0;
  if (!qword_1E962EFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962EFA0);
  }
  return result;
}

unint64_t sub_1A3DD53B4()
{
  unint64_t result = qword_1E962EFA8[0];
  if (!qword_1E962EFA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962EFA8);
  }
  return result;
}

unint64_t sub_1A3DD540C()
{
  unint64_t result = qword_1E962F030;
  if (!qword_1E962F030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F030);
  }
  return result;
}

unint64_t sub_1A3DD5464()
{
  unint64_t result = qword_1E962F038[0];
  if (!qword_1E962F038[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F038);
  }
  return result;
}

unint64_t sub_1A3DD54BC()
{
  unint64_t result = qword_1E962F0C0;
  if (!qword_1E962F0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F0C0);
  }
  return result;
}

unint64_t sub_1A3DD5514()
{
  unint64_t result = qword_1E962F0C8[0];
  if (!qword_1E962F0C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F0C8);
  }
  return result;
}

unint64_t sub_1A3DD556C()
{
  unint64_t result = qword_1E962F150;
  if (!qword_1E962F150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F150);
  }
  return result;
}

unint64_t sub_1A3DD55C4()
{
  unint64_t result = qword_1E962F158[0];
  if (!qword_1E962F158[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F158);
  }
  return result;
}

unint64_t sub_1A3DD561C()
{
  unint64_t result = qword_1E962F1E0;
  if (!qword_1E962F1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F1E0);
  }
  return result;
}

unint64_t sub_1A3DD5674()
{
  unint64_t result = qword_1E962F1E8[0];
  if (!qword_1E962F1E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F1E8);
  }
  return result;
}

unint64_t sub_1A3DD56CC()
{
  unint64_t result = qword_1E962F270;
  if (!qword_1E962F270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F270);
  }
  return result;
}

unint64_t sub_1A3DD5724()
{
  unint64_t result = qword_1E962F278;
  if (!qword_1E962F278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F278);
  }
  return result;
}

unint64_t sub_1A3DD577C()
{
  unint64_t result = qword_1E962F300;
  if (!qword_1E962F300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F300);
  }
  return result;
}

unint64_t sub_1A3DD57D4()
{
  unint64_t result = qword_1E962F308[0];
  if (!qword_1E962F308[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F308);
  }
  return result;
}

unint64_t sub_1A3DD582C()
{
  unint64_t result = qword_1E962F390;
  if (!qword_1E962F390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F390);
  }
  return result;
}

unint64_t sub_1A3DD5884()
{
  unint64_t result = qword_1E962F398[0];
  if (!qword_1E962F398[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F398);
  }
  return result;
}

unint64_t sub_1A3DD58DC()
{
  unint64_t result = qword_1E962F420;
  if (!qword_1E962F420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F420);
  }
  return result;
}

unint64_t sub_1A3DD5934()
{
  unint64_t result = qword_1E962F428[0];
  if (!qword_1E962F428[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F428);
  }
  return result;
}

unint64_t sub_1A3DD598C()
{
  unint64_t result = qword_1E962F4B0;
  if (!qword_1E962F4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F4B0);
  }
  return result;
}

unint64_t sub_1A3DD59E4()
{
  unint64_t result = qword_1E962F4B8[0];
  if (!qword_1E962F4B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F4B8);
  }
  return result;
}

unint64_t sub_1A3DD5A3C()
{
  unint64_t result = qword_1E962F540;
  if (!qword_1E962F540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F540);
  }
  return result;
}

unint64_t sub_1A3DD5A94()
{
  unint64_t result = qword_1E962F548[0];
  if (!qword_1E962F548[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F548);
  }
  return result;
}

uint64_t sub_1A3DD5AE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A40B7D00 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A40B7D20 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A40B7D40 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A40B7D60 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A40B7D80 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A40B7DA0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A40B7DC0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B7DE0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A40B7E00 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A40B7E20 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B7E40 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000002FLL && a2 == 0x80000001A40B7E60 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001A40B7E90 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001A40B7EC0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A40B7EF0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A40B7F10)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

uint64_t sub_1A3DD6108(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3DD6150()
{
  unint64_t result = qword_1E95F0410;
  if (!qword_1E95F0410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0410);
  }
  return result;
}

void sub_1A3DD61A8()
{
}

uint64_t static TrackTranslationalImageRegistrationRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static TrackTranslationalImageRegistrationRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t TrackTranslationalImageRegistrationRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3DD623C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD64FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD6278(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD64FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DD62B4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD6550();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DD62F0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DD6550();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TrackTranslationalImageRegistrationRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0420);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0428);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DD64FC();
  sub_1A4096FEC();
  sub_1A3DD6550();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3DD64FC()
{
  unint64_t result = qword_1E962F5E8;
  if (!qword_1E962F5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E962F5E8);
  }
  return result;
}

unint64_t sub_1A3DD6550()
{
  unint64_t result = qword_1E962F5F0[0];
  if (!qword_1E962F5F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962F5F0);
  }
  return result;
}

uint64_t TrackTranslationalImageRegistrationRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t TrackTranslationalImageRegistrationRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0430);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0438);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DD64FC();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3DD6550();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      CGFloat v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *CGFloat v13 = &type metadata for TrackTranslationalImageRegistrationRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DD68D0(void *a1)
{
  return TrackTranslationalImageRegistrationRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3DD68E8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0420);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0428);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DD64FC();
  sub_1A4096FEC();
  sub_1A3DD6550();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t TrackTranslationalImageRegistrationRequest.__allocating_init(_:frameAnalysisSpacing:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  char v9 = a5 & 1;
  uint64_t v10 = swift_allocObject();
  TrackTranslationalImageRegistrationRequest.init(_:frameAnalysisSpacing:)(a1, a2, a3, a4, v9);
  return v10;
}

uint64_t TrackTranslationalImageRegistrationRequest.init(_:frameAnalysisSpacing:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *(void *)v5;
  int v12 = *a1;
  *(unsigned char *)(v5 + 16) = 0;
  uint64_t v13 = v11;
  static NormalizedRect.fullImage.getter(&v25);
  unint64_t v14 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  __n128 v24 = v25;
  uint64_t v15 = v26;
  uint64_t v16 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0448);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 56) = 0;
  *(__n128 *)(v17 + 16) = v24;
  *(void *)(v17 + 32) = v15;
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v14;
  *(void *)(v6 + 48) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0450);
  uint64_t v18 = sub_1A3CEA454();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0458);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(void *)(v19 + 16) = v18;
  *(void *)(v6 + 56) = v19;
  sub_1A4095C6C();
  if (v12 == 1)
  {
    uint64_t v20 = sub_1A3DD84A8(&qword_1E95F0460, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);
    sub_1A3E2C988(v13, v20, v21);
  }
  if (a5)
  {
    a2 = *MEMORY[0x1E4F1FA48];
    LODWORD(a3) = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 8);
    LODWORD(v22) = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 12);
    a4 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  }
  else
  {
    unint64_t v22 = HIDWORD(a3);
  }
  *(void *)(v6 + 20) = a2;
  *(_DWORD *)(v6 + 28) = a3;
  *(_DWORD *)(v6 + 32) = v22;
  *(void *)(v6 + 36) = a4;
  return v6;
}

uint64_t TrackTranslationalImageRegistrationRequest.modelFileBackingStore.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t TrackTranslationalImageRegistrationRequest.modelFileBackingStore.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = v2;
  return result;
}

uint64_t (*TrackTranslationalImageRegistrationRequest.modelFileBackingStore.modify())()
{
  return j__swift_endAccess;
}

void TrackTranslationalImageRegistrationRequest.regionOfInterest.getter(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 48);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 14;
  os_unfair_lock_lock(v3 + 14);
  sub_1A3C8980C(v4, a1);

  os_unfair_lock_unlock(v5);
}

double sub_1A3DD6E14@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 48);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 14;
  os_unfair_lock_lock(v3 + 14);
  sub_1A3C8980C(v4, v8);
  os_unfair_lock_unlock(v5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

void sub_1A3DD6E80(uint64_t a1, uint64_t a2)
{
  char v2 = *(os_unfair_lock_s **)(*(void *)a2 + 48);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 14;
  os_unfair_lock_lock(v2 + 14);
  sub_1A3C8D578(v3);
  os_unfair_lock_unlock(v4);
}

void TrackTranslationalImageRegistrationRequest.regionOfInterest.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 48);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 14;
  os_unfair_lock_lock(v1 + 14);
  sub_1A3C8A1F0(v2);
  os_unfair_lock_unlock(v3);
}

void (*TrackTranslationalImageRegistrationRequest.regionOfInterest.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 48);
  long long v3[4] = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 14;
  os_unfair_lock_lock(v4 + 14);
  sub_1A3C8980C(v5, v3);
  v3[5] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3DD6FE0;
}

void sub_1A3DD6FE0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(*(void *)a1 + 32) + 56));
  uint64_t v2 = (os_unfair_lock_s *)v1[4];
  sub_1A3C8D578((uint64_t)&v2[4]);
  os_unfair_lock_unlock(v2 + 14);
  free(v1);
}

uint64_t TrackTranslationalImageRegistrationRequest.minimumLatencyFrameCount.getter()
{
  return 2;
}

uint64_t TrackTranslationalImageRegistrationRequest.frameAnalysisSpacing.getter()
{
  return *(void *)(v0 + 20);
}

uint64_t sub_1A3DD7084()
{
  uint64_t v0 = type metadata accessor for TrackTranslationalImageRegistrationRequest();
  uint64_t v1 = sub_1A3DD84A8(&qword_1E95F0460, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);
  uint64_t result = sub_1A3E2CFDC(v0, v1);
  qword_1E962F5D8 = result;
  return result;
}

uint64_t static TrackTranslationalImageRegistrationRequest.supportedRevisions.getter()
{
  if (qword_1E962F5D0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void TrackTranslationalImageRegistrationRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 240;
}

uint64_t type metadata accessor for TrackTranslationalImageRegistrationRequest()
{
  uint64_t result = qword_1E962FD80;
  if (!qword_1E962FD80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

int *sub_1A3DD71A8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F04F8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(7, 0, 11);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(7, 0, 11);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(7, 0, 11);
  uint64_t v6 = sub_1A3D09D5C(v5);
  uint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for TrackTranslationalImageRegistrationRequest.Revision, v0 + 32);
  qword_1E9643DA8 = v0;
  return result;
}

uint64_t TrackTranslationalImageRegistrationRequest.deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision42TrackTranslationalImageRegistrationRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t TrackTranslationalImageRegistrationRequest.__deallocating_deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision42TrackTranslationalImageRegistrationRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t TrackTranslationalImageRegistrationRequest.hashValue.getter()
{
  return sub_1A4096F7C();
}

void sub_1A3DD7430(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)v1 + 48);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 14;
  os_unfair_lock_lock(v3 + 14);
  sub_1A3C8980C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_1A3DD74A0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 48);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 14;
  os_unfair_lock_lock(v1 + 14);
  sub_1A3C8D578(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t (*sub_1A3DD7504(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TrackTranslationalImageRegistrationRequest.regionOfInterest.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3DD7560()
{
  return 2;
}

uint64_t sub_1A3DD7568()
{
  return *(void *)(*(void *)v0 + 20);
}

uint64_t sub_1A3DD7580@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A3DD84A8(&qword_1E95F0460, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3DD7604(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A3DD84A8(&qword_1E95F0460, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3DD7688(_WORD *a1@<X8>)
{
  *a1 = 240;
}

uint64_t sub_1A3DD7694@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_1A3DD76DC(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_1A3DD7720(uint64_t a1)
{
  uint64_t v2 = sub_1A3DD84A8(&qword_1E95F0460, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3DD778C(uint64_t a1, uint64_t a2)
{
  sub_1A3DD84A8(&qword_1E95F04E0, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);

  return StatefulRequest.hash(into:)(a1, a2);
}

uint64_t sub_1A3DD7808(uint64_t a1, uint64_t a2)
{
  sub_1A3DD84A8(&qword_1E95F04E0, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);

  return static StatefulRequest.== infix(_:_:)(a1, a2, v2);
}

uint64_t sub_1A3DD7888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for VisionResult(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A3DD8194(a1, (uint64_t)v8, type metadata accessor for VisionResult);
  if (swift_getEnumCaseMultiPayload() == 28)
  {
    swift_release();
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD40);
    return sub_1A3CEB6C4((uint64_t)&v8[*(int *)(v9 + 48)], a2);
  }
  else
  {
    sub_1A3C8B544((uint64_t)v8);
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    strcpy((char *)v15, "VisionResult ");
    HIWORD(v15[1]) = -4864;
    sub_1A3DD84A8(&qword_1E95F0470, (void (*)(uint64_t))type metadata accessor for VisionResult);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    v14[1] = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0478);
    sub_1A409619C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    uint64_t v11 = v15[0];
    uint64_t v12 = v15[1];
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v13 = v11;
    *(void *)(v13 + 8) = v12;
    *(_DWORD *)(v13 + 16) = 0;
    *(unsigned char *)(v13 + 20) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1A3DD7A9C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t (*sub_1A3DD7ABC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 48);
  a1[1] = v3;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 14;
  os_unfair_lock_lock(v3 + 14);
  sub_1A3DD7A9C(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1A3DD7B48;
}

uint64_t sub_1A3DD7B48(uint64_t a1, char a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 8);
  uint64_t v3 = v2 + 14;
  uint64_t v4 = (uint64_t)&v2[4];
  if (a2)
  {
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v3);
    sub_1A3DD81FC(v4);
    os_unfair_lock_unlock(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v2 + 14);
    sub_1A3DD81FC(v4);
    os_unfair_lock_unlock(v3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3DD7BFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Vision42TrackTranslationalImageRegistrationRequest_uuid;
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1A3DD7C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3DD7888(a1, a2);
}

uint64_t sub_1A3DD7C88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (uint64_t)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD40) + 48);
  *a2 = v2;
  sub_1A3DD8194(a1, v5, (uint64_t (*)(void))type metadata accessor for ImageTranslationAlignmentObservation);
  type metadata accessor for VisionResult(0);
  swift_storeEnumTagMultiPayload();

  return swift_retain();
}

uint64_t sub_1A3DD7D14()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 48);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 14;
  os_unfair_lock_lock(v1 + 14);
  sub_1A3DD7A9C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A3DD7D78()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 48);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 14;
  os_unfair_lock_lock(v1 + 14);
  sub_1A3DD81FC(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A3DD7DE4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1A3DD7ABC(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3DD7E40()
{
  if (qword_1E962F5E0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DD7E9C()
{
  return 4;
}

uint64_t sub_1A3DD7EAC(uint64_t a1)
{
  return sub_1A3C8DE60(a1) & 1;
}

size_t _s6Vision42TrackTranslationalImageRegistrationRequestC28supportedComputeStageDevicesSDyAA0hI0OSay6CoreML15MLComputeDeviceOGGvg_0()
{
  uint64_t v14 = sub_1A4095F8C();
  uint64_t v0 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF5C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  *(unsigned char *)(inited + 32) = 0;
  id v4 = objc_msgSend(self, sel_allCPUComputeDevices);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF590);
  unint64_t v5 = sub_1A409630C();

  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_14:
    *(void *)(inited + 40) = v9;
    return sub_1A3CBFB84(inited);
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A4096BFC();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v15 = MEMORY[0x1E4FBC860];
  size_t result = sub_1A3CC0EA8(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = inited;
    uint64_t v8 = 0;
    uint64_t v9 = v15;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        MEMORY[0x1A6254720](v8, v5);
      }
      else {
        swift_unknownObjectRetain();
      }
      sub_1A4095F7C();
      uint64_t v15 = v9;
      unint64_t v11 = *(void *)(v9 + 16);
      unint64_t v10 = *(void *)(v9 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1A3CC0EA8(v10 > 1, v11 + 1, 1);
        uint64_t v9 = v15;
      }
      ++v8;
      *(void *)(v9 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v0 + 32))(v9+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(void *)(v0 + 72) * v11, v2, v14);
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    uint64_t inited = v13;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3DD8194(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3DD81FC(uint64_t a1)
{
  return sub_1A3DD8A80(a1);
}

unint64_t sub_1A3DD8218()
{
  unint64_t result = qword_1E95F0480;
  if (!qword_1E95F0480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0480);
  }
  return result;
}

uint64_t sub_1A3DD826C(uint64_t a1)
{
  uint64_t result = sub_1A3DD84A8(&qword_1E95ECDF8, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3DD82C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3DD843C(a1, a2, a3, &qword_1E95ECF90, (uint64_t)&protocol conformance descriptor for TrackTranslationalImageRegistrationRequest, &qword_1E95F0468);
}

uint64_t sub_1A3DD8300()
{
  return sub_1A3DD84A8(&qword_1E95F04C0, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);
}

uint64_t sub_1A3DD8348(uint64_t a1)
{
  uint64_t result = sub_1A3DD84A8(&qword_1E95F04C8, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3DD83A4()
{
  unint64_t result = qword_1E95F04D0;
  if (!qword_1E95F04D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F0450);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F04D0);
  }
  return result;
}

uint64_t sub_1A3DD8400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3DD843C(a1, a2, a3, &qword_1E95F0460, (uint64_t)&unk_1A4102998, &qword_1E95F04E0);
}

uint64_t sub_1A3DD843C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  *(void *)(a1 + 8) = sub_1A3DD84A8(a4, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);
  uint64_t result = sub_1A3DD84A8(a6, (void (*)(uint64_t))type metadata accessor for TrackTranslationalImageRegistrationRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A3DD84A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3DD84F4()
{
  unint64_t result = qword_1E95F04E8;
  if (!qword_1E95F04E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F04E8);
  }
  return result;
}

uint64_t sub_1A3DD8548()
{
  return type metadata accessor for TrackTranslationalImageRegistrationRequest();
}

uint64_t sub_1A3DD8550()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for TrackTranslationalImageRegistrationRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrackTranslationalImageRegistrationRequest);
}

uint64_t dispatch thunk of TrackTranslationalImageRegistrationRequest.__allocating_init(_:frameAnalysisSpacing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5 + 128))(a1, a2, a3, a4, a5 & 1);
}

ValueMetadata *type metadata accessor for TrackTranslationalImageRegistrationRequest.Revision()
{
  return &type metadata for TrackTranslationalImageRegistrationRequest.Revision;
}

uint64_t destroy for TrackTranslationalImageRegistrationRequest.Configuration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrackTranslationalImageRegistrationRequest.Configuration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TrackTranslationalImageRegistrationRequest.Configuration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TrackTranslationalImageRegistrationRequest.Configuration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrackTranslationalImageRegistrationRequest.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrackTranslationalImageRegistrationRequest.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackTranslationalImageRegistrationRequest.Configuration()
{
  return &type metadata for TrackTranslationalImageRegistrationRequest.Configuration;
}

unsigned char *_s6Vision42TrackTranslationalImageRegistrationRequestC8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DD8880);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackTranslationalImageRegistrationRequest.Revision.CodingKeys()
{
  return &type metadata for TrackTranslationalImageRegistrationRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for TrackTranslationalImageRegistrationRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for TrackTranslationalImageRegistrationRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3DD88CC()
{
  unint64_t result = qword_1E962FF90[0];
  if (!qword_1E962FF90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E962FF90);
  }
  return result;
}

unint64_t sub_1A3DD8924()
{
  unint64_t result = qword_1E96300A0;
  if (!qword_1E96300A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96300A0);
  }
  return result;
}

unint64_t sub_1A3DD897C()
{
  unint64_t result = qword_1E96300A8[0];
  if (!qword_1E96300A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96300A8);
  }
  return result;
}

unint64_t sub_1A3DD89D4()
{
  unint64_t result = qword_1E9630130;
  if (!qword_1E9630130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9630130);
  }
  return result;
}

unint64_t sub_1A3DD8A2C()
{
  unint64_t result = qword_1E9630138[0];
  if (!qword_1E9630138[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9630138);
  }
  return result;
}

uint64_t sub_1A3DD8A80(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1A3DD8AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1A3DD8B2C(a1, a2);
  return v4;
}

uint64_t sub_1A3DD8B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v118 = sub_1A409675C();
  uint64_t v116 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  uint64_t v117 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1A409674C();
  MEMORY[0x1F4188790](v114);
  uint64_t v115 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A4095FDC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v113 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFF00);
  MEMORY[0x1F4188790](v9 - 8);
  char v127 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A4095F8C();
  uint64_t v128 = *(void *)(v11 - 8);
  uint64_t v129 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v120 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v125 = a1;
  sub_1A3C85678(a1, (uint64_t)&v131);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBFD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0500);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v15 = v130[0];
    uint64_t v14 = v130[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v131 = v15;
    uint64_t v17 = *(void *)(v14 + 16);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    uint64_t v19 = swift_retain();
    uint64_t v20 = v18(v19, ObjectType, v17);
    uint64_t v121 = a2;
    swift_release();
    uint64_t v122 = v2;
    *(void *)(v2 + 24) = v20;
    uint64_t v21 = sub_1A409617C();
    uint64_t v23 = v22;
    uint64_t v123 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 40);
    uint64_t v124 = v14 + 40;
    uint64_t v24 = v123(ObjectType, v14);
    uint64_t v25 = MEMORY[0x1E4FBB1A0];
    uint64_t v133 = MEMORY[0x1E4FBB1A0];
    uint64_t v131 = v24;
    uint64_t v132 = v26;
    swift_beginAccess();
    sub_1A3C8BC40((uint64_t)&v131, v21, v23);
    swift_endAccess();
    uint64_t v27 = sub_1A409617C();
    uint64_t v29 = v28;
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(ObjectType, v14);
    uint64_t v133 = v25;
    uint64_t v131 = v30;
    uint64_t v132 = v31;
    swift_beginAccess();
    sub_1A3C8BC40((uint64_t)&v131, v27, v29);
    swift_endAccess();
    uint64_t v134 = sub_1A409617C();
    uint64_t v33 = v32;
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 32);
    char v35 = (void *)v34(ObjectType, v14);
    id v36 = objc_msgSend(v35, sel_uuid);

    uint64_t v133 = sub_1A4095C7C();
    __swift_allocate_boxed_opaque_existential_1(&v131);
    sub_1A4095C5C();

    swift_beginAccess();
    sub_1A3C8BC40((uint64_t)&v131, v134, v33);
    swift_endAccess();
    uint64_t v37 = sub_1A409617C();
    uint64_t v39 = v38;
    uint64_t v40 = ObjectType;
    uint64_t v41 = (void *)v34(ObjectType, v14);
    objc_msgSend(v41, sel_boundingBox);
    CGFloat v43 = v42;
    CGFloat v45 = v44;
    CGFloat v47 = v46;
    CGFloat v49 = v48;

    v135.origin.double x = v43;
    v135.origin.double y = v45;
    v135.size.double width = v47;
    v135.size.double height = v49;
    CFDictionaryRef DictionaryRepresentation = CGRectCreateDictionaryRepresentation(v135);
    type metadata accessor for CFDictionary(0);
    uint64_t v133 = v51;
    uint64_t v131 = (uint64_t)DictionaryRepresentation;
    swift_beginAccess();
    sub_1A3C8BC40((uint64_t)&v131, v37, v39);
    swift_endAccess();
    uint64_t v119 = @"VNTrackingOption_CVPixelBufferFormat";
    uint64_t v52 = sub_1A409617C();
    uint64_t v54 = v53;
    uint64_t v133 = MEMORY[0x1E4FBC4C0];
    LODWORD(v131) = 875704422;
    swift_beginAccess();
    sub_1A3C8BC40((uint64_t)&v131, v52, v54);
    swift_endAccess();
    uint64_t v134 = v15;
    uint64_t v131 = v15;
    LOBYTE(v130[0]) = 0;
    uint64_t v55 = (uint64_t)v127;
    (*(void (**)(void *, uint64_t))(*(void *)(*(void *)(*(void *)(v14 + 8) + 8) + 8) + 40))(v130, ObjectType);
    uint64_t v57 = v128;
    uint64_t v56 = v129;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v55, 1, v129) == 1)
    {
      sub_1A3CA2EB8(v55, (uint64_t *)&unk_1E95EFF00);
      uint64_t v58 = sub_1A409617C();
      uint64_t v60 = v59;
      id v61 = objc_msgSend(self, sel_defaultDevice);
      id v62 = objc_msgSend(objc_allocWithZone((Class)VNProcessingDeviceComputeDeviceBridge), sel_initWithProcessingDevice_, v61);

      id v63 = objc_msgSend(v62, sel_computeDevice);
      uint64_t v133 = swift_getObjectType();
      uint64_t v131 = (uint64_t)v63;
      swift_beginAccess();
      sub_1A3C8BC40((uint64_t)&v131, v58, v60);
      swift_endAccess();
    }
    else
    {
      uint64_t v64 = v120;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v120, v55, v56);
      uint64_t v65 = sub_1A409617C();
      uint64_t v67 = v66;
      uint64_t v68 = sub_1A4095F5C();
      uint64_t v133 = swift_getObjectType();
      uint64_t v131 = v68;
      swift_beginAccess();
      sub_1A3C8BC40((uint64_t)&v131, v65, v67);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v64, v56);
    }
    uint64_t v69 = v123;
    uint64_t v70 = v123(v40, v14);
    uint64_t v72 = v71;
    if (v70 == sub_1A409617C() && v72 == v73)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_9;
    }
    char v74 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v74)
    {
LABEL_9:
      uint64_t v75 = sub_1A409617C();
      uint64_t v77 = v76;
      uint64_t v78 = self;
      id v79 = objc_msgSend(v78, sel_rpnTrackerInitModelName);
      uint64_t v80 = sub_1A409617C();
      uint64_t v82 = v81;

      uint64_t v83 = MEMORY[0x1E4FBB1A0];
      uint64_t v133 = MEMORY[0x1E4FBB1A0];
      uint64_t v131 = v80;
      uint64_t v132 = v82;
      swift_beginAccess();
      sub_1A3C8BC40((uint64_t)&v131, v75, v77);
      swift_endAccess();
      uint64_t v84 = sub_1A409617C();
      uint64_t v86 = v85;
      id v87 = objc_msgSend(v78, sel_rpnTrackerTrackModelName);
      uint64_t v88 = sub_1A409617C();
      uint64_t v90 = v89;

      uint64_t v133 = v83;
      uint64_t v131 = v88;
      uint64_t v132 = v90;
      swift_beginAccess();
      sub_1A3C8BC40((uint64_t)&v131, v84, v86);
      swift_endAccess();
      uint64_t v91 = swift_bridgeObjectRetain();
      uint64_t v92 = v126;
      id v93 = sub_1A3DE47D4(v91);
      if (v92)
      {
        uint64_t v94 = v122;
        swift_release();
        swift_unknownObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v125);
      }
      else
      {
        uint64_t v95 = v93;
        swift_bridgeObjectRelease();
        uint64_t v96 = sub_1A409617C();
        uint64_t v98 = v97;
        uint64_t v133 = sub_1A3C8C73C(0, &qword_1E95F0528);
        uint64_t v131 = (uint64_t)v95;
        swift_beginAccess();
        id v99 = v95;
        sub_1A3C8BC40((uint64_t)&v131, v96, v98);
        swift_endAccess();
        uint64_t v100 = sub_1A409617C();
        uint64_t v102 = v101;
        uint64_t v133 = MEMORY[0x1E4FBC4C0];
        LODWORD(v131) = 1111970369;
        swift_beginAccess();
        sub_1A3C8BC40((uint64_t)&v131, v100, v102);
        swift_endAccess();

        swift_unknownObjectRelease();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1(v125);
        return v122;
      }
      return v94;
    }
    uint64_t v103 = v69(v40, v14);
    uint64_t v105 = v104;
    if (v103 == sub_1A409617C() && v105 == v106)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v107 = sub_1A4096E5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v107 & 1) == 0)
      {
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_18;
      }
    }
    uint64_t v108 = sub_1A409617C();
    uint64_t v110 = v109;
    uint64_t v111 = sub_1A3C8C73C(0, &qword_1E95F0508);
    sub_1A4095FCC();
    uint64_t v131 = MEMORY[0x1E4FBC860];
    sub_1A3DD97A0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0518);
    sub_1A3DD97F8();
    sub_1A40969DC();
    (*(void (**)(char *, void, uint64_t))(v116 + 104))(v117, *MEMORY[0x1E4FBCC58], v118);
    uint64_t v112 = sub_1A409676C();
    uint64_t v133 = v111;
    uint64_t v131 = v112;
    swift_beginAccess();
    sub_1A3C8BC40((uint64_t)&v131, v108, v110);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_release();
LABEL_18:
    __swift_destroy_boxed_opaque_existential_1(v125);
    return v122;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A3DD97A0()
{
  unint64_t result = qword_1E95F0510;
  if (!qword_1E95F0510)
  {
    sub_1A409674C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0510);
  }
  return result;
}

unint64_t sub_1A3DD97F8()
{
  unint64_t result = qword_1E95F0520;
  if (!qword_1E95F0520)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F0518);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0520);
  }
  return result;
}

uint64_t sub_1A3DD9854(uint64_t a1)
{
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v1 + 96))();
  if (!*(void *)(v4 + 16))
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A3C85678(v4 + 32, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_8:
    uint64_t result = sub_1A3CA2EB8((uint64_t)&v13, &qword_1E95ED340);
    __break(1u);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0500);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t ObjectType = swift_getObjectType();
  MEMORY[0x1F4188790](ObjectType);
  v11[8] = a1;
  v11[9] = v1;
  v11[10] = v11[12];
  v11[11] = v12;
  MEMORY[0x1F4188790](v7);
  _OWORD v11[2] = v8;
  v11[3] = v12;
  v11[4] = sub_1A3DD9A1C;
  v11[5] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE120);
  sub_1A3C8DBDC((uint64_t)sub_1A3DDA088, (uint64_t)v11, ObjectType, v10, *(void *)(v12 + 8), (uint64_t)&v13);
  uint64_t result = swift_unknownObjectRelease();
  if (!v2) {
    return v13;
  }
  return result;
}

uint64_t sub_1A3DD9A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[2];
  uint64_t v5 = v9;
  uint64_t v10 = (*(uint64_t (**)(void))(*(void *)v9 + 120))();
  if (!v3)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v44 = v7;
    uint64_t v12 = sub_1A409617C();
    uint64_t v50 = v8;
    uint64_t v14 = v13;
    id v15 = objc_msgSend(v11, sel_width);
    uint64_t v48 = MEMORY[0x1E4FBB550];
    v47[0] = v15;
    uint64_t v16 = *(uint64_t (**)(unsigned char *))(*(void *)v6 + 136);
    uint64_t v17 = (void (*)(unsigned char *, void))v16(v46);
    sub_1A3C8BC40((uint64_t)v47, v12, v14);
    v17(v46, 0);
    uint64_t v18 = sub_1A409617C();
    uint64_t v20 = v19;
    CGFloat v45 = v11;
    id v21 = objc_msgSend(v11, sel_height);
    uint64_t v48 = MEMORY[0x1E4FBB550];
    v47[0] = v21;
    uint64_t v22 = (void (*)(unsigned char *, void))v16(v46);
    sub_1A3C8BC40((uint64_t)v47, v18, v20);
    v22(v46, 0);
    uint64_t v23 = v50;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v25 = (*(uint64_t (**)(void))(*(void *)v6 + 120))();
    uint64_t v26 = swift_getObjectType();
    uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v26, v23);
    uint64_t v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 40))(v25, v27, v28, ObjectType);
    uint64_t v9 = v44;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = v26;
    if (objc_msgSend(v30, sel_isTracking))
    {
      v47[0] = 0;
      uint64_t v31 = v30;
      uint64_t v32 = v30;
      uint64_t v33 = v45;
      id v34 = objc_msgSend(v31, sel_trackInFrame_error_, v45, v47);
      char v35 = (void *)v47[0];
      if (v34)
      {
        id v36 = v34;
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v37 = (void *)(*(uint64_t (**)(uint64_t))(v50 + 32))(v26);
      v47[0] = 0;
      uint64_t v38 = v30;
      uint64_t v32 = v30;
      uint64_t v33 = v45;
      id v36 = objc_msgSend(v38, sel_setTrackedObjects_inFrame_error_, v37, v45, v47);

      char v35 = (void *)v47[0];
      if (v36)
      {
LABEL_8:
        uint64_t v39 = sub_1A409630C();
        id v40 = v35;

        if (*(void *)(v39 + 16))
        {
          v47[0] = v44;
          sub_1A3C7D648(v5 + 24, (uint64_t)v49);
          (*(void (**)(uint64_t, unsigned char *, uint64_t, void))(*(void *)(v50 + 16) + 32))(v39, v49, v43, *(void *)(v50 + 16));
          swift_bridgeObjectRelease();
          swift_getAssociatedTypeWitness();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC080);
          uint64_t v42 = sub_1A4096B9C();
          swift_bridgeObjectRelease();
          uint64_t v9 = sub_1A3DD9EA8(v42);

          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();

          return MEMORY[0x1E4FBC860];
        }
        return v9;
      }
    }
    id v41 = v35;
    sub_1A4095AEC();

    swift_willThrow();
  }
  return v9;
}

uint64_t sub_1A3DD9EA8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1A3C84648(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v10;
    do
    {
      sub_1A3C85678(v4, (uint64_t)&v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC080);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A3C84648(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A3C84648((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1A3C856F4(&v9, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A3DD9FD8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t result = a2(a1, AssociatedConformanceWitness);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1A3DDA088@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A3DD9FD8(a1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), a2);
}

uint64_t sub_1A3DDA0A8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_1A3DDA0CC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

void (*sub_1A3DDA0F0(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 112))();
  return sub_1A3C8B9D4;
}

uint64_t sub_1A3DDA168()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1A3DDA18C()
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 160))();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_1A3D65714(v3, v1, v2);
}

uint64_t sub_1A3DDA248()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1A3DDA270(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A3C9FEEC;
  return sub_1A3D28EA4(a1, a2, (uint64_t)&off_1EF746D80);
}

uint64_t type metadata accessor for TrackingOperation()
{
  return self;
}

BOOL static HumanHandPoseObservation.Chirality.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HumanHandPoseObservation.Chirality.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3DDA388(uint64_t a1)
{
  unint64_t v2 = sub_1A3DDA794();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DDA3C4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DDA794();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DDA400(uint64_t a1)
{
  unint64_t v2 = sub_1A3DDA83C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DDA43C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DDA83C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DDA478(uint64_t a1)
{
  unint64_t v2 = sub_1A3DDA7E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DDA4B4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DDA7E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HumanHandPoseObservation.Chirality.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0548);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0550);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0558);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DDA794();
  sub_1A4096FEC();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3DDA7E8();
    uint64_t v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3DDA83C();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_1A3DDA794()
{
  unint64_t result = qword_1E96301D0;
  if (!qword_1E96301D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96301D0);
  }
  return result;
}

unint64_t sub_1A3DDA7E8()
{
  unint64_t result = qword_1E96301D8;
  if (!qword_1E96301D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96301D8);
  }
  return result;
}

unint64_t sub_1A3DDA83C()
{
  unint64_t result = qword_1E96301E0;
  if (!qword_1E96301E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96301E0);
  }
  return result;
}

uint64_t HumanHandPoseObservation.Chirality.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t HumanHandPoseObservation.Chirality.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0560);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0568);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0570);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DDA794();
  uint64_t v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    void *v22 = &type metadata for HumanHandPoseObservation.Chirality;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3DDA7E8();
    uint64_t v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3DDA83C();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A3DDAD30@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return HumanHandPoseObservation.Chirality.init(from:)(a1, a2);
}

uint64_t sub_1A3DDAD48(void *a1)
{
  return HumanHandPoseObservation.Chirality.encode(to:)(a1);
}

void HumanHandPoseObservation.chirality.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t HumanHandPoseObservation.allJoints(in:)(char *a1)
{
  char v4 = *a1;
  uint64_t v1 = type metadata accessor for HumanHandPoseObservation();
  uint64_t v2 = sub_1A3DDAEA4(&qword_1E95F0578, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  return sub_1A3D65800((uint64_t)&v4, v1, v2);
}

uint64_t type metadata accessor for HumanHandPoseObservation()
{
  uint64_t result = qword_1E9630D70;
  if (!qword_1E9630D70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id HumanHandPoseObservation.keypoints.getter()
{
  uint64_t v0 = type metadata accessor for HumanHandPoseObservation();
  uint64_t v1 = sub_1A3DDAEA4(&qword_1E95F0580, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  return sub_1A3D2BE94(v0, v1);
}

uint64_t sub_1A3DDAEA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HumanHandPoseObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HumanHandPoseObservation() + 20);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

float HumanHandPoseObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for HumanHandPoseObservation() + 24));
}

__n128 HumanHandPoseObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HumanHandPoseObservation() + 28);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

unint64_t HumanHandPoseObservation.description.getter()
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for HumanHandPoseObservation();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  if (*v0 != 2)
  {
    sub_1A409621C();
    sub_1A4096BAC();
    sub_1A409621C();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = sub_1A3DDAEA4(&qword_1E95F0588, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  sub_1A3D8AC8C(v1, (uint64_t)&off_1EF74B0E0, v2);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  swift_bridgeObjectRetain();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000024;
}

uint64_t HumanHandPoseObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for HumanHandPoseObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

Vision::HumanHandPoseObservation::JointName_optional __swiftcall HumanHandPoseObservation.JointName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A4096E7C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 3;
  switch(v3)
  {
    case 0:
      goto LABEL_5;
    case 1:
      char v5 = 1;
      goto LABEL_5;
    case 2:
      char v5 = 2;
LABEL_5:
      char v6 = v5;
      break;
    case 3:
      break;
    case 4:
      char v6 = 4;
      break;
    case 5:
      char v6 = 5;
      break;
    case 6:
      char v6 = 6;
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    default:
      char v6 = 21;
      break;
  }
  char *v2 = v6;
  return result;
}

uint64_t HumanHandPoseObservation.JointName.rawValue.getter()
{
  uint64_t result = 0x706954626D756874;
  switch(*v0)
  {
    case 1:
      return 0x5049626D756874;
    case 2:
      return 0x504D626D756874;
    case 3:
      return 0x434D43626D756874;
    case 4:
      return 0x7069547865646E69;
    case 5:
      return 0x5049447865646E69;
    case 6:
      return 0x5049507865646E69;
    case 7:
      return 0x50434D7865646E69;
    case 8:
      unsigned int v2 = 1684302189;
      return v2 | 0x6954656C00000000;
    case 9:
      unsigned int v3 = 1684302189;
      goto LABEL_20;
    case 0xA:
      unsigned int v4 = 1684302189;
      goto LABEL_22;
    case 0xB:
      unsigned int v5 = 1684302189;
      goto LABEL_24;
    case 0xC:
      return 0x706954676E6972;
    case 0xD:
      return 0x504944676E6972;
    case 0xE:
      return 0x504950676E6972;
    case 0xF:
      return 0x50434D676E6972;
    case 0x10:
      unsigned int v2 = 1953786220;
      return v2 | 0x6954656C00000000;
    case 0x11:
      unsigned int v3 = 1953786220;
LABEL_20:
      uint64_t result = v3 | 0x4944656C00000000;
      break;
    case 0x12:
      unsigned int v4 = 1953786220;
LABEL_22:
      uint64_t result = v4 | 0x4950656C00000000;
      break;
    case 0x13:
      unsigned int v5 = 1953786220;
LABEL_24:
      uint64_t result = v5 | 0x434D656C00000000;
      break;
    case 0x14:
      uint64_t result = 0x7473697277;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3DDB5C4()
{
  return sub_1A3DDB5D0();
}

uint64_t sub_1A3DDB5D0()
{
  uint64_t v0 = HumanHandPoseObservation.JointName.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == HumanHandPoseObservation.JointName.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A4096E5C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A3DDB668(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x626D756874;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x626D756874;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6E69467865646E69;
      unint64_t v3 = 0xEB00000000726567;
      break;
    case 2:
      unsigned int v6 = 1953786220;
      goto LABEL_5;
    case 3:
      unsigned int v6 = 1684302189;
LABEL_5:
      uint64_t v5 = v6 | 0x6946656C00000000;
      unint64_t v3 = 0xEC0000007265676ELL;
      break;
    case 4:
      uint64_t v5 = 0x676E6946676E6972;
      unint64_t v3 = 0xEA00000000007265;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEB00000000726567;
      if (v5 == 0x6E69467865646E69) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 2:
      unint64_t v7 = 0xEC0000007265676ELL;
      if (v5 != 0x6946656C7474696CLL) {
        goto LABEL_17;
      }
      goto LABEL_14;
    case 3:
      uint64_t v2 = 0x6946656C6464696DLL;
      unint64_t v7 = 0xEC0000007265676ELL;
      goto LABEL_13;
    case 4:
      unint64_t v7 = 0xEA00000000007265;
      if (v5 != 0x676E6946676E6972) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_17:
      }
        char v8 = sub_1A4096E5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

Vision::HumanHandPoseObservation::JointName_optional sub_1A3DDB850(Swift::String *a1)
{
  return HumanHandPoseObservation.JointName.init(rawValue:)(*a1);
}

uint64_t sub_1A3DDB85C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HumanHandPoseObservation.JointName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A3DDB884()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DDB8EC()
{
  HumanHandPoseObservation.JointName.rawValue.getter();
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3DDB950()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DDB9B4()
{
  return sub_1A40962CC();
}

uint64_t sub_1A3DDBA14()
{
  return sub_1A40962AC();
}

Vision::HumanHandPoseObservation::JointsGroupName_optional __swiftcall HumanHandPoseObservation.JointsGroupName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A4096C5C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

void *static HumanHandPoseObservation.JointsGroupName.allCases.getter()
{
  return &unk_1EF74A9F0;
}

uint64_t HumanHandPoseObservation.JointsGroupName.rawValue.getter()
{
  uint64_t result = 0x626D756874;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E69467865646E69;
      break;
    case 2:
      unsigned int v2 = 1953786220;
      goto LABEL_5;
    case 3:
      unsigned int v2 = 1684302189;
LABEL_5:
      uint64_t result = v2 | 0x6946656C00000000;
      break;
    case 4:
      uint64_t result = 0x676E6946676E6972;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3DDBB7C(unsigned __int8 *a1, char *a2)
{
  return sub_1A3DDB668(*a1, *a2);
}

Vision::HumanHandPoseObservation::JointsGroupName_optional sub_1A3DDBB88(Swift::String *a1)
{
  return HumanHandPoseObservation.JointsGroupName.init(rawValue:)(*a1);
}

void sub_1A3DDBB94(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x626D756874;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000726567;
      uint64_t v3 = 0x6E69467865646E69;
      goto LABEL_3;
    case 2:
      unsigned int v4 = 1953786220;
      goto LABEL_6;
    case 3:
      unsigned int v4 = 1684302189;
LABEL_6:
      *a1 = v4 | 0x6946656C00000000;
      a1[1] = 0xEC0000007265676ELL;
      break;
    case 4:
      *a1 = 0x676E6946676E6972;
      a1[1] = 0xEA00000000007265;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_1A3DDBC50(void *a1@<X8>)
{
  *a1 = &unk_1EF74AB40;
}

uint64_t sub_1A3DDBC60()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DDBD5C()
{
  sub_1A40961CC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3DDBE40()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DDBF3C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            return 1;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    unsigned __int8 v14 = *(unsigned char *)(*(void *)(v2 + 48) + v10);
    swift_bridgeObjectRetain();
    sub_1A3DDE508(v14);
    if ((v15 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    sub_1A3C97B1C();
    char v16 = sub_1A409612C();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t HumanHandPoseObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DDC1D0(uint64_t a1)
{
  uint64_t v2 = sub_1A3DDAEA4(&qword_1E95F0578, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);

  return sub_1A3D65D74(a1, v2);
}

uint64_t sub_1A3DDC23C()
{
  sub_1A3DDAEA4(&qword_1E95F0578, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);

  return sub_1A3D65E58();
}

uint64_t sub_1A3DDC2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3DDAEA4(&qword_1E95F0578, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);

  return sub_1A3D65728(a1, a2, v4);
}

uint64_t sub_1A3DDC32C(char *a1, uint64_t a2)
{
  char v5 = *a1;
  uint64_t v3 = sub_1A3DDAEA4(&qword_1E95F0578, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  return sub_1A3D65800((uint64_t)&v5, a2, v3);
}

uint64_t sub_1A3DDC3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3DDAEA4(&qword_1E95F0588, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

void *sub_1A3DDC424(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = type metadata accessor for HumanHandPoseObservation();
  uint64_t result = 0;
  unsigned int v5 = *(unsigned __int16 *)(v1 + *(int *)(v3 + 32));
  if (v5 <= 0xFFF7)
  {
    if (v5 >> 3 == 14)
    {
      uint64_t result = &unk_1EF74AC08;
      switch(v2)
      {
        case 1:
          uint64_t result = &unk_1EF74AB68;
          break;
        case 2:
          uint64_t result = &unk_1EF74AB90;
          break;
        case 3:
          uint64_t result = &unk_1EF74ABB8;
          break;
        case 4:
          uint64_t result = &unk_1EF74ABE0;
          break;
        default:
          return result;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A3DDC4F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DDC500()
{
  uint64_t v1 = 0x74696C6172696863;
  if (*v0 != 1) {
    uint64_t v1 = 0x746176726573626FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746E696F4A6C6C61;
  }
}

uint64_t sub_1A3DDC568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DDF88C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DDC590(uint64_t a1)
{
  unint64_t v2 = sub_1A3DDF52C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DDC5CC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DDF52C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HumanHandPoseObservation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  uint64_t v20 = v6;
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0598);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DDF52C();
  sub_1A4096FEC();
  uint64_t v13 = type metadata accessor for HumanHandPoseObservation();
  unsigned __int8 v14 = v3;
  uint64_t v25 = *(void *)&v3[*(int *)(v13 + 36)];
  char v24 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F05A0);
  sub_1A3DDF69C(&qword_1E95F05A8, (void (*)(void))sub_1A3DDF580, (void (*)(void))sub_1A3D32A44);
  sub_1A4096DBC();
  if (!v2)
  {
    uint64_t v15 = v20;
    char v23 = *v14;
    char v22 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F05B8);
    sub_1A3DDF5D4();
    sub_1A4096DBC();
    char v21 = 2;
    sub_1A3C80D74();
    sub_1A4096D5C();
    uint64_t v16 = sub_1A3DDAEA4(&qword_1E95F0588, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
    sub_1A3D2A9D0((uint64_t)v8, v13, (uint64_t)&off_1EF74B0E0, v16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t HumanHandPoseObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v30 = sub_1A4095C7C();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v26 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F05D0);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  int64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HumanHandPoseObservation();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DDF52C();
  uint64_t v12 = (uint64_t)v31;
  sub_1A4096FDC();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v4;
  char v23 = v6;
  uint64_t v31 = a1;
  uint64_t v14 = v27;
  uint64_t v13 = v28;
  uint64_t v15 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F05A0);
  char v32 = 0;
  sub_1A3DDF69C(&qword_1E95F05D8, (void (*)(void))sub_1A3DDF724, (void (*)(void))sub_1A3D32850);
  uint64_t v16 = v29;
  sub_1A4096CFC();
  *(void *)&v11[v9[9]] = v34;
  char v32 = 1;
  sub_1A3DDF778();
  sub_1A4096CFC();
  *uint64_t v11 = v34;
  LOBYTE(v34) = 2;
  sub_1A3C80D74();
  sub_1A4096C7C();
  char v21 = v8;
  LOBYTE(v34) = 0;
  sub_1A3DDAEA4((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  sub_1A4096CFC();
  (*(void (**)(unsigned char *, char *, uint64_t))(v13 + 32))(&v11[v9[5]], v26, v15);
  LOBYTE(v34) = 1;
  sub_1A4096CDC();
  *(_DWORD *)&v11[v9[6]] = v17;
  char v32 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  uint64_t v18 = v25;
  *(_WORD *)&v11[v9[8]] = v34;
  uint64_t v19 = v23;
  sub_1A3D2B130((uint64_t)v33);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v22);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v16);
  sub_1A3C7D648((uint64_t)v33, (uint64_t)&v11[v9[7]]);
  sub_1A3DDF7CC((uint64_t)v11, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1A3DDF830((uint64_t)v11);
}

uint64_t sub_1A3DDCF38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HumanHandPoseObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3DDCF50(void *a1)
{
  return HumanHandPoseObservation.encode(to:)(a1);
}

id sub_1A3DDCF68(uint64_t a1, uint64_t a2)
{
  return sub_1A3D2BE94(a1, a2);
}

void *sub_1A3DDCF80()
{
  uint64_t result = sub_1A3DDFA0C();
  if (!v0) {
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1A3DDCFA8(void *a1@<X0>, char *a2@<X8>)
{
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1A409617C();
  uint64_t v8 = v7;
  if (v6 == sub_1A409617C() && v8 == v9)
  {
    char v12 = 20;
LABEL_8:

    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  char v11 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
    char v12 = 20;
LABEL_9:

    goto LABEL_10;
  }
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1A409617C();
  uint64_t v15 = v14;
  if (v13 == sub_1A409617C() && v15 == v16)
  {
    char v12 = 3;
    goto LABEL_8;
  }
  char v17 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
    char v12 = 3;
    goto LABEL_9;
  }
  sub_1A409617C();
  uint64_t v4 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v5 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1A409617C();
  uint64_t v20 = v19;
  if (v18 == sub_1A409617C() && v20 == v21)
  {
    char v12 = 1;
    goto LABEL_8;
  }
  char v22 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
    char v12 = 1;
    goto LABEL_9;
  }
  sub_1A409617C();
  char v23 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v24 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1A409617C();
  uint64_t v27 = v26;
  if (v25 == sub_1A409617C() && v27 == v28)
  {

    swift_bridgeObjectRelease_n();
LABEL_25:

    char v12 = 2;
    goto LABEL_10;
  }
  char v29 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v29) {
    goto LABEL_25;
  }
  sub_1A409617C();
  uint64_t v30 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v31 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_1A409617C();
  uint64_t v34 = v33;
  if (v32 == sub_1A409617C() && v34 == v35)
  {

    swift_bridgeObjectRelease_n();
LABEL_30:

    char v12 = 0;
    goto LABEL_10;
  }
  char v36 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_30;
  }
  sub_1A409617C();
  uint64_t v37 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v38 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_1A409617C();
  uint64_t v41 = v40;
  if (v39 == sub_1A409617C() && v41 == v42)
  {

    swift_bridgeObjectRelease_n();
LABEL_35:

    char v12 = 4;
    goto LABEL_10;
  }
  char v43 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v43) {
    goto LABEL_35;
  }
  sub_1A409617C();
  uint64_t v44 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  CGFloat v45 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_1A409617C();
  uint64_t v48 = v47;
  if (v46 == sub_1A409617C() && v48 == v49)
  {

    swift_bridgeObjectRelease_n();
LABEL_40:

    char v12 = 5;
    goto LABEL_10;
  }
  char v50 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v50) {
    goto LABEL_40;
  }
  sub_1A409617C();
  uint64_t v51 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v52 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v53 = sub_1A409617C();
  uint64_t v55 = v54;
  if (v53 == sub_1A409617C() && v55 == v56)
  {

    swift_bridgeObjectRelease_n();
LABEL_45:

    char v12 = 6;
    goto LABEL_10;
  }
  char v57 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v57) {
    goto LABEL_45;
  }
  sub_1A409617C();
  uint64_t v58 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v59 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_1A409617C();
  uint64_t v62 = v61;
  if (v60 == sub_1A409617C() && v62 == v63)
  {

    swift_bridgeObjectRelease_n();
LABEL_50:

    char v12 = 7;
    goto LABEL_10;
  }
  char v64 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v64) {
    goto LABEL_50;
  }
  sub_1A409617C();
  uint64_t v65 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v66 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v67 = sub_1A409617C();
  uint64_t v69 = v68;
  if (v67 == sub_1A409617C() && v69 == v70)
  {

    swift_bridgeObjectRelease_n();
LABEL_55:

    char v12 = 8;
    goto LABEL_10;
  }
  char v71 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v71) {
    goto LABEL_55;
  }
  sub_1A409617C();
  uint64_t v72 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v73 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v74 = sub_1A409617C();
  uint64_t v76 = v75;
  if (v74 == sub_1A409617C() && v76 == v77)
  {

    swift_bridgeObjectRelease_n();
LABEL_60:

    char v12 = 9;
    goto LABEL_10;
  }
  char v78 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v78) {
    goto LABEL_60;
  }
  sub_1A409617C();
  id v79 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v80 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v81 = sub_1A409617C();
  uint64_t v83 = v82;
  if (v81 == sub_1A409617C() && v83 == v84)
  {

    swift_bridgeObjectRelease_n();
LABEL_65:

    char v12 = 10;
    goto LABEL_10;
  }
  char v85 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v85) {
    goto LABEL_65;
  }
  sub_1A409617C();
  uint64_t v86 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  id v87 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v88 = sub_1A409617C();
  uint64_t v90 = v89;
  if (v88 == sub_1A409617C() && v90 == v91)
  {

    swift_bridgeObjectRelease_n();
LABEL_70:

    char v12 = 11;
    goto LABEL_10;
  }
  char v92 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v92) {
    goto LABEL_70;
  }
  sub_1A409617C();
  id v93 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v94 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v95 = sub_1A409617C();
  uint64_t v97 = v96;
  if (v95 == sub_1A409617C() && v97 == v98)
  {

    swift_bridgeObjectRelease_n();
LABEL_75:

    char v12 = 12;
    goto LABEL_10;
  }
  char v99 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v99) {
    goto LABEL_75;
  }
  sub_1A409617C();
  uint64_t v100 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v101 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v102 = sub_1A409617C();
  uint64_t v104 = v103;
  if (v102 == sub_1A409617C() && v104 == v105)
  {

    swift_bridgeObjectRelease_n();
LABEL_80:

    char v12 = 13;
    goto LABEL_10;
  }
  char v106 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v106) {
    goto LABEL_80;
  }
  sub_1A409617C();
  char v107 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v108 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v109 = sub_1A409617C();
  uint64_t v111 = v110;
  if (v109 == sub_1A409617C() && v111 == v112)
  {

    swift_bridgeObjectRelease_n();
LABEL_85:

    char v12 = 14;
    goto LABEL_10;
  }
  char v113 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v113) {
    goto LABEL_85;
  }
  sub_1A409617C();
  uint64_t v114 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v115 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v116 = sub_1A409617C();
  uint64_t v118 = v117;
  if (v116 == sub_1A409617C() && v118 == v119)
  {

    swift_bridgeObjectRelease_n();
LABEL_90:

    char v12 = 15;
    goto LABEL_10;
  }
  char v120 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v120) {
    goto LABEL_90;
  }
  sub_1A409617C();
  uint64_t v121 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v122 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v123 = sub_1A409617C();
  uint64_t v125 = v124;
  if (v123 == sub_1A409617C() && v125 == v126)
  {

    swift_bridgeObjectRelease_n();
LABEL_95:

    char v12 = 16;
    goto LABEL_10;
  }
  char v127 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v127) {
    goto LABEL_95;
  }
  sub_1A409617C();
  uint64_t v128 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v129 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v130 = sub_1A409617C();
  uint64_t v132 = v131;
  if (v130 == sub_1A409617C() && v132 == v133)
  {

    swift_bridgeObjectRelease_n();
LABEL_100:

    char v12 = 17;
    goto LABEL_10;
  }
  char v134 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v134) {
    goto LABEL_100;
  }
  sub_1A409617C();
  CGRect v135 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v136 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v137 = sub_1A409617C();
  uint64_t v139 = v138;
  if (v137 == sub_1A409617C() && v139 == v140)
  {

    swift_bridgeObjectRelease_n();
LABEL_105:

    char v12 = 18;
    goto LABEL_10;
  }
  char v141 = sub_1A4096E5C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v141) {
    goto LABEL_105;
  }
  sub_1A409617C();
  uint64_t v142 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  sub_1A409617C();
  uint64_t v143 = (void *)sub_1A409614C();
  swift_bridgeObjectRelease();
  uint64_t v144 = sub_1A409617C();
  uint64_t v146 = v145;
  if (v144 == sub_1A409617C() && v146 == v147)
  {
    id v148 = a1;

    swift_bridgeObjectRelease_n();
    char v12 = 19;
  }
  else
  {
    char v149 = sub_1A4096E5C();
    id v150 = a1;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v149) {
      char v12 = 19;
    }
    else {
      char v12 = 21;
    }
  }
LABEL_10:
  *a2 = v12;
}

uint64_t sub_1A3DDE04C@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  __int16 v40 = *a2;
  unint64_t v5 = sub_1A3DDE330(MEMORY[0x1E4FBC860]);
  id v6 = objc_msgSend(a1, sel_availableJointNames);
  _s3__C9JointNameVMa_2(0);
  uint64_t v7 = sub_1A409630C();

  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = 0;
    uint64_t v10 = &selRef_nmsThreshold;
    uint64_t v43 = v7;
    do
    {
      uint64_t v13 = *(void **)(v7 + 8 * v9 + 32);
      *(void *)&long long v45 = 0;
      id v14 = v13;
      id v15 = objc_msgSend(a1, v10[325], v14, &v45);
      uint64_t v16 = (void *)v45;
      if (v15)
      {
        char v17 = v15;
        id v18 = v14;
        id v19 = v16;
        sub_1A3DDCFA8(v18, (char *)&v45);
        unsigned __int8 v20 = v45;
        if (v45 == 21)
        {
        }
        else
        {
          objc_msgSend(v17, sel_location);
          NormalizedPoint.init(normalizedPoint:)((CGPoint)__PAIR128__(v22, v21));
          uint64_t v23 = HumanHandPoseObservation.JointName.rawValue.getter();
          uint64_t v24 = v8;
          uint64_t v25 = a1;
          uint64_t v26 = v10;
          uint64_t v28 = v27;
          objc_msgSend(v17, sel_confidence);
          uint64_t v29 = v28;
          uint64_t v10 = v26;
          a1 = v25;
          uint64_t v8 = v24;
          uint64_t v7 = v43;
          sub_1A3C977C4(&v45, v23, v29, (uint64_t)v44, v30);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v45 = v5;
          sub_1A3DDF06C((uint64_t)v44, v20, isUniquelyReferenced_nonNull_native);
          unint64_t v5 = v45;

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        id v11 = (id)v45;
        char v12 = (void *)sub_1A4095AEC();

        swift_willThrow();
      }
      ++v9;
    }
    while (v8 != v9);
  }
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(a1, sel_chirality);
  if (v32 == (id)1) {
    char v33 = 1;
  }
  else {
    char v33 = 2;
  }
  if (v32 == (id)-1) {
    char v34 = 0;
  }
  else {
    char v34 = v33;
  }
  id v35 = objc_msgSend(a1, sel_uuid);
  char v36 = (int *)type metadata accessor for HumanHandPoseObservation();
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v38 = v37;

  *a4 = v34;
  *(_DWORD *)&a4[v36[6]] = v38;
  uint64_t result = sub_1A3C7D648(a3, (uint64_t)&a4[v36[7]]);
  *(_WORD *)&a4[v36[8]] = v40;
  *(void *)&a4[v36[9]] = v5;
  return result;
}

unint64_t sub_1A3DDE330(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0648);
  uint64_t v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_DWORD *)(a1 + 72);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 40);
    uint64_t v6 = *((void *)v4 - 4);
    uint64_t v7 = *((void *)v4 - 3);
    uint64_t v9 = *((void *)v4 - 2);
    uint64_t v8 = *((void *)v4 - 1);
    int v10 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3DDE508(v5);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v13 = v2[7] + 40 * result;
    *(void *)uint64_t v13 = v6;
    *(void *)(v13 + 8) = v7;
    *(void *)(v13 + 16) = v9;
    *(void *)(v13 + 24) = v8;
    *(_DWORD *)(v13 + 32) = v10;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t HumanHandPoseObservation.init(_:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __int16 v6 = -8;
  objc_msgSend(a1, sel_timeRange, static NormalizedRect.fullImage.getter(v5).n128_f64[0]);
  char v8 = 0;
  return sub_1A3DDE04C(a1, &v6, (uint64_t)&v7, a2);
}

uint64_t sub_1A3DDE4DC@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, char *a4@<X8>)
{
  __int16 v5 = *a2;
  return sub_1A3DDE04C(a1, &v5, a3, a4);
}

unint64_t sub_1A3DDE508(unsigned __int8 a1)
{
  sub_1A4096F2C();
  HumanHandPoseObservation.JointName.rawValue.getter();
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A4096F7C();

  return sub_1A3DDE594(a1, v2);
}

unint64_t sub_1A3DDE594(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x706954626D756874;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x5049626D756874;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x504D626D756874;
          break;
        case 3:
          uint64_t v8 = 0x434D43626D756874;
          break;
        case 4:
          uint64_t v8 = 0x7069547865646E69;
          break;
        case 5:
          uint64_t v8 = 0x5049447865646E69;
          break;
        case 6:
          uint64_t v8 = 0x5049507865646E69;
          break;
        case 7:
          uint64_t v8 = 0x50434D7865646E69;
          break;
        case 8:
          unint64_t v7 = 0xE900000000000070;
          unsigned int v9 = 1684302189;
          goto LABEL_20;
        case 9:
          unsigned int v10 = 1684302189;
          goto LABEL_22;
        case 0xA:
          unsigned int v11 = 1684302189;
          goto LABEL_24;
        case 0xB:
          unsigned int v12 = 1684302189;
          goto LABEL_26;
        case 0xC:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x706954676E6972;
          break;
        case 0xD:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x504944676E6972;
          break;
        case 0xE:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x504950676E6972;
          break;
        case 0xF:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x50434D676E6972;
          break;
        case 0x10:
          unint64_t v7 = 0xE900000000000070;
          unsigned int v9 = 1953786220;
LABEL_20:
          uint64_t v8 = v9 | 0x6954656C00000000;
          break;
        case 0x11:
          unsigned int v10 = 1953786220;
LABEL_22:
          uint64_t v8 = v10 | 0x4944656C00000000;
          goto LABEL_27;
        case 0x12:
          unsigned int v11 = 1953786220;
LABEL_24:
          uint64_t v8 = v11 | 0x4950656C00000000;
          goto LABEL_27;
        case 0x13:
          unsigned int v12 = 1953786220;
LABEL_26:
          uint64_t v8 = v12 | 0x434D656C00000000;
LABEL_27:
          unint64_t v7 = 0xE900000000000050;
          break;
        case 0x14:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x7473697277;
          break;
        default:
          break;
      }
      unint64_t v13 = 0xE800000000000000;
      uint64_t v14 = 0x706954626D756874;
      switch(v6)
      {
        case 1:
          unint64_t v13 = 0xE700000000000000;
          uint64_t v15 = 0x49626D756874;
          goto LABEL_51;
        case 2:
          unint64_t v13 = 0xE700000000000000;
          uint64_t v15 = 0x4D626D756874;
          goto LABEL_51;
        case 3:
          if (v8 != 0x434D43626D756874) {
            goto LABEL_65;
          }
          goto LABEL_64;
        case 4:
          if (v8 != 0x7069547865646E69) {
            goto LABEL_65;
          }
          goto LABEL_64;
        case 5:
          uint64_t v16 = 0x447865646E69;
          goto LABEL_38;
        case 6:
          uint64_t v16 = 0x507865646E69;
LABEL_38:
          if (v8 != (v16 & 0xFFFFFFFFFFFFLL | 0x5049000000000000)) {
            goto LABEL_65;
          }
          goto LABEL_64;
        case 7:
          if (v8 != 0x50434D7865646E69) {
            goto LABEL_65;
          }
          goto LABEL_64;
        case 8:
          unint64_t v13 = 0xE900000000000070;
          unsigned int v17 = 1684302189;
          goto LABEL_54;
        case 9:
          unsigned int v18 = 1684302189;
          goto LABEL_57;
        case 10:
          unsigned int v19 = 1684302189;
          goto LABEL_59;
        case 11:
          uint64_t v20 = 0x434D656C6464696DLL;
          goto LABEL_60;
        case 12:
          unint64_t v13 = 0xE700000000000000;
          if (v8 != 0x706954676E6972) {
            goto LABEL_65;
          }
          goto LABEL_64;
        case 13:
          unint64_t v13 = 0xE700000000000000;
          uint64_t v15 = 0x4944676E6972;
          goto LABEL_51;
        case 14:
          unint64_t v13 = 0xE700000000000000;
          uint64_t v15 = 0x4950676E6972;
          goto LABEL_51;
        case 15:
          unint64_t v13 = 0xE700000000000000;
          uint64_t v15 = 0x434D676E6972;
LABEL_51:
          if (v8 != (v15 & 0xFFFFFFFFFFFFLL | 0x50000000000000)) {
            goto LABEL_65;
          }
          goto LABEL_64;
        case 16:
          unint64_t v13 = 0xE900000000000070;
          unsigned int v17 = 1953786220;
LABEL_54:
          if (v8 != (v17 | 0x6954656C00000000)) {
            goto LABEL_65;
          }
          goto LABEL_64;
        case 17:
          unsigned int v18 = 1953786220;
LABEL_57:
          uint64_t v20 = v18 | 0x4944656C00000000;
          goto LABEL_60;
        case 18:
          unsigned int v19 = 1953786220;
LABEL_59:
          uint64_t v20 = v19 | 0x4950656C00000000;
LABEL_60:
          unint64_t v13 = 0xE900000000000050;
          if (v8 != v20) {
            goto LABEL_65;
          }
          goto LABEL_64;
        case 19:
          uint64_t v14 = 0x434D656C7474696CLL;
          unint64_t v13 = 0xE900000000000050;
          goto LABEL_63;
        case 20:
          unint64_t v13 = 0xE500000000000000;
          if (v8 != 0x7473697277) {
            goto LABEL_65;
          }
          goto LABEL_64;
        default:
LABEL_63:
          if (v8 != v14) {
            goto LABEL_65;
          }
LABEL_64:
          if (v7 == v13)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_65:
          char v21 = sub_1A4096E5C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v21) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_1A3DDEB08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0648);
  char v39 = a2;
  uint64_t v6 = sub_1A4096C1C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_41;
  }
  if (v17 >= v37)
  {
    swift_release();
    uint64_t v3 = v36;
    unsigned int v18 = (void *)(v5 + 64);
    if (v39)
    {
LABEL_36:
      uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
      if (v34 >= 64) {
        bzero(v18, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unsigned int v18 = -1 << v34;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unsigned int v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v38 + 8 * v17);
    ++v12;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v12 = v17 + 1;
    if (v17 + 1 >= v37) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v38 + 8 * v12);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_22:
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v22 = *(void *)(v5 + 56) + 40 * v16;
      long long v40 = *(_OWORD *)v22;
      uint64_t v24 = *(void *)(v22 + 16);
      uint64_t v23 = *(void *)(v22 + 24);
      int v25 = *(_DWORD *)(v22 + 32);
      if ((v39 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1A4096F2C();
      sub_1A40961CC();
      swift_bridgeObjectRelease();
      uint64_t v26 = sub_1A4096F7C();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = v26 & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      while (++v29 != v31 || (v30 & 1) == 0)
      {
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
        if (v33 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v33)) + (v29 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(unsigned char *)(*(void *)(v7 + 48) + v13) = v21;
          uint64_t v14 = *(void *)(v7 + 56) + 40 * v13;
          *(_OWORD *)uint64_t v14 = v40;
          *(void *)(v14 + 16) = v24;
          *(void *)(v14 + 24) = v23;
          *(_DWORD *)(v14 + 32) = v25;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x1A3DDF018);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v37)
    {
      unint64_t v19 = *(void *)(v38 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v12 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_42;
          }
          if (v12 >= v37) {
            goto LABEL_33;
          }
          unint64_t v19 = *(void *)(v38 + 8 * v12);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v20;
      goto LABEL_21;
    }
LABEL_33:
    swift_release();
    uint64_t v3 = v36;
    if (v39) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A3DDF06C(uint64_t a1, unsigned __int8 a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1A3DDE508(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < result || (a3 & 1) == 0)
  {
    if (v15 < result || (a3 & 1) != 0)
    {
      sub_1A3DDEB08(result, a3 & 1);
      uint64_t result = sub_1A3DDE508(a2);
      if ((v14 & 1) != (v18 & 1))
      {
LABEL_17:
        uint64_t result = sub_1A4096EBC();
        __break(1u);
        return result;
      }
      unint64_t v10 = result;
      unint64_t v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_1A3DDF1D8();
  }
  unint64_t v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    uint64_t v19 = v16[7] + 40 * v10;
    long long v20 = *(_OWORD *)a1;
    long long v21 = *(_OWORD *)(a1 + 16);
    *(_DWORD *)(v19 + 32) = *(_DWORD *)(a1 + 32);
    *(_OWORD *)uint64_t v19 = v20;
    *(_OWORD *)(v19 + 16) = v21;
    uint64_t v22 = v16[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 40 * v10;

  return sub_1A3D3508C(a1, v17);
}

void *sub_1A3DDF1D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0648);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 40 * v15;
    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v17 = *(void *)(v16 + 24);
    int v19 = *(_DWORD *)(v16 + 32);
    long long v20 = *(_OWORD *)v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v21 = *(void *)(v4 + 56) + 40 * v15;
    *(_OWORD *)uint64_t v21 = v20;
    *(void *)(v21 + 16) = v18;
    *(void *)(v21 + 24) = v17;
    *(_DWORD *)(v21 + 32) = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s6Vision24HumanHandPoseObservationV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4 = *a1;
  int v5 = *a2;
  if (v4 == 2)
  {
    if (v5 != 2) {
      goto LABEL_22;
    }
  }
  else
  {
    int v6 = (v5 ^ v4) & 1;
    if (v5 == 2 || v6 != 0) {
      goto LABEL_22;
    }
  }
  uint64_t v8 = (int *)type metadata accessor for HumanHandPoseObservation();
  if ((sub_1A4095C4C() & 1) == 0 || *(float *)&a1[v8[6]] != *(float *)&a2[v8[6]]) {
    goto LABEL_22;
  }
  uint64_t v9 = v8[7];
  unsigned __int8 v10 = a1[v9 + 48];
  uint64_t v11 = &a2[v9];
  if (v10)
  {
    if (!v11[48]) {
      goto LABEL_22;
    }
  }
  else if ((v11[48] & 1) != 0 || (sub_1A409669C() & 1) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v12 = v8[8];
  unsigned int v13 = *(unsigned __int16 *)&a1[v12];
  unsigned int v14 = *(unsigned __int16 *)&a2[v12];
  if (v13 > 0xFFF7)
  {
    if (v14 > 0xFFF7) {
      goto LABEL_21;
    }
LABEL_22:
    char v15 = 0;
    return v15 & 1;
  }
  if (v14 > 0xFFF7) {
    goto LABEL_22;
  }
  sub_1A3C832B8();
  if ((sub_1A409612C() & 1) == 0) {
    goto LABEL_22;
  }
LABEL_21:
  char v15 = sub_1A3DDBF3C(*(void *)&a1[v8[9]], *(void *)&a2[v8[9]]);
  return v15 & 1;
}

unint64_t sub_1A3DDF52C()
{
  unint64_t result = qword_1E96301E8[0];
  if (!qword_1E96301E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96301E8);
  }
  return result;
}

unint64_t sub_1A3DDF580()
{
  unint64_t result = qword_1E95F05B0;
  if (!qword_1E95F05B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F05B0);
  }
  return result;
}

unint64_t sub_1A3DDF5D4()
{
  unint64_t result = qword_1E95F05C0;
  if (!qword_1E95F05C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F05B8);
    sub_1A3DDF648();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F05C0);
  }
  return result;
}

unint64_t sub_1A3DDF648()
{
  unint64_t result = qword_1E95F05C8;
  if (!qword_1E95F05C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F05C8);
  }
  return result;
}

uint64_t sub_1A3DDF69C(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F05A0);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3DDF724()
{
  unint64_t result = qword_1E95F05E0;
  if (!qword_1E95F05E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F05E0);
  }
  return result;
}

unint64_t sub_1A3DDF778()
{
  unint64_t result = qword_1E95F05E8;
  if (!qword_1E95F05E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F05E8);
  }
  return result;
}

uint64_t sub_1A3DDF7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HumanHandPoseObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3DDF830(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HumanHandPoseObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3DDF88C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E696F4A6C6C61 && a2 == 0xE900000000000073;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696C6172696863 && a2 == 0xE900000000000079 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1A3DDFA0C()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + *(int *)(type metadata accessor for HumanHandPoseObservation() + 32));
  if (v1 > 0xFFF7 || v1 >> 3 != 14)
  {
    sub_1A4096A2C();
    sub_1A409621C();
    if (v1 <= 0xFFF7) {
      RequestDescriptor.description.getter();
    }
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0xE000000000000000;
    *(_DWORD *)(v3 + 16) = 0;
    *(unsigned char *)(v3 + 20) = 18;
    swift_willThrow();
  }
  return &unk_1EF74AC30;
}

unint64_t sub_1A3DDFB48()
{
  unint64_t result = qword_1E95F05F0;
  if (!qword_1E95F05F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F05F0);
  }
  return result;
}

unint64_t sub_1A3DDFBA0()
{
  unint64_t result = qword_1E95F05F8;
  if (!qword_1E95F05F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F05F8);
  }
  return result;
}

unint64_t sub_1A3DDFBF8()
{
  unint64_t result = qword_1E95F0600;
  if (!qword_1E95F0600)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F0608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0600);
  }
  return result;
}

unint64_t sub_1A3DDFC58()
{
  unint64_t result = qword_1E95F0610;
  if (!qword_1E95F0610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0610);
  }
  return result;
}

uint64_t sub_1A3DDFCAC(void *a1)
{
  a1[1] = sub_1A3DDAEA4(&qword_1E95F0618, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  a1[2] = sub_1A3DDAEA4(&qword_1E95EDD70, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  a1[3] = sub_1A3DDAEA4(&qword_1E95EDDA0, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  uint64_t result = sub_1A3DDAEA4(&qword_1E95F0590, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  a1[4] = result;
  return result;
}

unint64_t sub_1A3DDFD8C()
{
  unint64_t result = qword_1E95F0620;
  if (!qword_1E95F0620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0620);
  }
  return result;
}

unint64_t sub_1A3DDFDE4()
{
  unint64_t result = qword_1E95F0628;
  if (!qword_1E95F0628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0628);
  }
  return result;
}

unint64_t sub_1A3DDFE3C()
{
  unint64_t result = qword_1E95F0630;
  if (!qword_1E95F0630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0630);
  }
  return result;
}

unint64_t sub_1A3DDFE94()
{
  unint64_t result = qword_1E95F0638;
  if (!qword_1E95F0638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0638);
  }
  return result;
}

uint64_t sub_1A3DDFEE8()
{
  return sub_1A3DDAEA4(&qword_1E95ED170, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
}

uint64_t sub_1A3DDFF30(uint64_t a1)
{
  uint64_t result = sub_1A3DDAEA4(&qword_1E95F0640, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3DDFF88(uint64_t a1)
{
  uint64_t result = sub_1A3DDAEA4(&qword_1E95F0588, (void (*)(uint64_t))type metadata accessor for HumanHandPoseObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HumanHandPoseObservation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1A4095C7C();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(_DWORD *)((char *)v4 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    uint64_t v12 = (char *)v4 + v11;
    unsigned int v13 = (char *)a2 + v11;
    long long v14 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v14;
    *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
    v12[48] = v13[48];
    uint64_t v15 = a3[9];
    *(_WORD *)((char *)v4 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for HumanHandPoseObservation(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

unsigned char *initializeWithCopy for HumanHandPoseObservation(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)&a1[a3[6]] = *(_DWORD *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  v11[48] = v12[48];
  uint64_t v14 = a3[9];
  *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *assignWithCopy for HumanHandPoseObservation(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)&a1[a3[6]] = *(_DWORD *)&a2[a3[6]];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  char v13 = v12[48];
  long long v15 = *((_OWORD *)v12 + 1);
  long long v14 = *((_OWORD *)v12 + 2);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v15;
  *((_OWORD *)v11 + 2) = v14;
  v11[48] = v13;
  *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *initializeWithTake for HumanHandPoseObservation(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)&a1[a3[6]] = *(_DWORD *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  v11[48] = v12[48];
  uint64_t v14 = a3[9];
  *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  return a1;
}

unsigned char *assignWithTake for HumanHandPoseObservation(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1A4095C7C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)&a1[a3[6]] = *(_DWORD *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  v11[48] = v12[48];
  uint64_t v14 = a3[9];
  *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HumanHandPoseObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3DE04EC);
}

uint64_t sub_1A3DE04EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for HumanHandPoseObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3DE05C4);
}

uint64_t sub_1A3DE05C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095C7C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A3DE0684()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanHandPoseObservation.Chirality()
{
  return &type metadata for HumanHandPoseObservation.Chirality;
}

uint64_t getEnumTagSinglePayload for HumanHandPoseObservation.JointName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HumanHandPoseObservation.JointName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *uint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DE08BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanHandPoseObservation.JointName()
{
  return &type metadata for HumanHandPoseObservation.JointName;
}

unsigned char *storeEnumTagSinglePayload for HumanHandPoseObservation.JointsGroupName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DE09C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanHandPoseObservation.JointsGroupName()
{
  return &type metadata for HumanHandPoseObservation.JointsGroupName;
}

unsigned char *storeEnumTagSinglePayload for HumanHandPoseObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DE0AC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanHandPoseObservation.CodingKeys()
{
  return &type metadata for HumanHandPoseObservation.CodingKeys;
}

unsigned char *_s6Vision24HumanHandPoseObservationV9ChiralityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DE0BC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanHandPoseObservation.Chirality.CodingKeys()
{
  return &type metadata for HumanHandPoseObservation.Chirality.CodingKeys;
}

ValueMetadata *type metadata accessor for HumanHandPoseObservation.Chirality.LeftCodingKeys()
{
  return &type metadata for HumanHandPoseObservation.Chirality.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for HumanHandPoseObservation.Chirality.RightCodingKeys()
{
  return &type metadata for HumanHandPoseObservation.Chirality.RightCodingKeys;
}

unint64_t sub_1A3DE0C24()
{
  unint64_t result = qword_1E9631080[0];
  if (!qword_1E9631080[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9631080);
  }
  return result;
}

unint64_t sub_1A3DE0C7C()
{
  unint64_t result = qword_1E9631290[0];
  if (!qword_1E9631290[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9631290);
  }
  return result;
}

unint64_t sub_1A3DE0CD4()
{
  unint64_t result = qword_1E9631520;
  if (!qword_1E9631520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9631520);
  }
  return result;
}

unint64_t sub_1A3DE0D2C()
{
  unint64_t result = qword_1E9631528[0];
  if (!qword_1E9631528[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9631528);
  }
  return result;
}

unint64_t sub_1A3DE0D84()
{
  unint64_t result = qword_1E96315B0;
  if (!qword_1E96315B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96315B0);
  }
  return result;
}

unint64_t sub_1A3DE0DDC()
{
  unint64_t result = qword_1E96315B8[0];
  if (!qword_1E96315B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96315B8);
  }
  return result;
}

unint64_t sub_1A3DE0E34()
{
  unint64_t result = qword_1E9631640;
  if (!qword_1E9631640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9631640);
  }
  return result;
}

unint64_t sub_1A3DE0E8C()
{
  unint64_t result = qword_1E9631648[0];
  if (!qword_1E9631648[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9631648);
  }
  return result;
}

unint64_t sub_1A3DE0EE4()
{
  unint64_t result = qword_1E96316D0;
  if (!qword_1E96316D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96316D0);
  }
  return result;
}

unint64_t sub_1A3DE0F3C()
{
  unint64_t result = qword_1E96316D8[0];
  if (!qword_1E96316D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96316D8);
  }
  return result;
}

uint64_t sub_1A3DE0F94(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A3DE0FEC(a1);
  return v2;
}

uint64_t sub_1A3DE0FEC(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v46 = a1;
  sub_1A3C85678(a1, (uint64_t)&v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBFD8);
  uint64_t v3 = type metadata accessor for DetectTrajectoriesRequest();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v5 = v43 + OBJC_IVAR____TtC6Vision25DetectTrajectoriesRequest_uuid;
    uint64_t v6 = v2 + OBJC_IVAR____TtC6Vision37DetectTrajectoriesPerformingOperation_uuid;
    uint64_t v7 = sub_1A4095C7C();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
    DetectTrajectoriesRequest.regionOfInterest.getter((uint64_t)&v44);
    long long v9 = v45;
    *(_OWORD *)(v2 + 32) = v44;
    *(_OWORD *)(v2 + 48) = v9;
    *(void *)&long long v44 = v43;
    uint64_t v10 = sub_1A3DE1518(&qword_1E95ED2F8);
    uint64_t v11 = swift_retain();
    unint64_t v12 = sub_1A3D45608(v11, v3, v10);
    swift_release();
    *(void *)(v2 + 24) = v12;
    DetectTrajectoriesRequest.descriptor.getter(&v44);
    char v13 = BYTE1(v44);
    uint64_t v14 = (unsigned char *)(v2 + OBJC_IVAR____TtC6Vision37DetectTrajectoriesPerformingOperation_descriptor);
    unsigned char *v14 = v44;
    v14[1] = v13;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0650);
    uint64_t v16 = sub_1A3DE1518(&qword_1E95ED2F0);
    sub_1A3C8DBDC((uint64_t)sub_1A3DE146C, 0, v3, v15, v16, (uint64_t)&v44);
    if (v42)
    {
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      type metadata accessor for DetectTrajectoriesPerformingOperation();
      swift_deallocPartialClassInstance();
    }
    else
    {
      long long v17 = v44;
      *(void *)(v2 + 64) = v44;
      uint64_t v18 = sub_1A409617C();
      uint64_t v20 = v19;
      *((void *)&v45 + 1) = sub_1A3C8C73C(0, &qword_1E95F0658);
      *(void *)&long long v44 = *((void *)&v17 + 1);
      swift_beginAccess();
      id v41 = (id)v17;
      id v40 = *((id *)&v17 + 1);
      sub_1A3C8BC40((uint64_t)&v44, v18, v20);
      swift_endAccess();
      uint64_t v21 = sub_1A409617C();
      uint64_t v23 = v22;
      float v24 = DetectTrajectoriesRequest.objectMinimumNormalizedRadius.getter();
      uint64_t v25 = MEMORY[0x1E4FBB470];
      *((void *)&v45 + 1) = MEMORY[0x1E4FBB470];
      *(float *)&long long v44 = v24;
      swift_beginAccess();
      sub_1A3C8BC40((uint64_t)&v44, v21, v23);
      swift_endAccess();
      uint64_t v26 = sub_1A409617C();
      uint64_t v28 = v27;
      float v29 = DetectTrajectoriesRequest.objectMaximumNormalizedRadius.getter();
      *((void *)&v45 + 1) = v25;
      *(float *)&long long v44 = v29;
      swift_beginAccess();
      sub_1A3C8BC40((uint64_t)&v44, v26, v28);
      swift_endAccess();
      uint64_t v39 = sub_1A409617C();
      uint64_t v31 = v30;
      uint64_t v32 = DetectTrajectoriesRequest.targetFrameTime.getter();
      unsigned int v34 = v33;
      uint64_t v36 = v35;
      unint64_t v37 = HIDWORD(v33);
      type metadata accessor for CMTime(0);
      *(void *)&long long v44 = v32;
      *((void *)&v44 + 1) = __PAIR64__(v37, v34);
      *(void *)&long long v45 = v36;
      *((void *)&v45 + 1) = v38;
      swift_beginAccess();
      sub_1A3C8BC40((uint64_t)&v44, v39, v31);
      swift_endAccess();

      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v46);
    }
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1A3DE146C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unsigned int v4 = (void *)a1[2];
  id v5 = objc_allocWithZone((Class)VNTrajectoryRequestState);
  id v6 = v4;
  id v7 = objc_msgSend(v5, sel_init);
  id result = (id)(*(uint64_t (**)(void))(*a1 + 160))();
  if ((v9 & 1) == 0) {
    id result = objc_msgSend(v7, sel_setTargetImageDimensionForContourDetection_, result);
  }
  *a2 = v6;
  a2[1] = v7;
  return result;
}

uint64_t sub_1A3DE1518(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DetectTrajectoriesRequest();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DetectTrajectoriesPerformingOperation()
{
  uint64_t result = qword_1E9631760;
  if (!qword_1E9631760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A3DE15A8(uint64_t a1)
{
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v1 + 128))();
  if (!*(void *)(v4 + 16))
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A3C85678(v4 + 32, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_8:
    uint64_t result = sub_1A3CA2EB8((uint64_t)&v10, &qword_1E95ED340);
    __break(1u);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2D8);
  uint64_t v5 = type metadata accessor for DetectTrajectoriesRequest();
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  MEMORY[0x1F4188790](result);
  id v9[2] = a1;
  __n128 v9[3] = v1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EE120);
  uint64_t v8 = sub_1A3DE1518(&qword_1E95ED2F0);
  sub_1A3C8DBDC((uint64_t)sub_1A3DE174C, (uint64_t)v9, v5, v7, v8, (uint64_t)&v10);
  uint64_t result = swift_release();
  if (!v2) {
    return v10;
  }
  return result;
}

void sub_1A3DE174C(char **a1@<X8>)
{
  uint64_t v4 = *(double **)(v1 + 24);
  uint64_t v5 = (*(uint64_t (**)(void))(**(void **)(v1 + 16) + 120))();
  if (!v2)
  {
    float v29 = (void *)v5;
    id v6 = (void *)*((void *)v4 + 8);
    double v7 = v4[4];
    double v8 = v4[5];
    double v9 = v4[6];
    double v10 = v4[7];
    long long v11 = *(uint64_t (**)(void))(*(void *)v4 + 152);
    uint64_t v12 = v11();
    sub_1A3C8F944(v12);
    swift_bridgeObjectRelease();
    char v13 = (void *)sub_1A409600C();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(objc_allocWithZone((Class)VNWarningRecorder), sel_init);
    uint64_t v15 = (void *)sub_1A4095C3C();
    *(void *)&long long v30 = 0;
    id v16 = objc_msgSend(v6, sel_processVNImageBuffer_regionOfInterest_withOptions_warningRecorder_requestUUID_error_, v29, v13, v14, v15, &v30, v7, v8, v9, v10);

    long long v17 = (void *)v30;
    if (v16)
    {
      sub_1A3C8C73C(0, &qword_1E95F0678);
      unint64_t v18 = sub_1A409630C();
      id v19 = v17;

      uint64_t v20 = sub_1A409617C();
      uint64_t v22 = v21;
      uint64_t v23 = v11();
      if (*(void *)(v23 + 16))
      {
        unint64_t v24 = sub_1A3C8C844(v20, v22);
        if (v25)
        {
          sub_1A3C8D3F0(*(void *)(v23 + 56) + 32 * v24, (uint64_t)&v30);
        }
        else
        {
          long long v30 = 0u;
          long long v31 = 0u;
        }
      }
      else
      {
        long long v30 = 0u;
        long long v31 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v31 + 1))
      {
        sub_1A3C8C73C(0, &qword_1E95F0658);
        if (swift_dynamicCast())
        {
          id v27 = v32;
          objc_msgSend(v32, sel_setTargetImageDimensionForContourDetection_, objc_msgSend(v32, sel_targetImageDimensionForContourDetection));
        }
      }
      else
      {
        sub_1A3CA2EB8((uint64_t)&v30, (uint64_t *)&unk_1E95EF700);
      }
      swift_retain();
      uint64_t v28 = sub_1A3DE1E7C(v18, (unint64_t)v4);
      swift_release();

      swift_bridgeObjectRelease();
      *a1 = v28;
    }
    else
    {
      id v26 = (id)v30;
      sub_1A4095AEC();

      swift_willThrow();
    }
  }
}

uint64_t sub_1A3DE1A84()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision37DetectTrajectoriesPerformingOperation_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1A3DE1B3C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1A3DE1B60()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

void (*sub_1A3DE1B84(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 144))();
  return sub_1A3C8B9D4;
}

uint64_t sub_1A3DE1BFC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_1A3DE1C20()
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 192))();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_1A3D65714(v3, v1, v2);
}

uint64_t sub_1A3DE1CDC()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_1A3DE1D04(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A3C9FEEC;
  return sub_1A3D28EA4(a1, a2, (uint64_t)&off_1EF74F860);
}

uint64_t sub_1A3DE1DB4()
{
  return type metadata accessor for DetectTrajectoriesPerformingOperation();
}

uint64_t sub_1A3DE1DBC()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_1A3DE1E7C(unint64_t a1, unint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (!v4) {
      return (char *)v5;
    }
    uint64_t v22 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1A3C84648(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v7 = 0;
    uint64_t v5 = v22;
    char v21 = 1;
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtC6Vision37DetectTrajectoriesPerformingOperation_descriptor + 1)) {
      __int16 v8 = 256;
    }
    else {
      __int16 v8 = 0;
    }
    unsigned __int16 v9 = v8 | *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC6Vision37DetectTrajectoriesPerformingOperation_descriptor);
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1A6254720](v7, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v7 + 32);
      }
      long long v11 = v10;
      unsigned __int16 v15 = v9;
      uint64_t v17 = type metadata accessor for TrajectoryObservation();
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
      sub_1A3C99410(v11, &v15, boxed_opaque_existential_1);
      uint64_t v22 = v5;
      unint64_t v14 = *(void *)(v5 + 16);
      unint64_t v13 = *(void *)(v5 + 24);
      a2 = v14 + 1;
      if (v14 >= v13 >> 1)
      {
        sub_1A3C84648((char *)(v13 > 1), v14 + 1, 1);
        uint64_t v5 = v22;
      }
      ++v7;
      *(void *)(v5 + 16) = a2;
      sub_1A3C856F4(&v16, (_OWORD *)(v5 + 32 * v14 + 32));
      if (v4 == v7) {
        return (char *)v5;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t static TrackHomographicImageRegistrationRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static TrackHomographicImageRegistrationRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t TrackHomographicImageRegistrationRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3DE2088(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE2348();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DE20C4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE2348();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DE2100(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE239C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DE213C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE239C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TrackHomographicImageRegistrationRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0680);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0688);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned __int16 v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DE2348();
  sub_1A4096FEC();
  sub_1A3DE239C();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3DE2348()
{
  unint64_t result = qword_1E9631788;
  if (!qword_1E9631788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9631788);
  }
  return result;
}

unint64_t sub_1A3DE239C()
{
  unint64_t result = qword_1E9631790[0];
  if (!qword_1E9631790[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9631790);
  }
  return result;
}

uint64_t TrackHomographicImageRegistrationRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t TrackHomographicImageRegistrationRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0690);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0698);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DE2348();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3DE239C();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      unint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *unint64_t v13 = &type metadata for TrackHomographicImageRegistrationRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DE271C(void *a1)
{
  return TrackHomographicImageRegistrationRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3DE2734(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0680);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0688);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DE2348();
  sub_1A4096FEC();
  sub_1A3DE239C();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t TrackHomographicImageRegistrationRequest.__allocating_init(_:frameAnalysisSpacing:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  int v9 = a5 & 1;
  uint64_t v10 = swift_allocObject();
  TrackHomographicImageRegistrationRequest.init(_:frameAnalysisSpacing:)(a1, a2, a3, a4, v9);
  return v10;
}

uint64_t TrackHomographicImageRegistrationRequest.init(_:frameAnalysisSpacing:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v28 = a5;
  uint64_t v11 = *(void *)v6;
  uint64_t v12 = sub_1A4095C7C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *a1;
  static NormalizedRect.fullImage.getter(&v29);
  unint64_t v17 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  __n128 v27 = v29;
  uint64_t v18 = v30;
  uint64_t v19 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F06A0);
  uint64_t v20 = swift_allocObject();
  *(_DWORD *)(v20 + 64) = 0;
  *(__n128 *)(v20 + 16) = v27;
  *(void *)(v20 + 32) = v18;
  *(void *)(v20 + 40) = v19;
  *(unsigned char *)(v20 + 48) = 0;
  *(void *)(v20 + 56) = v17;
  *(void *)(v6 + 40) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F06A8);
  uint64_t v21 = sub_1A3CEA454();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F06B0);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(void *)(v22 + 16) = v21;
  *(void *)(v6 + 48) = v22;
  if (v16 == 1)
  {
    uint64_t v23 = sub_1A3DE420C(&qword_1E95F06B8, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);
    sub_1A3E2C988(v11, v23, v24);
  }
  if (v28)
  {
    a2 = *MEMORY[0x1E4F1FA48];
    LODWORD(a3) = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 8);
    LODWORD(v25) = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 12);
    a4 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  }
  else
  {
    unint64_t v25 = HIDWORD(a3);
  }
  *(void *)(v6 + 16) = a2;
  *(_DWORD *)(v6 + 24) = a3;
  *(_DWORD *)(v6 + 28) = v25;
  *(void *)(v6 + 32) = a4;
  sub_1A4095C6C();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v6 + OBJC_IVAR____TtC6Vision40TrackHomographicImageRegistrationRequest_uuid, v15, v12);
  return v6;
}

void TrackHomographicImageRegistrationRequest.regionOfInterest.getter(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3C8980C(v4, a1);

  os_unfair_lock_unlock(v5);
}

void TrackHomographicImageRegistrationRequest.regionOfInterest.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3C8A1F0(v2);
  os_unfair_lock_unlock(v3);
}

void (*TrackHomographicImageRegistrationRequest.regionOfInterest.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 40);
  long long v3[4] = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 16;
  os_unfair_lock_lock(v4 + 16);
  sub_1A3C8980C(v5, v3);
  v3[5] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3C898B4;
}

void TrackHomographicImageRegistrationRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 40);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1A3C89AD8(v4, a1);

  os_unfair_lock_unlock(v5);
}

void TrackHomographicImageRegistrationRequest.modelFileBackingStore.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1A3C8A1FC(v2);
  os_unfair_lock_unlock(v3);
}

void (*TrackHomographicImageRegistrationRequest.modelFileBackingStore.modify(os_unfair_lock_s **a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = a1 + 2;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 40);
  *a1 = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 16;
  os_unfair_lock_lock(v4 + 16);
  sub_1A3C89AD8(v5, v3);
  a1[1] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1A3C89B74;
}

uint64_t TrackHomographicImageRegistrationRequest.minimumLatencyFrameCount.getter()
{
  return 2;
}

uint64_t TrackHomographicImageRegistrationRequest.frameAnalysisSpacing.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1A3DE2E98()
{
  uint64_t v0 = type metadata accessor for TrackHomographicImageRegistrationRequest();
  uint64_t v1 = sub_1A3DE420C(&qword_1E95F06B8, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);
  uint64_t result = sub_1A3E2CFDC(v0, v1);
  qword_1E9631778 = result;
  return result;
}

uint64_t static TrackHomographicImageRegistrationRequest.supportedRevisions.getter()
{
  if (qword_1E9631770 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void TrackHomographicImageRegistrationRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 208;
}

uint64_t type metadata accessor for TrackHomographicImageRegistrationRequest()
{
  uint64_t result = qword_1E9631FA0;
  if (!qword_1E9631FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

int *sub_1A3DE2FBC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0738);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(7, 0, 11);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(7, 0, 11);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(7, 0, 11);
  uint64_t v6 = sub_1A3D09D5C(v5);
  uint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for TrackHomographicImageRegistrationRequest.Revision, v0 + 32);
  qword_1E9643DC8 = v0;
  return result;
}

uint64_t TrackHomographicImageRegistrationRequest.deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision40TrackHomographicImageRegistrationRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t TrackHomographicImageRegistrationRequest.__deallocating_deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision40TrackHomographicImageRegistrationRequest_uuid;
  uint64_t v2 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t TrackHomographicImageRegistrationRequest.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t (*sub_1A3DE3244(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TrackHomographicImageRegistrationRequest.regionOfInterest.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3DE32A0(uint64_t a1)
{
  uint64_t v2 = sub_1A3DE420C(&qword_1E95ED350, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3DE330C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A3DE420C(&qword_1E95F06B8, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3DE3390(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A3DE420C(&qword_1E95F06B8, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3DE3414(_WORD *a1@<X8>)
{
  *a1 = 208;
}

uint64_t (*sub_1A3DE3420(os_unfair_lock_s ***a1))()
{
  uint64_t v2 = (os_unfair_lock_s **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (os_unfair_lock_s *)TrackHomographicImageRegistrationRequest.modelFileBackingStore.modify(v2);
  return sub_1A3C8A344;
}

uint64_t sub_1A3DE347C(uint64_t a1)
{
  uint64_t v2 = sub_1A3DE420C(&qword_1E95F06B8, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3DE34E8(uint64_t a1, uint64_t a2)
{
  sub_1A3DE420C(&qword_1E95F0720, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);

  return StatefulRequest.hash(into:)(a1, a2);
}

uint64_t sub_1A3DE3564(uint64_t a1, uint64_t a2)
{
  sub_1A3DE420C(&qword_1E95F0720, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);

  return static StatefulRequest.== infix(_:_:)(a1, a2, v2);
}

uint64_t sub_1A3DE35E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for VisionResult(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A3DE385C(a1, (uint64_t)v8, type metadata accessor for VisionResult);
  if (swift_getEnumCaseMultiPayload() == 24)
  {
    swift_release();
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD48);
    return sub_1A3DE37F8((uint64_t)&v8[*(int *)(v9 + 48)], a2);
  }
  else
  {
    sub_1A3C8B544((uint64_t)v8);
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    strcpy((char *)v15, "VisionResult ");
    HIWORD(v15[1]) = -4864;
    sub_1A3DE420C(&qword_1E95F0470, (void (*)(uint64_t))type metadata accessor for VisionResult);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    v14[1] = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F06C8);
    sub_1A409619C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    uint64_t v11 = v15[0];
    uint64_t v12 = v15[1];
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v13 = v11;
    *(void *)(v13 + 8) = v12;
    *(_DWORD *)(v13 + 16) = 0;
    *(unsigned char *)(v13 + 20) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1A3DE37F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageHomographicAlignmentObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3DE385C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3DE38C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Vision40TrackHomographicImageRegistrationRequest_uuid;
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1A3DE3938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3DE35E4(a1, a2);
}

uint64_t sub_1A3DE3950@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (uint64_t)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECD48) + 48);
  *a2 = v2;
  sub_1A3DE385C(a1, v5, (uint64_t (*)(void))type metadata accessor for ImageHomographicAlignmentObservation);
  type metadata accessor for VisionResult(0);
  swift_storeEnumTagMultiPayload();

  return swift_retain();
}

uint64_t sub_1A3DE39DC()
{
  if (qword_1E9631780 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DE3A38()
{
  return 3;
}

uint64_t sub_1A3DE3A48(uint64_t a1)
{
  return sub_1A3C8DE60(a1) & 1;
}

uint64_t sub_1A3DE3AC0()
{
  return sub_1A409617C();
}

unint64_t sub_1A3DE3AD4()
{
  unint64_t result = qword_1E95F06D0[0];
  if (!qword_1E95F06D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95F06D0);
  }
  return result;
}

uint64_t sub_1A3DE3B28(uint64_t a1)
{
  uint64_t result = sub_1A3DE420C(&qword_1E95ECE28, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3DE3B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3DE3CF8(a1, a2, a3, &qword_1E95ECFB8, (uint64_t)&protocol conformance descriptor for TrackHomographicImageRegistrationRequest, &qword_1E95F06C0);
}

uint64_t sub_1A3DE3BBC()
{
  return sub_1A3DE420C(&qword_1E95F0708, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);
}

uint64_t sub_1A3DE3C04(uint64_t a1)
{
  uint64_t result = sub_1A3DE420C(&qword_1E95F0710, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3DE3C60()
{
  unint64_t result = qword_1E95F0718;
  if (!qword_1E95F0718)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F06A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0718);
  }
  return result;
}

uint64_t sub_1A3DE3CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3DE3CF8(a1, a2, a3, &qword_1E95F06B8, (uint64_t)&unk_1A4103938, &qword_1E95F0720);
}

uint64_t sub_1A3DE3CF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  *(void *)(a1 + 8) = sub_1A3DE420C(a4, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);
  uint64_t result = sub_1A3DE420C(a6, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3DE3D68()
{
  unint64_t result = qword_1E95F0728;
  if (!qword_1E95F0728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0728);
  }
  return result;
}

uint64_t sub_1A3DE3DBC()
{
  return sub_1A3DE420C(&qword_1E95F0730, (void (*)(uint64_t))type metadata accessor for ImageHomographicAlignmentObservation);
}

uint64_t sub_1A3DE3E04(uint64_t a1)
{
  uint64_t result = sub_1A3DE420C(&qword_1E95F06B8, (void (*)(uint64_t))type metadata accessor for TrackHomographicImageRegistrationRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3DE3E5C()
{
  return type metadata accessor for TrackHomographicImageRegistrationRequest();
}

uint64_t sub_1A3DE3E64()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for TrackHomographicImageRegistrationRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrackHomographicImageRegistrationRequest);
}

uint64_t dispatch thunk of TrackHomographicImageRegistrationRequest.__allocating_init(_:frameAnalysisSpacing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5 + 120))(a1, a2, a3, a4, a5 & 1);
}

ValueMetadata *type metadata accessor for TrackHomographicImageRegistrationRequest.Revision()
{
  return &type metadata for TrackHomographicImageRegistrationRequest.Revision;
}

ValueMetadata *type metadata accessor for TrackHomographicImageRegistrationRequest.Configuration()
{
  return &type metadata for TrackHomographicImageRegistrationRequest.Configuration;
}

unsigned char *_s6Vision40TrackHomographicImageRegistrationRequestC8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DE400CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackHomographicImageRegistrationRequest.Revision.CodingKeys()
{
  return &type metadata for TrackHomographicImageRegistrationRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for TrackHomographicImageRegistrationRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for TrackHomographicImageRegistrationRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3DE4058()
{
  unint64_t result = qword_1E96321B0[0];
  if (!qword_1E96321B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96321B0);
  }
  return result;
}

unint64_t sub_1A3DE40B0()
{
  unint64_t result = qword_1E96322C0;
  if (!qword_1E96322C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96322C0);
  }
  return result;
}

unint64_t sub_1A3DE4108()
{
  unint64_t result = qword_1E96322C8[0];
  if (!qword_1E96322C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96322C8);
  }
  return result;
}

unint64_t sub_1A3DE4160()
{
  unint64_t result = qword_1E9632350;
  if (!qword_1E9632350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9632350);
  }
  return result;
}

unint64_t sub_1A3DE41B8()
{
  unint64_t result = qword_1E9632358[0];
  if (!qword_1E9632358[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9632358);
  }
  return result;
}

uint64_t sub_1A3DE420C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Session.__allocating_init()()
{
  uint64_t v35 = sub_1A4095ECC();
  uint64_t v1 = *(void *)(v35 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v35);
  unsigned int v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - v4;
  uint64_t v6 = sub_1A4095EFC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone((Class)VNSession), sel_init);
  uint64_t v33 = v0;
  uint64_t v11 = swift_allocObject();
  type metadata accessor for DetectorCache();
  uint64_t v12 = sub_1A3D9C710();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v12;
  uint64_t v13 = v7;
  swift_retain();
  uint64_t v14 = sub_1A3D9236C();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  uint64_t v15 = sub_1A3D921F4();
  int v16 = *v15;
  char v17 = *((unsigned char *)v15 + 16);
  swift_retain();
  sub_1A4095EBC();
  uint64_t v18 = sub_1A4095EDC();
  int v32 = sub_1A409679C();
  uint64_t result = sub_1A40968EC();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v30 = v13;
  uint64_t v31 = v6;
  if ((v17 & 1) == 0)
  {
    if (!v16)
    {
      swift_release_n();
      __break(1u);
LABEL_5:
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v35);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
      return v11;
    }
LABEL_10:
    __n128 v29 = v5;
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v34, v5, v35);
    uint64_t v20 = v1;
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v23 = sub_1A3CA9EBC(v11);
    uint64_t v36 = sub_1A3CB8AB0(v23, v24, &v37);
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    unint64_t v25 = v34;
    os_signpost_id_t v26 = sub_1A4095EAC();
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v18, (os_signpost_type_t)v32, v26, v16, "Session (%s) created", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6257B40](v22, -1, -1);
    MEMORY[0x1A6257B40](v21, -1, -1);

    __n128 v27 = *(void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v28 = v35;
    v27(v29, v35);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
    v27(v25, v28);
    return v11;
  }
  if ((unint64_t)v16 >> 32)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v16 >> 11 != 27)
  {
    if (v16 >> 16 <= 0x10)
    {
      int v16 = &v38;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1A3DE4660(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  type metadata accessor for DetectorCache();
  uint64_t v3 = sub_1A3D9C710();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return v2;
}

uint64_t sub_1A3DE46B4()
{
  id v0 = objc_msgSend(self, sel_globalSession);
  type metadata accessor for Session();
  uint64_t v1 = swift_allocObject();
  type metadata accessor for DetectorCache();
  uint64_t result = sub_1A3D9C710();
  *(void *)(v1 + 16) = v0;
  *(void *)(v1 + 24) = result;
  qword_1E96323E8 = v1;
  return result;
}

uint64_t *sub_1A3DE472C()
{
  if (qword_1E96323E0 != -1) {
    swift_once();
  }
  return &qword_1E96323E8;
}

uint64_t static Session.global.getter()
{
  if (qword_1E96323E0 != -1) {
    swift_once();
  }

  return swift_retain();
}

id sub_1A3DE47D4(uint64_t a1)
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void **)(v1 + 16);
  sub_1A3C8F944(a1);
  uint64_t v3 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  v8[0] = 0;
  id v4 = objc_msgSend(v2, sel_trackerResourcesConfiguredWithOptions_error_, v3, v8);

  if (v4)
  {
    id v5 = v8[0];
  }
  else
  {
    id v6 = v8[0];
    sub_1A4095AEC();

    swift_willThrow();
  }
  return v4;
}

id sub_1A3DE48CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  id v5 = *(void **)(v3 + 16);
  id v6 = (void *)sub_1A409614C();
  sub_1A3C8F944(a3);
  uint64_t v7 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  id v8 = objc_msgSend(v5, sel_detectorOfType_configuredWithOptions_error_, v6, v7, v12);

  if (v8)
  {
    id v9 = v12[0];
  }
  else
  {
    id v10 = v12[0];
    sub_1A4095AEC();

    swift_willThrow();
  }
  return v8;
}

id sub_1A3DE49E8(uint64_t a1, uint64_t a2)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  id v4 = *(void **)(v2 + 16);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_1A3C8F944(a2);
  id v6 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  v11[0] = 0;
  id v7 = objc_msgSend(v4, sel_detectorOfClass_configuredWithOptions_error_, ObjCClassFromMetadata, v6, v11);

  if (v7)
  {
    id v8 = v11[0];
  }
  else
  {
    id v9 = v11[0];
    sub_1A4095AEC();

    swift_willThrow();
  }
  return v7;
}

Swift::Void __swiftcall Session.releaseCachedResources()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_releaseCachedResources);
  type metadata accessor for DetectorCache();
  *(void *)(v0 + 24) = sub_1A3D9C710();

  swift_release();
}

uint64_t Session.deinit()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v34 = *v0;
  uint64_t v35 = sub_1A4095ECC();
  uint64_t v2 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  id v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v29 - v6;
  uint64_t v8 = sub_1A4095EFC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A3D9236C();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v13 = sub_1A3D92200();
  uint64_t v14 = *v13;
  char v15 = *((unsigned char *)v13 + 16);
  swift_retain_n();
  sub_1A4095EBC();
  int v16 = sub_1A4095EDC();
  int v33 = sub_1A409679C();
  if ((sub_1A40968EC() & 1) == 0)
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v35);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_11:

    swift_release();
    return v1;
  }
  os_log_t v31 = v16;
  uint64_t v32 = v8;
  if (v15)
  {
    if ((unint64_t)v14 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v14 >> 11 == 27)
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
      if (v14 >> 16 <= 0x10)
      {
        __n128 v29 = &v38;
        char v17 = v7;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
  if (v14)
  {
    char v17 = v7;
    __n128 v29 = v14;
LABEL_10:
    uint64_t v30 = v17;
    (*(void (**)(char *))(v2 + 16))(v4);
    uint64_t v18 = v4;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = v2;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v37 = v21;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v22 = sub_1A3CA9EBC(v1);
    uint64_t v36 = sub_1A3CB8AB0(v22, v23, &v37);
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_signpost_id_t v24 = sub_1A4095EAC();
    os_log_t v25 = v31;
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v31, (os_signpost_type_t)v33, v24, v29, "Session (%s) deallocated", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6257B40](v21, -1, -1);
    MEMORY[0x1A6257B40](v19, -1, -1);

    os_signpost_id_t v26 = *(void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v27 = v35;
    v26(v30, v35);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v32);
    v26(v18, v27);
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = swift_release_n();
  __break(1u);
  return result;
}

uint64_t Session.__deallocating_deinit()
{
  Session.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1A3DE4F94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(unsigned char *)(v6 + 80) = a4;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1A3DE4FC0, 0, 0);
}

uint64_t sub_1A3DE4FC0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 24);
  *(void *)(v0 + 56) = v1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 120)
                                                                           + **(int **)(*(void *)v1 + 120));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  void *v2 = v0;
  v2[1] = sub_1A3DE50E4;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 80);
  return v9(v5, v6, v3, v7, v4);
}

uint64_t sub_1A3DE50E4()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A3DE5268;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1A3DE5200;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A3DE5200()
{
  sub_1A3DE52EC(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 80));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3DE5268()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 80);
  swift_release();
  sub_1A3DE52EC(v1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1A3DE52EC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v6 = sub_1A4095ECC();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  id v41 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = sub_1A4095EFC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A3D9236C();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  int v16 = sub_1A3D9220C();
  char v17 = *v16;
  char v18 = *((unsigned char *)v16 + 16);
  sub_1A3CE11C8(a1, a2, a3);
  sub_1A3CE11C8(a1, a2, a3);
  sub_1A4095EBC();
  uint64_t v19 = sub_1A4095EDC();
  int v40 = sub_1A409679C();
  if ((sub_1A40968EC() & 1) == 0)
  {

    sub_1A3CE124C(a1, a2, a3);
    sub_1A3CE124C(a1, a2, a3);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v36 = v14;
  os_log_t v37 = v19;
  uint64_t v38 = v12;
  uint64_t v39 = v11;
  if (v18)
  {
    if ((unint64_t)v17 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v17 >> 11 == 27)
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
      if (v17 >> 16 <= 0x10)
      {
        uint64_t v34 = &v48;
        uint64_t v20 = v10;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
  if (!v17)
  {
LABEL_15:
    sub_1A3CE124C(a1, a2, a3);
    uint64_t result = sub_1A3CE124C(a1, a2, a3);
    __break(1u);
    return result;
  }
  uint64_t v20 = v10;
  uint64_t v34 = v17;
LABEL_10:
  uint64_t v35 = v20;
  unint64_t v23 = v41;
  uint64_t v22 = v42;
  (*(void (**)(char *))(v42 + 16))(v41);
  uint64_t v24 = v22;
  os_log_t v25 = (uint8_t *)swift_slowAlloc();
  uint64_t v26 = swift_slowAlloc();
  *(_DWORD *)os_log_t v25 = 136315138;
  uint64_t v47 = v26;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  unsigned __int8 v46 = a3;
  sub_1A3CE11C8(a1, a2, a3);
  uint64_t v27 = sub_1A409619C();
  uint64_t v44 = sub_1A3CB8AB0(v27, v28, &v47);
  sub_1A409695C();
  swift_bridgeObjectRelease();
  sub_1A3CE124C(a1, a2, a3);
  sub_1A3CE124C(a1, a2, a3);
  os_signpost_id_t v29 = sub_1A4095EAC();
  os_log_t v30 = v37;
  _os_signpost_emit_with_name_impl(&dword_1A3C62000, v37, (os_signpost_type_t)v40, v29, v34, "Session acquired detector of type %s", v25, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1A6257B40](v26, -1, -1);
  MEMORY[0x1A6257B40](v25, -1, -1);

  os_log_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v32 = v43;
  v31(v35, v43);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v39);
  return ((uint64_t (*)(char *, uint64_t))v31)(v23, v32);
}

uint64_t sub_1A3DE572C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v6 + 80) = a4;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 48) = *v5;
  return MEMORY[0x1F4188298](sub_1A3DE4FC0, 0, 0);
}

uint64_t sub_1A3DE575C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v6 + 80) = a4;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 48) = *v5;
  return MEMORY[0x1F4188298](sub_1A3DE578C, 0, 0);
}

uint64_t sub_1A3DE578C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 24);
  *(void *)(v0 + 56) = v1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 128)
                                                                           + **(int **)(*(void *)v1 + 128));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  void *v2 = v0;
  v2[1] = sub_1A3DE58B0;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 80);
  return v9(v5, v6, v3, v7, v4);
}

uint64_t sub_1A3DE58B0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A3DE59EC, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A3DE59EC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3DE5A50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v6 + 80) = a4;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 48) = *v5;
  return MEMORY[0x1F4188298](sub_1A3DE5A80, 0, 0);
}

uint64_t sub_1A3DE5A80()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 24);
  *(void *)(v0 + 56) = v1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 136)
                                                                           + **(int **)(*(void *)v1 + 136));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  void *v2 = v0;
  v2[1] = sub_1A3DE5BA4;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 80);
  return v9(v5, v6, v3, v7, v4);
}

uint64_t sub_1A3DE5BA4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A3DE628C, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A3DE5CE0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(unsigned char *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *v4;
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v6;
  return MEMORY[0x1F4188298](sub_1A3DE5D0C, 0, 0);
}

uint64_t sub_1A3DE5D0C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 24);
  *(void *)(v0 + 48) = v1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 144)
                                                                  + **(int **)(*(void *)v1 + 144));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  void *v2 = v0;
  v2[1] = sub_1A3DE5E30;
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 64);
  return v8(v5, v3, v6, v4);
}

uint64_t sub_1A3DE5E30()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A3DE5F40()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x1F4188298](sub_1A3DE5F64, 0, 0);
}

uint64_t sub_1A3DE5F64()
{
  uint64_t v1 = *(void *)(v0[2] + 24);
  v0[3] = v1;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v1 + 152) + **(int **)(*(void *)v1 + 152));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  void *v2 = v0;
  v2[1] = sub_1A3DE6078;
  return v4();
}

uint64_t sub_1A3DE6078()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t Session.description.getter()
{
  return 0;
}

uint64_t sub_1A3DE6228()
{
  return Session.description.getter();
}

uint64_t type metadata accessor for Session()
{
  return self;
}

uint64_t method lookup function for Session(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Session);
}

uint64_t static GenerateObjectnessBasedSaliencyImageRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static GenerateObjectnessBasedSaliencyImageRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t GenerateObjectnessBasedSaliencyImageRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3DE62C8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE6588();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DE6304(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE6588();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DE6340(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE65DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DE637C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE65DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GenerateObjectnessBasedSaliencyImageRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0770);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0778);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DE6588();
  sub_1A4096FEC();
  sub_1A3DE65DC();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3DE6588()
{
  unint64_t result = qword_1E9632488;
  if (!qword_1E9632488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9632488);
  }
  return result;
}

unint64_t sub_1A3DE65DC()
{
  unint64_t result = qword_1E9632490[0];
  if (!qword_1E9632490[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9632490);
  }
  return result;
}

uint64_t GenerateObjectnessBasedSaliencyImageRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t GenerateObjectnessBasedSaliencyImageRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0780);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0788);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DE6588();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3DE65DC();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for GenerateObjectnessBasedSaliencyImageRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DE695C(void *a1)
{
  return GenerateObjectnessBasedSaliencyImageRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3DE6974(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0770);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0778);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DE6588();
  sub_1A4096FEC();
  sub_1A3DE65DC();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double GenerateObjectnessBasedSaliencyImageRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v9);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3DE6CD8();
    sub_1A3E2C988((uint64_t)&type metadata for GenerateObjectnessBasedSaliencyImageRequest, v5, v6);
  }
  double result = v9[0].n128_f64[0];
  __n128 v8 = v9[1];
  *a2 = v9[0];
  a2[1] = v8;
  a2[2].n128_u8[0] = 0;
  a2[2].n128_u64[1] = v4;
  return result;
}

__n128 GenerateObjectnessBasedSaliencyImageRequest.regionOfInterest.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 GenerateObjectnessBasedSaliencyImageRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*GenerateObjectnessBasedSaliencyImageRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DE6BFC()
{
  unint64_t v0 = sub_1A3DE6CD8();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for GenerateObjectnessBasedSaliencyImageRequest, v0);
  qword_1E9632478 = result;
  return result;
}

uint64_t static GenerateObjectnessBasedSaliencyImageRequest.supportedRevisions.getter()
{
  if (qword_1E9632470 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void GenerateObjectnessBasedSaliencyImageRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 168;
}

void GenerateObjectnessBasedSaliencyImageRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *GenerateObjectnessBasedSaliencyImageRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*GenerateObjectnessBasedSaliencyImageRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3DE6CD8()
{
  unint64_t result = qword_1E95F0790;
  if (!qword_1E95F0790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0790);
  }
  return result;
}

int *sub_1A3DE6D2C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F07F8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(7, 0, 20);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(7, 0, 20);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(7, 0, 20);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for GenerateObjectnessBasedSaliencyImageRequest.Revision, v0 + 32);
  qword_1E9643DD8 = v0;
  return result;
}

uint64_t GenerateObjectnessBasedSaliencyImageRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t GenerateObjectnessBasedSaliencyImageRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1A4096F2C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3DE6F58(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE7454();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3DE6F94@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3DE6CD8();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3DE6FE8(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3DE6CD8();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3DE703C(_WORD *a1@<X8>)
{
  *a1 = 168;
}

uint64_t sub_1A3DE7048(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE6CD8();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3DE7088()
{
  if (qword_1E9632480 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DE70E4(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA260();

  return sub_1A3E2C684(a1, a2);
}

void sub_1A3DE7130(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(objc_allocWithZone((Class)VNCoreSceneUnderstandingDetectorImageSaliencyOConfiguration), sel_initWithObservationsRecipient_, a2);
  uint64_t v4 = sub_1A409617C();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC5C8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A40E88E0;
  *(void *)(v7 + 32) = v3;
  v12[0] = v7;
  sub_1A409632C();
  __n128 v12[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0798);
  __n128 v8 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 200);
  id v9 = v3;
  uint64_t v10 = (void (*)(unsigned char *, void))v8(v11);
  sub_1A3C8BC40((uint64_t)v12, v4, v6);
  v10(v11, 0);
}

void sub_1A3DE7260(uint64_t a1, uint64_t a2)
{
}

unint64_t sub_1A3DE727C()
{
  unint64_t result = qword_1E95F07A0[0];
  if (!qword_1E95F07A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95F07A0);
  }
  return result;
}

unint64_t sub_1A3DE72D0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF048();
  unint64_t result = sub_1A3DE7300();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3DE7300()
{
  unint64_t result = qword_1E95F07D8;
  if (!qword_1E95F07D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F07D8);
  }
  return result;
}

unint64_t sub_1A3DE7358()
{
  unint64_t result = qword_1E95F07E0;
  if (!qword_1E95F07E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F07E0);
  }
  return result;
}

unint64_t sub_1A3DE73B0()
{
  unint64_t result = qword_1E95F07E8;
  if (!qword_1E95F07E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F07E8);
  }
  return result;
}

unint64_t sub_1A3DE7404(uint64_t a1)
{
  unint64_t result = sub_1A3CCA260();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3DE742C(uint64_t a1)
{
  unint64_t result = sub_1A3DE7454();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3DE7454()
{
  unint64_t result = qword_1E95F07F0;
  if (!qword_1E95F07F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F07F0);
  }
  return result;
}

unint64_t sub_1A3DE74A8(uint64_t a1)
{
  unint64_t result = sub_1A3DE6CD8();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for GenerateObjectnessBasedSaliencyImageRequest()
{
  return &type metadata for GenerateObjectnessBasedSaliencyImageRequest;
}

ValueMetadata *type metadata accessor for GenerateObjectnessBasedSaliencyImageRequest.Revision()
{
  return &type metadata for GenerateObjectnessBasedSaliencyImageRequest.Revision;
}

unsigned char *_s6Vision43GenerateObjectnessBasedSaliencyImageRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DE7590);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateObjectnessBasedSaliencyImageRequest.Revision.CodingKeys()
{
  return &type metadata for GenerateObjectnessBasedSaliencyImageRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerateObjectnessBasedSaliencyImageRequest.Revision.Revision2CodingKeys()
{
  return &type metadata for GenerateObjectnessBasedSaliencyImageRequest.Revision.Revision2CodingKeys;
}

unint64_t sub_1A3DE75DC()
{
  unint64_t result = qword_1E9632D20[0];
  if (!qword_1E9632D20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9632D20);
  }
  return result;
}

unint64_t sub_1A3DE7634()
{
  unint64_t result = qword_1E9632E30;
  if (!qword_1E9632E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9632E30);
  }
  return result;
}

unint64_t sub_1A3DE768C()
{
  unint64_t result = qword_1E9632E38[0];
  if (!qword_1E9632E38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9632E38);
  }
  return result;
}

unint64_t sub_1A3DE76E4()
{
  unint64_t result = qword_1E9632EC0;
  if (!qword_1E9632EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9632EC0);
  }
  return result;
}

unint64_t sub_1A3DE773C()
{
  unint64_t result = qword_1E9632EC8[0];
  if (!qword_1E9632EC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9632EC8);
  }
  return result;
}

void *sub_1A3DE7794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 v8 = (void *)swift_allocObject();
  v8[10] = a1;
  v8[11] = a2;
  id v8[2] = a3;
  sub_1A3C7D648(a4, (uint64_t)(v8 + 3));
  return v8;
}

id sub_1A3DE77FC()
{
  uint64_t v1 = *(void **)(v0 + 88);
  if (v1) {
    return v1;
  }
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v3 = 0xD000000000000028;
  *(void *)(v3 + 8) = 0x80000001A40B8240;
  *(_DWORD *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 20) = 0;
  return (id)swift_willThrow();
}

uint64_t sub_1A3DE787C()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestPerformingContext()
{
  return self;
}

uint64_t static DetectHumanBodyPoseRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static DetectHumanBodyPoseRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t DetectHumanBodyPoseRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3DE7920(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE7BE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DE795C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE7BE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DE7998(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE7C34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DE79D4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE7C34();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectHumanBodyPoseRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0800);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0808);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DE7BE0();
  sub_1A4096FEC();
  sub_1A3DE7C34();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3DE7BE0()
{
  unint64_t result = qword_1E9632F68;
  if (!qword_1E9632F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9632F68);
  }
  return result;
}

unint64_t sub_1A3DE7C34()
{
  unint64_t result = qword_1E9632F70[0];
  if (!qword_1E9632F70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9632F70);
  }
  return result;
}

uint64_t DetectHumanBodyPoseRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectHumanBodyPoseRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0810);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0818);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DE7BE0();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3DE7C34();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *uint64_t v13 = &type metadata for DetectHumanBodyPoseRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DE7FB4(void *a1)
{
  return DetectHumanBodyPoseRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3DE7FCC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0800);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0808);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DE7BE0();
  sub_1A4096FEC();
  sub_1A3DE7C34();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double DetectHumanBodyPoseRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v9);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3DE837C();
    sub_1A3E2C988((uint64_t)&type metadata for DetectHumanBodyPoseRequest, v5, v6);
  }
  double result = v9[0].n128_f64[0];
  __n128 v8 = v9[1];
  *a2 = v9[0];
  a2[1] = v8;
  a2[2].n128_u16[0] = 1;
  a2[2].n128_u64[1] = v4;
  return result;
}

void *DetectHumanBodyPoseRequest.supportedJointNames.getter()
{
  return &unk_1EF74C070;
}

void *DetectHumanBodyPoseRequest.supportedJointsGroupNames.getter()
{
  return &unk_1EF74C0A8;
}

__n128 DetectHumanBodyPoseRequest.regionOfInterest.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 DetectHumanBodyPoseRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*DetectHumanBodyPoseRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DE8270()
{
  unint64_t v0 = sub_1A3DE837C();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for DetectHumanBodyPoseRequest, v0);
  qword_1E9632F58 = result;
  return result;
}

uint64_t static DetectHumanBodyPoseRequest.supportedRevisions.getter()
{
  if (qword_1E9632F50 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t DetectHumanBodyPoseRequest.detectsHands.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t DetectHumanBodyPoseRequest.detectsHands.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*DetectHumanBodyPoseRequest.detectsHands.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void DetectHumanBodyPoseRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 96;
}

void DetectHumanBodyPoseRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

unsigned char *DetectHumanBodyPoseRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 33) = *result;
  return result;
}

uint64_t (*DetectHumanBodyPoseRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3DE837C()
{
  unint64_t result = qword_1E95F0820;
  if (!qword_1E95F0820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0820);
  }
  return result;
}

int *sub_1A3DE83D0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0890);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(8, 0, 9);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(8, 0, 9);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(8, 0, 9);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for DetectHumanBodyPoseRequest.Revision, v0 + 32);
  qword_1E9643DE0 = v0;
  return result;
}

BOOL sub_1A3DE8488()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFF00);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1A4095F8C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v19[-v9];
  char v11 = *((unsigned char *)v0 + 32);
  char v12 = *((unsigned char *)v0 + 33);
  uint64_t v13 = *((void *)v0 + 5);
  long long v14 = v0[1];
  long long v21 = *v0;
  long long v22 = v14;
  char v23 = v11;
  char v24 = v12;
  uint64_t v25 = v13;
  char v20 = 0;
  unint64_t v15 = sub_1A3DE837C();
  sub_1A3E2D414(&v20, (uint64_t)&type metadata for DetectHumanBodyPoseRequest, v15, (uint64_t)v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1A3CA2EB8((uint64_t)v3, (uint64_t *)&unk_1E95EFF00);
    return 0;
  }
  else
  {
    uint64_t v17 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
    v17(v10, v3, v4);
    v17(v7, v10, v4);
    BOOL v16 = (*(unsigned int (**)(unsigned char *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x1E4F1E810];
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v16;
}

uint64_t DetectHumanBodyPoseRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t DetectHumanBodyPoseRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1A4096F2C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3DE8844(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE8DA0();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3DE8880@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3DE837C();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3DE88D4(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3DE837C();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3DE8928(_WORD *a1@<X8>)
{
  *a1 = 96;
}

uint64_t sub_1A3DE8934(uint64_t a1)
{
  unint64_t v2 = sub_1A3DE837C();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3DE8978()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1A4096F2C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3DE8A50()
{
  if (qword_1E9632F60 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3DE8AAC()
{
  return sub_1A409617C();
}

uint64_t sub_1A3DE8AD4(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA55C();

  return sub_1A3E2C684(a1, a2);
}

unint64_t sub_1A3DE8B20(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  char v7 = *((unsigned char *)v1 + 32);
  char v8 = *((unsigned char *)v1 + 33);
  uint64_t v9 = v1[5];
  unint64_t v10 = sub_1A3DE8DA0();
  unint64_t v11 = sub_1A3D45608(a1, (uint64_t)&type metadata for DetectHumanBodyPoseRequest, v10);
  *(void *)&long long v31 = v3;
  *((void *)&v31 + 1) = v4;
  uint64_t v32 = v5;
  uint64_t v33 = v6;
  char v34 = v7;
  char v35 = v8;
  uint64_t v36 = v9;
  uint64_t v12 = sub_1A3D4507C((uint64_t)&type metadata for DetectHumanBodyPoseRequest, v10);
  uint64_t v14 = v13;
  uint64_t v15 = sub_1A409617C();
  if (!v14) {
    goto LABEL_8;
  }
  if (v15 == v12 && v14 == v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v18 = sub_1A409617C();
    uint64_t v20 = v19;
    *(void *)&long long v31 = v3;
    *((void *)&v31 + 1) = v4;
    uint64_t v32 = v5;
    char v34 = v7;
    char v35 = v8;
    uint64_t v36 = v9;
    BOOL v21 = sub_1A3DE8488();
    uint64_t v33 = MEMORY[0x1E4FBB390];
    LOBYTE(v31) = v21;
    sub_1A3C856F4(&v31, v30);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A3C8D048(v30, v18, v20, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_1A409617C();
    uint64_t v25 = v24;
    uint64_t v26 = sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EFED0);
    uint64_t v27 = sub_1A409684C();
    uint64_t v33 = v26;
    *(void *)&long long v31 = v27;
    sub_1A3C856F4(&v31, v30);
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A3C8D048(v30, v23, v25, v28);
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    return v11;
  }
  char v17 = sub_1A4096E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_7;
  }
  return v11;
}

id sub_1A3DE8D78(uint64_t a1)
{
  return sub_1A3DE8DF4(a1);
}

uint64_t sub_1A3DE8D90()
{
  return 3737841664;
}

unint64_t sub_1A3DE8DA0()
{
  unint64_t result = qword_1E95F0828;
  if (!qword_1E95F0828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0828);
  }
  return result;
}

id sub_1A3DE8DF4(uint64_t a1)
{
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3C8C73C(0, &qword_1E95F0888);
  id result = objc_msgSend(ObjCClassFromMetadata, sel_isSubclassOfClass_, swift_getObjCClassFromMetadata());
  if (result)
  {
    uint64_t v4 = sub_1A409617C();
    uint64_t v6 = v5;
    __n128 v9[3] = sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EFED0);
    v9[0] = sub_1A409684C();
    char v7 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)a1 + 200))(v8);
    sub_1A3C8BC40((uint64_t)v9, v4, v6);
    return (id)v7(v8, 0);
  }
  return result;
}

unint64_t sub_1A3DE8F20()
{
  unint64_t result = qword_1E95F0830;
  if (!qword_1E95F0830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0830);
  }
  return result;
}

unint64_t sub_1A3DE8F74(uint64_t a1)
{
  unint64_t result = sub_1A3CCA55C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3DE8F9C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF294();
  unint64_t result = sub_1A3DE8FCC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3DE8FCC()
{
  unint64_t result = qword_1E95F0868;
  if (!qword_1E95F0868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0868);
  }
  return result;
}

unint64_t sub_1A3DE9024()
{
  unint64_t result = qword_1E95F0870;
  if (!qword_1E95F0870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0870);
  }
  return result;
}

unint64_t sub_1A3DE907C()
{
  unint64_t result = qword_1E95F0878;
  if (!qword_1E95F0878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0878);
  }
  return result;
}

uint64_t sub_1A3DE90D0()
{
  return sub_1A3DE9400(&qword_1E95F0880, (void (*)(uint64_t))type metadata accessor for HumanBodyPoseObservation);
}

unint64_t sub_1A3DE9118(uint64_t a1)
{
  unint64_t result = sub_1A3DE837C();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for DetectHumanBodyPoseRequest()
{
  return &type metadata for DetectHumanBodyPoseRequest;
}

ValueMetadata *type metadata accessor for DetectHumanBodyPoseRequest.Revision()
{
  return &type metadata for DetectHumanBodyPoseRequest.Revision;
}

unsigned char *_s6Vision26DetectHumanBodyPoseRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DE9200);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectHumanBodyPoseRequest.Revision.CodingKeys()
{
  return &type metadata for DetectHumanBodyPoseRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectHumanBodyPoseRequest.Revision.Revision2CodingKeys()
{
  return &type metadata for DetectHumanBodyPoseRequest.Revision.Revision2CodingKeys;
}

unint64_t sub_1A3DE924C()
{
  unint64_t result = qword_1E9633780[0];
  if (!qword_1E9633780[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9633780);
  }
  return result;
}

unint64_t sub_1A3DE92A4()
{
  unint64_t result = qword_1E9633890;
  if (!qword_1E9633890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9633890);
  }
  return result;
}

unint64_t sub_1A3DE92FC()
{
  unint64_t result = qword_1E9633898[0];
  if (!qword_1E9633898[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9633898);
  }
  return result;
}

unint64_t sub_1A3DE9354()
{
  unint64_t result = qword_1E9633920;
  if (!qword_1E9633920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9633920);
  }
  return result;
}

unint64_t sub_1A3DE93AC()
{
  unint64_t result = qword_1E9633928[0];
  if (!qword_1E9633928[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9633928);
  }
  return result;
}

uint64_t sub_1A3DE9400(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double OpticalFlowObservation.size.getter()
{
  uint64_t v1 = *(__CVBuffer **)(v0 + *(int *)(type metadata accessor for OpticalFlowObservation() + 32));
  int64_t Width = CVPixelBufferGetWidth(v1);
  CVPixelBufferGetHeight(v1);
  return (double)Width;
}

uint64_t type metadata accessor for OpticalFlowObservation()
{
  uint64_t result = qword_1E9633DB0;
  if (!qword_1E9633DB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t OpticalFlowObservation.pixelFormat.getter()
{
  uint64_t v1 = *(__CVBuffer **)(v0 + *(int *)(type metadata accessor for OpticalFlowObservation() + 32));

  return CVPixelBufferGetPixelFormatType(v1);
}

uint64_t OpticalFlowObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A4095C7C();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

float OpticalFlowObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for OpticalFlowObservation() + 20));
}

__n128 OpticalFlowObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OpticalFlowObservation() + 24);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t OpticalFlowObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for OpticalFlowObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t OpticalFlowObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v1 = type metadata accessor for OpticalFlowObservation();
  unint64_t v2 = *(__CVBuffer **)(v0 + *(int *)(v1 + 32));
  CVPixelBufferGetWidth(v2);
  CVPixelBufferGetHeight(v2);
  sub_1A40965CC();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  CVPixelBufferGetWidth(v2);
  CVPixelBufferGetHeight(v2);
  sub_1A40965CC();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  CVPixelBufferGetPixelFormatType(v2);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v3 = sub_1A3DEAAD8(&qword_1E95F0898, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  sub_1A3D8AC8C(v1, (uint64_t)&off_1EF7491C8, v3);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

uint64_t OpticalFlowObservation.withUnsafePointer<A>(_:)(void (*a1)(void))
{
  uint64_t v3 = *(__CVBuffer **)(v1 + *(int *)(type metadata accessor for OpticalFlowObservation() + 32));
  CVPixelBufferLockBaseAddress(v3, 1uLL);
  if (CVPixelBufferGetBaseAddress(v3))
  {
    a1();
    return CVPixelBufferUnlockBaseAddress(v3, 1uLL);
  }
  else
  {
    uint64_t result = sub_1A4096BEC();
    __break(1u);
  }
  return result;
}

Swift::tuple_Float_Float __swiftcall OpticalFlowObservation.flow(at:)(Vision::NormalizedPoint at)
{
  uint64_t v3 = v2;
  char v4 = v1;
  uint64_t v5 = type metadata accessor for OpticalFlowObservation();
  MEMORY[0x1F4188790](v5);
  char v7 = (__CVBuffer *)&v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = &v45[-v9];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v45[-v12];
  long long v48 = *v4;
  uint64_t v15 = *(int *)(v14 + 32);
  uint64_t v16 = *(__CVBuffer **)(v3 + v15);
  int64_t Width = CVPixelBufferGetWidth(v16);
  *(double *)&unint64_t v18 = (double)(uint64_t)CVPixelBufferGetHeight(v16);
  sub_1A3C7E530(&v47);
  char v46 = v47;
  CGPoint v19 = NormalizedPoint.toImageCoordinates(_:origin:)((CGSize)__PAIR128__(v18, (double)Width), (Vision::CoordinateOrigin)&v46);
  double v20 = round(v19.x);
  if ((~*(void *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  double v21 = round(v19.y);
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v22 = (uint64_t)v20;
  sub_1A3DE9D98(v3, (uint64_t)v13);
  sub_1A3DE9D98((uint64_t)v13, (uint64_t)v10);
  if (v22 < 0) {
    goto LABEL_43;
  }
  uint64_t v23 = (uint64_t)v21;
  if ((uint64_t)v21 < 0) {
    goto LABEL_43;
  }
  uint64_t v24 = *(__CVBuffer **)&v10[*(int *)(v5 + 32)];
  int64_t v25 = CVPixelBufferGetWidth(v24);
  CVPixelBufferGetHeight(v24);
  double v26 = (double)v25;
  sub_1A3DE9DFC((uint64_t)v10);
  if ((~COERCE__INT64((double)v25) & 0x7FF0000000000000) == 0) {
    goto LABEL_32;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v26 >= 9.22337204e18)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  sub_1A3DE9D98((uint64_t)v13, (uint64_t)v7);
  if (v22 >= (uint64_t)v26)
  {
LABEL_44:
    sub_1A3DE9DFC((uint64_t)v7);
    sub_1A3DE9DFC((uint64_t)v13);
    goto LABEL_45;
  }
  uint64_t v27 = *(__CVBuffer **)((char *)v7 + *(int *)(v5 + 32));
  CVPixelBufferGetWidth(v27);
  double Height = (double)(uint64_t)CVPixelBufferGetHeight(v27);
  sub_1A3DE9DFC((uint64_t)v7);
  sub_1A3DE9DFC((uint64_t)v13);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0) {
    goto LABEL_35;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (Height >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v23 >= (uint64_t)Height)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  char v7 = *(__CVBuffer **)(v3 + v15);
  int64_t v29 = CVPixelBufferGetWidth(v7);
  CVPixelBufferGetHeight(v7);
  double v30 = (double)v29;
  if ((~COERCE__INT64((double)v29) & 0x7FF0000000000000) == 0) {
    goto LABEL_38;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v31 = v23 * (uint64_t)v30;
  if ((unsigned __int128)(v23 * (__int128)(uint64_t)v30) >> 64 != v31 >> 63)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v32 = v22 + v31;
  if (__OFADD__(v22, v31))
  {
LABEL_42:
    __break(1u);
LABEL_43:
    sub_1A3DE9DFC((uint64_t)v10);
    sub_1A3DE9D98((uint64_t)v13, (uint64_t)v7);
    goto LABEL_44;
  }
  OSType PixelFormatType = CVPixelBufferGetPixelFormatType(v7);
  if (PixelFormatType != 843264102)
  {
    if (PixelFormatType == 843264104)
    {
      uint64_t v37 = sub_1A3DEAAD8(&qword_1E95F08A0, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
      sub_1A3DB277C(v32, v5, (uint64_t)&type metadata for OpticalFlowObservation.PixelUV_16F, v37, (uint64_t)&v48);
      _H1 = WORD1(v48);
      _H0 = v48;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      goto LABEL_47;
    }
LABEL_46:
    sub_1A4096BEC();
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v34 = sub_1A3DEAAD8(&qword_1E95F08A0, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  sub_1A3DB277C(v32, v5, (uint64_t)&type metadata for OpticalFlowObservation.PixelUV_32F, v34, (uint64_t)&v48);
  _S1 = *((float *)&v48 + 1);
  _S0 = *(float *)&v48;
LABEL_47:
  result._1 = _S1;
  result._0 = _S0;
  return result;
}

uint64_t sub_1A3DE9D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OpticalFlowObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3DE9DFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OpticalFlowObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OpticalFlowObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DE9EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X3>, int *a5@<X4>, uint64_t a6@<X8>, float a7@<S0>)
{
  __int16 v13 = *a3;
  uint64_t v14 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a6, a1, v14);
  uint64_t v15 = a5[6];
  *(float *)(a6 + a5[5]) = a7;
  uint64_t result = sub_1A3C7D648(a2, a6 + v15);
  uint64_t v17 = a5[8];
  *(_WORD *)(a6 + a5[7]) = v13;
  *(void *)(a6 + v17) = a4;
  return result;
}

uint64_t sub_1A3DE9F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3DEAAD8(&qword_1E95F0898, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

void *sub_1A3DEA010@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A3DEAAD8(&qword_1E95F08A0, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  return sub_1A3DB2CDC(a1, a2, v6, a3);
}

void sub_1A3DEA090(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_1A3DEAAD8(&qword_1E95F08A0, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  sub_1A3DB28E0(a1, a2, v4);
}

uint64_t OpticalFlowObservation.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_pixelBuffer);
  CVPixelBufferRef v5 = sub_1A3CAB15C();

  id v6 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v8 = v7;
  objc_msgSend(a1, sel_timeRange);

  uint64_t v9 = (int *)type metadata accessor for OpticalFlowObservation();
  *(_DWORD *)(a2 + v9[5]) = v8;
  uint64_t v10 = a2 + v9[6];
  *(_OWORD *)uint64_t v10 = v13;
  *(_OWORD *)(v10 + 16) = v14;
  *(void *)(v10 + 32) = v15;
  *(void *)(v10 + 40) = v16;
  *(unsigned char *)(v10 + 48) = 0;
  *(_WORD *)(a2 + v9[7]) = -8;
  *(void *)(a2 + v9[8]) = v5;
  uint64_t v11 = *(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v9 - 1) + 56);

  return v11(a2, 0, 1, v9);
}

uint64_t sub_1A3DEA2AC@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, int *a4@<X4>, uint64_t a5@<X8>)
{
  __int16 v9 = *a2;
  id v10 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v12 = v11;
  id v13 = objc_msgSend(a1, sel_pixelBuffer);

  uint64_t v14 = a4[6];
  *(_DWORD *)(a5 + a4[5]) = v12;
  uint64_t result = sub_1A3C7D648(a3, a5 + v14);
  uint64_t v16 = a4[8];
  *(_WORD *)(a5 + a4[7]) = v9;
  *(void *)(a5 + v16) = v13;
  return result;
}

id _s6Vision22OpticalFlowObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x1F4188790](v8);
  int v11 = (char *)v33 - v10;
  int v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12((char *)v33 - v10, a1, v4, v9);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v7, a2, v4);
  sub_1A3DEAAD8(&qword_1E95EE5E0, MEMORY[0x1E4F27990]);
  char v13 = sub_1A409612C();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  v14(v11, v4);
  if ((v13 & 1) == 0) {
    return 0;
  }
  uint64_t v15 = (int *)type metadata accessor for OpticalFlowObservation();
  uint64_t v16 = v15[6];
  uint64_t v17 = (uint64_t *)(a1 + v16);
  char v18 = *(unsigned char *)(a1 + v16 + 48);
  CGPoint v19 = (uint64_t *)(a2 + v16);
  if (v18)
  {
    if (!*((unsigned char *)v19 + 48)) {
      return 0;
    }
  }
  else
  {
    if (v19[6]) {
      return 0;
    }
    uint64_t v20 = *v17;
    uint64_t v21 = v17[1];
    long long v22 = *((_OWORD *)v17 + 1);
    uint64_t v23 = v17[4];
    uint64_t v24 = *v19;
    uint64_t v25 = v19[1];
    long long v26 = *((_OWORD *)v19 + 1);
    uint64_t v28 = v19[4];
    uint64_t v27 = v19[5];
    uint64_t v38 = v17[5];
    uint64_t v39 = v24;
    uint64_t v40 = v25;
    long long v41 = v26;
    uint64_t v42 = v28;
    uint64_t v43 = v27;
    uint64_t v34 = v20;
    uint64_t v35 = v21;
    long long v36 = v22;
    uint64_t v37 = v23;
    if ((sub_1A409669C() & 1) == 0) {
      return 0;
    }
  }
  if (*(float *)(a1 + v15[5]) == *(float *)(a2 + v15[5]))
  {
    uint64_t v29 = v15[7];
    unsigned int v30 = *(unsigned __int16 *)(a1 + v29);
    unsigned int v31 = *(unsigned __int16 *)(a2 + v29);
    if (v30 <= 0xFFF7)
    {
      v33[7] = v30;
      if (v31 > 0xFFF7) {
        return 0;
      }
      v33[6] = v31 & 0x1FF;
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
      return objc_msgSend(self, sel_isCVPixelBuffer_equalToCVPixelBuffer_, *(void *)(a1 + v15[8]), *(void *)(a2 + v15[8]));
    }
    if (v31 > 0xFFF7) {
      return objc_msgSend(self, sel_isCVPixelBuffer_equalToCVPixelBuffer_, *(void *)(a1 + v15[8]), *(void *)(a2 + v15[8]));
    }
  }
  return 0;
}

uint64_t sub_1A3DEA628(void *a1)
{
  a1[1] = sub_1A3DEAAD8(&qword_1E95F08B0, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  a1[2] = sub_1A3DEAAD8(&qword_1E95F08B8, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  a1[3] = sub_1A3DEAAD8(&qword_1E95F08C0, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  uint64_t result = sub_1A3DEAAD8(&qword_1E95F08A8, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3DEA6FC(uint64_t a1)
{
  uint64_t result = sub_1A3DEAAD8(&qword_1E95F0898, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A3DEA754()
{
  return sub_1A3DEAAD8(&qword_1E95ED130, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
}

uint64_t sub_1A3DEA79C(uint64_t a1)
{
  uint64_t result = sub_1A3DEAAD8(&qword_1E95F0898, (void (*)(uint64_t))type metadata accessor for OpticalFlowObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for OpticalFlowObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3DEA808);
}

uint64_t sub_1A3DEA808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095C7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for OpticalFlowObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3DEA8DC);
}

uint64_t sub_1A3DEA8DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095C7C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A3DEA998()
{
  uint64_t result = sub_1A4095C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpticalFlowObservation.PixelUV_32F()
{
  return &type metadata for OpticalFlowObservation.PixelUV_32F;
}

_DWORD *__swift_memcpy4_2(_DWORD *result, _DWORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for OpticalFlowObservation.PixelUV_16F(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OpticalFlowObservation.PixelUV_16F(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OpticalFlowObservation.PixelUV_16F()
{
  return &type metadata for OpticalFlowObservation.PixelUV_16F;
}

ValueMetadata *type metadata accessor for OpticalFlowObservation.PixelUV_16U()
{
  return &type metadata for OpticalFlowObservation.PixelUV_16U;
}

uint64_t sub_1A3DEAAD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 Joint3D.position.getter()
{
  return *(__n128 *)v0;
}

__n128 Joint3D.localPosition.getter()
{
  return v0[4];
}

uint64_t Joint3D.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Joint3D.parentJoint.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A3DEABA0()
{
  uint64_t result = 0x6E6F697469736F70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736F506C61636F6CLL;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 0x6F4A746E65726170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3DEAC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DEB81C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DEAC70(uint64_t a1)
{
  unint64_t v2 = sub_1A3DEBA20();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DEACAC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DEBA20();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Joint3D.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F08C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DEBA20();
  sub_1A4096FDC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EECB8);
  char v37 = 0;
  sub_1A3DEBA74(&qword_1E95EECC0, &qword_1E95EECC8);
  sub_1A4096CFC();
  uint64_t result = v38;
  unint64_t v10 = *(void *)(v38 + 16);
  if (!v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v10 == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v10 < 3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v10 == 3)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  long long v11 = *(_OWORD *)(v38 + 32);
  long long v35 = *(_OWORD *)(v38 + 48);
  long long v36 = v11;
  long long v12 = *(_OWORD *)(v38 + 64);
  long long v33 = *(_OWORD *)(v38 + 80);
  long long v34 = v12;
  swift_bridgeObjectRelease();
  char v37 = 1;
  sub_1A4096CFC();
  uint64_t result = v38;
  unint64_t v13 = *(void *)(v38 + 16);
  if (!v13)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v13 == 1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v13 >= 3)
  {
    if (v13 != 3)
    {
      long long v14 = *(_OWORD *)(v38 + 32);
      long long v31 = *(_OWORD *)(v38 + 48);
      long long v32 = v14;
      long long v15 = *(_OWORD *)(v38 + 64);
      long long v29 = *(_OWORD *)(v38 + 80);
      long long v30 = v15;
      swift_bridgeObjectRelease();
      LOBYTE(v38) = 2;
      uint64_t v16 = sub_1A4096CBC();
      uint64_t v18 = v17;
      LOBYTE(v38) = 3;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1A4096CBC();
      uint64_t v21 = v20;
      long long v22 = *(void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v28 = v19;
      v22(v8, v5);
      long long v23 = v35;
      *(_OWORD *)a2 = v36;
      *(_OWORD *)(a2 + 16) = v23;
      long long v24 = v33;
      *(_OWORD *)(a2 + 32) = v34;
      *(_OWORD *)(a2 + 48) = v24;
      long long v25 = v31;
      *(_OWORD *)(a2 + 64) = v32;
      *(_OWORD *)(a2 + 80) = v25;
      long long v26 = v29;
      *(_OWORD *)(a2 + 96) = v30;
      *(_OWORD *)(a2 + 112) = v26;
      *(void *)(a2 + 128) = v16;
      *(void *)(a2 + 136) = v18;
      *(void *)(a2 + 144) = v28;
      *(void *)(a2 + 152) = v21;
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t Joint3D.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F08D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *v1;
  long long v28 = v1[1];
  long long v29 = v8;
  long long v9 = v1[2];
  long long v26 = v1[3];
  long long v27 = v9;
  long long v10 = v1[4];
  long long v24 = v1[5];
  long long v25 = v10;
  long long v11 = v1[6];
  long long v22 = v1[7];
  long long v23 = v11;
  uint64_t v12 = *((void *)v1 + 16);
  void v20[2] = *((void *)v1 + 17);
  v20[3] = v12;
  v20[1] = *((void *)v1 + 18);
  v20[0] = *((void *)v1 + 19);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DEBA20();
  sub_1A4096FEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EED20);
  unint64_t v13 = (_OWORD *)swift_allocObject();
  long long v21 = xmmword_1A40F83D0;
  long long v14 = v29;
  v13[1] = xmmword_1A40F83D0;
  v13[2] = v14;
  long long v15 = v27;
  v13[3] = v28;
  v13[4] = v15;
  v13[5] = v26;
  long long v31 = v13;
  char v30 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EECB8);
  sub_1A3DEBA74(&qword_1E95EED28, &qword_1E95EED30);
  sub_1A4096DBC();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v16 = (_OWORD *)swift_allocObject();
    long long v17 = v25;
    v16[1] = v21;
    v16[2] = v17;
    long long v18 = v23;
    v16[3] = v24;
    v16[4] = v18;
    v16[5] = v22;
    long long v31 = v16;
    char v30 = 1;
    sub_1A4096DBC();
    swift_bridgeObjectRelease();
    LOBYTE(v31) = 2;
    sub_1A4096D7C();
    LOBYTE(v31) = 3;
    sub_1A4096D7C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Joint3D.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  sub_1A3CAA0AC();

  return sub_1A3CAA0AC();
}

void __swiftcall Joint3D.init(position:localPosition:identifer:parentJoint:)(Vision::Joint3D *__return_ptr retstr, simd_float4x4 *position, simd_float4x4 *localPosition, Swift::String identifer, Swift::String parentJoint)
{
  retstr->position.columns[0] = v5;
  retstr->position.columns[1] = v6;
  retstr->position.columns[2] = v7;
  retstr->position.columns[3] = v8;
  retstr->localPosition.columns[0] = v9;
  retstr->localPosition.columns[1] = v10;
  retstr->localPosition.columns[2] = v11;
  retstr->localPosition.columns[3] = v12;
  retstr->identifier._countAndFlagsBits = (uint64_t)position;
  retstr->identifier._object = localPosition;
  retstr->parentJoint = identifer;
}

uint64_t Joint3D.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DEB550@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Joint3D.init(from:)(a1, a2);
}

uint64_t sub_1A3DEB568(void *a1)
{
  return Joint3D.encode(to:)(a1);
}

uint64_t sub_1A3DEB584()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DEB664()
{
  swift_bridgeObjectRetain();
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A40961CC();
  swift_bridgeObjectRelease();
  sub_1A3CAA0AC();

  return sub_1A3CAA0AC();
}

uint64_t sub_1A3DEB740()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DEB81C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736F506C61636F6CLL && a2 == 0xED00006E6F697469 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F4A746E65726170 && a2 == 0xEB00000000746E69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1A3DEBA20()
{
  unint64_t result = qword_1E95F08D0;
  if (!qword_1E95F08D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F08D0);
  }
  return result;
}

uint64_t sub_1A3DEBA74(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EECB8);
    sub_1A3DEBAF4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3DEBAF4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95EECD0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s6Vision7Joint3DV2eeoiySbAC_ACtFZ_0(float32x4_t *a1, float32x4_t *a2)
{
  if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1[1], a2[1]), (int8x16_t)vceqq_f32(*a1, *a2)), vandq_s8((int8x16_t)vceqq_f32(a1[2], a2[2]), (int8x16_t)vceqq_f32(a1[3], a2[3])))) & 0x80000000) == 0|| (vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1[6], a2[6]), (int8x16_t)vceqq_f32(a1[7], a2[7])), vandq_s8((int8x16_t)vceqq_f32(a1[5], a2[5]), (int8x16_t)vceqq_f32(a1[4], a2[4])))) & 0x80000000) == 0)
  {
    return 0;
  }
  uint64_t v3 = a1[9].i64[0];
  uint64_t v4 = a1[9].i64[1];
  uint64_t v5 = a2[9].i64[0];
  uint64_t v6 = a2[9].i64[1];
  if (a1[8].i64[0] == a2[8].i64[0] && a1[8].i64[1] == a2[8].i64[1]
    || (char v7 = sub_1A4096E5C(), result = 0, (v7 & 1) != 0))
  {
    if (v3 == v5 && v4 == v6)
    {
      return 1;
    }
    else
    {
      return sub_1A4096E5C();
    }
  }
  return result;
}

unint64_t sub_1A3DEBC60()
{
  unint64_t result = qword_1E95F08E0;
  if (!qword_1E95F08E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F08E0);
  }
  return result;
}

unint64_t sub_1A3DEBCB8()
{
  unint64_t result = qword_1E95F08E8;
  if (!qword_1E95F08E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F08E8);
  }
  return result;
}

unint64_t sub_1A3DEBD10()
{
  unint64_t result = qword_1E95F08F0;
  if (!qword_1E95F08F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F08F0);
  }
  return result;
}

uint64_t destroy for Joint3D()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Joint3D(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  uint64_t v7 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v7;
  uint64_t v8 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Joint3D(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy160_16(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for Joint3D(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Joint3D(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 136);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Joint3D(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 136) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Joint3D()
{
  return &type metadata for Joint3D;
}

unsigned char *storeEnumTagSinglePayload for Joint3D.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DEC0D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Joint3D.CodingKeys()
{
  return &type metadata for Joint3D.CodingKeys;
}

void FaceObservation.init(boundingBox:revision:)(long long *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A4095C7C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  MEMORY[0x1F4188790](v9 - 8);
  simd_float4 v11 = (char *)&v26[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v26[-1] - v13;
  MEMORY[0x1F4188790](v15);
  long long v17 = (char *)&v26[-1] - v16;
  long long v25 = *a1;
  uint64_t v18 = *((void *)a1 + 2);
  uint64_t v19 = *((void *)a1 + 3);
  if (*a2 == 5) {
    __int16 v20 = -8;
  }
  else {
    __int16 v20 = *a2;
  }
  uint64_t v35 = 0;
  memset(v34, 0, sizeof(v34));
  long long v21 = self;
  id v22 = objc_msgSend(v21, sel_radians);
  sub_1A3C8C73C(0, (unint64_t *)&qword_1E95F08F8);
  sub_1A40959DC();
  id v23 = objc_msgSend(v21, sel_radians);
  sub_1A40959DC();
  id v24 = objc_msgSend(v21, sel_radians);
  sub_1A40959DC();
  __int16 v33 = -16;
  int v32 = 0;
  long long v29 = v25;
  uint64_t v30 = v18;
  uint64_t v31 = v19;
  sub_1A4095C6C();
  memset(v36, 0, sizeof(v36));
  char v37 = 1;
  __int16 v28 = v20;
  static NormalizedRect.fullImage.getter(v27);
  v26[0] = v27[0];
  v26[1] = v27[1];
  sub_1A3DEC3A8(v34, (uint64_t)v17, (uint64_t)v14, (uint64_t)v11, &v32, (uint64_t *)&v29, (uint64_t)v8, (uint64_t)v36, a3, 1.0, &v28, v26);
}

__n128 sub_1A3DEC3A8@<Q0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, __int16 *a11, __n128 *a12)
{
  long long v42 = a1[1];
  long long v43 = *a1;
  long long v41 = a1[2];
  uint64_t v16 = *((void *)a1 + 6);
  int v17 = *a5;
  __int16 v18 = *((_WORD *)a5 + 2);
  uint64_t v19 = *a6;
  uint64_t v20 = a6[1];
  uint64_t v21 = a6[2];
  uint64_t v22 = a6[3];
  __int16 v45 = *a11;
  __n128 v46 = *a12;
  unint64_t v23 = a12[1].n128_u64[0];
  unint64_t v24 = a12[1].n128_u64[1];
  long long v25 = (int *)type metadata accessor for FaceObservation();
  uint64_t v26 = a9 + v25[15];
  *(void *)uint64_t v26 = 0;
  *(_WORD *)(v26 + 12) = -16;
  *(_DWORD *)(v26 + 8) = 0;
  uint64_t v27 = a9 + v25[16];
  *(void *)uint64_t v27 = 0;
  *(_WORD *)(v27 + 12) = -16;
  *(_DWORD *)(v27 + 8) = 0;
  uint64_t v28 = a9 + v25[17];
  *(_OWORD *)uint64_t v28 = 0u;
  *(_OWORD *)(v28 + 16) = 0u;
  *(_WORD *)(v28 + 32) = -16;
  uint64_t v29 = a9 + v25[18];
  *(_WORD *)(v29 + 4) = -16;
  *(_DWORD *)uint64_t v29 = 0;
  uint64_t v30 = a9 + v25[19];
  *(_OWORD *)uint64_t v30 = 0u;
  *(_OWORD *)(v30 + 16) = 0u;
  *(_WORD *)(v30 + 32) = -16;
  *(unsigned char *)(v30 + 34) = 0;
  *(_OWORD *)a9 = v43;
  *(_OWORD *)(a9 + 16) = v42;
  *(_OWORD *)(a9 + 32) = v41;
  *(void *)(a9 + 48) = v16;
  uint64_t v31 = a9 + v25[5];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  __int16 v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32);
  v33(v31, a2, v32);
  v33(a9 + v25[6], a3, v32);
  v33(a9 + v25[7], a4, v32);
  uint64_t v34 = a9 + v25[8];
  *(_WORD *)(v34 + 4) = v18;
  *(_DWORD *)uint64_t v34 = v17;
  uint64_t v35 = (void *)(a9 + v25[9]);
  *uint64_t v35 = v19;
  v35[1] = v20;
  v35[2] = v21;
  id v35[3] = v22;
  long long v36 = (void *)(a9 + v25[10]);
  *long long v36 = v19;
  v36[1] = v20;
  v36[2] = v21;
  _OWORD v36[3] = v22;
  uint64_t v37 = a9 + v25[11];
  uint64_t v38 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v37, a7, v38);
  *(float *)(a9 + v25[12]) = a10;
  sub_1A3C7D648(a8, a9 + v25[13]);
  *(_WORD *)(a9 + v25[14]) = v45;
  uint64_t v39 = (__n128 *)(a9 + v25[20]);
  __n128 result = v46;
  *uint64_t v39 = v46;
  v39[1].n128_u64[0] = v23;
  v39[1].n128_u64[1] = v24;
  return result;
}

uint64_t type metadata accessor for FaceObservation()
{
  uint64_t result = qword_1E9636060;
  if (!qword_1E9636060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FaceObservation.landmarks.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_1A3DEC68C(v2, v3);
}

uint64_t sub_1A3DEC68C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t FaceObservation.roll.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FaceObservation() + 20);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FaceObservation.yaw.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FaceObservation() + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FaceObservation.pitch.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FaceObservation() + 28);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t FaceObservation.faceCaptureQuality.getter()
{
  uint64_t v1 = type metadata accessor for FaceObservation();
  uint64_t v2 = *(unsigned int *)(v0 + *(int *)(v1 + 32));
  if (((v2 | ((unint64_t)*(unsigned __int16 *)(v0 + *(int *)(v1 + 32) + 4) << 32)) & 0xFFF800000000) == 0xFFF000000000) {
    uint64_t v2 = 0;
  }
  return v2 | ((unint64_t)(((*(unsigned int *)(v0 + *(int *)(v1 + 32)) | ((unint64_t)*(unsigned __int16 *)(v0 + *(int *)(v1 + 32) + 4) << 32)) & 0xFFF800000000) == 0xFFF000000000) << 32);
}

uint64_t FaceObservation.captureQuality.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for FaceObservation();
  uint64_t v4 = (int *)(v1 + *(int *)(result + 32));
  int v5 = *v4;
  *(_WORD *)(a1 + 4) = *((_WORD *)v4 + 2);
  *(_DWORD *)a1 = v5;
  return result;
}

__n128 FaceObservation.boundingBox.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FaceObservation() + 36);
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a1 = *(_OWORD *)v3;
  a1[1] = v5;
  return result;
}

__n128 FaceObservation.boundingBox.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  uint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for FaceObservation() + 36));
  __n128 result = v6;
  *uint64_t v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*FaceObservation.boundingBox.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 FaceObservation.unalignedBoundingBox.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FaceObservation() + 40);
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a1 = *(_OWORD *)v3;
  a1[1] = v5;
  return result;
}

uint64_t FaceObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FaceObservation() + 44);
  uint64_t v4 = sub_1A4095C7C();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

float FaceObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for FaceObservation() + 48));
}

__n128 FaceObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FaceObservation() + 52);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t FaceObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for FaceObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t FaceObservation.deviceGaze.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for FaceObservation();
  char v4 = (uint64_t *)(v1 + *(int *)(result + 60));
  uint64_t v5 = *v4;
  int v6 = *((_DWORD *)v4 + 2);
  LOWORD(v4) = *((_WORD *)v4 + 6);
  *(void *)a1 = v5;
  *(_WORD *)(a1 + 12) = (_WORD)v4;
  *(_DWORD *)(a1 + 8) = v6;
  return result;
}

uint64_t FaceObservation.cameraGaze.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for FaceObservation();
  char v4 = (uint64_t *)(v1 + *(int *)(result + 64));
  uint64_t v5 = *v4;
  int v6 = *((_DWORD *)v4 + 2);
  LOWORD(v4) = *((_WORD *)v4 + 6);
  *(void *)a1 = v5;
  *(_WORD *)(a1 + 12) = (_WORD)v4;
  *(_DWORD *)(a1 + 8) = v6;
  return result;
}

__n128 FaceObservation.faceScreenGaze.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FaceObservation() + 68);
  __int16 v4 = *(_WORD *)(v3 + 32);
  __n128 result = *(__n128 *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = v4;
  return result;
}

uint64_t FaceObservation.faceLivelinessScore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for FaceObservation();
  __int16 v4 = (int *)(v1 + *(int *)(result + 72));
  int v5 = *v4;
  *(_WORD *)(a1 + 4) = *((_WORD *)v4 + 2);
  *(_DWORD *)a1 = v5;
  return result;
}

uint64_t FaceObservation.facePrint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FaceObservation() + 76);
  uint64_t v4 = *(void *)v3;
  unint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  char v8 = *(unsigned char *)(v3 + 34);
  __int16 v9 = *(_WORD *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 34) = v8;
  *(_WORD *)(a1 + 32) = v9;

  return sub_1A3C7D190(v4, v5, v6, v7, v9);
}

uint64_t FaceObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v1 = type metadata accessor for FaceObservation();
  sub_1A4095C7C();
  sub_1A3DF9738(&qword_1E95EBE68, MEMORY[0x1E4F27990]);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A3DB6C5C(v1, (uint64_t)&protocol witness table for FaceObservation);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A40965EC();
  sub_1A409621C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE78);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A3C7D5B0();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  sub_1A4095A0C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A4095A0C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A4095A0C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0900);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A3DEC68C(*v0, v0[1]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0908);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0910);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0918);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0920);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE88);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t FaceObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DED2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = sub_1A4095C7C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

float sub_1A3DED364(uint64_t a1)
{
  return *(float *)(v1 + *(int *)(a1 + 48));
}

__n128 sub_1A3DED370@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 52);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(unsigned char *)(a2 + 48) = v4;
  return result;
}

uint64_t sub_1A3DED394@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *(_WORD *)(v2 + *(int *)(result + 56));
  return result;
}

__n128 sub_1A3DED3A4@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 36);
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a2 = *(_OWORD *)v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_1A3DED3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3DF9738(&qword_1E95F09F0, (void (*)(uint64_t))type metadata accessor for FaceObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

float FaceObservation.CaptureQuality.score.getter()
{
  return *(float *)v0;
}

unint64_t FaceObservation.CaptureQuality.description.getter()
{
  return 0xD00000000000001DLL;
}

BOOL static FaceObservation.CaptureQuality.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A3DF8DB8(a1, a2);
}

uint64_t sub_1A3DED510()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0x65726F6373;
  }
}

uint64_t sub_1A3DED54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DF99DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DED574(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9780();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DED5B0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9780();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.CaptureQuality.encode(to:)(void *a1)
{
  return sub_1A3DF7088(a1, &qword_1E95F0928, (void (*)(void))sub_1A3DF9780);
}

uint64_t FaceObservation.CaptureQuality.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3DF7304(a1, &qword_1E95F0930, (void (*)(void))sub_1A3DF9780, a2);
}

BOOL sub_1A3DED674(uint64_t a1, uint64_t a2)
{
  return sub_1A3DF8DB8(a1, a2);
}

uint64_t sub_1A3DED690@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.CaptureQuality.init(from:)(a1, a2);
}

uint64_t sub_1A3DED6A8(void *a1)
{
  return FaceObservation.CaptureQuality.encode(to:)(a1);
}

void FaceObservation.Landmarks2D.allPoints.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(0);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.faceContour.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(1u);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.leftEye.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(7u);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.rightEye.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(0xBu);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.leftEyebrow.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(6u);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.rightEyebrow.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(0xAu);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.nose.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(4u);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.noseCrest.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(3u);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.medianLine.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(0x10u);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.outerLips.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(0xEu);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.innerLips.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(0xFu);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.leftPupil.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(8u);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

void FaceObservation.Landmarks2D.rightPupil.getter(uint64_t a1@<X8>)
{
  __int16 v3 = *v1;
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  if (qword_1E9634240 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9634250 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A3DF8090(0xCu);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A3DEEB40(v10);
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;

  swift_bridgeObjectRetain();
}

uint64_t FaceObservation.Landmarks2D.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1A6253FB0](v0, &type metadata for NormalizedPoint);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE88);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A3C7D5B0();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return 0;
}

void FaceObservation.Landmarks2D.originatingRequestDescriptor.getter(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1A3DEE5B4()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1A409636C();
  *(void *)(v0 + 16) = 76;
  bzero((void *)(v0 + 32), 0x260uLL);
  *(_OWORD *)(v0 + 32) = xmmword_1A4104940;
  *(_OWORD *)(v0 + 48) = xmmword_1A4104950;
  *(_OWORD *)(v0 + 64) = xmmword_1A4104960;
  *(_OWORD *)(v0 + 80) = xmmword_1A4104970;
  *(_OWORD *)(v0 + 96) = xmmword_1A4104980;
  *(_OWORD *)(v0 + 112) = xmmword_1A4104990;
  *(_OWORD *)(v0 + 128) = xmmword_1A41049A0;
  *(_OWORD *)(v0 + 144) = xmmword_1A41049B0;
  *(_OWORD *)(v0 + 160) = xmmword_1A41049C0;
  *(_OWORD *)(v0 + 176) = xmmword_1A41049D0;
  *(_OWORD *)(v0 + 192) = xmmword_1A41049E0;
  *(_OWORD *)(v0 + 208) = xmmword_1A41049F0;
  *(_OWORD *)(v0 + 224) = xmmword_1A4104A00;
  *(_OWORD *)(v0 + 240) = xmmword_1A4104A10;
  *(_OWORD *)(v0 + 256) = xmmword_1A4104A20;
  *(_OWORD *)(v0 + 272) = xmmword_1A4104A30;
  *(_OWORD *)(v0 + 288) = xmmword_1A4104A40;
  *(_OWORD *)(v0 + 304) = xmmword_1A4104A50;
  *(_OWORD *)(v0 + 320) = xmmword_1A4104A60;
  *(_OWORD *)(v0 + 336) = xmmword_1A4104A70;
  *(_OWORD *)(v0 + 352) = xmmword_1A4104A80;
  *(_OWORD *)(v0 + 368) = xmmword_1A4104A90;
  *(_OWORD *)(v0 + 384) = xmmword_1A4104AA0;
  *(_OWORD *)(v0 + 400) = xmmword_1A4104AB0;
  *(_OWORD *)(v0 + 416) = xmmword_1A4104AC0;
  *(_OWORD *)(v0 + 432) = xmmword_1A4104AD0;
  *(_OWORD *)(v0 + 448) = xmmword_1A4104AE0;
  *(_OWORD *)(v0 + 464) = xmmword_1A4104AF0;
  *(_OWORD *)(v0 + 480) = xmmword_1A4104B00;
  *(_OWORD *)(v0 + 496) = xmmword_1A4104B10;
  *(_OWORD *)(v0 + 512) = xmmword_1A4104B20;
  *(_OWORD *)(v0 + 528) = xmmword_1A4104B30;
  *(_OWORD *)(v0 + 544) = xmmword_1A4104B40;
  *(_OWORD *)(v0 + 560) = xmmword_1A4104B50;
  *(_OWORD *)(v0 + 576) = xmmword_1A4104B60;
  *(_OWORD *)(v0 + 592) = xmmword_1A4104B70;
  *(_OWORD *)(v0 + 608) = xmmword_1A4104B80;
  *(_OWORD *)(v0 + 624) = xmmword_1A4104B90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4104BA0;
  *(unsigned char *)(inited + 32) = 1;
  *(void *)(inited + 40) = &unk_1EF744B70;
  *(unsigned char *)(inited + 48) = 2;
  *(void *)(inited + 56) = &unk_1EF744510;
  *(unsigned char *)(inited + 64) = 3;
  *(void *)(inited + 72) = &unk_1EF744818;
  *(unsigned char *)(inited + 80) = 4;
  *(void *)(inited + 88) = &unk_1EF744868;
  *(unsigned char *)(inited + 96) = 5;
  *(void *)(inited + 104) = &unk_1EF7448C8;
  *(unsigned char *)(inited + 112) = 6;
  *(void *)(inited + 120) = &unk_1EF744988;
  *(unsigned char *)(inited + 128) = 7;
  *(void *)(inited + 136) = &unk_1EF7449D8;
  *(unsigned char *)(inited + 144) = 8;
  *(void *)(inited + 152) = &unk_1EF744A28;
  *(unsigned char *)(inited + 160) = 9;
  *(void *)(inited + 168) = &unk_1EF744A50;
  *(unsigned char *)(inited + 176) = 10;
  *(void *)(inited + 184) = &unk_1EF744AD0;
  *(unsigned char *)(inited + 192) = 11;
  *(void *)(inited + 200) = &unk_1EF744B20;
  *(unsigned char *)(inited + 208) = 12;
  *(void *)(inited + 216) = &unk_1EF758880;
  *(unsigned char *)(inited + 224) = 13;
  *(void *)(inited + 232) = &unk_1EF7445E8;
  *(unsigned char *)(inited + 240) = 14;
  *(void *)(inited + 248) = &unk_1EF744668;
  *(unsigned char *)(inited + 256) = 15;
  *(void *)(inited + 264) = &unk_1EF7446F8;
  *(unsigned char *)(inited + 272) = 16;
  *(void *)(inited + 280) = &unk_1EF744748;
  *(unsigned char *)(inited + 288) = 17;
  *(void *)(inited + 296) = &unk_1EF7447B8;
  *(unsigned char *)(inited + 304) = 0;
  *(void *)(inited + 312) = v0;
  unint64_t v2 = sub_1A3DF9AC4(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B60);
  uint64_t result = swift_arrayDestroy();
  qword_1E9634248 = v0;
  qword_1E9634250 = v2;
  return result;
}

__n128 sub_1A3DEEA14@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, __int16 *a4@<X3>, uint64_t a5@<X8>)
{
  __n128 v16 = a3[1];
  __n128 v17 = *a3;
  __int16 v8 = *a4;
  int64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1A3C999D4(0, v9, 0);
    uint64_t v10 = v19;
    uint64_t v11 = a1 + 40;
    do
    {
      NormalizedPoint.init(normalizedPoint:)(*(CGPoint *)(v11 - 8));
      long long v12 = v18;
      unint64_t v14 = *(void *)(v19 + 16);
      unint64_t v13 = *(void *)(v19 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A3C999D4((char *)(v13 > 1), v14 + 1, 1);
        long long v12 = v18;
      }
      *(void *)(v19 + 16) = v14 + 1;
      *(_OWORD *)(v19 + 16 * v14 + 32) = v12;
      v11 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  *(_WORD *)a5 = v8;
  *(void *)(a5 + 8) = v10;
  *(void *)(a5 + 16) = a2;
  *(__n128 *)(a5 + 24) = v17;
  __n128 result = v16;
  *(__n128 *)(a5 + 40) = v16;
  return result;
}

uint64_t sub_1A3DEEB40(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  static NormalizedPoint.zero.getter(v21);
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v20 = v21[0];
  uint64_t v19 = v21[1];
  uint64_t result = sub_1A409636C();
  *(void *)(result + 16) = v4;
  uint64_t v6 = (uint64_t *)(result + 32);
  if (v4 < 4)
  {
    uint64_t v7 = 0;
    uint64_t v9 = v19;
    uint64_t v8 = v20;
LABEL_8:
    unint64_t v15 = v4 - v7;
    do
    {
      uint64_t *v6 = v8;
      v6[1] = v9;
      v6 += 2;
      --v15;
    }
    while (v15);
    goto LABEL_10;
  }
  uint64_t v7 = v4 & 0x7FFFFFFFFFFFFFFCLL;
  v6 += 2 * (v4 & 0x7FFFFFFFFFFFFFFCLL);
  uint64_t v9 = v19;
  uint64_t v8 = v20;
  int64x2_t v10 = vdupq_lane_s64(v20, 0);
  int64x2_t v11 = vdupq_lane_s64(v19, 0);
  long long v12 = (double *)(result + 64);
  uint64_t v13 = v4 & 0x7FFFFFFFFFFFFFFCLL;
  do
  {
    unint64_t v14 = v12 - 4;
    vst2q_f64(v14, *(float64x2x2_t *)v10.i8);
    vst2q_f64(v12, *(float64x2x2_t *)v10.i8);
    v12 += 8;
    v13 -= 4;
  }
  while (v13);
  if (v4 != v7) {
    goto LABEL_8;
  }
LABEL_10:
  unint64_t v16 = 0;
  unint64_t v17 = *(void *)(v3 + 16);
  while (1)
  {
    unint64_t v18 = *(void *)(a1 + 32 + 8 * v16);
    if (v18 >= v17) {
      break;
    }
    if (v16 >= *(void *)(result + 16)) {
      goto LABEL_16;
    }
    *(_OWORD *)(result + 16 * v16++ + 32) = *(_OWORD *)(v3 + 32 + 16 * v18);
    if (v4 == v16) {
      return result;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

BOOL sub_1A3DEEC68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (float *)(a1 + 36);
  unint64_t v4 = (float *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    float v7 = *v3++;
    float v8 = v7;
    float v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

BOOL sub_1A3DEECD4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t FaceObservation.Landmarks2D.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 1);
  uint64_t v3 = *((void *)v1 + 2);
  if (*v1 < 0xFFF8u)
  {
    sub_1A4096F4C();
    sub_1A3C810D0();
    sub_1A40960DC();
  }
  else
  {
    sub_1A4096F4C();
  }
  swift_bridgeObjectRetain();
  sub_1A3DF8504(a1, v4);
  swift_bridgeObjectRelease();
  sub_1A4096F4C();
  if (v3) {
    sub_1A3DF84AC(a1, v3);
  }
  sub_1A3C90A2C();
  return sub_1A40960DC();
}

unint64_t sub_1A3DEEE4C(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A3DEEED0()
{
  return sub_1A3DEEE4C(*v0);
}

uint64_t sub_1A3DEEED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DFA0F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DEEF00(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF97D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DEEF3C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF97D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.Landmarks2D.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0938);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v17 = *((void *)v1 + 2);
  uint64_t v18 = v9;
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v11 = *((void *)v1 + 4);
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v13 = *((void *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DF97D4();
  sub_1A4096FEC();
  LOWORD(v19) = v8;
  char v23 = 0;
  sub_1A3C81220();
  sub_1A4096D6C();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v15 = v5;
  uint64_t v16 = v17;
  uint64_t v19 = v18;
  char v23 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC488);
  sub_1A3DFA034(&qword_1E95EC490, &qword_1E95EC488, (void (*)(void))sub_1A3C97A70);
  sub_1A4096DBC();
  uint64_t v19 = v16;
  char v23 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0940);
  sub_1A3DF9828(&qword_1E95F0948);
  sub_1A4096D6C();
  uint64_t v19 = v10;
  uint64_t v20 = v11;
  uint64_t v21 = v12;
  uint64_t v22 = v13;
  char v23 = 3;
  sub_1A3C80D20();
  sub_1A4096DBC();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v7, v4);
}

uint64_t FaceObservation.Landmarks2D.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  v5[36] = *(_WORD *)v0;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  long long v3 = *(_OWORD *)(v0 + 40);
  long long v8 = *(_OWORD *)(v0 + 24);
  long long v9 = v3;
  sub_1A4096F2C();
  FaceObservation.Landmarks2D.hash(into:)((uint64_t)v5);
  return sub_1A4096F7C();
}

uint64_t FaceObservation.Landmarks2D.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0950);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DF97D4();
  sub_1A4096FDC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  __int16 v9 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC488);
  char v20 = 1;
  sub_1A3DFA034(&qword_1E95EC4B0, &qword_1E95EC488, (void (*)(void))sub_1A3C97AC4);
  sub_1A4096CFC();
  uint64_t v10 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0940);
  char v20 = 2;
  sub_1A3DF9828(&qword_1E95F0958);
  swift_bridgeObjectRetain();
  sub_1A4096CAC();
  uint64_t v11 = v18;
  char v20 = 3;
  sub_1A3C80E18();
  uint64_t v17 = v11;
  swift_bridgeObjectRetain();
  sub_1A4096CFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v12 = v18;
  long long v13 = v19;
  *(_WORD *)a2 = v9;
  uint64_t v14 = v17;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v14;
  *(_OWORD *)(a2 + 24) = v12;
  *(_OWORD *)(a2 + 40) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3DEF5EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.Landmarks2D.init(from:)(a1, a2);
}

uint64_t sub_1A3DEF604(void *a1)
{
  return FaceObservation.Landmarks2D.encode(to:)(a1);
}

uint64_t sub_1A3DEF624()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  v5[36] = *(_WORD *)v0;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  long long v3 = *(_OWORD *)(v0 + 40);
  long long v8 = *(_OWORD *)(v0 + 24);
  long long v9 = v3;
  sub_1A4096F2C();
  FaceObservation.Landmarks2D.hash(into:)((uint64_t)v5);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DEF688()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  v5[36] = *(_WORD *)v0;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  long long v3 = *(_OWORD *)(v0 + 40);
  long long v8 = *(_OWORD *)(v0 + 24);
  long long v9 = v3;
  sub_1A4096F2C();
  FaceObservation.Landmarks2D.hash(into:)((uint64_t)v5);
  return sub_1A4096F7C();
}

uint64_t FaceObservation.Landmarks2D.Region.PointsClassification.hash(into:)()
{
  return sub_1A4096F3C();
}

BOOL static FaceObservation.Landmarks2D.Region.PointsClassification.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A3DEF724(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9988();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DEF760(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9988();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DEF79C()
{
  uint64_t v1 = 0x656E6E6F63736964;
  if (*v0 != 1) {
    uint64_t v1 = 0x687461506E65706FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x61506465736F6C63;
  }
}

uint64_t sub_1A3DEF804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DFA290(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DEF82C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF988C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DEF868(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF988C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DEF8A4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9934();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DEF8E0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9934();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DEF91C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF98E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DEF958(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF98E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.Landmarks2D.Region.PointsClassification.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0960);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  char v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0968);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0970);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0978);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DF988C();
  sub_1A4096FEC();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_1A3DF9934();
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_1A3DF98E0();
      uint64_t v17 = v23;
      sub_1A4096D5C();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_1A3DF9988();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t FaceObservation.Landmarks2D.Region.PointsClassification.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t FaceObservation.Landmarks2D.Region.PointsClassification.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0980);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0988);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0990);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0998);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DF988C();
  uint64_t v12 = (uint64_t)v39;
  sub_1A4096FDC();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_1A4096D3C();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_1A4096ABC();
    swift_allocError();
    char v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    *char v23 = &type metadata for FaceObservation.Landmarks2D.Region.PointsClassification;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_1A3DF9934();
      uint64_t v18 = v30;
      sub_1A4096C7C();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_1A3DF98E0();
      uint64_t v25 = v30;
      sub_1A4096C7C();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_1A3DF9988();
    uint64_t v24 = v30;
    sub_1A4096C7C();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1A3DF02F8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FaceObservation.Landmarks2D.Region.PointsClassification.init(from:)(a1, a2);
}

uint64_t sub_1A3DF0310(void *a1)
{
  return FaceObservation.Landmarks2D.Region.PointsClassification.encode(to:)(a1);
}

void FaceObservation.Landmarks2D.Region.pointsClassification.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FaceObservation.Landmarks2D.Region.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FaceObservation.Landmarks2D.Region.precisionEstimatesPerPoint.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FaceObservation.Landmarks2D.Region.pointsInImageCoordinates(_:origin:)(double a1, double a2)
{
  long long v5 = v2[1];
  v10[0] = *v2;
  v10[1] = v5;
  long long v6 = v2[3];
  id v10[2] = v2[2];
  __n128 v10[3] = v6;
  sub_1A3DF9CF0((uint64_t)v10);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1A3DF9BC8(v7, (uint64_t)v10, a1, a2);
  sub_1A3DF9D24((uint64_t)v10);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t FaceObservation.Landmarks2D.Region.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  unsigned int v5 = *(unsigned __int16 *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_1A3DF8504(a1, v4);
  swift_bridgeObjectRelease();
  sub_1A4096F3C();
  sub_1A4096F4C();
  if (v3) {
    sub_1A3DF84AC(a1, v3);
  }
  if (v5 >= 0xFFF8) {
    return sub_1A4096F4C();
  }
  sub_1A4096F4C();
  sub_1A3C810D0();
  return sub_1A40960DC();
}

uint64_t FaceObservation.Landmarks2D.Region.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1A6253FB0](v0, &type metadata for NormalizedPoint);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A4096BAC();
  sub_1A409621C();
  sub_1A3C7D5B0();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE88);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return 0;
}

void FaceObservation.Landmarks2D.Region.originatingRequestDescriptor.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 24);
}

unint64_t sub_1A3DF0684(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73746E696F70;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0x6E756F4265636166;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A3DF0738()
{
  return sub_1A3DF0684(*v0);
}

uint64_t sub_1A3DF0740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DFA40C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DF0768(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9D5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF07A4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9D5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.Landmarks2D.Region.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F09A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v17 = *((void *)v1 + 2);
  uint64_t v18 = v9;
  int v23 = *((unsigned __int16 *)v1 + 12);
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v11 = *((void *)v1 + 5);
  uint64_t v12 = *((void *)v1 + 6);
  uint64_t v13 = *((void *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DF9D5C();
  sub_1A4096FEC();
  LOBYTE(v19) = v8;
  char v24 = 0;
  sub_1A3DF9DB0();
  sub_1A4096DBC();
  if (!v2)
  {
    uint64_t v14 = v17;
    __int16 v15 = v23;
    uint64_t v19 = v18;
    char v24 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC488);
    sub_1A3DFA034(&qword_1E95EC490, &qword_1E95EC488, (void (*)(void))sub_1A3C97A70);
    sub_1A4096DBC();
    uint64_t v19 = v14;
    char v24 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0940);
    sub_1A3DF9828(&qword_1E95F0948);
    sub_1A4096D6C();
    LOWORD(v19) = v15;
    char v24 = 3;
    sub_1A3C81220();
    sub_1A4096D6C();
    uint64_t v19 = v10;
    uint64_t v20 = v11;
    uint64_t v21 = v12;
    uint64_t v22 = v13;
    char v24 = 4;
    sub_1A3C80D20();
    sub_1A4096DBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FaceObservation.Landmarks2D.Region.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  __int16 v3 = *(_WORD *)(v0 + 24);
  v6[72] = *(unsigned char *)v0;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  __int16 v9 = v3;
  long long v4 = *(_OWORD *)(v0 + 48);
  long long v10 = *(_OWORD *)(v0 + 32);
  long long v11 = v4;
  sub_1A4096F2C();
  FaceObservation.Landmarks2D.Region.hash(into:)((uint64_t)v6);
  return sub_1A4096F7C();
}

uint64_t FaceObservation.Landmarks2D.Region.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F09B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DF9D5C();
  sub_1A4096FDC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  sub_1A3DF9E04();
  sub_1A4096CFC();
  int v9 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC488);
  char v21 = 1;
  sub_1A3DFA034(&qword_1E95EC4B0, &qword_1E95EC488, (void (*)(void))sub_1A3C97AC4);
  sub_1A4096CFC();
  int v20 = v9;
  uint64_t v10 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0940);
  char v21 = 2;
  sub_1A3DF9828(&qword_1E95F0958);
  swift_bridgeObjectRetain();
  sub_1A4096CAC();
  uint64_t v11 = v18;
  char v21 = 3;
  sub_1A3C80E6C();
  uint64_t v17 = v11;
  swift_bridgeObjectRetain();
  sub_1A4096CAC();
  uint64_t v12 = v17;
  HIDWORD(v16) = (unsigned __int16)v18;
  char v21 = 4;
  sub_1A3C80E18();
  sub_1A4096CFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v14 = v18;
  long long v15 = v19;
  *(unsigned char *)a2 = v20;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v12;
  *(_WORD *)(a2 + 24) = WORD2(v16);
  *(_OWORD *)(a2 + 32) = v14;
  *(_OWORD *)(a2 + 48) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3DF0F3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.Landmarks2D.Region.init(from:)(a1, a2);
}

uint64_t sub_1A3DF0F54(void *a1)
{
  return FaceObservation.Landmarks2D.Region.encode(to:)(a1);
}

uint64_t sub_1A3DF0F70()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  __int16 v3 = *(_WORD *)(v0 + 24);
  v6[72] = *(unsigned char *)v0;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  __int16 v9 = v3;
  long long v4 = *(_OWORD *)(v0 + 48);
  long long v10 = *(_OWORD *)(v0 + 32);
  long long v11 = v4;
  sub_1A4096F2C();
  FaceObservation.Landmarks2D.Region.hash(into:)((uint64_t)v6);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF0FD8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  __int16 v3 = *(_WORD *)(v0 + 24);
  v6[72] = *(unsigned char *)v0;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  __int16 v9 = v3;
  long long v4 = *(_OWORD *)(v0 + 48);
  long long v10 = *(_OWORD *)(v0 + 32);
  long long v11 = v4;
  sub_1A4096F2C();
  FaceObservation.Landmarks2D.Region.hash(into:)((uint64_t)v6);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF103C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  sub_1A4096F3C();
  if (v5)
  {
    uint64_t v6 = v4 + 32;
    do
    {
      v6 += 8;
      sub_1A4096F3C();
      --v5;
    }
    while (v5);
  }
  uint64_t v7 = v2[1];
  uint64_t v8 = *(void *)(v7 + 16);
  sub_1A4096F3C();
  if (v8)
  {
    uint64_t v9 = v7 + 32;
    do
    {
      v9 += 8;
      sub_1A4096F3C();
      --v8;
    }
    while (v8);
  }
  uint64_t v10 = v2[2];
  uint64_t v11 = *(void *)(v10 + 16);
  sub_1A4096F3C();
  if (v11)
  {
    uint64_t v12 = v10 + 32;
    do
    {
      v12 += 8;
      sub_1A4096F3C();
      --v11;
    }
    while (v11);
  }
  uint64_t v13 = v2[3];
  uint64_t v14 = *(void *)(v13 + 16);
  sub_1A4096F3C();
  if (v14)
  {
    uint64_t v15 = v13 + 32;
    do
    {
      v15 += 8;
      sub_1A4096F3C();
      --v14;
    }
    while (v14);
  }
  uint64_t v16 = v2[4];
  uint64_t v17 = *(void *)(v16 + 16);
  sub_1A4096F3C();
  if (v17)
  {
    uint64_t v18 = v16 + 32;
    do
    {
      v18 += 8;
      sub_1A4096F3C();
      --v17;
    }
    while (v17);
  }
  uint64_t v19 = v2[5];
  uint64_t v20 = *(void *)(v19 + 16);
  sub_1A4096F3C();
  if (v20)
  {
    uint64_t v21 = v19 + 32;
    do
    {
      v21 += 8;
      sub_1A4096F3C();
      --v20;
    }
    while (v20);
  }
  uint64_t v22 = v2[6];
  uint64_t v23 = *(void *)(v22 + 16);
  sub_1A4096F3C();
  if (v23)
  {
    uint64_t v24 = v22 + 32;
    do
    {
      v24 += 8;
      sub_1A4096F3C();
      --v23;
    }
    while (v23);
  }
  uint64_t v25 = v2[7];
  uint64_t v26 = *(void *)(v25 + 16);
  sub_1A4096F3C();
  if (v26)
  {
    uint64_t v27 = v25 + 32;
    do
    {
      v27 += 8;
      sub_1A4096F3C();
      --v26;
    }
    while (v26);
  }
  uint64_t v28 = v2[8];
  uint64_t v29 = *(void *)(v28 + 16);
  sub_1A4096F3C();
  if (v29)
  {
    uint64_t v30 = v28 + 32;
    do
    {
      v30 += 8;
      sub_1A4096F3C();
      --v29;
    }
    while (v29);
  }
  uint64_t v31 = v2[9];
  uint64_t v32 = *(void *)(v31 + 16);
  sub_1A4096F3C();
  if (v32)
  {
    uint64_t v33 = v31 + 32;
    do
    {
      v33 += 8;
      sub_1A4096F3C();
      --v32;
    }
    while (v32);
  }
  uint64_t v34 = v2[10];
  uint64_t v35 = *(void *)(v34 + 16);
  sub_1A4096F3C();
  if (v35)
  {
    uint64_t v36 = v34 + 32;
    do
    {
      v36 += 8;
      sub_1A4096F3C();
      --v35;
    }
    while (v35);
  }
  uint64_t v37 = v2[11];
  uint64_t v38 = *(void *)(v37 + 16);
  sub_1A4096F3C();
  if (v38)
  {
    uint64_t v39 = v37 + 32;
    do
    {
      v39 += 8;
      sub_1A4096F3C();
      --v38;
    }
    while (v38);
  }
  uint64_t v40 = v2[12];
  uint64_t v41 = *(void *)(v40 + 16);
  sub_1A4096F3C();
  if (v41)
  {
    uint64_t v42 = v40 + 32;
    do
    {
      v42 += 8;
      sub_1A4096F3C();
      --v41;
    }
    while (v41);
  }
  uint64_t v43 = v2[13];
  uint64_t v44 = *(void *)(v43 + 16);
  sub_1A4096F3C();
  if (v44)
  {
    uint64_t v45 = v43 + 32;
    do
    {
      v45 += 8;
      sub_1A4096F3C();
      --v44;
    }
    while (v44);
  }
  uint64_t v46 = v2[14];
  uint64_t v47 = *(void *)(v46 + 16);
  sub_1A4096F3C();
  if (v47)
  {
    uint64_t v48 = v46 + 32;
    do
    {
      v48 += 8;
      sub_1A4096F3C();
      --v47;
    }
    while (v47);
  }
  uint64_t v49 = v2[15];
  uint64_t v50 = *(void *)(v49 + 16);
  sub_1A4096F3C();
  if (v50)
  {
    uint64_t v51 = v49 + 32;
    do
    {
      v51 += 8;
      sub_1A4096F3C();
      --v50;
    }
    while (v50);
  }
  uint64_t v52 = v2[16];
  uint64_t v53 = *(void *)(v52 + 16);
  sub_1A4096F3C();
  if (v53)
  {
    uint64_t v54 = v52 + 32;
    do
    {
      v54 += 8;
      sub_1A4096F3C();
      --v53;
    }
    while (v53);
  }
  uint64_t v55 = v2[17];
  uint64_t v56 = *(void *)(v55 + 16);
  sub_1A4096F3C();
  if (v56)
  {
    uint64_t v57 = v55 + 32;
    do
    {
      v57 += 8;
      sub_1A4096F3C();
      --v56;
    }
    while (v56);
  }
  sub_1A4096F3C();
  uint64_t v58 = v2[19];
  swift_bridgeObjectRetain();
  sub_1A3DF858C(a1, v58);

  return swift_bridgeObjectRelease();
}

unint64_t sub_1A3DF136C(char a1)
{
  unint64_t result = 0x746176726573626FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E69646E756F62;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x6B72616D646E616CLL;
      break;
    case 4:
      unint64_t result = 1819045746;
      break;
    case 5:
      unint64_t result = 0x6863746970;
      break;
    case 6:
      unint64_t result = 7823737;
      break;
    case 7:
      unint64_t result = 0x5165727574706163;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3DF14A4()
{
  sub_1A4096F2C();
  sub_1A3DF103C((uint64_t)v1);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF14E8()
{
  sub_1A4096F2C();
  sub_1A3DF103C((uint64_t)v1);
  return sub_1A4096F7C();
}

unint64_t sub_1A3DF1528()
{
  return sub_1A3DF136C(*v0);
}

uint64_t sub_1A3DF1530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DFA634(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A3DF1558(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1A3DF1564(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9E58();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF15A0(uint64_t a1)
{
  unint64_t v2 = sub_1A3DF9E58();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F09C0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DF9E58();
  sub_1A4096FEC();
  uint64_t v11 = (int *)type metadata accessor for FaceObservation();
  uint64_t v12 = (long long *)((char *)v2 + v11[9]);
  uint64_t v13 = v7;
  long long v14 = v12[1];
  long long v32 = *v12;
  long long v33 = v14;
  char v36 = 1;
  unint64_t v15 = sub_1A3C80D20();
  uint64_t v31 = v13;
  uint64_t v16 = v30;
  sub_1A4096DBC();
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v31);
  }
  v27[1] = v15;
  uint64_t v30 = v8;
  uint64_t v18 = *((void *)v2 + 6);
  long long v19 = v2[1];
  long long v32 = *v2;
  long long v33 = v19;
  long long v34 = v2[2];
  uint64_t v35 = v18;
  char v36 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0908);
  sub_1A3DFA034(&qword_1E95F09C8, &qword_1E95F0908, (void (*)(void))sub_1A3DF9EAC);
  sub_1A4096DBC();
  LOBYTE(v32) = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  sub_1A3DF9FEC(&qword_1E95F09D8);
  sub_1A4096DBC();
  LOBYTE(v32) = 5;
  sub_1A4096DBC();
  uint64_t v20 = v30;
  LOBYTE(v32) = 6;
  sub_1A4096DBC();
  uint64_t v21 = (int *)((char *)v2 + v11[8]);
  int v22 = *v21;
  WORD2(v32) = *((_WORD *)v21 + 2);
  LODWORD(v32) = v22;
  char v36 = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0900);
  sub_1A3DFA034(&qword_1E95F09E0, &qword_1E95F0900, (void (*)(void))sub_1A3DF9F00);
  sub_1A4096DBC();
  uint64_t v23 = (long long *)((char *)v2 + v11[20]);
  long long v24 = v23[1];
  long long v32 = *v23;
  long long v33 = v24;
  char v36 = 8;
  sub_1A4096DBC();
  LOBYTE(v32) = 0;
  sub_1A3C80D74();
  uint64_t v25 = v31;
  sub_1A4096D5C();
  uint64_t v26 = sub_1A3DF9738(&qword_1E95F09F0, (void (*)(uint64_t))type metadata accessor for FaceObservation);
  sub_1A3D2A9D0((uint64_t)v6, (uint64_t)v11, (uint64_t)&off_1EF7450F0, v26);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v10, v25);
}

uint64_t FaceObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v75 = sub_1A4095C7C();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v70 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v72 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v80 = *(void *)(v6 - 8);
  uint64_t v81 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v64 - v10;
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v64 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F09F8);
  uint64_t v73 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FaceObservation();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = &v20[v21[15]];
  *(void *)int v22 = 0;
  *((_WORD *)v22 + 6) = -16;
  *((_DWORD *)v22 + 2) = 0;
  uint64_t v23 = &v20[v21[16]];
  *(void *)uint64_t v23 = 0;
  *((_WORD *)v23 + 6) = -16;
  *((_DWORD *)v23 + 2) = 0;
  long long v24 = &v20[v21[17]];
  *(_OWORD *)long long v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((_WORD *)v24 + 16) = -16;
  uint64_t v25 = &v20[v21[18]];
  *((_WORD *)v25 + 2) = -16;
  *(_DWORD *)uint64_t v25 = 0;
  id v79 = v21;
  uint64_t v26 = v21[19];
  char v78 = v20;
  uint64_t v27 = &v20[v26];
  *(_OWORD *)uint64_t v27 = 0u;
  *((_OWORD *)v27 + 1) = 0u;
  v27[34] = 0;
  uint64_t v76 = v27;
  *((_WORD *)v27 + 16) = -16;
  uint64_t v28 = a1[3];
  uint64_t v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1A3DF9E58();
  sub_1A4096FDC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    return sub_1A3C7D200(*(void *)v76, *((void *)v76 + 1), *((void *)v76 + 2), *((void *)v76 + 3), *((_WORD *)v76 + 16));
  }
  uint64_t v67 = v11;
  uint64_t v66 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0908);
  char v87 = 3;
  sub_1A3DFA034(&qword_1E95F0A00, &qword_1E95F0908, (void (*)(void))sub_1A3DF9F98);
  sub_1A4096CFC();
  uint64_t v32 = v85;
  long long v33 = v83;
  long long v34 = v78;
  *char v78 = v82;
  v34[1] = v33;
  v34[2] = v84;
  *((void *)v34 + 6) = v32;
  LOBYTE(v82) = 4;
  uint64_t v35 = sub_1A3DF9FEC(&qword_1E95F0A10);
  char v36 = v14;
  uint64_t v37 = v81;
  sub_1A4096CFC();
  uint64_t v38 = v79;
  uint64_t v39 = (char *)v34 + v79[5];
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
  v65(v39, v36, v37);
  LOBYTE(v82) = 5;
  uint64_t v40 = v67;
  uint64_t v64 = v35;
  sub_1A4096CFC();
  v65((char *)v34 + v38[7], v40, v37);
  LOBYTE(v82) = 6;
  uint64_t v41 = v66;
  sub_1A4096CFC();
  v65((char *)v34 + v38[6], v41, v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0900);
  char v87 = 7;
  sub_1A3DFA034(&qword_1E95F0A18, &qword_1E95F0900, (void (*)(void))sub_1A3DFA0A0);
  sub_1A4096CFC();
  int v42 = v82;
  uint64_t v43 = (char *)v34 + v38[8];
  *((_WORD *)v43 + 2) = WORD2(v82);
  *(_DWORD *)uint64_t v43 = v42;
  char v87 = 1;
  sub_1A3C80E18();
  sub_1A4096CFC();
  uint64_t v44 = v73;
  long long v45 = v82;
  long long v46 = v83;
  uint64_t v47 = (_OWORD *)((char *)v34 + v38[9]);
  *uint64_t v47 = v82;
  v47[1] = v46;
  LOBYTE(v82) = 2;
  if (sub_1A4096D4C())
  {
    char v87 = 2;
    sub_1A4096CFC();
    uint64_t v48 = v72;
    uint64_t v49 = (_OWORD *)((char *)v34 + v38[10]);
    long long v50 = v83;
    *uint64_t v49 = v82;
    v49[1] = v50;
  }
  else
  {
    uint64_t v51 = (_OWORD *)((char *)v34 + v38[10]);
    *uint64_t v51 = v45;
    v51[1] = v46;
    uint64_t v48 = v72;
  }
  LOBYTE(v82) = 0;
  sub_1A3C80D74();
  sub_1A4096C7C();
  uint64_t v66 = v17;
  LOBYTE(v82) = 0;
  sub_1A3DF9738((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  uint64_t v52 = v70;
  uint64_t v53 = v71;
  sub_1A4096CFC();
  LODWORD(v65) = 1;
  uint64_t v67 = 0;
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))((char *)v34 + v38[11], v52, v75);
  LOBYTE(v82) = 1;
  uint64_t v54 = v67;
  sub_1A4096CDC();
  uint64_t v67 = v54;
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v48, v53);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v66, v15);
    uint64_t v56 = (uint64_t)v77;
    goto LABEL_12;
  }
  *(_DWORD *)((char *)v34 + v38[12]) = v55;
  char v87 = 3;
  sub_1A3C80E6C();
  uint64_t v58 = v67;
  sub_1A4096CAC();
  if (v58)
  {

    __int16 v59 = -8;
  }
  else
  {
    __int16 v59 = v82;
  }
  *(_WORD *)((char *)v78 + v79[14]) = v59;
  sub_1A3D2B130((uint64_t)v86);
  uint64_t v67 = 0;
  sub_1A3C7D648((uint64_t)v86, (uint64_t)v78 + v79[13]);
  char v87 = 8;
  uint64_t v60 = v67;
  sub_1A4096CFC();
  uint64_t v67 = v60;
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v72, v71);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v66, v15);
    uint64_t v56 = (uint64_t)v77;
    uint64_t v38 = v79;
    long long v34 = v78;
LABEL_12:
    __swift_destroy_boxed_opaque_existential_1(v56);
    char v57 = (char)v65;
    sub_1A3DF9F54(*(void *)v34, *((void *)v34 + 1));
    uint64_t v29 = v81;
    uint64_t v30 = *(void (**)(char *, uint64_t))(v80 + 8);
    v30((char *)v34 + v38[5], v81);
    v30((char *)v34 + v38[6], v29);
    v30((char *)v34 + v38[7], v29);
    if (v57) {
      (*(void (**)(char *, uint64_t))(v74 + 8))((char *)v34 + v38[11], v75);
    }
    return sub_1A3C7D200(*(void *)v76, *((void *)v76 + 1), *((void *)v76 + 2), *((void *)v76 + 3), *((_WORD *)v76 + 16));
  }
  (*(void (**)(char *, uint64_t))(v69 + 8))(v72, v71);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v66, v15);
  uint64_t v61 = (uint64_t)v78;
  uint64_t v62 = (_OWORD *)((char *)v78 + v79[20]);
  long long v63 = v83;
  *uint64_t v62 = v82;
  v62[1] = v63;
  sub_1A3CF54DC(v61, v68);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  return sub_1A3CF5540(v61);
}

uint64_t sub_1A3DF2810@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3DF2828(void *a1)
{
  return FaceObservation.encode(to:)(a1);
}

id sub_1A3DF2840@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  id result = objc_msgSend(a1, sel_landmarkPoints);
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = sub_1A4095C1C();
    unint64_t v10 = v9;

    type metadata accessor for CGPoint(0);
    uint64_t v11 = sub_1A409636C();
    *(void *)(v11 + 16) = 76;
    bzero((void *)(v11 + 32), 0x4C0uLL);
    uint64_t v35 = v11;
    switch(v10 >> 62)
    {
      case 1uLL:
        if (v8 >> 32 < (int)v8)
        {
          __break(1u);
          JUMPOUT(0x1A3DF2BFCLL);
        }
        swift_retain();
        sub_1A3DF82CC((int)v8, v8 >> 32, v10 & 0x3FFFFFFFFFFFFFFFLL, 0x4CuLL, &v35);
        sub_1A3C7D218(v8, v10);
        if (v2) {
          goto LABEL_11;
        }
        goto LABEL_15;
      case 2uLL:
        uint64_t v16 = *(void *)(v8 + 16);
        unint64_t v17 = *(void *)(v8 + 24);
        swift_retain();
        swift_retain();
        sub_1A3DF82CC(v16, v17, v10 & 0x3FFFFFFFFFFFFFFFLL, 0x4CuLL, &v35);
        swift_release();
        swift_release();
        if (!v3) {
          goto LABEL_15;
        }
LABEL_11:
        sub_1A3C7D218(v8, v10);
        id result = (id)swift_bridgeObjectRelease();
        break;
      case 3uLL:
        uint64_t v18 = 0;
        *(void *)((char *)v33 + 6) = 0;
        *(void *)&v33[0] = 0;
        uint64_t v19 = 32;
        do
        {
          uint64_t v20 = (const float *)&v33[v18];
          float32x4x2_t v37 = vld2q_f32(v20);
          v39.val[0] = vcvtq_f64_f32(*(float32x2_t *)v37.val[0].f32);
          v39.val[1] = vcvtq_f64_f32(*(float32x2_t *)v37.val[1].f32);
          uint64_t v21 = (double *)(v11 + v19);
          vst2q_f64(v21, v39);
          v21 += 4;
          v39.val[0] = vcvt_hight_f64_f32(v37.val[0]);
          v39.val[1] = vcvt_hight_f64_f32(v37.val[1]);
          vst2q_f64(v21, v39);
          v19 += 64;
          v18 += 2;
        }
        while (v18 != 38);
        goto LABEL_14;
      default:
        uint64_t v12 = 0;
        *(void *)&v33[0] = v8;
        WORD4(v33[0]) = v10;
        BYTE10(v33[0]) = BYTE2(v10);
        BYTE11(v33[0]) = BYTE3(v10);
        BYTE12(v33[0]) = BYTE4(v10);
        uint64_t v13 = 32;
        BYTE13(v33[0]) = BYTE5(v10);
        do
        {
          long long v14 = (const float *)&v33[v12];
          float32x4x2_t v36 = vld2q_f32(v14);
          v38.val[0] = vcvtq_f64_f32(*(float32x2_t *)v36.val[0].f32);
          v38.val[1] = vcvtq_f64_f32(*(float32x2_t *)v36.val[1].f32);
          uint64_t v15 = (double *)(v11 + v13);
          vst2q_f64(v15, v38);
          v15 += 4;
          v38.val[0] = vcvt_hight_f64_f32(v36.val[0]);
          v38.val[1] = vcvt_hight_f64_f32(v36.val[1]);
          vst2q_f64(v15, v38);
          v13 += 64;
          v12 += 2;
        }
        while (v12 != 38);
LABEL_14:
        uint64_t v35 = v11;
LABEL_15:
        id v22 = objc_msgSend(a1, sel_landmarksOriginatingRequestSpecifier);
        if (v22)
        {
          uint64_t v23 = v22;
          sub_1A3DBFB64((__int16 *)v33);

          __int16 v24 = v33[0];
        }
        else
        {
          __int16 v24 = -8;
        }
        uint64_t v25 = v35;
        swift_bridgeObjectRetain();
        id v26 = objc_msgSend(a1, sel_landmarkPrecisionEstimatesPerPoint);
        if (v26)
        {
          sub_1A3C8C73C(0, (unint64_t *)&qword_1E95EFED0);
          unint64_t v27 = sub_1A409630C();

          id v26 = (id)sub_1A3DF2C0C(v27);
          swift_bridgeObjectRelease();
        }
        objc_msgSend(a1, sel_boundingBox);
        NormalizedRect.init(normalizedRect:)(v40);
        v32[0] = v32[2];
        v32[1] = v32[3];
        objc_msgSend(a1, sel_landmarkScore);
        __int16 v31 = v24;
        sub_1A3DEEA14(v25, (uint64_t)v26, v32, &v31, (uint64_t)v33);
        sub_1A3C7D218(v8, v10);
        id result = (id)swift_bridgeObjectRelease();
        uint64_t v28 = *((void *)&v33[0] + 1);
        uint64_t v29 = v34;
        *(void *)a2 = LOWORD(v33[0]);
        *(void *)(a2 + 8) = v28;
        long long v30 = v33[2];
        *(_OWORD *)(a2 + 16) = v33[1];
        *(_OWORD *)(a2 + 32) = v30;
        *(void *)(a2 + 48) = v29;
        break;
    }
  }
  else
  {
    *(void *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_1A3DF2C0C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1A3DC8F28(0, v3 & ~(v3 >> 63), 0);
    uint64_t v4 = v15;
    if (v2) {
      break;
    }
    unint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return v4;
    }
LABEL_7:
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A6254720](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      int v13 = 0;
      char v14 = 1;
      MEMORY[0x1A6254270](v6, &v13);

      if (v14)
      {
        swift_release();
        return 0;
      }
      int v9 = v13;
      uint64_t v15 = v4;
      unint64_t v11 = *(void *)(v4 + 16);
      unint64_t v10 = *(void *)(v4 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1A3DC8F28((char *)(v10 > 1), v11 + 1, 1);
        uint64_t v4 = v15;
      }
      *(void *)(v4 + 16) = v11 + 1;
      *(_DWORD *)(v4 + 4 * v11 + 32) = v9;
      if (v8 == v2) {
        return v4;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1A4096BFC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_1A4096BFC();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_7;
  }
  return v4;
}

void sub_1A3DF2DB4(void *a1@<X0>, unint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1A4095C7C();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  MEMORY[0x1F4188790](v11 - 8);
  int v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v58 = (uint64_t)&v54 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v57 = (uint64_t)&v54 - v17;
  unint64_t v18 = *a2;
  unint64_t v19 = a2[1];
  unint64_t v20 = a2[2];
  unint64_t v21 = a2[3];
  type metadata accessor for FaceObservation();
  objc_msgSend(a1, sel_boundingBox);
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  char v30 = objc_msgSend(a1, sel_providesBoundsNormalizedToROI);
  unint64_t v55 = v18;
  *(void *)&long long v66 = v18;
  *((void *)&v66 + 1) = v19;
  unint64_t v54 = v19;
  *(void *)&long long v67 = v20;
  *((void *)&v67 + 1) = v21;
  sub_1A3DF9738(&qword_1E95ED6D8, (void (*)(uint64_t))type metadata accessor for FaceObservation);
  sub_1A3D445C8(v30, (CGFloat *)&v66, v23, v25, v27, v29);
  long long v31 = v65[0];
  long long v32 = v65[1];
  unint64_t v33 = VNFaceObservation.faceCaptureQuality.getter();
  if ((v33 & 0x100000000) != 0)
  {
    uint64_t v38 = 0xFFF000000000;
  }
  else
  {
    unsigned int v34 = v33;
    id v35 = objc_msgSend(a1, sel_faceCaptureQualityOriginatingRequestSpecifier);
    if (v35)
    {
      float32x4x2_t v36 = v35;
      sub_1A3DBFB64((__int16 *)v65);

      uint64_t v37 = LOWORD(v65[0]);
    }
    else
    {
      uint64_t v37 = 65528;
    }
    uint64_t v38 = v34 | (unint64_t)(v37 << 32);
  }
  sub_1A3DF2840(a1, (uint64_t)v65);
  uint64_t v56 = v13;
  id v39 = objc_msgSend(a1, sel_roll);
  if (v39)
  {
    __C::CGRect v40 = v39;
    objc_msgSend(v39, sel_doubleValue);
  }
  uint64_t v41 = self;
  id v42 = objc_msgSend(v41, sel_radians);
  sub_1A3C8C73C(0, (unint64_t *)&qword_1E95F08F8);
  sub_1A40959DC();
  id v43 = [a1 yaw];
  if (v43)
  {
    uint64_t v44 = v43;
    objc_msgSend(v43, sel_doubleValue);
  }
  id v45 = objc_msgSend(v41, sel_radians);
  sub_1A40959DC();
  id v46 = objc_msgSend(a1, sel_pitch);
  if (v46)
  {
    uint64_t v47 = v46;
    objc_msgSend(v46, sel_doubleValue);
  }
  id v48 = objc_msgSend(v41, sel_radians);
  uint64_t v49 = (uint64_t)v56;
  sub_1A40959DC();
  __int16 v64 = WORD2(v38);
  int v63 = v38;
  long long v66 = v31;
  long long v67 = v32;
  id v50 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  float v52 = v51;
  id v53 = objc_msgSend(a1, sel_originatingRequestSpecifier);
  sub_1A3DBFB64(&v62);

  v59.n128_u64[0] = v55;
  v59.n128_u64[1] = v54;
  unint64_t v60 = v20;
  unint64_t v61 = v21;
  sub_1A3DEC3A8(v65, v57, v58, v49, &v63, (uint64_t *)&v66, (uint64_t)v10, a3, a4, v52, &v62, &v59);
}

void FaceObservation.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  static NormalizedRect.fullImage.getter(v5);
  objc_msgSend(a1, sel_timeRange, *(_OWORD *)v5, *(_OWORD *)&v5[1]);
  char v7 = 0;
  sub_1A3DF2DB4(a1, (unint64_t *)&v4, (uint64_t)&v6, a2);
}

void sub_1A3DF3334(void *a1@<X0>, _OWORD *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  long long v4 = a2[1];
  v5[0] = *a2;
  v5[1] = v4;
  sub_1A3DF2DB4(a1, (unint64_t *)v5, a3, a4);
}

uint64_t sub_1A3DF3360()
{
  type metadata accessor for FaceObservation();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  sub_1A40959EC();
  float v1 = v0;
  if (v1 < -45.0 || v1 >= 45.0)
  {
    if (v1 < -135.0 || v1 >= -45.0)
    {
      if ((v1 >= -135.0 || v1 < -180.0) && (v1 < 135.0 || v1 >= 180.0))
      {
        if (v1 < 45.0 || v1 >= 135.0)
        {
          sub_1A4096A2C();
          sub_1A409621C();
          sub_1A40965EC();
          sub_1A3C85624();
          swift_allocError();
          static VisionError.invalidArgument(message:)(0, 0xE000000000000000, v4);
          swift_bridgeObjectRelease();
          return swift_willThrow();
        }
        return 6;
      }
LABEL_31:
      if (v1 < 45.0 || v1 >= 135.0) {
        return 3;
      }
      return 6;
    }
LABEL_18:
    if ((v1 >= -135.0 || v1 < -180.0) && (v1 < 135.0 || v1 >= 180.0))
    {
      if (v1 < 45.0 || v1 >= 135.0) {
        return 8;
      }
      return 6;
    }
    goto LABEL_31;
  }
  if (v1 >= -135.0 && v1 < -45.0) {
    goto LABEL_18;
  }
  if (v1 < -135.0 && v1 >= -180.0 || v1 >= 135.0 && v1 < 180.0) {
    goto LABEL_31;
  }
  if (v1 < 45.0 || v1 >= 135.0) {
    return 1;
  }
  return 6;
}

uint64_t FaceObservation.FacePrint.ConfidenceScoreType.description.getter()
{
  if (*v0) {
    return 0x64696F6D676973;
  }
  else {
    return 0x78616D74666F73;
  }
}

uint64_t FaceObservation.FacePrint.ConfidenceScoreType.hash(into:)()
{
  return sub_1A4096F3C();
}

BOOL static FaceObservation.FacePrint.ConfidenceScoreType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A3DF3680(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAA10();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF36BC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAA10();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DF36F8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAA64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF3734(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAA64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3DF3770(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAAB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF37AC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAAB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.FacePrint.ConfidenceScoreType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A28);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A30);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A38);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFAA10();
  sub_1A4096FEC();
  int v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A3DFAA64();
    uint64_t v14 = v18;
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A3DFAAB8();
    sub_1A4096D5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t FaceObservation.FacePrint.ConfidenceScoreType.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t FaceObservation.FacePrint.ConfidenceScoreType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A40);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A48);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A50);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFAA10();
  uint64_t v11 = v32;
  sub_1A4096FDC();
  if (v11) {
    goto LABEL_6;
  }
  long long v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A4096D3C();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A4096ABC();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
    void *v22 = &type metadata for FaceObservation.FacePrint.ConfidenceScoreType;
    sub_1A4096C8C();
    sub_1A4096AAC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A3DFAA64();
    unint64_t v18 = v14;
    sub_1A4096C7C();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A3DFAAB8();
    sub_1A4096C7C();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A3DF3F2C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FaceObservation.FacePrint.ConfidenceScoreType.init(from:)(a1, a2);
}

uint64_t sub_1A3DF3F44(void *a1)
{
  return FaceObservation.FacePrint.ConfidenceScoreType.encode(to:)(a1);
}

uint64_t FaceObservation.FacePrint.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1A3C7D1A8(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t FaceObservation.FacePrint.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A3C7D218(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*FaceObservation.FacePrint.data.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t FaceObservation.FacePrint.elementCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FaceObservation.FacePrint.elementCount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*FaceObservation.FacePrint.elementCount.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

void FaceObservation.FacePrint.elementType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

unsigned char *FaceObservation.FacePrint.elementType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 24) = *result;
  return result;
}

uint64_t (*FaceObservation.FacePrint.elementType.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

float FaceObservation.FacePrint.confidence.getter()
{
  return *(float *)(v0 + 28);
}

void FaceObservation.FacePrint.originatingRequestDescriptor.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 32);
}

_WORD *FaceObservation.FacePrint.originatingRequestDescriptor.setter(_WORD *result)
{
  *(_WORD *)(v1 + 32) = *result;
  return result;
}

uint64_t (*FaceObservation.FacePrint.originatingRequestDescriptor.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t FaceObservation.FacePrint.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A4096BAC();
  uint64_t result = sub_1A409621C();
  if (v2)
  {
    if ((unint64_t)(v1 - 0x1000000000000000) >> 61 == 7) {
      goto LABEL_5;
    }
    __break(1u);
  }
  else if ((unint64_t)(v1 - 0x2000000000000000) >> 62 == 3)
  {
LABEL_5:
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A40965EC();
    sub_1A409621C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE88);
    sub_1A409619C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t FaceObservation.FacePrint.hash(into:)()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int16 *)(v0 + 32);
  sub_1A3C7D1A8(*(void *)v0, v2);
  sub_1A4095C2C();
  sub_1A3C7D218(v1, v2);
  sub_1A4096F3C();
  sub_1A3C8107C();
  sub_1A40960DC();
  sub_1A4096F5C();
  sub_1A4096F4C();
  if (v3 < 0xFFF8)
  {
    sub_1A3C810D0();
    sub_1A40960DC();
  }
  return sub_1A4096F3C();
}

unint64_t sub_1A3DF4450(char a1)
{
  unint64_t result = 1635017060;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x43746E656D656C65;
      break;
    case 2:
      unint64_t result = 0x54746E656D656C65;
      break;
    case 3:
      unint64_t result = 0x6E656469666E6F63;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A3DF4534()
{
  return sub_1A3DF4450(*v0);
}

uint64_t sub_1A3DF453C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAB0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF4578(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAB0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.FacePrint.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A58);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v22 = v1[2];
  int v10 = *((unsigned __int8 *)v1 + 24);
  int v20 = *((unsigned __int16 *)v1 + 16);
  int v21 = v10;
  HIDWORD(v19) = *((unsigned __int8 *)v1 + 34);
  uint64_t v11 = a1[3];
  char v12 = a1;
  uint64_t v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_1A3DFAB0C();
  sub_1A4096FEC();
  uint64_t v24 = v8;
  uint64_t v25 = v9;
  char v23 = 0;
  sub_1A3C81178();
  sub_1A4096DBC();
  if (!v2)
  {
    __int16 v15 = v20;
    char v16 = v21;
    char v17 = BYTE4(v19);
    LOBYTE(v24) = 1;
    sub_1A4096DAC();
    LOBYTE(v24) = v16;
    char v23 = 2;
    sub_1A3C811CC();
    sub_1A4096DBC();
    LOBYTE(v24) = 3;
    sub_1A4096D9C();
    LOWORD(v24) = v15;
    char v23 = 4;
    sub_1A3C81220();
    sub_1A4096D6C();
    LOBYTE(v24) = v17;
    char v23 = 5;
    sub_1A3DFAB60();
    sub_1A4096DBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t FaceObservation.FacePrint.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t FaceObservation.FacePrint.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFAB0C();
  sub_1A4096FDC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v19 = 0;
  sub_1A3C812C8();
  sub_1A4096CFC();
  uint64_t v9 = v20;
  unint64_t v10 = v21;
  LOBYTE(v20) = 1;
  sub_1A3C7D1A8(v9, v21);
  uint64_t v18 = sub_1A4096CEC();
  char v19 = 2;
  sub_1A3C8131C();
  sub_1A4096CFC();
  int v17 = v20;
  LOBYTE(v20) = 3;
  sub_1A4096CDC();
  int v12 = v11;
  char v19 = 4;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  int v16 = (unsigned __int16)v20;
  char v19 = 5;
  sub_1A3DFABB4();
  sub_1A4096CFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v14 = v20;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v18;
  *(unsigned char *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 28) = v12;
  *(_WORD *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 34) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A3C7D218(v9, v10);
}

uint64_t sub_1A3DF4BCC()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF4C44()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF4CB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.FacePrint.init(from:)(a1, a2);
}

uint64_t sub_1A3DF4CCC(void *a1)
{
  return FaceObservation.FacePrint.encode(to:)(a1);
}

float FaceObservation.GazeScores.notLookingAtScore.getter()
{
  return *(float *)v0;
}

void FaceObservation.GazeScores.notLookingAtScore.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*FaceObservation.GazeScores.notLookingAtScore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

float FaceObservation.GazeScores.lookingAtScore.getter()
{
  return *(float *)(v0 + 4);
}

void FaceObservation.GazeScores.lookingAtScore.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*FaceObservation.GazeScores.lookingAtScore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

float FaceObservation.GazeScores.difficultToSayScore.getter()
{
  return *(float *)(v0 + 8);
}

void FaceObservation.GazeScores.difficultToSayScore.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*FaceObservation.GazeScores.difficultToSayScore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t FaceObservation.GazeScores.description.getter()
{
  return 0;
}

uint64_t FaceObservation.GazeScores.hash(into:)()
{
  return sub_1A4096F5C();
}

BOOL static FaceObservation.GazeScores.== infix(_:_:)(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

unint64_t sub_1A3DF4F18()
{
  unint64_t v1 = 0x41676E696B6F6F6CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1A3DF4F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DFE5A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DF4FAC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAC08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF4FE8(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAC08();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.GazeScores.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A78);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFAC08();
  sub_1A4096FEC();
  char v11 = 0;
  sub_1A4096D9C();
  if (!v1)
  {
    char v10 = 1;
    sub_1A4096D9C();
    char v9 = 2;
    sub_1A4096D9C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FaceObservation.GazeScores.hashValue.getter()
{
  return sub_1A4096F7C();
}

int32x2_t sub_1A3DF5234@<D0>(int32x2_t *a1@<X8>)
{
  int32x2_t result = vdup_n_s32(0x7FC00000u);
  *a1 = result;
  a1[1].i32[0] = 2143289344;
  return result;
}

uint64_t FaceObservation.GazeScores.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFAC08();
  sub_1A4096FDC();
  if (!v2)
  {
    v16[15] = 0;
    sub_1A4096CDC();
    int v10 = v9;
    v16[14] = 1;
    sub_1A4096CDC();
    int v13 = v12;
    v16[13] = 2;
    sub_1A4096CDC();
    int v15 = v14;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v13;
    a2[2] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DF5428()
{
  return sub_1A4096F5C();
}

uint64_t sub_1A3DF5480()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF54F4@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return FaceObservation.GazeScores.init(from:)(a1, a2);
}

uint64_t sub_1A3DF550C(void *a1)
{
  return FaceObservation.GazeScores.encode(to:)(a1);
}

BOOL sub_1A3DF5524(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

float FaceObservation.Gaze.gazeScores.getter@<S0>(uint64_t a1@<X8>)
{
  float result = *(float *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(float *)(a1 + 8) = result;
  return result;
}

float FaceObservation.Gaze.gazeScores.setter(uint64_t a1)
{
  float result = *(float *)(a1 + 8);
  *(void *)uint64_t v1 = *(void *)a1;
  *(float *)(v1 + 8) = result;
  return result;
}

uint64_t (*FaceObservation.Gaze.gazeScores.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

double FaceObservation.Gaze.gazeVector.getter()
{
  return *(double *)(v0 + 16);
}

void FaceObservation.Gaze.gazeVector.setter(double a1, double a2)
{
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t (*FaceObservation.Gaze.gazeVector.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t FaceObservation.Gaze.description.getter()
{
  return 0;
}

uint64_t FaceObservation.Gaze.hash(into:)()
{
  return sub_1A4096F6C();
}

uint64_t sub_1A3DF5810()
{
  if (*v0) {
    return 0x74636556657A6167;
  }
  else {
    return 0x726F6353657A6167;
  }
}

uint64_t sub_1A3DF5850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DFE718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DF5878(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAC5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF58B4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAC5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.Gaze.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0A88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *((_DWORD *)v3 + 2);
  uint64_t v10 = v3[2];
  uint64_t v11 = v3[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFAC5C();
  sub_1A4096FEC();
  uint64_t v13 = *v3;
  LODWORD(v14) = v9;
  char v15 = 0;
  sub_1A3DFACB0();
  sub_1A4096DBC();
  if (!v2)
  {
    uint64_t v13 = v10;
    uint64_t v14 = v11;
    char v15 = 1;
    type metadata accessor for CGPoint(0);
    sub_1A3DF9738(&qword_1E95F0A98, type metadata accessor for CGPoint);
    sub_1A4096DBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FaceObservation.Gaze.hashValue.getter()
{
  return sub_1A4096F7C();
}

int64x2_t sub_1A3DF5B2C@<Q0>(uint64_t a1@<X8>)
{
  *(int32x2_t *)a1 = vdup_n_s32(0x7FC00000u);
  *(_DWORD *)(a1 + 8) = 2143289344;
  int64x2_t result = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(a1 + 16) = result;
  return result;
}

uint64_t FaceObservation.Gaze.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0AA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFAC5C();
  sub_1A4096FDC();
  if (!v2)
  {
    char v14 = 0;
    sub_1A3DFAD04();
    sub_1A4096CFC();
    uint64_t v9 = v13;
    int v10 = DWORD2(v13);
    type metadata accessor for CGPoint(0);
    char v14 = 1;
    sub_1A3DF9738(&qword_1E95F0AB0, type metadata accessor for CGPoint);
    sub_1A4096CFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v11 = v13;
    *(void *)a2 = v9;
    *(_DWORD *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DF5D68()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF5DC8()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF5E20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.Gaze.init(from:)(a1, a2);
}

uint64_t sub_1A3DF5E38(void *a1)
{
  return FaceObservation.Gaze.encode(to:)(a1);
}

float FaceObservation.GazeScoresResult.gazeScores.getter@<S0>(uint64_t a1@<X8>)
{
  float result = *(float *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(float *)(a1 + 8) = result;
  return result;
}

void FaceObservation.GazeScoresResult.originatingRequestDescriptor.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 12);
}

_WORD *FaceObservation.GazeScoresResult.originatingRequestDescriptor.setter(_WORD *result)
{
  *(_WORD *)(v1 + 12) = *result;
  return result;
}

uint64_t (*FaceObservation.GazeScoresResult.originatingRequestDescriptor.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3DF5EA4@<X0>(uint64_t result@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  int v3 = *(_DWORD *)(result + 8);
  __int16 v4 = *a2;
  if (a2[1]) {
    __int16 v5 = 256;
  }
  else {
    __int16 v5 = 0;
  }
  *(void *)a3 = *(void *)result;
  *(_DWORD *)(a3 + 8) = v3;
  *(_WORD *)(a3 + 12) = v5 | v4;
  return result;
}

uint64_t FaceObservation.GazeScoresResult.hash(into:)()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + 12);
  sub_1A4096F5C();
  sub_1A4096F5C();
  sub_1A4096F5C();
  if (v1 >= 0xFFF8) {
    return sub_1A4096F4C();
  }
  sub_1A4096F4C();
  sub_1A3C810D0();
  return sub_1A40960DC();
}

uint64_t sub_1A3DF5F94()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0x726F6353657A6167;
  }
}

uint64_t sub_1A3DF5FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DFE820(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DF6000(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAD58();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF603C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAD58();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.GazeScoresResult.encode(to:)(void *a1)
{
  int v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0AB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *((_DWORD *)v3 + 2);
  __int16 v10 = *((_WORD *)v3 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFAD58();
  sub_1A4096FEC();
  uint64_t v14 = *v3;
  int v15 = v9;
  char v13 = 0;
  sub_1A3DFACB0();
  sub_1A4096DBC();
  if (!v2)
  {
    LOWORD(v14) = v10;
    char v13 = 1;
    sub_1A3C81220();
    sub_1A4096D6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FaceObservation.GazeScoresResult.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t FaceObservation.GazeScoresResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0AC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFAD58();
  sub_1A4096FDC();
  if (!v2)
  {
    char v15 = 0;
    sub_1A3DFAD04();
    sub_1A4096CFC();
    uint64_t v9 = v13;
    int v10 = v14;
    char v15 = 1;
    sub_1A3C80E6C();
    sub_1A4096CAC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __int16 v11 = v13;
    *(void *)a2 = v9;
    *(_DWORD *)(a2 + 8) = v10;
    *(_WORD *)(a2 + 12) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DF6460()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF64C0()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF6518@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.GazeScoresResult.init(from:)(a1, a2);
}

uint64_t sub_1A3DF6530(void *a1)
{
  return FaceObservation.GazeScoresResult.encode(to:)(a1);
}

void sub_1A3DF6548(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 12);
}

__n128 FaceObservation.GazeResult.gaze.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int32 v2 = v1->n128_u32[2];
  a1->n128_u64[0] = v1->n128_u64[0];
  a1->n128_u32[2] = v2;
  __n128 result = v1[1];
  a1[1] = result;
  return result;
}

void FaceObservation.GazeResult.originatingRequestDescriptor.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 32);
}

_WORD *FaceObservation.GazeResult.originatingRequestDescriptor.setter(_WORD *result)
{
  *(_WORD *)(v1 + 32) = *result;
  return result;
}

uint64_t (*FaceObservation.GazeResult.originatingRequestDescriptor.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 sub_1A3DF65AC@<Q0>(__n128 *a1@<X0>, unsigned __int8 *a2@<X1>, __n128 *a3@<X8>)
{
  unsigned __int32 v3 = a1->n128_u32[2];
  __int16 v4 = *a2;
  if (a2[1]) {
    __int16 v5 = 256;
  }
  else {
    __int16 v5 = 0;
  }
  a3->n128_u64[0] = a1->n128_u64[0];
  a3->n128_u32[2] = v3;
  __n128 result = a1[1];
  a3[1] = result;
  a3[2].n128_u16[0] = v5 | v4;
  return result;
}

uint64_t FaceObservation.GazeResult.hash(into:)()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + 32);
  FaceObservation.Gaze.hash(into:)();
  if (v1 >= 0xFFF8) {
    return sub_1A4096F4C();
  }
  sub_1A4096F4C();
  sub_1A3C810D0();
  return sub_1A40960DC();
}

uint64_t sub_1A3DF668C()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 1702519143;
  }
}

uint64_t sub_1A3DF66C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DFE91C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DF66EC(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFADAC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF6728(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFADAC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.GazeResult.encode(to:)(void *a1)
{
  unsigned __int32 v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0AC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *((_DWORD *)v3 + 2);
  uint64_t v10 = v3[2];
  uint64_t v11 = v3[3];
  __int16 v12 = *((_WORD *)v3 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFADAC();
  sub_1A4096FEC();
  uint64_t v16 = *v3;
  int v17 = v9;
  uint64_t v18 = v10;
  uint64_t v19 = v11;
  char v15 = 0;
  sub_1A3DFAE00();
  sub_1A4096DBC();
  if (!v2)
  {
    LOWORD(v16) = v12;
    char v15 = 1;
    sub_1A3C81220();
    sub_1A4096D6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FaceObservation.GazeResult.hashValue.getter()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + 32);
  sub_1A4096F2C();
  FaceObservation.Gaze.hash(into:)();
  sub_1A4096F4C();
  if (v1 < 0xFFF8)
  {
    sub_1A3C810D0();
    sub_1A40960DC();
  }
  return sub_1A4096F7C();
}

uint64_t FaceObservation.GazeResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0AD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFADAC();
  sub_1A4096FDC();
  if (!v2)
  {
    char v19 = 0;
    sub_1A3DFAE54();
    sub_1A4096CFC();
    uint64_t v9 = v15;
    int v10 = v16;
    uint64_t v11 = v17;
    uint64_t v12 = v18;
    char v19 = 1;
    sub_1A3C80E6C();
    sub_1A4096CAC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __int16 v13 = v15;
    *(void *)a2 = v9;
    *(_DWORD *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
    *(_WORD *)(a2 + 32) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DF6BD4()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + 32);
  FaceObservation.Gaze.hash(into:)();
  if (v1 >= 0xFFF8) {
    return sub_1A4096F4C();
  }
  sub_1A4096F4C();
  sub_1A3C810D0();
  return sub_1A40960DC();
}

uint64_t sub_1A3DF6C78()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + 32);
  sub_1A4096F2C();
  FaceObservation.Gaze.hash(into:)();
  sub_1A4096F4C();
  if (v1 < 0xFFF8)
  {
    sub_1A3C810D0();
    sub_1A40960DC();
  }
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF6D34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.GazeResult.init(from:)(a1, a2);
}

uint64_t sub_1A3DF6D4C(void *a1)
{
  return FaceObservation.GazeResult.encode(to:)(a1);
}

float FaceObservation.FaceLivelinessScore.confidence.getter()
{
  return *(float *)v0;
}

void FaceObservation.FaceLivelinessScore.originatingRequestDescriptor.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 4);
}

_WORD *FaceObservation.FaceLivelinessScore.originatingRequestDescriptor.setter(_WORD *result)
{
  *(_WORD *)(v1 + 4) = *result;
  return result;
}

uint64_t (*FaceObservation.FaceLivelinessScore.originatingRequestDescriptor.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t FaceObservation.FaceLivelinessScore.description.getter()
{
  return 0;
}

unsigned __int8 *sub_1A3DF6E8C@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  __int16 v3 = *result;
  if (result[1]) {
    __int16 v4 = 256;
  }
  else {
    __int16 v4 = 0;
  }
  *(float *)a2 = a3;
  *(_WORD *)(a2 + 4) = v4 | v3;
  return result;
}

uint64_t _s6Vision15FaceObservationV14CaptureQualityV4hash4intoys6HasherVz_tF_0()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + 4);
  sub_1A4096F5C();
  if (v1 >= 0xFFF8) {
    return sub_1A4096F4C();
  }
  sub_1A4096F4C();
  sub_1A3C810D0();
  return sub_1A40960DC();
}

BOOL static FaceObservation.FaceLivelinessScore.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A3DF8DB8(a1, a2);
}

uint64_t sub_1A3DF6F68()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0x6E656469666E6F63;
  }
}

uint64_t sub_1A3DF6FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3DFE9FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3DF6FD4(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAEA8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DF7010(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFAEA8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FaceObservation.FaceLivelinessScore.encode(to:)(void *a1)
{
  return sub_1A3DF7088(a1, &qword_1E95F0AE8, (void (*)(void))sub_1A3DFAEA8);
}

uint64_t sub_1A3DF7088(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *(unsigned __int16 *)(v3 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A4096FEC();
  char v17 = 0;
  uint64_t v10 = v14;
  sub_1A4096D9C();
  if (!v10)
  {
    __int16 v16 = v13;
    char v15 = 1;
    sub_1A3C81220();
    sub_1A4096D6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t _s6Vision15FaceObservationV14CaptureQualityV9hashValueSivg_0()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + 4);
  sub_1A4096F2C();
  sub_1A4096F5C();
  sub_1A4096F4C();
  if (v1 < 0xFFF8)
  {
    sub_1A3C810D0();
    sub_1A40960DC();
  }
  return sub_1A4096F7C();
}

uint64_t FaceObservation.FaceLivelinessScore.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3DF7304(a1, &qword_1E95F0AF0, (void (*)(void))sub_1A3DFAEA8, a2);
}

uint64_t sub_1A3DF7304@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v17 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A4096FDC();
  if (!v4)
  {
    uint64_t v11 = v17;
    uint64_t v10 = v18;
    char v21 = 0;
    sub_1A4096CDC();
    int v13 = v12;
    char v19 = 1;
    sub_1A3C80E6C();
    sub_1A4096CAC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v7);
    __int16 v14 = v20;
    *(_DWORD *)uint64_t v10 = v13;
    *(_WORD *)(v10 + 4) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1A3DF74D0(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 4);
}

uint64_t sub_1A3DF74DC()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + 4);
  sub_1A4096F2C();
  sub_1A4096F5C();
  sub_1A4096F4C();
  if (v1 < 0xFFF8)
  {
    sub_1A3C810D0();
    sub_1A40960DC();
  }
  return sub_1A4096F7C();
}

uint64_t sub_1A3DF7580@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.FaceLivelinessScore.init(from:)(a1, a2);
}

uint64_t sub_1A3DF7598(void *a1)
{
  return FaceObservation.FaceLivelinessScore.encode(to:)(a1);
}

__n128 sub_1A3DF75B4@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for FaceObservation();
  uint64_t v5 = (char *)a2 + v4[15];
  *(void *)uint64_t v5 = 0;
  *((_WORD *)v5 + 6) = -16;
  *((_DWORD *)v5 + 2) = 0;
  uint64_t v6 = (char *)a2 + v4[16];
  unint64_t v54 = (char *)a2 + v4[17];
  unint64_t v55 = (char *)a2 + v4[18];
  uint64_t v7 = (char *)a2 + v4[19];
  uint64_t v59 = a1[1];
  uint64_t v60 = *a1;
  uint64_t v8 = a1[3];
  uint64_t v58 = a1[2];
  uint64_t v9 = a1[5];
  uint64_t v57 = a1[4];
  uint64_t v10 = a1[6];
  *a2 = *a1;
  a2[1] = v59;
  a2[2] = v58;
  a2[3] = v8;
  a2[4] = v57;
  a2[5] = v9;
  a2[6] = v10;
  uint64_t v11 = v4[5];
  int v12 = (char *)a1 + v11;
  int v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  char v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v13, v12, v14);
  v15((char *)a2 + v4[6], (char *)a1 + v4[6], v14);
  v15((char *)a2 + v4[7], (char *)a1 + v4[7], v14);
  uint64_t v16 = v4[8];
  int v17 = *(_DWORD *)((char *)a1 + v16);
  __int16 v18 = *(_WORD *)((char *)a1 + v16 + 4);
  char v19 = (char *)a2 + v16;
  *((_WORD *)v19 + 2) = v18;
  *(_DWORD *)char v19 = v17;
  uint64_t v20 = v4[9];
  char v21 = (_OWORD *)((char *)a1 + v20);
  uint64_t v22 = (_OWORD *)((char *)a2 + v20);
  long long v23 = v21[1];
  _OWORD *v22 = *v21;
  v22[1] = v23;
  uint64_t v24 = v4[10];
  uint64_t v25 = (_OWORD *)((char *)a1 + v24);
  double v26 = (_OWORD *)((char *)a2 + v24);
  long long v27 = v25[1];
  *double v26 = *v25;
  v26[1] = v27;
  uint64_t v28 = v4[11];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v30, v29, v31);
  *(_DWORD *)((char *)a2 + v4[12]) = *(_DWORD *)((char *)a1 + v4[12]);
  uint64_t v32 = v4[13];
  char v33 = (_OWORD *)((char *)a1 + v32);
  char v34 = *((unsigned char *)a1 + v32 + 48);
  id v35 = (char *)a2 + v32;
  long long v36 = v33[1];
  *(_OWORD *)id v35 = *v33;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v33[2];
  v35[48] = v34;
  *(_WORD *)((char *)a2 + v4[14]) = *(_WORD *)((char *)a1 + v4[14]);
  uint64_t v37 = (char *)a1 + v4[16];
  uint64_t v38 = *(void *)v37;
  int v39 = *((_DWORD *)v37 + 2);
  LOWORD(v37) = *((_WORD *)v37 + 6);
  *(void *)uint64_t v6 = v38;
  *((_WORD *)v6 + 6) = (_WORD)v37;
  *((_DWORD *)v6 + 2) = v39;
  __C::CGRect v40 = (char *)a1 + v4[17];
  LOWORD(v38) = *((_WORD *)v40 + 16);
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)unint64_t v54 = *(_OWORD *)v40;
  *((_OWORD *)v54 + 1) = v41;
  *((_WORD *)v54 + 16) = v38;
  id v42 = (char *)a1 + v4[18];
  LODWORD(v38) = *(_DWORD *)v42;
  *((_WORD *)v55 + 2) = *((_WORD *)v42 + 2);
  *(_DWORD *)unint64_t v55 = v38;
  id v43 = (char *)a1 + v4[19];
  uint64_t v44 = *(void *)v43;
  unint64_t v45 = *((void *)v43 + 1);
  uint64_t v46 = *((void *)v43 + 2);
  uint64_t v47 = *((void *)v43 + 3);
  LOBYTE(v38) = v43[34];
  __int16 v48 = *((_WORD *)v43 + 16);
  *(void *)uint64_t v7 = *(void *)v43;
  *((void *)v7 + 1) = v45;
  *((void *)v7 + 2) = v46;
  *((void *)v7 + 3) = v47;
  v7[34] = v38;
  *((_WORD *)v7 + 16) = v48;
  uint64_t v49 = (__n128 *)((char *)a1 + v4[20]);
  __n128 v56 = *v49;
  unint64_t v50 = v49[1].n128_u64[0];
  unint64_t v51 = v49[1].n128_u64[1];
  sub_1A3DEC68C(v60, v59);
  sub_1A3C7D190(v44, v45, v46, v47, v48);
  sub_1A3CF5540((uint64_t)a1);
  float v52 = (__n128 *)((char *)a2 + v4[20]);
  __n128 result = v56;
  *float v52 = v56;
  v52[1].n128_u64[0] = v50;
  v52[1].n128_u64[1] = v51;
  return result;
}

double sub_1A3DF78A8@<D0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FaceObservation();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  int v12 = (uint64_t *)((char *)&v18 - v11);
  long long v18 = *a2;
  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v14 = *((void *)a2 + 3);
  __int16 v15 = *((_WORD *)a2 + 16);
  LOBYTE(a2) = *((unsigned char *)a2 + 34);
  sub_1A3CF54DC(a1, (uint64_t)v9);
  sub_1A3DF75B4(v9, v12);
  sub_1A3CF5540(a1);
  sub_1A3CE31A8((uint64_t)v12, a3);
  uint64_t v16 = a3 + *(int *)(v7 + 84);
  sub_1A3C7D200(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), *(void *)(v16 + 24), *(_WORD *)(v16 + 32));
  double result = *(double *)&v18;
  *(_OWORD *)uint64_t v16 = v18;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v14;
  *(unsigned char *)(v16 + 34) = (_BYTE)a2;
  *(_WORD *)(v16 + 32) = v15;
  return result;
}

double sub_1A3DF79D8@<D0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FaceObservation();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  int v12 = (uint64_t *)((char *)&v17 - v11);
  long long v17 = *a2;
  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v14 = *((void *)a2 + 3);
  LOWORD(a2) = *((_WORD *)a2 + 16);
  sub_1A3CF54DC(a1, (uint64_t)v9);
  sub_1A3DF75B4(v9, v12);
  sub_1A3CF5540(a1);
  sub_1A3CE31A8((uint64_t)v12, a3);
  uint64_t v15 = a3 + *(int *)(v7 + 76);
  double result = *(double *)&v17;
  *(_OWORD *)uint64_t v15 = v17;
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v14;
  *(_WORD *)(v15 + 32) = (_WORD)a2;
  return result;
}

uint64_t sub_1A3DF7ADC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FaceObservation();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v16 - v10);
  uint64_t v12 = *a2;
  unint64_t v13 = *((unsigned int *)a2 + 2) | ((unint64_t)*((unsigned __int16 *)a2 + 6) << 32);
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  FaceObservation.description.getter();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A409621C();
  if ((v13 & 0xFFF800000000) == 0xFFF000000000)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = v12;
    int v17 = v13;
    __int16 v18 = WORD2(v13);
    sub_1A4096BAC();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    sub_1A3CF54DC(a1, (uint64_t)v8);
    sub_1A3DF75B4(v8, v11);
    sub_1A3CF5540(a1);
    uint64_t result = sub_1A3CE31A8((uint64_t)v11, a3);
    uint64_t v15 = a3 + *(int *)(v6 + 60);
    *(void *)uint64_t v15 = v12;
    *(_WORD *)(v15 + 12) = WORD2(v13);
    *(_DWORD *)(v15 + 8) = v13;
  }
  return result;
}

uint64_t sub_1A3DF7CD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FaceObservation();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - v11);
  uint64_t v13 = *a2;
  int v14 = *((_DWORD *)a2 + 2);
  LOWORD(a2) = *((_WORD *)a2 + 6);
  sub_1A3CF54DC(a1, (uint64_t)v9);
  sub_1A3DF75B4(v9, v12);
  sub_1A3CF5540(a1);
  uint64_t result = sub_1A3CE31A8((uint64_t)v12, a3);
  uint64_t v16 = a3 + *(int *)(v7 + 72);
  *(void *)uint64_t v16 = v13;
  *(_WORD *)(v16 + 12) = (_WORD)a2;
  *(_DWORD *)(v16 + 8) = v14;
  return result;
}

uint64_t sub_1A3DF7DD0@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FaceObservation();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v16 - v11);
  int v13 = *a2;
  LOWORD(a2) = *((_WORD *)a2 + 2);
  sub_1A3CF54DC(a1, (uint64_t)v9);
  sub_1A3DF75B4(v9, v12);
  sub_1A3CF5540(a1);
  uint64_t result = sub_1A3CE31A8((uint64_t)v12, a3);
  uint64_t v15 = a3 + *(int *)(v7 + 80);
  *(_WORD *)(v15 + 4) = (_WORD)a2;
  *(_DWORD *)uint64_t v15 = v13;
  return result;
}

unint64_t sub_1A3DF7EC0(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
LABEL_6:
    if (!v8)
    {
      int64_t v12 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
      }
      else
      {
        if (v12 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v12);
        ++v4;
        if (v13) {
          goto LABEL_23;
        }
        int64_t v4 = v12 + 1;
        if (v12 + 1 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (v13) {
          goto LABEL_23;
        }
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (v13) {
          goto LABEL_23;
        }
        int64_t v4 = v12 + 3;
        if (v12 + 3 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (v13) {
          goto LABEL_23;
        }
        int64_t v14 = v12 + 4;
        if (v14 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v14);
        if (v13)
        {
          int64_t v4 = v14;
LABEL_23:
          unint64_t v8 = (v13 - 1) & v13;
          unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
          goto LABEL_24;
        }
        while (1)
        {
          int64_t v4 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            break;
          }
          if (v4 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          ++v14;
          if (v13) {
            goto LABEL_23;
          }
        }
      }
      __break(1u);
      return result;
    }
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_24:
    uint64_t v15 = *(void **)(*(void *)(v3 + 56) + 8 * v11);
    uint64_t result = sub_1A3DF8090(*(unsigned char *)(*(void *)(v3 + 48) + v11));
    if ((v16 & 1) == 0) {
      return 0;
    }
    uint64_t v17 = *(void **)(*(void *)(a2 + 56) + 8 * result);
    uint64_t v18 = v17[2];
    if (v18 != v15[2]) {
      return 0;
    }
    if (v18) {
      BOOL v19 = v17 == v15;
    }
    else {
      BOOL v19 = 1;
    }
    if (!v19)
    {
      if (v17[4] != v15[4]) {
        return 0;
      }
      uint64_t v20 = v18 - 1;
      if (v20) {
        break;
      }
    }
  }
  char v21 = v17 + 5;
  uint64_t v22 = v15 + 5;
  while (1)
  {
    uint64_t v24 = *v21++;
    uint64_t v23 = v24;
    uint64_t v25 = *v22++;
    if (v23 != v25) {
      return 0;
    }
    if (!--v20) {
      goto LABEL_6;
    }
  }
}

unint64_t sub_1A3DF8090(unsigned __int8 a1)
{
  sub_1A4096F2C();
  sub_1A4096F3C();
  uint64_t v2 = sub_1A4096F7C();

  return sub_1A3DF8110(a1, v2);
}

char *sub_1A3DF80FC(uint64_t a1)
{
  return sub_1A3D650BC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_1A3DF8110(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

char *sub_1A3DF81B0(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1A3DF81D0(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

char *sub_1A3DF81D0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95F00C0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_1A3DF82CC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  unint64_t v10 = sub_1A4095A5C();
  if (v10)
  {
    uint64_t v11 = sub_1A4095A8C();
    if (__OFSUB__(a1, v11))
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    v10 += a1 - v11;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = sub_1A4095A7C();
  if (!v10)
  {
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v18 = 0xD000000000000019;
    *(void *)(v18 + 8) = 0x80000001A40B8690;
    *(_DWORD *)(v18 + 16) = 0;
    *(unsigned char *)(v18 + 20) = 0;
    return swift_willThrow();
  }
  if ((a4 & 0x8000000000000000) != 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a4)
  {
    a3 = *a5;
    a2 = a4 - 1;
    if (a4 - 1 < *(void *)(*a5 + 16))
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *a5 = a3;
      if (result)
      {
        if (a4 < 0x14) {
          goto LABEL_11;
        }
        goto LABEL_22;
      }
LABEL_21:
      uint64_t result = (uint64_t)sub_1A3DF80FC(a3);
      a3 = result;
      if (a4 < 0x14) {
        goto LABEL_11;
      }
LABEL_22:
      unint64_t v13 = 0;
      BOOL v19 = (double *)(a3 + 32);
      if (a3 + 32 + 16 * a2 < a3 + 32 || a3 + 40 + 16 * a2 < a3 + 40 || a2 >> 60) {
        goto LABEL_12;
      }
      if ((unint64_t)v19 >= v10 + 8 * a4 || a3 + 16 * a4 + 32 <= v10)
      {
        unint64_t v13 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v20 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        char v21 = (const float *)v10;
        do
        {
          float32x4x2_t v24 = vld2q_f32(v21);
          v21 += 8;
          v25.val[0] = vcvt_hight_f64_f32(v24.val[0]);
          v25.val[1] = vcvt_hight_f64_f32(v24.val[1]);
          v26.val[0] = vcvtq_f64_f32(*(float32x2_t *)v24.val[0].f32);
          v26.val[1] = vcvtq_f64_f32(*(float32x2_t *)v24.val[1].f32);
          uint64_t v22 = v19 + 8;
          vst2q_f64(v19, v26);
          uint64_t v23 = v19 + 4;
          vst2q_f64(v23, v25);
          BOOL v19 = v22;
          v20 -= 4;
        }
        while (v20);
        if (v13 == a4) {
          goto LABEL_14;
        }
        goto LABEL_12;
      }
LABEL_11:
      unint64_t v13 = 0;
LABEL_12:
      int64_t v14 = (float64x2_t *)(a3 + 16 * v13 + 32);
      uint64_t v15 = (float32x2_t *)(v10 + 8 * v13);
      unint64_t v16 = a4 - v13;
      do
      {
        float32x2_t v17 = *v15++;
        *v14++ = vcvtq_f64_f32(v17);
        --v16;
      }
      while (v16);
LABEL_14:
      *a5 = a3;
      return result;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1A3DF84AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1A4096F3C();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      v5 += 4;
      uint64_t result = sub_1A4096F5C();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1A3DF8504(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1A4096F3C();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    sub_1A3C979C8();
    do
    {
      v5 += 16;
      uint64_t result = sub_1A40960DC();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1A3DF858C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_19;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v10);
      if (!v14) {
        break;
      }
    }
LABEL_18:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_19:
    uint64_t v16 = *(void *)(*(void *)(a2 + 56) + 8 * v12);
    sub_1A4096F3C();
    sub_1A4096F3C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = v16 + 32;
      do
      {
        v18 += 8;
        sub_1A4096F3C();
        --v17;
      }
      while (v17);
    }
    uint64_t result = sub_1A4096F7C();
    v9 ^= result;
  }
  int64_t v15 = v13 + 2;
  if (v15 >= v7)
  {
LABEL_23:
    swift_release();
    return sub_1A4096F3C();
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1A3DF8738(uint64_t a1, uint64_t a2)
{
  if (!sub_1A3DEECD4(*(void **)a1, *(void **)a2)
    || !sub_1A3DEECD4(*(void **)(a1 + 8), *(void **)(a2 + 8))
    || !sub_1A3DEECD4(*(void **)(a1 + 16), *(void **)(a2 + 16))
    || !sub_1A3DEECD4(*(void **)(a1 + 24), *(void **)(a2 + 24))
    || !sub_1A3DEECD4(*(void **)(a1 + 32), *(void **)(a2 + 32))
    || !sub_1A3DEECD4(*(void **)(a1 + 40), *(void **)(a2 + 40))
    || !sub_1A3DEECD4(*(void **)(a1 + 48), *(void **)(a2 + 48))
    || !sub_1A3DEECD4(*(void **)(a1 + 56), *(void **)(a2 + 56))
    || !sub_1A3DEECD4(*(void **)(a1 + 64), *(void **)(a2 + 64))
    || !sub_1A3DEECD4(*(void **)(a1 + 72), *(void **)(a2 + 72))
    || !sub_1A3DEECD4(*(void **)(a1 + 80), *(void **)(a2 + 80))
    || !sub_1A3DEECD4(*(void **)(a1 + 88), *(void **)(a2 + 88))
    || !sub_1A3DEECD4(*(void **)(a1 + 96), *(void **)(a2 + 96))
    || !sub_1A3DEECD4(*(void **)(a1 + 104), *(void **)(a2 + 104))
    || !sub_1A3DEECD4(*(void **)(a1 + 112), *(void **)(a2 + 112))
    || !sub_1A3DEECD4(*(void **)(a1 + 120), *(void **)(a2 + 120))
    || !sub_1A3DEECD4(*(void **)(a1 + 128), *(void **)(a2 + 128))
    || !sub_1A3DEECD4(*(void **)(a1 + 136), *(void **)(a2 + 136))
    || *(void *)(a1 + 144) != *(void *)(a2 + 144))
  {
    return 0;
  }
  unint64_t v4 = *(void *)(a1 + 152);
  uint64_t v5 = *(void *)(a2 + 152);

  return sub_1A3DF7EC0(v4, v5);
}

BOOL _s6Vision15FaceObservationV4GazeV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2
    || *(float *)(a1 + 4) != *(float *)(a2 + 4)
    || *(float *)(a1 + 8) != *(float *)(a2 + 8))
  {
    return 0;
  }
  if (*(double *)(a1 + 24) == *(double *)(a2 + 24)) {
    return *(double *)(a1 + 16) == *(double *)(a2 + 16);
  }
  return 0;
}

BOOL _s6Vision15FaceObservationV16GazeScoresResultV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2
    || *(float *)(a1 + 4) != *(float *)(a2 + 4)
    || *(float *)(a1 + 8) != *(float *)(a2 + 8))
  {
    return 0;
  }
  unsigned int v4 = *(unsigned __int16 *)(a2 + 12);
  if (*(unsigned __int16 *)(a1 + 12) <= 0xFFF7u)
  {
    if (v4 > 0xFFF7) {
      return 0;
    }
    sub_1A3C832B8();
    return (sub_1A409612C() & 1) != 0;
  }
  return v4 > 0xFFF7;
}

BOOL _s6Vision15FaceObservationV11Landmarks2DV6RegionV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 12);
  CGSize v10 = (CGSize)*((_OWORD *)a1 + 3);
  CGPoint v11 = (CGPoint)*((_OWORD *)a1 + 2);
  unsigned int v3 = *((unsigned __int16 *)a2 + 12);
  CGSize v8 = (CGSize)*((_OWORD *)a2 + 3);
  CGPoint v9 = (CGPoint)*((_OWORD *)a2 + 2);
  uint64_t v4 = *((void *)a2 + 2);
  uint64_t v5 = *((void *)a1 + 2);
  if ((sub_1A3C984D0(*((void *)a1 + 1), *((void *)a2 + 1)) & 1) == 0) {
    return 0;
  }
  if (v5)
  {
    if (!v4 || !sub_1A3DEEC68(v5, v4)) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  if (v2 <= 0xFFF7)
  {
    LOWORD(v13.origin.x) = v2;
    if (v3 <= 0xFFF7)
    {
      LOWORD(v12.origin.x) = v3 & 0x1FF;
      sub_1A3C832B8();
      if (sub_1A409612C()) {
        goto LABEL_13;
      }
    }
    return 0;
  }
  if (v3 <= 0xFFF7) {
    return 0;
  }
LABEL_13:
  v13.origin = v11;
  v13.size = v10;
  v12.origin = v9;
  v12.size = v8;
  return static NormalizedRect.== infix(_:_:)(&v13, &v12);
}

BOOL _s6Vision15FaceObservationV10GazeResultV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2
    || *(float *)(a1 + 4) != *(float *)(a2 + 4)
    || *(float *)(a1 + 8) != *(float *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16)
    || *(double *)(a1 + 24) != *(double *)(a2 + 24))
  {
    return 0;
  }
  unsigned int v6 = *(unsigned __int16 *)(a2 + 32);
  if (*(unsigned __int16 *)(a1 + 32) <= 0xFFF7u)
  {
    if (v6 > 0xFFF7) {
      return 0;
    }
    sub_1A3C832B8();
    return (sub_1A409612C() & 1) != 0;
  }
  return v6 > 0xFFF7;
}

uint64_t _s6Vision15FaceObservationV0B5PrintV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 24);
  float v6 = *(float *)(a1 + 28);
  unsigned int v7 = *(unsigned __int16 *)(a1 + 32);
  int v8 = *(unsigned __int8 *)(a1 + 34);
  uint64_t v9 = *(void *)a2;
  unint64_t v10 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  unsigned __int8 v12 = *(unsigned char *)(a2 + 24);
  float v13 = *(float *)(a2 + 28);
  unsigned int v14 = *(unsigned __int16 *)(a2 + 32);
  uint64_t v15 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      LODWORD(v15) = HIDWORD(v2) - v2;
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        JUMPOUT(0x1A3DF8D98);
      }
      uint64_t v15 = (int)v15;
      break;
    case 2uLL:
      uint64_t v17 = *(void *)(v2 + 16);
      uint64_t v16 = *(void *)(v2 + 24);
      BOOL v18 = __OFSUB__(v16, v17);
      uint64_t v15 = v16 - v17;
      if (!v18) {
        break;
      }
      goto LABEL_31;
    case 3uLL:
      break;
    default:
      uint64_t v15 = BYTE6(v3);
      break;
  }
  switch(v10 >> 62)
  {
    case 1uLL:
      LODWORD(v19) = HIDWORD(v9) - v9;
      if (__OFSUB__(HIDWORD(v9), v9)) {
        goto LABEL_32;
      }
      uint64_t v19 = (int)v19;
LABEL_11:
      if (v15 != v19) {
        return 0;
      }
      int v25 = *(unsigned __int8 *)(a2 + 34);
      int v26 = *(unsigned __int8 *)(a1 + 34);
      if (v15 < 1)
      {
        if (v4 != v11) {
          return 0;
        }
        goto LABEL_20;
      }
      sub_1A3C7D1A8(v9, v10);
      char v22 = sub_1A3C80458(v2, v3, v9, v10);
      uint64_t result = 0;
      if ((v22 & 1) != 0 && v4 == v11)
      {
LABEL_20:
        unsigned __int8 v28 = v5;
        unsigned __int8 v27 = v12;
        BOOL v24 = static ElementType.== infix(_:_:)(&v28, &v27);
        uint64_t result = 0;
        if (!v24 || v6 != v13) {
          return result;
        }
        if (v7 <= 0xFFF7)
        {
          if (v14 <= 0xFFF7)
          {
            sub_1A3C832B8();
            if (sub_1A409612C()) {
              return v26 ^ v25 ^ 1u;
            }
          }
        }
        else if (v14 > 0xFFF7)
        {
          return v26 ^ v25 ^ 1u;
        }
        return 0;
      }
      return result;
    case 2uLL:
      uint64_t v21 = *(void *)(v9 + 16);
      uint64_t v20 = *(void *)(v9 + 24);
      BOOL v18 = __OFSUB__(v20, v21);
      uint64_t v19 = v20 - v21;
      if (!v18) {
        goto LABEL_11;
      }
      goto LABEL_33;
    case 3uLL:
      uint64_t result = 0;
      if (v15) {
        return result;
      }
      int v25 = *(unsigned __int8 *)(a2 + 34);
      int v26 = v8;
      if (v4 != v11) {
        return result;
      }
      goto LABEL_20;
    default:
      uint64_t v19 = BYTE6(v10);
      goto LABEL_11;
  }
}

BOOL sub_1A3DF8DB8(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2) {
    return 0;
  }
  unsigned int v2 = *(unsigned __int16 *)(a2 + 4);
  if (*(unsigned __int16 *)(a1 + 4) <= 0xFFF7u)
  {
    if (v2 > 0xFFF7) {
      return 0;
    }
    sub_1A3C832B8();
    return (sub_1A409612C() & 1) != 0;
  }
  return v2 > 0xFFF7;
}

BOOL _s6Vision15FaceObservationV11Landmarks2DV2eeoiySbAE_AEtFZ_0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v2 = *((void *)a1 + 2);
  CGSize v4 = *(CGSize *)(a1 + 20);
  unsigned int v5 = *a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v6 = *((void *)a2 + 2);
  CGPoint v12 = *(CGPoint *)(a2 + 12);
  CGPoint v13 = *(CGPoint *)(a1 + 12);
  CGSize v11 = *(CGSize *)(a2 + 20);
  if (*a1 <= 0xFFF7u)
  {
    LOWORD(v15.origin.x) = *a1;
    if (v5 > 0xFFF7) {
      return 0;
    }
    CGSize v10 = v4;
    LOWORD(v14.origin.x) = v5 & 0x1FF;
    sub_1A3C832B8();
    if ((sub_1A409612C() & 1) == 0) {
      return 0;
    }
  }
  else
  {
    CGSize v10 = *(CGSize *)(a1 + 20);
    if (v5 <= 0xFFF7) {
      return 0;
    }
  }
  if ((sub_1A3C984D0(v3, v7) & 1) == 0) {
    return 0;
  }
  if (!v2)
  {
    if (!v6) {
      goto LABEL_10;
    }
    return 0;
  }
  if (!v6 || !sub_1A3DEEC68(v2, v6)) {
    return 0;
  }
LABEL_10:
  v15.origin = v13;
  v15.size = v10;
  v14.origin = v12;
  v14.size = v11;
  return static NormalizedRect.== infix(_:_:)(&v15, &v14);
}

BOOL _s6Vision15FaceObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  CGFloat v3 = *(double *)a1;
  CGFloat v2 = *(double *)(a1 + 8);
  CGFloat v5 = *(double *)(a1 + 16);
  CGFloat v4 = *(double *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *a2;
  CGFloat v10 = *((double *)a2 + 1);
  CGFloat v12 = *((double *)a2 + 2);
  CGFloat v11 = *((double *)a2 + 3);
  uint64_t v14 = a2[4];
  uint64_t v13 = a2[5];
  uint64_t v15 = a2[6];
  if (v2 != 0.0)
  {
    v96.origin.double x = *(CGFloat *)a1;
    v96.origin.double y = v2;
    v96.size.double width = v5;
    v96.size.double height = v4;
    uint64_t v97 = v7;
    uint64_t v98 = v6;
    uint64_t v99 = v8;
    if (v10 != 0.0)
    {
      LOWORD(v92.origin.x) = v9;
      v92.origin.double y = v10;
      v92.size.double width = v12;
      v92.size.double height = v11;
      uint64_t v93 = v14;
      uint64_t v94 = v13;
      uint64_t v95 = v15;
      sub_1A3DEC68C(*(uint64_t *)&v3, *(uint64_t *)&v2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v16 = _s6Vision15FaceObservationV11Landmarks2DV2eeoiySbAE_AEtFZ_0((unsigned __int16 *)&v96, (unsigned __int16 *)&v92);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A3DF9F54(*(uint64_t *)&v3, *(uint64_t *)&v2);
      if (!v16) {
        return 0;
      }
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_13:
    sub_1A3DEC68C(v9, *(uint64_t *)&v10);
    sub_1A3DF9F54(*(uint64_t *)&v3, *(uint64_t *)&v2);
    sub_1A3DF9F54(v9, *(uint64_t *)&v10);
    return 0;
  }
  if (v10 != 0.0) {
    goto LABEL_13;
  }
LABEL_6:
  uint64_t v17 = (int *)type metadata accessor for FaceObservation();
  sub_1A3C8C73C(0, (unint64_t *)&qword_1E95F08F8);
  if ((sub_1A40959CC() & 1) == 0 || (sub_1A40959CC() & 1) == 0 || (sub_1A40959CC() & 1) == 0) {
    return 0;
  }
  uint64_t v18 = v17[8];
  unint64_t v19 = *(unsigned int *)(a1 + v18) | ((unint64_t)*(unsigned __int16 *)(a1 + v18 + 4) << 32);
  unint64_t v20 = *(unsigned int *)((char *)a2 + v18) | ((unint64_t)*(unsigned __int16 *)((char *)a2 + v18 + 4) << 32);
  if ((v19 & 0xFFF800000000) == 0xFFF000000000)
  {
    if ((v20 & 0xFFF800000000) != 0xFFF000000000) {
      return 0;
    }
  }
  else
  {
    LODWORD(v96.origin.x) = v19;
    WORD2(v96.origin.x) = WORD2(v19);
    if ((v20 & 0xFFF800000000) == 0xFFF000000000) {
      return 0;
    }
    LODWORD(v92.origin.x) = v20;
    WORD2(v92.origin.x) = WORD2(v20);
    if (!sub_1A3DF8DB8((uint64_t)&v96, (uint64_t)&v92)) {
      return 0;
    }
  }
  uint64_t v23 = v17[9];
  CGSize v24 = *(CGSize *)(a1 + v23 + 16);
  v96.origin = *(CGPoint *)(a1 + v23);
  v96.size = v24;
  int v25 = (char *)a2 + v23;
  CGSize v26 = (CGSize)*((_OWORD *)v25 + 1);
  v92.origin = *(CGPoint *)v25;
  v92.size = v26;
  if (!static NormalizedRect.== infix(_:_:)(&v96, &v92)) {
    return 0;
  }
  uint64_t v27 = v17[10];
  CGSize v28 = *(CGSize *)(a1 + v27 + 16);
  v96.origin = *(CGPoint *)(a1 + v27);
  v96.size = v28;
  uint64_t v29 = (char *)a2 + v27;
  CGSize v30 = (CGSize)*((_OWORD *)v29 + 1);
  v92.origin = *(CGPoint *)v29;
  v92.size = v30;
  if (!static NormalizedRect.== infix(_:_:)(&v96, &v92)
    || (sub_1A4095C4C() & 1) == 0
    || *(float *)(a1 + v17[12]) != *(float *)((char *)a2 + v17[12]))
  {
    return 0;
  }
  uint64_t v31 = v17[13];
  uint64_t v32 = a1 + v31;
  char v33 = *(unsigned char *)(a1 + v31 + 48);
  char v34 = (double *)((char *)a2 + v31);
  if (v33)
  {
    if (!*((unsigned char *)v34 + 48)) {
      return 0;
    }
  }
  else
  {
    if ((_BYTE)v34[6]) {
      return 0;
    }
    CGFloat v35 = *(double *)v32;
    CGFloat v36 = *(double *)(v32 + 8);
    CGSize v37 = *(CGSize *)(v32 + 16);
    uint64_t v39 = *(void *)(v32 + 32);
    uint64_t v38 = *(void *)(v32 + 40);
    CGFloat v40 = *v34;
    CGFloat v41 = v34[1];
    CGSize v42 = (CGSize)*((_OWORD *)v34 + 1);
    uint64_t v44 = *((void *)v34 + 4);
    uint64_t v43 = *((void *)v34 + 5);
    v92.origin.double x = v35;
    v92.origin.double y = v36;
    v92.size = v37;
    uint64_t v93 = v39;
    uint64_t v94 = v38;
    v96.origin.double x = v40;
    v96.origin.double y = v41;
    v96.size = v42;
    uint64_t v97 = v44;
    uint64_t v98 = v43;
    if ((sub_1A409669C() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v45 = v17[14];
  unsigned int v46 = *(unsigned __int16 *)(a1 + v45);
  unsigned int v47 = *(unsigned __int16 *)((char *)a2 + v45);
  if (v46 <= 0xFFF7)
  {
    LOWORD(v103.origin.x) = v46;
    if (v47 > 0xFFF7) {
      return 0;
    }
    LOWORD(v100.origin.x) = v47 & 0x1FF;
    sub_1A3C832B8();
    if ((sub_1A409612C() & 1) == 0) {
      return 0;
    }
  }
  else if (v47 <= 0xFFF7)
  {
    return 0;
  }
  uint64_t v48 = v17[15];
  uint64_t v49 = (CGFloat *)(a1 + v48);
  unint64_t v50 = *(unsigned int *)(a1 + v48 + 8) | ((unint64_t)*(unsigned __int16 *)(a1 + v48 + 12) << 32);
  unint64_t v51 = (CGFloat *)((char *)a2 + v48);
  unint64_t v52 = *(unsigned int *)((char *)a2 + v48 + 8) | ((unint64_t)*(unsigned __int16 *)((char *)a2 + v48 + 12) << 32);
  if ((v50 & 0xFFF800000000) == 0xFFF000000000)
  {
    if ((v52 & 0xFFF800000000) != 0xFFF000000000) {
      return 0;
    }
  }
  else
  {
    CGFloat v53 = *v51;
    v103.origin.double x = *v49;
    WORD2(v103.origin.y) = WORD2(v50);
    LODWORD(v103.origin.y) = v50;
    if ((v52 & 0xFFF800000000) == 0xFFF000000000) {
      return 0;
    }
    v100.origin.double x = v53;
    LODWORD(v100.origin.y) = v52;
    WORD2(v100.origin.y) = WORD2(v52);
    if (!_s6Vision15FaceObservationV16GazeScoresResultV2eeoiySbAE_AEtFZ_0((uint64_t)&v103, (uint64_t)&v100)) {
      return 0;
    }
  }
  uint64_t v54 = v17[16];
  unint64_t v55 = (CGFloat *)(a1 + v54);
  unint64_t v56 = *(unsigned int *)(a1 + v54 + 8) | ((unint64_t)*(unsigned __int16 *)(a1 + v54 + 12) << 32);
  uint64_t v57 = (CGFloat *)((char *)a2 + v54);
  unint64_t v58 = *(unsigned int *)((char *)a2 + v54 + 8) | ((unint64_t)*(unsigned __int16 *)((char *)a2 + v54 + 12) << 32);
  if ((v56 & 0xFFF800000000) == 0xFFF000000000)
  {
    if ((v58 & 0xFFF800000000) != 0xFFF000000000) {
      return 0;
    }
  }
  else
  {
    CGFloat v59 = *v57;
    v103.origin.double x = *v55;
    WORD2(v103.origin.y) = WORD2(v56);
    LODWORD(v103.origin.y) = v56;
    if ((v58 & 0xFFF800000000) == 0xFFF000000000) {
      return 0;
    }
    v100.origin.double x = v59;
    LODWORD(v100.origin.y) = v58;
    WORD2(v100.origin.y) = WORD2(v58);
    if (!_s6Vision15FaceObservationV16GazeScoresResultV2eeoiySbAE_AEtFZ_0((uint64_t)&v103, (uint64_t)&v100)) {
      return 0;
    }
  }
  uint64_t v60 = v17[17];
  uint64_t v61 = a1 + v60;
  __int16 v62 = *(_WORD *)(a1 + v60 + 32);
  int v63 = (char *)a2 + v60;
  __int16 v64 = *(_WORD *)((char *)a2 + v60 + 32);
  if ((v62 & 0xFFF8) == 0xFFF0)
  {
    if ((v64 & 0xFFF8) != 0xFFF0) {
      return 0;
    }
  }
  else
  {
    CGFloat v66 = *(double *)v63;
    uint64_t v65 = *((void *)v63 + 1);
    CGSize v67 = (CGSize)*((_OWORD *)v63 + 1);
    CGSize v68 = *(CGSize *)(v61 + 16);
    v103.origin = *(CGPoint *)v61;
    v103.size = v68;
    __int16 v104 = v62;
    if ((v64 & 0xFFF8) == 0xFFF0) {
      return 0;
    }
    v100.origin.double x = v66;
    LODWORD(v100.origin.y) = v65;
    v100.size = v67;
    __int16 v101 = v64;
    if (!_s6Vision15FaceObservationV10GazeResultV2eeoiySbAE_AEtFZ_0((uint64_t)&v103, (uint64_t)&v100)) {
      return 0;
    }
  }
  uint64_t v69 = v17[18];
  unint64_t v70 = *(unsigned int *)(a1 + v69) | ((unint64_t)*(unsigned __int16 *)(a1 + v69 + 4) << 32);
  unint64_t v71 = *(unsigned int *)((char *)a2 + v69) | ((unint64_t)*(unsigned __int16 *)((char *)a2 + v69 + 4) << 32);
  if ((v70 & 0xFFF800000000) == 0xFFF000000000)
  {
    if ((v71 & 0xFFF800000000) != 0xFFF000000000) {
      return 0;
    }
  }
  else
  {
    LODWORD(v103.origin.x) = v70;
    WORD2(v103.origin.x) = WORD2(v70);
    if ((v71 & 0xFFF800000000) == 0xFFF000000000) {
      return 0;
    }
    LODWORD(v100.origin.x) = v71;
    WORD2(v100.origin.x) = WORD2(v71);
    if (!sub_1A3DF8DB8((uint64_t)&v103, (uint64_t)&v100)) {
      return 0;
    }
  }
  uint64_t v72 = v17[19];
  CGFloat v74 = *(double *)(a1 + v72);
  CGFloat v73 = *(double *)(a1 + v72 + 8);
  CGFloat v75 = *(double *)(a1 + v72 + 16);
  CGFloat v89 = *(double *)(a1 + v72 + 24);
  int v76 = *(unsigned __int16 *)(a1 + v72 + 32) | (*(unsigned __int8 *)(a1 + v72 + 34) << 16);
  uint64_t v77 = (char *)a2 + v72;
  CGFloat v78 = *(double *)v77;
  CGFloat v79 = *((double *)v77 + 1);
  CGFloat v80 = *((double *)v77 + 2);
  uint64_t v81 = *((void *)v77 + 3);
  int v82 = *((unsigned __int16 *)v77 + 16) | (v77[34] << 16);
  if ((v76 & 0xFFF8) == 0xFFF0)
  {
    if ((*((_WORD *)v77 + 16) & 0xFFF8) == 0xFFF0) {
      goto LABEL_59;
    }
    goto LABEL_57;
  }
  v103.origin.double x = v74;
  v103.origin.double y = v73;
  v103.size.double width = v75;
  v103.size.double height = v89;
  __int16 v104 = v76;
  char v105 = BYTE2(v76);
  if ((v82 & 0xFFF8) == 0xFFF0)
  {
    sub_1A3C7D1A8(*(uint64_t *)&v74, *(unint64_t *)&v73);
    sub_1A3C7D1A8(*(uint64_t *)&v74, *(unint64_t *)&v73);
    sub_1A3C7D218(*(uint64_t *)&v74, *(unint64_t *)&v73);
LABEL_57:
    sub_1A3C7D190(*(uint64_t *)&v78, *(unint64_t *)&v79, *(uint64_t *)&v80, v81, v82);
    sub_1A3C7D200(*(uint64_t *)&v74, *(unint64_t *)&v73, *(uint64_t *)&v75, *(uint64_t *)&v89, v76);
    sub_1A3C7D200(*(uint64_t *)&v78, *(unint64_t *)&v79, *(uint64_t *)&v80, v81, v82);
    return 0;
  }
  v100.origin.double x = v78;
  v100.origin.double y = v79;
  v100.size.double width = v80;
  LOBYTE(v100.size.height) = v81 & 1;
  HIDWORD(v100.size.height) = HIDWORD(v81);
  __int16 v101 = v82;
  char v102 = BYTE2(v82) & 1;
  uint64_t v83 = *(void *)&v75;
  sub_1A3C7D190(*(uint64_t *)&v74, *(unint64_t *)&v73, *(uint64_t *)&v75, *(uint64_t *)&v89, v76);
  sub_1A3C7D1A8(*(uint64_t *)&v74, *(unint64_t *)&v73);
  char v84 = _s6Vision15FaceObservationV0B5PrintV2eeoiySbAE_AEtFZ_0((uint64_t)&v103, (uint64_t)&v100);
  sub_1A3C7D218(*(uint64_t *)&v103.origin.x, *(unint64_t *)&v103.origin.y);
  sub_1A3C7D200(*(uint64_t *)&v74, *(unint64_t *)&v73, v83, *(uint64_t *)&v89, v76);
  if (v84)
  {
LABEL_59:
    uint64_t v85 = v17[20];
    CGSize v86 = *(CGSize *)(a1 + v85 + 16);
    v103.origin = *(CGPoint *)(a1 + v85);
    v103.size = v86;
    char v87 = (char *)a2 + v85;
    CGSize v88 = (CGSize)*((_OWORD *)v87 + 1);
    v100.origin = *(CGPoint *)v87;
    v100.size = v88;
    return static NormalizedRect.== infix(_:_:)(&v103, &v100);
  }
  return 0;
}

uint64_t sub_1A3DF9738(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3DF9780()
{
  unint64_t result = qword_1E9634258;
  if (!qword_1E9634258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9634258);
  }
  return result;
}

unint64_t sub_1A3DF97D4()
{
  unint64_t result = qword_1E9634260;
  if (!qword_1E9634260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9634260);
  }
  return result;
}

uint64_t sub_1A3DF9828(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F0940);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3DF988C()
{
  unint64_t result = qword_1E9634268;
  if (!qword_1E9634268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9634268);
  }
  return result;
}

unint64_t sub_1A3DF98E0()
{
  unint64_t result = qword_1E9634270;
  if (!qword_1E9634270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9634270);
  }
  return result;
}

unint64_t sub_1A3DF9934()
{
  unint64_t result = qword_1E9634278;
  if (!qword_1E9634278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9634278);
  }
  return result;
}

unint64_t sub_1A3DF9988()
{
  unint64_t result = qword_1E9634280;
  if (!qword_1E9634280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9634280);
  }
  return result;
}

uint64_t sub_1A3DF99DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B27F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1A3DF9AC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B68);
  CGFloat v3 = (void *)sub_1A4096C2C();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1A3DF8090(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    CGFloat v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3DF8090(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3DF9BC8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1A3DF81B0(0, v4, 0);
    uint64_t v5 = v23;
    uint64_t v13 = (long long *)(a1 + 32);
    long long v14 = *(_OWORD *)(a2 + 48);
    long long v24 = *(_OWORD *)(a2 + 32);
    long long v25 = v14;
    do
    {
      long long v15 = *v13;
      v22[0] = v24;
      v22[1] = v25;
      v22[2] = v15;
      double v16 = a3;
      double v17 = a4;
      CGPoint v18 = NormalizedPoint.toImageCoordinates(from:imageSize:origin:)(*(Vision::NormalizedRect *)(&v10 - 3), (CGSize)__PAIR128__(v12, v11), (Vision::CoordinateOrigin)v22);
      uint64_t v23 = v5;
      unint64_t v20 = *(void *)(v5 + 16);
      unint64_t v19 = *(void *)(v5 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1A3DF81B0((char *)(v19 > 1), v20 + 1, 1);
        uint64_t v5 = v23;
      }
      *(void *)(v5 + 16) = v20 + 1;
      *(CGPoint *)(v5 + 16 * v20 + 32) = v18;
      ++v13;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_1A3DF9CF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A3DF9D24(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A3DF9D5C()
{
  unint64_t result = qword_1E9634288;
  if (!qword_1E9634288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9634288);
  }
  return result;
}

unint64_t sub_1A3DF9DB0()
{
  unint64_t result = qword_1E95F09A8;
  if (!qword_1E95F09A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F09A8);
  }
  return result;
}

unint64_t sub_1A3DF9E04()
{
  unint64_t result = qword_1E95F09B8;
  if (!qword_1E95F09B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F09B8);
  }
  return result;
}

unint64_t sub_1A3DF9E58()
{
  unint64_t result = qword_1E9634290;
  if (!qword_1E9634290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9634290);
  }
  return result;
}

unint64_t sub_1A3DF9EAC()
{
  unint64_t result = qword_1E95F09D0;
  if (!qword_1E95F09D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F09D0);
  }
  return result;
}

unint64_t sub_1A3DF9F00()
{
  unint64_t result = qword_1E95F09E8;
  if (!qword_1E95F09E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F09E8);
  }
  return result;
}

uint64_t sub_1A3DF9F54(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A3DF9F98()
{
  unint64_t result = qword_1E95F0A08;
  if (!qword_1E95F0A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0A08);
  }
  return result;
}

uint64_t sub_1A3DF9FEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95ED090);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3DFA034(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3DFA0A0()
{
  unint64_t result = qword_1E95F0A20;
  if (!qword_1E95F0A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0A20);
  }
  return result;
}

uint64_t sub_1A3DFA0F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B27F0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A40B8590 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A40B85B0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B85D0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A3DFA290(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61506465736F6C63 && a2 == 0xEA00000000006874;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6E6F63736964 && a2 == 0xEC00000064657463 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x687461506E65706FLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A3DFA40C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001A40B85F0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E696F70 && a2 == 0xE600000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A40B85B0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B27F0 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E756F4265636166 && a2 == 0xEF786F42676E6964)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A3DFA634(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A40B8610 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B72616D646E616CLL && a2 == 0xE900000000000073 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1819045746 && a2 == 0xE400000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6863746970 && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7823737 && a2 == 0xE300000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x5165727574706163 && a2 == 0xEE007974696C6175 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A40B3080)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unint64_t sub_1A3DFAA10()
{
  unint64_t result = qword_1E9634298;
  if (!qword_1E9634298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9634298);
  }
  return result;
}

unint64_t sub_1A3DFAA64()
{
  unint64_t result = qword_1E96342A0;
  if (!qword_1E96342A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96342A0);
  }
  return result;
}

unint64_t sub_1A3DFAAB8()
{
  unint64_t result = qword_1E96342A8;
  if (!qword_1E96342A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96342A8);
  }
  return result;
}

unint64_t sub_1A3DFAB0C()
{
  unint64_t result = qword_1E96342B0;
  if (!qword_1E96342B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96342B0);
  }
  return result;
}

unint64_t sub_1A3DFAB60()
{
  unint64_t result = qword_1E95F0A60;
  if (!qword_1E95F0A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0A60);
  }
  return result;
}

unint64_t sub_1A3DFABB4()
{
  unint64_t result = qword_1E95F0A70;
  if (!qword_1E95F0A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0A70);
  }
  return result;
}

unint64_t sub_1A3DFAC08()
{
  unint64_t result = qword_1E96342B8;
  if (!qword_1E96342B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96342B8);
  }
  return result;
}

unint64_t sub_1A3DFAC5C()
{
  unint64_t result = qword_1E96342C0;
  if (!qword_1E96342C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96342C0);
  }
  return result;
}

unint64_t sub_1A3DFACB0()
{
  unint64_t result = qword_1E95F0A90;
  if (!qword_1E95F0A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0A90);
  }
  return result;
}

unint64_t sub_1A3DFAD04()
{
  unint64_t result = qword_1E95F0AA8;
  if (!qword_1E95F0AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0AA8);
  }
  return result;
}

unint64_t sub_1A3DFAD58()
{
  unint64_t result = qword_1E96342C8;
  if (!qword_1E96342C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96342C8);
  }
  return result;
}

unint64_t sub_1A3DFADAC()
{
  unint64_t result = qword_1E96342D0;
  if (!qword_1E96342D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96342D0);
  }
  return result;
}

unint64_t sub_1A3DFAE00()
{
  unint64_t result = qword_1E95F0AD0;
  if (!qword_1E95F0AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0AD0);
  }
  return result;
}

unint64_t sub_1A3DFAE54()
{
  unint64_t result = qword_1E95F0AE0;
  if (!qword_1E95F0AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0AE0);
  }
  return result;
}

unint64_t sub_1A3DFAEA8()
{
  unint64_t result = qword_1E96342D8[0];
  if (!qword_1E96342D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96342D8);
  }
  return result;
}

uint64_t sub_1A3DFAEFC(void *a1)
{
  a1[1] = sub_1A3DF9738((unint64_t *)&qword_1E95ED530, (void (*)(uint64_t))type metadata accessor for FaceObservation);
  a1[2] = sub_1A3DF9738(&qword_1E95F0AF8, (void (*)(uint64_t))type metadata accessor for FaceObservation);
  a1[3] = sub_1A3DF9738(&qword_1E95F0B00, (void (*)(uint64_t))type metadata accessor for FaceObservation);
  uint64_t result = sub_1A3DF9738(&qword_1E95ED678, (void (*)(uint64_t))type metadata accessor for FaceObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3DFAFD0()
{
  return sub_1A3DF9738(&qword_1E95ED1A0, (void (*)(uint64_t))type metadata accessor for FaceObservation);
}

unint64_t sub_1A3DFB01C()
{
  unint64_t result = qword_1E95F0B08;
  if (!qword_1E95F0B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B08);
  }
  return result;
}

unint64_t sub_1A3DFB074()
{
  unint64_t result = qword_1E95F0B10;
  if (!qword_1E95F0B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B10);
  }
  return result;
}

unint64_t sub_1A3DFB0CC()
{
  unint64_t result = qword_1E95F0B18;
  if (!qword_1E95F0B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B18);
  }
  return result;
}

unint64_t sub_1A3DFB124()
{
  unint64_t result = qword_1E95F0B20;
  if (!qword_1E95F0B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B20);
  }
  return result;
}

uint64_t sub_1A3DFB178(uint64_t a1)
{
  uint64_t result = sub_1A3DF9738(&qword_1E95F09F0, (void (*)(uint64_t))type metadata accessor for FaceObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3DFB1D4()
{
  unint64_t result = qword_1E95F0B28;
  if (!qword_1E95F0B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B28);
  }
  return result;
}

unint64_t sub_1A3DFB22C()
{
  unint64_t result = qword_1E95F0B30;
  if (!qword_1E95F0B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B30);
  }
  return result;
}

unint64_t sub_1A3DFB28C()
{
  unint64_t result = qword_1E95F0B38;
  if (!qword_1E95F0B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B38);
  }
  return result;
}

unint64_t sub_1A3DFB2E4()
{
  unint64_t result = qword_1E95F0B40;
  if (!qword_1E95F0B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B40);
  }
  return result;
}

unint64_t sub_1A3DFB33C()
{
  unint64_t result = qword_1E95F0B48;
  if (!qword_1E95F0B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B48);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FaceObservation(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v8 = a2[2];
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(void *)(a1 + 48) = a2[6];
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
    long long v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v15(a1 + a3[6], (uint64_t)a2 + a3[6], v14);
    v15(a1 + a3[7], (uint64_t)a2 + a3[7], v14);
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = a1 + v16;
    uint64_t v19 = (uint64_t)a2 + v16;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    *(_WORD *)(v18 + 4) = *(_WORD *)(v19 + 4);
    unint64_t v20 = (_OWORD *)(a1 + v17);
    uint64_t v21 = (_OWORD *)((char *)a2 + v17);
    long long v22 = v21[1];
    *unint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[10];
    uint64_t v24 = a3[11];
    long long v25 = (_OWORD *)(a1 + v23);
    CGSize v26 = (_OWORD *)((char *)a2 + v23);
    long long v27 = v26[1];
    *long long v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a1 + v24;
    uint64_t v29 = (uint64_t)a2 + v24;
    uint64_t v30 = sub_1A4095C7C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = a3[13];
    *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)((char *)a2 + a3[12]);
    uint64_t v32 = a1 + v31;
    uint64_t v33 = (uint64_t)a2 + v31;
    long long v34 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v34;
    *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
    *(unsigned char *)(v32 + 48) = *(unsigned char *)(v33 + 48);
    uint64_t v35 = a3[15];
    *(_WORD *)(a1 + a3[14]) = *(_WORD *)((char *)a2 + a3[14]);
    CGFloat v36 = (void *)(a1 + v35);
    CGSize v37 = (uint64_t *)((char *)a2 + v35);
    *CGFloat v36 = *v37;
    *(void *)((char *)v36 + 6) = *(void *)((char *)v37 + 6);
    uint64_t v38 = a3[16];
    uint64_t v39 = a3[17];
    CGFloat v40 = (void *)(a1 + v38);
    CGFloat v41 = (uint64_t *)((char *)a2 + v38);
    void *v40 = *v41;
    *(void *)((char *)v40 + 6) = *(void *)((char *)v41 + 6);
    uint64_t v42 = a1 + v39;
    uint64_t v43 = (uint64_t)a2 + v39;
    long long v44 = *(_OWORD *)(v43 + 16);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *(_OWORD *)(v42 + 16) = v44;
    *(_WORD *)(v42 + 32) = *(_WORD *)(v43 + 32);
    uint64_t v45 = a3[18];
    uint64_t v46 = a3[19];
    uint64_t v47 = a1 + v45;
    uint64_t v48 = (uint64_t)a2 + v45;
    *(_WORD *)(v47 + 4) = *(_WORD *)(v48 + 4);
    uint64_t v49 = a1 + v46;
    unint64_t v50 = (uint64_t *)((char *)a2 + v46);
    *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
    if ((*(_WORD *)((unsigned char *)a2 + v46 + 32) & 0xFFF8) == 0xFFF0)
    {
      long long v51 = *((_OWORD *)v50 + 1);
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      *(_OWORD *)(v49 + 16) = v51;
      *(_DWORD *)(v49 + 31) = *(_DWORD *)((char *)v50 + 31);
    }
    else
    {
      uint64_t v52 = *v50;
      unint64_t v53 = v50[1];
      sub_1A3C7D1A8(*v50, v53);
      *(void *)uint64_t v49 = v52;
      *(void *)(v49 + 8) = v53;
      *(void *)(v49 + 16) = v50[2];
      *(unsigned char *)(v49 + 24) = *((unsigned char *)v50 + 24);
      *(_DWORD *)(v49 + 28) = *((_DWORD *)v50 + 7);
      *(_WORD *)(v49 + 32) = *((_WORD *)v50 + 16);
      *(unsigned char *)(v49 + 34) = *((unsigned char *)v50 + 34);
    }
    uint64_t v54 = a3[20];
    unint64_t v55 = (_OWORD *)(a1 + v54);
    unint64_t v56 = (_OWORD *)((char *)a2 + v54);
    long long v57 = v56[1];
    *unint64_t v55 = *v56;
    v55[1] = v57;
  }
  return a1;
}

uint64_t destroy for FaceObservation(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  char v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  v6(a1 + a2[7], v5);
  uint64_t v7 = a1 + a2[11];
  uint64_t v8 = sub_1A4095C7C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v10 = a1 + a2[19];
  if ((*(_WORD *)(v10 + 32) & 0xFFF8) != 0xFFF0)
  {
    uint64_t v11 = *(void *)v10;
    unint64_t v12 = *(void *)(v10 + 8);
    return sub_1A3C7D218(v11, v12);
  }
  return result;
}

uint64_t initializeWithCopy for FaceObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  v13(a1 + a3[6], a2 + a3[6], v12);
  v13(a1 + a3[7], a2 + a3[7], v12);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_WORD *)(v16 + 4) = *(_WORD *)(v17 + 4);
  uint64_t v18 = (_OWORD *)(a1 + v15);
  uint64_t v19 = (_OWORD *)(a2 + v15);
  long long v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = a3[11];
  uint64_t v23 = (_OWORD *)(a1 + v21);
  uint64_t v24 = (_OWORD *)(a2 + v21);
  long long v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = a1 + v22;
  uint64_t v27 = a2 + v22;
  uint64_t v28 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  uint64_t v29 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  long long v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(unsigned char *)(v30 + 48) = *(unsigned char *)(v31 + 48);
  uint64_t v33 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  long long v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  void *v34 = *v35;
  *(void *)((char *)v34 + 6) = *(void *)((char *)v35 + 6);
  uint64_t v36 = a3[16];
  uint64_t v37 = a3[17];
  uint64_t v38 = (void *)(a1 + v36);
  uint64_t v39 = (void *)(a2 + v36);
  *uint64_t v38 = *v39;
  *(void *)((char *)v38 + 6) = *(void *)((char *)v39 + 6);
  uint64_t v40 = a1 + v37;
  uint64_t v41 = a2 + v37;
  long long v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  *(_WORD *)(v40 + 32) = *(_WORD *)(v41 + 32);
  uint64_t v43 = a3[18];
  uint64_t v44 = a3[19];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(_WORD *)(v45 + 4) = *(_WORD *)(v46 + 4);
  uint64_t v47 = a1 + v44;
  uint64_t v48 = (uint64_t *)(a2 + v44);
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  if ((*(_WORD *)(a2 + v44 + 32) & 0xFFF8) == 0xFFF0)
  {
    long long v49 = *((_OWORD *)v48 + 1);
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v49;
    *(_DWORD *)(v47 + 31) = *(_DWORD *)((char *)v48 + 31);
  }
  else
  {
    uint64_t v50 = *v48;
    unint64_t v51 = v48[1];
    sub_1A3C7D1A8(*v48, v51);
    *(void *)uint64_t v47 = v50;
    *(void *)(v47 + 8) = v51;
    *(void *)(v47 + 16) = v48[2];
    *(unsigned char *)(v47 + 24) = *((unsigned char *)v48 + 24);
    *(_DWORD *)(v47 + 28) = *((_DWORD *)v48 + 7);
    *(_WORD *)(v47 + 32) = *((_WORD *)v48 + 16);
    *(unsigned char *)(v47 + 34) = *((unsigned char *)v48 + 34);
  }
  uint64_t v52 = a3[20];
  unint64_t v53 = (_OWORD *)(a1 + v52);
  uint64_t v54 = (_OWORD *)(a2 + v52);
  long long v55 = v54[1];
  *unint64_t v53 = *v54;
  v53[1] = v55;
  return a1;
}

uint64_t assignWithCopy for FaceObservation(uint64_t a1, long long *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
    }
    else
    {
      sub_1A3D0E9D8(a1);
      long long v9 = a2[1];
      long long v8 = a2[2];
      long long v10 = *a2;
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)a1 = v10;
    }
  }
  else if (v6)
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    long long v7 = *(long long *)((char *)a2 + 24);
    *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
    *(_OWORD *)(a1 + 24) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *a2;
    long long v12 = a2[1];
    long long v13 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v12;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)a1 = v11;
  }
  uint64_t v14 = a3[5];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t)a2 + v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  v18(a1 + a3[6], (uint64_t)a2 + a3[6], v17);
  v18(a1 + a3[7], (uint64_t)a2 + a3[7], v17);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (int *)((char *)a2 + v19);
  int v22 = *v21;
  *(_WORD *)(v20 + 4) = *((_WORD *)v21 + 2);
  *(_DWORD *)uint64_t v20 = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  long long v25 = (void *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  void v24[2] = v25[2];
  v24[3] = v25[3];
  uint64_t v26 = a3[10];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  void v27[2] = v28[2];
  v27[3] = v28[3];
  uint64_t v29 = a3[11];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (uint64_t)a2 + v29;
  uint64_t v32 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)((char *)a2 + a3[12]);
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t)a2 + v33;
  char v36 = *(unsigned char *)(v35 + 48);
  long long v38 = *(_OWORD *)(v35 + 16);
  long long v37 = *(_OWORD *)(v35 + 32);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v38;
  *(_OWORD *)(v34 + 32) = v37;
  *(unsigned char *)(v34 + 48) = v36;
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)((char *)a2 + a3[14]);
  uint64_t v39 = a3[15];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)((char *)a2 + v39);
  uint64_t v42 = *(void *)((char *)v41 + 6);
  void *v40 = *v41;
  *(void *)((char *)v40 + 6) = v42;
  uint64_t v43 = a3[16];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)((char *)a2 + v43);
  uint64_t v46 = *(void *)((char *)v45 + 6);
  *uint64_t v44 = *v45;
  *(void *)((char *)v44 + 6) = v46;
  uint64_t v47 = a3[17];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = (uint64_t)a2 + v47;
  LOWORD(v46) = *(_WORD *)(v49 + 32);
  long long v50 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v50;
  *(_WORD *)(v48 + 32) = v46;
  uint64_t v51 = a3[18];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = (uint64_t)a2 + v51;
  LODWORD(v46) = *(_DWORD *)v53;
  *(_WORD *)(v52 + 4) = *(_WORD *)(v53 + 4);
  *(_DWORD *)uint64_t v52 = v46;
  uint64_t v54 = a3[19];
  uint64_t v55 = a1 + v54;
  unint64_t v56 = (uint64_t *)((char *)a2 + v54);
  LODWORD(v46) = *(_WORD *)(a1 + v54 + 32) & 0xFFF8;
  int v57 = *(_WORD *)((unsigned char *)a2 + v54 + 32) & 0xFFF8;
  if (v46 != 65520)
  {
    if (v57 == 65520)
    {
      sub_1A3D0EA2C(v55);
      int v60 = *(_DWORD *)((char *)v56 + 31);
      long long v61 = *((_OWORD *)v56 + 1);
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      *(_OWORD *)(v55 + 16) = v61;
      *(_DWORD *)(v55 + 31) = v60;
      goto LABEL_16;
    }
    uint64_t v64 = *v56;
    unint64_t v65 = v56[1];
    sub_1A3C7D1A8(*v56, v65);
    uint64_t v66 = *(void *)v55;
    unint64_t v67 = *(void *)(v55 + 8);
    *(void *)uint64_t v55 = v64;
    *(void *)(v55 + 8) = v65;
    sub_1A3C7D218(v66, v67);
    *(void *)(v55 + 16) = v56[2];
    *(unsigned char *)(v55 + 24) = *((unsigned char *)v56 + 24);
    *(_DWORD *)(v55 + 28) = *((_DWORD *)v56 + 7);
LABEL_15:
    *(_WORD *)(v55 + 32) = *((_WORD *)v56 + 16);
    *(unsigned char *)(v55 + 34) = *((unsigned char *)v56 + 34);
    goto LABEL_16;
  }
  if (v57 != 65520)
  {
    uint64_t v62 = *v56;
    unint64_t v63 = v56[1];
    sub_1A3C7D1A8(*v56, v63);
    *(void *)uint64_t v55 = v62;
    *(void *)(v55 + 8) = v63;
    *(void *)(v55 + 16) = v56[2];
    *(unsigned char *)(v55 + 24) = *((unsigned char *)v56 + 24);
    *(_DWORD *)(v55 + 28) = *((_DWORD *)v56 + 7);
    goto LABEL_15;
  }
  long long v58 = *(_OWORD *)v56;
  long long v59 = *((_OWORD *)v56 + 1);
  *(_DWORD *)(v55 + 31) = *(_DWORD *)((char *)v56 + 31);
  *(_OWORD *)uint64_t v55 = v58;
  *(_OWORD *)(v55 + 16) = v59;
LABEL_16:
  uint64_t v68 = a3[20];
  uint64_t v69 = (void *)(a1 + v68);
  unint64_t v70 = (void *)((char *)a2 + v68);
  *uint64_t v69 = *v70;
  v69[1] = v70[1];
  v69[2] = v70[2];
  v69[3] = v70[3];
  return a1;
}

uint64_t initializeWithTake for FaceObservation(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  long long v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(_WORD *)(v14 + 4) = *(_WORD *)(v15 + 4);
  uint64_t v16 = (_OWORD *)(a1 + v13);
  uint64_t v17 = (_OWORD *)(a2 + v13);
  long long v18 = v17[1];
  _OWORD *v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v21 = (_OWORD *)(a1 + v19);
  int v22 = (_OWORD *)(a2 + v19);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  uint64_t v26 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  long long v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  *(unsigned char *)(v28 + 48) = *(unsigned char *)(v29 + 48);
  uint64_t v31 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *uint64_t v32 = *v33;
  *(void *)((char *)v32 + 6) = *(void *)((char *)v33 + 6);
  uint64_t v34 = a3[16];
  uint64_t v35 = a3[17];
  char v36 = (void *)(a1 + v34);
  long long v37 = (void *)(a2 + v34);
  *char v36 = *v37;
  *(void *)((char *)v36 + 6) = *(void *)((char *)v37 + 6);
  uint64_t v38 = a1 + v35;
  uint64_t v39 = a2 + v35;
  long long v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_WORD *)(v38 + 32) = *(_WORD *)(v39 + 32);
  uint64_t v41 = a3[18];
  uint64_t v42 = a3[19];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(_WORD *)(v43 + 4) = *(_WORD *)(v44 + 4);
  *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
  uint64_t v45 = a1 + v42;
  uint64_t v46 = (long long *)(a2 + v42);
  long long v47 = *v46;
  long long v48 = v46[1];
  *(_DWORD *)(v45 + 31) = *(_DWORD *)((char *)v46 + 31);
  *(_OWORD *)uint64_t v45 = v47;
  *(_OWORD *)(v45 + 16) = v48;
  uint64_t v49 = a3[20];
  long long v50 = (_OWORD *)(a1 + v49);
  uint64_t v51 = (_OWORD *)(a2 + v49);
  long long v52 = v51[1];
  *long long v50 = *v51;
  v50[1] = v52;
  return a1;
}

uint64_t assignWithTake for FaceObservation(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v6 = *(void *)(a2 + 8);
    if (v6)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      goto LABEL_6;
    }
    sub_1A3D0E9D8(a1);
  }
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
LABEL_6:
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(a1 + a3[6], a2 + a3[6], v11);
  v12(a1 + a3[7], a2 + a3[7], v11);
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_WORD *)(v15 + 4) = *(_WORD *)(v16 + 4);
  uint64_t v17 = (_OWORD *)(a1 + v14);
  long long v18 = (_OWORD *)(a2 + v14);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  int v22 = (_OWORD *)(a1 + v20);
  long long v23 = (_OWORD *)(a2 + v20);
  long long v24 = v23[1];
  _OWORD *v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a1 + v21;
  uint64_t v26 = a2 + v21;
  uint64_t v27 = sub_1A4095C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  long long v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
  *(unsigned char *)(v29 + 48) = *(unsigned char *)(v30 + 48);
  uint64_t v32 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  *uint64_t v33 = *v34;
  *(void *)((char *)v33 + 6) = *(void *)((char *)v34 + 6);
  uint64_t v35 = a3[16];
  uint64_t v36 = a3[17];
  long long v37 = (void *)(a1 + v35);
  uint64_t v38 = (void *)(a2 + v35);
  *long long v37 = *v38;
  *(void *)((char *)v37 + 6) = *(void *)((char *)v38 + 6);
  uint64_t v39 = a1 + v36;
  uint64_t v40 = a2 + v36;
  long long v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(_WORD *)(v39 + 32) = *(_WORD *)(v40 + 32);
  uint64_t v42 = a3[18];
  uint64_t v43 = a3[19];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
  uint64_t v46 = a1 + v43;
  uint64_t v47 = a2 + v43;
  *(_WORD *)(v44 + 4) = *(_WORD *)(v45 + 4);
  if ((*(_WORD *)(a1 + v43 + 32) & 0xFFF8) != 0xFFF0)
  {
    if ((*(_WORD *)(v47 + 32) & 0xFFF8) != 0xFFF0)
    {
      uint64_t v49 = *(void *)v46;
      unint64_t v50 = *(void *)(v46 + 8);
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      sub_1A3C7D218(v49, v50);
      *(void *)(v46 + 16) = *(void *)(v47 + 16);
      *(unsigned char *)(v46 + 24) = *(unsigned char *)(v47 + 24);
      *(_DWORD *)(v46 + 28) = *(_DWORD *)(v47 + 28);
      *(_WORD *)(v46 + 32) = *(_WORD *)(v47 + 32);
      *(unsigned char *)(v46 + 34) = *(unsigned char *)(v47 + 34);
      goto LABEL_11;
    }
    sub_1A3D0EA2C(v46);
  }
  long long v48 = *(_OWORD *)(v47 + 16);
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v48;
  *(_DWORD *)(v46 + 31) = *(_DWORD *)(v47 + 31);
LABEL_11:
  uint64_t v51 = a3[20];
  long long v52 = (_OWORD *)(a1 + v51);
  uint64_t v53 = (_OWORD *)(a2 + v51);
  long long v54 = v53[1];
  *long long v52 = *v53;
  v52[1] = v54;
  return a1;
}

uint64_t getEnumTagSinglePayload for FaceObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3DFC3F0);
}

uint64_t sub_1A3DFC3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_1A4095C7C();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 44);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FaceObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3DFC540);
}

uint64_t sub_1A3DFC540(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1A4095C7C();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1A3DFC670()
{
  sub_1A3DFC7A8();
  if (v0 <= 0x3F)
  {
    sub_1A4095C7C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1A3DFC7A8()
{
  if (!qword_1E95F0B50)
  {
    sub_1A3C8C73C(255, (unint64_t *)&qword_1E95F08F8);
    unint64_t v0 = sub_1A4095A1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E95F0B50);
    }
  }
}

uint64_t __swift_memcpy6_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.CaptureQuality()
{
  return &type metadata for FaceObservation.CaptureQuality;
}

uint64_t initializeWithCopy for FaceObservation.Landmarks2D(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FaceObservation.Landmarks2D(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for FaceObservation.Landmarks2D(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D()
{
  return &type metadata for FaceObservation.Landmarks2D;
}

uint64_t _s6Vision15FaceObservationV11Landmarks2DVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FaceObservation.Landmarks2D.Region(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FaceObservation.Landmarks2D.Region(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for FaceObservation.Landmarks2D.Region(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for FaceObservation.Landmarks2D.Region(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceObservation.Landmarks2D.Region(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.Region()
{
  return &type metadata for FaceObservation.Landmarks2D.Region;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.Region.PointsClassification()
{
  return &type metadata for FaceObservation.Landmarks2D.Region.PointsClassification;
}

ValueMetadata *type metadata accessor for FaceObservation.FacePrint()
{
  return &type metadata for FaceObservation.FacePrint;
}

ValueMetadata *type metadata accessor for FaceObservation.FacePrint.ConfidenceScoreType()
{
  return &type metadata for FaceObservation.FacePrint.ConfidenceScoreType;
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FaceObservation.GazeScores(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FaceObservation.GazeScores(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.GazeScores()
{
  return &type metadata for FaceObservation.GazeScores;
}

ValueMetadata *type metadata accessor for FaceObservation.Gaze()
{
  return &type metadata for FaceObservation.Gaze;
}

void *__swift_memcpy14_4(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)((char *)result + 6) = *(uint64_t *)((char *)a2 + 6);
  *uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FaceObservation.GazeScoresResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >> 1 >= 0xFED && *(unsigned char *)(a1 + 14)) {
    return (*(_DWORD *)a1 + 8154);
  }
  int v3 = (*(unsigned __int8 *)(a1 + 12) >> 3) | (32 * *(unsigned __int8 *)(a1 + 13));
  unsigned int v4 = v3 ^ 0x1FFE;
  int v5 = 8190 - v3;
  if (v4 >> 1 >= 0xFED) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceObservation.GazeScoresResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >> 1 > 0xFEC)
  {
    *(_WORD *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 8154;
    if (a3 >> 1 >= 0xFED) {
      *(unsigned char *)(result + 14) = 1;
    }
  }
  else
  {
    if (a3 >> 1 >= 0xFED) {
      *(unsigned char *)(result + 14) = 0;
    }
    if (a2) {
      *(_WORD *)(result + 12) = __PAIR16__((8 * ~a2) >> 24, 8 * ~(_BYTE)a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.GazeScoresResult()
{
  return &type metadata for FaceObservation.GazeScoresResult;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FaceObservation.GazeResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >> 1 >= 0xFED && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 8154);
  }
  int v3 = (*(unsigned __int8 *)(a1 + 32) >> 3) | (32 * *(unsigned __int8 *)(a1 + 33));
  unsigned int v4 = v3 ^ 0x1FFE;
  int v5 = 8190 - v3;
  if (v4 >> 1 >= 0xFED) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceObservation.GazeResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >> 1 > 0xFEC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 8154;
    *(void *)(result + 8) = 0;
    if (a3 >> 1 >= 0xFED) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >> 1 >= 0xFED) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(_WORD *)(result + 32) = __PAIR16__((8 * ~a2) >> 24, 8 * ~(_BYTE)a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.GazeResult()
{
  return &type metadata for FaceObservation.GazeResult;
}

uint64_t _s6Vision15FaceObservationV14CaptureQualityVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >> 1 >= 0xFED && *(unsigned char *)(a1 + 6)) {
    return (*(_DWORD *)a1 + 8154);
  }
  int v3 = (*(unsigned __int8 *)(a1 + 4) >> 3) | (32 * *(unsigned __int8 *)(a1 + 5));
  unsigned int v4 = v3 ^ 0x1FFE;
  int v5 = 8190 - v3;
  if (v4 >> 1 >= 0xFED) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s6Vision15FaceObservationV14CaptureQualityVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >> 1 > 0xFEC)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 8154;
    if (a3 >> 1 >= 0xFED) {
      *(unsigned char *)(result + 6) = 1;
    }
  }
  else
  {
    if (a3 >> 1 >= 0xFED) {
      *(unsigned char *)(result + 6) = 0;
    }
    if (a2) {
      *(_WORD *)(result + 4) = __PAIR16__((8 * ~a2) >> 24, 8 * ~(_BYTE)a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.FaceLivelinessScore()
{
  return &type metadata for FaceObservation.FaceLivelinessScore;
}

ValueMetadata *type metadata accessor for FaceObservation.FaceLivelinessScore.CodingKeys()
{
  return &type metadata for FaceObservation.FaceLivelinessScore.CodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.GazeResult.CodingKeys()
{
  return &type metadata for FaceObservation.GazeResult.CodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.GazeScoresResult.CodingKeys()
{
  return &type metadata for FaceObservation.GazeScoresResult.CodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.Gaze.CodingKeys()
{
  return &type metadata for FaceObservation.Gaze.CodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.GazeScores.CodingKeys()
{
  return &type metadata for FaceObservation.GazeScores.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FaceObservation.FacePrint.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DFD028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.FacePrint.CodingKeys()
{
  return &type metadata for FaceObservation.FacePrint.CodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.FacePrint.ConfidenceScoreType.CodingKeys()
{
  return &type metadata for FaceObservation.FacePrint.ConfidenceScoreType.CodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.FacePrint.ConfidenceScoreType.SoftmaxCodingKeys()
{
  return &type metadata for FaceObservation.FacePrint.ConfidenceScoreType.SoftmaxCodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.FacePrint.ConfidenceScoreType.SigmoidCodingKeys()
{
  return &type metadata for FaceObservation.FacePrint.ConfidenceScoreType.SigmoidCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FaceObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DFD15CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.CodingKeys()
{
  return &type metadata for FaceObservation.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FaceObservation.Landmarks2D.Region.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DFD260);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.Region.CodingKeys()
{
  return &type metadata for FaceObservation.Landmarks2D.Region.CodingKeys;
}

unsigned char *_s6Vision15FaceObservationV11Landmarks2DV6RegionV20PointsClassificationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DFD364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.Region.PointsClassification.CodingKeys()
{
  return &type metadata for FaceObservation.Landmarks2D.Region.PointsClassification.CodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.Region.PointsClassification.ClosedPathCodingKeys()
{
  return &type metadata for FaceObservation.Landmarks2D.Region.PointsClassification.ClosedPathCodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.Region.PointsClassification.DisconnectedCodingKeys()
{
  return &type metadata for FaceObservation.Landmarks2D.Region.PointsClassification.DisconnectedCodingKeys;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.Region.PointsClassification.OpenPathCodingKeys()
{
  return &type metadata for FaceObservation.Landmarks2D.Region.PointsClassification.OpenPathCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FaceObservation.Landmarks2D.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DFD498);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.CodingKeys()
{
  return &type metadata for FaceObservation.Landmarks2D.CodingKeys;
}

unsigned char *_s6Vision15FaceObservationV9FacePrintV19ConfidenceScoreTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DFD59CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.CaptureQuality.CodingKeys()
{
  return &type metadata for FaceObservation.CaptureQuality.CodingKeys;
}

unint64_t sub_1A3DFD5D8()
{
  unint64_t result = qword_1E9636170[0];
  if (!qword_1E9636170[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9636170);
  }
  return result;
}

unint64_t sub_1A3DFD630()
{
  unint64_t result = qword_1E9636380[0];
  if (!qword_1E9636380[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9636380);
  }
  return result;
}

unint64_t sub_1A3DFD688()
{
  unint64_t result = qword_1E9636890[0];
  if (!qword_1E9636890[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9636890);
  }
  return result;
}

unint64_t sub_1A3DFD6E0()
{
  unint64_t result = qword_1E9636AA0[0];
  if (!qword_1E9636AA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9636AA0);
  }
  return result;
}

unint64_t sub_1A3DFD738()
{
  unint64_t result = qword_1E9636CB0[0];
  if (!qword_1E9636CB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9636CB0);
  }
  return result;
}

unint64_t sub_1A3DFD790()
{
  unint64_t result = qword_1E96370C0[0];
  if (!qword_1E96370C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96370C0);
  }
  return result;
}

unint64_t sub_1A3DFD7E8()
{
  unint64_t result = qword_1E96372D0[0];
  if (!qword_1E96372D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96372D0);
  }
  return result;
}

unint64_t sub_1A3DFD840()
{
  unint64_t result = qword_1E96374E0[0];
  if (!qword_1E96374E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96374E0);
  }
  return result;
}

unint64_t sub_1A3DFD898()
{
  unint64_t result = qword_1E96376F0[0];
  if (!qword_1E96376F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96376F0);
  }
  return result;
}

unint64_t sub_1A3DFD8F0()
{
  unint64_t result = qword_1E9637900[0];
  if (!qword_1E9637900[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9637900);
  }
  return result;
}

unint64_t sub_1A3DFD948()
{
  unint64_t result = qword_1E9637B10[0];
  if (!qword_1E9637B10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9637B10);
  }
  return result;
}

unint64_t sub_1A3DFD9A0()
{
  unint64_t result = qword_1E9637D20[0];
  if (!qword_1E9637D20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9637D20);
  }
  return result;
}

unint64_t sub_1A3DFD9F8()
{
  unint64_t result = qword_1E9637E30;
  if (!qword_1E9637E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9637E30);
  }
  return result;
}

unint64_t sub_1A3DFDA50()
{
  unint64_t result = qword_1E9637E38[0];
  if (!qword_1E9637E38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9637E38);
  }
  return result;
}

unint64_t sub_1A3DFDAA8()
{
  unint64_t result = qword_1E9637EC0;
  if (!qword_1E9637EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9637EC0);
  }
  return result;
}

unint64_t sub_1A3DFDB00()
{
  unint64_t result = qword_1E9637EC8[0];
  if (!qword_1E9637EC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9637EC8);
  }
  return result;
}

unint64_t sub_1A3DFDB58()
{
  unint64_t result = qword_1E9637F50;
  if (!qword_1E9637F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9637F50);
  }
  return result;
}

unint64_t sub_1A3DFDBB0()
{
  unint64_t result = qword_1E9637F58[0];
  if (!qword_1E9637F58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9637F58);
  }
  return result;
}

unint64_t sub_1A3DFDC08()
{
  unint64_t result = qword_1E9637FE0;
  if (!qword_1E9637FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9637FE0);
  }
  return result;
}

unint64_t sub_1A3DFDC60()
{
  unint64_t result = qword_1E9637FE8[0];
  if (!qword_1E9637FE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9637FE8);
  }
  return result;
}

unint64_t sub_1A3DFDCB8()
{
  unint64_t result = qword_1E9638070;
  if (!qword_1E9638070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638070);
  }
  return result;
}

unint64_t sub_1A3DFDD10()
{
  unint64_t result = qword_1E9638078;
  if (!qword_1E9638078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638078);
  }
  return result;
}

unint64_t sub_1A3DFDD68()
{
  unint64_t result = qword_1E9638100;
  if (!qword_1E9638100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638100);
  }
  return result;
}

unint64_t sub_1A3DFDDC0()
{
  unint64_t result = qword_1E9638108[0];
  if (!qword_1E9638108[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638108);
  }
  return result;
}

unint64_t sub_1A3DFDE18()
{
  unint64_t result = qword_1E9638190;
  if (!qword_1E9638190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638190);
  }
  return result;
}

unint64_t sub_1A3DFDE70()
{
  unint64_t result = qword_1E9638198[0];
  if (!qword_1E9638198[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638198);
  }
  return result;
}

unint64_t sub_1A3DFDEC8()
{
  unint64_t result = qword_1E9638220;
  if (!qword_1E9638220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638220);
  }
  return result;
}

unint64_t sub_1A3DFDF20()
{
  unint64_t result = qword_1E9638228[0];
  if (!qword_1E9638228[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638228);
  }
  return result;
}

unint64_t sub_1A3DFDF78()
{
  unint64_t result = qword_1E96382B0;
  if (!qword_1E96382B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96382B0);
  }
  return result;
}

unint64_t sub_1A3DFDFD0()
{
  unint64_t result = qword_1E96382B8[0];
  if (!qword_1E96382B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96382B8);
  }
  return result;
}

unint64_t sub_1A3DFE028()
{
  unint64_t result = qword_1E9638340;
  if (!qword_1E9638340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638340);
  }
  return result;
}

unint64_t sub_1A3DFE080()
{
  unint64_t result = qword_1E9638348[0];
  if (!qword_1E9638348[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638348);
  }
  return result;
}

unint64_t sub_1A3DFE0D8()
{
  unint64_t result = qword_1E96383D0;
  if (!qword_1E96383D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96383D0);
  }
  return result;
}

unint64_t sub_1A3DFE130()
{
  unint64_t result = qword_1E96383D8[0];
  if (!qword_1E96383D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96383D8);
  }
  return result;
}

unint64_t sub_1A3DFE188()
{
  unint64_t result = qword_1E9638460;
  if (!qword_1E9638460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638460);
  }
  return result;
}

unint64_t sub_1A3DFE1E0()
{
  unint64_t result = qword_1E9638468[0];
  if (!qword_1E9638468[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638468);
  }
  return result;
}

unint64_t sub_1A3DFE238()
{
  unint64_t result = qword_1E96384F0;
  if (!qword_1E96384F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96384F0);
  }
  return result;
}

unint64_t sub_1A3DFE290()
{
  unint64_t result = qword_1E96384F8[0];
  if (!qword_1E96384F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96384F8);
  }
  return result;
}

unint64_t sub_1A3DFE2E8()
{
  unint64_t result = qword_1E9638580;
  if (!qword_1E9638580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638580);
  }
  return result;
}

unint64_t sub_1A3DFE340()
{
  unint64_t result = qword_1E9638588[0];
  if (!qword_1E9638588[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638588);
  }
  return result;
}

unint64_t sub_1A3DFE398()
{
  unint64_t result = qword_1E9638610;
  if (!qword_1E9638610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638610);
  }
  return result;
}

unint64_t sub_1A3DFE3F0()
{
  unint64_t result = qword_1E9638618[0];
  if (!qword_1E9638618[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638618);
  }
  return result;
}

unint64_t sub_1A3DFE448()
{
  unint64_t result = qword_1E96386A0;
  if (!qword_1E96386A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96386A0);
  }
  return result;
}

unint64_t sub_1A3DFE4A0()
{
  unint64_t result = qword_1E96386A8[0];
  if (!qword_1E96386A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96386A8);
  }
  return result;
}

unint64_t sub_1A3DFE4F8()
{
  unint64_t result = qword_1E9638730;
  if (!qword_1E9638730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638730);
  }
  return result;
}

unint64_t sub_1A3DFE550()
{
  unint64_t result = qword_1E9638738[0];
  if (!qword_1E9638738[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638738);
  }
  return result;
}

uint64_t sub_1A3DFE5A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001A40B8630 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x41676E696B6F6F6CLL && a2 == 0xEE0065726F635374 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A40B8650)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A3DFE718(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x726F6353657A6167 && a2 == 0xEA00000000007365 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74636556657A6167 && a2 == 0xEA0000000000726FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A3DFE820(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F6353657A6167 && a2 == 0xEA00000000007365;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B27F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A3DFE91C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702519143 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B27F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A3DFE9FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A40B27F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t destroy for FaceObservation.Landmarks2D.Region.FaceMeshParts()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FaceObservation.Landmarks2D.Region.FaceMeshParts(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  uint64_t v11 = a2[13];
  a1[12] = a2[12];
  a1[13] = v11;
  uint64_t v12 = a2[15];
  a1[14] = a2[14];
  a1[15] = v12;
  uint64_t v13 = a2[17];
  a1[16] = a2[16];
  a1[17] = v13;
  uint64_t v8 = a2[19];
  a1[18] = a2[18];
  a1[19] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FaceObservation.Landmarks2D.Region.FaceMeshParts(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for FaceObservation.Landmarks2D.Region.FaceMeshParts(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FaceObservation.Landmarks2D.Region.FaceMeshParts(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceObservation.Landmarks2D.Region.FaceMeshParts(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.Region.FaceMeshParts()
{
  return &type metadata for FaceObservation.Landmarks2D.Region.FaceMeshParts;
}

uint64_t getEnumTagSinglePayload for FaceObservation.Landmarks2D.Region.FaceMeshParts.FaceMeshRegion(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FaceObservation.Landmarks2D.Region.FaceMeshParts.FaceMeshRegion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *__n128 result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DFF25CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.Landmarks2D.Region.FaceMeshParts.FaceMeshRegion()
{
  return &type metadata for FaceObservation.Landmarks2D.Region.FaceMeshParts.FaceMeshRegion;
}

unint64_t sub_1A3DFF298()
{
  unint64_t result = qword_1E9638840[0];
  if (!qword_1E9638840[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638840);
  }
  return result;
}

unint64_t sub_1A3DFF2F0()
{
  unint64_t result = qword_1E9638950[0];
  if (!qword_1E9638950[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638950);
  }
  return result;
}

BOOL static CoordinateOrigin.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CoordinateOrigin.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t CoordinateOrigin.hashValue.getter()
{
  return sub_1A4096F7C();
}

void NormalizedPoint.init(x:y:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

Vision::NormalizedPoint __swiftcall NormalizedPoint.init(normalizedPoint:)(Vision::NormalizedPoint normalizedPoint)
{
  *uint64_t v1 = normalizedPoint.cgPoint.x;
  v1[1] = normalizedPoint.cgPoint.y;
  return normalizedPoint;
}

Vision::NormalizedPoint __swiftcall NormalizedPoint.init(imagePoint:in:)(Vision::NormalizedPoint imagePoint, CGSize in)
{
  double v3 = 0.0;
  if (in.width == 0.0)
  {
    double *v2 = 0.0;
    v2[1] = 0.0;
  }
  else
  {
    double v4 = 0.0;
    if (in.height != 0.0)
    {
      double v3 = imagePoint.cgPoint.x / in.width;
      double v4 = imagePoint.cgPoint.y / in.height;
    }
    double *v2 = v3;
    v2[1] = v4;
  }
  return imagePoint;
}

Vision::NormalizedPoint __swiftcall NormalizedPoint.init(imagePoint:in:normalizedTo:)(Vision::NormalizedPoint imagePoint, CGSize in, Vision::NormalizedRect normalizedTo)
{
  float64x2_t v5 = 0uLL;
  if (in.width != 0.0 && in.height != 0.0)
  {
    CGFloat height = in.height;
    CGFloat y = imagePoint.cgPoint.y;
    imagePoint = (Vision::NormalizedPoint)vsubq_f64((float64x2_t)__PAIR128__(*(unint64_t *)&y, *(unint64_t *)&imagePoint.cgPoint.x), vmulq_f64(*v3, (float64x2_t)__PAIR128__(*(unint64_t *)&height, *(unint64_t *)&in.width)));
    float64x2_t v5 = vdivq_f64((float64x2_t)__PAIR128__(*(unint64_t *)&y, *(unint64_t *)&imagePoint.cgPoint.x), (float64x2_t)__PAIR128__(*(unint64_t *)&height, *(unint64_t *)&in.width));
  }
  *double v4 = v5;
  return imagePoint;
}

void static NormalizedPoint.zero.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

double NormalizedPoint.cgPoint.getter()
{
  return *(double *)v0;
}

double NormalizedPoint.x.getter()
{
  return *(double *)v0;
}

double NormalizedPoint.y.getter()
{
  return *(double *)(v0 + 8);
}

CGPoint __swiftcall NormalizedPoint.toImageCoordinates(from:imageSize:origin:)(Vision::NormalizedRect from, CGSize imageSize, Vision::CoordinateOrigin origin)
{
  double y = from.cgRect.origin.y;
  double x = from.cgRect.origin.x;
  double v8 = *v4;
  double v7 = v4[1];
  if (*v3)
  {
    double v9 = *(double *)origin + *(double *)(origin + 16) * v8;
    double v10 = *(double *)(origin + 8) + *(double *)(origin + 24) * v7;
  }
  else
  {
    double v11 = 1.0 - v7;
    NormalizedRect.verticallyFlipped()();
    double v9 = v15 + v8 * v17;
    double v10 = v16 + v11 * v18;
  }
  double v12 = v10 * y;
  double v13 = v9 * x;
  result.double y = v12;
  result.double x = v13;
  return result;
}

Vision::NormalizedPoint __swiftcall NormalizedPoint.verticallyFlipped()()
{
  double v2 = *v1;
  double v3 = 1.0 - v1[1];
  double *v0 = *v1;
  v0[1] = v3;
  result.cgPoint.double y = v3;
  result.cgPoint.double x = v2;
  return result;
}

CGPoint __swiftcall NormalizedPoint.toImageCoordinates(_:origin:)(CGSize _, Vision::CoordinateOrigin origin)
{
  double v3 = v2[1];
  if (!*(unsigned char *)origin) {
    double v3 = 1.0 - v3;
  }
  double v4 = v3 * _.height;
  double v5 = *v2 * _.width;
  result.double y = v4;
  result.double x = v5;
  return result;
}

uint64_t NormalizedPoint.hash(into:)()
{
  return sub_1A3CA9FE0(*v0, v0[1]);
}

unint64_t NormalizedPoint.description.getter()
{
  return 0xD000000000000013;
}

BOOL static NormalizedPoint.== infix(_:_:)(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t sub_1A3DFF66C()
{
  return 0x746E696F506763;
}

uint64_t sub_1A3DFF684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746E696F506763 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A3DFF71C(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFF904();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3DFF758(uint64_t a1)
{
  unint64_t v2 = sub_1A3DFF904();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NormalizedPoint.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B70);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFF904();
  sub_1A4096FEC();
  v10[0] = v7;
  v10[1] = v8;
  type metadata accessor for CGPoint(0);
  sub_1A3DFFBE8(&qword_1E95F0A98);
  sub_1A4096DBC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A3DFF904()
{
  unint64_t result = qword_1E96389E0[0];
  if (!qword_1E96389E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96389E0);
  }
  return result;
}

uint64_t NormalizedPoint.hashValue.getter()
{
  double v1 = *v0;
  double v2 = v0[1];
  sub_1A4096F2C();
  sub_1A3CA9FE0(v1, v2);
  return sub_1A4096F7C();
}

uint64_t NormalizedPoint.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3DFF904();
  sub_1A4096FDC();
  if (!v2)
  {
    type metadata accessor for CGPoint(0);
    sub_1A3DFFBE8(&qword_1E95F0AB0);
    sub_1A4096CFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3DFFB3C()
{
  double v1 = *v0;
  double v2 = v0[1];
  sub_1A4096F2C();
  sub_1A3CA9FE0(v1, v2);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DFFB90()
{
  return sub_1A3CA9FE0(*v0, v0[1]);
}

uint64_t sub_1A3DFFB98()
{
  double v1 = *v0;
  double v2 = v0[1];
  sub_1A4096F2C();
  sub_1A3CA9FE0(v1, v2);
  return sub_1A4096F7C();
}

uint64_t sub_1A3DFFBE8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3DFFC30()
{
  unint64_t result = qword_1E95F0B80;
  if (!qword_1E95F0B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0B80);
  }
  return result;
}

BOOL sub_1A3DFFC88(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t sub_1A3DFFCA4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return NormalizedPoint.init(from:)(a1, a2);
}

uint64_t sub_1A3DFFCBC(void *a1)
{
  return NormalizedPoint.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for CoordinateOrigin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3DFFDA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoordinateOrigin()
{
  return &type metadata for CoordinateOrigin;
}

ValueMetadata *type metadata accessor for NormalizedPoint()
{
  return &type metadata for NormalizedPoint;
}

unsigned char *storeEnumTagSinglePayload for NormalizedPoint.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3DFFE88);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NormalizedPoint.CodingKeys()
{
  return &type metadata for NormalizedPoint.CodingKeys;
}

unint64_t sub_1A3DFFEC4()
{
  unint64_t result = qword_1E9638E70[0];
  if (!qword_1E9638E70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638E70);
  }
  return result;
}

unint64_t sub_1A3DFFF1C()
{
  unint64_t result = qword_1E9638F80;
  if (!qword_1E9638F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9638F80);
  }
  return result;
}

unint64_t sub_1A3DFFF74()
{
  unint64_t result = qword_1E9638F88[0];
  if (!qword_1E9638F88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9638F88);
  }
  return result;
}

uint64_t static DetectHorizonRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static DetectHorizonRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t DetectHorizonRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3E00000(uint64_t a1)
{
  unint64_t v2 = sub_1A3E002C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E0003C(uint64_t a1)
{
  unint64_t v2 = sub_1A3E002C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3E00078(uint64_t a1)
{
  unint64_t v2 = sub_1A3E00314();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E000B4(uint64_t a1)
{
  unint64_t v2 = sub_1A3E00314();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectHorizonRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B90);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E002C0();
  sub_1A4096FEC();
  sub_1A3E00314();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3E002C0()
{
  unint64_t result = qword_1E9639028;
  if (!qword_1E9639028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9639028);
  }
  return result;
}

unint64_t sub_1A3E00314()
{
  unint64_t result = qword_1E9639030[0];
  if (!qword_1E9639030[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9639030);
  }
  return result;
}

uint64_t DetectHorizonRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectHorizonRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B98);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0BA0);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E002C0();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3E00314();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      double v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *double v13 = &type metadata for DetectHorizonRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3E00694(void *a1)
{
  return DetectHorizonRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3E006AC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0B90);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E002C0();
  sub_1A4096FEC();
  sub_1A3E00314();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double DetectHorizonRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(v9);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3E00A10();
    sub_1A3E2C988((uint64_t)&type metadata for DetectHorizonRequest, v5, v6);
  }
  double result = v9[0].n128_f64[0];
  __n128 v8 = v9[1];
  *a2 = v9[0];
  a2[1] = v8;
  a2[2].n128_u8[0] = 0;
  a2[2].n128_u64[1] = v4;
  return result;
}

__n128 DetectHorizonRequest.regionOfInterest.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 DetectHorizonRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*DetectHorizonRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3E00934()
{
  unint64_t v0 = sub_1A3E00A10();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for DetectHorizonRequest, v0);
  qword_1E9639018 = result;
  return result;
}

uint64_t static DetectHorizonRequest.supportedRevisions.getter()
{
  if (qword_1E9639010 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void DetectHorizonRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 88;
}

void DetectHorizonRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *DetectHorizonRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*DetectHorizonRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3E00A10()
{
  unint64_t result = qword_1E95F0BA8;
  if (!qword_1E95F0BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0BA8);
  }
  return result;
}

int *sub_1A3E00A64()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(1, 0, 0);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(1, 0, 0);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(1, 0, 0);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for DetectHorizonRequest.Revision, v0 + 32);
  qword_1E9643DE8 = v0;
  return result;
}

uint64_t DetectHorizonRequest.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t DetectHorizonRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1A4096F2C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1A4096F7C();
}

uint64_t sub_1A3E00C90(uint64_t a1)
{
  unint64_t v2 = sub_1A3E01374();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3E00CCC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3E00A10();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3E00D20(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3E00A10();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3E00D74(_WORD *a1@<X8>)
{
  *a1 = 88;
}

uint64_t sub_1A3E00D80(uint64_t a1)
{
  unint64_t v2 = sub_1A3E00A10();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3E00DC0()
{
  if (qword_1E9639020 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E00E1C()
{
  return sub_1A409617C();
}

uint64_t sub_1A3E00E44(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA5B0();

  return sub_1A3E2C684(a1, a2);
}

unint64_t sub_1A3E00E94()
{
  unint64_t result = qword_1E95F0BB0[0];
  if (!qword_1E95F0BB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E95F0BB0);
  }
  return result;
}

unint64_t sub_1A3E00EE8(uint64_t a1)
{
  unint64_t result = sub_1A3CCA5B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3E00F10(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF2E8();
  unint64_t result = sub_1A3E00F40();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3E00F40()
{
  unint64_t result = qword_1E95F0BE8;
  if (!qword_1E95F0BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0BE8);
  }
  return result;
}

unint64_t sub_1A3E00F98()
{
  unint64_t result = qword_1E95F0BF0;
  if (!qword_1E95F0BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0BF0);
  }
  return result;
}

unint64_t sub_1A3E00FF0()
{
  unint64_t result = qword_1E95F0BF8;
  if (!qword_1E95F0BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0BF8);
  }
  return result;
}

uint64_t sub_1A3E01044()
{
  return sub_1A3E013C8(&qword_1E95F0C00, (void (*)(uint64_t))type metadata accessor for HorizonObservation);
}

unint64_t sub_1A3E0108C(uint64_t a1)
{
  unint64_t result = sub_1A3E00A10();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for DetectHorizonRequest()
{
  return &type metadata for DetectHorizonRequest;
}

ValueMetadata *type metadata accessor for DetectHorizonRequest.Revision()
{
  return &type metadata for DetectHorizonRequest.Revision;
}

unsigned char *_s6Vision20DetectHorizonRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3E01174);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectHorizonRequest.Revision.CodingKeys()
{
  return &type metadata for DetectHorizonRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectHorizonRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for DetectHorizonRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3E011C0()
{
  unint64_t result = qword_1E9639840[0];
  if (!qword_1E9639840[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9639840);
  }
  return result;
}

unint64_t sub_1A3E01218()
{
  unint64_t result = qword_1E9639950;
  if (!qword_1E9639950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9639950);
  }
  return result;
}

unint64_t sub_1A3E01270()
{
  unint64_t result = qword_1E9639958[0];
  if (!qword_1E9639958[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9639958);
  }
  return result;
}

unint64_t sub_1A3E012C8()
{
  unint64_t result = qword_1E96399E0;
  if (!qword_1E96399E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96399E0);
  }
  return result;
}

unint64_t sub_1A3E01320()
{
  unint64_t result = qword_1E96399E8[0];
  if (!qword_1E96399E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96399E8);
  }
  return result;
}

unint64_t sub_1A3E01374()
{
  unint64_t result = qword_1E95F0C08;
  if (!qword_1E95F0C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0C08);
  }
  return result;
}

uint64_t sub_1A3E013C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CoreMLFeatureValueObservation.featureName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreMLFeatureValueObservation.featureValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CoreMLFeatureValueObservation() + 20);
  uint64_t v4 = sub_1A4095FAC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CoreMLFeatureValueObservation()
{
  uint64_t result = qword_1E963A070;
  if (!qword_1E963A070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CoreMLFeatureValueObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CoreMLFeatureValueObservation() + 24);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

float CoreMLFeatureValueObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for CoreMLFeatureValueObservation() + 28));
}

__n128 CoreMLFeatureValueObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CoreMLFeatureValueObservation() + 32);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t CoreMLFeatureValueObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for CoreMLFeatureValueObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t CoreMLFeatureValueObservation.description.getter()
{
  sub_1A4096A2C();
  sub_1A409621C();
  swift_bridgeObjectRetain();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v0 = type metadata accessor for CoreMLFeatureValueObservation();
  sub_1A4095FAC();
  sub_1A4096BAC();
  sub_1A409621C();
  uint64_t v1 = sub_1A3E034B8(&qword_1E95EC568, (void (*)(uint64_t))type metadata accessor for CoreMLFeatureValueObservation);
  sub_1A3D8AC8C(v0, (uint64_t)&off_1EF74E008, v1);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0;
}

uint64_t sub_1A3E01794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned __int16 *a6@<X5>, void *a7@<X8>, float a8@<S0>)
{
  uint64_t v33 = a5;
  uint64_t v34 = a4;
  uint64_t v32 = a1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0C18);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_1A4095FAC();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  long long v19 = &v30[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v31 = *a6;
  id v20 = a3;
  sub_1A4095FBC();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A3CA2EB8((uint64_t)v15, &qword_1E95F0C18);
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    sub_1A4096A2C();
    sub_1A409621C();
    id v35 = objc_msgSend(v20, sel_type);
    type metadata accessor for MLFeatureType(0);
    sub_1A4096BAC();
    sub_1A409621C();
    uint64_t v21 = v36;
    unint64_t v22 = v37;
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v23 = v21;
    *(void *)(v23 + 8) = v22;
    *(_DWORD *)(v23 + 16) = 0;
    *(unsigned char *)(v23 + 20) = 5;
    swift_willThrow();

    uint64_t v24 = sub_1A4095C7C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v34, v24);
  }
  else
  {

    uint64_t v26 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32);
    v26(v19, v15, v16);
    *a7 = v32;
    a7[1] = a2;
    uint64_t v27 = (int *)type metadata accessor for CoreMLFeatureValueObservation();
    v26((unsigned char *)a7 + v27[5], v19, v16);
    uint64_t v28 = (char *)a7 + v27[6];
    uint64_t v29 = sub_1A4095C7C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, v34, v29);
    *(float *)((char *)a7 + v27[7]) = a8;
    uint64_t result = sub_1A3C7D648(v33, (uint64_t)a7 + v27[8]);
    *(_WORD *)((char *)a7 + v27[9]) = v31;
  }
  return result;
}

void type metadata accessor for MLFeatureType(uint64_t a1)
{
}

uint64_t CoreMLFeatureValueObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E01B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3E034B8(&qword_1E95EC568, (void (*)(uint64_t))type metadata accessor for CoreMLFeatureValueObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3E01C0C()
{
  uint64_t v1 = 0x4E65727574616566;
  if (*v0 != 1) {
    uint64_t v1 = 0x5665727574616566;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746176726573626FLL;
  }
}

uint64_t sub_1A3E01C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3E03084(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3E01CA8(uint64_t a1)
{
  unint64_t v2 = sub_1A3E03224();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E01CE4(uint64_t a1)
{
  unint64_t v2 = sub_1A3E03224();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CoreMLFeatureValueObservation.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  _OWORD v39[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A4095FAC();
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0C28);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E03224();
  sub_1A4096FEC();
  uint64_t v14 = v2;
  LOBYTE(v39[0]) = 1;
  uint64_t v15 = v37;
  sub_1A4096D7C();
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  int v31 = v6;
  uint64_t v32 = v11;
  uint64_t v37 = v10;
  uint64_t v17 = self;
  sub_1A3C8C73C(0, &qword_1E95EF6E8);
  uint64_t v18 = type metadata accessor for CoreMLFeatureValueObservation();
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v9, v14 + *(int *)(v18 + 20), v36);
  long long v19 = (void *)sub_1A40966FC();
  v39[0] = 0;
  id v20 = objc_msgSend(v17, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v19, 1, v39);

  id v21 = v39[0];
  if (v20)
  {
    uint64_t v36 = v18;
    unint64_t v22 = (void *)sub_1A4095C1C();
    uint64_t v24 = v23;

    v39[0] = v22;
    v39[1] = v24;
    char v38 = 2;
    sub_1A3C81178();
    uint64_t v25 = v37;
    sub_1A4096DBC();
    uint64_t v26 = v32;
    LOBYTE(v39[0]) = 0;
    sub_1A3C80D74();
    uint64_t v28 = (uint64_t)v31;
    sub_1A4096D5C();
    uint64_t v29 = sub_1A3E034B8(&qword_1E95EC568, (void (*)(uint64_t))type metadata accessor for CoreMLFeatureValueObservation);
    sub_1A3D2A9D0(v28, v36, (uint64_t)&off_1EF74E008, v29);
    sub_1A3C7D218((uint64_t)v22, (unint64_t)v24);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v13, v25);
  }
  else
  {
    uint64_t v27 = v21;
    sub_1A4095AEC();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v13, v37);
  }
}

void *CoreMLFeatureValueObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v50 = sub_1A4095C7C();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v46 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0C18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0C38);
  uint64_t v49 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for CoreMLFeatureValueObservation();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  long long v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1A3E03224();
  uint64_t v16 = v51;
  sub_1A4096FDC();
  if (v16) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  }
  uint64_t v17 = v8;
  uint64_t v51 = v5;
  uint64_t v19 = v49;
  uint64_t v18 = v50;
  LOBYTE(v53) = 1;
  uint64_t *v14 = sub_1A4096CBC();
  v14[1] = v20;
  char v56 = 2;
  sub_1A3C812C8();
  sub_1A4096CFC();
  uint64_t v42 = v11;
  uint64_t v43 = v14;
  uint64_t v22 = v53;
  unint64_t v21 = v54;
  sub_1A3C8C73C(0, &qword_1E95EC800);
  sub_1A3C8C73C(0, &qword_1E95EF6E8);
  uint64_t result = (void *)sub_1A409673C();
  uint64_t v40 = v22;
  unint64_t v41 = v21;
  if (result)
  {
    id v39 = result;
    sub_1A4095FBC();
    uint64_t v24 = sub_1A4095FAC();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t result = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v17, 1, v24);
    if (result != 1)
    {
      uint64_t v26 = (char *)v43 + v12[5];
      uint64_t v37 = v25;
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      uint64_t v38 = v24;
      v27(v26, v17, v24);
      LOBYTE(v53) = 0;
      sub_1A3C80D74();
      sub_1A4096C7C();
      uint64_t v36 = v9;
      LOBYTE(v53) = 0;
      sub_1A3E034B8((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
      uint64_t v28 = v46;
      sub_1A4096CFC();
      uint64_t v29 = v43;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))((char *)v43 + v12[6], v28, v18);
      LOBYTE(v53) = 1;
      sub_1A4096CDC();
      *(_DWORD *)((char *)v29 + v12[7]) = v30;
      char v56 = 3;
      sub_1A3C80E6C();
      sub_1A4096CAC();
      uint64_t v31 = v45;
      uint64_t v32 = v40;
      uint64_t v33 = (uint64_t)v43;
      *(_WORD *)((char *)v43 + v12[9]) = v53;
      uint64_t v34 = v51;
      sub_1A3D2B130((uint64_t)v55);
      sub_1A3C7D218(v32, v41);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v47);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v42, v36);
      sub_1A3C7D648((uint64_t)v55, v33 + v12[8]);
      sub_1A3E03278(v33, v44);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      return (void *)sub_1A3E032DC(v33);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1A3E02A44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreMLFeatureValueObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3E02A5C(void *a1)
{
  return CoreMLFeatureValueObservation.encode(to:)(a1);
}

void sub_1A3E02A74(void *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = sub_1A4095C7C();
  *(void *)&double v9 = MEMORY[0x1F4188790](v8 - 8).n128_u64[0];
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int16 v12 = *a2;
  id v13 = objc_msgSend(a1, sel_featureName, v9);
  uint64_t v14 = sub_1A409617C();
  uint64_t v16 = v15;

  id v17 = objc_msgSend(a1, sel_featureValue);
  id v18 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  unsigned __int16 v21 = v12;
  sub_1A3E01794(v14, v16, v17, (uint64_t)v11, a3, &v21, a4, v19);
}

uint64_t CoreMLFeatureValueObservation.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A4095C7C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0C40);
  *(void *)&double v8 = MEMORY[0x1F4188790](v7 - 8).n128_u64[0];
  uint64_t v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v11 = objc_msgSend(a1, sel_featureName, v8);
  uint64_t v12 = sub_1A409617C();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(a1, sel_featureValue);
  id v16 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  float v18 = v17;
  objc_msgSend(a1, sel_timeRange);
  char v26 = 0;
  unsigned __int16 v24 = -8;
  sub_1A3E01794(v12, v14, v15, (uint64_t)v6, (uint64_t)&v25, &v24, v10, v18);

  uint64_t v19 = type metadata accessor for CoreMLFeatureValueObservation();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 0, 1, v19);
  type metadata accessor for CoreMLFeatureValueObservation();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v19))
  {
    sub_1A3CA2EB8((uint64_t)v10, &qword_1E95F0C40);
    uint64_t v21 = 1;
  }
  else
  {
    sub_1A3E03338((uint64_t)v10, a2);
    uint64_t v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a2, v21, 1, v19);
}

void sub_1A3E02EC4(void *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  unsigned __int16 v4 = *a2;
  sub_1A3E02A74(a1, &v4, a3, a4);
}

uint64_t _s6Vision29CoreMLFeatureValueObservationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1A4096E5C(), result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = (int *)type metadata accessor for CoreMLFeatureValueObservation();
    if ((sub_1A4095F9C() & 1) == 0
      || (sub_1A4095C4C() & 1) == 0
      || *(float *)((char *)a1 + v7[7]) != *(float *)((char *)a2 + v7[7]))
    {
      return 0;
    }
    uint64_t v8 = v7[8];
    char v9 = *((unsigned char *)a1 + v8 + 48);
    uint64_t v10 = (char *)a2 + v8;
    if (v9)
    {
      if (!v10[48]) {
        return 0;
      }
    }
    else if ((v10[48] & 1) != 0 || (sub_1A409669C() & 1) == 0)
    {
      return 0;
    }
    uint64_t v11 = v7[9];
    unsigned int v12 = *(unsigned __int16 *)((char *)a1 + v11);
    unsigned int v13 = *(unsigned __int16 *)((char *)a2 + v11);
    if (v12 <= 0xFFF7)
    {
      if (v13 > 0xFFF7) {
        return 0;
      }
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
    }
    else if (v13 <= 0xFFF7)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_1A3E03084(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E65727574616566 && a2 == 0xEB00000000656D61 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5665727574616566 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1A3E03224()
{
  unint64_t result = qword_1E95F0C30;
  if (!qword_1E95F0C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0C30);
  }
  return result;
}

uint64_t sub_1A3E03278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoreMLFeatureValueObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3E032DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CoreMLFeatureValueObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3E03338(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoreMLFeatureValueObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3E0339C(void *a1)
{
  a1[1] = sub_1A3E034B8(&qword_1E95F0C48, (void (*)(uint64_t))type metadata accessor for CoreMLFeatureValueObservation);
  a1[2] = sub_1A3E034B8(&qword_1E95F0C50, (void (*)(uint64_t))type metadata accessor for CoreMLFeatureValueObservation);
  a1[3] = sub_1A3E034B8(&qword_1E95F0C58, (void (*)(uint64_t))type metadata accessor for CoreMLFeatureValueObservation);
  uint64_t result = sub_1A3E034B8(&qword_1E95F0C20, (void (*)(uint64_t))type metadata accessor for CoreMLFeatureValueObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3E03470()
{
  return sub_1A3E034B8(&qword_1E95F0C60, (void (*)(uint64_t))type metadata accessor for CoreMLFeatureValueObservation);
}

uint64_t sub_1A3E034B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3E03504()
{
  unint64_t result = qword_1E95F0C68;
  if (!qword_1E95F0C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0C68);
  }
  return result;
}

unint64_t sub_1A3E0355C()
{
  unint64_t result = qword_1E95F0C70;
  if (!qword_1E95F0C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0C70);
  }
  return result;
}

unint64_t sub_1A3E035B4()
{
  unint64_t result = qword_1E95F0C78;
  if (!qword_1E95F0C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0C78);
  }
  return result;
}

uint64_t sub_1A3E03608(uint64_t a1)
{
  uint64_t result = sub_1A3E034B8(&qword_1E95EC568, (void (*)(uint64_t))type metadata accessor for CoreMLFeatureValueObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CoreMLFeatureValueObservation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A4095FAC();
    unsigned int v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    id v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1A4095C7C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[8];
    *(_DWORD *)((char *)v4 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    float v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    long long v20 = *((_OWORD *)v19 + 1);
    *(_OWORD *)float v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
    *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    v18[48] = v19[48];
    *(_WORD *)((char *)v4 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  }
  return v4;
}

uint64_t destroy for CoreMLFeatureValueObservation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A4095FAC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1A4095C7C();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *initializeWithCopy for CoreMLFeatureValueObservation(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A4095FAC();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[8];
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  uint64_t v17 = (char *)a1 + v16;
  float v18 = (char *)a2 + v16;
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  v17[48] = v18[48];
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

void *assignWithCopy for CoreMLFeatureValueObservation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095FAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[48];
  long long v19 = *((_OWORD *)v16 + 1);
  long long v18 = *((_OWORD *)v16 + 2);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v19;
  *((_OWORD *)v15 + 2) = v18;
  v15[48] = v17;
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for CoreMLFeatureValueObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A4095FAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[8];
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  v15[48] = v16[48];
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

void *assignWithTake for CoreMLFeatureValueObservation(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A4095FAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[8];
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  uint64_t v16 = (char *)a1 + v15;
  long long v17 = (char *)a2 + v15;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  v16[48] = v17[48];
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreMLFeatureValueObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3E03D1C);
}

uint64_t sub_1A3E03D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A4095FAC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1A4095C7C();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CoreMLFeatureValueObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3E03E5C);
}

uint64_t sub_1A3E03E5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1A4095FAC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1A4095C7C();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1A3E03F88()
{
  uint64_t result = sub_1A4095FAC();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1A4095C7C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CoreMLFeatureValueObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3E04148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreMLFeatureValueObservation.CodingKeys()
{
  return &type metadata for CoreMLFeatureValueObservation.CodingKeys;
}

uint64_t static VisionError.dataUnavailable(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 0;

  return swift_bridgeObjectRetain();
}

uint64_t VisionError.errorDescription.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(unsigned int *)(v0 + 16);
  int v3 = *(unsigned __int8 *)(v0 + 20);
  if (((1 << v3) & 0x17F7FF) != 0)
  {
    sub_1A3E04338(*(void *)v0, *(void *)(v0 + 8), *(unsigned int *)(v0 + 16), v3);
    return v1;
  }
  if (v3 == 11)
  {
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    unint64_t v5 = 0xD000000000000026;
    sub_1A4096E1C();
LABEL_8:
    sub_1A409621C();
    swift_bridgeObjectRelease();
    return v5;
  }
  sub_1A4096A2C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v5 = v1;
  sub_1A409621C();
  uint64_t result = MEMORY[0x1A6256940](v2);
  if (result)
  {
    sub_1A409622C();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3E04338(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0x14u && a4 != 11) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t static VisionError.internalError(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 1;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.invalidArgument(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 2;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.invalidFormat(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 3;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.invalidImage(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 4;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.invalidModel(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 5;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.invalidOperation(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 6;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.ioError(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 7;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.operationFailed(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 8;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.outOfBoundsError(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 9;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.outOfMemory(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 10;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.pixelBufferCreationFailed(errorCode:)@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(0);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 20) = 11;
  return result;
}

uint64_t static VisionError.requestCancelled(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 12;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.timeout(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 13;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.timeStampNotFound(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 14;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.unsupportedComputeDevice(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 15;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.unsupportedComputeStage(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 16;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.unsupportedRequest(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 17;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.unsupportedRevision(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 18;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.espressoE5RTError(message:errorCode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_bridgeObjectRetain_n();
  sub_1A4096A2C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t result = MEMORY[0x1A6256940](a3);
  if (result)
  {
    sub_1A409622C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(0);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = a2;
    *(_DWORD *)(a4 + 16) = a3;
    *(unsigned char *)(a4 + 20) = 19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static VisionError.unimplementedFunction(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 20) = 20;

  return swift_bridgeObjectRetain();
}

uint64_t static VisionError.requestCancelled(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A3C85678(a1, (uint64_t)v7 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBFD8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = *((void *)&v9 + 1);
    uint64_t v3 = v10;
    __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v3 + 8) + 56))(v7, v4);
    sub_1A3DB78FC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    sub_1A3CFB14C((uint64_t)&v8);
  }
  *(void *)&long long v8 = 0;
  *((void *)&v8 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  long long v5 = v8;
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  uint64_t result = swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v5;
  *(_DWORD *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 20) = 12;
  return result;
}

uint64_t static VisionError.performDisallowedFromMultipleThreads(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A3C85678(a1, (uint64_t)v7 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBFD8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = *((void *)&v9 + 1);
    uint64_t v3 = v10;
    __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v3 + 8) + 56))(v7, v4);
    sub_1A3DB78FC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    sub_1A3CFB14C((uint64_t)&v8);
  }
  *(void *)&long long v8 = 0;
  *((void *)&v8 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  long long v5 = v8;
  swift_bridgeObjectRetain();
  sub_1A3D5D2DC(0);
  uint64_t result = swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v5;
  *(_DWORD *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 20) = 6;
  return result;
}

void sub_1A3E050A0(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_description);
  uint64_t v5 = sub_1A409617C();
  uint64_t v7 = v6;

  long long v8 = objc_msgSend(a1, sel_code);
  if ((unint64_t)(v8 - 1) > 0x15) {
    char v9 = 1;
  }
  else {
    char v9 = byte_1A410748A[(void)(v8 - 1)];
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(_DWORD *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 20) = v9;
}

uint64_t destroy for VisionError(uint64_t a1)
{
  return sub_1A3E0515C(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16), *(unsigned char *)(a1 + 20));
}

uint64_t sub_1A3E0515C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0x14u && a4 != 11) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s6Vision11VisionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 20);
  sub_1A3E04338(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 20) = v6;
  return a1;
}

uint64_t assignWithCopy for VisionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 20);
  sub_1A3E04338(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(unsigned int *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 20);
  *(unsigned char *)(a1 + 20) = v6;
  sub_1A3E0515C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy21_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for VisionError(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 20);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(unsigned int *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 20);
  *(unsigned char *)(a1 + 20) = v4;
  sub_1A3E0515C(v5, v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xEC && *(unsigned char *)(a1 + 21)) {
    return (*(_DWORD *)a1 + 236);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 20);
  if (v3 <= 0x14) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEB)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 236;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xEC) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if (a3 >= 0xEC) {
      *(unsigned char *)(result + 21) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 20) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A3E05340(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 20);
}

uint64_t sub_1A3E05348(uint64_t result, char a2)
{
  *(unsigned char *)(result + 20) = a2;
  return result;
}

ValueMetadata *type metadata accessor for VisionError()
{
  return &type metadata for VisionError;
}

unint64_t sub_1A3E05360(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unsigned int v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0C90);
  uint64_t v2 = sub_1A4096C2C();
  unsigned int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A3E0547C(v6, (uint64_t)&v13);
    uint64_t v7 = v13;
    unint64_t result = sub_1A3CB1AF0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1A3C856F4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A3E0547C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3E054E4(__IOSurface *a1, IOSurfaceLockOptions a2, void (*a3)(__IOSurface *))
{
  if (IOSurfaceLock(a1, a2, 0))
  {
    sub_1A3C85624();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD00000000000001BLL;
    *(void *)(v6 + 8) = 0x80000001A40B87D0;
    *(_DWORD *)(v6 + 16) = 0;
    *(unsigned char *)(v6 + 20) = 1;
    swift_willThrow();
  }
  else
  {
    a3(a1);
  }
  return IOSurfaceUnlock(a1, a2, 0);
}

ValueMetadata *type metadata accessor for CoreUtils()
{
  return &type metadata for CoreUtils;
}

uint64_t sub_1A3E055BC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_lazyName);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_lazyName);
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_lazyName + 8);
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
    uint64_t v5 = sub_1A4095B3C();
    for (uint64_t i = v6; ; uint64_t i = v20)
    {
      unsigned __int8 v8 = (void *)sub_1A409614C();
      id v9 = objc_msgSend(v8, sel_pathExtension);

      uint64_t v10 = sub_1A409617C();
      uint64_t v12 = v11;

      uint64_t v23 = v10;
      uint64_t v13 = sub_1A409625C();
      if (!v13 && v14 == 0xE000000000000000) {
        break;
      }
      uint64_t v16 = v13;
      uint64_t v17 = v14;
      if (sub_1A4096E5C()) {
        break;
      }
      if (v16 == 0x656C646E7562 && v17 == 0xE600000000000000
        || (sub_1A4096E5C() & 1) != 0
        || v16 == 7628142 && v17 == 0xE300000000000000
        || (sub_1A4096E5C() & 1) != 0
        || v16 == 0x6F73736572707365 && v17 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v21 = sub_1A4096E5C();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0) {
          goto LABEL_23;
        }
      }
      long long v18 = (void *)sub_1A409614C();
      swift_bridgeObjectRelease();
      id v19 = objc_msgSend(v18, sel_stringByDeletingPathExtension, v23, v12);

      sub_1A409617C();
      uint64_t v5 = sub_1A409625C();
    }
    swift_bridgeObjectRelease();
LABEL_23:
    *uint64_t v1 = v5;
    v1[1] = i;
    swift_bridgeObjectRelease();
    uint64_t v2 = *v1;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1A3E05874()
{
  uint64_t v1 = OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_lazyFunctionNames;
  if (!*(void *)(*(void *)(v0 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_lazyFunctionNames) + 16))
  {
    uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 136))();
    *(void *)(v0 + v1) = sub_1A3E142F0(v2, (uint64_t (*)(uint64_t, void *))j__e5rt_program_library_get_num_functions, 0, (uint64_t (*)(uint64_t, void, uint64_t))j__e5rt_program_library_get_function_names);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E05944()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_programLibraryHandle;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1A3E0598C(uint64_t a1)
{
  unint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_programLibraryHandle);
  uint64_t result = swift_beginAccess();
  *unint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1A3E059D8())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A3E05A34()
{
  return *(unsigned int *)sub_1A3D8E108() | 0x100000000;
}

unint64_t sub_1A3E05A54()
{
  uint64_t v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_compilationOptions);
  swift_beginAccess();
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t sub_1A3E05AA4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_compilationOptions;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 4) = BYTE4(a1);
  *(_DWORD *)uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1A3E05AF8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3E05B54()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_programLibraryHandle);
  swift_beginAccess();
  e5rt_program_library_release();
  *uint64_t v1 = 0;
  swift_endAccess();
  uint64_t v2 = v0 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_url;
  uint64_t v3 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A3E05C48()
{
  sub_1A3DB37D4();
  if (v0) {
    return v1;
  }
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  sub_1A40961AC();
  swift_bridgeObjectRelease();
  uint64_t v2 = e5rt_program_library_create();
  swift_release();
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  BOOL v1 = v2 == 0;
  if (!v2)
  {
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    e5rt_program_library_release();
    return v1;
  }
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t result = MEMORY[0x1A6256940](v2);
  if (result)
  {
    sub_1A409622C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3E05E94(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1A4095B9C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A3DB37D4();
  if (!v1)
  {
    uint64_t v17 = 0;
    sub_1A40961AC();
    swift_bridgeObjectRelease();
    uint64_t v7 = e5rt_program_library_create();
    swift_release();
    if (v7)
    {
      sub_1A3C85624();
      swift_allocError();
      static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000027, 0x80000001A40B8910, v7, v8);
      swift_willThrow();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
      uint64_t v10 = v17;
      type metadata accessor for E5RTProgramLibrary();
      a1 = swift_allocObject();
      *(void *)(a1 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_programLibraryHandle) = 0;
      uint64_t v11 = a1 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_compilationOptions;
      int v12 = *(_DWORD *)sub_1A3D8E108();
      *(unsigned char *)(v11 + 4) = 1;
      *(_DWORD *)uint64_t v11 = v12;
      uint64_t v13 = (void *)(a1 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_lazyName);
      *uint64_t v13 = 0;
      v13[1] = 0xE000000000000000;
      *(void *)(a1 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_lazyFunctionNames) = MEMORY[0x1E4FBC860];
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 32))(a1 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_url, v6, v3);
      uint64_t v14 = a1 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_compilationOptions;
      swift_beginAccess();
      *(unsigned char *)(v14 + 4) = 2;
      *(_DWORD *)uint64_t v14 = 0;
      uint64_t v15 = (void *)(a1 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_programLibraryHandle);
      swift_beginAccess();
      *uint64_t v15 = v10;
    }
  }
  return a1;
}

uint64_t sub_1A3E06120(void *a1, uint64_t a2)
{
  return sub_1A3E06460(a1, a2 & 0x1FFFFFFFFLL);
}

uint64_t sub_1A3E0613C()
{
  (*(void (**)(void))(*(void *)v0 + 136))();
  sub_1A40961AC();
  uint64_t function_metadata = e5rt_program_library_get_function_metadata();
  swift_release();
  if (function_metadata)
  {
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000036, 0x80000001A40B8940, function_metadata, v2);
    swift_willThrow();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0CA0);
    sub_1A409691C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0CA8);
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  return function_metadata;
}

void *sub_1A3E062BC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)v2 + 136))();
  sub_1A40961AC();
  uint64_t v5 = e5rt_program_library_retain_program_function();
  swift_release();
  if (v5)
  {
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000038, 0x80000001A40B8980, v5, v6);
    return (void *)swift_willThrow();
  }
  else
  {
    type metadata accessor for E5RTFunction();
    swift_retain();
    swift_bridgeObjectRetain();
    return sub_1A3E16D14(v2, a1, a2, 0);
  }
}

uint64_t type metadata accessor for E5RTProgramLibrary()
{
  uint64_t result = qword_1E963A210;
  if (!qword_1E963A210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A3E06460(void *a1, uint64_t a2)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1A4095B9C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v31[-v10];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 48))(v12, v13);
  uint64_t v14 = (uint64_t)v11;
  sub_1A3DB370C();
  if (v2) {
    goto LABEL_16;
  }
  uint64_t v39 = 0;
  uint64_t v15 = e5rt_e5_compiler_create();
  if (!v15)
  {
    uint64_t v34 = a2 & 0x100000000;
    uint64_t v36 = 0;
    uint64_t v17 = e5rt_e5_compiler_options_create();
    if (v17)
    {
      uint64_t v14 = v17;
      sub_1A3C85624();
      uint64_t v19 = swift_allocError();
      uint64_t v20 = 0xD00000000000002BLL;
      char v21 = "e5rt_e5_compiler_options_create call failed";
    }
    else
    {
      int v35 = a2;
      LODWORD(v37) = *(_DWORD *)sub_1A3D8E108();
      sub_1A3E06B28();
      if ((sub_1A409612C() & 1) != 0
        || (sub_1A3D8E12C(),
            LODWORD(v33) = *(_DWORD *)sub_1A3D8E120(),
            sub_1A3D8E114(),
            uint64_t v22 = e5rt_e5_compiler_options_set_compute_device_types_mask(),
            !v22))
      {
        uint64_t v14 = v36;
        goto LABEL_13;
      }
      uint64_t v14 = v22;
      sub_1A3C85624();
      uint64_t v19 = swift_allocError();
      uint64_t v20 = 0xD000000000000042;
      char v21 = "e5rt_e5_compiler_options_set_compute_device_types_mask call failed";
    }
    static VisionError.espressoE5RTError(message:errorCode:)(v20, (unint64_t)(v21 - 32) | 0x8000000000000000, v14, v18);
    swift_willThrow();
    if (v19)
    {
      swift_bridgeObjectRelease();
LABEL_15:
      e5rt_e5_compiler_release();
      uint64_t v39 = 0;
      goto LABEL_16;
    }
LABEL_13:
    uint64_t v37 = 0;
    uint64_t v38 = v14;
    uint64_t v33 = v39;
    sub_1A40961AC();
    swift_bridgeObjectRelease();
    uint64_t v14 = e5rt_e5_compiler_compile();
    swift_release();
    if (!v14)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v8, v11, v5);
      char v25 = BYTE4(v34);
      int v32 = a2 | v34;
      uint64_t v33 = v37;
      type metadata accessor for E5RTProgramLibrary();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_programLibraryHandle) = 0;
      uint64_t v26 = v14 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_compilationOptions;
      int v27 = *(_DWORD *)sub_1A3D8E108();
      *(unsigned char *)(v26 + 4) = 1;
      *(_DWORD *)uint64_t v26 = v27;
      uint64_t v28 = (void *)(v14 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_lazyName);
      *uint64_t v28 = 0;
      v28[1] = 0xE000000000000000;
      *(void *)(v14 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_lazyFunctionNames) = MEMORY[0x1E4FBC860];
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v14 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_url, v8, v5);
      uint64_t v29 = v14 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_compilationOptions;
      swift_beginAccess();
      *(unsigned char *)(v29 + 4) = v25;
      *(_DWORD *)uint64_t v29 = v32;
      int v30 = (void *)(v14 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_programLibraryHandle);
      swift_beginAccess();
      *int v30 = v33;
      e5rt_e5_compiler_options_release();
      e5rt_e5_compiler_release();
      uint64_t v39 = 0;
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
      return v14;
    }
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000024, 0x80000001A40B8A80, v14, v23);
    swift_willThrow();
    e5rt_e5_compiler_options_release();
    goto LABEL_15;
  }
  uint64_t v14 = v15;
  swift_bridgeObjectRelease();
  sub_1A3C85624();
  swift_allocError();
  static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000023, 0x80000001A40B8A50, v14, v16);
  swift_willThrow();
LABEL_16:
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  return v14;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for E5RTProgramLibraryCompilationOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for E5RTProgramLibraryCompilationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTProgramLibraryCompilationOptions()
{
  return &type metadata for E5RTProgramLibraryCompilationOptions;
}

uint64_t sub_1A3E06A60()
{
  return type metadata accessor for E5RTProgramLibrary();
}

uint64_t sub_1A3E06A68()
{
  uint64_t result = sub_1A4095B9C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1A3E06B28()
{
  unint64_t result = qword_1E95F0CB0;
  if (!qword_1E95F0CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0CB0);
  }
  return result;
}

uint64_t sub_1A3E06B80()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_1A3E06BF4((uint64_t)&v1[4], &v4);
  os_unfair_lock_unlock(v1 + 6);
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1A3E06BF4@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  unint64_t v2 = *(void *)(*(void *)result + 16);
  if (HIDWORD(v2)) {
    __break(1u);
  }
  else {
    *a2 = v2;
  }
  return result;
}

uint64_t sub_1A3E06C10()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1A3E06C84((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1A3E06C84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v22 = *a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v8 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A3E08BD8(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v19 = *(void *)(v9 + 16);
    unint64_t v18 = *(void *)(v9 + 24);
    if (v19 >= v18 >> 1)
    {
      uint64_t result = (uint64_t)sub_1A3E08BD8((char *)(v18 > 1), v19 + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v19 + 1;
    unint64_t v20 = v9 + 16 * v19;
    *(void *)(v20 + 32) = v16;
    *(void *)(v20 + 40) = v17;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v6) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v13 = *(void *)(v22 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v22 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v13 = *(void *)(v22 + 8 * v8);
          if (!v13)
          {
            int64_t v8 = v12 + 4;
            if (v12 + 4 >= v6) {
              goto LABEL_29;
            }
            unint64_t v13 = *(void *)(v22 + 8 * v8);
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 5;
  if (v14 >= v6)
  {
LABEL_29:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v9;
    return result;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A3E06EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1A3E06F08(a1, a2);
  return v4;
}

uint64_t sub_1A3E06F08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6 != *(void *)(a2 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(0xD000000000000033, 0x80000001A40B8B30, v27);
    swift_willThrow();
    type metadata accessor for NamedObjects();
    swift_deallocPartialClassInstance();
    return v3;
  }
  uint64_t v7 = (void *)sub_1A3C9DA4C(MEMORY[0x1E4FBC860]);
  if (!v6)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0CB8);
    uint64_t v28 = swift_allocObject();
    *(_DWORD *)(v28 + 24) = 0;
    *(void *)(v28 + 16) = v7;
    *(void *)(v3 + 16) = v28;
    return v3;
  }
  uint64_t v30 = v3;
  unint64_t v8 = 0;
  uint64_t v9 = v4 + 32;
  unint64_t v10 = (uint64_t *)(a1 + 40);
  uint64_t v31 = v6;
  uint64_t v32 = v4;
  while (v8 < *(void *)(v4 + 16))
  {
    uint64_t v13 = *(v10 - 1);
    uint64_t v12 = *v10;
    sub_1A3C8D3F0(v9, (uint64_t)v33);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v34 = v7;
    unint64_t v16 = sub_1A3C8C844(v13, v12);
    uint64_t v17 = v7[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      goto LABEL_24;
    }
    char v20 = v15;
    if (v7[3] >= v19)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v7 = v34;
        if (v15) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1A3C8D208();
        uint64_t v7 = v34;
        if (v20) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1A3C8CB70(v19, isUniquelyReferenced_nonNull_native);
      unint64_t v21 = sub_1A3C8C844(v13, v12);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_26;
      }
      unint64_t v16 = v21;
      uint64_t v7 = v34;
      if (v20)
      {
LABEL_4:
        uint64_t v11 = (_OWORD *)(v7[7] + 32 * v16);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
        sub_1A3C856F4(v33, v11);
        goto LABEL_5;
      }
    }
    v7[(v16 >> 6) + 8] |= 1 << v16;
    uint64_t v23 = (uint64_t *)(v7[6] + 16 * v16);
    *uint64_t v23 = v13;
    v23[1] = v12;
    sub_1A3C856F4(v33, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v24 = v7[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_25;
    }
    void v7[2] = v26;
    swift_bridgeObjectRetain();
LABEL_5:
    ++v8;
    v10 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 += 32;
    uint64_t v4 = v32;
    if (v31 == v8)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v30;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_1A4096EBC();
  __break(1u);
  return result;
}

uint64_t sub_1A3E071DC()
{
  uint64_t v2 = (*(uint64_t (**)(void, void))(v0 + 128))(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860]);
  if (!v1)
  {
    swift_retain();
    uint64_t v3 = sub_1A409605C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0CB8);
    uint64_t v4 = swift_allocObject();
    *(_DWORD *)(v4 + 24) = 0;
    *(void *)(v4 + 16) = v3;
    *(void *)(v2 + 16) = v4;
    swift_release();
    swift_release();
  }
  return v2;
}

uint64_t sub_1A3E072A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3E07374()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_1A3E072A4();
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A3E0740C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

void *sub_1A3E07448(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1A3E079D0(a1, a2);
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0CC0);
    uint64_t v4 = (const void *)sub_1A409691C();
    CFTypeID v5 = CFGetTypeID(v4);
    swift_unknownObjectRelease();
    if (v5 != CVPixelBufferGetTypeID())
    {
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      sub_1A409621C();
      sub_1A409621C();
      sub_1A3C85624();
      swift_allocError();
      static VisionError.invalidArgument(message:)(0xD000000000000011, 0x80000001A40B8B70, v6);
      swift_bridgeObjectRelease();
      swift_willThrow();
    }
  }
  return v3;
}

void sub_1A3E07580(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1A3E09AAC((uint64_t *)(v4 + 16), &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  if (v2)
  {
    __break(1u);
  }
  else
  {
    char v5 = v6;
    swift_release();
    *a2 = v5;
  }
}

uint64_t sub_1A3E07624(uint64_t a1, uint64_t a2)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD000000000000029;
  unint64_t v9 = 0x80000001A40B8DA0;
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1A3E09838((uint64_t *)(v5 + 16), &v7);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  return v7;
}

uint64_t sub_1A3E077FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1A3E07B18(a1);
}

unint64_t sub_1A3E07814()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  if (os_unfair_lock_trylock(v1 + 6))
  {
    sub_1A3E078B0(v5);
    os_unfair_lock_unlock(v1 + 6);
    uint64_t v3 = v5[0];
    uint64_t v2 = v5[1];
  }
  swift_release();
  if (v2) {
    return v3;
  }
  else {
    return 0xD000000000000029;
  }
}

uint64_t sub_1A3E078B0@<X0>(void *a1@<X8>)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  swift_bridgeObjectRetain();
  sub_1A409603C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 0x203A746E756F63;
  a1[1] = 0xE700000000000000;
  return result;
}

void *sub_1A3E079D0(uint64_t a1, uint64_t a2)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  v10[0] = 0xD000000000000029;
  v10[1] = 0x80000001A40B8DA0;
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  char v6 = *(os_unfair_lock_s **)(v2 + 16);
  id v9[2] = a1;
  __n128 v9[3] = a2;
  swift_retain();
  os_unfair_lock_lock(v6 + 6);
  long long v7 = v9;
  sub_1A3E09BBC((uint64_t)&v6[4], v10);
  os_unfair_lock_unlock(v6 + 6);
  if (!v3) {
    long long v7 = (void *)v10[0];
  }
  swift_release();
  return v7;
}

uint64_t sub_1A3E07B18@<X0>(uint64_t a1@<X8>)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1A409692C();
  uint64_t v4 = (uint64_t *)(v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16));
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1A3E09598(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t sub_1A3E07CB8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    long long v11 = 0u;
    long long v12 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A3C8C844(a2, a3);
  if ((v7 & 1) == 0)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1A3C8D3F0(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_9:
    sub_1A3C8C778((uint64_t)&v11);
    *(void *)&v13[0] = 0;
    *((void *)&v13[0] + 1) = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    *(void *)&v13[0] = 0xD000000000000011;
    *((void *)&v13[0] + 1) = 0x80000001A40B8B70;
    sub_1A409621C();
    sub_1A409621C();
    long long v9 = v13[0];
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(v9, *((uint64_t *)&v9 + 1), v10);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  sub_1A3C856F4(&v11, v13);
  *(void *)&long long v11 = 0;
  *((void *)&v11 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A4096BAC();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  sub_1A3C856F4(v13, &v11);
  type metadata accessor for CVBuffer(0);
  if (swift_dynamicCast()) {
    return v14;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A3E07F24(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    long long v11 = 0u;
    long long v12 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A3C8C844(a2, a3);
  if ((v7 & 1) == 0)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1A3C8D3F0(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_9:
    sub_1A3C8C778((uint64_t)&v11);
    *(void *)&v13[0] = 0;
    *((void *)&v13[0] + 1) = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    *(void *)&v13[0] = 0xD000000000000011;
    *((void *)&v13[0] + 1) = 0x80000001A40B8B70;
    sub_1A409621C();
    sub_1A409621C();
    long long v9 = v13[0];
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(v9, *((uint64_t *)&v9 + 1), v10);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  sub_1A3C856F4(&v11, v13);
  *(void *)&long long v11 = 0;
  *((void *)&v11 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A4096BAC();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  sub_1A3C856F4(v13, &v11);
  type metadata accessor for IOSurfaceRef(0);
  if (swift_dynamicCast()) {
    return v14;
  }
  else {
    return 0;
  }
}

IOSurfaceRef sub_1A3E08190(uint64_t a1, uint64_t a2)
{
  return sub_1A3E081C8(a1, a2, 0);
}

IOSurfaceRef sub_1A3E081AC(uint64_t a1, uint64_t a2)
{
  return sub_1A3E081C8(a1, a2, 1);
}

IOSurfaceRef sub_1A3E081C8(uint64_t a1, uint64_t a2, char a3)
{
  IOSurfaceRef result = sub_1A3E081EC(a1, a2, a3);
  if (!v3 && !result) {
    __break(1u);
  }
  return result;
}

IOSurfaceRef sub_1A3E081EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = v4;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  v20[0] = 0xD000000000000029;
  v20[1] = 0x80000001A40B8DA0;
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  long long v9 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v9 + 6);
  sub_1A3E09558((uint64_t)&v9[4], v20);
  os_unfair_lock_unlock(v9 + 6);
  if (v4)
  {
    swift_release();
  }
  else
  {
    uint64_t v5 = (void *)v20[0];
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0CE8);
    uint64_t v10 = (const void *)sub_1A409691C();
    CFTypeID v11 = CFGetTypeID(v10);
    swift_unknownObjectRelease();
    if (v11 != IOSurfaceGetTypeID())
    {
      if (a3)
      {
        long long v12 = (__CVBuffer *)sub_1A3E079D0(a1, a2);
        uint64_t v13 = v12;
        IOSurfaceRef IOSurface = CVPixelBufferGetIOSurface(v12);
        if (IOSurface)
        {
          IOSurfaceRef v15 = IOSurface;
          unint64_t v16 = IOSurface;

          return v15;
        }
        sub_1A4096A2C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.invalidArgument(message:)(0, 0xE000000000000000, v19);
        swift_bridgeObjectRelease();
        swift_willThrow();
      }
      else
      {
        sub_1A4096A2C();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.invalidArgument(message:)(0xD000000000000011, 0x80000001A40B8B70, v17);
        swift_bridgeObjectRelease();
        swift_willThrow();
      }
    }
  }
  return (IOSurfaceRef)v5;
}

uint64_t sub_1A3E085E0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1A3E08D00((uint64_t *)(v1 + 16), v3);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  return sub_1A3C8C778((uint64_t)v3);
}

uint64_t sub_1A3E08658()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1A3E08DE8((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  return swift_release();
}

uint64_t sub_1A3E086E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 128))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A3E0871C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 88))();
}

uint64_t sub_1A3E08760()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

uint64_t sub_1A3E087A4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))();
}

uint64_t sub_1A3E087E8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 200))();
}

uint64_t sub_1A3E0882C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t sub_1A3E08870()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t sub_1A3E088B4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t sub_1A3E088F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 136))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A3E08934()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 224))();
}

uint64_t sub_1A3E08978()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216))();
}

uint64_t sub_1A3E089BC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A3E0B2A4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1A3E089D4(uint64_t a1, void (*a2)(void *, __n128), uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A3E0B858(a1, a2, a3, a4, a5);
}

uint64_t sub_1A3E089EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(**(void **)v1 + 144))();
  uint64_t v5 = v4;
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t sub_1A3E08A50()
{
  return 0;
}

uint64_t sub_1A3E08A58()
{
  uint64_t v1 = sub_1A3E091F0(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1A3E08A90(uint64_t *a1, void *a2, unint64_t a3)
{
  return sub_1A3E093D8(a1, a2, a3);
}

uint64_t sub_1A3E08AB4()
{
  return sub_1A409628C();
}

uint64_t sub_1A3E08B1C(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)a1 + 16);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_1A3E091D4(&v4);
  os_unfair_lock_unlock(v1 + 6);
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1A3E08B94()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

char *sub_1A3E08BD8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF370);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for NamedObjects()
{
  return self;
}

uint64_t sub_1A3E08D00@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1A3C8C844(v6, v5);
  LOBYTE(v5) = v8;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *a1;
    uint64_t v12 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A3C8D208();
      uint64_t v11 = v12;
    }
    swift_bridgeObjectRelease();
    sub_1A3C856F4((_OWORD *)(*(void *)(v11 + 56) + 32 * v7), a2);
    sub_1A3C8CE70(v7, v11);
    *a1 = v11;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1A3E08DE8(uint64_t *a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[6];
  uint64_t v5 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A3C8C844(v2, v3);
  if ((v7 & 1) == 0)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1A3C8D3F0(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_7:
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A4096BAC();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    sub_1A3C8D3F0(v4, (uint64_t)&v10);
    swift_bridgeObjectRetain();
    sub_1A3C8BC40((uint64_t)&v10, v2, v3);
    return sub_1A3C8C778((uint64_t)&v12);
  }
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A3C85624();
  swift_allocError();
  static VisionError.invalidArgument(message:)(0, 0xE000000000000000, v8);
  swift_bridgeObjectRelease();
  swift_willThrow();
  return sub_1A3C8C778((uint64_t)&v12);
}

uint64_t sub_1A3E09088(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3E09134(&qword_1E95EF430);
  uint64_t result = sub_1A3E09134(&qword_1E95F0CC8);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A3E090F0(uint64_t a1)
{
  uint64_t result = sub_1A3E09134(&qword_1E95F0CD0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3E09134(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NamedObjects();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3E09178()
{
  unint64_t result = qword_1E95F0CD8;
  if (!qword_1E95F0CD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F0CE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0CD8);
  }
  return result;
}

void sub_1A3E091D4(unsigned char *a1@<X8>)
{
  sub_1A3E07580(v1, a1);
}

uint64_t sub_1A3E091F0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 144);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  uint64_t v5 = v4;
  uint64_t result = swift_release();
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v9 = v7 - v5;
  if (v7 == v5)
  {
    uint64_t v10 = 0;
LABEL_28:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v27 = v8[3];
    if (v27 < 2) {
      return (uint64_t)v8;
    }
    unint64_t v28 = v27 >> 1;
    BOOL v15 = __OFSUB__(v28, v10);
    uint64_t v29 = v28 - v10;
    if (!v15)
    {
      id v8[2] = v29;
      return (uint64_t)v8;
    }
  }
  else
  {
    if (v7 <= v5) {
      goto LABEL_34;
    }
    if (v5 < 0)
    {
LABEL_35:
      __break(1u);
    }
    else if (v7)
    {
      uint64_t v10 = 0;
      unint64_t v11 = (uint64_t *)(v3 + 16 * v5 + 40);
      long long v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      while (1)
      {
        uint64_t v14 = *(v11 - 1);
        uint64_t v13 = *v11;
        if (v10)
        {
          uint64_t result = swift_bridgeObjectRetain();
          BOOL v15 = __OFSUB__(v10--, 1);
          if (v15) {
            goto LABEL_32;
          }
        }
        else
        {
          unint64_t v16 = v8[3];
          if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_33;
          }
          int64_t v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
          if (v17 <= 1) {
            uint64_t v18 = 1;
          }
          else {
            uint64_t v18 = v17;
          }
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF370);
          uint64_t v19 = (void *)swift_allocObject();
          int64_t v20 = _swift_stdlib_malloc_size(v19);
          uint64_t v21 = v20 - 32;
          if (v20 < 32) {
            uint64_t v21 = v20 - 17;
          }
          uint64_t v22 = v21 >> 4;
          __n128 v19[2] = v18;
          v19[3] = 2 * (v21 >> 4);
          uint64_t v23 = v19 + 4;
          uint64_t v24 = v8[3] >> 1;
          long long v12 = &v19[2 * v24 + 4];
          uint64_t v25 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - v24;
          if (v8[2])
          {
            if (v19 != v8 || v23 >= &v8[2 * v24 + 4]) {
              memmove(v23, v8 + 4, 16 * v24);
            }
            swift_bridgeObjectRetain();
            id v8[2] = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          uint64_t result = swift_release();
          uint64_t v8 = v19;
          BOOL v15 = __OFSUB__(v25, 1);
          uint64_t v10 = v25 - 1;
          if (v15)
          {
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
        }
        v11 += 2;
        *long long v12 = v14;
        v12[1] = v13;
        v12 += 2;
        if (!--v9) {
          goto LABEL_28;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3E093D8(uint64_t *a1, void *a2, unint64_t a3)
{
  uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v3 + 144))();
  unint64_t v9 = v8;
  uint64_t result = swift_release();
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_17:
    *a1 = v7;
    a1[1] = v9;
    return a3;
  }
  if ((a3 & 0x8000000000000000) != 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v11 = *(void *)(v7 + 16);
  if (v11 == v9)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_17;
  }
  if (v11 > v9)
  {
    uint64_t v12 = *(void *)(v7 + 16 * v9 + 40);
    uint64_t v13 = v9 + 1;
    *a2 = *(void *)(v7 + 16 * v9 + 32);
    a2[1] = v12;
    if (a3 == 1)
    {
LABEL_16:
      swift_bridgeObjectRetain();
      unint64_t v9 = v13;
      goto LABEL_17;
    }
    if (v13 == v11)
    {
      uint64_t v13 = v11;
      a3 = v11 - v9;
      goto LABEL_16;
    }
    unint64_t v20 = v11 - v9;
    uint64_t v14 = 0;
    uint64_t v19 = v11;
    uint64_t v15 = v9 - v11 + 1;
    unint64_t v16 = (uint64_t *)(v7 + 16 * v9 + 56);
    int64_t v17 = a2 + 3;
    while (v9 + v14 + 1 < *(void *)(v7 + 16))
    {
      uint64_t v18 = *v16;
      *(v17 - 1) = *(v16 - 1);
      *int64_t v17 = v18;
      if (a3 - 2 == v14)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = v9 + v14 + 2;
        goto LABEL_16;
      }
      uint64_t result = swift_bridgeObjectRetain();
      ++v14;
      v16 += 2;
      v17 += 2;
      if (!(v15 + v14))
      {
        a3 = v20;
        uint64_t v13 = v19;
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1A3E09558@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A3E09BE8(a1, (uint64_t (*)(uint64_t, void, void))sub_1A3E07F24, a2);
}

void type metadata accessor for IOSurfaceRef(uint64_t a1)
{
}

uint64_t sub_1A3E09598@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v7 = *a1;
  if (*(void *)(*a1 + 16))
  {
    uint64_t v8 = *(void *)(v3 + 16);
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1A3C8C844(v5, v6);
    if (v10)
    {
      sub_1A3C8D3F0(*(void *)(v7 + 56) + 32 * v9, (uint64_t)&v15);
      swift_bridgeObjectRelease();
      if (*((void *)&v16 + 1))
      {
        sub_1A3C856F4(&v15, v17);
        *(void *)&long long v15 = 0;
        *((void *)&v15 + 1) = 0xE000000000000000;
        sub_1A4096A2C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A4096BAC();
        sub_1A3D5D2DC(2);
        swift_bridgeObjectRelease();
        sub_1A3C856F4(v17, &v15);
        int v11 = swift_dynamicCast();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, v11 ^ 1u, 1, v8);
      }
    }
    else
    {
      long long v15 = 0u;
      long long v16 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  sub_1A3C8C778((uint64_t)&v15);
  *(void *)&v17[0] = 0;
  *((void *)&v17[0] + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  *(void *)&v17[0] = 0xD000000000000011;
  *((void *)&v17[0] + 1) = 0x80000001A40B8B70;
  sub_1A409621C();
  sub_1A409621C();
  long long v13 = v17[0];
  sub_1A3C85624();
  swift_allocError();
  static VisionError.invalidArgument(message:)(v13, *((uint64_t *)&v13 + 1), v14);
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_1A3E09838@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1A3C8C844(v4, v5);
  if ((v8 & 1) == 0)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A3C8D3F0(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_8:
    sub_1A3C8C778((uint64_t)&v12);
    *(void *)&v14[0] = 0;
    *((void *)&v14[0] + 1) = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    *(void *)&v14[0] = 0xD000000000000011;
    *((void *)&v14[0] + 1) = 0x80000001A40B8B70;
    sub_1A409621C();
    sub_1A409621C();
    long long v10 = v14[0];
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(v10, *((uint64_t *)&v10 + 1), v11);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  sub_1A3C856F4(&v12, v14);
  *(void *)&long long v12 = 0;
  *((void *)&v12 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A4096BAC();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  sub_1A3C856F4(v14, &v12);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    *a2 = xmmword_1A4107600;
  }
  return result;
}

void sub_1A3E09AAC(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *a1;
  sub_1A3C8F944(v4);
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1C9E8]);
  unint64_t v7 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithDictionary_, v7);

  sub_1A3C8F944(v5);
  unint64_t v9 = (void *)sub_1A409600C();
  swift_bridgeObjectRelease();
  LOBYTE(v5) = objc_msgSend(v8, sel_isEqualToDictionary_, v9);

  *a2 = v5;
}

uint64_t sub_1A3E09BBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A3E09BE8(a1, (uint64_t (*)(uint64_t, void, void))sub_1A3E07CB8, a2);
}

uint64_t sub_1A3E09BE8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(a1, *(void *)(v3 + 16), *(void *)(v3 + 24));
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1A3E09C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v34 = a9;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF458);
  MEMORY[0x1F4188790](v18 - 8);
  unint64_t v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1A4095B9C();
  uint64_t v43 = *(void *)(v21 - 8);
  __n128 v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(*(void *)(*(void *)(a14 + 16) + 16)
                                                                        + 40))(a1, a2, a13, v22);
  if (!v15)
  {
    v32[1] = v14;
    uint64_t v33 = v24;
    uint64_t v26 = v43;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v20, 1, v21) == 1)
    {
      sub_1A3E09F0C((uint64_t)v20);
      unint64_t v41 = 0;
      unint64_t v42 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      unint64_t v41 = 0xD00000000000001BLL;
      unint64_t v42 = 0x80000001A40B8E80;
      sub_1A409621C();
      unint64_t v27 = v41;
      unint64_t v28 = v42;
      sub_1A3C85624();
      swift_allocError();
      *(void *)uint64_t v29 = v27;
      *(void *)(v29 + 8) = v28;
      *(_DWORD *)(v29 + 16) = 0;
      *(unsigned char *)(v29 + 20) = 2;
      return swift_willThrow();
    }
    else
    {
      uint64_t v30 = (uint64_t)v33;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v33, v20, v21);
      type metadata accessor for E5RTProgramLibrary();
      uint64_t v31 = sub_1A3E05E94(v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 32))(v31, v35, v36, v37);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v30, v21);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1A3E09F0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF458);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1A3E09F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 36);
  uint64_t v4 = (int *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1A3E09FDC()
{
  return 0x7366664F65747962;
}

uint64_t sub_1A3E09FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7366664F65747962 && a2 == 0xEB00000000737465)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A3E0A0AC(uint64_t a1)
{
  unint64_t v2 = sub_1A3E0A298();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E0A0E8(uint64_t a1)
{
  unint64_t v2 = sub_1A3E0A298();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3E0A124(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0CF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E0A298();
  sub_1A4096FEC();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D00);
  sub_1A3E0B0C0(&qword_1E95F0D08);
  sub_1A4096DBC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A3E0A298()
{
  unint64_t result = qword_1E963A520[0];
  if (!qword_1E963A520[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963A520);
  }
  return result;
}

uint64_t sub_1A3E0A2EC(uint64_t a1)
{
  sub_1A4096F2C();
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A4096F3C();
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    do
    {
      v3 += 4;
      sub_1A4096F5C();
      --v2;
    }
    while (v2);
  }
  return sub_1A4096F7C();
}

void *sub_1A3E0A360@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1A3E0A8D8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A3E0A38C(void *a1)
{
  return sub_1A3E0A124(a1, *v1);
}

uint64_t sub_1A3E0A3A8()
{
  return sub_1A3E0A2EC(*v0);
}

uint64_t sub_1A3E0A3B0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t result = sub_1A4096F3C();
  if (v2)
  {
    uint64_t v4 = v1 + 32;
    do
    {
      v4 += 4;
      uint64_t result = sub_1A4096F5C();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1A3E0A404()
{
  uint64_t v1 = *v0;
  sub_1A4096F2C();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1A4096F3C();
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 4;
      sub_1A4096F5C();
      --v2;
    }
    while (v2);
  }
  return sub_1A4096F7C();
}

BOOL sub_1A3E0A470(uint64_t *a1, uint64_t *a2)
{
  return sub_1A3E09F70(*a1, *a2);
}

uint64_t sub_1A3E0A47C(uint64_t a1)
{
  unint64_t v2 = sub_1A3E0AC1C();

  return sub_1A3E0B16C(a1, v2);
}

unint64_t sub_1A3E0A4BC@<X0>(unsigned __int16 a1@<W0>, int64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1A3E257B4(a1);
  if (!v7)
  {
    sub_1A3C85624();
    swift_allocError();
    uint64_t v20 = 0xD00000000000001BLL;
    __n128 v22 = "Element size cannot be zero";
LABEL_13:
    unint64_t v17 = (unint64_t)(v22 - 32) | 0x8000000000000000;
    uint64_t v19 = v21;
    goto LABEL_14;
  }
  unint64_t v8 = v7;
  unint64_t v9 = sub_1A3E0AC1C();
  unsigned int v10 = sub_1A3E0B124((uint64_t)&type metadata for TensorStrides, v9);
  if (!v10)
  {
    sub_1A3C85624();
    swift_allocError();
    uint64_t v20 = 0xD000000000000013;
    __n128 v22 = "Rank cannot be zero";
    goto LABEL_13;
  }
  unsigned int v13 = v10;
  unint64_t v14 = *(void *)(a2 + 16);
  if (v14 < v10) {
    goto LABEL_29;
  }
  uint64_t v3 = (unsigned int *)(a2 + 32);
  if (*(_DWORD *)(a2 + 32 + 4 * v10 - 4) != v8) {
    goto LABEL_10;
  }
  uint64_t v15 = sub_1A3E0A8C4(MEMORY[0x1E4FBC860]);
  unint64_t v8 = *((void *)v15 + 2);
  if (!v8) {
    goto LABEL_30;
  }
  uint64_t v11 = v15;
  *((_DWORD *)v15 + 8) = 1;
  if (v14 == 1) {
    goto LABEL_31;
  }
  unsigned int v16 = *(_DWORD *)(a2 + 36);
  if (!v16) {
    goto LABEL_32;
  }
  if (v16 > *v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1A3C85624();
    swift_allocError();
    unint64_t v17 = 0x80000001A40B8EA0;
    uint64_t v19 = v18;
    uint64_t v20 = 0xD000000000000017;
LABEL_14:
    static VisionError.internalError(message:)(v20, v17, v19);
    return swift_willThrow();
  }
  uint64_t v29 = a3;
  LODWORD(v4) = v13 - 1;
  unint64_t v12 = *((void *)v15 + 3);
  a2 = v8 + 1;
  LODWORD(a3) = *v3 / v16;
  if (v8 >= v12 >> 1) {
    goto LABEL_33;
  }
  while (1)
  {
    *((void *)v11 + 2) = a2;
    *(_DWORD *)&v11[4 * v8 + 32] = a3;
    if (!v4) {
      break;
    }
    v8 += 9;
    unsigned int v24 = 1;
    while (1)
    {
      uint64_t v4 = v24;
      if (v14 <= v24) {
        break;
      }
      uint64_t v25 = v24 + 1;
      if (v4 + 1 >= v14) {
        goto LABEL_27;
      }
      unsigned int v26 = v3[v25];
      if (!v26) {
        goto LABEL_28;
      }
      LODWORD(a3) = v3[v4];
      if (v26 > a3) {
        goto LABEL_9;
      }
      unint64_t v27 = *((void *)v11 + 3);
      a2 = v8 - 7;
      if (v8 - 8 >= v27 >> 1) {
        uint64_t v11 = sub_1A3E0A7C8((char *)(v27 > 1), v8 - 7, 1, v11);
      }
      *((void *)v11 + 2) = a2;
      *(_DWORD *)&v11[4 * v8++] = a3 / v26;
      unsigned int v24 = v4 + 1;
      if (v13 == v4 + 1) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    uint64_t v11 = sub_1A3E0A7C8((char *)(v12 > 1), a2, 1, v11);
  }
LABEL_25:
  uint64_t v28 = TtTrkRpnNode::config((TtTrkRpnNode *)v11);
  v29[3] = (uint64_t)&type metadata for TensorShape;
  unint64_t result = sub_1A3E0AC70();
  unsigned char v29[4] = result;
  *uint64_t v29 = v28;
  return result;
}

uint64_t sub_1A3E0A784@<X0>(void *a1@<X0>, unsigned __int16 a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1A3E0AA74(a1, a2);
  *a3 = result;
  return result;
}

unint64_t sub_1A3E0A7AC@<X0>(unsigned __int16 a1@<W0>, uint64_t *a2@<X8>)
{
  return sub_1A3E0A4BC(a1, *v2, a2);
}

char *sub_1A3E0A7C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D48);
    unsigned int v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    unsigned int v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unsigned int v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A3E0A8C4(uint64_t a1)
{
  return sub_1A3E0A7C8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1A3E0A8D8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D50);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E0A298();
  sub_1A4096FDC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D00);
    sub_1A3E0B0C0(&qword_1E95F0D58);
    sub_1A4096CFC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    int64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1A3E0AA74(void *a1, unsigned __int16 a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  unsigned int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40))(v4, v5);
  uint64_t v7 = v6;
  if (v6)
  {
    uint64_t v8 = sub_1A409636C();
    *(void *)(v8 + 16) = v7;
    bzero((void *)(v8 + 32), 4 * v7);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  uint64_t result = sub_1A3E257B4(a2);
  if (v7)
  {
    LODWORD(v13) = result;
    unint64_t v14 = 0;
    unsigned int v15 = 1;
    while (1)
    {
      unint64_t v13 = v13 * (unint64_t)v15;
      if ((v13 & 0xFFFFFFFF00000000) != 0) {
        break;
      }
      if (*(void *)(v11 + 16) <= v14) {
        goto LABEL_14;
      }
      unint64_t v16 = *(void *)(v8 + 16);
      if (v16 < v14) {
        goto LABEL_15;
      }
      unsigned int v15 = *(_DWORD *)(v11 + 32 + 4 * v14);
      if (v16 >= *(void *)(v8 + 24) >> 1)
      {
        uint64_t v8 = (uint64_t)sub_1A3E0A7C8((char *)1, v16 + 1, 1, (char *)v8);
        unint64_t v16 = *(void *)(v8 + 16);
      }
      uint64_t v17 = v8 + 4 * v14;
      uint64_t result = (uint64_t)memmove((void *)(v17 + 36), (const void *)(v17 + 32), 4 * (v16 - v14));
      ++*(void *)(v8 + 16);
      *(_DWORD *)(v17 + 32) = v13;
      if (++v14 == v7) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v8;
  }
  return result;
}

unint64_t sub_1A3E0AC1C()
{
  unint64_t result = qword_1E95F0D10;
  if (!qword_1E95F0D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0D10);
  }
  return result;
}

unint64_t sub_1A3E0AC70()
{
  unint64_t result = qword_1E95F0D18;
  if (!qword_1E95F0D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0D18);
  }
  return result;
}

unint64_t sub_1A3E0ACC4(void *a1)
{
  a1[1] = sub_1A3E0AD04();
  a1[2] = sub_1A3E0AD58();
  a1[3] = sub_1A3E0ADAC();
  unint64_t result = sub_1A3E0AE00();
  a1[4] = result;
  return result;
}

unint64_t sub_1A3E0AD04()
{
  unint64_t result = qword_1E95F0D20;
  if (!qword_1E95F0D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0D20);
  }
  return result;
}

unint64_t sub_1A3E0AD58()
{
  unint64_t result = qword_1E95F0D28;
  if (!qword_1E95F0D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0D28);
  }
  return result;
}

unint64_t sub_1A3E0ADAC()
{
  unint64_t result = qword_1E95F0D30;
  if (!qword_1E95F0D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0D30);
  }
  return result;
}

unint64_t sub_1A3E0AE00()
{
  unint64_t result = qword_1E95F0D38;
  if (!qword_1E95F0D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0D38);
  }
  return result;
}

unint64_t sub_1A3E0AE58()
{
  unint64_t result = qword_1E95F0D40;
  if (!qword_1E95F0D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0D40);
  }
  return result;
}

unint64_t sub_1A3E0AEAC(uint64_t a1)
{
  unint64_t result = sub_1A3E0AC1C();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for TensorStrides()
{
  return &type metadata for TensorStrides;
}

unsigned char *storeEnumTagSinglePayload for TensorStrides.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3E0AF80);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TensorStrides.CodingKeys()
{
  return &type metadata for TensorStrides.CodingKeys;
}

unint64_t sub_1A3E0AFBC()
{
  unint64_t result = qword_1E963A9B0[0];
  if (!qword_1E963A9B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963A9B0);
  }
  return result;
}

unint64_t sub_1A3E0B014()
{
  unint64_t result = qword_1E963AAC0;
  if (!qword_1E963AAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963AAC0);
  }
  return result;
}

unint64_t sub_1A3E0B06C()
{
  unint64_t result = qword_1E963AAC8[0];
  if (!qword_1E963AAC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963AAC8);
  }
  return result;
}

uint64_t sub_1A3E0B0C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E95F0D00);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3E0B124(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)((*(uint64_t (**)(void))(a2 + 48))() + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!HIDWORD(v2)) {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3E0B16C(uint64_t a1, uint64_t a2)
{
  return 0x203A6B6E6172;
}

uint64_t sub_1A3E0B2A4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a6 + 8);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 72))(a1, a2, a5, v10);
  if (v12 >> 60 == 15)
  {
    sub_1A3D5D2DC(2);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a5, v10);
    if (!v20)
    {
      unint64_t v14 = (__IOSurface *)result;
      sub_1A4096A2C();
      sub_1A409621C();
      sub_1A409621C();
      sub_1A409621C();
      sub_1A409621C();
      type metadata accessor for IOSurfaceRef(0);
      sub_1A4096BAC();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = a3;
      *(void *)(v15 + 24) = a4;
      swift_retain();
      sub_1A3E054E4(v14, 1u, (void (*)(__IOSurface *))sub_1A3E0B83C);

      return swift_release();
    }
  }
  else
  {
    uint64_t v16 = v11;
    unint64_t v17 = v12;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A3C7D1A8(v16, v17);
    sub_1A4095BEC();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D3CECC(v16, v17);
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    sub_1A3C7D1A8(v16, v17);
    a3(v16, v17);
    sub_1A3D3CECC(v16, v17);
    return sub_1A3D3CECC(v16, v17);
  }
  return result;
}

uint64_t sub_1A3E0B610(__IOSurface *a1, void (*a2)(uint64_t, unint64_t))
{
  uint64_t v4 = sub_1A4095BCC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  BaseAddress = IOSurfaceGetBaseAddress(a1);
  size_t AllocSize = IOSurfaceGetAllocSize(a1);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F27740], v4);
  sub_1A4095BBC();
  if (AllocSize)
  {
    sub_1A4095A9C();
    swift_allocObject();
    swift_retain();
    uint64_t v10 = sub_1A4095A4C();
    uint64_t v11 = sub_1A3E0C908(v10, AllocSize);
    unint64_t v13 = v12;
    swift_release();
  }
  else
  {
    unint64_t v14 = (void (*)(void *, void))sub_1A4095BBC();
    v14(BaseAddress, 0);
    swift_release();
    swift_release();
    uint64_t v11 = 0;
    unint64_t v13 = 0xC000000000000000;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a2(v11, v13);
  return sub_1A3C7D218(v11, v13);
}

uint64_t sub_1A3E0B804()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3E0B83C(__IOSurface *a1)
{
  return sub_1A3E0B610(a1, *(void (**)(uint64_t, unint64_t))(v1 + 16));
}

uint64_t sub_1A3E0B858(uint64_t a1, void (*a2)(void *, __n128), uint64_t a3, uint64_t a4, uint64_t a5)
{
  kern_return_t v31;
  __IOSurface *v32;
  void *BaseAddress;
  size_t AllocSize;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  uint64_t *v51;
  void *v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  void (*v56)(void *, void);
  char v57;
  uint64_t v58;
  uint64_t i;
  __IOSurface *v60;
  __IOSurface *v61;
  uint64_t v62;
  uint64_t j;
  __IOSurface *v64;
  __IOSurface *v65;
  uint64_t v66;
  uint64_t m;
  __IOSurface *v68;
  __IOSurface *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t k;
  __IOSurface *v74;
  __IOSurface *v75;
  uint64_t result;
  void v77[2];
  void (*v78)(void *, __n128);
  uint64_t v79;
  void (**v80)(char *, uint64_t);
  void (**v81)(char *, void, uint64_t);
  unsigned int v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  void *v95;
  unint64_t v96;

  uint64_t v7 = v6;
  CGFloat v89 = sub_1A4095BCC();
  __n128 v14 = MEMORY[0x1F4188790](v89);
  char v84 = (char *)v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGRect v96 = MEMORY[0x1E4FBC860];
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC868];
LABEL_26:
    a2(v19, v14);
    if (v7)
    {
      swift_bridgeObjectRelease();
      unint64_t v42 = v96;
      if (v96 >> 62)
      {
LABEL_61:
        swift_bridgeObjectRetain();
        long long v58 = sub_1A4096BFC();
        if (!v58) {
          return swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        long long v58 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v58) {
          return swift_bridgeObjectRelease_n();
        }
      }
      if (v58 >= 1)
      {
        for (unint64_t i = 0; i != v58; ++i)
        {
          if ((v42 & 0xC000000000000001) != 0) {
            int v60 = (__IOSurface *)MEMORY[0x1A6254720](i, v42);
          }
          else {
            int v60 = (__IOSurface *)*(id *)(v42 + 8 * i + 32);
          }
          long long v61 = v60;
          IOSurfaceUnlock(v60, 1u, 0);
        }
        return swift_bridgeObjectRelease_n();
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      long long v58 = v96;
      if (!(v96 >> 62))
      {
        uint64_t v62 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v62) {
          return swift_bridgeObjectRelease_n();
        }
        goto LABEL_37;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1A4096BFC();
    if (!v62) {
      return swift_bridgeObjectRelease_n();
    }
LABEL_37:
    if (v62 < 1)
    {
      __break(1u);
LABEL_67:
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1A4096BFC();
      if (v66) {
        goto LABEL_45;
      }
    }
    else
    {
      for (j = 0; j != v62; ++j)
      {
        if ((v58 & 0xC000000000000001) != 0) {
          uint64_t v64 = (__IOSurface *)MEMORY[0x1A6254720](j, v58);
        }
        else {
          uint64_t v64 = (__IOSurface *)*(id *)(v58 + 8 * j + 32);
        }
        unint64_t v65 = v64;
        IOSurfaceUnlock(v64, 1u, 0);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  v77[1] = a3;
  CGFloat v78 = a2;
  CGRect v92 = v6;
  uint64_t v17 = *(void *)(a5 + 8);
  uint64_t v90 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 72);
  uint64_t v91 = v17 + 72;
  uint64_t v83 = v17 + 56;
  int v82 = *MEMORY[0x1E4F27740];
  CGFloat v80 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v81 = (void (**)(char *, void, uint64_t))(v13 + 104);
  swift_bridgeObjectRetain();
  CGFloat v79 = a1;
  uint64_t v18 = (uint64_t *)(a1 + 40);
  uint64_t v19 = (void *)MEMORY[0x1E4FBC868];
  CGSize v86 = a4;
  char v87 = v5;
  CGSize v88 = v17;
  while (1)
  {
    uint64_t v24 = *(v18 - 1);
    uint64_t v23 = *v18;
    uint64_t v93 = v18;
    swift_bridgeObjectRetain();
    uint64_t v25 = v90(v24, v23, a4, v17);
    uint64_t v94 = v16;
    if (v26 >> 60 != 15)
    {
      uint64_t v40 = v26;
      uint64_t v85 = v25;
      sub_1A3C7D1A8(v25, v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v95 = v19;
      unint64_t v42 = (unint64_t)v19;
      uint64_t v44 = sub_1A3C8C844(v24, v23);
      uint64_t v45 = v19[2];
      uint64_t v46 = (v43 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46))
      {
        __break(1u);
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      uint64_t v48 = v43;
      if (v19[3] >= v47)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v42 = (unint64_t)&v95;
          sub_1A3E0C67C();
        }
      }
      else
      {
        sub_1A3E0C1E4(v47, isUniquelyReferenced_nonNull_native);
        unint64_t v42 = (unint64_t)v95;
        uint64_t v49 = sub_1A3C8C844(v24, v23);
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_73;
        }
        uint64_t v44 = v49;
      }
      uint64_t v17 = v88;
      uint64_t v19 = v95;
      if (v48)
      {
        uint64_t v20 = v95[7] + 16 * v44;
        sub_1A3C7D218(*(void *)v20, *(void *)(v20 + 8));
        uint64_t v21 = v85;
        *(void *)uint64_t v20 = v85;
        *(void *)(v20 + 8) = v40;
      }
      else
      {
        v95[(v44 >> 6) + 8] |= 1 << v44;
        uint64_t v51 = (uint64_t *)(v19[6] + 16 * v44);
        *uint64_t v51 = v24;
        v51[1] = v23;
        long long v52 = (void *)(v19[7] + 16 * v44);
        uint64_t v21 = v85;
        *long long v52 = v85;
        v52[1] = v40;
        uint64_t v53 = v19[2];
        unint64_t v54 = __OFADD__(v53, 1);
        uint64_t v55 = v53 + 1;
        if (v54) {
          goto LABEL_60;
        }
        __n128 v19[2] = v55;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A3D3CECC(v21, v40);
      a4 = v86;
      uint64_t v22 = v94;
      goto LABEL_5;
    }
    unint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    uint64_t v85 = v24;
    uint64_t v28 = v92;
    uint64_t v29 = (__IOSurface *)v27(v24, v23, a4, v17);
    if (v28) {
      break;
    }
    uint64_t v30 = v29;
    CGRect v92 = 0;
    uint64_t v31 = IOSurfaceLock(v29, 1u, 0);
    uint64_t v32 = v30;
    MEMORY[0x1A6253F80]();
    if (*(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1A409634C();
    }
    sub_1A409638C();
    sub_1A409632C();
    if (v31)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A3C85624();
      swift_allocError();
      *(void *)unint64_t v70 = 0xD00000000000001BLL;
      *(void *)(v70 + 8) = 0x80000001A40B87D0;
      *(_DWORD *)(v70 + 16) = 0;
      *(unsigned char *)(v70 + 20) = 1;
      swift_willThrow();

      unint64_t v71 = v96;
      if (v96 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v72 = sub_1A4096BFC();
        if (!v72) {
          return swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        uint64_t v72 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v72) {
          return swift_bridgeObjectRelease_n();
        }
      }
      if (v72 < 1) {
        goto LABEL_72;
      }
      for (k = 0; k != v72; ++k)
      {
        if ((v71 & 0xC000000000000001) != 0) {
          CGFloat v74 = (__IOSurface *)MEMORY[0x1A6254720](k, v71);
        }
        else {
          CGFloat v74 = (__IOSurface *)*(id *)(v71 + 8 * k + 32);
        }
        CGFloat v75 = v74;
        IOSurfaceUnlock(v74, 1u, 0);
      }
      return swift_bridgeObjectRelease_n();
    }
    BaseAddress = IOSurfaceGetBaseAddress(v32);
    size_t AllocSize = IOSurfaceGetAllocSize(v32);
    uint64_t v35 = v84;
    (*v81)(v84, v82, v89);
    sub_1A4095BBC();
    if (AllocSize)
    {
      sub_1A4095A9C();
      swift_allocObject();
      swift_retain();
      uint64_t v36 = sub_1A4095A4C();
      uint64_t v37 = sub_1A3E0C908(v36, AllocSize);
      uint64_t v39 = v38;
      swift_release();
    }
    else
    {
      char v56 = (void (*)(void *, void))sub_1A4095BBC();
      v56(BaseAddress, 0);
      swift_release();
      swift_release();
      uint64_t v37 = 0;
      uint64_t v39 = 0xC000000000000000;
    }
    (*v80)(v35, v89);
    sub_1A3C7D1A8(v37, v39);
    int v57 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v19;
    sub_1A3E0C4F4(v37, v39, v85, v23, v57);
    uint64_t v19 = v95;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3C7D218(v37, v39);

    a4 = v86;
    uint64_t v22 = v94;
    uint64_t v17 = v88;
LABEL_5:
    uint64_t v18 = v93 + 2;
    uint64_t v16 = v22 - 1;
    if (!v16)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = v92;
      a2 = v78;
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = v96;
  if (v96 >> 62) {
    goto LABEL_67;
  }
  uint64_t v66 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v66) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_45:
  if (v66 >= 1)
  {
    for (m = 0; m != v66; ++m)
    {
      if ((v62 & 0xC000000000000001) != 0) {
        uint64_t v68 = (__IOSurface *)MEMORY[0x1A6254720](m, v62);
      }
      else {
        uint64_t v68 = (__IOSurface *)*(id *)(v62 + 8 * m + 32);
      }
      uint64_t v69 = v68;
      IOSurfaceUnlock(v68, 1u, 0);
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  uint64_t result = sub_1A4096EBC();
  __break(1u);
  return result;
}

uint64_t sub_1A3E0C0A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A3E0C134(a1, a2, a3, a4, a5, (uint64_t (*)(void))type metadata accessor for IOSurfaceRef, 0x6361667275534F49, 0xEC00000066655265);
}

uint64_t sub_1A3E0C0F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A3E0C134(a1, a2, a3, a4, a5, (uint64_t (*)(void))type metadata accessor for CVBuffer, 0xD000000000000010, 0x80000001A40B9020);
}

uint64_t sub_1A3E0C134(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8)
{
  v18[3] = a6(0);
  v18[0] = a1;
  __n128 v14 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24);
  id v15 = a1;
  v14(v18, a7, a8, a2, a3, a4, a5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t sub_1A3E0C1E4(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D60);
  char v6 = a2;
  uint64_t v7 = sub_1A4096C1C();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              int v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1A3C7D1A8(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1A4096F2C();
      sub_1A40961CC();
      uint64_t result = sub_1A4096F7C();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      uint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *uint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *int v3 = v8;
  return result;
}

uint64_t sub_1A3E0C4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1A3C8C844(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1A3E0C67C();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 16 * v14;
      uint64_t result = sub_1A3C7D218(*(void *)v21, *(void *)(v21 + 8));
      *(void *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A3E0C1E4(v17, a5 & 1);
  unint64_t v23 = sub_1A3C8C844(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A4096EBC();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  int64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *int64_t v25 = a3;
  v25[1] = a4;
  char v26 = (void *)(v20[7] + 16 * v14);
  *char v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v20[2] = v29;

  return swift_bridgeObjectRetain();
}

void *sub_1A3E0C67C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1A3C7D1A8(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A3E0C844(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1A3E0C908(uint64_t result, uint64_t a2)
{
  if (!a2)
  {
    swift_release();
    return 0;
  }
  if (a2 > 14)
  {
    if ((unint64_t)a2 < 0x7FFFFFFF) {
      return a2 << 32;
    }
    sub_1A4095BFC();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = a2;
    return v3;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = (unsigned char *)sub_1A4095A5C();
    if (!v4)
    {
LABEL_10:
      uint64_t v5 = sub_1A4095A7C();
      if (v5 >= a2) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = v5;
      }
      unint64_t v7 = &v4[v6];
      if (v4) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      uint64_t v3 = sub_1A3E0C844(v4, v8);
      swift_release();
      return v3;
    }
    uint64_t result = sub_1A4095A8C();
    if (!__OFSUB__(0, result))
    {
      v4 -= result;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3E0C9F0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)((*(uint64_t (**)(void))(a2 + 48))() + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!HIDWORD(v2)) {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3E0CA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t (**)(void))(a2 + 48);
  uint64_t v5 = *(void *)(v4() + 16);
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  uint64_t v7 = *(void *)(result + 16);
  if (!v7)
  {
    unint64_t v9 = 1;
LABEL_9:
    swift_bridgeObjectRelease();
    return v9;
  }
  uint64_t v8 = (unsigned int *)(result + 32);
  LODWORD(v9) = 1;
  while (1)
  {
    unsigned int v10 = *v8++;
    unint64_t v9 = v10 * (unint64_t)v9;
    if ((v9 & 0xFFFFFFFF00000000) != 0) {
      break;
    }
    if (!--v7) {
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A3E0CAE4(uint64_t a1, void (**a2)(void, void))
{
  return 0x203A6B6E6172;
}

uint64_t sub_1A3E0CC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(1, a1, a2, a3, a4, a5);
}

uint64_t sub_1A3E0CCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(1, 1, a2, a3, a4, a5);
}

uint64_t sub_1A3E0CCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(a1, v3);
  if (v4)
  {
    uint64_t v6 = 0;
    unint64_t v7 = *(void *)(result + 16);
    uint64_t v8 = v4;
    while (1)
    {
      if (v7 == v6)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (*(_DWORD *)(result + 32 + 4 * v6) != 1) {
        break;
      }
      if (v4 == ++v6)
      {
        uint64_t v6 = 0;
LABEL_18:
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    if (v4 - 1 == v6) {
      goto LABEL_18;
    }
    if (v7 <= v6 + 1) {
      unint64_t v7 = v6 + 1;
    }
    unint64_t v9 = v7 - 1;
    if (v6 + 1 > (unint64_t)v4) {
      uint64_t v8 = v6 + 1;
    }
    uint64_t v10 = v8 - 1;
    uint64_t v11 = v6;
    while (v10 != v11)
    {
      if (v9 == v11) {
        goto LABEL_21;
      }
      if (*(_DWORD *)(result + 4 * v11 + 36) != 1)
      {
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(0xD000000000000024, 0x80000001A40B9060, v12);
        swift_willThrow();
        return v6;
      }
      if (v4 - 1 == ++v11) {
        goto LABEL_18;
      }
    }
LABEL_22:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1A3E0CE64()
{
  uint64_t result = swift_isClassType();
  if (result)
  {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3E0CECC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  unsigned int v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v5 = (void *)sub_1A409614C();
  id v6 = objc_msgSend(v4, sel_URLForResource_withExtension_, v5, 0);

  if (v6)
  {
    sub_1A4095B7C();

    uint64_t v7 = sub_1A4095B9C();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a3, 0, 1, v7);
  }
  else
  {

    uint64_t v9 = sub_1A4095B9C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a3, 1, 1, v9);
  }
}

uint64_t sub_1A3E0CFF4(uint64_t a1, uint64_t a2)
{
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_1A4096A2C();
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_1A409621C();
  uint64_t v4 = *(void *)(a2 + 8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(a1, v4);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v6, a1, v4);
  sub_1A3E0D1C4();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v6, a1, a2);
  sub_1A3E0D218();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1A3E0D1C4()
{
  unint64_t result = qword_1E95F0D68;
  if (!qword_1E95F0D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0D68);
  }
  return result;
}

unint64_t sub_1A3E0D218()
{
  unint64_t result = qword_1E95F0D70;
  if (!qword_1E95F0D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0D70);
  }
  return result;
}

unint64_t sub_1A3E0D26C()
{
  unint64_t result = sub_1A3E0D294(MEMORY[0x1E4FBC860]);
  qword_1E963AB58 = result;
  return result;
}

unint64_t sub_1A3E0D294(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0E28);
  id v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A3C8C844(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A3E0D3B0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_1A4096C2C();
  unint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A3CCB91C(v11, (uint64_t)&v20, a3);
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    unint64_t result = sub_1A3C8C844(v20, v21);
    if (v15) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = (uint64_t *)(v8[6] + 16 * result);
    uint64_t *v16 = v12;
    v16[1] = v13;
    unint64_t result = a4(&v22, v8[7] + 40 * result);
    uint64_t v17 = v8[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    id v8[2] = v19;
    v11 += 56;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for E5RTInferenceFunctionDescriptor()
{
  uint64_t result = qword_1E963AF60;
  if (!qword_1E963AF60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A3E0D540(uint64_t a1, uint64_t a2, void (*a3)(BOOL, uint64_t, uint64_t), void (*a4)(void, void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v7 = a1;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  a3(0, v4, 0);
  uint64_t result = sub_1A3E126F4(v7);
  uint64_t v9 = result;
  int v11 = v10;
  uint64_t v12 = 0;
  uint64_t v13 = v7 + 64;
  char v14 = *(unsigned char *)(v7 + 32);
  uint64_t v26 = v7 + 88;
  uint64_t v28 = v7;
  uint64_t v29 = a4;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << v14)
  {
    unint64_t v17 = (unint64_t)v9 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(v7 + 36) != v11) {
      goto LABEL_28;
    }
    sub_1A3C85678(*(void *)(v7 + 56) + 40 * v9, (uint64_t)v31);
    a4(v31, v30);
    sub_1A3C85678((uint64_t)v30, (uint64_t)v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    uint64_t v5 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      a3(0, *(void *)(v5 + 16) + 1, 1);
      uint64_t v5 = v33;
    }
    unint64_t v19 = *(void *)(v5 + 16);
    unint64_t v18 = *(void *)(v5 + 24);
    if (v19 >= v18 >> 1)
    {
      a3(v18 > 1, v19 + 1, 1);
      uint64_t v5 = v33;
    }
    *(void *)(v5 + 16) = v19 + 1;
    uint64_t v20 = v5 + 40 * v19 + 32;
    a4 = v29;
    uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v29)(v32, v20);
    uint64_t v7 = v28;
    char v14 = *(unsigned char *)(v28 + 32);
    unint64_t v15 = 1 << v14;
    if (v9 >= 1 << v14) {
      goto LABEL_29;
    }
    uint64_t v21 = *(void *)(v13 + 8 * v17);
    if ((v21 & (1 << v9)) == 0) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(v28 + 36) != v11) {
      goto LABEL_31;
    }
    unint64_t v22 = v21 & (-2 << (v9 & 0x3F));
    if (v22)
    {
      unint64_t v15 = __clz(__rbit64(v22)) | v9 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v16 = v4;
    }
    else
    {
      unint64_t v23 = v17 + 1;
      unint64_t v24 = (v15 + 63) >> 6;
      uint64_t v16 = v4;
      if (v17 + 1 < v24)
      {
        unint64_t v25 = *(void *)(v13 + 8 * v23);
        if (!v25)
        {
          unint64_t v23 = v17 + 2;
          if (v17 + 2 >= v24) {
            goto LABEL_4;
          }
          unint64_t v25 = *(void *)(v13 + 8 * v23);
          if (!v25)
          {
            while (v24 - 3 != v17)
            {
              unint64_t v25 = *(void *)(v26 + 8 * v17++);
              if (v25)
              {
                unint64_t v23 = v17 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        unint64_t v15 = __clz(__rbit64(v25)) + (v23 << 6);
      }
    }
LABEL_4:
    ++v12;
    uint64_t v9 = v15;
    if (v12 == v16) {
      return v5;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A3E0D7D8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1A3D4F15C(0, v1, 0);
  uint64_t v2 = v26;
  uint64_t result = sub_1A3E1277C(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v5;
  uint64_t v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v25 = *v12;
    unint64_t v15 = *(void *)(v26 + 16);
    unint64_t v14 = *(void *)(v26 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15 >= v14 >> 1) {
      uint64_t result = (uint64_t)sub_1A3D4F15C((char *)(v14 > 1), v15 + 1, 1);
    }
    *(void *)(v26 + 16) = v15 + 1;
    uint64_t v16 = v26 + 16 * v15;
    *(void *)(v16 + 32) = v25;
    *(void *)(v16 + 40) = v13;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_27;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A3E0D9E4@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for E5RTInferenceFunctionDescriptor();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A3E0D540(v2, (uint64_t)&v5, (void (*)(BOOL, uint64_t, uint64_t))sub_1A3E1016C, (void (*)(void, void))sub_1A3C856DC);
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16) == 1)
  {
    sub_1A3C85678(v3 + 32, a1);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3E0DA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v11 = *(_DWORD *)(a6 + 8);
  uint64_t v12 = (int *)type metadata accessor for E5RTInferenceFunctionDescriptor();
  uint64_t v13 = a7 + v12[6];
  *(void *)(v13 + 32) = 0;
  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  uint64_t v58 = v13;
  uint64_t v61 = v12[7];
  uint64_t v14 = a7 + v12[12];
  *(void *)(v14 + 32) = 0;
  *(_OWORD *)uint64_t v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(uint64_t (**)(uint64_t))(*(void *)v15 + 120);
  uint64_t v17 = swift_retain();
  uint64_t v67 = v16(v17);
  uint64_t v68 = v18;
  sub_1A409621C();
  uint64_t v59 = a1;
  swift_bridgeObjectRetain();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  *(void *)&v66[0] = *(void *)a6;
  DWORD2(v66[0]) = v11;
  sub_1A3E27C44(v67, v68, (uint64_t)v66, (uint64_t)&v67);
  uint64_t v19 = v67;
  uint64_t v20 = v68;
  int v22 = v69;
  int v21 = v70;
  int v23 = v71;
  uint64_t v24 = a7 + v12[11];
  *(void *)uint64_t v24 = v67;
  *(void *)(v24 + 8) = v20;
  *(_DWORD *)(v24 + 16) = v22;
  *(_DWORD *)(v24 + 20) = v21;
  int v56 = v23;
  int v57 = v21;
  uint64_t v55 = v24;
  *(_DWORD *)(v24 + 24) = v23;
  uint64_t v25 = v15 + OBJC_IVAR____TtC6Vision18E5RTProgramLibrary_url;
  uint64_t v26 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a7, v25, v26);
  *(void *)(a7 + v61) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1A3E12A40(a2);
  swift_bridgeObjectRelease();
  *(void *)(a7 + v12[8]) = v27;
  uint64_t v28 = sub_1A3E12A40(a4);
  swift_bridgeObjectRelease();
  uint64_t v62 = v12;
  uint64_t v64 = a7;
  *(void *)(a7 + v12[9]) = v28;
  uint64_t v29 = (void *)sub_1A3E0D3B0(MEMORY[0x1E4FBC860], &qword_1E95F0E30, &qword_1E95F0E38, (uint64_t (*)(uint64_t *, unint64_t))sub_1A3C856DC);
  uint64_t v30 = *(void *)(a3 + 16);
  if (!v30)
  {
    uint64_t v51 = a5;
LABEL_18:
    swift_bridgeObjectRelease();
    *(void *)(v64 + v62[10]) = v29;
    sub_1A3E12CC0(v51, v58);
    *(void *)(v64 + v62[5]) = v59;
    swift_retain();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v55 = v19;
    *(void *)(v55 + 8) = v20;
    *(_DWORD *)(v55 + 16) = v22;
    *(_DWORD *)(v55 + 20) = v57;
    *(_DWORD *)(v55 + 24) = v56;
    uint64_t v67 = 0;
    uint64_t v68 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_release();
    swift_release();
    return sub_1A3CA2EB8(v51, &qword_1E95F0D78);
  }
  int v53 = v22;
  uint64_t v54 = v19;
  uint64_t v31 = a3 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1A3C85678(v31, (uint64_t)&v67);
    uint64_t v34 = v71;
    uint64_t v33 = v72;
    __swift_project_boxed_opaque_existential_1(&v67, v71);
    uint64_t v35 = (*(uint64_t (**)(uint64_t))(*(void *)(v33 + 8) + 40))(v34);
    uint64_t v37 = v36;
    sub_1A3C85678((uint64_t)&v67, (uint64_t)v66);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = sub_1A3C8C844(v35, v37);
    uint64_t v41 = v29[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      break;
    }
    char v44 = v39;
    if (v29[3] >= v43)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v39) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1A3E107FC(&qword_1E95F0E30, (void (*)(unsigned char *, uint64_t))sub_1A3C856DC);
        if (v44) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1A3E104DC(v43, isUniquelyReferenced_nonNull_native, &qword_1E95F0E30, (void (*)(uint64_t, unsigned char *))sub_1A3C856DC);
      unint64_t v45 = sub_1A3C8C844(v35, v37);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_21;
      }
      unint64_t v40 = v45;
      if (v44)
      {
LABEL_3:
        uint64_t v32 = v29[7] + 40 * v40;
        __swift_destroy_boxed_opaque_existential_1(v32);
        sub_1A3C856DC(v66, v32);
        goto LABEL_4;
      }
    }
    v29[(v40 >> 6) + 8] |= 1 << v40;
    uint64_t v47 = (uint64_t *)(v29[6] + 16 * v40);
    *uint64_t v47 = v35;
    v47[1] = v37;
    sub_1A3C856DC(v66, v29[7] + 40 * v40);
    uint64_t v48 = v29[2];
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_20;
    }
    void v29[2] = v50;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
    v31 += 40;
    if (!--v30)
    {
      swift_bridgeObjectRelease();
      uint64_t v51 = a5;
      uint64_t v19 = v54;
      int v22 = v53;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1A4096EBC();
  __break(1u);
  return result;
}

uint64_t sub_1A3E0DF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v7 = *(void *)(v3 + *(int *)(type metadata accessor for E5RTInferenceFunctionDescriptor() + 28));
  if (v7 && *(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1A3C8C844(a1, a2);
    if (v9)
    {
      uint64_t v10 = *(void *)(v7 + 56) + 12 * v8;
      int v11 = *(_DWORD *)(v10 + 8);
      uint64_t v12 = *(void *)v10;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a3 = v12;
      *(_DWORD *)(a3 + 8) = v11;
      *(unsigned char *)(a3 + 12) = 0;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  sub_1A3C85624();
  swift_allocError();
  *(void *)uint64_t v14 = 0xD00000000000002BLL;
  *(void *)(v14 + 8) = 0x80000001A40B9100;
  *(_DWORD *)(v14 + 16) = 0;
  *(unsigned char *)(v14 + 20) = 2;
  return swift_willThrow();
}

uint64_t sub_1A3E0E0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + *(int *)(type metadata accessor for E5RTInferenceFunctionDescriptor() + 32));
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1A3C8C844(a1, a2);
    if (v9)
    {
      sub_1A3C85678(*(void *)(v7 + 56) + 40 * v8, (uint64_t)&v13);
      swift_bridgeObjectRelease();
      if (*((void *)&v14 + 1)) {
        return sub_1A3C856DC(&v13, a3);
      }
    }
    else
    {
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_1A3CA2EB8((uint64_t)&v13, &qword_1E95F0D78);
  *(void *)&long long v13 = 0;
  *((void *)&v13 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  *(void *)&long long v13 = 0xD00000000000001CLL;
  *((void *)&v13 + 1) = 0x80000001A40B9130;
  sub_1A409621C();
  long long v11 = v13;
  sub_1A3C85624();
  swift_allocError();
  static VisionError.invalidArgument(message:)(v11, *((uint64_t *)&v11 + 1), v12);
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_1A3E0E244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + *(int *)(type metadata accessor for E5RTInferenceFunctionDescriptor() + 36));
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1A3C8C844(a1, a2);
    if (v9)
    {
      sub_1A3C85678(*(void *)(v7 + 56) + 40 * v8, (uint64_t)&v13);
      swift_bridgeObjectRelease();
      if (*((void *)&v14 + 1)) {
        return sub_1A3C856DC(&v13, a3);
      }
    }
    else
    {
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_1A3CA2EB8((uint64_t)&v13, &qword_1E95F0D78);
  *(void *)&long long v13 = 0;
  *((void *)&v13 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  *(void *)&long long v13 = 0xD00000000000001DLL;
  *((void *)&v13 + 1) = 0x80000001A40B9150;
  sub_1A409621C();
  long long v11 = v13;
  sub_1A3C85624();
  swift_allocError();
  static VisionError.invalidArgument(message:)(v11, *((uint64_t *)&v11 + 1), v12);
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_1A3E0E3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v32 = a4;
  uint64_t v7 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *a3;
  int v11 = a3[1];
  int v13 = a3[2];
  if (qword_1E963AB50 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1E963AB58;
  if (!*(void *)(qword_1E963AB58 + 16)) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1A3C8C844(v41, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    *(void *)&v39[0] = 0;
    *((void *)&v39[0] + 1) = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    *(void *)&v39[0] = 0xD000000000000029;
    *((void *)&v39[0] + 1) = 0x80000001A40B9170;
    sub_1A409621C();
    long long v25 = v39[0];
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(v25, *((uint64_t *)&v25 + 1), v26);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  v31[3] = a2;
  swift_bridgeObjectRelease();
  uint64_t v18 = v17;
  uint64_t v40 = 0;
  memset(v39, 0, sizeof(v39));
  uint64_t v19 = *(void *)(v17 + 16);
  if (v19)
  {
    v31[1] = v18;
    v31[2] = v4;
    uint64_t v20 = v18 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v21 = *(void *)(v8 + 72);
    do
    {
      sub_1A3E12FF0(v20, (uint64_t)v10);
      int v22 = &v10[*(int *)(v7 + 44)];
      int v23 = *((_DWORD *)v22 + 6);
      *(void *)&long long v33 = *((void *)v22 + 2);
      DWORD2(v33) = v23;
      int v36 = v12;
      int v37 = v11;
      int v38 = v13;
      if (static ResourceVersion.== infix(_:_:)(&v33, &v36))
      {
        uint64_t v34 = v7;
        uint64_t v35 = sub_1A3E134B0(&qword_1E95F0D88, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v33);
        sub_1A3E130B0((uint64_t)v10, (uint64_t)boxed_opaque_existential_1);
        sub_1A3CA2EB8((uint64_t)v39, &qword_1E95F0D80);
        sub_1A3E13114((uint64_t)&v33, (uint64_t)v39);
      }
      else
      {
        sub_1A3E13054((uint64_t)v10);
      }
      v20 += v21;
      --v19;
    }
    while (v19);
  }
  swift_bridgeObjectRelease();
  sub_1A3CCB91C((uint64_t)v39, (uint64_t)&v33, &qword_1E95F0D80);
  uint64_t v28 = v34;
  sub_1A3CA2EB8((uint64_t)&v33, &qword_1E95F0D80);
  if (v28)
  {
    uint64_t result = sub_1A3CCB91C((uint64_t)v39, (uint64_t)&v33, &qword_1E95F0D80);
    if (v34)
    {
      sub_1A3CA2EB8((uint64_t)v39, &qword_1E95F0D80);
      return sub_1A3C856DC(&v33, v32);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(void *)&long long v33 = 0;
    *((void *)&v33 + 1) = 0xE000000000000000;
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A409621C();
    int v36 = v12;
    int v37 = v11;
    int v38 = v13;
    sub_1A3E0D1C4();
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    long long v29 = v33;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(v29, *((uint64_t *)&v29 + 1), v30);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return sub_1A3CA2EB8((uint64_t)v39, &qword_1E95F0D80);
  }
  return result;
}

uint64_t sub_1A3E0E7F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1A3E1019C(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1A3E12FF0(v8, (uint64_t)v5);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1A3E1019C((void *)(v10 > 1), v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1A3E134B0(&qword_1E95F0D88, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1A3E12FF0((uint64_t)v5, (uint64_t)boxed_opaque_existential_1);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1A3C856DC(&v14, v7 + 40 * v11 + 32);
      sub_1A3E13054((uint64_t)v5);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1A3E0E9C0()
{
  return swift_retain();
}

uint64_t sub_1A3E0E9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  int v7 = *((_DWORD *)a6 + 2);
  uint64_t v9 = *a6;
  int v10 = v7;
  return sub_1A3E0DA9C(a1, a2, a3, a4, a5, (uint64_t)&v9, a7);
}

uint64_t sub_1A3E0EA00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A4095B9C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1A3E0EA68()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A3E0D540(v0, (uint64_t)&v3, (void (*)(BOOL, uint64_t, uint64_t))sub_1A3E1013C, (void (*)(void, void))sub_1A3C856DC);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A3E0EAEC()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A3E0D7D8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A3E0EB44()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A3E0D540(v0, (uint64_t)&v3, (void (*)(BOOL, uint64_t, uint64_t))sub_1A3E1013C, (void (*)(void, void))sub_1A3C856DC);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A3E0EBC4()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A3E0D540(v0, (uint64_t)&v3, (void (*)(BOOL, uint64_t, uint64_t))sub_1A3E1016C, (void (*)(void, void))sub_1A3C856DC);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A3E0EC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A3E0DF90(a1, a2, a3);
}

uint64_t sub_1A3E0EC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A3E0E0D8(a1, a2, a3);
}

uint64_t sub_1A3E0EC78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A3E0E244(a1, a2, a3);
}

uint64_t sub_1A3E0EC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3CCB91C(v2 + *(int *)(a1 + 24), a2, &qword_1E95F0D78);
}

uint64_t sub_1A3E0ECBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3CCB91C(v2 + *(int *)(a1 + 48), a2, &qword_1E95F0D78);
}

uint64_t sub_1A3E0ECE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

double sub_1A3E0ED20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 44);
  int v4 = *(_DWORD *)(v3 + 24);
  double result = *(double *)(v3 + 16);
  *(double *)a2 = result;
  *(_DWORD *)(a2 + 8) = v4;
  return result;
}

void *sub_1A3E0ED3C()
{
  if (qword_1E963AB50 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A3E10DEC(v0);
  swift_bridgeObjectRelease();
  return v1;
}

char *sub_1A3E0EDAC(uint64_t a1, char *a2)
{
  return sub_1A3E12D28(a1, a2);
}

uint64_t sub_1A3E0EDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1A3E0E3B0(a1, a2, a3, a4);
}

uint64_t sub_1A3E0EDDC(uint64_t a1, uint64_t a2)
{
  return sub_1A3E1317C(a1, a2);
}

uint64_t sub_1A3E0EDF4(uint64_t a1)
{
  uint64_t v2 = sub_1A3E134B0(&qword_1E95F0D90, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);

  return sub_1A3E0CFF4(a1, v2);
}

void sub_1A3E0EE60(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1A3D5D2DC(2);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 152))(v5);
  if (!v2)
  {
    uint64_t v7 = v6;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A409603C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    if (*(void *)(v7 + 16) && (sub_1A3C8C844(0x7372655672657355, 0xEB000000006E6F69), (v8 & 1) != 0))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      sub_1A3E24548(0xD000000000000031, 0x80000001A40B91E0, a2);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A3E248F4((uint64_t)a2);
    }
  }
}

uint64_t sub_1A3E0F040@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v29[0] = 46;
  uint64_t v26 = v29;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A3E121C4(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A3E13314, (uint64_t)v25, a1, a2);
  uint64_t v7 = *((void *)v6 + 2);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    MEMORY[0x1A62545D0](0x6F73736572707365, 0xE800000000000000);
    goto LABEL_16;
  }
  char v8 = &v6[32 * v7];
  unint64_t v9 = *(void *)v8;
  unint64_t v10 = *((void *)v8 + 1);
  uint64_t v12 = *((void *)v8 + 2);
  uint64_t v11 = *((void *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v13 = MEMORY[0x1A62545D0](0x6F73736572707365, 0xE800000000000000);
  if (!v11)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (v12 == v15 && v11 == v16 && v9 >> 16 == v13 >> 16 && v10 >> 16 == v14 >> 16)
  {
    swift_bridgeObjectRelease_n();
LABEL_19:
    v29[0] = 7628142;
    v29[1] = 0xE300000000000000;
    uint64_t v27 = a1;
    unint64_t v28 = a2;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1A409625C();
    unint64_t v28 = v21;
    sub_1A409620C();
    goto LABEL_20;
  }
  char v20 = sub_1A4096E0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_19;
  }
LABEL_17:
  swift_bridgeObjectRetain();
LABEL_20:
  uint64_t v22 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  uint64_t v23 = sub_1A3E134B0(&qword_1E95F0D90, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
  sub_1A3E0CECC(v22, v23, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3E0F298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v91 = a7;
  CGRect v92 = a8;
  uint64_t v90 = a9;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF458);
  MEMORY[0x1F4188790](v17 - 8);
  CGFloat v89 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1A4095B9C();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v87 = v19;
  uint64_t v88 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v108 = 0;
  unint64_t v109 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  unint64_t v108 = 0xD000000000000023;
  unint64_t v109 = 0x80000001A40B9220;
  sub_1A409621C();
  sub_1A409621C();
  *(void *)&long long v93 = a4;
  uint64_t v94 = a5;
  sub_1A409621C();
  sub_1A409621C();
  MEMORY[0x1A6253FB0](a6, MEMORY[0x1E4FBB1A0]);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v23 = v95;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 256))(a2, a3);
  if (v23) {
    return result;
  }
  uint64_t v25 = result;
  uint64_t v26 = v94;
  uint64_t v95 = a6;
  CGSize v86 = v22;
  if (!result)
  {
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v108 = 0;
  unint64_t v109 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  unint64_t v108 = 0xD00000000000002ELL;
  unint64_t v109 = 0x80000001A40B9250;
  *(void *)&long long v105 = v25;
  type metadata accessor for E5RTFunction();
  sub_1A3E134B0(&qword_1E95F0D98, (void (*)(uint64_t))type metadata accessor for E5RTFunction);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  sub_1A3E0EE60(v25, &v108);
  unint64_t v27 = v108;
  int v28 = v109;
  unint64_t v108 = 0;
  unint64_t v109 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  unint64_t v108 = 0;
  unint64_t v109 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  (*(void (**)(long long *__return_ptr, ValueMetadata *, void, uint64_t))(*(void *)v25 + 328))(&v105, &type metadata for ImageTensorDescriptor, v93, v26);
  LODWORD(v94) = v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF490);
  swift_dynamicCast();
  *(void *)&long long v105 = 0;
  *((void *)&v105 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  __swift_project_boxed_opaque_existential_1(&v108, v110);
  sub_1A4096E3C();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)v25 + 352))(v95);
  uint64_t v95 = v25;
  __int16 v104 = (void *)v30;
  *(void *)&long long v105 = 0;
  *((void *)&v105 + 1) = 0xE000000000000000;
  uint64_t v31 = v30;
  swift_bridgeObjectRetain();
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  *(void *)&long long v105 = 0xD000000000000037;
  *((void *)&v105 + 1) = 0x80000001A40B9350;
  uint64_t v32 = swift_bridgeObjectRetain();
  MEMORY[0x1A6253FB0](v32, v29);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v107 = 0;
  long long v105 = 0u;
  long long v106 = 0u;
  if (v92)
  {
    *(void *)&long long v93 = v31;
    (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)v95 + 320))(&v101, v91);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DC8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v100 = 0;
      long long v98 = 0u;
      long long v99 = 0u;
    }
    sub_1A3D03C04((uint64_t)&v98, (uint64_t)&v105, &qword_1E95F0DB8);
    unint64_t v45 = v86;
    uint64_t v46 = (uint64_t)v89;
    if (a11)
    {
      uint64_t v47 = type metadata accessor for E5RTInferenceFunctionDescriptor();
      uint64_t v48 = sub_1A3E134B0(&qword_1E95F0D90, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
      sub_1A3E0CECC(v47, v48, v46);
      uint64_t v50 = v87;
      uint64_t v51 = v88;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v46, 1, v87);
      if (result == 1) {
        goto LABEL_44;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v45, v46, v50);
      uint64_t result = sub_1A3CCB91C((uint64_t)&v105, (uint64_t)&v98, &qword_1E95F0DB8);
      uint64_t v52 = *((void *)&v99 + 1);
      if (!*((void *)&v99 + 1))
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      uint64_t v53 = v100;
      __swift_project_boxed_opaque_existential_1(&v98, *((uint64_t *)&v99 + 1));
      uint64_t result = sub_1A3E28A64(v52, v53, (uint64_t)&v96);
      if (!v97)
      {
LABEL_46:
        __break(1u);
        return result;
      }
      (*(void (**)(char *, uint64_t))(v51 + 8))(v45, v50);
      sub_1A3C856DC(&v96, (uint64_t)&v101);
      sub_1A3D03C04((uint64_t)&v101, (uint64_t)&v105, &qword_1E95F0DB8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v98);
    }
    uint64_t v54 = *(void *)(v93 + 16);
    if (v54)
    {
      uint64_t v55 = (void *)(v93 + 32);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v56 = *((void *)&v106 + 1);
        if (*((void *)&v106 + 1))
        {
          uint64_t v57 = v107;
          uint64_t v58 = __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
          CGRect v92 = &v85;
          uint64_t v59 = *(void *)(v56 - 8);
          __n128 v60 = MEMORY[0x1F4188790](v58);
          uint64_t v62 = (char *)&v85 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v59 + 16))(v62, v60);
          uint64_t v63 = (*(uint64_t (**)(uint64_t))(*(void *)(v57 + 8) + 40))(v56);
          uint64_t v65 = v64;
          (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v56);
        }
        else
        {
          uint64_t v63 = 0;
          uint64_t v65 = 0;
        }
        uint64_t v67 = v55[3];
        uint64_t v66 = v55[4];
        __swift_project_boxed_opaque_existential_1(v55, v67);
        uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 40))(v67, v66);
        if (v65)
        {
          if (v63 == v68 && v65 == v69)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
          char v71 = sub_1A4096E5C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v71)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v55 += 5;
        if (!--v54)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A3CCB91C((uint64_t)&v105, (uint64_t)&v101, &qword_1E95F0DB8);
    uint64_t v72 = *((void *)&v102 + 1);
    if (*((void *)&v102 + 1))
    {
      uint64_t v73 = v103;
      CGFloat v74 = __swift_project_boxed_opaque_existential_1(&v101, *((uint64_t *)&v102 + 1));
      *((void *)&v99 + 1) = v72;
      uint64_t v100 = *(void *)(v73 + 8);
      uint64_t v75 = v100;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v98);
      uint64_t v77 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(void *)(v72 - 8) + 16);
      ((void (*)(uint64_t *, void *, uint64_t))v77)(boxed_opaque_existential_1, v74, v72);
      CGFloat v78 = v104;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v93 = v75;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1A3E10C0C(0, v78[2] + 1, 1, v78);
        CGFloat v78 = (void *)isUniquelyReferenced_nonNull_native;
        __int16 v104 = (void *)isUniquelyReferenced_nonNull_native;
      }
      unint64_t v81 = v78[2];
      unint64_t v80 = v78[3];
      if (v81 >= v80 >> 1)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1A3E10C0C((void *)(v80 > 1), v81 + 1, 1, v78);
        __int16 v104 = (void *)isUniquelyReferenced_nonNull_native;
      }
      __n128 v82 = MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
      char v84 = (char *)&v85 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
      v77(v84, boxed_opaque_existential_1, v72, v82);
      sub_1A3C966F0(v81, (uint64_t)v84, (uint64_t *)&v104, v72, v93);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v98);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v101);
      goto LABEL_8;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_7:
  swift_bridgeObjectRelease();
LABEL_8:
  long long v33 = v90;
  *(void *)&long long v101 = 0;
  *((void *)&v101 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DA8);
  uint64_t inited = swift_initStackObject();
  long long v93 = xmmword_1A40E7700;
  *(_OWORD *)(inited + 16) = xmmword_1A40E7700;
  uint64_t v35 = v110;
  uint64_t v36 = v111;
  int v37 = __swift_project_boxed_opaque_existential_1(&v108, v110);
  *(void *)(inited + 56) = v35;
  *(void *)(inited + 64) = *(void *)(v36 + 8);
  int v38 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v38, v37, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DB0);
  uint64_t v39 = swift_initStackObject();
  *(_OWORD *)(v39 + 16) = v93;
  sub_1A3C85678((uint64_t)&v108, v39 + 32);
  uint64_t v40 = (uint64_t)v104;
  sub_1A3CCB91C((uint64_t)&v105, (uint64_t)&v98, &qword_1E95F0DB8);
  uint64_t v41 = *((void *)&v99 + 1);
  if (*((void *)&v99 + 1))
  {
    uint64_t v42 = v100;
    uint64_t v43 = __swift_project_boxed_opaque_existential_1(&v98, *((uint64_t *)&v99 + 1));
    *((void *)&v102 + 1) = v41;
    uint64_t v103 = *(void *)(v42 + 8);
    char v44 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v101);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v44, v43, v41);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v98);
  }
  else
  {
    sub_1A3CA2EB8((uint64_t)&v98, &qword_1E95F0DB8);
    long long v101 = 0u;
    long long v102 = 0u;
    uint64_t v103 = 0;
  }
  *(void *)&long long v98 = v27;
  DWORD2(v98) = v94;
  _OWORD v33[3] = type metadata accessor for E5RTInferenceFunctionDescriptor();
  v33[4] = sub_1A3E134B0(&qword_1E95F0DC0, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
  BOOL v49 = __swift_allocate_boxed_opaque_existential_1(v33);
  sub_1A3E0DA9C(v95, inited, v39, v40, (uint64_t)&v101, (uint64_t)&v98, (uint64_t)v49);
  sub_1A3CA2EB8((uint64_t)&v105, &qword_1E95F0DB8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
}

uint64_t sub_1A3E10038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_1A3E09C24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1A3E10068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  return sub_1A3E0F298(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

void sub_1A3E10090(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
}

uint64_t sub_1A3E100A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A3E0F040(a1, a2, a3);
}

uint64_t sub_1A3E100C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 44);
  uint64_t v4 = *(void *)(v3 + 8);
  int v5 = *(_DWORD *)(v3 + 24);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = *(void *)(v3 + 16);
  *(_DWORD *)(a2 + 24) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E100E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 16);
  int v7 = v4;
  return sub_1A3E0E3B0(v3, v2, (int *)&v6, a2);
}

uint64_t sub_1A3E10124@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_1A3E0CECC(a1, a2, a3);
}

void *sub_1A3E1013C(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A3E101CC(a1, a2, a3, *v3, &qword_1E95F0DA8, &qword_1E95F0DA0);
  *uint64_t v3 = result;
  return result;
}

void *sub_1A3E1016C(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A3E101CC(a1, a2, a3, *v3, &qword_1E95F0DB0, &qword_1E95EF490);
  *uint64_t v3 = result;
  return result;
}

void *sub_1A3E1019C(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A3E101CC(a1, a2, a3, *v3, &qword_1E95F0E00, &qword_1E95F0E08);
  *uint64_t v3 = result;
  return result;
}

void *sub_1A3E101CC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    _OWORD v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

size_t sub_1A3E10308(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0E18);
  uint64_t v10 = *(void *)(type metadata accessor for E5RTInferenceFunctionDescriptor() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for E5RTInferenceFunctionDescriptor() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_1A3E104DC(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  unint64_t v6 = v4;
  uint64_t v8 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v38 = a2;
  uint64_t v9 = sub_1A4096C1C();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    int v37 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v8 + 64);
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v16 << 6);
      }
      else
      {
        int64_t v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          int64_t v16 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v16];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              unint64_t v6 = v4;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int v37 = -1 << v35;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v16];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      uint64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v27 = *(void *)(v8 + 56) + 40 * v20;
      if (v38)
      {
        a4(v27, v39);
      }
      else
      {
        sub_1A3C85678(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_1A4096F2C();
      sub_1A40961CC();
      uint64_t result = sub_1A4096F7C();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
      *uint64_t v18 = v26;
      v18[1] = v25;
      uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v39, *(void *)(v10 + 56) + 40 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v6 = v10;
  return result;
}

void *sub_1A3E107FC(uint64_t *a1, void (*a2)(unsigned char *, uint64_t))
{
  int v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1A4096C0C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *int v4 = v7;
    return result;
  }
  uint64_t v27 = v4;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = 40 * v17;
    sub_1A3C85678(*(void *)(v5 + 56) + 40 * v17, (uint64_t)v29);
    int64_t v23 = (void *)(*(void *)(v7 + 48) + v18);
    *int64_t v23 = v20;
    v23[1] = v21;
    a2(v29, *(void *)(v7 + 56) + v22);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    int v4 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

char *sub_1A3E109F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0E20);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 12);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[12 * v8]) {
      memmove(v12, v13, 12 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 12 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A3E10B08(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1A3E10C0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DA8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    __n128 v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DA0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1A3E10D44(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for E5RTInferenceFunctionDescriptor() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1A3E12A2C(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1A3E10ED4(v5);
  *a1 = v3;
}

void *sub_1A3E10DEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF370);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  _OWORD v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1A3E1282C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A3C91DE0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void sub_1A3E10ED4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v150 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  uint64_t v143 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  uint64_t v140 = (uint64_t)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v155 = (uint64_t)&v134 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v147 = (uint64_t)&v134 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v146 = (uint64_t)&v134 - v10;
  uint64_t v11 = a1[1];
  uint64_t v12 = sub_1A4096DFC();
  if (v12 >= v11)
  {
    if (v11 < 0) {
      goto LABEL_141;
    }
    if (v11) {
      sub_1A3E118D8(0, v11, 1, a1);
    }
    return;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_140;
  }
  uint64_t v137 = v12;
  if (v11 > 1)
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_1A409636C();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v143 + 80);
    uint64_t v136 = v15;
    unint64_t v142 = v15 + ((v16 + 32) & ~v16);
LABEL_12:
    uint64_t v18 = 0;
    unint64_t v17 = (char *)MEMORY[0x1E4FBC860];
    char v149 = a1;
    while (1)
    {
      uint64_t v20 = v18;
      uint64_t v21 = v18 + 1;
      if (v18 + 1 >= v11)
      {
        uint64_t v46 = v18 + 1;
        goto LABEL_58;
      }
      uint64_t v138 = v2;
      uint64_t v22 = *a1;
      uint64_t v23 = *(void *)(v143 + 72);
      uint64_t v24 = v146;
      sub_1A3E12FF0(*a1 + v23 * v21, v146);
      uint64_t v25 = v22 + v23 * v20;
      uint64_t v141 = v20;
      uint64_t v26 = v147;
      sub_1A3E12FF0(v25, v147);
      uint64_t v27 = *(int *)(v150 + 44);
      int v28 = *(_DWORD *)(v24 + v27 + 24);
      uint64_t v153 = *(void *)(v24 + v27 + 16);
      int v154 = v28;
      uint64_t v29 = v26 + v27;
      int v30 = *(_DWORD *)(v29 + 24);
      uint64_t v151 = *(void *)(v29 + 16);
      int v152 = v30;
      LODWORD(v145) = static ResourceVersion.< infix(_:_:)(&v153, &v151);
      uint64_t v31 = v26;
      uint64_t v20 = v141;
      sub_1A3E13054(v31);
      sub_1A3E13054(v24);
      uint64_t v32 = v20 + 2;
      uint64_t v148 = v23;
      uint64_t v144 = v22;
      if (v20 + 2 >= v11)
      {
        uint64_t v35 = v20 + 2;
        uint64_t v45 = v23;
        if ((v145 & 1) == 0) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t v33 = v23 * v21;
        uint64_t v34 = v22;
        uint64_t v35 = v32;
        uint64_t v36 = v23 * v32;
        do
        {
          uint64_t v37 = v11;
          uint64_t v38 = v146;
          sub_1A3E12FF0(v34 + v36, v146);
          uint64_t v39 = v147;
          sub_1A3E12FF0(v34 + v33, v147);
          uint64_t v40 = *(int *)(v150 + 44);
          int v41 = *(_DWORD *)(v38 + v40 + 24);
          uint64_t v153 = *(void *)(v38 + v40 + 16);
          int v154 = v41;
          uint64_t v42 = v39 + v40;
          int v43 = *(_DWORD *)(v42 + 24);
          uint64_t v151 = *(void *)(v42 + 16);
          int v152 = v43;
          int v44 = static ResourceVersion.< infix(_:_:)(&v153, &v151);
          sub_1A3E13054(v39);
          sub_1A3E13054(v38);
          if ((v145 ^ v44))
          {
            uint64_t v45 = v148;
            a1 = v149;
            uint64_t v20 = v141;
            uint64_t v11 = v37;
            if ((v145 & 1) == 0) {
              goto LABEL_37;
            }
            goto LABEL_24;
          }
          uint64_t v45 = v148;
          v34 += v148;
          ++v35;
          uint64_t v11 = v37;
        }
        while (v37 != v35);
        uint64_t v35 = v37;
        a1 = v149;
        uint64_t v20 = v141;
        if ((v145 & 1) == 0)
        {
LABEL_37:
          uint64_t v46 = v35;
          goto LABEL_38;
        }
      }
LABEL_24:
      if (v35 < v20) {
        goto LABEL_142;
      }
      uint64_t v46 = v35;
      if (v20 >= v35)
      {
LABEL_38:
        uint64_t v2 = v138;
        if (v46 >= v11) {
          goto LABEL_58;
        }
      }
      else
      {
        uint64_t v145 = v11;
        CGRect v135 = v17;
        uint64_t v47 = 0;
        uint64_t v48 = v20;
        uint64_t v49 = v45 * (v35 - 1);
        uint64_t v50 = v35 * v45;
        uint64_t v51 = v48;
        uint64_t v52 = v48 * v45;
        uint64_t v53 = v144;
        do
        {
          if (v51 != v46 + v47 - 1)
          {
            if (!v53) {
              goto LABEL_147;
            }
            sub_1A3E130B0(v53 + v52, v140);
            if (v52 < v49 || v53 + v52 >= (unint64_t)(v53 + v50))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v52 != v49)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_1A3E130B0(v140, v53 + v49);
            uint64_t v45 = v148;
            a1 = v149;
            uint64_t v46 = v35;
          }
          ++v51;
          --v47;
          v49 -= v45;
          v50 -= v45;
          v52 += v45;
        }
        while (v51 < v46 + v47);
        unint64_t v17 = v135;
        uint64_t v2 = v138;
        uint64_t v20 = v141;
        uint64_t v11 = v145;
        if (v46 >= v145) {
          goto LABEL_58;
        }
      }
      if (__OFSUB__(v46, v20)) {
        goto LABEL_139;
      }
      if (v46 - v20 < v137)
      {
        if (__OFADD__(v20, v137)) {
          goto LABEL_143;
        }
        if (v20 + v137 >= v11) {
          uint64_t v54 = v11;
        }
        else {
          uint64_t v54 = v20 + v137;
        }
        if (v54 < v20)
        {
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          return;
        }
        if (v46 != v54)
        {
          uint64_t v141 = v20;
          CGRect v135 = v17;
          uint64_t v138 = v2;
          uint64_t v139 = v54;
          uint64_t v55 = *(void *)(v143 + 72);
          uint64_t v56 = v55 * (v46 - 1);
          uint64_t v144 = v55;
          uint64_t v57 = v46 * v55;
          do
          {
            uint64_t v59 = 0;
            uint64_t v60 = v141;
            uint64_t v148 = v46;
            uint64_t v145 = v57;
            while (1)
            {
              uint64_t v61 = *a1;
              uint64_t v62 = v57 + v59 + *a1;
              uint64_t v63 = a1;
              uint64_t v64 = v146;
              sub_1A3E12FF0(v62, v146);
              uint64_t v65 = v56;
              uint64_t v66 = v56 + v59 + v61;
              uint64_t v67 = v147;
              sub_1A3E12FF0(v66, v147);
              uint64_t v68 = *(int *)(v150 + 44);
              int v69 = *(_DWORD *)(v64 + v68 + 24);
              uint64_t v153 = *(void *)(v64 + v68 + 16);
              int v154 = v69;
              uint64_t v70 = v67 + v68;
              int v71 = *(_DWORD *)(v70 + 24);
              uint64_t v151 = *(void *)(v70 + 16);
              int v152 = v71;
              LOBYTE(v61) = static ResourceVersion.< infix(_:_:)(&v153, &v151);
              sub_1A3E13054(v67);
              sub_1A3E13054(v64);
              if ((v61 & 1) == 0) {
                break;
              }
              uint64_t v72 = *v63;
              if (!*v63) {
                goto LABEL_145;
              }
              uint64_t v57 = v145;
              uint64_t v56 = v65;
              uint64_t v73 = v72 + v65 + v59;
              sub_1A3E130B0(v72 + v145 + v59, v155);
              swift_arrayInitWithTakeFrontToBack();
              sub_1A3E130B0(v155, v73);
              v59 -= v144;
              ++v60;
              uint64_t v58 = v148;
              a1 = v149;
              if (v148 == v60) {
                goto LABEL_51;
              }
            }
            uint64_t v58 = v148;
            a1 = v63;
            uint64_t v56 = v65;
            uint64_t v57 = v145;
LABEL_51:
            uint64_t v46 = v58 + 1;
            v56 += v144;
            v57 += v144;
          }
          while (v46 != v139);
          uint64_t v46 = v139;
          uint64_t v2 = v138;
          unint64_t v17 = v135;
          uint64_t v20 = v141;
        }
      }
LABEL_58:
      if (v46 < v20) {
        goto LABEL_134;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v148 = v46;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v17 = sub_1A3E11FD0(0, *((void *)v17 + 2) + 1, 1, v17);
      }
      unint64_t v76 = *((void *)v17 + 2);
      unint64_t v75 = *((void *)v17 + 3);
      unint64_t v19 = v76 + 1;
      if (v76 >= v75 >> 1) {
        unint64_t v17 = sub_1A3E11FD0((char *)(v75 > 1), v76 + 1, 1, v17);
      }
      *((void *)v17 + 2) = v19;
      uint64_t v77 = v17 + 32;
      CGFloat v78 = &v17[16 * v76 + 32];
      uint64_t v79 = v148;
      *(void *)CGFloat v78 = v20;
      *((void *)v78 + 1) = v79;
      if (v76)
      {
        while (1)
        {
          unint64_t v80 = v19 - 1;
          if (v19 >= 4)
          {
            uint64_t v85 = &v77[16 * v19];
            uint64_t v86 = *((void *)v85 - 8);
            uint64_t v87 = *((void *)v85 - 7);
            BOOL v91 = __OFSUB__(v87, v86);
            uint64_t v88 = v87 - v86;
            if (v91) {
              goto LABEL_123;
            }
            uint64_t v90 = *((void *)v85 - 6);
            uint64_t v89 = *((void *)v85 - 5);
            BOOL v91 = __OFSUB__(v89, v90);
            uint64_t v83 = v89 - v90;
            char v84 = v91;
            if (v91) {
              goto LABEL_124;
            }
            unint64_t v92 = v19 - 2;
            long long v93 = &v77[16 * v19 - 32];
            uint64_t v95 = *(void *)v93;
            uint64_t v94 = *((void *)v93 + 1);
            BOOL v91 = __OFSUB__(v94, v95);
            uint64_t v96 = v94 - v95;
            if (v91) {
              goto LABEL_125;
            }
            BOOL v91 = __OFADD__(v83, v96);
            uint64_t v97 = v83 + v96;
            if (v91) {
              goto LABEL_127;
            }
            if (v97 >= v88)
            {
              uint64_t v115 = &v77[16 * v80];
              uint64_t v117 = *(void *)v115;
              uint64_t v116 = *((void *)v115 + 1);
              BOOL v91 = __OFSUB__(v116, v117);
              uint64_t v118 = v116 - v117;
              if (v91) {
                goto LABEL_133;
              }
              BOOL v108 = v83 < v118;
              goto LABEL_95;
            }
          }
          else
          {
            if (v19 != 3)
            {
              uint64_t v109 = *((void *)v17 + 4);
              uint64_t v110 = *((void *)v17 + 5);
              BOOL v91 = __OFSUB__(v110, v109);
              uint64_t v102 = v110 - v109;
              char v103 = v91;
              goto LABEL_89;
            }
            uint64_t v82 = *((void *)v17 + 4);
            uint64_t v81 = *((void *)v17 + 5);
            BOOL v91 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            char v84 = v91;
          }
          if (v84) {
            goto LABEL_126;
          }
          unint64_t v92 = v19 - 2;
          long long v98 = &v77[16 * v19 - 32];
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *((void *)v98 + 1);
          BOOL v101 = __OFSUB__(v99, v100);
          uint64_t v102 = v99 - v100;
          char v103 = v101;
          if (v101) {
            goto LABEL_128;
          }
          __int16 v104 = &v77[16 * v80];
          uint64_t v106 = *(void *)v104;
          uint64_t v105 = *((void *)v104 + 1);
          BOOL v91 = __OFSUB__(v105, v106);
          uint64_t v107 = v105 - v106;
          if (v91) {
            goto LABEL_130;
          }
          if (__OFADD__(v102, v107)) {
            goto LABEL_132;
          }
          if (v102 + v107 >= v83)
          {
            BOOL v108 = v83 < v107;
LABEL_95:
            if (v108) {
              unint64_t v80 = v92;
            }
            goto LABEL_97;
          }
LABEL_89:
          if (v103) {
            goto LABEL_129;
          }
          uint64_t v111 = &v77[16 * v80];
          uint64_t v113 = *(void *)v111;
          uint64_t v112 = *((void *)v111 + 1);
          BOOL v91 = __OFSUB__(v112, v113);
          uint64_t v114 = v112 - v113;
          if (v91) {
            goto LABEL_131;
          }
          if (v114 < v102) {
            goto LABEL_14;
          }
LABEL_97:
          unint64_t v119 = v80 - 1;
          if (v80 - 1 >= v19)
          {
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
            goto LABEL_144;
          }
          uint64_t v120 = *a1;
          if (!*a1) {
            goto LABEL_146;
          }
          uint64_t v121 = v17;
          uint64_t v122 = &v77[16 * v119];
          uint64_t v123 = *(void *)v122;
          uint64_t v124 = &v77[16 * v80];
          uint64_t v125 = *((void *)v124 + 1);
          sub_1A3E11B58(v120 + *(void *)(v143 + 72) * *(void *)v122, v120 + *(void *)(v143 + 72) * *(void *)v124, v120 + *(void *)(v143 + 72) * v125, v142);
          if (v2) {
            goto LABEL_117;
          }
          if (v125 < v123) {
            goto LABEL_120;
          }
          if (v80 > *((void *)v121 + 2)) {
            goto LABEL_121;
          }
          *(void *)uint64_t v122 = v123;
          *(void *)&v77[16 * v119 + 8] = v125;
          unint64_t v126 = *((void *)v121 + 2);
          if (v80 >= v126) {
            goto LABEL_122;
          }
          unint64_t v17 = v121;
          unint64_t v19 = v126 - 1;
          memmove(&v77[16 * v80], v124 + 16, 16 * (v126 - 1 - v80));
          *((void *)v121 + 2) = v126 - 1;
          a1 = v149;
          if (v126 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v19 = 1;
LABEL_14:
      uint64_t v11 = a1[1];
      uint64_t v18 = v148;
      if (v148 >= v11) {
        goto LABEL_106;
      }
    }
  }
  unint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v142 = MEMORY[0x1E4FBC860]
       + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
  uint64_t v136 = MEMORY[0x1E4FBC860];
  if (v11 == 1) {
    goto LABEL_12;
  }
  unint64_t v19 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_106:
  if (v19 >= 2)
  {
    uint64_t v127 = *a1;
    do
    {
      unint64_t v128 = v19 - 2;
      if (v19 < 2) {
        goto LABEL_135;
      }
      if (!v127) {
        goto LABEL_148;
      }
      uint64_t v129 = v17;
      uint64_t v130 = *(void *)&v17[16 * v128 + 32];
      uint64_t v131 = *(void *)&v17[16 * v19 + 24];
      sub_1A3E11B58(v127 + *(void *)(v143 + 72) * v130, v127 + *(void *)(v143 + 72) * *(void *)&v17[16 * v19 + 16], v127 + *(void *)(v143 + 72) * v131, v142);
      if (v2) {
        break;
      }
      if (v131 < v130) {
        goto LABEL_136;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v129 = sub_1A3E121B0((uint64_t)v17);
      }
      if (v128 >= *((void *)v129 + 2)) {
        goto LABEL_137;
      }
      uint64_t v132 = &v129[16 * v128 + 32];
      *(void *)uint64_t v132 = v130;
      *((void *)v132 + 1) = v131;
      unint64_t v133 = *((void *)v129 + 2);
      if (v19 > v133) {
        goto LABEL_138;
      }
      memmove(&v129[16 * v19 + 16], &v129[16 * v19 + 32], 16 * (v133 - v19));
      *((void *)v129 + 2) = v133 - 1;
      unint64_t v19 = v133 - 1;
      unint64_t v17 = v129;
    }
    while (v133 > 2);
  }
LABEL_117:
  swift_bridgeObjectRelease();
  *(void *)(v136 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1A3E118D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v27 = a1;
  uint64_t v30 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  MEMORY[0x1F4188790](v30);
  uint64_t v31 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v29 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v37 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v32 = v15 * v29;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v27;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_1A3E12FF0(v32 + v16 + *a4, (uint64_t)v14);
      sub_1A3E12FF0(v37 + v16 + v18, (uint64_t)v10);
      uint64_t v19 = *(int *)(v30 + 44);
      int v20 = *(_DWORD *)&v14[v19 + 24];
      uint64_t v35 = *(void *)&v14[v19 + 16];
      int v36 = v20;
      uint64_t v21 = &v10[v19];
      int v22 = *((_DWORD *)v21 + 6);
      uint64_t v33 = *((void *)v21 + 2);
      int v34 = v22;
      LOBYTE(v18) = static ResourceVersion.< infix(_:_:)(&v35, &v33);
      sub_1A3E13054((uint64_t)v10);
      sub_1A3E13054((uint64_t)v14);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v37 += v28;
        v32 += v28;
        if (++v29 == v26) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v23 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v24 = v23 + v37 + v16;
      sub_1A3E130B0(v23 + v32 + v16, v31);
      swift_arrayInitWithTakeFrontToBack();
      sub_1A3E130B0(v31, v24);
      v16 -= v28;
      if (v29 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

void sub_1A3E11B58(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v42 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  MEMORY[0x1F4188790](v42);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    return;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_59;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_60;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v49 = a1;
  unint64_t v48 = a4;
  if (v16 >= v15 / v14)
  {
    uint64_t v18 = v15 / v14 * v14;
    if (a4 < a2 || a2 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v29 = a4 + v18;
    unint64_t v47 = a4 + v18;
    unint64_t v49 = a2;
    unint64_t v41 = a1;
    if (v18 >= 1 && a1 < a2)
    {
      uint64_t v31 = -v14;
      do
      {
        unint64_t v32 = a3 + v31;
        sub_1A3E12FF0(v29 + v31, (uint64_t)v12);
        unint64_t v33 = a2 + v31;
        sub_1A3E12FF0(a2 + v31, (uint64_t)v9);
        uint64_t v34 = *(int *)(v42 + 44);
        int v35 = *(_DWORD *)&v12[v34 + 24];
        uint64_t v45 = *(void *)&v12[v34 + 16];
        int v46 = v35;
        int v36 = &v9[v34];
        int v37 = *((_DWORD *)v36 + 6);
        uint64_t v43 = *((void *)v36 + 2);
        int v44 = v37;
        char v38 = static ResourceVersion.< infix(_:_:)(&v45, &v43);
        sub_1A3E13054((uint64_t)v9);
        sub_1A3E13054((uint64_t)v12);
        if (v38)
        {
          if (a3 < a2 || v32 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a3 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v49 += v31;
        }
        else
        {
          unint64_t v39 = v47;
          v47 += v31;
          if (a3 < v39 || v32 >= v39)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a3 != v39)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v33 = a2;
        }
        unint64_t v29 = v47;
        if (v47 <= a4) {
          break;
        }
        a2 = v33;
        a3 += v31;
      }
      while (v33 > v41);
    }
  }
  else
  {
    uint64_t v17 = v16 * v14;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v47 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_1A3E12FF0(a2, (uint64_t)v12);
        sub_1A3E12FF0(a4, (uint64_t)v9);
        uint64_t v21 = *(int *)(v42 + 44);
        int v22 = *(_DWORD *)&v12[v21 + 24];
        uint64_t v45 = *(void *)&v12[v21 + 16];
        int v46 = v22;
        uint64_t v23 = &v9[v21];
        int v24 = *((_DWORD *)v23 + 6);
        uint64_t v43 = *((void *)v23 + 2);
        int v44 = v24;
        char v25 = static ResourceVersion.< infix(_:_:)(&v45, &v43);
        sub_1A3E13054((uint64_t)v9);
        sub_1A3E13054((uint64_t)v12);
        unint64_t v26 = v49;
        if (v25)
        {
          unint64_t v27 = a2 + v14;
          if (v49 < a2 || v49 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v49 == a2)
          {
            unint64_t v26 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v28 = v48 + v14;
          if (v49 < v48 || v49 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v49 != v48)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v48 = v28;
          unint64_t v27 = a2;
        }
        unint64_t v49 = v26 + v14;
        a4 = v48;
        if (v48 >= v19) {
          break;
        }
        a2 = v27;
      }
      while (v27 < a3);
    }
  }
  sub_1A3E120CC(&v49, &v48, (uint64_t *)&v47);
}

char *sub_1A3E11FD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0E10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A3E120CC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for E5RTInferenceFunctionDescriptor();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_17;
  }
  if (v3 < v4 || v3 >= v4 + (uint64_t)(v5 - v4) / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1A3E121B0(uint64_t a1)
{
  return sub_1A3E11FD0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1A3E121C4(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v46[3] = a4;
  if (a1 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v11 = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 15;
  uint64_t v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v16 = HIBYTE(a6) & 0xF) : (uint64_t v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v15 = v11 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1A3E125E4(v30 | (v15 << 16), v43, a2 & 1, v14);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_38;
  }
  uint64_t v38 = a1;
  uint64_t v39 = v14;
  unint64_t v44 = 4 * v16;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v9 = 15;
  unint64_t v8 = 15;
  unint64_t v17 = 15;
  while (1)
  {
    v46[0] = sub_1A409624C();
    v46[1] = v18;
    uint64_t v19 = a3(v46);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    uint64_t v6 = v19;
    swift_bridgeObjectRelease();
    if (v6) {
      break;
    }
    unint64_t v9 = sub_1A40961EC();
LABEL_9:
    if (v44 == v9 >> 14) {
      goto LABEL_29;
    }
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v9 = sub_1A40961EC();
    *(void *)(v43 + 16) = v9;
    unint64_t v8 = v9;
    unint64_t v17 = v9;
    goto LABEL_9;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v20 = sub_1A409626C();
  uint64_t v40 = v21;
  uint64_t v41 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_1A3E10B08(0, *((void *)v10 + 2) + 1, 1, v10);
  }
  unint64_t v27 = *((void *)v10 + 2);
  unint64_t v26 = *((void *)v10 + 3);
  uint64_t v6 = v27 + 1;
  if (v27 >= v26 >> 1) {
    uint64_t v10 = sub_1A3E10B08((char *)(v26 > 1), v27 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v6;
  unint64_t v28 = &v10[32 * v27];
  *((void *)v28 + 4) = v41;
  *((void *)v28 + 5) = v23;
  *((void *)v28 + 6) = v25;
  *((void *)v28 + 7) = v40;
  *(void *)(v39 + 16) = v10;
  uint64_t v29 = sub_1A40961EC();
  unint64_t v9 = v29;
  *(void *)(v43 + 16) = v29;
  if (*((void *)v10 + 2) != v38)
  {
    unint64_t v8 = v29;
    unint64_t v17 = v29;
    goto LABEL_9;
  }
  unint64_t v17 = v29;
  unint64_t v8 = v29;
LABEL_29:
  if (v44 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  if (v44 >= v17 >> 14)
  {
    uint64_t v6 = sub_1A409626C();
    unint64_t v8 = v31;
    unint64_t v9 = v32;
    uint64_t v11 = v33;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_34;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t v10 = sub_1A3E10B08(0, *((void *)v10 + 2) + 1, 1, v10);
LABEL_34:
  unint64_t v35 = *((void *)v10 + 2);
  unint64_t v34 = *((void *)v10 + 3);
  if (v35 >= v34 >> 1) {
    uint64_t v10 = sub_1A3E10B08((char *)(v34 > 1), v35 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v35 + 1;
  int v36 = &v10[32 * v35];
  *((void *)v36 + 4) = v6;
  *((void *)v36 + 5) = v8;
  *((void *)v36 + 6) = v9;
  *((void *)v36 + 7) = v11;
  *(void *)(v39 + 16) = v10;
LABEL_37:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_38:
  swift_release();
  return v10;
}

uint64_t sub_1A3E125E4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v10 = *(void *)(a2 + 16) >> 14;
  int v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1) {
    return v11 ^ 1u;
  }
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = a4;
  uint64_t v5 = sub_1A409626C();
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  unint64_t v9 = *(char **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    unint64_t v9 = sub_1A3E10B08(0, *((void *)v9 + 2) + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  unint64_t v17 = *((void *)v9 + 2);
  unint64_t v16 = *((void *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    unint64_t v9 = sub_1A3E10B08((char *)(v16 > 1), v17 + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  *((void *)v9 + 2) = v17 + 1;
  uint64_t v18 = &v9[32 * v17];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v6;
  *((void *)v18 + 6) = v7;
  *((void *)v18 + 7) = v8;
  return v11 ^ 1u;
}

uint64_t sub_1A3E126F4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1A3E1277C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  unint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1A3E1282C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  char v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *char v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

size_t sub_1A3E12A2C(void *a1)
{
  return sub_1A3E10308(0, a1[2], 0, a1);
}

uint64_t sub_1A3E12A40(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1A3E0D3B0(MEMORY[0x1E4FBC860], &qword_1E95F0E40, &qword_1E95F0E48, (uint64_t (*)(uint64_t *, unint64_t))sub_1A3C856DC);
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (uint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1A3C85678(v4, (uint64_t)v26);
    uint64_t v6 = v27;
    uint64_t v7 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
    uint64_t v10 = v9;
    sub_1A3C85678((uint64_t)v26, (uint64_t)v25);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = sub_1A3C8C844(v8, v10);
    uint64_t v14 = v2[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v2[3] >= v16)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v12) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1A3E107FC(&qword_1E95F0E40, (void (*)(unsigned char *, uint64_t))sub_1A3C856DC);
        if (v17) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1A3E104DC(v16, isUniquelyReferenced_nonNull_native, &qword_1E95F0E40, (void (*)(uint64_t, unsigned char *))sub_1A3C856DC);
      unint64_t v18 = sub_1A3C8C844(v8, v10);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_20;
      }
      unint64_t v13 = v18;
      if (v17)
      {
LABEL_3:
        uint64_t v5 = v2[7] + 40 * v13;
        __swift_destroy_boxed_opaque_existential_1(v5);
        sub_1A3C856DC(v25, v5);
        goto LABEL_4;
      }
    }
    v2[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v20 = (uint64_t *)(v2[6] + 16 * v13);
    *uint64_t v20 = v8;
    v20[1] = v10;
    sub_1A3C856DC(v25, v2[7] + 40 * v13);
    uint64_t v21 = v2[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_19;
    }
    v2[2] = v23;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    v4 += 40;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1A4096EBC();
  __break(1u);
  return result;
}

uint64_t sub_1A3E12CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

char *sub_1A3E12D28(uint64_t a1, char *a2)
{
  uint64_t v5 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E963AB50 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1E963AB58;
  if (!*(void *)(qword_1E963AB58 + 16)) {
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1A3C8C844(a1, (uint64_t)a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    unint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    unint64_t v27 = 0xD000000000000029;
    unint64_t v28 = 0x80000001A40B9170;
    sub_1A409621C();
    uint64_t v22 = v27;
    uint64_t v23 = v28;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(v22, v23, v24);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return a2;
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    v26[0] = v12;
    v26[1] = v2;
    uint64_t v14 = v12 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v15 = *(void *)(v6 + 72);
    a2 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1A3E12FF0(v14, (uint64_t)v8);
      uint64_t v16 = &v8[*(int *)(v5 + 44)];
      uint64_t v17 = *((void *)v16 + 2);
      int v18 = *((_DWORD *)v16 + 6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2 = sub_1A3E109F0(0, *((void *)a2 + 2) + 1, 1, a2);
      }
      unint64_t v20 = *((void *)a2 + 2);
      unint64_t v19 = *((void *)a2 + 3);
      if (v20 >= v19 >> 1) {
        a2 = sub_1A3E109F0((char *)(v19 > 1), v20 + 1, 1, a2);
      }
      *((void *)a2 + 2) = v20 + 1;
      uint64_t v21 = &a2[12 * v20];
      *((void *)v21 + 4) = v17;
      *((_DWORD *)v21 + 10) = v18;
      sub_1A3E13054((uint64_t)v8);
      v14 += v15;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (char *)MEMORY[0x1E4FBC860];
  }
  return a2;
}

uint64_t sub_1A3E12FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3E13054(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3E130B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for E5RTInferenceFunctionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3E13114(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3E1317C(uint64_t a1, uint64_t a2)
{
  if (qword_1E963AB50 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E963AB58;
  if (!*(void *)(qword_1E963AB58 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A3C8C844(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(0xD000000000000029, 0x80000001A40B9170, v11);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  uint64_t v8 = *(void **)(*(void *)(v5 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v8;
  swift_bridgeObjectRetain();
  sub_1A3E10D44(&v12);
  if (v2)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_1A3E0E7F8((uint64_t)v12);
    swift_release();
    return v9;
  }
  return result;
}

uint64_t sub_1A3E13314(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1A4096E5C() & 1;
  }
}

uint64_t sub_1A3E1336C(uint64_t a1)
{
  uint64_t result = sub_1A3E134B0(&qword_1E95F0DD0, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3E133C4(uint64_t a1)
{
  uint64_t result = sub_1A3E134B0(&qword_1E95F0DD8, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3E1341C(uint64_t a1)
{
  uint64_t result = sub_1A3E134B0(&qword_1E95F0DE0, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A3E13474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3E13534(a1, a2, a3, &qword_1E95F0DE8, (uint64_t)&unk_1A4107B30, &qword_1E95F0DF0);
}

uint64_t sub_1A3E134B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3E134F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3E13534(a1, a2, a3, &qword_1E95F0DD0, (uint64_t)&unk_1A4107B4C, &qword_1E95F0D90);
}

uint64_t sub_1A3E13534(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  *(void *)(a1 + 8) = sub_1A3E134B0(a4, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
  uint64_t result = sub_1A3E134B0(a6, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A3E135A0(uint64_t a1)
{
  uint64_t result = sub_1A3E134B0(&qword_1E95F0D88, (void (*)(uint64_t))type metadata accessor for E5RTInferenceFunctionDescriptor);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *sub_1A3E135F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A4095B9C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 24);
    swift_retain();
    if (v11)
    {
      uint64_t v12 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v11;
      *((void *)v9 + 4) = v12;
      (**(void (***)(char *, char *, uint64_t))(v11 - 8))(v9, v10, v11);
    }
    else
    {
      long long v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }
    uint64_t v15 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v16 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    unint64_t v19 = (char *)a1 + v17;
    unint64_t v20 = (char *)a2 + v17;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)unint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    *((void *)v19 + 2) = *((void *)v20 + 2);
    *((_DWORD *)v19 + 6) = *((_DWORD *)v20 + 6);
    uint64_t v22 = (char *)a1 + v18;
    uint64_t v23 = (char *)a2 + v18;
    uint64_t v24 = *((void *)v23 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24)
    {
      uint64_t v25 = *((void *)v23 + 4);
      *((void *)v22 + 3) = v24;
      *((void *)v22 + 4) = v25;
      (**(void (***)(char *, char *, uint64_t))(v24 - 8))(v22, v23, v24);
    }
    else
    {
      long long v26 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v26;
      *((void *)v22 + 4) = *((void *)v23 + 4);
    }
  }
  return a1;
}

uint64_t sub_1A3E13808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v5 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1 + *(int *)(a2 + 48);
  if (*(void *)(result + 24))
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t sub_1A3E138F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  swift_retain();
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(v8, v9, v10);
  }
  else
  {
    long long v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  uint64_t v19 = *(void *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v19;
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(_DWORD *)(v17 + 24) = *(_DWORD *)(v18 + 24);
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  uint64_t v22 = *(void *)(v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22)
  {
    uint64_t v23 = *(void *)(v21 + 32);
    *(void *)(v20 + 24) = v22;
    *(void *)(v20 + 32) = v23;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8))(v20, v21, v22);
  }
  else
  {
    long long v24 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v24;
    *(void *)(v20 + 32) = *(void *)(v21 + 32);
  }
  return a1;
}

uint64_t sub_1A3E13AB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (*(void *)(a1 + v7 + 24))
  {
    if (v10)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v8, v9);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(v8);
  }
  else if (v10)
  {
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v9[4];
    (**(void (***)(uint64_t, long long *))(v10 - 8))(v8, (long long *)v9);
    goto LABEL_8;
  }
  long long v11 = *(_OWORD *)v9;
  long long v12 = *((_OWORD *)v9 + 1);
  *(void *)(v8 + 32) = v9[4];
  *(_OWORD *)uint64_t v8 = v11;
  *(_OWORD *)(v8 + 16) = v12;
LABEL_8:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[11];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (_DWORD *)(a2 + v13);
  *(void *)uint64_t v14 = *(void *)(a2 + v13);
  *(void *)(v14 + 8) = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v14 + 16) = v15[4];
  *(_DWORD *)(v14 + 20) = v15[5];
  *(_DWORD *)(v14 + 24) = v15[6];
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (long long *)(a2 + v16);
  uint64_t v19 = *((void *)v18 + 3);
  if (!*(void *)(a1 + v16 + 24))
  {
    if (v19)
    {
      *(void *)(v17 + 24) = v19;
      *(void *)(v17 + 32) = *((void *)v18 + 4);
      (**(void (***)(uint64_t, long long *))(v19 - 8))(v17, v18);
      return a1;
    }
LABEL_14:
    long long v20 = *v18;
    long long v21 = v18[1];
    *(void *)(v17 + 32) = *((void *)v18 + 4);
    *(_OWORD *)uint64_t v17 = v20;
    *(_OWORD *)(v17 + 16) = v21;
    return a1;
  }
  if (!v19)
  {
    __swift_destroy_boxed_opaque_existential_1(v17);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v17, (uint64_t *)v18);
  return a1;
}

uint64_t sub_1A3E13D08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[11];
  uint64_t v14 = a3[12];
  uint64_t v15 = (_OWORD *)(a1 + v13);
  uint64_t v16 = (_OWORD *)(a2 + v13);
  *uint64_t v15 = *v16;
  *(_OWORD *)((char *)v15 + 12) = *(_OWORD *)((char *)v16 + 12);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  return a1;
}

uint64_t sub_1A3E13DF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)(a1 + v7 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v8);
  }
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[11];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
  uint64_t v15 = a3[12];
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + v15);
  }
  long long v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  return a1;
}

uint64_t sub_1A3E13F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3E13F6C);
}

uint64_t sub_1A3E13F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4095B9C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1A3E1402C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3E14040);
}

uint64_t sub_1A3E14040(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A4095B9C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A3E140FC()
{
  uint64_t result = sub_1A4095B9C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A3E141C8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A3E14200()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A3E14214()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E1425C()
{
  return sub_1A4096F5C();
}

uint64_t sub_1A3E14288()
{
  return sub_1A4096F7C();
}

int *sub_1A3E142CC@<X0>(int *result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *result;
  if (*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1A3E142E4(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

char *sub_1A3E142F0(uint64_t a1, uint64_t (*a2)(uint64_t, void *), uint64_t a3, uint64_t (*a4)(uint64_t, void, uint64_t))
{
  v24[1] = *MEMORY[0x1E4F143B8];
  v24[0] = 0;
  if (!a1) {
LABEL_22:
  }
    __break(1u);
  uint64_t v6 = a2(a1, v24);
  if (!v6)
  {
    if ((unint64_t)(v24[0] - 0x1000000000000000) >> 61 == 7)
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = v24[0];
      uint64_t v14 = a4(a1, v24[0], v12);
      if (v14)
      {
        uint64_t v7 = (char *)v14;
        sub_1A3C85624();
        swift_allocError();
        uint64_t v11 = 0xD000000000000016;
        uint64_t v8 = 0x80000001A40B9400;
        uint64_t v10 = v15;
        goto LABEL_7;
      }
      if ((v13 & 0x8000000000000000) == 0)
      {
        uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
        if (!v13)
        {
LABEL_18:
          MEMORY[0x1A6257B40](v12, -1, -1);
          return v7;
        }
        long long v17 = (void *)v12;
        while (*v17)
        {
          uint64_t v18 = sub_1A409622C();
          uint64_t v20 = v19;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v7 = sub_1A3E08BD8(0, *((void *)v7 + 2) + 1, 1, v7);
          }
          unint64_t v22 = *((void *)v7 + 2);
          unint64_t v21 = *((void *)v7 + 3);
          if (v22 >= v21 >> 1) {
            uint64_t v7 = sub_1A3E08BD8((char *)(v21 > 1), v22 + 1, 1, v7);
          }
          *((void *)v7 + 2) = v22 + 1;
          uint64_t v23 = &v7[16 * v22];
          *((void *)v23 + 4) = v18;
          *((void *)v23 + 5) = v20;
          ++v17;
          if (!--v13) {
            goto LABEL_18;
          }
        }
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v7 = (char *)v6;
  sub_1A3C85624();
  swift_allocError();
  uint64_t v8 = 0x80000001A40B93E0;
  uint64_t v10 = v9;
  uint64_t v11 = 0xD000000000000015;
LABEL_7:
  static VisionError.espressoE5RTError(message:errorCode:)(v11, v8, (uint64_t)v7, v10);
  swift_willThrow();
  return v7;
}

uint64_t sub_1A3E14548()
{
  uint64_t is_tensor = e5rt_io_port_is_tensor();
  if (is_tensor)
  {
    uint64_t v1 = is_tensor;
    sub_1A3C85624();
    swift_allocError();
    uint64_t v3 = 0xD000000000000022;
    uint64_t v4 = "e5rt_io_port_is_tensor call failed";
  }
  else
  {
    uint64_t is_surface = e5rt_io_port_is_surface();
    if (!is_surface)
    {
      sub_1A3C85624();
      swift_allocError();
      static VisionError.invalidArgument(message:)(0xD000000000000011, 0x80000001A40B9480, v7);
      return swift_willThrow();
    }
    uint64_t v1 = is_surface;
    sub_1A3C85624();
    swift_allocError();
    uint64_t v3 = 0xD000000000000023;
    uint64_t v4 = "e5rt_io_port_is_surface call failed";
  }
  static VisionError.espressoE5RTError(message:errorCode:)(v3, (unint64_t)(v4 - 32) | 0x8000000000000000, v1, v2);
  return swift_willThrow();
}

uint64_t sub_1A3E146D0()
{
  uint64_t v0 = e5rt_tensor_desc_retain_dtype();
  if (v0)
  {
    uint64_t v1 = v0;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000029, 0x80000001A40B94A0, v1, v2);
    swift_willThrow();
  }
  else
  {
    uint64_t v3 = *(TtTrkRpnNode **)sub_1A3E25588();
    uint64_t component_size = e5rt_tensor_desc_dtype_get_component_size();
    if (component_size)
    {
      uint64_t v1 = component_size;
      sub_1A3C85624();
      swift_allocError();
      uint64_t v5 = 0xD000000000000035;
      uint64_t v7 = v6;
      uint64_t v8 = 0x80000001A40B94D0;
      uint64_t v9 = v1;
    }
    else
    {
      sub_1A3E25594();
      uint64_t v1 = TtTrkRpnNode::config(v3);
      uint64_t component_dtype = e5rt_tensor_desc_dtype_get_component_dtype();
      if (!component_dtype)
      {
        uint64_t v14 = sub_1A3E255B8();
        uint64_t v1 = TtTrkRpnNode::config((TtTrkRpnNode *)(*v14 | v1));
        e5rt_tensor_desc_dtype_release();
        return v1;
      }
      uint64_t v12 = component_dtype;
      sub_1A3C85624();
      swift_allocError();
      uint64_t v5 = 0xD000000000000036;
      uint64_t v7 = v13;
      uint64_t v8 = 0x80000001A40B9510;
      uint64_t v9 = v12;
    }
    static VisionError.espressoE5RTError(message:errorCode:)(v5, v8, v9, v7);
    swift_willThrow();
    e5rt_tensor_desc_dtype_release();
  }
  return v1;
}

uint64_t sub_1A3E14AB8(unsigned int a1)
{
  if (a1 <= 5) {
    return *(unsigned int *)&aV024800largbab[4 * a1];
  }
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A3C85624();
  swift_allocError();
  static VisionError.invalidArgument(message:)(0, 0xE000000000000000, v2);
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

void type metadata accessor for e5rt_tensor_desc_component_dtype_t()
{
  if (!qword_1E95F0E58)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E95F0E58);
    }
  }
}

unint64_t sub_1A3E14C3C()
{
  unint64_t result = qword_1E95F0E50;
  if (!qword_1E95F0E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0E50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for E5RTIOPortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3E14D5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTIOPortType()
{
  return &type metadata for E5RTIOPortType;
}

ValueMetadata *type metadata accessor for E5RTUtils()
{
  return &type metadata for E5RTUtils;
}

unint64_t sub_1A3E14DA4()
{
  unint64_t result = qword_1E95F0E60;
  if (!qword_1E95F0E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0E60);
  }
  return result;
}

unint64_t sub_1A3E14DF8()
{
  unint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6570795461746164;
      break;
    case 2:
      unint64_t result = 0x6570616873;
      break;
    case 3:
      unint64_t result = 0x73656469727473;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A3E14E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3E15600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3E14EC4(uint64_t a1)
{
  unint64_t v2 = sub_1A3E15B88();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E14F00(uint64_t a1)
{
  unint64_t v2 = sub_1A3E15B88();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3E14F3C(void *a1)
{
  int v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0E68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E15B88();
  sub_1A4096FEC();
  LOBYTE(v11) = 0;
  sub_1A4096D7C();
  if (!v2)
  {
    uint64_t v11 = v3[2];
    HIBYTE(v10) = 1;
    sub_1A3E15BDC();
    sub_1A4096DBC();
    uint64_t v11 = v3[4];
    HIBYTE(v10) = 2;
    sub_1A3E15C30();
    sub_1A4096DBC();
    uint64_t v11 = v3[5];
    HIBYTE(v10) = 3;
    sub_1A3E0ADAC();
    sub_1A4096DBC();
    LOBYTE(v11) = 4;
    sub_1A4096DEC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A3E1515C()
{
  return sub_1A40960DC();
}

uint64_t sub_1A3E15230()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E15314()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A3E15344@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  a1[3] = &type metadata for TensorShape;
  a1[4] = sub_1A3E14DA4();
  *a1 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E15394@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 40);
  a1[3] = &type metadata for TensorStrides;
  a1[4] = sub_1A3E0AC1C();
  *a1 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E153E4()
{
  return *(unsigned int *)(v0 + 24);
}

double sub_1A3E153EC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A3E15804(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1A3E15430(void *a1)
{
  return sub_1A3E14F3C(a1);
}

uint64_t sub_1A3E15450()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E15538(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  void v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  id v8[2] = v5;
  return sub_1A3E15D2C((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_1A3E15580(uint64_t a1)
{
  unint64_t v2 = sub_1A3E160A8();

  return sub_1A3E272B0(a1, v2);
}

uint64_t sub_1A3E155BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(_DWORD *)(a7 + 24) = a6;
  *(void *)(a7 + 32) = a4;
  *(void *)(a7 + 40) = a5;
  return result;
}

unint64_t sub_1A3E155D0(uint64_t a1, uint64_t a2)
{
  return sub_1A3E27570(a1, a2);
}

void sub_1A3E155E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1A3E15600(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795461746164 && a2 == 0xE800000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570616873 && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656469727473 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A40B95F0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A3E15804@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0ED8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E15B88();
  sub_1A4096FDC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v21) = 0;
  uint64_t v9 = sub_1A4096CBC();
  uint64_t v11 = v10;
  char v20 = 1;
  sub_1A3E16610();
  swift_bridgeObjectRetain();
  sub_1A4096CFC();
  uint64_t v19 = v21;
  char v20 = 2;
  sub_1A3E16664();
  sub_1A4096CFC();
  uint64_t v12 = v21;
  char v20 = 3;
  sub_1A3E0AD58();
  uint64_t v18 = v12;
  swift_bridgeObjectRetain();
  sub_1A4096CFC();
  uint64_t v13 = v21;
  LOBYTE(v21) = 4;
  uint64_t v17 = v13;
  swift_bridgeObjectRetain();
  LODWORD(v12) = sub_1A4096D2C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v14 = v17;
  swift_bridgeObjectRelease();
  uint64_t v15 = v18;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v19;
  *(_DWORD *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v14;
  return result;
}

unint64_t sub_1A3E15B88()
{
  unint64_t result = qword_1E963B1F0[0];
  if (!qword_1E963B1F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963B1F0);
  }
  return result;
}

unint64_t sub_1A3E15BDC()
{
  unint64_t result = qword_1E95F0E70;
  if (!qword_1E95F0E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0E70);
  }
  return result;
}

unint64_t sub_1A3E15C30()
{
  unint64_t result = qword_1E95F0E78;
  if (!qword_1E95F0E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0E78);
  }
  return result;
}

unint64_t sub_1A3E15C84()
{
  unint64_t result = qword_1E95F0E80;
  if (!qword_1E95F0E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0E80);
  }
  return result;
}

unint64_t sub_1A3E15CD8()
{
  unint64_t result = qword_1E95F0E88;
  if (!qword_1E95F0E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0E88);
  }
  return result;
}

uint64_t sub_1A3E15D2C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_1A4096E5C(), v6 = 0, (v5 & 1) != 0))
  {
    sub_1A3E165BC();
    sub_1A409629C();
    sub_1A409629C();
    if (v9 == v8
      && *(_DWORD *)(a1 + 24) == *(_DWORD *)(a2 + 24)
      && (sub_1A3E09F6C(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) != 0)
    {
      char v6 = sub_1A3E09F6C(*(void *)(a1 + 40), *(void *)(a2 + 40));
    }
    else
    {
      char v6 = 0;
    }
  }
  return v6 & 1;
}

unint64_t sub_1A3E15E1C(void *a1)
{
  a1[1] = sub_1A3E15E5C();
  a1[2] = sub_1A3E15EB0();
  a1[3] = sub_1A3E15F04();
  unint64_t result = sub_1A3E15F58();
  a1[4] = result;
  return result;
}

unint64_t sub_1A3E15E5C()
{
  unint64_t result = qword_1E95F0E90;
  if (!qword_1E95F0E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0E90);
  }
  return result;
}

unint64_t sub_1A3E15EB0()
{
  unint64_t result = qword_1E95F0E98;
  if (!qword_1E95F0E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0E98);
  }
  return result;
}

unint64_t sub_1A3E15F04()
{
  unint64_t result = qword_1E95F0EA0;
  if (!qword_1E95F0EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0EA0);
  }
  return result;
}

unint64_t sub_1A3E15F58()
{
  unint64_t result = qword_1E95F0EA8;
  if (!qword_1E95F0EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0EA8);
  }
  return result;
}

unint64_t sub_1A3E15FAC(uint64_t a1)
{
  unint64_t result = sub_1A3E15FD4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3E15FD4()
{
  unint64_t result = qword_1E95F0EB0;
  if (!qword_1E95F0EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0EB0);
  }
  return result;
}

unint64_t sub_1A3E1602C()
{
  unint64_t result = qword_1E95F0EB8;
  if (!qword_1E95F0EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0EB8);
  }
  return result;
}

unint64_t sub_1A3E16080(uint64_t a1)
{
  unint64_t result = sub_1A3E160A8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3E160A8()
{
  unint64_t result = qword_1E95F0EC0;
  if (!qword_1E95F0EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0EC0);
  }
  return result;
}

unint64_t sub_1A3E160FC(uint64_t a1)
{
  unint64_t result = sub_1A3E16124();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3E16124()
{
  unint64_t result = qword_1E95F0EC8;
  if (!qword_1E95F0EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0EC8);
  }
  return result;
}

uint64_t destroy for TensorDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TensorDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TensorDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TensorDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TensorDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TensorDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TensorDescriptor()
{
  return &type metadata for TensorDescriptor;
}

unsigned char *storeEnumTagSinglePayload for TensorDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3E1647CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TensorDescriptor.CodingKeys()
{
  return &type metadata for TensorDescriptor.CodingKeys;
}

unint64_t sub_1A3E164B8()
{
  unint64_t result = qword_1E963B780[0];
  if (!qword_1E963B780[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963B780);
  }
  return result;
}

unint64_t sub_1A3E16510()
{
  unint64_t result = qword_1E963B890;
  if (!qword_1E963B890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963B890);
  }
  return result;
}

unint64_t sub_1A3E16568()
{
  unint64_t result = qword_1E963B898[0];
  if (!qword_1E963B898[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963B898);
  }
  return result;
}

unint64_t sub_1A3E165BC()
{
  unint64_t result = qword_1E95F0ED0;
  if (!qword_1E95F0ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0ED0);
  }
  return result;
}

unint64_t sub_1A3E16610()
{
  unint64_t result = qword_1E95F0EE0;
  if (!qword_1E95F0EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0EE0);
  }
  return result;
}

unint64_t sub_1A3E16664()
{
  unint64_t result = qword_1E95F0EE8;
  if (!qword_1E95F0EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0EE8);
  }
  return result;
}

unint64_t sub_1A3E166B8()
{
  unint64_t v2 = sub_1A3E16754(MEMORY[0x1E4FBC860]);
  uint64_t v3 = (*(uint64_t (**)(void, void))(**(void **)(v0 + 16) + 248))(*(void *)(v0 + 24), *(void *)(v0 + 32));
  if (v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = v3;
    if (v3)
    {
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  return v2;
}

unint64_t sub_1A3E16754(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F18);
  unint64_t v2 = (void *)sub_1A4096C2C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_1A3C8C844(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A3E16870()
{
  if (!*(void *)(v0[8] + 16))
  {
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    uint64_t v1 = swift_bridgeObjectRetain();
    MEMORY[0x1A6253FB0](v1, MEMORY[0x1E4FBB1A0]);
    sub_1A409621C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    uint64_t v2 = swift_bridgeObjectRelease();
    uint64_t v3 = (*(uint64_t (**)(uint64_t))(*v0 + 176))(v2);
    v0[8] = sub_1A3E142F0(v3, (uint64_t (*)(uint64_t, void *))j__e5rt_program_function_get_num_extern_inputs, 0, (uint64_t (*)(uint64_t, void, uint64_t))j__e5rt_program_function_get_extern_input_names);
    swift_bridgeObjectRelease();
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    uint64_t v4 = swift_bridgeObjectRetain();
    MEMORY[0x1A6253FB0](v4, MEMORY[0x1E4FBB1A0]);
    sub_1A409621C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
  }
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_bridgeObjectRetain();
  MEMORY[0x1A6253FB0](v5, MEMORY[0x1E4FBB1A0]);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E16BE8()
{
  if (!*(void *)(v0[9] + 16))
  {
    uint64_t v1 = (*(uint64_t (**)(void))(*v0 + 176))();
    v0[9] = sub_1A3E142F0(v1, (uint64_t (*)(uint64_t, void *))j__e5rt_program_function_get_num_extern_outputs, 0, (uint64_t (*)(uint64_t, void, uint64_t))j__e5rt_program_function_get_extern_output_names);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E16CA0()
{
  swift_beginAccess();
  return *(void *)(v0 + 56);
}

uint64_t sub_1A3E16CD4(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return result;
}

void *sub_1A3E16D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBC860];
  v8[5] = MEMORY[0x1E4FBC860];
  v8[6] = v9;
  v8[7] = 0;
  v8[8] = v9;
  v8[9] = v9;
  v8[10] = 0;
  v8[11] = 0;
  id v8[2] = a1;
  _OWORD v8[3] = a2;
  _OWORD v8[4] = a3;
  swift_beginAccess();
  v8[7] = a4;
  return v8;
}

uint64_t sub_1A3E16DAC()
{
  swift_beginAccess();
  e5rt_program_function_release();
  *(void *)(v0 + 56) = 0;
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A3E16E40()
{
  sub_1A3E16DAC();

  return swift_deallocClassInstance();
}

uint64_t sub_1A3E16E74()
{
  sub_1A4096A2C();
  sub_1A409621C();
  type metadata accessor for E5RTProgramLibrary();
  sub_1A4096BAC();
  sub_1A409621C();
  swift_bridgeObjectRetain();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v1 = v0[5];
  swift_bridgeObjectRetain();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DA0);
  MEMORY[0x1A6253FB0](v1, v2);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v3 = swift_bridgeObjectRetain();
  MEMORY[0x1A6253FB0](v3, v2);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v4 = v0[8];
  swift_bridgeObjectRetain();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  MEMORY[0x1A6253FB0](v4, MEMORY[0x1E4FBB1A0]);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v6 = swift_bridgeObjectRetain();
  MEMORY[0x1A6253FB0](v6, v5);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0EF0);
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  swift_bridgeObjectRetain();
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1A409621C();
  (*(void (**)(uint64_t))(*v0 + 160))(v7);
  MEMORY[0x1A6253FB0]();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1A409621C();
  (*(void (**)(uint64_t))(*v0 + 168))(v8);
  MEMORY[0x1A6253FB0]();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A3E17244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  uint64_t result = sub_1A3E18810();
  if (!v4)
  {
    *(void *)&long long v22 = 0;
    *((void *)&v22 + 1) = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A3D5D2DC(2);
    uint64_t v9 = *(void *)(v3 + 80);
    if (!v9)
    {
      __break(1u);
      goto LABEL_14;
    }
    if (*(void *)(v9 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_1A3C8C844(a1, a2);
      if (v11)
      {
        sub_1A3C85678(*(void *)(v9 + 56) + 40 * v10, (uint64_t)&v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v23 + 1))
        {
          v17[0] = 0;
          v17[1] = 0xE000000000000000;
          sub_1A4096A2C();
          uint64_t v20 = 0;
          unint64_t v21 = 0xE000000000000000;
          sub_1A409621C();
          sub_1A409621C();
          uint64_t result = sub_1A3E194BC((uint64_t)&v22, (uint64_t)v17);
          if (v18)
          {
            __swift_project_boxed_opaque_existential_1(v17, v18);
            sub_1A4096E3C();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
            sub_1A3D5D2DC(2);
            swift_bridgeObjectRelease();
            uint64_t result = sub_1A3E194BC((uint64_t)&v22, (uint64_t)v17);
            uint64_t v12 = v18;
            if (v18)
            {
              uint64_t v13 = v19;
              uint64_t v14 = __swift_project_boxed_opaque_existential_1(v17, v18);
              a3[3] = v12;
              a3[4] = *(void *)(v13 + 8);
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(boxed_opaque_existential_1, v14, v12);
              sub_1A3E1945C((uint64_t)&v22);
              return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
            }
            goto LABEL_15;
          }
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
          return result;
        }
      }
      else
      {
        uint64_t v24 = 0;
        long long v22 = 0u;
        long long v23 = 0u;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v24 = 0;
      long long v22 = 0u;
      long long v23 = 0u;
    }
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(0xD000000000000027, 0x80000001A40B9800, v16);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return sub_1A3E1945C((uint64_t)&v22);
  }
  return result;
}

uint64_t sub_1A3E17578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1A3E18810();
  if (!v4)
  {
    uint64_t v9 = *(void *)(v3 + 88);
    if (v9)
    {
      if (*(void *)(v9 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_1A3C8C844(a1, a2);
        if (v11)
        {
          sub_1A3C85678(*(void *)(v9 + 56) + 40 * v10, (uint64_t)&v19);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)&v20 + 1))
          {
            sub_1A3C856DC(&v19, (uint64_t)&v22);
            uint64_t v12 = v24;
            uint64_t v13 = v25;
            uint64_t v14 = __swift_project_boxed_opaque_existential_1(&v22, v24);
            a3[3] = v12;
            a3[4] = *(void *)(v13 + 8);
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(boxed_opaque_existential_1, v14, v12);
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
          }
        }
        else
        {
          uint64_t v21 = 0;
          long long v19 = 0u;
          long long v20 = 0u;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v21 = 0;
        long long v19 = 0u;
        long long v20 = 0u;
      }
      sub_1A3E1945C((uint64_t)&v19);
      unint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      unint64_t v22 = 0xD000000000000028;
      unint64_t v23 = 0x80000001A40B9870;
      sub_1A409621C();
      uint64_t v16 = v22;
      uint64_t v17 = v23;
      sub_1A3C85624();
      swift_allocError();
      static VisionError.invalidArgument(message:)(v16, v17, v18);
      swift_bridgeObjectRelease();
      return swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A3E17758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3E17770(a1, a2, a3);
}

uint64_t sub_1A3E17770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 312))(a2, a3);
}

void *sub_1A3E177B8(uint64_t a1)
{
  void (*v5)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  long long v13[2];
  void v14[5];

  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)v1 + 312);
  uint64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain();
    v5(v14, v8, v9);
    if (v3) {
      break;
    }
    swift_bridgeObjectRelease();
    sub_1A3C85678((uint64_t)v14, (uint64_t)v13);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_1A3E10C0C(0, v7[2] + 1, 1, v7);
    }
    char v11 = v7[2];
    unint64_t v10 = v7[3];
    if (v11 >= v10 >> 1) {
      uint64_t v7 = sub_1A3E10C0C((void *)(v10 > 1), v11 + 1, 1, v7);
    }
    v6 += 2;
    void v7[2] = v11 + 1;
    sub_1A3C856DC(v13, (uint64_t)&v7[5 * v11 + 4]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

void *sub_1A3E1793C(uint64_t a1)
{
  void (*v5)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  long long v13[2];
  void v14[5];

  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)v1 + 320);
  uint64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain();
    v5(v14, v8, v9);
    if (v3) {
      break;
    }
    swift_bridgeObjectRelease();
    sub_1A3C85678((uint64_t)v14, (uint64_t)v13);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_1A3E10C0C(0, v7[2] + 1, 1, v7);
    }
    char v11 = v7[2];
    unint64_t v10 = v7[3];
    if (v11 >= v10 >> 1) {
      uint64_t v7 = sub_1A3E10C0C((void *)(v10 > 1), v11 + 1, 1, v7);
    }
    v6 += 2;
    void v7[2] = v11 + 1;
    sub_1A3C856DC(v13, (uint64_t)&v7[5 * v11 + 4]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1A3E17AC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  type metadata accessor for E5RTExecutionContext();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_1A3E1A1F0(v4, a1, a2, a3, a4);
}

uint64_t sub_1A3E17B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1A3E14548();
  if (!v4)
  {
    if ((_BYTE)result)
    {
      if (result == 1) {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)v3 + 384))(&v10, a1, a2, a3);
      }
      else {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)v3 + 392))(&v10, a1, a2, a3);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F00);
      return swift_dynamicCast();
    }
    else
    {
      sub_1A4096A2C();
      sub_1A409621C();
      char v11 = 0;
      sub_1A4096BAC();
      sub_1A3C85624();
      swift_allocError();
      static VisionError.invalidArgument(message:)(0, 0xE000000000000000, v9);
      swift_bridgeObjectRelease();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1A3E17D24()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 408))();
  if (!v1)
  {
    uint64_t v3 = result;
    type metadata accessor for E5RTExecutionPrewarmedState();
    return sub_1A3E25F28(v3);
  }
  return result;
}

uint64_t sub_1A3E17D94()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = 0;
  uint64_t v0 = e5rt_io_port_retain_tensor_desc();
  if (v0)
  {
    uint64_t v1 = v0;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000002BLL, 0x80000001A40B98C0, v1, v2);
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t result = e5rt_tensor_desc_get_shape();
    if (result)
    {
      uint64_t v4 = result;
      sub_1A3C85624();
      swift_allocError();
      static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000026, 0x80000001A40B98F0, v4, v5);
      swift_willThrow();
      return e5rt_tensor_desc_release();
    }
    else
    {
      __break(1u);
      __break(1u);
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A3E18368@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  uint64_t v29 = 0;
  uint64_t v7 = e5rt_io_port_retain_surface_desc();
  if (v7)
  {
    uint64_t v8 = v7;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000002CLL, 0x80000001A40B9980, v8, v9);
    return swift_willThrow();
  }
  uint64_t width = e5rt_surface_desc_get_width();
  if (width)
  {
    uint64_t v12 = width;
    sub_1A3C85624();
    swift_allocError();
    uint64_t v13 = 0xD000000000000027;
    uint64_t v14 = 0x80000001A40B99B0;
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t height = e5rt_surface_desc_get_height();
    if (!height)
    {
      long long v19 = (unsigned int *)swift_slowAlloc();
      uint64_t format = e5rt_surface_desc_get_format();
      if (format)
      {
        uint64_t v21 = format;
        sub_1A3C85624();
        swift_allocError();
        static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000028, 0x80000001A40B9A10, v21, v22);
        swift_willThrow();
      }
      else
      {
        uint64_t v23 = sub_1A3E14AB8(*v19);
        if (!v3)
        {
          uint64_t v24 = v23;
          swift_bridgeObjectRetain();
          sub_1A3E23114(a1, a2, v24, 0, 0, v28);
          a3[3] = &type metadata for ImageTensorDescriptor;
          a3[4] = sub_1A3E1956C();
          uint64_t v25 = (_OWORD *)swift_allocObject();
          *a3 = v25;
          long long v26 = v28[1];
          v25[1] = v28[0];
          long long v25[2] = v26;
          long long v27 = v28[3];
          v25[3] = v28[2];
          v25[4] = v27;
        }
      }
      MEMORY[0x1A6257B40](v19, -1, -1);
      return e5rt_surface_desc_release();
    }
    uint64_t v12 = height;
    sub_1A3C85624();
    swift_allocError();
    uint64_t v14 = 0x80000001A40B99E0;
    uint64_t v16 = v18;
    uint64_t v13 = 0xD000000000000028;
  }
  static VisionError.espressoE5RTError(message:errorCode:)(v13, v14, v12, v16);
  swift_willThrow();
  return e5rt_surface_desc_release();
}

uint64_t sub_1A3E18660()
{
  (*(void (**)(void))(*(void *)v0 + 176))();
  uint64_t v1 = e5rt_precompiled_compute_op_create_options_create_with_program_function();
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000053, 0x80000001A40B9A40, v2, v3);
    swift_willThrow();
  }
  else
  {
    uint64_t precompiled_compute_operation_with_options = e5rt_execution_stream_operation_create_precompiled_compute_operation_with_options();
    if (precompiled_compute_operation_with_options)
    {
      uint64_t v2 = precompiled_compute_operation_with_options;
      sub_1A3C85624();
      swift_allocError();
      static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000005DLL, 0x80000001A40B9AA0, v2, v5);
      swift_willThrow();
    }
    else
    {
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      uint64_t v2 = 0;
    }
    e5rt_precompiled_compute_op_create_options_release();
  }
  return v2;
}

uint64_t sub_1A3E18810()
{
  uint64_t v2 = v0;
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  if (!v0[10] || !v0[11])
  {
    sub_1A4096A2C();
    uint64_t v3 = swift_bridgeObjectRelease();
    unint64_t v36 = 0xD000000000000027;
    unint64_t v37 = 0x80000001A40B9C10;
    uint64_t v4 = *(void (**)(uint64_t))(*v0 + 160);
    v4(v3);
    uint64_t v5 = MEMORY[0x1E4FBB1A0];
    MEMORY[0x1A6253FB0]();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    uint64_t v6 = swift_bridgeObjectRelease();
    uint64_t v7 = ((uint64_t (*)(uint64_t))v4)(v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F00);
    uint64_t v34 = sub_1A409605C();
    sub_1A4096A2C();
    uint64_t v8 = swift_bridgeObjectRelease();
    unint64_t v36 = 0xD000000000000028;
    unint64_t v37 = 0x80000001A40B9C40;
    uint64_t v9 = *(void (**)(uint64_t))(*v0 + 168);
    v9(v8);
    MEMORY[0x1A6253FB0]();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    uint64_t v10 = swift_bridgeObjectRelease();
    uint64_t v11 = ((uint64_t (*)(uint64_t))v9)(v10);
    uint64_t v33 = sub_1A409605C();
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    MEMORY[0x1A6253FB0](v7, v5);
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    MEMORY[0x1A6253FB0](v11, v5);
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    unint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    swift_retain();
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1A3D5D2DC(2);
    uint64_t v13 = (*(uint64_t (**)(uint64_t))(*v0 + 408))(v12);
    if (!v1)
    {
      uint64_t v14 = v13;
      unint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      if (!v14) {
        goto LABEL_30;
      }
      unint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
      sub_1A4096A2C();
      sub_1A409621C();
      sub_1A409621C();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(v7 + 16);
      uint64_t v32 = v11;
      if (v15)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = (uint64_t *)(v7 + 40);
        while (1)
        {
          uint64_t v17 = *(v16 - 1);
          uint64_t v18 = *v16;
          unint64_t v36 = 0;
          unint64_t v37 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_1A4096A2C();
          swift_bridgeObjectRelease();
          unint64_t v36 = 0xD000000000000032;
          unint64_t v37 = 0x80000001A40B9E70;
          sub_1A409621C();
          sub_1A3D5D2DC(2);
          swift_bridgeObjectRelease();
          uint64_t v39 = 0;
          sub_1A40961AC();
          uint64_t v19 = e5rt_execution_stream_operation_retain_input_port();
          swift_release();
          if (v19) {
            break;
          }
          if (!v39) {
            __break(1u);
          }
          (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*v2 + 368))(&v36, v39, v17, v18);
          *(void *)&v35[0] = 0;
          *((void *)&v35[0] + 1) = 0xE000000000000000;
          sub_1A4096A2C();
          sub_1A409621C();
          sub_1A409621C();
          __swift_project_boxed_opaque_existential_1(&v36, v38);
          sub_1A4096E3C();
          sub_1A3D5D2DC(2);
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_1A3C85678((uint64_t)&v36, (uint64_t)v35);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_1A3E19954(v35, v17, v18, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
          e5rt_io_port_release();
          v16 += 2;
          if (!--v15)
          {
            swift_bridgeObjectRelease();
            uint64_t v11 = v32;
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        uint64_t v27 = swift_allocError();
        static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000003DLL, 0x80000001A40B9EB0, v19, v28);
        swift_willThrow();
        if (v27)
        {
LABEL_21:
          e5rt_execution_stream_operation_release();
          goto LABEL_24;
        }
      }
      else
      {
LABEL_14:
        uint64_t v21 = *(void *)(v11 + 16);
        if (v21)
        {
          swift_bridgeObjectRetain();
          uint64_t v22 = (uint64_t *)(v11 + 40);
          while (1)
          {
            uint64_t v23 = *(v22 - 1);
            uint64_t v24 = *v22;
            unint64_t v36 = 0;
            unint64_t v37 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_1A4096A2C();
            swift_bridgeObjectRelease();
            unint64_t v36 = 0xD000000000000035;
            unint64_t v37 = 0x80000001A40B9F20;
            sub_1A409621C();
            sub_1A3D5D2DC(2);
            swift_bridgeObjectRelease();
            uint64_t v39 = 0;
            sub_1A40961AC();
            uint64_t v25 = e5rt_execution_stream_operation_retain_output_port();
            swift_release();
            if (v25) {
              break;
            }
            if (!v39)
            {
              __break(1u);
              goto LABEL_28;
            }
            (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*v2 + 368))(&v36, v39, v23, v24);
            *(void *)&v35[0] = 0;
            *((void *)&v35[0] + 1) = 0xE000000000000000;
            sub_1A4096A2C();
            sub_1A409621C();
            sub_1A409621C();
            __swift_project_boxed_opaque_existential_1(&v36, v38);
            sub_1A4096E3C();
            sub_1A3D5D2DC(2);
            swift_bridgeObjectRelease();
            swift_beginAccess();
            sub_1A3C85678((uint64_t)&v36, (uint64_t)v35);
            char v26 = swift_isUniquelyReferenced_nonNull_native();
            sub_1A3E19954(v35, v23, v24, v26);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
            e5rt_io_port_release();
            v22 += 2;
            if (!--v21)
            {
              swift_bridgeObjectRelease();
              goto LABEL_23;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A3C85624();
          uint64_t v29 = swift_allocError();
          static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000003ELL, 0x80000001A40B9F60, v25, v30);
          swift_willThrow();
          if (v29) {
            goto LABEL_21;
          }
        }
      }
LABEL_23:
      e5rt_execution_stream_operation_release();
      swift_beginAccess();
      v2[10] = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v2[11] = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  unint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  if (v0[10])
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F00);
    sub_1A409603C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    if (v0[11])
    {
      swift_bridgeObjectRetain();
      sub_1A409603C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_28:
    __break(1u);
  }
  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1A3E19410()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 304))();
}

uint64_t sub_1A3E1945C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0EF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3E194BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3E19524()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

unint64_t sub_1A3E1956C()
{
  unint64_t result = qword_1E95F0F08;
  if (!qword_1E95F0F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0F08);
  }
  return result;
}

uint64_t sub_1A3E195C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t type metadata accessor for E5RTFunction()
{
  return self;
}

uint64_t sub_1A3E1962C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F10);
  char v37 = a2;
  uint64_t v6 = sub_1A4096C1C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v37)
    {
      sub_1A3C856DC(v25, (uint64_t)v38);
    }
    else
    {
      sub_1A3C85678((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1A4096F2C();
    sub_1A40961CC();
    uint64_t result = sub_1A4096F7C();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_1A3C856DC(v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A3E19954(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A3C8C844(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A3E19B1C();
      goto LABEL_7;
    }
    sub_1A3E1962C(v15, a4 & 1);
    unint64_t v21 = sub_1A3C8C844(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      int64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1A4096EBC();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_1(v19);
    return sub_1A3C856DC(a1, v19);
  }
LABEL_13:
  sub_1A3E19AAC(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E19AAC(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1A3C856DC(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_1A3E19B1C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_1A3C85678(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1A3C856DC(v26, *(void *)(v4 + 56) + v20);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A3E19D08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  return sub_1A3E1FE8C(a2, a3, a4, a6, a7, a8);
}

uint64_t sub_1A3E19D24()
{
  return 0;
}

uint64_t sub_1A3E19D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A3E19D08(a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), a5, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1A3E19D50()
{
  uint64_t v1 = sub_1A4095B8C();
  sub_1A409621C();
  swift_bridgeObjectRetain();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A3E19DD8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 40) + 160))();
}

uint64_t sub_1A3E19E1C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 40) + 168))();
}

uint64_t sub_1A3E19E60()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1A3E19E94(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 17) = a1;
  return result;
}

uint64_t sub_1A3E19ED4()
{
  return swift_retain();
}

uint64_t sub_1A3E19F0C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t sub_1A3E19F54()
{
  return swift_retain();
}

uint64_t sub_1A3E19F8C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t sub_1A3E19FD4()
{
  swift_beginAccess();
  return *(void *)(v0 + 48);
}

uint64_t sub_1A3E1A008(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_1A3E1A048())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A3E1A09C()
{
  return swift_retain();
}

uint64_t sub_1A3E1A0D4(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_release();
}

uint64_t (*sub_1A3E1A11C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A3E1A170()
{
  return swift_retain();
}

uint64_t sub_1A3E1A1A8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_release();
}

uint64_t sub_1A3E1A1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  sub_1A3E1A270(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1A3E1A270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7 = v6;
  uint64_t v8 = v5;
  uint64_t v9 = a4;
  *(unsigned char *)(v5 + 17) = 0;
  uint64_t v11 = v5 + 17;
  *(void *)(v5 + 24) = 0;
  uint64_t v58 = v5 + 24;
  *(void *)(v5 + 32) = 0;
  uint64_t v56 = v5 + 32;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  uint64_t v53 = (uint64_t *)(v5 + 64);
  if (a3)
  {
    if (a4) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1A3C85624();
    swift_allocError();
    uint64_t v18 = v17;
    swift_retain();
    swift_retain();
    static VisionError.invalidArgument(message:)(0xD00000000000003FLL, 0x80000001A40BA160, v18);
    swift_willThrow();
    swift_release();
    swift_release();
LABEL_11:
    swift_release();
    int v20 = 0;
LABEL_15:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if (v20) {
      swift_release();
    }
    swift_release();
    swift_release();
    type metadata accessor for E5RTExecutionContext();
    swift_deallocPartialClassInstance();
    return v8;
  }
  if (a4) {
    goto LABEL_7;
  }
LABEL_3:
  if (a2)
  {
    unint64_t v12 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 120);
    swift_retain();
    swift_retain();
    uint64_t v14 = swift_retain();
    uint64_t v9 = a4;
    uint64_t v15 = v12(v14);
    uint64_t v16 = swift_release();
    if (v15)
    {
      uint64_t v55 = v7;
      goto LABEL_13;
    }
  }
  else
  {
    swift_retain();
    uint64_t v16 = swift_retain();
  }
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 408))(v16);
  if (v7)
  {
    swift_release();
    swift_release();
    goto LABEL_11;
  }
  uint64_t v15 = v19;
  uint64_t v55 = 0;
LABEL_13:
  swift_beginAccess();
  *(void *)(v5 + 24) = a3;
  swift_retain();
  swift_release();
  swift_beginAccess();
  *(void *)(v5 + 32) = v9;
  swift_retain();
  swift_release();
  *(void *)(v5 + 40) = a1;
  swift_beginAccess();
  *(void *)(v5 + 48) = v15;
  swift_beginAccess();
  swift_retain();
  uint64_t v21 = e5rt_execution_stream_create();
  swift_endAccess();
  if (v21)
  {
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000028, 0x80000001A40B9FD0, v21, v22);
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    int v20 = 1;
    goto LABEL_15;
  }
  unint64_t v48 = (void *)(v8 + 48);
  unint64_t v49 = (uint64_t *)(v8 + 56);
  *(unsigned char *)(v8 + 16) = a5 & 1;
  if (a3) {
    BOOL v24 = v9 == 0;
  }
  else {
    BOOL v24 = 1;
  }
  char v25 = !v24;
  swift_beginAccess();
  *(unsigned char *)(v8 + 17) = v25;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v8 + 17) != 1) {
    goto LABEL_53;
  }
  type metadata accessor for E5RTExecutionBoundPorts();
  uint64_t v26 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F20);
  *(void *)(v26 + 16) = sub_1A409605C();
  swift_beginAccess();
  *uint64_t v53 = v26;
  uint64_t result = swift_release();
  if (!*(void *)v58)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  uint64_t v52 = v8;
  unint64_t v27 = *(uint64_t (**)(uint64_t))(**(void **)v58 + 144);
  uint64_t v28 = swift_retain();
  uint64_t v29 = v27(v28);
  unint64_t v31 = v30;
  uint64_t result = swift_release();
  uint64_t v50 = *(void *)(v29 + 16);
  if (v31 != v50)
  {
    uint64_t v32 = v29 + 16 * v31 + 40;
    unint64_t v33 = v31;
    while ((v31 & 0x8000000000000000) == 0)
    {
      if (v33 >= *(void *)(v29 + 16)) {
        goto LABEL_60;
      }
      if (!*(void *)v58) {
        goto LABEL_63;
      }
      if (!*v53) {
        goto LABEL_64;
      }
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_1A3E1AD9C();
      if (v55)
      {
LABEL_54:
        swift_bridgeObjectRelease();
        uint64_t v8 = v52;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release_n();
        swift_release_n();
        swift_release();
        return v8;
      }
      ++v33;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = swift_release();
      v32 += 16;
      if (v50 == v33) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1A409605C();
  swift_beginAccess();
  *(void *)(v11 + 55) = v34;
  uint64_t result = swift_release();
  if (!*(void *)v56)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  int64_t v35 = *(uint64_t (**)(uint64_t))(**(void **)v56 + 144);
  uint64_t v36 = swift_retain();
  uint64_t v37 = v35(v36);
  unint64_t v39 = v38;
  uint64_t result = swift_release();
  uint64_t v54 = *(void *)(v37 + 16);
  if (v39 != v54)
  {
    uint64_t v40 = v37 + 16 * v39 + 40;
    unint64_t v41 = v39;
    while ((v39 & 0x8000000000000000) == 0)
    {
      if (v41 >= *(void *)(v37 + 16)) {
        goto LABEL_62;
      }
      if (!*(void *)v56) {
        goto LABEL_65;
      }
      if (!*(void *)(v11 + 55)) {
        goto LABEL_66;
      }
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_1A3E1B130();
      if (v55) {
        goto LABEL_54;
      }
      ++v41;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = swift_release();
      v40 += 16;
      if (v54 == v41) {
        goto LABEL_46;
      }
    }
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_46:
  swift_bridgeObjectRelease();
  if (*(unsigned char *)v11 != 1)
  {
    uint64_t v8 = v52;
    goto LABEL_53;
  }
  uint64_t result = *v49;
  uint64_t v8 = v52;
  if (!*v49)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (*v48)
  {
    uint64_t v42 = e5rt_execution_stream_encode_operation();
    if (v42)
    {
      uint64_t v43 = v42;
      sub_1A3C85624();
      swift_allocError();
      uint64_t v45 = 0xD000000000000032;
      int v46 = "e5rt_execution_stream_encode_operation call failed";
LABEL_51:
      static VisionError.espressoE5RTError(message:errorCode:)(v45, (unint64_t)(v46 - 32) | 0x8000000000000000, v43, v44);
      swift_willThrow();
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();
      swift_release();
      return v8;
    }
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    if (a5)
    {
      sub_1A4096A2C();
      sub_1A409621C();
      sub_1A409621C();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      uint64_t v47 = e5rt_execution_stream_prewire_in_use_allocations();
      if (v47)
      {
        uint64_t v43 = v47;
        sub_1A3C85624();
        swift_allocError();
        uint64_t v45 = 0xD00000000000003CLL;
        int v46 = "e5rt_execution_stream_prewire_in_use_allocations call failed";
        goto LABEL_51;
      }
    }
LABEL_53:
    swift_release();
    swift_release_n();
    swift_release();
    swift_release_n();
    return v8;
  }
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_1A3E1ACC0()
{
  swift_beginAccess();
  e5rt_execution_stream_operation_release();
  *(void *)(v0 + 48) = 0;
  swift_endAccess();
  swift_beginAccess();
  e5rt_execution_stream_release();
  *(void *)(v0 + 56) = 0;
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1A3E1AD68()
{
  sub_1A3E1ACC0();

  return swift_deallocClassInstance();
}

uint64_t sub_1A3E1AD9C()
{
  (*(void (**)(void))(*(void *)v0 + 248))();
  sub_1A40961AC();
  uint64_t v1 = e5rt_execution_stream_operation_retain_input_port();
  uint64_t result = swift_release();
  if (v1)
  {
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000003DLL, 0x80000001A40B9EB0, v1, v3);
    return swift_willThrow();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3E1B130()
{
  (*(void (**)(void))(*(void *)v0 + 248))();
  sub_1A40961AC();
  uint64_t v1 = e5rt_execution_stream_operation_retain_output_port();
  swift_release();
  if (v1)
  {
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000003ELL, 0x80000001A40B9F60, v1, v2);
    return swift_willThrow();
  }
  else
  {
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A3D5D2DC(2);
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3E1B4C8()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 464))();
  if (!v1)
  {
    (*(void (**)(uint64_t))(*(void *)v0 + 272))(result);
    uint64_t result = e5rt_execution_stream_execute_sync();
    if (result)
    {
      uint64_t v3 = result;
      sub_1A3C85624();
      swift_allocError();
      static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000002ELL, 0x80000001A40BA1A0, v3, v4);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1A3E1B5A4(void (*a1)(void, uint64_t *), uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 464))();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 224))(v5);
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = (void *)swift_allocObject();
    id v8[2] = v2;
    _OWORD v8[3] = a1;
    _OWORD v8[4] = a2;
    v8[5] = v7;
    uint64_t v9 = *(void (**)(uint64_t))(*(void *)v2 + 272);
    swift_retain();
    swift_retain();
    uint64_t v10 = swift_retain();
    v9(v10);
    aBlock[4] = sub_1A3E2071C;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A3E1B7DC;
    aBlock[3] = &block_descriptor_4;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v12 = e5rt_execution_stream_submit_async();
    _Block_release(v11);
    if (v12) {
      sub_1A3E20610(v12, 0xD000000000000022, 0x80000001A40BA200, a1);
    }
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3E1B7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v7(a2, a3, a4);

  return swift_release();
}

uint64_t sub_1A3E1B84C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v95 = sub_1A4095F0C();
  uint64_t v97 = *(const char **)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v96 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1A4095ECC();
  uint64_t v100 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  BOOL v101 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v79 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v99 = (char *)&v79 - v10;
  uint64_t v11 = sub_1A4095EFC();
  uint64_t v103 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int64_t v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v79 - v15;
  sub_1A3D5D2DC(2);
  type metadata accessor for E5RTExecutionBoundPorts();
  uint64_t v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F20);
  *(void *)(v17 + 16) = sub_1A409605C();
  uint64_t v105 = 0;
  unint64_t v106 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  uint64_t v18 = v102;
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v1 + 480))(a1, v17);
  uint64_t v20 = v19;
  if (v18)
  {
    swift_release();
    return v20;
  }
  uint64_t v85 = v19;
  uint64_t v94 = v13;
  uint64_t v102 = v8;
  uint64_t v81 = 0;
  uint64_t v93 = v17;
  uint64_t v105 = 0;
  unint64_t v106 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  uint64_t v21 = sub_1A3D9236C();
  uint64_t v22 = *(NSObject **)(v103 + 16);
  uint64_t v88 = v21;
  uint64_t v89 = v103 + 16;
  uint64_t v92 = v11;
  uint64_t v87 = v22;
  ((void (*)(const char *))v22)(v16);
  unint64_t v23 = sub_1A3D92290();
  BOOL v24 = *v23;
  uint64_t v25 = *((unsigned __int8 *)v23 + 16);
  swift_retain_n();
  uint64_t v26 = v99;
  sub_1A4095EBC();
  unint64_t v27 = sub_1A4095EDC();
  unsigned int v84 = sub_1A409678C();
  char v28 = sub_1A40968EC();
  uint64_t v90 = v16;
  uint64_t v86 = v23;
  if (v28)
  {
    if (v25)
    {
      if ((unint64_t)v24 >> 32)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v24 >> 11 == 27)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if (v24 >> 16 > 0x10) {
        goto LABEL_33;
      }
      uint64_t v83 = &v107;
      uint64_t v29 = v102;
      unint64_t v30 = v99;
    }
    else
    {
      if (!v24)
      {
LABEL_37:
        swift_release_n();
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v29 = v102;
      unint64_t v30 = v99;
      uint64_t v83 = v24;
    }
    BOOL v91 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
    unint64_t v37 = (v100 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v38 = v98;
    v91(v29, v30, v98);
    uint64_t v39 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v105 = v40;
    *(_DWORD *)uint64_t v39 = 136315394;
    uint64_t v31 = v2;
    uint64_t v41 = (*(uint64_t (**)(void))(*(void *)v2 + 152))();
    uint64_t v104 = sub_1A3CB8AB0(v41, v42, &v105);
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    type metadata accessor for E5RTExecutionContext();
    uint64_t v43 = sub_1A3CA9EBC(v2);
    uint64_t v104 = sub_1A3CB8AB0(v43, v44, &v105);
    uint64_t v36 = v102;
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_signpost_id_t v45 = sub_1A4095EAC();
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v27, (os_signpost_type_t)v84, v45, v83, "E5RTExecutionContext (%s, %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    uint64_t v46 = v40;
    uint64_t v26 = v99;
    MEMORY[0x1A6257B40](v46, -1, -1);
    uint64_t v47 = v39;
    uint64_t v32 = v100;
    MEMORY[0x1A6257B40](v47, -1, -1);

    uint64_t v35 = v38;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v38);
    unint64_t v34 = v37;
    unint64_t v33 = v91;
  }
  else
  {
    swift_release_n();

    uint64_t v31 = v2;
    uint64_t v32 = v100;
    unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
    unint64_t v34 = (v100 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v35 = v98;
    uint64_t v36 = v102;
  }
  BOOL v91 = v33;
  unint64_t v82 = v34;
  v33(v36, v26, v35);
  sub_1A4095F3C();
  swift_allocObject();
  uint64_t v48 = sub_1A4095F2C();
  uint64_t v83 = *(const char **)(v32 + 8);
  ((void (*)(char *, uint64_t))v83)(v26, v35);
  uint64_t v50 = v103 + 8;
  unint64_t v49 = *(uint64_t (**)(const char *, uint64_t))(v103 + 8);
  uint64_t v51 = v92;
  uint64_t v52 = v49(v90, v92);
  (*(void (**)(uint64_t))(*(void *)v31 + 272))(v52);
  unsigned int v84 = e5rt_execution_stream_execute_sync();
  ((void (*)(char *, uint64_t, uint64_t))v87)(v94, v88, v51);
  uint64_t v90 = *v86;
  LODWORD(v89) = *((unsigned __int8 *)v86 + 16);
  swift_retain_n();
  uint64_t v53 = v32 + 8;
  uint64_t v54 = sub_1A4095EDC();
  uint64_t v99 = (char *)v48;
  sub_1A4095F1C();
  LODWORD(v88) = sub_1A409677C();
  if ((sub_1A40968EC() & 1) == 0)
  {
    swift_release_n();

    ((void (*)(char *, uint64_t))v83)(v101, v35);
    v49(v94, v51);
LABEL_26:
    uint64_t v105 = 0;
    unint64_t v106 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    uint64_t v75 = v85;
    uint64_t v76 = v84;
    if (v84)
    {
      sub_1A3C85624();
      swift_allocError();
      static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000002ELL, 0x80000001A40BA1A0, v76, v77);
      swift_willThrow();
      swift_release();
    }
    else
    {
      uint64_t v105 = 0;
      unint64_t v106 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      uint64_t v105 = 0xD00000000000001FLL;
      unint64_t v106 = 0x80000001A40BA300;
      uint64_t v104 = v75;
      type metadata accessor for NamedObjects();
      sub_1A3E20AD8(&qword_1E95EF430);
      sub_1A4096E1C();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
    }
    swift_release();
    swift_release();
    return v75;
  }
  uint64_t v87 = v54;
  uint64_t v55 = (void (*)(char *, uint64_t))v49;
  uint64_t v56 = v101;
  uint64_t v103 = v50;
  uint64_t v57 = v31;
  unint64_t v80 = v55;
  if (v89)
  {
    uint64_t v59 = v96;
    uint64_t v58 = v97;
    if (!((unint64_t)v90 >> 32))
    {
      uint64_t v60 = v95;
      if (v90 >> 11 == 27)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v90 >> 16 <= 0x10)
      {
        uint64_t v90 = &v108;
        goto LABEL_22;
      }
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  uint64_t v59 = v96;
  uint64_t v58 = v97;
  if (v90)
  {
    uint64_t v60 = v95;
LABEL_22:
    swift_retain();
    sub_1A4095F4C();
    swift_release();
    int v61 = (*((uint64_t (**)(char *, uint64_t))v58 + 11))(v59, v60);
    int v62 = *MEMORY[0x1E4FBD340];
    uint64_t v100 = v53;
    if (v61 == v62)
    {
      char v63 = 0;
      uint64_t v97 = "[Error] Interval already ended";
    }
    else
    {
      (*((void (**)(char *, uint64_t))v58 + 1))(v59, v60);
      uint64_t v97 = "E5RTExecutionContext (%s, %s";
      char v63 = 2;
    }
    uint64_t v64 = v102;
    uint64_t v65 = v98;
    v91(v102, v56, v98);
    uint64_t v66 = swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v105 = v67;
    *(unsigned char *)uint64_t v66 = v63;
    *(unsigned char *)(v66 + 1) = v63;
    *(_WORD *)(v66 + 2) = 2080;
    uint64_t v68 = (*(uint64_t (**)(void))(*(void *)v57 + 152))();
    uint64_t v104 = sub_1A3CB8AB0(v68, v69, &v105);
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2080;
    type metadata accessor for E5RTExecutionContext();
    uint64_t v70 = sub_1A3CA9EBC(v57);
    uint64_t v104 = sub_1A3CB8AB0(v70, v71, &v105);
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_signpost_id_t v72 = sub_1A4095EAC();
    os_log_t v73 = v87;
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v87, (os_signpost_type_t)v88, v72, v90, v97, (uint8_t *)v66, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6257B40](v67, -1, -1);
    MEMORY[0x1A6257B40](v66, -1, -1);

    CGFloat v74 = v83;
    ((void (*)(char *, uint64_t))v83)(v101, v65);
    v80(v94, v92);
    ((void (*)(char *, uint64_t))v74)(v64, v65);
    goto LABEL_26;
  }
LABEL_38:
  uint64_t result = swift_release_n();
  __break(1u);
  return result;
}

uint64_t sub_1A3E1C4B8(uint64_t a1, void (*a2)(void, uint64_t *), uint64_t a3)
{
  type metadata accessor for E5RTExecutionBoundPorts();
  uint64_t v7 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F20);
  *(void *)(v7 + 16) = sub_1A409605C();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 480))(a1, v7);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v3;
  __n128 v9[3] = a2;
  void v9[4] = a3;
  v9[5] = v8;
  uint64_t v10 = *(void (**)(uint64_t))(*(void *)v3 + 272);
  swift_retain();
  swift_retain();
  uint64_t v11 = swift_retain();
  v10(v11);
  v15[4] = sub_1A3E2080C;
  v15[5] = v9;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  void v15[2] = sub_1A3E1B7DC;
  v15[3] = &block_descriptor_10;
  uint64_t v12 = _Block_copy(v15);
  swift_retain();
  swift_release();
  uint64_t v13 = e5rt_execution_stream_submit_async();
  _Block_release(v12);
  if (v13) {
    sub_1A3E20610(v13, 0xD000000000000022, 0x80000001A40BA200, a2);
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A3E1C79C()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 176))();
  if ((result & 1) == 0)
  {
    sub_1A3C85624();
    swift_allocError();
    static VisionError.internalError(message:)(0xD000000000000027, 0x80000001A40BA320, v2);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A3E1C834()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 176))();
  if (result)
  {
    sub_1A3C85624();
    swift_allocError();
    static VisionError.internalError(message:)(0xD00000000000002BLL, 0x80000001A40BA350, v2);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A3E1C8CC(uint64_t a1, uint64_t a2)
{
  void (**v147)(void *__return_ptr, void, void);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t);
  uint64_t v154;
  uint64_t v155;
  char **(*v156)();
  uint64_t v157;
  uint64_t v158;
  uint64_t (**v159)(void);
  uint64_t (*v160)(void);
  uint64_t v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t result;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void v173[2];
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  void (**v180)(void *__return_ptr, void, void);
  void (*v181)(uint64_t (**__return_ptr)(void, void), uint64_t, uint64_t);
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  const char *v187;
  uint64_t v188;
  uint64_t (*v189)(uint64_t);
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t (*v193)(void);
  char *v194;
  uint64_t (*v195)(void, void);
  char *v196;
  uint64_t v197;
  void (*v198)(uint64_t (*)(void), uint64_t, uint64_t);
  uint64_t v199;
  const char *v200;
  uint64_t v201;
  uint64_t (*v202)(void);
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t (*v208)(void);
  unint64_t v209;
  uint64_t v210;
  unsigned __int8 *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  __CVBuffer *v216;
  unint64_t v217;
  uint64_t (*v218)(void, void);
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  char v223;
  char v224;

  uint64_t v3 = v2;
  uint64_t v206 = a2;
  uint64_t v207 = a1;
  uint64_t v4 = sub_1A4095ECC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v194 = (char *)v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v192 = (char *)v173 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v204 = (char *)v173 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v173 - v12;
  uint64_t v14 = sub_1A4095EFC();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v193 = (uint64_t (*)(void))((char *)v173 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v202 = (uint64_t (*)(void))((char *)v173 - v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v173 - v20;
  uint64_t v22 = sub_1A3D9236C();
  uint64_t v210 = v15;
  unint64_t v23 = *(void (**)(uint64_t (*)(void), uint64_t, uint64_t))(v15 + 16);
  uint64_t v199 = v22;
  uint64_t v205 = v14;
  uint64_t v200 = (const char *)(v15 + 16);
  uint64_t v198 = v23;
  ((void (*)(char *))v23)(v21);
  BOOL v24 = sub_1A3D9226C();
  uint64_t v25 = *v24;
  char v26 = *((unsigned char *)v24 + 16);
  swift_retain_n();
  sub_1A4095EBC();
  unint64_t v27 = sub_1A4095EDC();
  LODWORD(v197) = sub_1A409678C();
  char v28 = sub_1A40968EC();
  uint64_t v211 = (unsigned __int8 *)v3;
  uint64_t v201 = v4;
  if (v28)
  {
    if (v26)
    {
      if ((unint64_t)v25 >> 32)
      {
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      if (v25 >> 11 == 27)
      {
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
      if (v25 >> 16 > 0x10) {
        goto LABEL_97;
      }
      uint64_t v196 = &v222;
    }
    else
    {
      if (!v25)
      {
LABEL_107:
        swift_release_n();
        __break(1u);
        goto LABEL_108;
      }
      uint64_t v196 = v25;
    }
    uint64_t v208 = *(uint64_t (**)(void))(v5 + 16);
    uint64_t v209 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v32 = v204;
    ((void (*)(char *, char *, uint64_t))v208)(v204, v13, v4);
    uint64_t v33 = swift_slowAlloc();
    uint64_t v195 = (uint64_t (*)(void, void))swift_slowAlloc();
    uint64_t v218 = v195;
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v203 = v5;
    uint64_t v31 = v211;
    uint64_t v34 = (*(uint64_t (**)(void))(*(void *)v211 + 152))();
    uint64_t v216 = (__CVBuffer *)sub_1A3CB8AB0(v34, v35, (uint64_t *)&v218);
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    type metadata accessor for E5RTExecutionContext();
    uint64_t v36 = sub_1A3CA9EBC((uint64_t)v31);
    uint64_t v216 = (__CVBuffer *)sub_1A3CB8AB0(v36, v37, (uint64_t *)&v218);
    sub_1A409695C();
    swift_release_n();
    uint64_t v5 = v203;
    swift_bridgeObjectRelease();
    os_signpost_id_t v38 = sub_1A4095EAC();
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v27, (os_signpost_type_t)v197, v38, v196, "E5RTExecutionContext (%s, %s", (uint8_t *)v33, 0x16u);
    uint64_t v39 = v195;
    swift_arrayDestroy();
    MEMORY[0x1A6257B40](v39, -1, -1);
    uint64_t v40 = v33;
    uint64_t v4 = v201;
    MEMORY[0x1A6257B40](v40, -1, -1);

    unint64_t v30 = v209;
    uint64_t v29 = v208;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v32, v4);
  }
  else
  {
    swift_release_n();

    uint64_t v29 = *(uint64_t (**)(void))(v5 + 16);
    unint64_t v30 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v31 = (unsigned __int8 *)v3;
    uint64_t v32 = v204;
  }
  uint64_t v208 = v29;
  uint64_t v209 = v30;
  ((void (*)(char *, char *, uint64_t))v29)(v32, v13, v4);
  uint64_t v197 = sub_1A4095F3C();
  swift_allocObject();
  uint64_t v41 = sub_1A4095F2C();
  uint64_t v43 = *(const char **)(v5 + 8);
  uint64_t v42 = v5 + 8;
  uint64_t v196 = (char *)v43;
  ((void (*)(char *, uint64_t))v43)(v13, v4);
  unint64_t v44 = *(void (**)(void, void))(v210 + 8);
  uint64_t v45 = v205;
  v210 += 8;
  uint64_t v195 = (uint64_t (*)(void, void))v44;
  v44(v21, v205);
  uint64_t v46 = sub_1A3D5D2DC(2);
  uint64_t v47 = *(uint64_t (**)(uint64_t))(*(void *)v31 + 176);
  uint64_t v48 = *(void *)v31 + 176;
  if ((v47(v46) & 1) == 0)
  {
    (*(void (**)(void))(*(void *)v31 + 272))();
    uint64_t v49 = e5rt_execution_stream_reset();
    if (v49)
    {
      uint64_t v50 = v49;
      sub_1A3C85624();
      swift_allocError();
      uint64_t v52 = 0xD000000000000027;
      uint64_t v53 = "e5rt_execution_stream_reset call failed";
LABEL_14:
      static VisionError.espressoE5RTError(message:errorCode:)(v52, (unint64_t)(v53 - 32) | 0x8000000000000000, v50, v51);
      swift_willThrow();
LABEL_89:
      sub_1A3E1E9E0(v41, (uint64_t)v31, (uint64_t (*)(uint64_t))sub_1A3D9226C);
      swift_release();
      return v50;
    }
  }
  uint64_t v203 = v42;
  uint64_t v188 = v48;
  uint64_t v189 = v47;
  uint64_t v190 = v41;
  uint64_t v191 = *((void *)v31 + 5);
  v198(v202, v199, v45);
  uint64_t v54 = sub_1A3D92284();
  uint64_t v55 = *v54;
  char v56 = *((unsigned char *)v54 + 16);
  swift_retain_n();
  uint64_t v57 = v192;
  sub_1A4095EBC();
  uint64_t v58 = sub_1A4095EDC();
  os_signpost_type_t v59 = sub_1A409678C();
  if (sub_1A40968EC())
  {
    if (v56)
    {
      if ((unint64_t)v55 >> 32)
      {
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
      if (v55 >> 11 == 27)
      {
LABEL_103:
        __break(1u);
        goto LABEL_104;
      }
      if (v55 >> 16 > 0x10) {
        goto LABEL_99;
      }
      uint64_t v187 = &v223;
    }
    else
    {
      if (!v55)
      {
LABEL_108:
        swift_release_n();
        __break(1u);
        goto LABEL_109;
      }
      uint64_t v187 = v55;
    }
    int v62 = v204;
    ((void (*)(char *, char *, uint64_t))v208)(v204, v57, v4);
    uint64_t v63 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    uint64_t v218 = (uint64_t (*)(void, void))v64;
    *(_DWORD *)uint64_t v63 = 136315394;
    uint64_t v65 = (*(uint64_t (**)(void))(*(void *)v31 + 152))();
    uint64_t v216 = (__CVBuffer *)sub_1A3CB8AB0(v65, v66, (uint64_t *)&v218);
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2080;
    type metadata accessor for E5RTExecutionContext();
    uint64_t v67 = sub_1A3CA9EBC((uint64_t)v211);
    uint64_t v216 = (__CVBuffer *)sub_1A3CB8AB0(v67, v68, (uint64_t *)&v218);
    uint64_t v31 = v211;
    sub_1A409695C();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_signpost_id_t v69 = sub_1A4095EAC();
    os_signpost_type_t v70 = v59;
    uint64_t v60 = v62;
    _os_signpost_emit_with_name_impl(&dword_1A3C62000, v58, v70, v69, v187, "E5RTExecutionContext (%s, %s", (uint8_t *)v63, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6257B40](v64, -1, -1);
    uint64_t v71 = v63;
    uint64_t v4 = v201;
    MEMORY[0x1A6257B40](v71, -1, -1);

    int v61 = v196;
    ((void (*)(char *, uint64_t))v196)(v62, v4);
    uint64_t v45 = v205;
    ((void (*)(char *, char *, uint64_t))v208)(v60, v57, v4);
  }
  else
  {
    swift_release_n();

    uint64_t v60 = v204;
    int v61 = v196;
    ((void (*)(char *, char *, uint64_t))v208)(v204, v57, v4);
  }
  swift_allocObject();
  uint64_t v72 = sub_1A4095F2C();
  ((void (*)(char *, uint64_t))v61)(v57, v4);
  uint64_t v73 = v195(v202, v45);
  CGFloat v74 = (uint64_t (**)(void))(*(void *)v31 + 224);
  uint64_t v202 = *v74;
  uint64_t v192 = (char *)v74;
  uint64_t v75 = ((uint64_t (*)(uint64_t))v202)(v73);
  swift_release();
  uint64_t v76 = v194;
  if (v75)
  {
    uint64_t v218 = 0;
    uint64_t v219 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
LABEL_27:
    sub_1A3E1E9E0(v72, (uint64_t)v31, (uint64_t (*)(uint64_t))sub_1A3D92284);
    swift_release();
    v198(v193, v199, v45);
    uint64_t v77 = sub_1A3D92278();
    CGFloat v78 = *v77;
    char v79 = *((unsigned char *)v77 + 16);
    swift_retain_n();
    sub_1A4095EBC();
    unint64_t v80 = sub_1A4095EDC();
    int v81 = sub_1A409678C();
    if (sub_1A40968EC())
    {
      LODWORD(v204) = v81;
      if (v79)
      {
        if ((unint64_t)v78 >> 32)
        {
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
        if (v78 >> 11 == 27)
        {
LABEL_104:
          __break(1u);
          goto LABEL_105;
        }
        if (v78 >> 16 > 0x10) {
          goto LABEL_102;
        }
        uint64_t v200 = &v224;
      }
      else
      {
        if (!v78)
        {
LABEL_111:
          swift_release_n();
          __break(1u);
          goto LABEL_112;
        }
        uint64_t v200 = v78;
      }
      BOOL v91 = v60;
      uint64_t v92 = v60;
      uint64_t v89 = v201;
      uint64_t v93 = v208;
      ((void (*)(char *, char *, uint64_t))v208)(v91, v76, v201);
      uint64_t v94 = swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      uint64_t v218 = (uint64_t (*)(void, void))v95;
      *(_DWORD *)uint64_t v94 = 136315394;
      uint64_t v96 = (*(uint64_t (**)(void))(*(void *)v31 + 152))();
      uint64_t v216 = (__CVBuffer *)sub_1A3CB8AB0(v96, v97, (uint64_t *)&v218);
      sub_1A409695C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 12) = 2080;
      type metadata accessor for E5RTExecutionContext();
      uint64_t v98 = sub_1A3CA9EBC((uint64_t)v211);
      uint64_t v216 = (__CVBuffer *)sub_1A3CB8AB0(v98, v99, (uint64_t *)&v218);
      uint64_t v31 = v211;
      sub_1A409695C();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_signpost_id_t v100 = sub_1A4095EAC();
      _os_signpost_emit_with_name_impl(&dword_1A3C62000, v80, (os_signpost_type_t)v204, v100, v200, "E5RTExecutionContext (%s, %s", (uint8_t *)v94, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6257B40](v95, -1, -1);
      uint64_t v101 = v94;
      uint64_t v76 = v194;
      MEMORY[0x1A6257B40](v101, -1, -1);

      uint64_t v90 = v196;
      ((void (*)(char *, uint64_t))v196)(v92, v89);
      ((void (*)(char *, char *, uint64_t))v93)(v92, v76, v89);
    }
    else
    {
      swift_release_n();

      uint64_t v88 = v60;
      uint64_t v89 = v201;
      uint64_t v90 = v196;
      ((void (*)(char *, char *, uint64_t))v208)(v88, v76, v201);
    }
    swift_allocObject();
    uint64_t v102 = sub_1A4095F2C();
    ((void (*)(char *, uint64_t))v90)(v76, v89);
    uint64_t v103 = v195(v193, v205);
    uint64_t v104 = *(uint64_t (**)(void))(*(void *)v31 + 200);
    uint64_t v105 = *(void *)v31 + 200;
    uint64_t v106 = ((uint64_t (*)(uint64_t))v104)(v103);
    swift_release();
    if (v106)
    {
      uint64_t v218 = 0;
      uint64_t v219 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      uint64_t v107 = sub_1A3D5D2DC(2);
      uint64_t v108 = ((uint64_t (*)(uint64_t))v104)(v107);
      if (v108)
      {
        int v109 = (*(uint64_t (**)(uint64_t))(*(void *)v108 + 88))(v108);
        uint64_t v110 = swift_release();
        uint64_t v50 = v207;
        int v111 = (*(uint64_t (**)(uint64_t))(*(void *)v207 + 88))(v110);
        uint64_t v112 = v212;
        if (v109 != v111)
        {
          sub_1A3C85624();
          swift_allocError();
          static VisionError.internalError(message:)(0xD00000000000001FLL, 0x80000001A40BA710, v142);
          swift_willThrow();
          sub_1A3E1E9E0(v102, (uint64_t)v31, (uint64_t (*)(uint64_t))sub_1A3D92278);
          swift_release();
          goto LABEL_88;
        }
        uint64_t v210 = v102;
        uint64_t v113 = v104();
        if (!v113)
        {
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
          goto LABEL_111;
        }
        uint64_t v114 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v113 + 96))(v113);
        uint64_t v115 = swift_release();
        uint64_t v116 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v207 + 96))(v115);
        uint64_t v50 = sub_1A3D90874(v114, v116);
        swift_bridgeObjectRelease();
        if (v50)
        {
          uint64_t v117 = v114[2];
          uint64_t v208 = v104;
          if (v117)
          {
            uint64_t v209 = v105;
            uint64_t v118 = v114 + 5;
            do
            {
              uint64_t v120 = *(v118 - 1);
              uint64_t v119 = *v118;
              uint64_t v121 = swift_bridgeObjectRetain();
              uint64_t v122 = ((uint64_t (*)(uint64_t))v104)(v121);
              if (!v122) {
                goto LABEL_106;
              }
              uint64_t v50 = v122;
              uint64_t v123 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v122 + 152))(v120, v119);
              if (v112)
              {
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_72;
              }
              uint64_t v124 = (__CVBuffer *)v123;
              swift_release();
              if (!v124)
              {
                swift_bridgeObjectRelease();
                uint64_t v218 = 0;
                uint64_t v219 = 0xE000000000000000;
                sub_1A4096A2C();
                swift_bridgeObjectRelease();
                uint64_t v218 = (uint64_t (*)(void, void))0xD000000000000024;
                uint64_t v219 = 0x80000001A40BA750;
                sub_1A409621C();
                swift_bridgeObjectRelease();
                uint64_t v169 = (uint64_t)v218;
                uint64_t v50 = v219;
                sub_1A3C85624();
                swift_allocError();
                static VisionError.internalError(message:)(v169, v50, v170);
                swift_bridgeObjectRelease();
                goto LABEL_71;
              }
              uint64_t v216 = v124;
              uint64_t v125 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v207 + 152))(v120, v119);
              if (!v125)
              {
                swift_bridgeObjectRelease();
                uint64_t v218 = 0;
                uint64_t v219 = 0xE000000000000000;
                sub_1A4096A2C();
                swift_bridgeObjectRelease();
                uint64_t v218 = (uint64_t (*)(void, void))0xD000000000000024;
                uint64_t v219 = 0x80000001A40BA780;
                sub_1A409621C();
                swift_bridgeObjectRelease();
                uint64_t v171 = (uint64_t)v218;
                uint64_t v50 = v219;
                sub_1A3C85624();
                swift_allocError();
                static VisionError.internalError(message:)(v171, v50, v172);
                swift_bridgeObjectRelease();
                swift_willThrow();

                goto LABEL_72;
              }
              swift_bridgeObjectRelease();
              sub_1A3CAB318(&v216);
              v118 += 2;
              unint64_t v126 = v216;

              --v117;
              uint64_t v104 = v208;
            }
            while (v117);
          }
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
        swift_bridgeObjectRelease();
        sub_1A3C85624();
        swift_allocError();
        static VisionError.internalError(message:)(0xD00000000000001FLL, 0x80000001A40BA730, v155);
LABEL_71:
        swift_willThrow();
LABEL_72:
        uint64_t v156 = sub_1A3D92278;
        uint64_t v157 = v210;
LABEL_87:
        sub_1A3E1E9E0(v157, (uint64_t)v31, (uint64_t (*)(uint64_t))v156);
        swift_release();
        goto LABEL_88;
      }
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
    uint64_t v209 = v105;
    uint64_t v208 = v104;
    uint64_t v210 = v102;
    uint64_t v218 = 0;
    uint64_t v219 = 0xE000000000000000;
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A3D5D2DC(2);
    uint64_t v127 = swift_bridgeObjectRelease();
    uint64_t v128 = (*(uint64_t (**)(uint64_t))(*(void *)v207 + 144))(v127);
    uint64_t v130 = v128;
    uint64_t v131 = *(void *)(v128 + 16);
    if (v129 == v131)
    {
LABEL_59:
      swift_bridgeObjectRelease();
      uint64_t v31 = v211;
      uint64_t v136 = *(void (**)(uint64_t))(*(void *)v211 + 208);
      uint64_t v137 = swift_retain();
      v136(v137);
LABEL_60:
      sub_1A3E1E9E0(v210, (uint64_t)v31, (uint64_t (*)(uint64_t))sub_1A3D92278);
      uint64_t v138 = swift_release();
      uint64_t v139 = v189;
      if (v189(v138)) {
        goto LABEL_84;
      }
      uint64_t v140 = v208();
      uint64_t v141 = swift_release();
      if (v140)
      {
        if (((uint64_t (*)(uint64_t))v202)(v141))
        {
          swift_release();
          LOBYTE(v140) = 1;
        }
        else
        {
          LOBYTE(v140) = 0;
        }
      }
      uint64_t v158 = swift_beginAccess();
      v31[17] = v140;
      if ((v139(v158) & 1) == 0) {
        goto LABEL_84;
      }
      uint64_t v159 = (uint64_t (**)(void))(*(void *)v31 + 272);
      uint64_t v160 = *v159;
      if (!(*v159)())
      {
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      uint64_t v161 = (*(uint64_t (**)(void))(*(void *)v31 + 248))();
      uint64_t v41 = v190;
      if (!v161)
      {
LABEL_113:
        __break(1u);
        goto LABEL_114;
      }
      uint64_t v162 = e5rt_execution_stream_encode_operation();
      if (v162)
      {
        uint64_t v50 = v162;
        sub_1A3C85624();
        swift_allocError();
        uint64_t v52 = 0xD000000000000032;
        uint64_t v53 = "e5rt_execution_stream_encode_operation call failed";
        goto LABEL_14;
      }
      uint64_t v216 = 0;
      uint64_t v217 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      uint64_t v216 = (__CVBuffer *)0xD000000000000056;
      uint64_t v217 = 0x80000001A40BA650;
      uint64_t v163 = v31[16];
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      if (v163 != 1) {
        goto LABEL_84;
      }
      uint64_t v216 = 0;
      uint64_t v217 = 0xE000000000000000;
      sub_1A4096A2C();
      sub_1A409621C();
      sub_1A409621C();
      sub_1A3D5D2DC(2);
      uint64_t v164 = swift_bridgeObjectRelease();
      ((void (*)(uint64_t))v160)(v164);
      uint64_t v165 = e5rt_execution_stream_prewire_in_use_allocations();
      if (!v165)
      {
LABEL_84:
        uint64_t v167 = v202();
        if (v167)
        {
          uint64_t v50 = v167;
          sub_1A3E1E9E0(v190, (uint64_t)v31, (uint64_t (*)(uint64_t))sub_1A3D9226C);
          swift_release();
          return v50;
        }
        goto LABEL_110;
      }
      uint64_t v50 = v165;
      sub_1A3C85624();
      swift_allocError();
      static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000003CLL, 0x80000001A40BA120, v50, v166);
      swift_willThrow();
LABEL_88:
      uint64_t v41 = v190;
      goto LABEL_89;
    }
    unint64_t v132 = v129;
    uint64_t v133 = v128 + 16 * v129 + 40;
    unint64_t v134 = v129;
    while ((v132 & 0x8000000000000000) == 0)
    {
      if (v134 >= *(void *)(v130 + 16)) {
        goto LABEL_95;
      }
      uint64_t v218 = 0;
      uint64_t v219 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      uint64_t v218 = (uint64_t (*)(void, void))0xD00000000000004ELL;
      uint64_t v219 = 0x80000001A40BA600;
      sub_1A409621C();
      sub_1A3D5D2DC(2);
      swift_bridgeObjectRelease();
      uint64_t v50 = (uint64_t)v211;
      uint64_t v135 = v212;
      sub_1A3E1AD9C();
      uint64_t v212 = v135;
      if (v135)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v211;
        sub_1A3E1E9E0(v210, (uint64_t)v211, (uint64_t (*)(uint64_t))sub_1A3D92278);
        swift_release();
        goto LABEL_88;
      }
      swift_bridgeObjectRelease();
      ++v134;
      v133 += 16;
      if (v131 == v134) {
        goto LABEL_59;
      }
    }
    __break(1u);
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v174 = v72;
  uint64_t v218 = 0;
  uint64_t v219 = 0xE000000000000000;
  sub_1A4096A2C();
  uint64_t v187 = "tream_reset call failed";
  sub_1A409621C();
  sub_1A409621C();
  sub_1A3D5D2DC(2);
  uint64_t v82 = swift_bridgeObjectRelease();
  uint64_t v83 = (*(uint64_t (**)(uint64_t))(*(void *)v191 + 168))(v82);
  uint64_t v218 = 0;
  uint64_t v219 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v218 = (uint64_t (*)(void, void))0xD000000000000046;
  uint64_t v219 = 0x80000001A40BA460;
  MEMORY[0x1A6253FB0](v83, MEMORY[0x1E4FBB1A0]);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  unsigned int v84 = *(__CVBuffer **)(v83 + 16);
  if (!((unint64_t)v84 >> 32))
  {
    uint64_t v85 = type metadata accessor for NamedObjects();
    uint64_t v86 = v212;
    uint64_t v87 = sub_1A3E071DC();
    uint64_t v212 = v86;
    uint64_t v41 = v190;
    if (v86)
    {
      swift_bridgeObjectRelease();
      uint64_t v50 = v174;
      sub_1A3E1E9E0(v174, (uint64_t)v31, (uint64_t (*)(uint64_t))sub_1A3D92284);
      swift_release();
      goto LABEL_89;
    }
    uint64_t v143 = (__CVBuffer *)v87;
    uint64_t v221 = v87;
    uint64_t v218 = 0;
    uint64_t v219 = 0xE000000000000000;
    sub_1A4096A2C();
    uint64_t v186 = (unint64_t)v187 | 0x8000000000000000;
    sub_1A409621C();
    sub_1A409621C();
    uint64_t v216 = v84;
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    uint64_t v185 = 0xD000000000000011;
    uint64_t v184 = 0x80000001A40BA4F0;
    sub_1A409621C();
    uint64_t v216 = v143;
    uint64_t v144 = sub_1A3E20AD8(&qword_1E95EF430);
    swift_retain();
    uint64_t v183 = v144;
    sub_1A4096E1C();
    sub_1A409621C();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    uint64_t v145 = *(void *)(v83 + 16);
    v173[1] = v83;
    if (v145)
    {
      uint64_t v179 = v85;
      uint64_t v146 = (uint64_t *)(v83 + 40);
      uint64_t v147 = *(void (***)(void *__return_ptr, void, void))v191;
      uint64_t v182 = 0x80000001A40BA510;
      v147 += 40;
      uint64_t v181 = (void (*)(uint64_t (**__return_ptr)(void, void), uint64_t, uint64_t))*v147;
      uint64_t v180 = v147;
      uint64_t v178 = 0xD000000000000023;
      uint64_t v177 = 0x80000001A40BA550;
      uint64_t v176 = 0x80000001A40BA580;
      uint64_t v175 = 0x80000001A40BA5A0;
      while (1)
      {
        uint64_t v148 = *(v146 - 1);
        char v149 = *v146;
        uint64_t v218 = 0;
        uint64_t v219 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A4096A2C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A3D5D2DC(2);
        swift_bridgeObjectRelease();
        uint64_t v50 = v191;
        uint64_t v150 = v212;
        v181(&v218, v148, v149);
        if (v150) {
          break;
        }
        sub_1A3C85678((uint64_t)&v218, (uint64_t)&v216);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0DA0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F28);
        swift_dynamicCast();
        uint64_t v151 = v214;
        int v152 = v215;
        __swift_project_boxed_opaque_existential_1(&v213, v214);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v152 + 24))(&v221, v151, v152);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v213);
        uint64_t v216 = 0;
        uint64_t v217 = 0xE000000000000000;
        sub_1A4096A2C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A409621C();
        sub_1A409621C();
        uint64_t v213 = v221;
        swift_retain();
        sub_1A4096E1C();
        sub_1A409621C();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1A409621C();
        uint64_t v213 = v206;
        type metadata accessor for E5RTExecutionBoundPorts();
        sub_1A4096BAC();
        sub_1A409621C();
        __swift_project_boxed_opaque_existential_1(&v218, v220);
        sub_1A4096E3C();
        sub_1A3D5D2DC(2);
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1A3E1B130();
        uint64_t v212 = 0;
        v146 += 2;
        swift_release();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v218);
        --v145;
        uint64_t v31 = v211;
        if (!v145) {
          goto LABEL_69;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v156 = sub_1A3D92284;
      uint64_t v157 = v174;
      goto LABEL_87;
    }
LABEL_69:
    swift_bridgeObjectRelease();
    uint64_t v153 = *(void (**)(uint64_t))(*(void *)v31 + 232);
    int v154 = swift_retain();
    v153(v154);
    swift_release();
    uint64_t v76 = v194;
    uint64_t v60 = v204;
    uint64_t v45 = v205;
    uint64_t v72 = v174;
    goto LABEL_27;
  }
LABEL_114:
  uint64_t result = sub_1A4096BDC();
  __break(1u);
  return result;
}

uint64_t sub_1A3E1E9E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = (const char *)sub_1A4095F0C();
  uint64_t v50 = *((void *)v6 - 1);
  uint64_t v51 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v49 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1A4095ECC();
  uint64_t v8 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v48 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_1A4095EFC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A3D9236C();
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v19 = a3(v18);
  uint64_t v53 = *(const char **)v19;
  char v20 = *(unsigned char *)(v19 + 16);
  uint64_t v21 = a2;
  swift_retain_n();
  uint64_t v22 = sub_1A4095EDC();
  uint64_t v46 = a1;
  sub_1A4095F1C();
  int v47 = sub_1A409677C();
  if ((sub_1A40968EC() & 1) == 0)
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v52);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  os_log_t v43 = v22;
  unint64_t v44 = v16;
  uint64_t v42 = v14;
  uint64_t v45 = v13;
  uint64_t v23 = v52;
  if (v20)
  {
    if ((unint64_t)v53 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v53 >> 11 == 27)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v24 = v21;
      uint64_t v27 = v50;
      char v26 = v51;
      char v28 = v49;
      if (v53 >> 16 <= 0x10)
      {
        uint64_t v25 = v8;
        uint64_t v53 = &v56;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v24 = v21;
  if (!v53)
  {
LABEL_18:
    uint64_t result = swift_release_n();
    __break(1u);
    return result;
  }
  uint64_t v25 = v8;
  uint64_t v27 = v50;
  char v26 = v51;
  char v28 = v49;
LABEL_10:
  swift_retain();
  sub_1A4095F4C();
  swift_release();
  if ((*(unsigned int (**)(char *, const char *))(v27 + 88))(v28, v26) == *MEMORY[0x1E4FBD340])
  {
    char v30 = 0;
    uint64_t v51 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, const char *))(v27 + 8))(v28, v26);
    uint64_t v51 = "E5RTExecutionContext (%s, %s";
    char v30 = 2;
  }
  uint64_t v31 = v48;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v48, v12, v23);
  uint64_t v32 = swift_slowAlloc();
  uint64_t v33 = swift_slowAlloc();
  uint64_t v55 = v33;
  *(unsigned char *)uint64_t v32 = v30;
  *(unsigned char *)(v32 + 1) = v30;
  *(_WORD *)(v32 + 2) = 2080;
  uint64_t v34 = (*(uint64_t (**)(void))(*(void *)v24 + 152))();
  uint64_t v54 = sub_1A3CB8AB0(v34, v35, &v55);
  sub_1A409695C();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 12) = 2080;
  type metadata accessor for E5RTExecutionContext();
  uint64_t v36 = sub_1A3CA9EBC(v24);
  uint64_t v54 = sub_1A3CB8AB0(v36, v37, &v55);
  sub_1A409695C();
  swift_release_n();
  swift_bridgeObjectRelease();
  os_signpost_id_t v38 = sub_1A4095EAC();
  os_log_t v39 = v43;
  _os_signpost_emit_with_name_impl(&dword_1A3C62000, v43, (os_signpost_type_t)v47, v38, v53, v51, (uint8_t *)v32, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1A6257B40](v33, -1, -1);
  MEMORY[0x1A6257B40](v32, -1, -1);

  uint64_t v40 = *(void (**)(char *, uint64_t))(v25 + 8);
  v40(v12, v23);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  return ((uint64_t (*)(char *, uint64_t))v40)(v31, v23);
}

void *sub_1A3E1EF58()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A3E10DEC(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A3E1EFB0()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F20);
  *(void *)(v0 + 16) = sub_1A409605C();
  return v0;
}

uint64_t sub_1A3E1F018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)(v3 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v3 + 16) + 16)
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1A3C8C844(a2, a3),
        char v9 = v8,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v9 & 1) != 0))
  {
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(0, 0xE000000000000000, v10);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v7;
    *uint64_t v7 = 0x8000000000000000;
    sub_1A3E1FB78(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v7 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
}

uint64_t sub_1A3E1F214(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1A3C8C844(a1, a2);
    if (v7)
    {
      char v8 = *(uint64_t **)(*(void *)(v5 + 56) + 8 * v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = *v8;
      if (*v8) {
        return result;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A3C85624();
  swift_allocError();
  static VisionError.invalidArgument(message:)(0, 0xE000000000000000, v10);
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_1A3E1F3A0()
{
  swift_beginAccess();
  uint64_t v1 = v0[2];
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v15 >= v6) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v2 + 8 * v15);
    ++v8;
    if (!v16)
    {
      int64_t v8 = v15 + 1;
      if (v15 + 1 >= v6) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v2 + 8 * v8);
      if (!v16)
      {
        int64_t v8 = v15 + 2;
        if (v15 + 2 >= v6) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v2 + 8 * v8);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v16 - 1) & v16;
    unint64_t v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*v0 + 152);
    swift_bridgeObjectRetain();
    v14(v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v6) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v2 + 8 * v17);
  if (v16)
  {
    int64_t v8 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v8 >= v6) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v2 + 8 * v8);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1A3E1F540(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v6 = v3 + 2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1A3C8C844(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return swift_endAccess();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v6;
  uint64_t v13 = *v6;
  uint64_t *v6 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1A3E1FCDC();
    uint64_t v10 = v13;
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(v10 + 56) + 8 * v7);
  sub_1A3E1F9A0(v7, v10);
  _OWORD v3[2] = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t))(*v3 + 160))(v11);
}

void *sub_1A3E1F664(void *result)
{
  if (*result)
  {
    uint64_t v1 = result;
    uint64_t result = (void *)e5rt_io_port_release();
    *uint64_t v1 = 0;
  }
  return result;
}

uint64_t sub_1A3E1F694(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F30);
  char v37 = a2;
  uint64_t v6 = sub_1A4096C1C();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A4096F2C();
    sub_1A40961CC();
    uint64_t result = sub_1A4096F7C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1A3E1F9A0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A40969EC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A4096F2C();
        swift_bridgeObjectRetain();
        sub_1A40961CC();
        uint64_t v9 = sub_1A4096F7C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *unint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A3E1FB78(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A3C8C844(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A3E1FCDC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A3E1F694(result, a4 & 1);
  uint64_t result = sub_1A3C8C844(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A4096EBC();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;

  return swift_bridgeObjectRetain();
}

void *sub_1A3E1FCDC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4096C0C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    BOOL v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A3E1FE8C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a1)
  {
    if (!a4) {
      goto LABEL_11;
    }
    type metadata accessor for NamedObjects();
    sub_1A3E20AD8(&qword_1E95F0CC8);
    swift_retain_n();
    char v10 = sub_1A409612C();
    swift_release();
    swift_release();
    if ((v10 & 1) == 0) {
      goto LABEL_11;
    }
  }
  else if (a4)
  {
    goto LABEL_11;
  }
  if (a2)
  {
    if (a5)
    {
      type metadata accessor for NamedObjects();
      sub_1A3E20AD8(&qword_1E95F0CC8);
      swift_retain_n();
      char v11 = sub_1A409612C();
      swift_release();
      swift_release();
      if (v11) {
        goto LABEL_9;
      }
    }
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  if (a5) {
    goto LABEL_11;
  }
LABEL_9:
  char v12 = a3 ^ a6 ^ 1;
  return v12 & 1;
}

uint64_t type metadata accessor for E5RTExecutionContext()
{
  return self;
}

uint64_t type metadata accessor for E5RTExecutionBoundPorts()
{
  return self;
}

uint64_t sub_1A3E2003C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t), uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  v16[1] = *MEMORY[0x1E4F143B8];
  v16[0] = 0;
  uint64_t result = a3(v16, a1);
  if (result)
  {
    uint64_t v11 = result;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.espressoE5RTError(message:errorCode:)(a5, a6, v11, v12);
    return swift_willThrow();
  }
  else if (v16[0])
  {
    uint64_t v13 = a4(a2);
    if (v13)
    {
      uint64_t v14 = v13;
      sub_1A3C85624();
      swift_allocError();
      static VisionError.espressoE5RTError(message:errorCode:)(0xD00000000000002BLL, 0x80000001A40BAB80, v14, v15);
      swift_willThrow();
    }
    return e5rt_buffer_object_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A3E20188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A3D5D2DC(2);
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a3 + 200))(a1, a2);
  if (!v3)
  {
    unint64_t v8 = (void *)v7;
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A409621C();
    sub_1A409621C();
    type metadata accessor for IOSurfaceRef(0);
    sub_1A4096BAC();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    uint64_t v9 = e5rt_buffer_object_create_from_iosurface();
    if (v9)
    {
      uint64_t v10 = v9;
      sub_1A3C85624();
      swift_allocError();
      static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000034, 0x80000001A40BAB40, v10, v11);
      swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1A3E20494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)a3 + 200))();
  if (!v3)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = e5rt_surface_object_create_from_iosurface();
    if (v6)
    {
      uint64_t v7 = v6;
      sub_1A3C85624();
      swift_allocError();
      static VisionError.espressoE5RTError(message:errorCode:)(0xD000000000000035, 0x80000001A40BABB0, v7, v8);
      swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1A3E20610(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t *))
{
  uint64_t v11 = a2;
  uint64_t v12 = a3;
  swift_bridgeObjectRetain();
  sub_1A409621C();
  static VisionError.espressoE5RTError(message:errorCode:)(v11, v12, a1, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  uint64_t v6 = v11;
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  unsigned __int8 v9 = v14;
  sub_1A3E04338(v11, v12, v13, v14);
  a4(0, &v11);
  sub_1A3E0515C(v6, v7, v8, v9);

  return sub_1A3E0515C(v6, v7, v8, v9);
}

uint64_t sub_1A3E2071C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = *(void (**)(void, uint64_t *))(v3 + 24);
  if (a3)
  {
    return sub_1A3E20610(11, 0xD00000000000001ELL, 0x80000001A40BA990, v4);
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 40);
    v7[0] = 0;
    v7[1] = 0;
    char v9 = -1;
    int v8 = 0;
    return ((uint64_t (*)(uint64_t, void *))v4)(v6, v7);
  }
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A3E2080C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = *(void (**)(void, uint64_t *))(v3 + 24);
  if (a3)
  {
    return sub_1A3E20610(11, 0xD00000000000001ELL, 0x80000001A40BA990, v4);
  }
  else
  {
    uint64_t result = *(void *)(v3 + 40);
    if (result)
    {
      v6[0] = 0;
      v6[1] = 0;
      int v7 = 0;
      char v8 = -1;
      return ((uint64_t (*)(uint64_t, void *))v4)(result, v6);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t destroy for E5RTExecutionContextConfiguration()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for E5RTExecutionContextConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for E5RTExecutionContextConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for E5RTExecutionContextConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for E5RTExecutionContextConfiguration(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for E5RTExecutionContextConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTExecutionContextConfiguration()
{
  return &type metadata for E5RTExecutionContextConfiguration;
}

uint64_t sub_1A3E20AD8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NamedObjects();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3E20B24()
{
  return 0x203A6C7275;
}

uint64_t sub_1A3E20C3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  os_signpost_id_t v38 = a2;
  uint64_t v4 = sub_1A4095B9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - v9;
  if (sub_1A4095AFC())
  {
    if (sub_1A4095B0C() == 7104877 && v11 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    char v12 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_6:
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a1, v4);
      uint64_t v13 = type metadata accessor for E5RTMILModelSource(0);
      unsigned __int8 v14 = v38;
      v38[3] = v13;
      v14[4] = sub_1A3E2129C(&qword_1E95F0F40, (void (*)(uint64_t))type metadata accessor for E5RTMILModelSource);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
      if ((sub_1A4095AFC() & 1) == 0) {
        goto LABEL_12;
      }
      if (sub_1A4095B0C() == 7104877 && v16 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v18 = sub_1A4096E5C();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
LABEL_12:
          uint64_t v36 = 0;
          unint64_t v37 = 0xE000000000000000;
          sub_1A4096A2C();
          swift_bridgeObjectRelease();
          uint64_t v36 = 0x203A6C7255;
          unint64_t v37 = 0xE500000000000000;
          sub_1A3E2129C((unint64_t *)&unk_1E95EF460, MEMORY[0x1E4F276F0]);
          sub_1A4096E1C();
          sub_1A409621C();
          swift_bridgeObjectRelease();
          sub_1A409621C();
          uint64_t v19 = v36;
          uint64_t v20 = v37;
          sub_1A3C85624();
          uint64_t v21 = swift_allocError();
          static VisionError.invalidArgument(message:)(v19, v20, v22);
          swift_bridgeObjectRelease();
          swift_willThrow();
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
          if (!v21) {
            return result;
          }
          goto LABEL_21;
        }
      }
      uint64_t result = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v5 + 32))(boxed_opaque_existential_1, v10, v4);
      if (!v2) {
        return result;
      }
LABEL_21:
      uint64_t v31 = (uint64_t)v14;
      return __swift_deallocate_boxed_opaque_existential_1(v31);
    }
  }
  unint64_t v24 = *(uint64_t (**)(uint64_t))(type metadata accessor for E5RTProgramLibrary() + 240);
  uint64_t result = v24(a1);
  if (v2) {
    return result;
  }
  if ((result & 1) == 0)
  {
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    uint64_t v36 = 0x203A6C7255;
    unint64_t v37 = 0xE500000000000000;
    sub_1A3E2129C((unint64_t *)&unk_1E95EF460, MEMORY[0x1E4F276F0]);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    uint64_t v28 = v36;
    uint64_t v29 = v37;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(v28, v29, v30);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v25 = type metadata accessor for E5RTProgramLibraryBundleModelSource(0);
  unint64_t v26 = v38;
  v38[3] = v25;
  void v26[4] = sub_1A3E2129C(&qword_1E95F0F38, (void (*)(uint64_t))type metadata accessor for E5RTProgramLibraryBundleModelSource);
  BOOL v27 = __swift_allocate_boxed_opaque_existential_1(v26);
  if (v24((uint64_t)v7)) {
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v5 + 32))(v27, v7, v4);
  }
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v36 = 0x203A6C7255;
  unint64_t v37 = 0xE500000000000000;
  sub_1A3E2129C((unint64_t *)&unk_1E95EF460, MEMORY[0x1E4F276F0]);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v32 = v36;
  uint64_t v33 = v37;
  sub_1A3C85624();
  uint64_t v34 = swift_allocError();
  static VisionError.invalidArgument(message:)(v32, v33, v35);
  swift_bridgeObjectRelease();
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v34)
  {
    uint64_t v31 = (uint64_t)v38;
    return __swift_deallocate_boxed_opaque_existential_1(v31);
  }
  return result;
}

uint64_t type metadata accessor for E5RTProgramLibraryBundleModelSource(uint64_t a1)
{
  return sub_1A3CCB9A0(a1, (uint64_t *)&unk_1E963C030);
}

uint64_t sub_1A3E2129C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for E5RTMILModelSource(uint64_t a1)
{
  return sub_1A3CCB9A0(a1, qword_1E963C040);
}

uint64_t sub_1A3E21304()
{
  return 7107189;
}

uint64_t sub_1A3E21318(uint64_t a1)
{
  unint64_t v2 = sub_1A3E21390();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E21354(uint64_t a1)
{
  unint64_t v2 = sub_1A3E21390();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A3E21390()
{
  unint64_t result = qword_1E963BA20;
  if (!qword_1E963BA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963BA20);
  }
  return result;
}

uint64_t sub_1A3E213E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_1A4095B9C();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F60);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for E5RTProgramLibraryBundleModelSource(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E21390();
  sub_1A4096FDC();
  if (!v2)
  {
    sub_1A3E2129C(&qword_1E95F0F68, MEMORY[0x1E4F276F0]);
    sub_1A4096CFC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_1A3E21F30((uint64_t)v11, v15, type metadata accessor for E5RTProgramLibraryBundleModelSource);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3E2167C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for E5RTProgramLibrary();
  return (*(uint64_t (**)(uint64_t))(v2 + 240))(a1) & 1;
}

uint64_t sub_1A3E216D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3E213E4(a1, a2);
}

uint64_t sub_1A3E216E8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3E21C20(a1, a2, a3, &qword_1E95F0F50, (void (*)(void))sub_1A3E21390);
}

uint64_t sub_1A3E21730()
{
  return sub_1A3E20B24();
}

uint64_t sub_1A3E21748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A3E217D0(uint64_t a1)
{
  unint64_t v2 = sub_1A3E21848();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E2180C(uint64_t a1)
{
  unint64_t v2 = sub_1A3E21848();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A3E21848()
{
  unint64_t result = qword_1E963BA28[0];
  if (!qword_1E963BA28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963BA28);
  }
  return result;
}

uint64_t sub_1A3E2189C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_1A4095B9C();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0F78);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for E5RTMILModelSource(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E21848();
  sub_1A4096FDC();
  if (!v2)
  {
    sub_1A3E2129C(&qword_1E95F0F68, MEMORY[0x1E4F276F0]);
    sub_1A4096CFC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_1A3E21F30((uint64_t)v11, v15, type metadata accessor for E5RTMILModelSource);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3E21B30()
{
  if ((sub_1A4095AFC() & 1) == 0) {
    return 0;
  }
  if (sub_1A4095B0C() == 7104877 && v0 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v2 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    return v2 & 1;
  }
}

uint64_t sub_1A3E21BCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3E2189C(a1, a2);
}

uint64_t sub_1A3E21BE4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A3E21C20(a1, a2, a3, &qword_1E95F0F70, (void (*)(void))sub_1A3E21848);
}

uint64_t sub_1A3E21C20(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1A4096FEC();
  sub_1A4095B9C();
  sub_1A3E2129C(&qword_1E95F0F58, MEMORY[0x1E4F276F0]);
  sub_1A4096DBC();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A3E21DA0()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E21E28()
{
  sub_1A4095B9C();
  sub_1A3E2129C(&qword_1E95F0F48, MEMORY[0x1E4F276F0]);

  return sub_1A40960DC();
}

uint64_t sub_1A3E21EAC()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E21F30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A3E21F98(void *a1)
{
  a1[1] = sub_1A3E2129C(&qword_1E95F0F80, (void (*)(uint64_t))type metadata accessor for E5RTProgramLibraryBundleModelSource);
  a1[2] = sub_1A3E2129C(&qword_1E95F0F88, (void (*)(uint64_t))type metadata accessor for E5RTProgramLibraryBundleModelSource);
  a1[3] = sub_1A3E2129C(&qword_1E95F0F90, (void (*)(uint64_t))type metadata accessor for E5RTProgramLibraryBundleModelSource);
  uint64_t result = sub_1A3E2129C(&qword_1E95F0F98, (void (*)(uint64_t))type metadata accessor for E5RTProgramLibraryBundleModelSource);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3E2206C()
{
  return sub_1A3E2129C(&qword_1E95F0FA0, (void (*)(uint64_t))type metadata accessor for E5RTProgramLibraryBundleModelSource);
}

uint64_t sub_1A3E220B4(void *a1)
{
  a1[1] = sub_1A3E2129C(&qword_1E95F0FA8, (void (*)(uint64_t))type metadata accessor for E5RTMILModelSource);
  a1[2] = sub_1A3E2129C(&qword_1E95F0FB0, (void (*)(uint64_t))type metadata accessor for E5RTMILModelSource);
  a1[3] = sub_1A3E2129C(&qword_1E95F0FB8, (void (*)(uint64_t))type metadata accessor for E5RTMILModelSource);
  uint64_t result = sub_1A3E2129C(&qword_1E95F0FC0, (void (*)(uint64_t))type metadata accessor for E5RTMILModelSource);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3E22188()
{
  return sub_1A3E2129C(&qword_1E95F0FC8, (void (*)(uint64_t))type metadata accessor for E5RTMILModelSource);
}

ValueMetadata *type metadata accessor for E5RTModelSourceCreator()
{
  return &type metadata for E5RTModelSourceCreator;
}

uint64_t sub_1A3E221FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_1A3E22214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t sub_1A3E22230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095B9C();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1A3E2229C(uint64_t a1)
{
  uint64_t v2 = sub_1A4095B9C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1A3E22300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A3E22364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A3E223C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A3E2242C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095B9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A3E22490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3E224A4);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095B9C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1A3E22514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3E22528);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095B9C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1A3E2259C()
{
  uint64_t result = sub_1A4095B9C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTMILModelSource.CodingKeys()
{
  return &type metadata for E5RTMILModelSource.CodingKeys;
}

unsigned char *_s6Vision18E5RTMILModelSourceV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3E226D8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTProgramLibraryBundleModelSource.CodingKeys()
{
  return &type metadata for E5RTProgramLibraryBundleModelSource.CodingKeys;
}

unint64_t sub_1A3E22714()
{
  unint64_t result = qword_1E963C150[0];
  if (!qword_1E963C150[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963C150);
  }
  return result;
}

unint64_t sub_1A3E2276C()
{
  unint64_t result = qword_1E963C360[0];
  if (!qword_1E963C360[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963C360);
  }
  return result;
}

unint64_t sub_1A3E227C4()
{
  unint64_t result = qword_1E963C470;
  if (!qword_1E963C470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963C470);
  }
  return result;
}

unint64_t sub_1A3E2281C()
{
  unint64_t result = qword_1E963C478;
  if (!qword_1E963C478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963C478);
  }
  return result;
}

unint64_t sub_1A3E22874()
{
  unint64_t result = qword_1E963C500;
  if (!qword_1E963C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963C500);
  }
  return result;
}

unint64_t sub_1A3E228CC()
{
  unint64_t result = qword_1E963C508[0];
  if (!qword_1E963C508[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963C508);
  }
  return result;
}

unint64_t sub_1A3E22924(char a1)
{
  unint64_t result = 0x726F466C65786970;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6469576C65786970;
      break;
    case 2:
      unint64_t result = 0x6965486C65786970;
      break;
    case 3:
      unint64_t result = 0x7265507365747962;
      break;
    case 4:
      unint64_t result = 1701667182;
      break;
    case 5:
      unint64_t result = 0x6570795461746164;
      break;
    case 6:
      unint64_t result = 0x6570616873;
      break;
    case 7:
      unint64_t result = 0x73656469727473;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A3E22A5C()
{
  return sub_1A3E22924(*v0);
}

uint64_t sub_1A3E22A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3E231C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3E22A8C(uint64_t a1)
{
  unint64_t v2 = sub_1A3E23A14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E22AC8(uint64_t a1)
{
  unint64_t v2 = sub_1A3E23A14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3E22B04(void *a1)
{
  int v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0FD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E23A14();
  sub_1A4096FEC();
  LOBYTE(v11) = 0;
  sub_1A4096DEC();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1A4096DEC();
    LOBYTE(v11) = 2;
    sub_1A4096DEC();
    LOBYTE(v11) = 3;
    sub_1A4096DEC();
    LOBYTE(v11) = 4;
    sub_1A4096D7C();
    uint64_t v11 = v3[4];
    HIBYTE(v10) = 5;
    sub_1A3E15BDC();
    sub_1A4096DBC();
    uint64_t v11 = v3[6];
    HIBYTE(v10) = 6;
    sub_1A3E15C30();
    sub_1A4096DBC();
    uint64_t v11 = v3[7];
    HIBYTE(v10) = 7;
    sub_1A3E0ADAC();
    sub_1A4096DBC();
    LOBYTE(v11) = 8;
    sub_1A4096DEC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A3E22DC4()
{
  return sub_1A40960DC();
}

uint64_t sub_1A3E22EB8()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t sub_1A3E22EC0()
{
  return *(unsigned int *)(v0 + 8);
}

uint64_t sub_1A3E22EC8()
{
  return *(unsigned int *)(v0 + 12);
}

uint64_t sub_1A3E22ED0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A3E22F00()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1A3E22F08@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 48);
  a1[3] = &type metadata for TensorShape;
  a1[4] = sub_1A3E14DA4();
  *a1 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E22F58@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 56);
  a1[3] = &type metadata for TensorStrides;
  a1[4] = sub_1A3E0AC1C();
  *a1 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E22FA8()
{
  return *(unsigned int *)(v0 + 40);
}

double sub_1A3E22FB0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A3E235B8(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1A3E22FF4(void *a1)
{
  return sub_1A3E22B04(a1);
}

uint64_t sub_1A3E2300C()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E23050()
{
  return sub_1A4096F7C();
}

BOOL sub_1A3E2308C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  _OWORD v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  id v8[2] = a2[2];
  _OWORD v8[3] = v5;
  return sub_1A3E23A68((uint64_t)v7, (uint64_t)v8);
}

uint64_t sub_1A3E230D8(uint64_t a1)
{
  unint64_t v2 = sub_1A3E1956C();

  return sub_1A3E272B0(a1, v2);
}

double sub_1A3E23114@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  sub_1A3E23B98(a1, a2, a3, a4, a5, (uint64_t)v11);
  if (!v6)
  {
    long long v9 = v11[1];
    *a6 = v11[0];
    a6[1] = v9;
    double result = *(double *)&v12;
    long long v10 = v13;
    a6[2] = v12;
    a6[3] = v10;
  }
  return result;
}

double sub_1A3E23158@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned int a6@<W5>, _OWORD *a7@<X8>)
{
  sub_1A3E23CF0(a1, a2, a3, a4, a5, a6, (uint64_t)v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v8 = v11[1];
  *a7 = v11[0];
  a7[1] = v8;
  double result = *(double *)&v12;
  long long v10 = v13;
  a7[2] = v12;
  a7[3] = v10;
  return result;
}

uint64_t sub_1A3E231C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F466C65786970 && a2 == 0xEF6570795474616DLL;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6469576C65786970 && a2 == 0xEA00000000006874 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6965486C65786970 && a2 == 0xEB00000000746867 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265507365747962 && a2 == 0xEB00000000776F52 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6570795461746164 && a2 == 0xE800000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6570616873 && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73656469727473 && a2 == 0xE700000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A40B95F0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1A3E235B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1010);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E23A14();
  sub_1A4096FDC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v30) = 0;
  int v9 = sub_1A4096D2C();
  LOBYTE(v30) = 1;
  int v10 = sub_1A4096D2C();
  LOBYTE(v30) = 2;
  int v28 = sub_1A4096D2C();
  LOBYTE(v30) = 3;
  int v27 = sub_1A4096D2C();
  LOBYTE(v30) = 4;
  uint64_t v11 = sub_1A4096CBC();
  uint64_t v13 = v12;
  uint64_t v25 = v11;
  char v29 = 5;
  sub_1A3E16610();
  swift_bridgeObjectRetain();
  uint64_t v26 = v13;
  sub_1A4096CFC();
  uint64_t v24 = v30;
  char v29 = 6;
  sub_1A3E16664();
  sub_1A4096CFC();
  uint64_t v14 = v30;
  char v29 = 7;
  sub_1A3E0AD58();
  uint64_t v23 = v14;
  swift_bridgeObjectRetain();
  sub_1A4096CFC();
  uint64_t v15 = v30;
  LOBYTE(v30) = 8;
  uint64_t v22 = v15;
  swift_bridgeObjectRetain();
  LODWORD(v14) = sub_1A4096D2C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v16 = v22;
  swift_bridgeObjectRelease();
  uint64_t v17 = v23;
  swift_bridgeObjectRelease();
  uint64_t v18 = v26;
  uint64_t result = swift_bridgeObjectRelease();
  *(_DWORD *)a2 = v9;
  *(_DWORD *)(a2 + 4) = v10;
  int v20 = v27;
  *(_DWORD *)(a2 + 8) = v28;
  *(_DWORD *)(a2 + 12) = v20;
  *(void *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v24;
  *(_DWORD *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v17;
  *(void *)(a2 + 56) = v16;
  return result;
}

unint64_t sub_1A3E23A14()
{
  unint64_t result = qword_1E963C590[0];
  if (!qword_1E963C590[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963C590);
  }
  return result;
}

BOOL sub_1A3E23A68(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2
    || *(_DWORD *)(a1 + 4) != *(_DWORD *)(a2 + 4)
    || *(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8)
    || *(_DWORD *)(a1 + 12) != *(_DWORD *)(a2 + 12))
  {
    return 0;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    || (char v4 = sub_1A4096E5C(), result = 0, (v4 & 1) != 0))
  {
    sub_1A3E165BC();
    sub_1A409629C();
    sub_1A409629C();
    if (v7 == v6
      && (sub_1A3E09F6C(*(void *)(a1 + 48), *(void *)(a2 + 48)) & 1) != 0
      && (sub_1A3E09F6C(*(void *)(a1 + 56), *(void *)(a2 + 56)) & 1) != 0)
    {
      return *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A3E23B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v12 = sub_1A3E0AC70();
  unsigned int v23 = a5;
  sub_1A3E0CCB8(a3, a5, a4, (uint64_t)&type metadata for TensorShape, v12);
  uint64_t v13 = v22[0];
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1A3E257BC(a3);
  if (v6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v16 = v14;
    uint64_t v20 = a2;
    _OWORD v22[3] = &type metadata for TensorShape;
    v22[4] = sub_1A3E14DA4();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1A3E0A4B8(v22, v16);
    swift_bridgeObjectRetain();
    uint64_t result = sub_1A3E259BC(v16, a4);
    unint64_t v18 = result * (unint64_t)v23;
    if ((v18 & 0xFFFFFFFF00000000) != 0)
    {
      __break(1u);
    }
    else
    {
      int v19 = result;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(_DWORD *)a6 = a3;
      *(_DWORD *)(a6 + 4) = a4;
      *(_DWORD *)(a6 + 8) = v23;
      *(_DWORD *)(a6 + 12) = v19;
      *(void *)(a6 + 16) = a1;
      *(void *)(a6 + 24) = v20;
      *(void *)(a6 + 32) = v16;
      *(_DWORD *)(a6 + 40) = v18;
      *(void *)(a6 + 48) = v13;
      *(void *)(a6 + 56) = v17;
    }
  }
  return result;
}

uint64_t sub_1A3E23CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned int a6@<W5>, uint64_t a7@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A3E25988(a3);
  if (*(void *)(a4 + 16) < 4uLL)
  {
    __break(1u);
    goto LABEL_7;
  }
  int v15 = result;
  unsigned int v17 = *(_DWORD *)(a4 + 40);
  unsigned int v16 = *(_DWORD *)(a4 + 44);
  uint64_t result = sub_1A3E259BC(a3, v16);
  if (!v17)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  *(_DWORD *)a7 = v15;
  *(_DWORD *)(a7 + 4) = v16;
  *(_DWORD *)(a7 + 8) = v17;
  *(_DWORD *)(a7 + 12) = a6 / v17;
  *(void *)(a7 + 16) = a1;
  *(void *)(a7 + 24) = a2;
  *(void *)(a7 + 32) = a3;
  *(_DWORD *)(a7 + 40) = a6;
  *(void *)(a7 + 48) = a4;
  *(void *)(a7 + 56) = a5;

  return swift_bridgeObjectRetain();
}

unint64_t sub_1A3E23DBC(uint64_t a1)
{
  unint64_t result = sub_1A3E1956C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3E23DE4(void *a1)
{
  a1[1] = sub_1A3E23E24();
  a1[2] = sub_1A3E23E78();
  a1[3] = sub_1A3E23ECC();
  unint64_t result = sub_1A3E23F20();
  a1[4] = result;
  return result;
}

unint64_t sub_1A3E23E24()
{
  unint64_t result = qword_1E95F0FD8;
  if (!qword_1E95F0FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0FD8);
  }
  return result;
}

unint64_t sub_1A3E23E78()
{
  unint64_t result = qword_1E95F0FE0;
  if (!qword_1E95F0FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0FE0);
  }
  return result;
}

unint64_t sub_1A3E23ECC()
{
  unint64_t result = qword_1E95F0FE8;
  if (!qword_1E95F0FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0FE8);
  }
  return result;
}

unint64_t sub_1A3E23F20()
{
  unint64_t result = qword_1E95F0FF0;
  if (!qword_1E95F0FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0FF0);
  }
  return result;
}

unint64_t sub_1A3E23F74(uint64_t a1)
{
  unint64_t result = sub_1A3DA6950();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3E23FA0()
{
  unint64_t result = qword_1E95F0FF8;
  if (!qword_1E95F0FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F0FF8);
  }
  return result;
}

unint64_t sub_1A3E23FF4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3E24024();
  unint64_t result = sub_1A3E24078();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3E24024()
{
  unint64_t result = qword_1E95F1000;
  if (!qword_1E95F1000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1000);
  }
  return result;
}

unint64_t sub_1A3E24078()
{
  unint64_t result = qword_1E95F1008;
  if (!qword_1E95F1008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1008);
  }
  return result;
}

uint64_t destroy for ImageTensorDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ImageTensorDescriptor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageTensorDescriptor(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImageTensorDescriptor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageTensorDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageTensorDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageTensorDescriptor()
{
  return &type metadata for ImageTensorDescriptor;
}

unsigned char *storeEnumTagSinglePayload for ImageTensorDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3E24404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageTensorDescriptor.CodingKeys()
{
  return &type metadata for ImageTensorDescriptor.CodingKeys;
}

unint64_t sub_1A3E24440()
{
  unint64_t result = qword_1E963CBA0[0];
  if (!qword_1E963CBA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963CBA0);
  }
  return result;
}

unint64_t sub_1A3E24498()
{
  unint64_t result = qword_1E963CCB0;
  if (!qword_1E963CCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963CCB0);
  }
  return result;
}

unint64_t sub_1A3E244F0()
{
  unint64_t result = qword_1E963CCB8[0];
  if (!qword_1E963CCB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963CCB8);
  }
  return result;
}

void sub_1A3E24548(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v5 = sub_1A40968CC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone(MEMORY[0x1E4F28FE8]);
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  int v10 = (void *)sub_1A409614C();
  id v11 = objc_msgSend(v9, sel_initWithString_, v10);

  uint64_t v12 = *MEMORY[0x1E4F280B8];
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v31(v8, v12, v5);
  id v36 = v11;
  uint64_t v13 = sub_1A40968DC();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  if ((v13 & 0x100000000) != 0) {
    goto LABEL_20;
  }
  if ((v13 & 0x80000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  id v15 = v36;
  if (objc_msgSend(v36, sel_isAtEnd)) {
    goto LABEL_15;
  }
  sub_1A409689C();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (!v17 || objc_msgSend(v15, sel_isAtEnd)) {
    goto LABEL_15;
  }
  v31(v8, v12, v5);
  uint64_t v18 = sub_1A40968DC();
  v14(v8, v5);
  if ((v18 & 0x100000000) != 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((v18 & 0x80000000) != 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v19 = v36;
  if (!objc_msgSend(v36, sel_isAtEnd))
  {
    uint64_t v29 = v18;
    sub_1A409689C();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      if (!objc_msgSend(v19, sel_isAtEnd))
      {
        v31(v8, v12, v5);
        uint64_t v22 = sub_1A40968DC();
        v14(v8, v5);
        if ((v22 & 0x100000000) != 0)
        {
LABEL_22:
          __break(1u);
          return;
        }
        if ((v22 & 0x80000000) == 0)
        {
          id v23 = v36;
          if (objc_msgSend(v36, sel_isAtEnd))
          {

            swift_bridgeObjectRelease();
            int v25 = v29;
            uint64_t v24 = v30;
            *uint64_t v30 = v13;
            v24[1] = v25;
            void v24[2] = v22;
            return;
          }
          goto LABEL_15;
        }
        goto LABEL_19;
      }
    }
  }
LABEL_15:
  unint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  unint64_t v34 = 0xD000000000000018;
  unint64_t v35 = 0x80000001A40BAC70;
  sub_1A409621C();
  swift_bridgeObjectRelease();
  uint64_t v27 = v34;
  uint64_t v26 = v35;
  sub_1A3C85624();
  swift_allocError();
  static VisionError.invalidArgument(message:)(v27, v26, v28);
  swift_bridgeObjectRelease();
  swift_willThrow();
}

BOOL static ResourceVersion.== infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_1A3E248F4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
}

uint64_t ResourceVersion.hash(into:)()
{
  return sub_1A4096F5C();
}

uint64_t ResourceVersion.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1018);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[6] = *(_DWORD *)(v1 + 4);
  __n128 v9[3] = *(_DWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E24AE8();
  sub_1A4096FEC();
  char v12 = 0;
  sub_1A4096DEC();
  if (!v2)
  {
    char v11 = 1;
    sub_1A4096DEC();
    char v10 = 2;
    sub_1A4096DEC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A3E24AE8()
{
  unint64_t result = qword_1E963CD40[0];
  if (!qword_1E963CD40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963CD40);
  }
  return result;
}

uint64_t ResourceVersion.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1020);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E24AE8();
  sub_1A4096FDC();
  if (!v2)
  {
    char v16 = 0;
    int v9 = sub_1A4096D2C();
    char v15 = 1;
    int v11 = sub_1A4096D2C();
    char v14 = 2;
    int v12 = sub_1A4096D2C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ResourceVersion.description.getter()
{
  uint64_t v1 = sub_1A4096E1C();
  sub_1A409621C();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static ResourceVersion.< infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  if (*a1 < *a2) {
    return 1;
  }
  unsigned int v3 = a1[1];
  unsigned int v4 = a2[1];
  BOOL v6 = v3 == v4 && a1[2] < a2[2];
  unsigned int v7 = v3 < v4 || v6;
  if (*a1 == *a2) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A3E24E20()
{
  return *(void *)&aMajor_0[8 * *v0];
}

uint64_t sub_1A3E24E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3E25448(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3E24E60(uint64_t a1)
{
  unint64_t v2 = sub_1A3E24AE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E24E9C(uint64_t a1)
{
  unint64_t v2 = sub_1A3E24AE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ResourceVersion.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E24F44@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return ResourceVersion.init(from:)(a1, a2);
}

uint64_t sub_1A3E24F5C(void *a1)
{
  return ResourceVersion.encode(to:)(a1);
}

uint64_t sub_1A3E24F74()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E24FE0()
{
  return sub_1A4096F5C();
}

uint64_t sub_1A3E25028()
{
  return sub_1A4096F7C();
}

unint64_t sub_1A3E25094()
{
  unint64_t result = qword_1E95F1028;
  if (!qword_1E95F1028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1028);
  }
  return result;
}

BOOL sub_1A3E250E8(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1A3E25118(_DWORD *a1, _DWORD *a2)
{
  if (*a1 < *a2) {
    return 1;
  }
  unsigned int v3 = a1[1];
  unsigned int v4 = a2[1];
  BOOL v6 = v3 == v4 && a1[2] < a2[2];
  unsigned int v7 = v3 < v4 || v6;
  if (*a1 == *a2) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A3E2515C(_DWORD *a1, _DWORD *a2)
{
  if (*a2 < *a1) {
    return 0;
  }
  if (*a2 != *a1) {
    return 1;
  }
  unsigned int v3 = a1[1];
  unsigned int v4 = a2[1];
  BOOL v6 = v4 != v3 || a2[2] >= a1[2];
  return v4 >= v3 && v6;
}

uint64_t sub_1A3E251A0(_DWORD *a1, _DWORD *a2)
{
  if (*a1 < *a2) {
    return 0;
  }
  if (*a1 != *a2) {
    return 1;
  }
  unsigned int v3 = a1[1];
  unsigned int v4 = a2[1];
  BOOL v6 = v3 != v4 || a1[2] >= a2[2];
  return v3 >= v4 && v6;
}

uint64_t sub_1A3E251E4(_DWORD *a1, _DWORD *a2)
{
  if (*a2 < *a1) {
    return 1;
  }
  unsigned int v3 = a1[1];
  unsigned int v4 = a2[1];
  BOOL v6 = v4 == v3 && a2[2] < a1[2];
  unsigned int v7 = v4 < v3 || v6;
  if (*a2 == *a1) {
    return v7;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for ResourceVersion()
{
  return &type metadata for ResourceVersion;
}

unsigned char *storeEnumTagSinglePayload for ResourceVersion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3E25308);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResourceVersion.CodingKeys()
{
  return &type metadata for ResourceVersion.CodingKeys;
}

unint64_t sub_1A3E25344()
{
  unint64_t result = qword_1E963D150[0];
  if (!qword_1E963D150[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963D150);
  }
  return result;
}

unint64_t sub_1A3E2539C()
{
  unint64_t result = qword_1E963D260;
  if (!qword_1E963D260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963D260);
  }
  return result;
}

unint64_t sub_1A3E253F4()
{
  unint64_t result = qword_1E963D268[0];
  if (!qword_1E963D268[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963D268);
  }
  return result;
}

uint64_t sub_1A3E25448(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F6A616DLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6E696DLL && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F7263696DLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1A3E25588()
{
  return &unk_1A4108BF0;
}

void *sub_1A3E25594()
{
  return &unk_1A4108BF8;
}

void *sub_1A3E255A0()
{
  return &unk_1A4108C00;
}

void *sub_1A3E255AC()
{
  return &unk_1A4108C08;
}

void *sub_1A3E255B8()
{
  return &unk_1A4108C10;
}

void *sub_1A3E255C4()
{
  return &unk_1A4108C18;
}

void *sub_1A3E255D0()
{
  return &unk_1A4108C20;
}

uint64_t sub_1A3E255DC(uint64_t a1)
{
  if (a1 <= 131103)
  {
    if (a1 <= 65567)
    {
      if (!a1) {
        return 0x6B6E752E666C6553;
      }
      if (a1 != 65552) {
        return 0xD000000000000011;
      }
    }
    else if (a1 != 65568 && a1 != 65600)
    {
      if (a1 == 131080) {
        return 0x6E49726F736E6554;
      }
      return 0xD000000000000011;
    }
    return 0x6C46726F736E6554;
  }
  if (a1 > 196639)
  {
    if (a1 != 196640)
    {
      if (a1 == 983048) {
        return 0xD000000000000012;
      }
      if (a1 == 983072) {
        return 0xD000000000000018;
      }
      return 0xD000000000000011;
    }
    return 0x4955726F736E6554;
  }
  if (a1 == 131104) {
    return 0x6E49726F736E6554;
  }
  if (a1 == 196616) {
    return 0x4955726F736E6554;
  }
  return 0xD000000000000011;
}

uint64_t sub_1A3E257B4(unsigned __int16 a1)
{
  return a1 >> 3;
}

uint64_t sub_1A3E257BC(int a1)
{
  if (a1 <= 1278226487)
  {
    if (a1 <= 39)
    {
      if (a1 != 8)
      {
        if (a1 != 32)
        {
LABEL_19:
          sub_1A4096A2C();
          swift_bridgeObjectRelease();
          sub_1A4096E1C();
          sub_1A409621C();
          swift_bridgeObjectRelease();
          sub_1A3C85624();
          swift_allocError();
          static VisionError.invalidArgument(message:)(0xD00000000000001BLL, 0x80000001A40BACD0, v3);
          swift_bridgeObjectRelease();
          return swift_willThrow();
        }
        return 196640;
      }
    }
    else if (a1 != 40)
    {
      if (a1 != 1094862674 && a1 != 1111970369) {
        goto LABEL_19;
      }
      return 196640;
    }
    return 983048;
  }
  if (a1 <= 1380401728)
  {
    if (a1 != 1278226488)
    {
      if (a1 == 1278226534) {
        return 983072;
      }
      goto LABEL_19;
    }
    return 983048;
  }
  if (a1 == 1380401729) {
    return 196640;
  }
  uint64_t result = 65600;
  if (a1 != 1647719521 && a1 != 1815491698) {
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1A3E25988(uint64_t a1)
{
  if (a1 == 196616) {
    unsigned int v1 = 1278226488;
  }
  else {
    unsigned int v1 = 0;
  }
  if (a1 == 983048) {
    unsigned int v1 = 8;
  }
  if (a1 == 983072) {
    return 8;
  }
  else {
    return v1;
  }
}

unint64_t sub_1A3E259BC(int a1, unsigned int a2)
{
  if ((*(void *)&a1 & 0xF0000) == 0) {
    return 0;
  }
  unint64_t result = ((unsigned __int16)a1 >> 3) * (unint64_t)a2;
  if ((result & 0xFFFFFFFF00000000) != 0) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A3E259E4()
{
  return sub_1A40962DC();
}

uint64_t sub_1A3E25A44()
{
  return sub_1A40962BC();
}

uint64_t sub_1A3E25A94()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E25ADC()
{
  return sub_1A4096F6C();
}

uint64_t sub_1A3E25B08()
{
  return sub_1A4096F7C();
}

BOOL sub_1A3E25B4C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A3E25B60()
{
  return sub_1A3E255DC(*v0);
}

void *sub_1A3E25B68@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1A3E25B74(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1A3E25B7C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1A3E25B90@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1A3E25BA4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A3E25BB8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1A3E25BE8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A3E25C14@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1A3E25C38(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1A3E25C4C(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1A3E25C60(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1A3E25C74@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A3E25C88(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A3E25C9C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1A3E25CB0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A3E25CC4()
{
  return *v0 == 0;
}

uint64_t sub_1A3E25CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1A3E25CEC(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_1A3E25D00@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1A3E25D10(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1A3E25D1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1A3E25E78(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_1A3E25D60()
{
  unint64_t result = qword_1E95F1030;
  if (!qword_1E95F1030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1030);
  }
  return result;
}

unint64_t sub_1A3E25DBC()
{
  unint64_t result = qword_1E95F1038;
  if (!qword_1E95F1038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1038);
  }
  return result;
}

unint64_t sub_1A3E25E14()
{
  unint64_t result = qword_1E95F1040;
  if (!qword_1E95F1040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1040);
  }
  return result;
}

ValueMetadata *type metadata accessor for TensorDataType()
{
  return &type metadata for TensorDataType;
}

uint64_t sub_1A3E25E78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1A3E25EB4()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_1A3E25EE8(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t sub_1A3E25F28(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  return v2;
}

uint64_t sub_1A3E25F90()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A3E25FEC()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 88))();
  (*(void (**)(void))(*(void *)v0 + 96))(0);
  return v1;
}

uint64_t type metadata accessor for E5RTExecutionPrewarmedState()
{
  return self;
}

uint64_t sub_1A3E26080()
{
  return 0x73657A6973;
}

uint64_t sub_1A3E26094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73657A6973 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A4096E5C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A3E26124(uint64_t a1)
{
  unint64_t v2 = sub_1A3E26310();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E26160(uint64_t a1)
{
  unint64_t v2 = sub_1A3E26310();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3E2619C(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1048);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E26310();
  sub_1A4096FEC();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D00);
  sub_1A3E0B0C0(&qword_1E95F0D08);
  sub_1A4096DBC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A3E26310()
{
  unint64_t result = qword_1E963D770[0];
  if (!qword_1E963D770[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963D770);
  }
  return result;
}

void *sub_1A3E2636C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1A3E26420(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A3E26398(void *a1)
{
  return sub_1A3E2619C(a1, *v1);
}

uint64_t sub_1A3E263B4(uint64_t a1)
{
  uint64_t v2 = (void (**)(void, void))sub_1A3E14DA4();

  return sub_1A3E0CAE4(a1, v2);
}

char *sub_1A3E263F0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, char **a5@<X8>)
{
  unint64_t result = sub_1A3E265BC(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

void *sub_1A3E26420(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1060);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E26310();
  sub_1A4096FDC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D00);
    sub_1A3E0B0C0(&qword_1E95F0D58);
    sub_1A4096CFC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    char v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

char *sub_1A3E265BC(int a1, int a2, int a3, int a4)
{
  long long v8 = sub_1A3E0A7C8(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v10 = *((void *)v8 + 2);
  unint64_t v9 = *((void *)v8 + 3);
  int64_t v11 = v9 >> 1;
  unint64_t v12 = v10 + 1;
  if (v9 >> 1 <= v10)
  {
    long long v8 = sub_1A3E0A7C8((char *)(v9 > 1), v10 + 1, 1, v8);
    unint64_t v9 = *((void *)v8 + 3);
    int64_t v11 = v9 >> 1;
  }
  *((void *)v8 + 2) = v12;
  *(_DWORD *)&v8[4 * v10 + 32] = a1;
  unint64_t v13 = v10 + 2;
  if (v11 < (uint64_t)(v10 + 2)) {
    long long v8 = sub_1A3E0A7C8((char *)(v9 > 1), v10 + 2, 1, v8);
  }
  *((void *)v8 + 2) = v13;
  *(_DWORD *)&v8[4 * v12 + 32] = a2;
  unint64_t v14 = *((void *)v8 + 3);
  unint64_t v15 = v10 + 3;
  if ((uint64_t)(v10 + 3) > (uint64_t)(v14 >> 1)) {
    long long v8 = sub_1A3E0A7C8((char *)(v14 > 1), v10 + 3, 1, v8);
  }
  *((void *)v8 + 2) = v15;
  *(_DWORD *)&v8[4 * v13 + 32] = a3;
  unint64_t v16 = *((void *)v8 + 3);
  if ((uint64_t)(v10 + 4) > (uint64_t)(v16 >> 1)) {
    long long v8 = sub_1A3E0A7C8((char *)(v16 > 1), v10 + 4, 1, v8);
  }
  *((void *)v8 + 2) = v10 + 4;
  *(_DWORD *)&v8[4 * v15 + 32] = a4;
  return v8;
}

unint64_t sub_1A3E26700(void *a1)
{
  a1[1] = sub_1A3E26740();
  a1[2] = sub_1A3E16664();
  a1[3] = sub_1A3E15C30();
  unint64_t result = sub_1A3E15CD8();
  a1[4] = result;
  return result;
}

unint64_t sub_1A3E26740()
{
  unint64_t result = qword_1E95F1050;
  if (!qword_1E95F1050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1050);
  }
  return result;
}

unint64_t sub_1A3E26798()
{
  unint64_t result = qword_1E95F1058;
  if (!qword_1E95F1058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1058);
  }
  return result;
}

unint64_t sub_1A3E267EC(uint64_t a1)
{
  unint64_t result = sub_1A3E14DA4();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for TensorShape()
{
  return &type metadata for TensorShape;
}

unsigned char *storeEnumTagSinglePayload for TensorShape.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3E268C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TensorShape.CodingKeys()
{
  return &type metadata for TensorShape.CodingKeys;
}

unint64_t sub_1A3E268FC()
{
  unint64_t result = qword_1E963DC00[0];
  if (!qword_1E963DC00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963DC00);
  }
  return result;
}

unint64_t sub_1A3E26954()
{
  unint64_t result = qword_1E963DD10;
  if (!qword_1E963DD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963DD10);
  }
  return result;
}

unint64_t sub_1A3E269AC()
{
  unint64_t result = qword_1E963DD18[0];
  if (!qword_1E963DD18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963DD18);
  }
  return result;
}

uint64_t sub_1A3E26A00(uint64_t a1)
{
  unint64_t v2 = sub_1A3E26BEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E26A3C(uint64_t a1)
{
  unint64_t v2 = sub_1A3E26BEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3E26A78(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1068);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E26BEC();
  sub_1A4096FEC();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D00);
  sub_1A3E0B0C0(&qword_1E95F0D08);
  sub_1A4096DBC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A3E26BEC()
{
  unint64_t result = qword_1E963DDA0[0];
  if (!qword_1E963DDA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963DDA0);
  }
  return result;
}

void *sub_1A3E26C40@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1A3E26CC4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A3E26C6C(void *a1)
{
  return sub_1A3E26A78(a1, *v1);
}

uint64_t sub_1A3E26C88(uint64_t a1)
{
  uint64_t v2 = (void (**)(void, void))sub_1A3E27070();

  return sub_1A3E0CAE4(a1, v2);
}

void *sub_1A3E26CC4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F10A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E26BEC();
  sub_1A4096FDC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0D00);
    sub_1A3E0B0C0(&qword_1E95F0D58);
    sub_1A4096CFC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    char v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1A3E26E60(void *a1)
{
  a1[1] = sub_1A3E26EA0();
  a1[2] = sub_1A3E26EF4();
  a1[3] = sub_1A3E26F48();
  unint64_t result = sub_1A3E26F9C();
  a1[4] = result;
  return result;
}

unint64_t sub_1A3E26EA0()
{
  unint64_t result = qword_1E95F1070;
  if (!qword_1E95F1070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1070);
  }
  return result;
}

unint64_t sub_1A3E26EF4()
{
  unint64_t result = qword_1E95F1078;
  if (!qword_1E95F1078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1078);
  }
  return result;
}

unint64_t sub_1A3E26F48()
{
  unint64_t result = qword_1E95F1080;
  if (!qword_1E95F1080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1080);
  }
  return result;
}

unint64_t sub_1A3E26F9C()
{
  unint64_t result = qword_1E95F1088;
  if (!qword_1E95F1088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1088);
  }
  return result;
}

unint64_t sub_1A3E26FF4()
{
  unint64_t result = qword_1E95F1090;
  if (!qword_1E95F1090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1090);
  }
  return result;
}

unint64_t sub_1A3E27048(uint64_t a1)
{
  unint64_t result = sub_1A3E27070();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3E27070()
{
  unint64_t result = qword_1E95F1098;
  if (!qword_1E95F1098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1098);
  }
  return result;
}

ValueMetadata *type metadata accessor for EspressoTensorShape()
{
  return &type metadata for EspressoTensorShape;
}

unsigned char *storeEnumTagSinglePayload for EspressoTensorShape.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3E27170);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EspressoTensorShape.CodingKeys()
{
  return &type metadata for EspressoTensorShape.CodingKeys;
}

unint64_t sub_1A3E271AC()
{
  unint64_t result = qword_1E963E230[0];
  if (!qword_1E963E230[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963E230);
  }
  return result;
}

unint64_t sub_1A3E27204()
{
  unint64_t result = qword_1E963E340;
  if (!qword_1E963E340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963E340);
  }
  return result;
}

unint64_t sub_1A3E2725C()
{
  unint64_t result = qword_1E963E348[0];
  if (!qword_1E963E348[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963E348);
  }
  return result;
}

uint64_t sub_1A3E272B0(uint64_t a1, uint64_t a2)
{
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_1A4096A2C();
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_1A409621C();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  v5[0] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  sub_1A3E2751C();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v5, a1, a2);
  __swift_project_boxed_opaque_existential_1(v5, v6);
  sub_1A4096E3C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  sub_1A409621C();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 64))(v5, a1, a2);
  __swift_project_boxed_opaque_existential_1(v5, v6);
  sub_1A4096E3C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  sub_1A409621C();
  LODWORD(v5[0]) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1A3E2751C()
{
  unint64_t result = qword_1E95F10A8;
  if (!qword_1E95F10A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F10A8);
  }
  return result;
}

unint64_t sub_1A3E27570(uint64_t a1, uint64_t a2)
{
  void (*v40)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t (*v41)(uint64_t, uint64_t);
  void (*v42)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;

  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8);
  uint64_t v42 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 56);
  v42(&v46, a1, v5);
  uint64_t v6 = v48;
  uint64_t v7 = v49;
  __swift_project_boxed_opaque_existential_1(&v46, v48);
  unsigned int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  unsigned int v9 = 0;
  if (v8)
  {
    unint64_t v10 = 0;
    uint64_t v39 = v8;
    uint64_t v40 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 64);
    while (1)
    {
      v42(&v46, a1, v5);
      uint64_t v11 = v48;
      uint64_t v12 = v49;
      __swift_project_boxed_opaque_existential_1(&v46, v48);
      unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
      if (v10 >= *(void *)(result + 16)) {
        break;
      }
      uint64_t v14 = v3;
      unsigned int v15 = *(_DWORD *)(result + 4 * v10 + 32);
      swift_bridgeObjectRelease();
      uint64_t v16 = v14;
      v40(v43, a1, v5);
      uint64_t v17 = v44;
      uint64_t v18 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 48))(v17, v18);
      if (v10 >= *(void *)(result + 16)) {
        goto LABEL_11;
      }
      unsigned int v19 = *(_DWORD *)(result + 4 * v10 + 32);
      unint64_t result = swift_bridgeObjectRelease();
      unint64_t v20 = v19 * (unint64_t)v15;
      if ((v20 & 0xFFFFFFFF00000000) != 0) {
        goto LABEL_12;
      }
      ++v10;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
      if (v20 > v9) {
        unsigned int v9 = v20;
      }
      uint64_t v3 = v16;
      if (v39 == v10) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_9:
    uint64_t v46 = 0;
    int v47 = 0xE000000000000000;
    sub_1A4096A2C();
    v43[0] = v46;
    v43[1] = v47;
    sub_1A409621C();
    sub_1A409621C();
    LODWORD(v46) = v9;
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    v42(&v46, a1, v5);
    uint64_t v21 = v5;
    uint64_t v22 = a1;
    uint64_t v23 = v48;
    uint64_t v24 = v49;
    __swift_project_boxed_opaque_existential_1(&v46, v48);
    uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 56))(v23, v24);
    uint64_t v25 = MEMORY[0x1E4FBC4C0];
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    sub_1A409621C();
    LODWORD(v46) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 72))(v22, v21);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A409621C();
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 48);
    unsigned __int16 v26 = v41(v22, v21);
    LODWORD(v46) = sub_1A3E257B4(v26);
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0C88);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A40F83E0;
    uint64_t v28 = (void *)*MEMORY[0x1E4F2F2C0];
    *(void *)(inited + 32) = *MEMORY[0x1E4F2F2C0];
    *(_DWORD *)(inited + 40) = v9;
    uint64_t v29 = (void *)*MEMORY[0x1E4F2F0E8];
    *(void *)(inited + 64) = v25;
    *(void *)(inited + 72) = v29;
    id v30 = v28;
    id v31 = v29;
    v42(&v46, v22, v21);
    uint64_t v32 = v48;
    uint64_t v33 = v49;
    __swift_project_boxed_opaque_existential_1(&v46, v48);
    *(_DWORD *)(inited + 80) = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 56))(v32, v33);
    unint64_t v34 = (void *)*MEMORY[0x1E4F2EFD8];
    uint64_t v35 = MEMORY[0x1E4FBC4C0];
    *(void *)(inited + 104) = MEMORY[0x1E4FBC4C0];
    *(void *)(inited + 112) = v34;
    id v36 = v34;
    unsigned __int16 v37 = v41(v22, v21);
    int v38 = sub_1A3E257B4(v37);
    *(void *)(inited + 144) = v35;
    *(_DWORD *)(inited + 120) = v38;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    return sub_1A3E05360(inited);
  }
  return result;
}

void sub_1A3E27A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  if (!v3)
  {
    type metadata accessor for CFString(0);
    sub_1A3E27BFC(&qword_1E95ECA20, type metadata accessor for CFString);
    CFDictionaryRef v6 = (const __CFDictionary *)sub_1A409600C();
    swift_bridgeObjectRelease();
    IOSurfaceRef v7 = IOSurfaceCreate(v6);

    if (v7)
    {
      uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 8) + 8) + 40))(a2);
      uint64_t v10 = v9;
      uint64_t v11 = type metadata accessor for NamedObjects();
      uint64_t v12 = sub_1A3E27BFC((unint64_t *)&unk_1E95EF4A0, (void (*)(uint64_t))type metadata accessor for NamedObjects);
      sub_1A3E0C0A8(v7, v8, v10, v11, v12);

      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1A3E27BFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1A3E27C44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  double result = *(double *)a3;
  *(void *)(a4 + 16) = *(void *)a3;
  *(_DWORD *)(a4 + 24) = v4;
  return result;
}

unint64_t sub_1A3E27C5C()
{
  unint64_t result = qword_1E95F10B0;
  if (!qword_1E95F10B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F10B0);
  }
  return result;
}

uint64_t sub_1A3E27CB0(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F10B8);
  uint64_t v11 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  CFDictionaryRef v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  int v10 = *(_DWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E27E50();
  sub_1A4096FEC();
  char v15 = 0;
  sub_1A4096D7C();
  if (!v2)
  {
    uint64_t v13 = v7;
    int v14 = v10;
    char v12 = 1;
    sub_1A3E27EA4();
    sub_1A4096DBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, v4);
}

unint64_t sub_1A3E27E50()
{
  unint64_t result = qword_1E963E3D0[0];
  if (!qword_1E963E3D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963E3D0);
  }
  return result;
}

unint64_t sub_1A3E27EA4()
{
  unint64_t result = qword_1E95F10C0;
  if (!qword_1E95F10C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F10C0);
  }
  return result;
}

uint64_t sub_1A3E27EF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F10C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E27E50();
  sub_1A4096FDC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v18 = 0;
  uint64_t v9 = sub_1A4096CBC();
  uint64_t v11 = v10;
  char v17 = 1;
  sub_1A3E28100();
  swift_bridgeObjectRetain();
  sub_1A4096CFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  int v12 = v16;
  uint64_t v13 = v15;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 24) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A3E28100()
{
  unint64_t result = qword_1E95F10D0;
  if (!qword_1E95F10D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F10D0);
  }
  return result;
}

uint64_t sub_1A3E28154()
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "identifier: ");
  swift_bridgeObjectRetain();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  sub_1A3E0D1C4();
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_1A3E28250()
{
  if (*v0) {
    return 0x6E6F6973726576;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1A3E28290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3E284C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3E282B8(uint64_t a1)
{
  unint64_t v2 = sub_1A3E27E50();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E282F4(uint64_t a1)
{
  unint64_t v2 = sub_1A3E27E50();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3E28330@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A3E27EF8(a1, a2);
}

uint64_t sub_1A3E28348(void *a1)
{
  return sub_1A3E27CB0(a1);
}

uint64_t sub_1A3E28360()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E283E0()
{
  return sub_1A40960DC();
}

uint64_t sub_1A3E28444()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E284C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL sub_1A3E285C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  int v5 = *(_DWORD *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (char v7 = sub_1A4096E5C(), v8 = 0, (v7 & 1) != 0))
  {
    uint64_t v12 = v2;
    int v13 = v3;
    uint64_t v10 = v4;
    int v11 = v5;
    return static ResourceVersion.== infix(_:_:)(&v12, &v10);
  }
  return v8;
}

unint64_t sub_1A3E2865C()
{
  unint64_t result = qword_1E95F10D8;
  if (!qword_1E95F10D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F10D8);
  }
  return result;
}

uint64_t destroy for ProcessingDescriptorSpecifier()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ProcessingDescriptorSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ProcessingDescriptorSpecifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy28_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ProcessingDescriptorSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProcessingDescriptorSpecifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 28)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProcessingDescriptorSpecifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 28) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 28) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcessingDescriptorSpecifier()
{
  return &type metadata for ProcessingDescriptorSpecifier;
}

unsigned char *storeEnumTagSinglePayload for ProcessingDescriptorSpecifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3E28924);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcessingDescriptorSpecifier.CodingKeys()
{
  return &type metadata for ProcessingDescriptorSpecifier.CodingKeys;
}

unint64_t sub_1A3E28960()
{
  unint64_t result = qword_1E963E760[0];
  if (!qword_1E963E760[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963E760);
  }
  return result;
}

unint64_t sub_1A3E289B8()
{
  unint64_t result = qword_1E963E870;
  if (!qword_1E963E870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963E870);
  }
  return result;
}

unint64_t sub_1A3E28A10()
{
  unint64_t result = qword_1E963E878;
  if (!qword_1E963E878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963E878);
  }
  return result;
}

uint64_t sub_1A3E28A64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void (*v8)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void v20[3];
  uint64_t v21;
  uint64_t v22;
  void v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  unsigned __int16 v26 = a3;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 48);
  uint64_t v7 = v6(a1, v5);
  v23[0] = *(void *)sub_1A3E255D0();
  v20[0] = v7;
  sub_1A3E25D60();
  if (sub_1A409612C() & 1) != 0 || (v23[0] = *(void *)sub_1A3E255C4(), v20[0] = v7, (sub_1A409612C()))
  {
    BOOL v8 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 56);
    v8(v23, a1, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F10E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F10E8);
    swift_dynamicCast();
    uint64_t v9 = v21;
    uint64_t v10 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    sub_1A3E0CCE8(v9, v10);
    unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    if (v3) {
      return result;
    }
    v8(v23, a1, v5);
    uint64_t v12 = v24;
    int v13 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 56))(v12, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    v8(v23, a1, v5);
    int v14 = v24;
    uint64_t v15 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    int v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 56))(v14, v15);
    unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    if (v12 == v16)
    {
      char v17 = (_OWORD *)v26;
      *(void *)(v26 + 32) = 0;
      *char v17 = 0u;
      v17[1] = 0u;
      return result;
    }
    sub_1A3C85624();
    swift_allocError();
    static VisionError.internalError(message:)(0xD000000000000017, 0x80000001A40BAE30, v19);
  }
  else
  {
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    v23[0] = 0xD000000000000012;
    v23[1] = 0x80000001A40BAE10;
    v20[0] = v6(a1, v5);
    sub_1A3E2751C();
    sub_1A4096E1C();
    sub_1A409621C();
    swift_bridgeObjectRelease();
    sub_1A3C85624();
    swift_allocError();
    static VisionError.invalidArgument(message:)(0xD000000000000012, 0x80000001A40BAE10, v18);
    swift_bridgeObjectRelease();
  }
  return swift_willThrow();
}

uint64_t sub_1A3E28DB8@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1A409609C();
  sub_1A409692C();
  unsigned int v4 = (void *)(v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16));
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1A3E29EEC(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t sub_1A3E28ECC@<X0>(void *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(unint64_t *__return_ptr, uint64_t)@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  void (*v78)(unint64_t *__return_ptr, uint64_t);
  unint64_t v79;
  unint64_t v80;
  char *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;

  CGFloat v78 = a5;
  uint64_t v68 = a6;
  int v81 = a7;
  uint64_t v11 = *(void *)(*(void *)a4 + 80);
  uint64_t v12 = sub_1A409692C();
  uint64_t v75 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v67 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v73 = (char *)v60 - v15;
  MEMORY[0x1F4188790](v16);
  v60[0] = (char *)v60 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v76 = (char *)v60 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v60 - v21;
  uint64_t v82 = 0;
  uint64_t v83 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  unint64_t v80 = a2;
  sub_1A409621C();
  sub_1A409621C();
  unint64_t v66 = a1;
  unsigned int v84 = *a1;
  uint64_t v23 = v84;
  uint64_t v24 = sub_1A409609C();
  swift_getWitnessTable();
  sub_1A4096E3C();
  sub_1A409621C();
  uint64_t v64 = v24;
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  uint64_t v82 = a2;
  uint64_t v83 = a3;
  swift_bridgeObjectRetain();
  uint64_t v25 = v81;
  MEMORY[0x1A6253D40](&v82, v23, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v82 = 0;
  uint64_t v83 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  uint64_t v26 = v75;
  uint64_t v28 = v75 + 16;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
  v27(v22, (uint64_t)v25, v12);
  uint64_t v65 = v22;
  uint64_t v29 = v26;
  sub_1A409619C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  int v62 = ":  start: inserting object: ";
  sub_1A409621C();
  char v79 = a3;
  sub_1A409621C();
  uint64_t v30 = sub_1A409621C();
  id v31 = *(void (**)(uint64_t))(*(void *)a4 + 144);
  uint64_t v32 = *(void *)a4 + 144;
  uint64_t v63 = a4;
  int v61 = v31;
  v60[1] = v32;
  v31(v30);
  sub_1A409621C();
  uint64_t v33 = v27;
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  unint64_t v34 = v76;
  uint64_t v72 = v28;
  v27(v76, (uint64_t)v81, v12);
  uint64_t v35 = *(void *)(v11 - 8);
  id v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  uint64_t v74 = v11;
  uint64_t v69 = v35;
  os_signpost_type_t v70 = v36;
  LODWORD(v25) = v36(v34, 1, v11);
  unsigned __int16 v37 = *(void (**)(char *, uint64_t))(v29 + 8);
  int v38 = (char *)v12;
  v37(v34, v12);
  uint64_t v71 = (void (*)(char *, uint64_t, char *))v33;
  if (v25 == 1 && v78)
  {
    uint64_t v82 = 0;
    uint64_t v83 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    uint64_t v82 = 0xD00000000000003ALL;
    uint64_t v83 = 0x80000001A40BB020;
    sub_1A409621C();
    sub_1A3D5D2DC(2);
    uint64_t v39 = swift_bridgeObjectRelease();
    uint64_t v40 = v77;
    v78(&v82, v39);
    if (v40) {
      return ((uint64_t (*)(char *, uint64_t))v37)(v81, v12);
    }
    uint64_t v77 = 0;
    CGFloat v78 = (void (*)(unint64_t *__return_ptr, uint64_t))v37;
    uint64_t v42 = v81;
    v37(v81, v12);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EF700);
    uint64_t v43 = v60[0];
    uint64_t v44 = v74;
    int v45 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v43, v45 ^ 1u, 1, v44);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v42, v43, v12);
    uint64_t v82 = 0;
    uint64_t v83 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    uint64_t v82 = 0xD000000000000039;
    uint64_t v83 = 0x80000001A40BB060;
    sub_1A409621C();
    sub_1A3D5D2DC(2);
    swift_bridgeObjectRelease();
  }
  else
  {
    CGFloat v78 = (void (*)(unint64_t *__return_ptr, uint64_t))v37;
  }
  uint64_t v46 = (unint64_t *)v73;
  int v47 = v71;
  v71(v73, (uint64_t)v81, (char *)v12);
  uint64_t v48 = v74;
  uint64_t v49 = v70;
  int v50 = v70((char *)v46, 1, v74);
  uint64_t v76 = v38;
  uint64_t v51 = v38;
  uint64_t v52 = (uint64_t (*)(uint64_t, char *))v78;
  v78(v46, (uint64_t)v51);
  if (v50 == 1)
  {
    uint64_t v82 = 0;
    uint64_t v83 = 0xE000000000000000;
    sub_1A4096A2C();
    swift_bridgeObjectRelease();
    uint64_t v82 = 0xD000000000000017;
    uint64_t v83 = 0x80000001A40BAFC0;
    sub_1A409621C();
    sub_1A409621C();
    uint64_t v53 = v82;
    uint64_t v54 = v83;
    sub_1A3C85624();
    swift_allocError();
    static VisionError.internalError(message:)(v53, v54, v55);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return v52((uint64_t)v81, v76);
  }
  else
  {
    char v56 = v81;
    uint64_t v57 = v76;
    v47(v65, (uint64_t)v81, v76);
    uint64_t v82 = v80;
    uint64_t v83 = v79;
    swift_bridgeObjectRetain();
    sub_1A40960BC();
    uint64_t v82 = 0;
    uint64_t v83 = 0xE000000000000000;
    sub_1A4096A2C();
    sub_1A409621C();
    sub_1A409621C();
    uint64_t v58 = v67;
    v47(v67, (uint64_t)v56, v57);
    uint64_t result = v49(v58, 1, v48);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1A4096E2C();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v58, v48);
      sub_1A409621C();
      sub_1A409621C();
      uint64_t v59 = sub_1A409621C();
      v61(v59);
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A3D5D2DC(2);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1A3E29808()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1A409609C();
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1A3E29F10(v2);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

uint64_t sub_1A3E298E8(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  v14[1] = a1;
  v14[0] = sub_1A409692C();
  uint64_t v7 = *(void *)(v14[0] - 8);
  MEMORY[0x1F4188790](v14[0]);
  uint64_t v9 = (char *)v14 - v8;
  unint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  unint64_t v15 = 0xD000000000000039;
  unint64_t v16 = 0x80000001A40BAEF0;
  sub_1A409621C();
  uint64_t v10 = sub_1A409621C();
  uint64_t v11 = *(void (**)(uint64_t))(*(void *)a4 + 144);
  v11(v10);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  unint64_t v15 = a2;
  unint64_t v16 = a3;
  sub_1A409609C();
  sub_1A409604C();
  (*(void (**)(char *, void))(v7 + 8))(v9, v14[0]);
  unint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409621C();
  sub_1A409621C();
  sub_1A409621C();
  uint64_t v12 = sub_1A409621C();
  v11(v12);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3E29B68()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1A409609C();
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1A3E29F40(v2, v4);
  os_unfair_lock_unlock(v3);

  return swift_release();
}

unint64_t sub_1A3E29C48()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = MEMORY[0x1E4FBB1A0];
  sub_1A409609C();
  swift_retain();
  sub_1A3C8EAAC((void (*)(uint64_t))sub_1A3E2A094, v1, v2, (uint64_t)v4);
  swift_release();
  if (v4[1]) {
    return v4[0];
  }
  else {
    return 0xD000000000000028;
  }
}

uint64_t sub_1A3E29D18()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A3E29D50()
{
  uint64_t v0 = swift_allocObject();
  sub_1A3E29D88();
  return v0;
}

uint64_t sub_1A3E29D88()
{
  sub_1A4095FEC();
  sub_1A409609C();
  uint64_t v1 = sub_1A3E29E70();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_1A3E29E2C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

uint64_t sub_1A3E29E70()
{
  return sub_1A4096ACC();
}

uint64_t sub_1A3E29EEC@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1A3E28ECC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(unint64_t *__return_ptr, uint64_t))(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_1A3E29F10(uint64_t a1)
{
  return sub_1A3E298E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1A3E29F40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)v2 + 144);
  v3(a1, a2);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  sub_1A409609C();
  sub_1A409608C();
  sub_1A4096A2C();
  uint64_t v4 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v3)(v4);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3E2A094@<X0>(void *a1@<X8>)
{
  sub_1A409621C();
  sub_1A409609C();
  swift_getWitnessTable();
  uint64_t result = sub_1A4096E3C();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1A3E2A164()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ObjectCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A3E2A1C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2, v3);
}

uint64_t sub_1A3E2A25C()
{
  return swift_bridgeObjectRelease();
}

id sub_1A3E2A264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4095B9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ImageSource();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A3C87E78(a1, v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = *(void **)v10;
      unint64_t v15 = *(void **)(v10 + 8);
      if (!v15) {
        goto LABEL_18;
      }
      id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      uint64_t v10 = *(unsigned int *)(a1 + *(int *)(type metadata accessor for OrientedImageSource() + 20));
      uint64_t v17 = *(void *)(a2 + 16);
      id v18 = v15;
      id v19 = objc_msgSend(v16, sel_initWithCVPixelBuffer_depthData_orientation_options_session_, v14, v18, v10, 0, v17);
      if (v19) {
        goto LABEL_9;
      }
      __break(1u);
LABEL_7:
      uint64_t v14 = *(void **)v10;
      uint64_t v20 = *(void **)(v10 + 8);
      if (!v20)
      {
        id v31 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        id v25 = objc_msgSend(v31, sel_initWithCMSampleBuffer_orientation_options_session_, v14, *(unsigned int *)(a1 + *(int *)(type metadata accessor for OrientedImageSource() + 20)), 0, *(void *)(a2 + 16));
        if (v25) {
          goto LABEL_19;
        }
        __break(1u);
LABEL_18:
        id v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        id v25 = objc_msgSend(v32, sel_initWithCVPixelBuffer_orientation_options_session_, v14, *(unsigned int *)(a1 + *(int *)(type metadata accessor for OrientedImageSource() + 20)), 0, *(void *)(a2 + 16));
        if (v25)
        {
LABEL_19:
          id v13 = v25;
          swift_release();

          goto LABEL_20;
        }
LABEL_25:
        __break(1u);
        JUMPOUT(0x1A3E2A6D0);
      }
      id v21 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      uint64_t v22 = *(unsigned int *)(a1 + *(int *)(type metadata accessor for OrientedImageSource() + 20));
      uint64_t v23 = *(void *)(a2 + 16);
      id v18 = v20;
      id v19 = objc_msgSend(v21, sel_initWithCMSampleBuffer_depthData_orientation_options_session_, v14, v18, v22, 0, v23);
      if (v19)
      {
LABEL_9:
        id v13 = v19;
        swift_release();

LABEL_20:
        sub_1A3E2A6E8(a1);
        return v13;
      }
      goto LABEL_24;
    case 2u:
      goto LABEL_7;
    case 3u:
      uint64_t v14 = *(void **)v10;
      id v24 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v25 = objc_msgSend(v24, sel_initWithCGImage_orientation_options_session_, v14, *(unsigned int *)(a1 + *(int *)(type metadata accessor for OrientedImageSource() + 20)), 0, *(void *)(a2 + 16));
      if (v25) {
        goto LABEL_19;
      }
      __break(1u);
LABEL_12:
      uint64_t v14 = *(void **)v10;
      id v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v25 = objc_msgSend(v26, sel_initWithCIImage_orientation_options_session_, v14, *(unsigned int *)(a1 + *(int *)(type metadata accessor for OrientedImageSource() + 20)), 0, *(void *)(a2 + 16));
      if (v25) {
        goto LABEL_19;
      }
      __break(1u);
LABEL_14:
      uint64_t v27 = *(void *)v10;
      unint64_t v28 = *(void *)(v10 + 8);
      id v29 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      uint64_t v30 = (void *)sub_1A4095C0C();
      id v13 = objc_msgSend(v29, sel_initWithData_orientation_options_session_, v30, *(unsigned int *)(a1 + *(int *)(type metadata accessor for OrientedImageSource() + 20)), 0, *(void *)(a2 + 16));

      if (!v13) {
        goto LABEL_23;
      }
      sub_1A3C7D218(v27, v28);
      swift_release();
      goto LABEL_20;
    case 4u:
      goto LABEL_12;
    case 5u:
      goto LABEL_14;
    default:
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v10, v4);
      id v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      uint64_t v12 = (void *)sub_1A4095B4C();
      id v13 = objc_msgSend(v11, sel_initWithURL_orientation_options_session_, v12, *(unsigned int *)(a1 + *(int *)(type metadata accessor for OrientedImageSource() + 20)), 0, *(void *)(a2 + 16));

      if (!v13)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      swift_release();
      sub_1A3E2A6E8(a1);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v13;
  }
}

uint64_t sub_1A3E2A6E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OrientedImageSource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static DetectContoursRequest.Revision.< infix(_:_:)()
{
  return 0;
}

uint64_t static DetectContoursRequest.Revision.== infix(_:_:)()
{
  return 1;
}

uint64_t DetectContoursRequest.Revision.hash(into:)()
{
  return sub_1A4096F3C();
}

uint64_t sub_1A3E2A77C(uint64_t a1)
{
  unint64_t v2 = sub_1A3E2AA3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E2A7B8(uint64_t a1)
{
  unint64_t v2 = sub_1A3E2AA3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A3E2A7F4(uint64_t a1)
{
  unint64_t v2 = sub_1A3E2AA90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E2A830(uint64_t a1)
{
  unint64_t v2 = sub_1A3E2AA90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectContoursRequest.Revision.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F10F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F10F8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E2AA3C();
  sub_1A4096FEC();
  sub_1A3E2AA90();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A3E2AA3C()
{
  unint64_t result = qword_1E963EA18;
  if (!qword_1E963EA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963EA18);
  }
  return result;
}

unint64_t sub_1A3E2AA90()
{
  unint64_t result = qword_1E963EA20[0];
  if (!qword_1E963EA20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963EA20);
  }
  return result;
}

uint64_t DetectContoursRequest.Revision.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t DetectContoursRequest.Revision.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1100);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1108);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E2AA3C();
  sub_1A4096FDC();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_1A4096D3C() + 16) == 1)
    {
      sub_1A3E2AA90();
      sub_1A4096C7C();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_1A4096ABC();
      swift_allocError();
      id v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F0440);
      *id v13 = &type metadata for DetectContoursRequest.Revision;
      sub_1A4096C8C();
      sub_1A4096AAC();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBBA70], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A3E2AE10(void *a1)
{
  return DetectContoursRequest.Revision.init(from:)(a1);
}

uint64_t sub_1A3E2AE28(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F10F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F10F8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E2AA3C();
  sub_1A4096FEC();
  sub_1A3E2AA90();
  sub_1A4096D5C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double DetectContoursRequest.init(_:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  static NormalizedRect.fullImage.getter(&v8);
  unint64_t v4 = sub_1A3C89CE8(MEMORY[0x1E4FBC860]);
  if (v3 == 1)
  {
    unint64_t v5 = sub_1A3E2B2A0();
    sub_1A3E2C988((uint64_t)&type metadata for DetectContoursRequest, v5, v6);
  }
  *(void *)a2 = 0x3F00000040000000;
  *(_WORD *)(a2 + 8) = 256;
  *(void *)(a2 + 16) = 512;
  *(__n128 *)(a2 + 24) = v8;
  double result = v9[0];
  *(_OWORD *)(a2 + 40) = *(_OWORD *)v9;
  *(_WORD *)(a2 + 56) = 256;
  *(unsigned char *)(a2 + 58) = 0;
  *(void *)(a2 + 64) = v4;
  return result;
}

float DetectContoursRequest.contrastAdjustment.getter()
{
  return *(float *)v0;
}

void DetectContoursRequest.contrastAdjustment.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*DetectContoursRequest.contrastAdjustment.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t DetectContoursRequest.contrastPivot.getter()
{
  return *(unsigned int *)(v0 + 4) | ((unint64_t)*(unsigned __int8 *)(v0 + 8) << 32);
}

uint64_t DetectContoursRequest.contrastPivot.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  *(unsigned char *)(v1 + 8) = BYTE4(result) & 1;
  return result;
}

uint64_t (*DetectContoursRequest.contrastPivot.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectContoursRequest.detectsDarkOnLight.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t DetectContoursRequest.detectsDarkOnLight.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result;
  return result;
}

uint64_t (*DetectContoursRequest.detectsDarkOnLight.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t DetectContoursRequest.maximumImageDimension.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t DetectContoursRequest.maximumImageDimension.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*DetectContoursRequest.maximumImageDimension.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

__n128 DetectContoursRequest.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 24);
  long long v3 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 DetectContoursRequest.regionOfInterest.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t (*DetectContoursRequest.regionOfInterest.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3E2B1C4()
{
  unint64_t v0 = sub_1A3E2B2A0();
  uint64_t result = sub_1A3E2CFDC((uint64_t)&type metadata for DetectContoursRequest, v0);
  qword_1E963EA08 = result;
  return result;
}

uint64_t static DetectContoursRequest.supportedRevisions.getter()
{
  if (qword_1E963EA00 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void DetectContoursRequest.descriptor.getter(_WORD *a1@<X8>)
{
  *a1 = 56;
}

void DetectContoursRequest.modelFileBackingStore.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 58);
}

unsigned char *DetectContoursRequest.modelFileBackingStore.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 58) = *result;
  return result;
}

uint64_t (*DetectContoursRequest.modelFileBackingStore.modify())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

unint64_t sub_1A3E2B2A0()
{
  unint64_t result = qword_1E95F1110;
  if (!qword_1E95F1110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1110);
  }
  return result;
}

int *sub_1A3E2B2F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1180);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A40E7700;
  uint64_t v1 = sub_1A3D09D64(4, 0, 11);
  uint64_t v2 = sub_1A3D09D5C(v1);
  uint64_t v3 = sub_1A3D09D64(4, 0, 11);
  uint64_t v4 = sub_1A3D09D5C(v3);
  uint64_t v5 = sub_1A3D09D64(4, 0, 11);
  uint64_t v6 = sub_1A3D09D5C(v5);
  unint64_t result = sub_1A3D09468(v6, v2, v4, v6, (uint64_t)&type metadata for DetectContoursRequest.Revision, v0 + 32);
  qword_1E9643E08 = v0;
  return result;
}

uint64_t DetectContoursRequest.hash(into:)(long long *a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 64);
  sub_1A4096F5C();
  sub_1A4096F4C();
  if (v3 != 1) {
    sub_1A4096F5C();
  }
  sub_1A4096F4C();
  sub_1A4096F3C();
  sub_1A3C90A2C();
  sub_1A40960DC();
  sub_1A4096F3C();
  sub_1A4096F4C();
  sub_1A4096F4C();
  sub_1A3C90A80();
  sub_1A40960DC();
  swift_bridgeObjectRetain();
  sub_1A3C90DA4(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t DetectContoursRequest.hashValue.getter()
{
  int v1 = v0[1];
  char v2 = *((unsigned char *)v0 + 8);
  char v3 = *((unsigned char *)v0 + 9);
  uint64_t v4 = *((void *)v0 + 2);
  char v5 = *((unsigned char *)v0 + 56);
  char v6 = *((unsigned char *)v0 + 57);
  char v7 = *((unsigned char *)v0 + 58);
  uint64_t v8 = *((void *)v0 + 8);
  int v12 = *v0;
  int v13 = v1;
  char v14 = v2;
  char v15 = v3;
  uint64_t v16 = v4;
  long long v9 = *(_OWORD *)(v0 + 10);
  long long v17 = *(_OWORD *)(v0 + 6);
  long long v18 = v9;
  char v19 = v5;
  char v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  sub_1A4096F2C();
  DetectContoursRequest.hash(into:)(v11);
  return sub_1A4096F7C();
}

__n128 sub_1A3E2B598@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 24);
  long long v3 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1A3E2B5A8(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t (*sub_1A3E2B5B8())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3E2B5D8(uint64_t a1)
{
  unint64_t v2 = sub_1A3E2C5A4();

  return sub_1A3D45308(a1, v2);
}

uint64_t sub_1A3E2B614@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1A3E2B2A0();

  return sub_1A3E2D414(a1, a2, v6, a3);
}

uint64_t sub_1A3E2B668(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v6 = sub_1A3E2B2A0();

  return sub_1A3E2D57C(a1, a2, a3, v6);
}

void sub_1A3E2B6BC(_WORD *a1@<X8>)
{
  *a1 = 56;
}

void sub_1A3E2B6C8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 58);
}

unsigned char *sub_1A3E2B6D4(unsigned char *result)
{
  *(unsigned char *)(v1 + 58) = *result;
  return result;
}

uint64_t (*sub_1A3E2B6E0())(TtTrkRpnNode *__hidden this)
{
  return TtTrkRpnNode::config;
}

uint64_t sub_1A3E2B700(uint64_t a1)
{
  unint64_t v2 = sub_1A3E2B2A0();

  return sub_1A3E2D9E4(a1, v2);
}

uint64_t sub_1A3E2B73C()
{
  int v1 = v0[1];
  char v2 = *((unsigned char *)v0 + 8);
  char v3 = *((unsigned char *)v0 + 9);
  uint64_t v4 = *((void *)v0 + 2);
  char v5 = *((unsigned char *)v0 + 56);
  char v6 = *((unsigned char *)v0 + 57);
  char v7 = *((unsigned char *)v0 + 58);
  uint64_t v8 = *((void *)v0 + 8);
  int v12 = *v0;
  int v13 = v1;
  char v14 = v2;
  char v15 = v3;
  uint64_t v16 = v4;
  long long v9 = *(_OWORD *)(v0 + 10);
  long long v17 = *(_OWORD *)(v0 + 6);
  long long v18 = v9;
  char v19 = v5;
  char v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  sub_1A4096F2C();
  DetectContoursRequest.hash(into:)(v11);
  return sub_1A4096F7C();
}

uint64_t sub_1A3E2B7D8()
{
  int v1 = v0[1];
  char v2 = *((unsigned char *)v0 + 8);
  char v3 = *((unsigned char *)v0 + 9);
  uint64_t v4 = *((void *)v0 + 2);
  char v5 = *((unsigned char *)v0 + 56);
  char v6 = *((unsigned char *)v0 + 57);
  char v7 = *((unsigned char *)v0 + 58);
  uint64_t v8 = *((void *)v0 + 8);
  int v12 = *v0;
  int v13 = v1;
  char v14 = v2;
  char v15 = v3;
  uint64_t v16 = v4;
  long long v9 = *(_OWORD *)(v0 + 10);
  long long v17 = *(_OWORD *)(v0 + 6);
  long long v18 = v9;
  char v19 = v5;
  char v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  sub_1A4096F2C();
  DetectContoursRequest.hash(into:)(v11);
  return sub_1A4096F7C();
}

uint64_t sub_1A3E2B870()
{
  if (qword_1E963EA10 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A3E2B8CC()
{
  return sub_1A409617C();
}

uint64_t sub_1A3E2B8F4(uint64_t a1, uint64_t a2)
{
  sub_1A3CCA72C();

  return sub_1A3E2C684(a1, a2);
}

id sub_1A3E2B940(uint64_t a1)
{
  return sub_1A3E2BA9C(a1);
}

uint64_t _s6Vision21DetectContoursRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(a1 + 9);
  CGSize v3 = *(CGSize *)(a1 + 40);
  int v4 = *(unsigned __int8 *)(a1 + 56);
  int v5 = *(unsigned __int8 *)(a1 + 57);
  char v6 = *(unsigned char *)(a1 + 58);
  uint64_t v7 = *(void *)(a1 + 64);
  int v8 = *(unsigned __int8 *)(a2 + 9);
  CGPoint v9 = *(CGPoint *)(a2 + 24);
  CGSize v10 = *(CGSize *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 56);
  int v12 = *(unsigned __int8 *)(a2 + 57);
  char v13 = *(unsigned char *)(a2 + 58);
  uint64_t v14 = *(void *)(a2 + 64);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8) || v2 != v8) {
      return 0;
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) != 0 || *(float *)(a1 + 4) != *(float *)(a2 + 4) || v2 != v8)
  {
    return 0;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  v17.origin = *(CGPoint *)(a1 + 24);
  v17.size = v3;
  v16.origin = v9;
  v16.size = v10;
  if (!static NormalizedRect.== infix(_:_:)(&v17, &v16)) {
    return 0;
  }
  if ((v4 ^ v11)) {
    return 0;
  }
  if ((v5 ^ v12)) {
    return 0;
  }
  LOBYTE(v17.origin.x) = v6;
  LOBYTE(v16.origin.x) = v13;
  if (!static ModelFileBackingStoreType.== infix(_:_:)((unsigned __int8 *)&v17, (unsigned __int8 *)&v16)) {
    return 0;
  }

  return sub_1A3C8FF4C(v7, v14);
}

id sub_1A3E2BA9C(uint64_t a1)
{
  float v4 = *v1;
  float v5 = v1[1];
  char v6 = *((unsigned char *)v1 + 8);
  char v7 = *((unsigned char *)v1 + 9);
  uint64_t v8 = *((void *)v1 + 2);
  char v9 = *((unsigned char *)v1 + 56);
  char v10 = *((unsigned char *)v1 + 57);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1A3E2C5F8();
  id result = objc_msgSend(ObjCClassFromMetadata, sel_isSubclassOfClass_, swift_getObjCClassFromMetadata());
  if (result)
  {
    char v46 = v7;
    char v47 = v9;
    char v48 = v10;
    float v49 = v5;
    float v13 = -1.0;
    if ((v6 & 1) == 0)
    {
      *(float *)&long long v51 = v5;
      LODWORD(v50[0]) = 0;
      LODWORD(v53) = 1065353216;
      id result = (id)sub_1A3CA9D30();
      if (v2) {
        return result;
      }
      float v13 = v5;
    }
    uint64_t v14 = MEMORY[0x1E4FBB470];
    uint64_t v15 = sub_1A409617C();
    uint64_t v17 = v16;
    *((void *)&v52 + 1) = v14;
    *(float *)&long long v51 = v13;
    int v45 = *(uint64_t (**)(void *))(*(void *)a1 + 200);
    long long v18 = (void (*)(void *, void))v45(v50);
    sub_1A3C8BC40((uint64_t)&v51, v15, v17);
    v18(v50, 0);
    *(void *)&long long v51 = v8;
    v50[0] = 64;
    uint64_t v53 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v19 = MEMORY[0x1E4FBB550];
    id result = (id)sub_1A3CA9D30();
    if (!v2)
    {
      uint64_t v20 = sub_1A409617C();
      uint64_t v22 = v21;
      *((void *)&v52 + 1) = v19;
      *(void *)&long long v51 = v8;
      uint64_t v23 = (void (*)(void *, void))v45(v50);
      sub_1A3C8BC40((uint64_t)&v51, v20, v22);
      v23(v50, 0);
      uint64_t v24 = sub_1A409617C();
      uint64_t v26 = v25;
      *((void *)&v52 + 1) = MEMORY[0x1E4FBB470];
      *(float *)&long long v51 = v4;
      uint64_t v27 = (void (*)(void *, void))v45(v50);
      sub_1A3C8BC40((uint64_t)&v51, v24, v26);
      v27(v50, 0);
      uint64_t v28 = sub_1A409617C();
      uint64_t v30 = v29;
      if (v6)
      {
        long long v51 = 0u;
        long long v52 = 0u;
      }
      else
      {
        *((void *)&v52 + 1) = MEMORY[0x1E4FBB470];
        *(float *)&long long v51 = v49;
      }
      id v31 = (void (*)(void *, void))v45(v50);
      sub_1A3C8BC40((uint64_t)&v51, v28, v30);
      v31(v50, 0);
      uint64_t v32 = sub_1A409617C();
      uint64_t v34 = v33;
      uint64_t v35 = MEMORY[0x1E4FBB390];
      *((void *)&v52 + 1) = MEMORY[0x1E4FBB390];
      LOBYTE(v51) = v46;
      id v36 = (void (*)(void *, void))v45(v50);
      sub_1A3C8BC40((uint64_t)&v51, v32, v34);
      v36(v50, 0);
      uint64_t v37 = sub_1A409617C();
      uint64_t v39 = v38;
      *((void *)&v52 + 1) = v35;
      LOBYTE(v51) = v47;
      uint64_t v40 = (void (*)(void *, void))v45(v50);
      sub_1A3C8BC40((uint64_t)&v51, v37, v39);
      v40(v50, 0);
      uint64_t v41 = sub_1A409617C();
      uint64_t v43 = v42;
      *((void *)&v52 + 1) = v35;
      LOBYTE(v51) = v48;
      uint64_t v44 = (uint64_t (*)(void *, void))v45(v50);
      sub_1A3C8BC40((uint64_t)&v51, v41, v43);
      return (id)v44(v50, 0);
    }
  }
  return result;
}

unint64_t sub_1A3E2BF34()
{
  unint64_t result = qword_1E95F1118;
  if (!qword_1E95F1118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1118);
  }
  return result;
}

unint64_t sub_1A3E2BF88(uint64_t a1)
{
  unint64_t result = sub_1A3CCA72C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A3E2BFB0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A3CCF3E4();
  unint64_t result = sub_1A3E2BFE0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A3E2BFE0()
{
  unint64_t result = qword_1E95F1150;
  if (!qword_1E95F1150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1150);
  }
  return result;
}

unint64_t sub_1A3E2C038()
{
  unint64_t result = qword_1E95F1158;
  if (!qword_1E95F1158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1158);
  }
  return result;
}

unint64_t sub_1A3E2C090()
{
  unint64_t result = qword_1E95F1160;
  if (!qword_1E95F1160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1160);
  }
  return result;
}

uint64_t sub_1A3E2C0E4()
{
  return sub_1A3E2C638(&qword_1E95F1168, (void (*)(uint64_t))type metadata accessor for ContoursObservation);
}

unint64_t sub_1A3E2C12C(uint64_t a1)
{
  unint64_t result = sub_1A3E2B2A0();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for DetectContoursRequest()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectContoursRequest(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v3;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectContoursRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  int v3 = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v3;
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectContoursRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DetectContoursRequest()
{
  return &type metadata for DetectContoursRequest;
}

ValueMetadata *type metadata accessor for DetectContoursRequest.Revision()
{
  return &type metadata for DetectContoursRequest.Revision;
}

unsigned char *_s6Vision21DetectContoursRequestV8RevisionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A3E2C3A4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectContoursRequest.Revision.CodingKeys()
{
  return &type metadata for DetectContoursRequest.Revision.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectContoursRequest.Revision.Revision1CodingKeys()
{
  return &type metadata for DetectContoursRequest.Revision.Revision1CodingKeys;
}

unint64_t sub_1A3E2C3F0()
{
  unint64_t result = qword_1E963F230[0];
  if (!qword_1E963F230[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963F230);
  }
  return result;
}

unint64_t sub_1A3E2C448()
{
  unint64_t result = qword_1E963F340;
  if (!qword_1E963F340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963F340);
  }
  return result;
}

unint64_t sub_1A3E2C4A0()
{
  unint64_t result = qword_1E963F348[0];
  if (!qword_1E963F348[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963F348);
  }
  return result;
}

unint64_t sub_1A3E2C4F8()
{
  unint64_t result = qword_1E963F3D0;
  if (!qword_1E963F3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963F3D0);
  }
  return result;
}

unint64_t sub_1A3E2C550()
{
  unint64_t result = qword_1E963F3D8[0];
  if (!qword_1E963F3D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963F3D8);
  }
  return result;
}

unint64_t sub_1A3E2C5A4()
{
  unint64_t result = qword_1E95F1170;
  if (!qword_1E95F1170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1170);
  }
  return result;
}

unint64_t sub_1A3E2C5F8()
{
  unint64_t result = qword_1E95F1178;
  if (!qword_1E95F1178)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95F1178);
  }
  return result;
}

uint64_t sub_1A3E2C638(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A3E2C684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A409692C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v17[-v7 - 8];
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v6);
  int v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1A3C85678(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC2D8);
  int v12 = swift_dynamicCast();
  float v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v12)
  {
    v13(v8, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, a2);
    char v14 = sub_1A409612C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    v13(v8, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    char v14 = 0;
  }
  return v14 & 1;
}

double sub_1A3E2C8A4@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1A3E2C8B4@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(a1 + 64))();
  swift_getAssociatedTypeWitness();
  type metadata accessor for RevisionAvailability();
  sub_1A40963DC();
  swift_getWitnessTable();
  a2[3] = sub_1A4096BBC();
  uint64_t result = swift_getWitnessTable();
  a2[4] = result;
  *a2 = v3;
  a2[1] = 0;
  return result;
}

uint64_t sub_1A3E2C988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6 = objc_msgSend(self, sel_linktimeVersion);
  return sub_1A3E2C9E0(v6, a1, a2, a3);
}

uint64_t sub_1A3E2C9E0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v47 = a1;
  uint64_t v38 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1A409692C();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v37 = &v34[-v9];
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v43 = &v34[-v11];
  uint64_t v12 = type metadata accessor for RevisionAvailability();
  uint64_t v36 = sub_1A409692C();
  uint64_t v35 = *(void *)(v36 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v36);
  uint64_t v15 = &v34[-v14];
  uint64_t v16 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v13);
  long long v18 = &v34[-v17];
  uint64_t v46 = AssociatedTypeWitness;
  uint64_t v52 = sub_1A409635C();
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  sub_1A3E2C8B4(a3, v51);
  uint64_t v19 = 0;
  uint64_t v20 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v21 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32);
  uint64_t v22 = (void (**)(unsigned char *, uint64_t))(v16 + 8);
  uint64_t v39 = v10;
  uint64_t v42 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16);
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v51, v51[3]);
    sub_1A409694C();
    if ((*v20)(v15, 1, v12) == 1) {
      break;
    }
    (*v21)(v18, v15, v12);
    unint64_t v23 = sub_1A3D09458(v12);
    if (v24) {
      goto LABEL_2;
    }
    if (v23 == v47) {
      goto LABEL_16;
    }
    if ((int)v23 > v47 || (unint64_t v25 = HIDWORD(v23), v26 = sub_1A3D09D50(), *v26 != v25) && (int)v25 < v47)
    {
LABEL_2:
      (*v22)(v18, v12);
    }
    else
    {
      uint64_t v44 = v34;
      uint64_t v48 = v52;
      MEMORY[0x1F4188790](v26);
      uint64_t v27 = v41;
      *(void *)&v34[-32] = v40;
      *(void *)&v34[-24] = v27;
      uint64_t v32 = (uint64_t)v18;
      sub_1A40963DC();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      sub_1A409664C();
      uint64_t v45 = v19;
      swift_bridgeObjectRelease();
      if (v50)
      {
        (*v42)(v43, v18, v46);
        sub_1A40963AC();
      }
      else
      {
        (*v42)(v43, v18, v46);
        sub_1A40963BC();
      }
      (*v22)(v18, v12);
      uint64_t v19 = v45;
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v15, v36);
  uint64_t v28 = v52;
  uint64_t v49 = v52;
  uint64_t v29 = v46;
  sub_1A40963DC();
  swift_getWitnessTable();
  if ((sub_1A409666C() & 1) == 0)
  {
    uint64_t v49 = v28;
    long long v18 = v37;
    sub_1A409665C();
    uint64_t v30 = v39;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v39 + 48))(v18, 1, v29) == 1)
    {
      __break(1u);
LABEL_16:
      uint64_t v29 = v46;
      uint64_t v30 = v39;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v30 + 32))(v38, v18, v29);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  }
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1A4096A2C();
  sub_1A409701C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  int v33 = 0;
  uint64_t v32 = 107;
  uint64_t result = sub_1A4096BEC();
  __break(1u);
  return result;
}

uint64_t sub_1A3E2CFDC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v34 = (char *)&v29 - v6;
  uint64_t v7 = type metadata accessor for RevisionAvailability();
  uint64_t v8 = sub_1A409692C();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v29 - v13;
  unsigned int v15 = objc_msgSend(self, sel_runtimeVersion);
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v43 = sub_1A409635C();
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v16 = a2;
  int v17 = v15;
  sub_1A3E2C8B4(v16, v42);
  uint64_t v39 = 0;
  long long v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v19 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v32 = (void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v20 = (void (**)(char *, uint64_t))(v12 + 8);
  int v33 = v17;
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, v42[3]);
    sub_1A409694C();
    if ((*v18)(v11, 1, v7) == 1) {
      break;
    }
    (*v19)(v14, v11, v7);
    unint64_t v21 = sub_1A3D09458(v7);
    if ((v22 & 1) == 0 && v17 >= (int)v21)
    {
      unint64_t v23 = HIDWORD(v21);
      char v24 = sub_1A3D09D50();
      if (*v24 == v23 || v17 <= (int)v23)
      {
        uint64_t v37 = &v29;
        uint64_t v40 = v43;
        MEMORY[0x1F4188790](v24);
        uint64_t v25 = v36;
        *(&v29 - 4) = v35;
        *(&v29 - 3) = v25;
        *(&v29 - 2) = (uint64_t)v14;
        sub_1A40963DC();
        swift_bridgeObjectRetain();
        swift_getWitnessTable();
        uint64_t v26 = v39;
        sub_1A409664C();
        swift_bridgeObjectRelease();
        uint64_t v39 = v26;
        if (v41)
        {
          (*v32)(v34, v14, v38);
          sub_1A40963AC();
        }
        else
        {
          (*v32)(v34, v14, v38);
          sub_1A40963BC();
        }
        int v17 = v33;
      }
    }
    (*v20)(v14, v7);
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
  uint64_t v27 = v43;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return v27;
}

uint64_t sub_1A3E2D414@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v5 = *a1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1A3C8C7D8(v5), (v8 & 1) != 0))
  {
    unint64_t v9 = v7;
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v11 = sub_1A4095F8C();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(a4, v10 + *(void *)(v12 + 72) * v9, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a4, 0, 1, v11);
  }
  else
  {
    uint64_t v13 = sub_1A4095F8C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a4, 1, 1, v13);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A3E2D57C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFF00);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = sub_1A4095F8C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v17 = *a2;
  sub_1A3CCB91C(a1, (uint64_t)v12, (uint64_t *)&unk_1E95EFF00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1A3CA2EB8((uint64_t)v12, (uint64_t *)&unk_1E95EFF00);
    long long v18 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a4 + 56))(v23, v22, a4);
    sub_1A3E2DF94(v17, (uint64_t)v10);
    sub_1A3CA2EB8((uint64_t)v10, (uint64_t *)&unk_1E95EFF00);
    return v18(v23, 0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, v16, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
    uint64_t v20 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a4 + 56))(v23, v22, a4);
    sub_1A3E2D828((uint64_t)v10, v17);
    v20(v23, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_1A3E2D828(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  char v5 = a2 & 1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EFF00);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A4095F8C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1A3CA2EB8(a1, (uint64_t *)&unk_1E95EFF00);
    sub_1A3E2DF94(v5, (uint64_t)v8);
    return sub_1A3CA2EB8((uint64_t)v8, (uint64_t *)&unk_1E95EFF00);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A3E2E334((uint64_t)v12, v5, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A3E2D9E4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)(a2 + 8) + 56))(&v3);
  sub_1A3CFB1AC();
  return sub_1A4096E1C();
}

double sub_1A3E2DA4C(uint64_t a1)
{
  __n128 v1 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, __n128))(v3 + 16))((char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95EE150);
  if (swift_dynamicCast())
  {
    sub_1A3C856DC(v8, (uint64_t)v10);
    uint64_t v4 = v11;
    uint64_t v5 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 16))(v8, v4, v5);
    uint64_t v6 = *(void *)&v8[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_1A3CA2EB8((uint64_t)v8, (uint64_t *)&unk_1E95EE200);
    uint64_t v6 = *sub_1A3D09D04();
  }
  return *(double *)&v6;
}

uint64_t sub_1A3E2DBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

unint64_t sub_1A3E2DBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v16)(long long *__return_ptr, uint64_t, uint64_t);
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(long long *__return_ptr, uint64_t, uint64_t);
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _OWORD v28[2];
  long long v29;
  ValueMetadata *v30;

  unint64_t v6 = sub_1A3C9DA4C(MEMORY[0x1E4FBC860]);
  unint64_t v7 = sub_1A3D945AC(2);
  uint64_t v9 = v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  uint64_t v30 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1188);
  *(void *)&uint64_t v29 = v10;
  sub_1A3C856F4(&v29, v28);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v28, v7, v9, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = sub_1A3D945AC(1);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(a3 + 8);
  uint64_t v16 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 64);
  uint64_t v30 = &type metadata for ModelFileBackingStoreType;
  v16(&v29, a2, v15);
  sub_1A3C856F4(&v29, v28);
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v28, v12, v14, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v18 = sub_1A3D945AC(4);
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 56);
  uint64_t v30 = &type metadata for RequestDescriptor;
  v21(&v29, a2, v15);
  sub_1A3C856F4(&v29, v28);
  uint64_t v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v28, v18, v20, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v23 = sub_1A3D945AC(10);
  uint64_t v25 = v24;
  uint64_t v30 = (ValueMetadata *)type metadata accessor for Session();
  *(void *)&uint64_t v29 = a1;
  sub_1A3C856F4(&v29, v28);
  swift_retain();
  uint64_t v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A3C8D048(v28, v23, v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&uint64_t v29 = 0;
  *((void *)&v29 + 1) = 0xE000000000000000;
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  *(void *)&uint64_t v29 = 0xD000000000000044;
  *((void *)&v29 + 1) = 0x80000001A40BB120;
  swift_bridgeObjectRetain();
  sub_1A409603C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A3D5D2DC(2);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A3E2DED0()
{
  return sub_1A3E2DEEC() & 1;
}

uint64_t sub_1A3E2DEEC()
{
  return sub_1A40960FC() & 1;
}

uint64_t sub_1A3E2DF94@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  char v5 = a1 & 1;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A3C8C7D8(v5);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A3DAD7C8();
      uint64_t v10 = v20;
    }
    uint64_t v11 = *(void *)(v10 + 56);
    uint64_t v12 = sub_1A4095F8C();
    uint64_t v19 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 32))(a2, v11 + *(void *)(v19 + 72) * v6, v12);
    sub_1A3E2E130(v6, v10);
    *uint64_t v3 = v10;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v14 = a2;
    uint64_t v15 = 0;
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v17 = sub_1A4095F8C();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v16 = v17;
    uint64_t v14 = a2;
    uint64_t v15 = 1;
  }

  return v13(v14, v15, 1, v16);
}

unint64_t sub_1A3E2E130(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A40969EC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      sub_1A3C8D4B4();
      do
      {
        uint64_t result = sub_1A40960CC();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8 || v3 < (uint64_t)v9) {
            goto LABEL_6;
          }
        }
        else if (v9 < v8 && v3 < (uint64_t)v9)
        {
          goto LABEL_6;
        }
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (unsigned char *)(v12 + v3);
        uint64_t v14 = (unsigned char *)(v12 + v6);
        if (v3 != v6 || v13 >= v14 + 1) {
          *uint64_t v13 = *v14;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_1A4095F8C() - 8) + 72);
        int64_t v17 = v16 * v3;
        uint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A3E2E334(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v7 = a2 & 1;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1A3C8C7D8(a2 & 1);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A3DAD7C8();
      goto LABEL_7;
    }
    sub_1A3DAD3DC(v13, a3 & 1);
    unint64_t v24 = sub_1A3C8C7D8(v7);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1A4096EBC();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_1A4095F8C();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:

  return sub_1A3E2E49C(v10, v7, a1, v16);
}

uint64_t sub_1A3E2E49C(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2 & 1;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_1A4095F8C();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

__n128 HorizonObservation.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t HorizonObservation.angle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HorizonObservation() + 20);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for HorizonObservation()
{
  uint64_t result = qword_1E963F7F0;
  if (!qword_1E963F7F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HorizonObservation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HorizonObservation() + 24);
  uint64_t v4 = sub_1A4095C7C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

float HorizonObservation.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for HorizonObservation() + 28));
}

__n128 HorizonObservation.timeRange.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HorizonObservation() + 32);
  char v4 = *(unsigned char *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v4;
  return result;
}

uint64_t HorizonObservation.originatingRequestDescriptor.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for HorizonObservation();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

unint64_t HorizonObservation.description.getter()
{
  sub_1A4096A2C();
  swift_bridgeObjectRelease();
  uint64_t v0 = type metadata accessor for HorizonObservation();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  sub_1A3DF9FEC(&qword_1E95F1190);
  sub_1A4096E1C();
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  uint64_t v1 = sub_1A3E2FC4C(&qword_1E95F1198, (void (*)(uint64_t))type metadata accessor for HorizonObservation);
  sub_1A3D8AC8C(v0, (uint64_t)&off_1EF747170, v1);
  sub_1A409621C();
  swift_bridgeObjectRelease();
  sub_1A409621C();
  return 0xD00000000000001ALL;
}

void __swiftcall HorizonObservation.transform(for:)(CGAffineTransform *__return_ptr retstr, CGSize a2)
{
  double height = a2.height;
  double width = a2.width;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19.a = 1.0;
  v19.b = 0.0;
  v19.c = 0.0;
  v19.d = 1.0;
  v19.tdouble x = 0.0;
  v19.tdouble y = 0.0;
  CGAffineTransformTranslate(&v18, &v19, width * 0.5, height * 0.5);
  long long v16 = *(_OWORD *)&v18.c;
  long long v17 = *(_OWORD *)&v18.a;
  tdouble x = v18.tx;
  tdouble y = v18.ty;
  type metadata accessor for HorizonObservation();
  id v11 = objc_msgSend(self, sel_radians);
  sub_1A40959FC();

  sub_1A40959EC();
  CGFloat v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_OWORD *)&v19.a = v17;
  *(_OWORD *)&v19.c = v16;
  v19.tdouble x = tx;
  v19.tdouble y = ty;
  CGAffineTransformRotate(&v18, &v19, v13);
  CGAffineTransform v19 = v18;
  CGAffineTransformTranslate(&v18, &v19, -(width * 0.5), -(height * 0.5));
  long long v14 = *(_OWORD *)&v18.c;
  long long v15 = *(_OWORD *)&v18.tx;
  *(_OWORD *)&retstr->a = *(_OWORD *)&v18.a;
  *(_OWORD *)&retstr->c = v14;
  *(_OWORD *)&retstr->tdouble x = v15;
}

uint64_t HorizonObservation.hashValue.getter()
{
  return sub_1A4096F7C();
}

uint64_t sub_1A3E2EAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A3E2FC4C(&qword_1E95F1198, (void (*)(uint64_t))type metadata accessor for HorizonObservation);

  return VisionObservation.hash(into:)(a1, a2, v4);
}

uint64_t sub_1A3E2EB6C()
{
  uint64_t v1 = 0x656C676E61;
  if (*v0 != 1) {
    uint64_t v1 = 0x746176726573626FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F66736E617274;
  }
}

uint64_t sub_1A3E2EBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A3E30B74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A3E2EBF8(uint64_t a1)
{
  unint64_t v2 = sub_1A3E2FC94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A3E2EC34(uint64_t a1)
{
  unint64_t v2 = sub_1A3E2FC94();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HorizonObservation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBE98);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F11A8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A3E2FC94();
  sub_1A4096FEC();
  long long v12 = v3[1];
  long long v21 = *v3;
  long long v22 = v12;
  long long v23 = v3[2];
  char v24 = 0;
  type metadata accessor for CGAffineTransform(0);
  sub_1A3E2FC4C(&qword_1E95ED490, type metadata accessor for CGAffineTransform);
  sub_1A4096DBC();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v18 = v9;
  uint64_t v14 = v20;
  uint64_t v15 = type metadata accessor for HorizonObservation();
  LOBYTE(v21) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  sub_1A3DF9FEC(&qword_1E95F09D8);
  sub_1A4096DBC();
  LOBYTE(v21) = 2;
  sub_1A3C80D74();
  sub_1A4096D5C();
  uint64_t v16 = sub_1A3E2FC4C(&qword_1E95F1198, (void (*)(uint64_t))type metadata accessor for HorizonObservation);
  sub_1A3D2A9D0((uint64_t)v7, v15, (uint64_t)&off_1EF747170, v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v8);
}

uint64_t HorizonObservation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_1A4095C7C();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v32 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EBEC0);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F11B0);
  uint64_t v37 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = (int *)type metadata accessor for HorizonObservation();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1A3E2FC94();
  uint64_t v16 = v40;
  sub_1A4096FDC();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
  uint64_t v40 = v14;
  uint64_t v17 = v38;
  type metadata accessor for CGAffineTransform(0);
  char v45 = 0;
  sub_1A3E2FC4C(&qword_1E95ED4A0, type metadata accessor for CGAffineTransform);
  sub_1A4096CFC();
  long long v18 = v42;
  uint64_t v19 = (char *)v40;
  _OWORD *v40 = v41;
  *((_OWORD *)v19 + 1) = v18;
  *((_OWORD *)v19 + 2) = v43;
  LOBYTE(v41) = 1;
  sub_1A3DF9FEC(&qword_1E95F0A10);
  sub_1A4096CFC();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v19[v12[5]], v8, v6);
  LOBYTE(v41) = 2;
  sub_1A3C80D74();
  sub_1A4096C7C();
  uint64_t v29 = v11;
  uint64_t v28 = v9;
  LOBYTE(v41) = 0;
  sub_1A3E2FC4C((unint64_t *)&qword_1E95EBED8, MEMORY[0x1E4F27990]);
  uint64_t v20 = v32;
  uint64_t v21 = v35;
  sub_1A4096CFC();
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)v40 + v12[6], v20, v21);
  LOBYTE(v41) = 1;
  sub_1A4096CDC();
  uint64_t v22 = (uint64_t)v40;
  *(_DWORD *)((char *)v40 + v12[7]) = v23;
  char v45 = 3;
  sub_1A3C80E6C();
  sub_1A4096CAC();
  uint64_t v24 = v37;
  *(_WORD *)(v22 + v12[9]) = v41;
  char v25 = v36;
  sub_1A3D2B130((uint64_t)v44);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v33);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v28);
  sub_1A3C7D648((uint64_t)v44, v22 + v12[8]);
  sub_1A3E2FCE8(v22, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return sub_1A3E2FD4C(v22);
}

uint64_t sub_1A3E2F74C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HorizonObservation.init(from:)(a1, a2);
}

uint64_t sub_1A3E2F764(void *a1)
{
  return HorizonObservation.encode(to:)(a1);
}

uint64_t sub_1A3E2F77C@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  __int16 v7 = *a2;
  objc_msgSend(a1, sel_transform);
  objc_msgSend(a1, sel_angle);
  id v8 = objc_msgSend(self, sel_radians);
  uint64_t v9 = (int *)type metadata accessor for HorizonObservation();
  sub_1A3E2FDA8();
  sub_1A40959DC();
  id v10 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v12 = v11;

  *(_OWORD *)a4 = v14;
  *(_OWORD *)(a4 + 16) = v15;
  *(void *)(a4 + 32) = v16;
  *(void *)(a4 + 40) = v17;
  *(_DWORD *)(a4 + v9[7]) = v12;
  uint64_t result = sub_1A3C7D648(a3, a4 + v9[8]);
  *(_WORD *)(a4 + v9[9]) = v7;
  return result;
}

__n128 HorizonObservation.init(_:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  objc_msgSend(a1, sel_timeRange, static NormalizedRect.fullImage.getter(v15).n128_f64[0]);
  objc_msgSend(a1, sel_transform);
  objc_msgSend(a1, sel_angle);
  id v4 = objc_msgSend(self, sel_radians);
  uint64_t v5 = (int *)type metadata accessor for HorizonObservation();
  sub_1A3E2FDA8();
  sub_1A40959DC();
  id v6 = objc_msgSend(a1, sel_uuid);
  sub_1A4095C5C();

  objc_msgSend(a1, sel_confidence);
  int v8 = v7;

  *(_OWORD *)a2 = v11;
  *(__n128 *)(a2 + 16) = v12;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v14;
  *(_DWORD *)(a2 + v5[7]) = v8;
  uint64_t v9 = a2 + v5[8];
  __n128 result = v12;
  *(_OWORD *)uint64_t v9 = v11;
  *(__n128 *)(v9 + 16) = v12;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v14;
  *(unsigned char *)(v9 + 48) = 0;
  *(_WORD *)(a2 + v5[9]) = -8;
  return result;
}

uint64_t sub_1A3E2FA64@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  __int16 v5 = *a2;
  return sub_1A3E2F77C(a1, &v5, a3, a4);
}

uint64_t _s6Vision18HorizonObservationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1A409670C() & 1) == 0) {
    return 0;
  }
  id v4 = (int *)type metadata accessor for HorizonObservation();
  sub_1A3E2FDA8();
  if ((sub_1A40959CC() & 1) == 0 || (sub_1A4095C4C() & 1) == 0 || *(float *)(a1 + v4[7]) != *(float *)(a2 + v4[7])) {
    return 0;
  }
  uint64_t v5 = v4[8];
  char v6 = *(unsigned char *)(a1 + v5 + 48);
  uint64_t v7 = a2 + v5;
  if ((v6 & 1) == 0)
  {
    if ((*(unsigned char *)(v7 + 48) & 1) != 0 || (sub_1A409669C() & 1) == 0) {
      return 0;
    }
LABEL_10:
    uint64_t v8 = v4[9];
    unsigned int v9 = *(unsigned __int16 *)(a1 + v8);
    unsigned int v10 = *(unsigned __int16 *)(a2 + v8);
    if (v9 <= 0xFFF7)
    {
      if (v10 > 0xFFF7) {
        return 0;
      }
      sub_1A3C832B8();
      if ((sub_1A409612C() & 1) == 0) {
        return 0;
      }
    }
    else if (v10 <= 0xFFF7)
    {
      return 0;
    }
    return 1;
  }
  if (*(unsigned char *)(v7 + 48)) {
    goto LABEL_10;
  }
  return 0;
}

uint64_t sub_1A3E2FC4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A3E2FC94()
{
  unint64_t result = qword_1E963F460[0];
  if (!qword_1E963F460[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963F460);
  }
  return result;
}

uint64_t sub_1A3E2FCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HorizonObservation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A3E2FD4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HorizonObservation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A3E2FDA8()
{
  unint64_t result = qword_1E95F08F8;
  if (!qword_1E95F08F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E95F08F8);
  }
  return result;
}

uint64_t sub_1A3E2FDE8(void *a1)
{
  a1[1] = sub_1A3E2FC4C(&qword_1E95F11B8, (void (*)(uint64_t))type metadata accessor for HorizonObservation);
  a1[2] = sub_1A3E2FC4C(&qword_1E95F11C0, (void (*)(uint64_t))type metadata accessor for HorizonObservation);
  a1[3] = sub_1A3E2FC4C((unint64_t *)&unk_1E95F11C8, (void (*)(uint64_t))type metadata accessor for HorizonObservation);
  uint64_t result = sub_1A3E2FC4C(&qword_1E95F11A0, (void (*)(uint64_t))type metadata accessor for HorizonObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_1A3E2FEBC()
{
  return sub_1A3E2FC4C(&qword_1E95ED140, (void (*)(uint64_t))type metadata accessor for HorizonObservation);
}

uint64_t sub_1A3E2FF04(uint64_t a1)
{
  uint64_t result = sub_1A3E2FC4C(&qword_1E95F1198, (void (*)(uint64_t))type metadata accessor for HorizonObservation);
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for HorizonObservation(_OWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    a1[2] = *((_OWORD *)a2 + 2);
    uint64_t v8 = a3[5];
    unsigned int v9 = (char *)a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1A4095C7C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[8];
    *(_DWORD *)((char *)v4 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    long long v19 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v19;
    *((_OWORD *)v17 + 2) = *(_OWORD *)(v18 + 32);
    v17[48] = *(unsigned char *)(v18 + 48);
    *(_WORD *)((char *)v4 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  }
  return v4;
}

uint64_t destroy for HorizonObservation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1A4095C7C();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

_OWORD *initializeWithCopy for HorizonObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unsigned int v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[8];
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  v16[48] = v17[48];
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

void *assignWithCopy for HorizonObservation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[48];
  long long v19 = *((_OWORD *)v16 + 1);
  long long v18 = *((_OWORD *)v16 + 2);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v19;
  *((_OWORD *)v15 + 2) = v18;
  v15[48] = v17;
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for HorizonObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[8];
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  uint64_t v16 = (char *)a1 + v15;
  char v17 = (char *)a2 + v15;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  v16[48] = v17[48];
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *assignWithTake for HorizonObservation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1A4095C7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[8];
  *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  uint64_t v16 = (char *)a1 + v15;
  char v17 = (char *)a2 + v15;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  v16[48] = v17[48];
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for HorizonObservation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A3E30618);
}

uint64_t sub_1A3E30618(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
  }
  else
  {
    uint64_t v10 = sub_1A4095C7C();
    if (*(_DWORD *)(*(void *)(v10 - 8) + 84) != a2)
    {
      int v13 = (*(unsigned __int8 *)(a1 + a3[9]) >> 3) | (32 * *(unsigned __int8 *)(a1 + a3[9] + 1));
      unsigned int v14 = v13 ^ 0x1FFE;
      unsigned int v15 = v13 ^ 0x1FFF;
      if (v14 >> 1 >= 0xFED) {
        return 0;
      }
      else {
        return v15;
      }
    }
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);

  return v11(a1 + v9, a2, v7);
}

uint64_t storeEnumTagSinglePayload for HorizonObservation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A3E30754);
}

uint64_t sub_1A3E30754(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ED090);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_1A4095C7C();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(_WORD *)(a1 + a4[9]) = __PAIR16__((8 * ~a2) >> 24, 8 * ~(_BYTE)a2);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_1A3E30874()
{
  sub_1A3DFC7A8();
  if (v0 <= 0x3F)
  {
    sub_1A4095C7C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for HorizonObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3E30A34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizonObservation.CodingKeys()
{
  return &type metadata for HorizonObservation.CodingKeys;
}

unint64_t sub_1A3E30A70()
{
  unint64_t result = qword_1E963F900[0];
  if (!qword_1E963F900[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963F900);
  }
  return result;
}

unint64_t sub_1A3E30AC8()
{
  unint64_t result = qword_1E963FA10;
  if (!qword_1E963FA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E963FA10);
  }
  return result;
}

unint64_t sub_1A3E30B20()
{
  unint64_t result = qword_1E963FA18[0];
  if (!qword_1E963FA18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E963FA18);
  }
  return result;
}

uint64_t sub_1A3E30B74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F66736E617274 && a2 == 0xE90000000000006DLL;
  if (v2 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000 || (sub_1A4096E5C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746176726573626FLL && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A4096E5C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A3E30CE8()
{
  *(void *)(v1 + 56) = v0;
  return MEMORY[0x1F4188298](sub_1A3E30D08, 0, 0);
}

uint64_t sub_1A3E30D08()
{
  uint64_t v1 = *(void *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC068);
  uint64_t v2 = *(void *)(type metadata accessor for VisionResult(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A40E7700;
  sub_1A3C85678(v1 + 24, v0 + 16);
  uint64_t v5 = *(void **)(v1 + 16);
  id v6 = v5;
  sub_1A3CC5D9C(v0 + 16, 0, v5, v4 + v3);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v4);
}

uint64_t sub_1A3E30E28(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  sub_1A3C856DC(a2, v4 + 24);
  return v4;
}

uint64_t sub_1A3E30E7C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t sub_1A3E30EBC(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A3C9FEEC;
  return v6(a1);
}

uint64_t type metadata accessor for ErrorReportingOperation()
{
  return self;
}

void *sub_1A3E30FE4(uint64_t a1)
{
  unint64_t result = (void *)swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  result[3] = MEMORY[0x1E4FBC860];
  result[4] = v3;
  result[2] = a1;
  return result;
}

uint64_t sub_1A3E31024(void *a1)
{
  sub_1A3E32E28(a1);
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v1, ObjectType, v4);
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v7 = swift_unknownObjectRetain();
  sub_1A3E333D0(v7, v1, v8, v6);
  return swift_unknownObjectRelease_n();
}

uint64_t sub_1A3E31208(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A3E32E28(a2);
  uint64_t v8 = v7;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v8 + 48))(a2, v2, ObjectType, v8);
  (*(void (**)(uint64_t))(*(void *)v2 + 112))(a1);
  uint64_t v10 = *(void *)(v8 + 8);
  swift_unknownObjectRetain();
  sub_1A3E334AC(a1, v6, v3, v11, v10);
  return swift_unknownObjectRelease_n();
}

uint64_t sub_1A3E31434@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F11E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95ECF50);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  int v13 = &v16[-v12];
  uint64_t v14 = *(void *)(v1 + 16);
  uint64_t v17 = *(void *)(v1 + 32);
  uint64_t v18 = v14;
  uint64_t v19 = v1;
  type metadata accessor for VisionResult(0);
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBD028], v3);
  swift_bridgeObjectRetain();
  sub_1A40964FC();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v10, v13, v7);
  sub_1A3CCB9D8((uint64_t)v10, a1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_1A3E31654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F11E8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF780);
  MEMORY[0x1F4188790](v11 - 8);
  int v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A409649C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = 0;
  *((void *)v16 + 3) = 0;
  *((void *)v16 + 4) = a2;
  *((void *)v16 + 5) = a3;
  *((void *)v16 + 6) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1A3E32C84((uint64_t)v13, (uint64_t)&unk_1E95F11F8, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1A3E31850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[4] = a6;
  void v7[5] = a7;
  _OWORD v7[2] = a4;
  _OWORD v7[3] = a5;
  return MEMORY[0x1F4188298](sub_1A3E31874, 0, 0);
}

uint64_t sub_1A3E31874()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1208);
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  long long v2 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A3E31968;
  return MEMORY[0x1F4187F28]();
}

uint64_t sub_1A3E31968()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3E31A80, 0, 0);
}

uint64_t sub_1A3E31A80()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F11E8);
  sub_1A40964BC();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3E31AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[45] = a5;
  v6[46] = a6;
  v6[43] = a3;
  v6[44] = a4;
  v6[42] = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1220);
  v6[47] = v7;
  v6[48] = *(void *)(v7 - 8);
  v6[49] = swift_task_alloc();
  v6[50] = *(void *)(type metadata accessor for VisionResult(0) - 8);
  v6[51] = swift_task_alloc();
  v6[52] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF780);
  v6[53] = swift_task_alloc();
  v6[54] = swift_task_alloc();
  v6[55] = swift_task_alloc();
  v6[56] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1228);
  v6[57] = v8;
  v6[58] = *(void *)(v8 - 8);
  v6[59] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A3E31CD8, 0, 0);
}

uint64_t sub_1A3E31CD8()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (long long *)(v1 + 32);
    uint64_t v4 = sub_1A409649C();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v24 = *(void (**)(void, uint64_t, uint64_t, uint64_t))(v5 + 56);
    int v23 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v21 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    uint64_t v22 = v4;
    while (1)
    {
      uint64_t v6 = *(void *)(v0 + 352);
      long long v25 = *v3;
      v24(*(void *)(v0 + 448), 1, 1, v4);
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = 0;
      uint64_t v8 = (void *)(v7 + 16);
      *(void *)(v7 + 24) = 0;
      *(_OWORD *)(v7 + 32) = v25;
      *(void *)(v7 + 48) = v6;
      swift_unknownObjectRetain_n();
      swift_retain();
      if (swift_taskGroup_addPending()) {
        break;
      }
      swift_unknownObjectRelease();
LABEL_4:
      swift_release();
      sub_1A3E339AC(*(void *)(v0 + 448));
      ++v3;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    uint64_t v9 = *(void *)(v0 + 440);
    sub_1A3CE3338(*(void *)(v0 + 448), v9);
    int v10 = (*v23)(v9, 1, v4);
    uint64_t v11 = *(void *)(v0 + 440);
    if (v10 == 1)
    {
      sub_1A3E339AC(*(void *)(v0 + 440));
      if (*v8)
      {
LABEL_8:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v12 = sub_1A409643C();
        uint64_t v14 = v13;
        swift_unknownObjectRelease();
LABEL_11:
        uint64_t v15 = **(void **)(v0 + 336);
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = &unk_1E95F1238;
        *(void *)(v16 + 24) = v7;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1208);
        uint64_t v17 = v14 | v12;
        if (v14 | v12)
        {
          uint64_t v17 = v0 + 168;
          *(void *)(v0 + 168) = 0;
          *(void *)(v0 + 176) = 0;
          *(void *)(v0 + 184) = v12;
          *(void *)(v0 + 192) = v14;
        }
        uint64_t v4 = v22;
        *(void *)(v0 + 232) = 1;
        *(void *)(v0 + 240) = v17;
        *(void *)(v0 + 248) = v15;
        swift_task_create();
        swift_unknownObjectRelease();
        goto LABEL_4;
      }
    }
    else
    {
      sub_1A409648C();
      (*v21)(v11, v4);
      if (*v8) {
        goto LABEL_8;
      }
    }
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    goto LABEL_11;
  }
LABEL_15:
  *(void *)(v0 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1208);
  sub_1A409644C();
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 488) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1A3E32054;
  uint64_t v19 = *(void *)(v0 + 456);
  return MEMORY[0x1F4187C58](v0 + 328, 0, 0, v19);
}

uint64_t sub_1A3E32054()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3E32150, 0, 0);
}

uint64_t sub_1A3E32150()
{
  uint64_t v1 = v0[41];
  if (v1)
  {
    uint64_t v48 = *(void *)(v1 + 16);
    if (v48)
    {
      uint64_t v49 = v0 + 16;
      unint64_t v50 = v0 + 2;
      long long v43 = v0 + 25;
      uint64_t v44 = (uint64_t)(v0 + 9);
      uint64_t v2 = *(unsigned __int8 *)(v0[50] + 80);
      uint64_t v47 = v1 + ((v2 + 32) & ~v2);
      uint64_t v3 = swift_beginAccess();
      unint64_t v7 = 0;
      uint64_t v46 = v1;
      long long v51 = v0;
      while (v7 < *(void *)(v1 + 16))
      {
        uint64_t v11 = v0[45];
        sub_1A3C8B4E0(v47 + *(void *)(v0[50] + 72) * v7, v0[52]);
        uint64_t v52 = *(void *)(*(void *)(v11 + 24) + 16);
        if (v52)
        {
          uint64_t v12 = swift_bridgeObjectRetain();
          uint64_t v13 = 0;
          unint64_t v14 = 0;
          while (1)
          {
            uint64_t v15 = v12;
            sub_1A3E33C70(v12 + v13 + 32, (uint64_t)v50);
            uint64_t v16 = v0[5];
            uint64_t v17 = v0[6];
            __swift_project_boxed_opaque_existential_1(v50, v16);
            sub_1A3CC8CB8(v49);
            char v18 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v17 + 88))(v49, v16, v17);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
            sub_1A3E33C80((uint64_t)v50);
            if (v18) {
              break;
            }
            ++v14;
            v13 += 56;
            uint64_t v0 = v51;
            uint64_t v12 = v15;
            if (v52 == v14)
            {
              swift_bridgeObjectRelease();
              uint64_t v1 = v46;
              goto LABEL_4;
            }
          }
          uint64_t v19 = v51[45];
          uint64_t v3 = swift_bridgeObjectRelease();
          uint64_t v20 = *(void *)(v19 + 24);
          if (v14 >= *(void *)(v20 + 16)) {
            goto LABEL_32;
          }
          uint64_t v21 = v51[54];
          uint64_t v22 = v51[52];
          uint64_t v45 = v51[44];
          uint64_t v23 = v20 + v13;
          uint64_t v25 = *(void *)(v23 + 72);
          uint64_t v24 = *(void *)(v23 + 80);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24);
          swift_unknownObjectRetain();
          v27(v22, ObjectType, v24);
          swift_beginAccess();
          sub_1A3E329A4(v14, v44);
          sub_1A3E33C80(v44);
          swift_endAccess();
          uint64_t v28 = sub_1A409649C();
          uint64_t v29 = *(void *)(v28 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v21, 1, 1, v28);
          uint64_t v30 = (void *)swift_allocObject();
          _OWORD v30[2] = 0;
          v30[3] = 0;
          v30[4] = v25;
          v30[5] = v24;
          v30[6] = v45;
          swift_retain();
          swift_unknownObjectRetain();
          if (swift_taskGroup_addPending())
          {
            uint64_t v31 = v51[53];
            sub_1A3CE3338(v51[54], v31);
            int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v28);
            uint64_t v33 = v51[53];
            if (v32 == 1)
            {
              sub_1A3E339AC(v51[53]);
            }
            else
            {
              sub_1A409648C();
              (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v28);
            }
            if (v30[2])
            {
              swift_getObjectType();
              swift_unknownObjectRetain();
              uint64_t v34 = sub_1A409643C();
              uint64_t v36 = v35;
              swift_unknownObjectRelease();
            }
            else
            {
              uint64_t v34 = 0;
              uint64_t v36 = 0;
            }
            uint64_t v1 = v46;
            uint64_t v0 = v51;
            uint64_t v37 = *(void *)v51[42];
            uint64_t v38 = swift_allocObject();
            *(void *)(v38 + 16) = &unk_1E95F1248;
            *(void *)(v38 + 24) = v30;
            uint64_t v39 = (void *)(v36 | v34);
            if (v36 | v34)
            {
              uint64_t v39 = v43;
              *long long v43 = 0;
              v43[1] = 0;
              v51[27] = v34;
              v51[28] = v36;
            }
            v51[35] = 1;
            v51[36] = v39;
            v51[37] = v37;
            swift_task_create();
            swift_unknownObjectRelease();
            swift_release();
          }
          else
          {
            swift_unknownObjectRelease();
            swift_release();
            uint64_t v1 = v46;
            uint64_t v0 = v51;
          }
          sub_1A3E339AC(v0[54]);
        }
        else
        {
LABEL_4:
          uint64_t v9 = v0[48];
          uint64_t v8 = v0[49];
          uint64_t v10 = v0[47];
          sub_1A3C8B4E0(v0[52], v0[51]);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F11E8);
          sub_1A40964AC();
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
        }
        ++v7;
        uint64_t v3 = sub_1A3C8B544(v0[52]);
        if (v7 == v48) {
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_32:
      __break(1u);
    }
    else
    {
LABEL_25:
      swift_bridgeObjectRelease();
      uint64_t v40 = (void *)swift_task_alloc();
      v0[61] = v40;
      void *v40 = v0;
      v40[1] = sub_1A3E32054;
      uint64_t v6 = v0[57];
      uint64_t v3 = (uint64_t)(v0 + 41);
      uint64_t v4 = 0;
      uint64_t v5 = 0;
    }
    return MEMORY[0x1F4187C58](v3, v4, v5, v6);
  }
  else
  {
    (*(void (**)(void, void))(v0[58] + 8))(v0[59], v0[57]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v41 = (uint64_t (*)(void))v0[1];
    return v41();
  }
}

uint64_t sub_1A3E3278C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_1A3E328A4;
  return v12(a6, ObjectType, a5);
}

uint64_t sub_1A3E328A4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3E34138, 0, 0);
}

uint64_t sub_1A3E329A4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A3E33178(v5);
    uint64_t v5 = result;
  }
  unint64_t v7 = *(void *)(v5 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v5 + 56 * a1;
    long long v10 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)a2 = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(a2 + 16) = v10;
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v9 + 64);
    *(void *)(a2 + 48) = *(void *)(v9 + 80);
    uint64_t result = (uint64_t)memmove((void *)(v9 + 32), (const void *)(v9 + 88), 56 * (v8 - a1));
    *(void *)(v5 + 16) = v8;
    uint64_t *v2 = v5;
  }
  return result;
}

uint64_t sub_1A3E32A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v10;
  *long long v10 = v6;
  v10[1] = sub_1A3E32B64;
  return v12(a6, ObjectType, a5);
}

uint64_t sub_1A3E32B64(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3E32C64, 0, 0);
}

uint64_t sub_1A3E32C64()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A3E32C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A409649C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A409648C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A3E339AC(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A409643C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1A3E32E28(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v5, v6);
  uint64_t v9 = v8;
  unsigned __int8 v11 = v10;
  uint64_t v35 = sub_1A3CE0A00(v7, v8, v10);
  uint64_t v13 = v12;
  sub_1A3CE124C(v7, v9, v11);
  uint64_t v14 = *(void *)(v4 + 32);
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v31 = v4;
    uint64_t v32 = v2;
    swift_bridgeObjectRetain();
    uint64_t v16 = 32;
    uint64_t v17 = (uint64_t)a1;
    do
    {
      uint64_t v18 = *(void *)(v14 + v16);
      swift_getObjectType();
      uint64_t v19 = swift_conformsToProtocol2();
      if (v19) {
        uint64_t v20 = v18;
      }
      else {
        uint64_t v20 = 0;
      }
      if (v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = 0;
      }
      if (v20)
      {
        uint64_t ObjectType = swift_getObjectType();
        sub_1A3C85678(v17, (uint64_t)v34);
        if (ObjectType == v35)
        {
          uint64_t v23 = swift_getObjectType();
          uint64_t v24 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 40);
          swift_unknownObjectRetain_n();
          char v25 = v24(v34, v23, v21);
          uint64_t v17 = (uint64_t)a1;
          char v26 = v25;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
          swift_unknownObjectRelease();
          if (v26)
          {
            swift_bridgeObjectRelease();
            return v20;
          }
        }
        else
        {
          swift_unknownObjectRetain_n();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
      v16 += 16;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    uint64_t v4 = v31;
    uint64_t v3 = v32;
  }
  sub_1A3C85678((uint64_t)a1, (uint64_t)v34);
  uint64_t v27 = *(void *)(*(void *)(v4 + 16) + 80);
  uint64_t v28 = *(uint64_t (**)(unsigned char *, uint64_t))(v13 + 72);
  swift_retain();
  uint64_t v20 = v35;
  uint64_t v29 = v28(v34, v27);
  if (!v3) {
    return v29;
  }
  return v20;
}

uint64_t sub_1A3E33054(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a2, v5);
  void v10[3] = v5;
  _OWORD v10[4] = *(void *)(v6 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v7, v5);
  LOBYTE(v7) = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 88))(v10, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v7 & 1;
}

uint64_t sub_1A3E33124()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1A3E3316C()
{
  return MEMORY[0x1E4FBC860];
}

char *sub_1A3E33178(uint64_t a1)
{
  return sub_1A3E332B0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1A3E3318C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1270);
    char v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    uint64_t v10[2] = v8;
    void v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    char v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E95F1278);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A3E332B0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F1268);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    char v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A3E333D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = result;
  int64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = v7[2];
  if (v8)
  {
    uint64_t v9 = v7 + 4;
    while (*v9 != result)
    {
      v9 += 2;
      if (!--v8) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    swift_unknownObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a2 + 32) = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A3E3318C(0, v7[2] + 1, 1, v7);
      int64_t v7 = (void *)result;
      *(void *)(a2 + 32) = result;
    }
    unint64_t v11 = v7[2];
    unint64_t v10 = v7[3];
    if (v11 >= v10 >> 1)
    {
      uint64_t result = (uint64_t)sub_1A3E3318C((void *)(v10 > 1), v11 + 1, 1, v7);
      int64_t v7 = (void *)result;
      *(void *)(a2 + 32) = result;
    }
    _OWORD v7[2] = v11 + 1;
    uint64_t v12 = &v7[2 * v11];
    void v12[4] = v6;
    v12[5] = a4;
  }
  return result;
}

uint64_t sub_1A3E334AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A3C85678(a1, (uint64_t)v20);
  uint64_t v21 = a2;
  uint64_t v22 = a5;
  sub_1A3E33C70((uint64_t)v20, (uint64_t)v18);
  uint64_t v8 = (char **)(a3 + 24);
  swift_beginAccess();
  uint64_t v9 = *(char **)(a3 + 24);
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a3 + 24) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = sub_1A3E332B0(0, *((void *)v9 + 2) + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  unint64_t v12 = *((void *)v9 + 2);
  unint64_t v11 = *((void *)v9 + 3);
  if (v12 >= v11 >> 1)
  {
    uint64_t v9 = sub_1A3E332B0((char *)(v11 > 1), v12 + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  *((void *)v9 + 2) = v12 + 1;
  uint64_t v13 = &v9[56 * v12];
  long long v14 = v18[0];
  long long v15 = v18[1];
  long long v16 = v18[2];
  *((void *)v13 + 10) = v19;
  *((_OWORD *)v13 + 3) = v15;
  *((_OWORD *)v13 + 4) = v16;
  *((_OWORD *)v13 + 2) = v14;
  return sub_1A3E33C80((uint64_t)v20);
}

uint64_t sub_1A3E335B4(uint64_t a1)
{
  return sub_1A3E31654(a1, v1[2], v1[3], v1[4]);
}

uint64_t type metadata accessor for ExecutionPlan()
{
  return self;
}

uint64_t destroy for ExecutionPlan.Dependency(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ExecutionPlan.Dependency(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ExecutionPlan.Dependency(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = v4;
  return a1;
}

uint64_t assignWithTake for ExecutionPlan.Dependency(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecutionPlan.Dependency(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExecutionPlan.Dependency(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExecutionPlan.Dependency()
{
  return &type metadata for ExecutionPlan.Dependency;
}

uint64_t sub_1A3E337C8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F11E8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A3E338B0()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E95F11E8) - 8);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_1A3C8A9A4;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 16) = v6;
  return MEMORY[0x1F4188298](sub_1A3E31874, 0, 0);
}

uint64_t sub_1A3E339AC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EF780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3E33A0C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3E33A44(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A3C8D594;
  long long v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E95EDBF0 + dword_1E95EDBF0);
  return v6(a1, v4);
}

uint64_t sub_1A3E33AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1A3C8D594;
  return sub_1A3E31AEC((uint64_t)v9, a2, v5, v6, v8, v7);
}

uint64_t sub_1A3E33BBC(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1A3C8D594;
  return sub_1A3E3278C(a1, v7, v8, v4, v5, v6);
}

uint64_t sub_1A3E33C70(uint64_t a1, uint64_t a2)
{
  return initializeWithCopy for ExecutionPlan.Dependency(a2, a1);
}

uint64_t sub_1A3E33C80(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_20Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A3E33CFC(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1A3C8D594;
  return sub_1A3E32A4C(a1, v7, v8, v4, v5, v6);
}

uint64_t sub_1A3E33DB0(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1A3E33E90;
  return v5(v2 + 16);
}

uint64_t sub_1A3E33E90()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  void *v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1A3E33FC0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A3C8D594;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E95F1250 + dword_1E95F1250);
  return v6(a1, v4);
}

uint64_t sub_1A3E34078(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A3C8A9A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E95F1250 + dword_1E95F1250);
  return v6(a1, v4);
}

uint64_t sub_1A3E341F4()
{
  uint64_t v1 = *(void *)v0;
  sub_1A3E34234(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return v1;
}

uint64_t sub_1A3E34234(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A3E3424C()
{
  return sub_1A4095ABC();
}

uint64_t sub_1A3E34264()
{
  return sub_1A4095ACC();
}

uint64_t sub_1A3E3427C()
{
  return sub_1A4095AAC();
}

uint64_t sub_1A3E34294()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E95F1288 + dword_1E95F1288);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A3C8A9A4;
  return v3();
}

uint64_t sub_1A3E3449C(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1E95F1288 + dword_1E95F1288);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_1A3E34544;
  return v4();
}

uint64_t sub_1A3E34544()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v2)
  {
    uint64_t v7 = (void *)sub_1A4095ADC();

    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
  }
  _Block_release(*(const void **)(v4 + 16));
  uint64_t v8 = *(uint64_t (**)(void))(v5 + 8);
  return v8();
}

id sub_1A3E346A8()
{
  return sub_1A3E35A58();
}

id sub_1A3E34744()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id sub_1A3E34778()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModelCatalogWrapper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1A3E347EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModelCatalogWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A3E34820(uint64_t a1)
{
  if (MEMORY[0x1E4F78D78]) {
    BOOL v3 = MEMORY[0x1E4F78D80] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3 || MEMORY[0x1E4F78D60] == 0 || MEMORY[0x1E4F78D70] == 0 || MEMORY[0x1E4F78D68] == 0) {
    return 0;
  }
  void v15[6] = v1;
  v15[7] = v2;
  uint64_t v8 = sub_1A4095E6C();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, v8, v10);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if (MEMORY[0x1E4F78D50] && v13 == *MEMORY[0x1E4F78D50]) {
    return 0x6E776F6420746F6ELL;
  }
  if (MEMORY[0x1E4F78D48] && v13 == *MEMORY[0x1E4F78D48]) {
    return 0xD000000000000011;
  }
  if (MEMORY[0x1E4F78D58] && v13 == *MEMORY[0x1E4F78D58]) {
    return 0xD000000000000016;
  }
  if (MEMORY[0x1E4F78D40] && v13 == *MEMORY[0x1E4F78D40]) {
    return 0xD000000000000017;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return 0x206E776F6E6B6E75;
}

uint64_t sub_1A3E34A68(uint64_t result)
{
  if (MEMORY[0x1E4F78D28]) {
    BOOL v1 = MEMORY[0x1E4F78D38] == 0;
  }
  else {
    BOOL v1 = 1;
  }
  if (!v1 && MEMORY[0x1E4F78D30] != 0)
  {
    BOOL v3 = (void *)result;
    uint64_t v37 = sub_1A4095E1C();
    v34[1] = v34;
    uint64_t v36 = *(void *)(v37 - 8);
    uint64_t v4 = *(void *)(v36 + 64);
    MEMORY[0x1F4188790](v37);
    unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v6 = (char *)v34 - v5;
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    uint64_t v7 = sub_1A4095DEC();
    uint64_t v35 = v34;
    uint64_t v8 = *(void *)(v7 - 8);
    MEMORY[0x1F4188790](v7);
    __n128 v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v11 = v36;
    sub_1A4095E0C();
    sub_1A4095DDC();
    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v13 = v37;
    __n128 v14 = MEMORY[0x1F4188790](v12);
    long long v15 = (char *)v34 - v5;
    (*(void (**)(char *, char *, uint64_t, __n128))(v11 + 16))((char *)v34 - v5, (char *)v34 - v5, v13, v14);
    int v16 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))((char *)v34 - v5, v13);
    if (MEMORY[0x1E4F78D08] && v16 == *MEMORY[0x1E4F78D08])
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))((char *)v34 - v5, v13);
      uint64_t v17 = sub_1A4095E6C();
      uint64_t v35 = v34;
      uint64_t v18 = v17;
      v34[0] = v34;
      uint64_t v19 = *(void *)(v17 - 8);
      __n128 v20 = MEMORY[0x1F4188790](v17);
      uint64_t v22 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t, __n128))(v19 + 32))(v22, v15, v18, v20);
      uint64_t v23 = sub_1A3E34820((uint64_t)v22);
      uint64_t v25 = v24;
      sub_1A3E35ECC();
      swift_allocError();
      *(void *)uint64_t v26 = v23;
      *(void *)(v26 + 8) = v25;
      *(unsigned char *)(v26 + 16) = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, v13);
    }
    if (MEMORY[0x1E4F78D10] && v16 == *MEMORY[0x1E4F78D10])
    {
      sub_1A3E35ECC();
      swift_allocError();
      *(void *)uint64_t v27 = 0xD000000000000030;
      *(void *)(v27 + 8) = 0x80000001A40BB3C0;
      char v28 = 3;
LABEL_28:
      *(unsigned char *)(v27 + 16) = v28;
      goto LABEL_29;
    }
    if (MEMORY[0x1E4F78D18] && v16 == *MEMORY[0x1E4F78D18])
    {
      sub_1A3E35ECC();
      swift_allocError();
      *(void *)uint64_t v29 = 0xD00000000000002ELL;
      *(void *)(v29 + 8) = 0x80000001A40BB390;
LABEL_20:
      *(unsigned char *)(v29 + 16) = 0;
LABEL_29:
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))((char *)v34 - v5, v13);
    }
    if (MEMORY[0x1E4F78D20] && v16 == *MEMORY[0x1E4F78D20])
    {
      sub_1A3E35ECC();
      swift_allocError();
      *(void *)uint64_t v29 = 0xD000000000000013;
      *(void *)(v29 + 8) = 0x80000001A40BB370;
      goto LABEL_20;
    }
    if (MEMORY[0x1E4F78D00] && v16 == *MEMORY[0x1E4F78D00])
    {
      sub_1A3E35ECC();
      swift_allocError();
      unint64_t v30 = 0xD00000000000002ELL;
      uint64_t v31 = "non network error occured when fetching model ";
LABEL_27:
      *(void *)uint64_t v27 = v30;
      *(void *)(v27 + 8) = (unint64_t)(v31 - 32) | 0x8000000000000000;
      char v28 = 1;
      goto LABEL_28;
    }
    if (MEMORY[0x1E4F78CF8] && v16 == *MEMORY[0x1E4F78CF8])
    {
      sub_1A3E35ECC();
      swift_allocError();
      unint64_t v30 = 0xD000000000000021;
      uint64_t v31 = "network error when fetching model";
      goto LABEL_27;
    }
    sub_1A3E35ECC();
    swift_allocError();
    *(void *)uint64_t v32 = 0xD00000000000001BLL;
    *(void *)(v32 + 8) = 0x80000001A40BB2F0;
    *(unsigned char *)(v32 + 16) = 3;
    swift_willThrow();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
    v33((char *)v34 - v5, v13);
    return ((uint64_t (*)(char *, uint64_t))v33)((char *)v34 - v5, v13);
  }
  return result;
}

uint64_t sub_1A3E35064()
{
  return MEMORY[0x1F4188298](sub_1A3E35080, 0, 0);
}

uint64_t sub_1A3E35080()
{
  if (MEMORY[0x1E4F78C78])
  {
    sub_1A4095D9C();
    uint64_t v1 = sub_1A4095DAC();
    v0[7] = v1;
    uint64_t v2 = *(void *)(v1 - 8);
    v0[8] = v2;
    uint64_t v3 = swift_task_alloc();
    v0[9] = v3;
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    sub_1A4095DCC();
    sub_1A4095D8C();
    swift_bridgeObjectRelease();
    uint64_t v4 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 16))(v4, v3, v1);
    int v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v4, v1);
    if (MEMORY[0x1E4F78CB8] && v5 == *MEMORY[0x1E4F78CB8])
    {
      (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v4, v1);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F12C8);
      v0[10] = v6;
      v0[11] = *(void *)(v6 - 8);
      v0[12] = swift_task_alloc();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F12D0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1A40E7700;
      uint64_t v8 = v0[5];
      uint64_t v9 = v0[6];
      __n128 v10 = __swift_project_boxed_opaque_existential_1(v0 + 2, v8);
      *(void *)(v7 + 56) = v8;
      *(void *)(v7 + 64) = *(void *)(v9 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v7 + 32));
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
      sub_1A4095D7C();
      swift_bridgeObjectRelease();
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F12D8);
      v0[13] = v24;
      v0[14] = *(void *)(v24 - 8);
      v0[15] = swift_task_alloc();
      sub_1A40964CC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F12E0);
      v0[16] = swift_task_alloc();
      uint64_t v25 = (void *)swift_task_alloc();
      v0[17] = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_1A3E356A8;
      uint64_t v26 = v0[16];
      uint64_t v27 = v0[13];
      return MEMORY[0x1F4187D58](v26, 0, 0, v27);
    }
    if (MEMORY[0x1E4F78CA8] && v5 == *MEMORY[0x1E4F78CA8] || MEMORY[0x1E4F78CA0] && v5 == *MEMORY[0x1E4F78CA0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v4, v1);
      uint64_t v13 = *v4;
      uint64_t v14 = v4[1];
      sub_1A3E35ECC();
      long long v15 = (void *)swift_allocError();
      *(void *)uint64_t v16 = v13;
      *(void *)(v16 + 8) = v14;
      *(unsigned char *)(v16 + 16) = 0;
    }
    else
    {
      if (!MEMORY[0x1E4F78CB0] || v5 != *MEMORY[0x1E4F78CB0])
      {
        sub_1A3E35ECC();
        long long v15 = (void *)swift_allocError();
        *(void *)uint64_t v20 = 0xD000000000000034;
        *(void *)(v20 + 8) = 0x80000001A40BB270;
        *(unsigned char *)(v20 + 16) = 0;
        swift_willThrow();
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
        v21(v3, v1);
        v21((uint64_t)v4, v1);
        goto LABEL_16;
      }
      (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v4, v1);
      uint64_t v17 = *v4;
      uint64_t v18 = v4[1];
      sub_1A3E35ECC();
      long long v15 = (void *)swift_allocError();
      *(void *)uint64_t v19 = v17;
      *(void *)(v19 + 8) = v18;
      *(unsigned char *)(v19 + 16) = 3;
    }
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1A3E34A68((uint64_t)(v0 + 2));

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    goto LABEL_17;
  }
  sub_1A3E35ECC();
  swift_allocError();
  *(void *)uint64_t v12 = 0xD000000000000035;
  *(void *)(v12 + 8) = 0x80000001A40BB460;
  *(unsigned char *)(v12 + 16) = 0;
  swift_willThrow();
LABEL_17:
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1A3E356A8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A3E357A4, 0, 0);
}

uint64_t sub_1A3E357A4()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = sub_1A4095E5C();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[12];
    uint64_t v5 = v0[10];
    uint64_t v6 = v0[11];
    uint64_t v8 = v0[8];
    uint64_t v7 = v0[9];
    uint64_t v9 = v0[7];
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    __n128 v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v12 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v12, v1, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E95EC098);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1A40E7700;
    sub_1A4095E4C();
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v13 + 32) = v14;
    sub_1A4096F1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
    swift_task_dealloc();
    long long v15 = (void *)swift_task_alloc();
    v0[17] = v15;
    *long long v15 = v0;
    v15[1] = sub_1A3E356A8;
    uint64_t v16 = v0[16];
    uint64_t v17 = v0[13];
    return MEMORY[0x1F4187D58](v16, 0, 0, v17);
  }
}

id sub_1A3E35A58()
{
  if (MEMORY[0x1E4F78C78])
  {
    sub_1A4095D9C();
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E95F12C0);
    uint64_t v3 = *(void *)(v2 - 8);
    MEMORY[0x1F4188790](v2);
    uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    __swift_project_boxed_opaque_existential_1(v26, v27);
    sub_1A4095DFC();
    if (v1)
    {
      sub_1A3E34A68((uint64_t)v26);

LABEL_7:
      unint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      sub_1A4096A2C();
      swift_bridgeObjectRelease();
      unint64_t v24 = 0xD000000000000019;
      unint64_t v25 = 0x80000001A40BB2B0;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      sub_1A4095DCC();
      sub_1A409621C();
      swift_bridgeObjectRelease();
      sub_1A409621C();
      id v0 = (id)v24;
      unint64_t v17 = v25;
      sub_1A3E35ECC();
      swift_allocError();
      *(void *)uint64_t v18 = v0;
      *(void *)(v18 + 8) = v17;
      *(unsigned char *)(v18 + 16) = 0;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      return v0;
    }
    uint64_t v23 = sub_1A4095B9C();
    uint64_t v28 = v20;
    uint64_t v21 = *(void *)(v23 - 8);
    MEMORY[0x1F4188790](v23);
    uint64_t v22 = v20;
    uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v9 = v3;
    uint64_t v10 = sub_1A4095E3C();
    v20[1] = v20;
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x1F4188790](v10);
    uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v14 = sub_1A4095DBC();
    MEMORY[0x1A6253AC0](v14);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1A4095B1C();
    id v15 = objc_allocWithZone(MEMORY[0x1E4F1CB10]);
    uint64_t v16 = (void *)sub_1A409614C();
    swift_bridgeObjectRelease();
    id v0 = objc_msgSend(v15, sel_initWithString_, v16);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v23);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v2);
    if (!v0) {
      goto LABEL_7;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    sub_1A3E35ECC();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000034;
    *(void *)(v6 + 8) = 0x80000001A40BB270;
    *(unsigned char *)(v6 + 16) = 0;
    swift_willThrow();
  }
  return v0;
}

uint64_t type metadata accessor for ModelCatalogWrapper()
{
  return self;
}

unint64_t sub_1A3E35ECC()
{
  unint64_t result = qword_1E95F1290;
  if (!qword_1E95F1290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E95F1290);
  }
  return result;
}

uint64_t sub_1A3E35F20(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ModelCatalogWrapper);
}

uint64_t sub_1A3E35F38()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A3C8A9A4;
  return v5();
}

uint64_t sub_1A3E3603C()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t destroy for ModelCatalogWrapper.ModelLoadingError(uint64_t a1)
{
  return sub_1A3E36098(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1A3E36098(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19ModelCatalogWrapper19ModelCatalogWrapperC17ModelLoadingErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A3E34234(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ModelCatalogWrapper.ModelLoadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A3E34234(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A3E36098(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ModelCatalogWrapper.ModelLoadingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A3E36098(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelCatalogWrapper.ModelLoadingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelCatalogWrapper.ModelLoadingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A3E36228(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1A3E36230(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ModelCatalogWrapper.ModelLoadingError()
{
  return &type metadata for ModelCatalogWrapper.ModelLoadingError;
}

uint64_t sub_1A3E36248()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A3E36288()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  unsigned int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unsigned int v3 = v1;
  v3[1] = sub_1A3C8A9A4;
  int v4 = (uint64_t (*)(const void *))((char *)&dword_1E95F12A0 + dword_1E95F12A0);
  return v4(v2);
}

uint64_t sub_1A3E3633C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A3C8D594;
  unsigned __int8 v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E95EF7A8 + dword_1E95EF7A8);
  return v8(a1, v4, v5, v6);
}

void rtcv::LoggerDevNull::~LoggerDevNull(FILE **this)
{
}

uint64_t rtcv::LoggerDevNull::devNull(rtcv::LoggerDevNull *this)
{
  return *(void *)this;
}

uint64_t *rtcv::LoggerDevNull::instance(rtcv::LoggerDevNull *this)
{
  {
    rtcv::LoggerDevNull::instance(void)::theInstance = 0;
    rtcv::LoggerDevNull::instance(void)::theInstance = (uint64_t)fopen("/dev/null", "wt");
    __cxa_atexit((void (*)(void *))rtcv::LoggerDevNull::~LoggerDevNull, &rtcv::LoggerDevNull::instance(void)::theInstance, &dword_1A3C62000);
  }
  return &rtcv::LoggerDevNull::instance(void)::theInstance;
}

void rtcv::Logger::Logger(rtcv::Logger *this)
{
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((unsigned char *)this + 192) = 7;
  operator new();
}

void rtcv::Logger::setTarget(uint64_t a1, uint64_t *a2)
{
  for (uint64_t i = 0; i != 192; i += 24)
    std::vector<std::shared_ptr<rtcv::Logger::Target>>::__clear[abi:nn180100]((uint64_t *)(a1 + i));

  rtcv::Logger::addTargetBetweenSeverities(a1, a2, 0, 7u);
}

void rtcv::Logger::Target::log(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(*(void *)a1 + 16))(a1, a2, a3, &a9);
  std::mutex::unlock(v12);
}

uint64_t rtcv::ConsoleLogTarget::doLog(uint64_t a1, int a2, const char *a3, va_list a4)
{
  fprintf(*(FILE **)(a1 + 72), "< %-8s > ", rtcv::Logger::severityToString(rtcv::Logger::Severity)::stringArr[a2]);
  uint64_t v7 = *(FILE **)(a1 + 72);

  return vfprintf(v7, a3, a4);
}

void *rtcv::Logger::instance(rtcv::Logger *this)
{
  {
    rtcv::Logger::Logger((rtcv::Logger *)&rtcv::Logger::instance(void)::instance);
  }
  return &rtcv::Logger::instance(void)::instance;
}

void rtcv::Logger::~Logger(rtcv::Logger *this)
{
  for (uint64_t i = 168; i != -24; i -= 24)
  {
    unsigned int v3 = (void **)((char *)this + i);
    std::vector<std::shared_ptr<rtcv::Logger::Target>>::__destroy_vector::operator()[abi:nn180100](&v3);
  }
}

void rtcv::Logger::addTargetBetweenSeverities(uint64_t a1, uint64_t *a2, unsigned int a3, unsigned int a4)
{
  std::shared_ptr<rtcv::Logger::Target>::shared_ptr[abi:nn180100]<rtcv::Logger::Target,std::default_delete<rtcv::Logger::Target>,void>((uint64_t *)&v28, a2);
  if (a3 <= a4)
  {
    do
    {
      uint64_t v7 = (char **)(a1 + 24 * a3);
      uint64_t v9 = v7 + 1;
      unsigned __int8 v8 = v7[1];
      uint64_t v11 = (uint64_t *)(v7 + 2);
      unint64_t v10 = (unint64_t)v7[2];
      if ((unint64_t)v8 >= v10)
      {
        uint64_t v14 = (v8 - *v7) >> 4;
        unint64_t v15 = v14 + 1;
        if ((unint64_t)(v14 + 1) >> 60) {
          abort();
        }
        uint64_t v16 = v10 - (void)*v7;
        if (v16 >> 3 > v15) {
          unint64_t v15 = v16 >> 3;
        }
        if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v17 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v17 = v15;
        }
        uint64_t v32 = v7 + 2;
        uint64_t v18 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<std::shared_ptr<rtcv::Logger::Target>>>((uint64_t)v11, v17);
        uint64_t v20 = &v18[16 * v14];
        uint64_t v21 = *((void *)&v28 + 1);
        *(_OWORD *)uint64_t v20 = v28;
        if (v21) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v21 + 8), 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = *v9;
        uint64_t v23 = *v7;
        if (*v9 == *v7)
        {
          int64x2_t v26 = vdupq_n_s64((unint64_t)v22);
          unint64_t v24 = &v18[16 * v14];
        }
        else
        {
          unint64_t v24 = &v18[16 * v14];
          do
          {
            long long v25 = *((_OWORD *)v22 - 1);
            v22 -= 16;
            *((_OWORD *)v24 - 1) = v25;
            v24 -= 16;
            *(void *)uint64_t v22 = 0;
            *((void *)v22 + 1) = 0;
          }
          while (v22 != v23);
          int64x2_t v26 = *(int64x2_t *)v7;
        }
        uint64_t v13 = v20 + 16;
        *uint64_t v7 = v24;
        *uint64_t v9 = v20 + 16;
        int64x2_t v30 = v26;
        uint64_t v27 = *v11;
        *uint64_t v11 = (uint64_t)&v18[16 * v19];
        uint64_t v31 = v27;
        uint64_t v29 = v26.i64[0];
        std::__split_buffer<std::shared_ptr<rtcv::Logger::Target>>::~__split_buffer((void **)&v29);
      }
      else
      {
        *(void *)unsigned __int8 v8 = v28;
        uint64_t v12 = *((void *)&v28 + 1);
        *((void *)v8 + 1) = *((void *)&v28 + 1);
        if (v12) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
        }
        uint64_t v13 = v8 + 16;
      }
      *uint64_t v9 = v13;
      LOBYTE(a3) = a3 + 1;
    }
    while (a4 >= a3);
  }
  if (*((void *)&v28 + 1)) {
    std::__shared_weak_count::__release_shared[abi:nn180100](*((std::__shared_weak_count **)&v28 + 1));
  }
}

void rtcv::ConsoleLogTarget::~ConsoleLogTarget(rtcv::ConsoleLogTarget *this)
{
  *(void *)this = &unk_1EF752090;
  std::mutex::~mutex((std::mutex *)((char *)this + 8));
}

{
  uint64_t vars8;

  *(void *)this = &unk_1EF752090;
  std::mutex::~mutex((std::mutex *)((char *)this + 8));

  JUMPOUT(0x1A62562C0);
}

void std::vector<std::shared_ptr<rtcv::Logger::Target>>::__destroy_vector::operator()[abi:nn180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::shared_ptr<rtcv::Logger::Target>>::__clear[abi:nn180100]((uint64_t *)v2);
    unsigned int v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::shared_ptr<rtcv::Logger::Target>>::__clear[abi:nn180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 16)
  {
    uint64_t v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4) {
      std::__shared_weak_count::__release_shared[abi:nn180100](v4);
    }
  }
  a1[1] = v2;
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<std::shared_ptr<rtcv::Logger::Target>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:nn180100]();
  }
  return operator new(16 * a2);
}

void std::__throw_bad_array_new_length[abi:nn180100]()
{
}

void **std::__split_buffer<std::shared_ptr<rtcv::Logger::Target>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<std::shared_ptr<rtcv::Logger::Target>>::clear[abi:nn180100](uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  while (v1 != v2)
  {
    *(void *)(a1 + 16) = v1 - 16;
    uint64_t v4 = *(std::__shared_weak_count **)(v1 - 8);
    if (v4)
    {
      std::__shared_weak_count::__release_shared[abi:nn180100](v4);
      uint64_t v1 = *(void *)(a1 + 16);
    }
    else
    {
      v1 -= 16;
    }
  }
}

void std::__shared_weak_count::__release_shared[abi:nn180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

uint64_t *std::shared_ptr<rtcv::Logger::Target>::shared_ptr[abi:nn180100]<rtcv::Logger::Target,std::default_delete<rtcv::Logger::Target>,void>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *uint64_t result = *a2;
  if (v2) {
    operator new();
  }
  result[1] = 0;
  *a2 = 0;
  return result;
}

void std::__shared_ptr_pointer<rtcv::Logger::Target  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1A62562C0);
}

uint64_t std::__shared_ptr_pointer<rtcv::Logger::Target  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

float bmClamp(float a1, float a2, float a3)
{
  if (a3 >= a1) {
    a3 = a1;
  }
  if (a1 >= a2) {
    return a3;
  }
  else {
    return a2;
  }
}

float bmSoftmax2(float a1, float a2)
{
  if (a1 >= a2) {
    float v3 = a1;
  }
  else {
    float v3 = a2;
  }
  float v4 = expf(a1 - v3);
  float v5 = expf(a2 - v3);
  return v5 / (float)(v4 + v5);
}

void rtcv::Logger::log<(rtcv::Logger::Severity)3>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned __int8 *)(a1 + 192) >= 3u)
  {
    unsigned __int8 v8 = *(uint64_t **)(a1 + 72);
    uint64_t v9 = *(uint64_t **)(a1 + 80);
    while (v8 != v9)
    {
      uint64_t v11 = *v8;
      v8 += 2;
      rtcv::Logger::Target::log(v11, 3, a2, a4, a5, a6, a7, a8, v12);
    }
  }
}

void std::vector<unsigned char>::__append(unint64_t *a1, size_t a2)
{
  float v5 = (char *)a1[1];
  float v4 = (char *)a1[2];
  if (v4 - v5 >= a2)
  {
    if (a2)
    {
      bzero((void *)a1[1], a2);
      v5 += a2;
    }
    a1[1] = (unint64_t)v5;
  }
  else
  {
    unint64_t v6 = *a1;
    uint64_t v7 = &v5[-*a1];
    unint64_t v8 = (unint64_t)&v7[a2];
    if ((uint64_t)&v7[a2] < 0) {
      abort();
    }
    unint64_t v9 = (unint64_t)&v4[-v6];
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v10 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v10 = v8;
    }
    if (v10) {
      unint64_t v11 = (unint64_t)operator new(v10);
    }
    else {
      unint64_t v11 = 0;
    }
    uint64_t v12 = &v7[v11];
    uint64_t v13 = (char *)(v11 + v10);
    bzero(v12, a2);
    if (v5 == (char *)v6)
    {
      unint64_t v11 = (unint64_t)v12;
    }
    else
    {
      uint64_t v14 = &v5[~v6];
      do
      {
        char v15 = *--v5;
        (v14--)[v11] = v15;
      }
      while (v5 != (char *)v6);
      float v5 = (char *)*a1;
    }
    *a1 = v11;
    a1[1] = (unint64_t)&v12[a2];
    a1[2] = (unint64_t)v13;
    if (v5)
    {
      operator delete(v5);
    }
  }
}

void rtcv::Logger::log<(rtcv::Logger::Severity)3,rtcv::SimResizePixelFormat &>(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned __int8 *)(a1 + 192) >= 3u)
  {
    unint64_t v8 = *(uint64_t **)(a1 + 72);
    unint64_t v9 = *(uint64_t **)(a1 + 80);
    while (v8 != v9)
    {
      uint64_t v12 = *v8;
      v8 += 2;
      rtcv::Logger::Target::log(v12, 3, a2, a4, a5, a6, a7, a8, *a3);
    }
  }
}

void rtcv::Logger::log<(rtcv::Logger::Severity)3,rtcv::SimResizePixelFormat &,rtcv::SimResizeModel &,rtcv::SimResizeStretch &>(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned __int8 *)(a1 + 192) >= 3u)
  {
    unint64_t v8 = *(uint64_t **)(a1 + 72);
    unint64_t v9 = *(uint64_t **)(a1 + 80);
    while (v8 != v9)
    {
      uint64_t v12 = *v8;
      v8 += 2;
      rtcv::Logger::Target::log(v12, 3, a2, a4, a5, a6, a7, a8, *a3);
    }
  }
}

BOOL rtcv::simCropResizeExtendMean(rtcv::LoggerDevNull *a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, int a6, int a7, void *a8, float a9, float a10, float a11, unsigned int a12, unsigned int a13, unsigned int a14, uint64_t a15)
{
  int v27 = a6;
  unsigned int v28 = a5;
  int v26 = a7;
  if (a6 | a5 | a7)
  {
    uint64_t v18 = rtcv::LoggerDevNull::instance(a1);
    uint64_t v19 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v18);
    uint64_t v20 = (rtcv::Logger *)fprintf(v19, "Pixel format (%d), model (%d), or stretch (%d) not supported!\n", a5, a6, a7);
    uint64_t v21 = rtcv::Logger::instance(v20);
    rtcv::Logger::log<(rtcv::Logger::Severity)3,rtcv::SimResizePixelFormat &,rtcv::SimResizeModel &,rtcv::SimResizeStretch &>((uint64_t)v21, (uint64_t)"Pixel format (%d), model (%d), or stretch (%d) not supported!\n", &v28, (uint64_t)&v27, (uint64_t)&v26, v22, v23, v24);
    return 0;
  }
  else
  {
    src.data = a1;
    src.double height = a3;
    src.double width = a2;
    src.rowBytes = a4;
    dest.data = a8;
    dest.double height = a13;
    dest.double width = a12;
    dest.rowBytes = a14;
    uint8_t backColor = *(unsigned char *)a15;
    __int16 v31 = *(_WORD *)(a15 + 1);
    char v32 = -1;
    transform.a = a11;
    *(void *)&transform.b = 0;
    transform.d = a11;
    transform.tdouble x = -(float)(a11 * a9);
    transform.tdouble y = (float)a13 - (float)(a11 * (float)((float)a3 - a10));
    return vImageAffineWarp_ARGB8888(&src, &dest, 0, &transform, &backColor, 4u) == 0;
  }
}

uint64_t rtcv::simImageChMeanTempBytes(rtcv *this, int a2)
{
  int v3 = (int)this;
  BmMixedBufSize::BmMixedBufSize((BmMixedBufSize *)&v5);
  return (v5 + 12 * v3 * a2 + 9);
}

float rtcv::simImageChMean(unsigned __int8 *a1, int a2, int a3, unsigned int a4, float *a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  unsigned int v29 = a4;
  if (a4)
  {
    unint64_t v8 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)a1);
    unint64_t v9 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v8);
    size_t v10 = (rtcv::Logger *)fprintf(v9, "Pixel format (%d) not supported!\n", a4);
    unint64_t v11 = rtcv::Logger::instance(v10);
    rtcv::Logger::log<(rtcv::Logger::Severity)3,rtcv::SimResizePixelFormat &>((uint64_t)v11, (uint64_t)"Pixel format (%d) not supported!\n", &v29, v12, v13, v14, v15, v16);
  }
  else
  {
    BmMixedBufSize::BmMixedBufSize((BmMixedBufSize *)&__C);
    if (a5)
    {
      uint64_t v23 = (float *)(((unint64_t)a5 + HIDWORD(__C) + 3) & 0xFFFFFFFFFFFFFFFCLL);
      int v24 = 4 * a2 * a3 - a5;
      uint64_t v25 = (uint64_t)a5 + (v23 + v24) + 3;
      int v26 = (float *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      a5 = (float *)(((unint64_t)a5 + (v25 & 0xFFFFFFFC) + v24 + 3) & 0xFFFFFFFFFFFFFFFCLL);
    }
    else
    {
      uint64_t v23 = 0;
      int v26 = 0;
    }
    vDSP_Length v27 = (a3 * a2);
    float v31 = 0.0;
    uint64_t __C = 0;
    vDSP_vfltu8(a1, 4, a5, 1, v27);
    vDSP_vfltu8(a1 + 1, 4, v26, 1, v27);
    vDSP_vfltu8(a1 + 2, 4, v23, 1, v27);
    vDSP_meanv(a5, 1, (float *)&__C, v27);
    vDSP_meanv(v26, 1, (float *)&__C + 1, v27);
    vDSP_meanv(v23, 1, &v31, v27);
    float v28 = *((float *)&__C + 1);
    *a7 = (int)(float)(*(float *)&__C + 0.5);
    a7[1] = (int)(float)(v28 + 0.5);
    float result = v31 + 0.5;
    a7[2] = (int)(float)(v31 + 0.5);
  }
  return result;
}

uint64_t TtTrkRpnCreate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 && a2 && a3) {
    operator new();
  }
  return 4294967292;
}

uint64_t TtTrkRpnDestroy(TtTrkRpnNode **a1)
{
  if (!a1) {
    return 4294967292;
  }
  uint64_t v2 = *a1;
  if (!v2) {
    return 4294967292;
  }
  TtTrkRpnNode::~TtTrkRpnNode(v2);
  MEMORY[0x1A62562C0]();
  MEMORY[0x1A62562C0](a1, 0x10A0C40FC37F48CLL);
  return 0;
}

uint64_t TtTrkRpnStart(rtcv::LoggerDevNull **a1, unsigned int *a2)
{
  if (a1 && a2 && (uint64_t v2 = *a1) != 0) {
    return TtTrkRpnNode::restart(v2, a2);
  }
  else {
    return 4294967292;
  }
}

uint64_t TtTrkRpnStop(void *a1)
{
  uint64_t result = 4294967292;
  if (a1)
  {
    if (*a1) {
      return 0;
    }
    else {
      return 4294967292;
    }
  }
  return result;
}

uint64_t TtTrkRpnGetParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || !*(void *)a1) {
    return 4294967292;
  }
  uint64_t result = 4294967292;
  if (a2)
  {
    if (a3)
    {
      uint64_t result = 0;
      long long v5 = *(_OWORD *)(a1 + 24);
      *(_OWORD *)a3 = *(_OWORD *)(a1 + 8);
      *(_OWORD *)(a3 + 16) = v5;
      long long v6 = *(_OWORD *)(a1 + 40);
      long long v7 = *(_OWORD *)(a1 + 56);
      long long v8 = *(_OWORD *)(a1 + 88);
      *(_OWORD *)(a3 + 64) = *(_OWORD *)(a1 + 72);
      *(_OWORD *)(a3 + 80) = v8;
      *(_OWORD *)(a3 + 32) = v6;
      *(_OWORD *)(a3 + 48) = v7;
      long long v9 = *(_OWORD *)(a1 + 104);
      long long v10 = *(_OWORD *)(a1 + 120);
      long long v11 = *(_OWORD *)(a1 + 152);
      *(_OWORD *)(a3 + 128) = *(_OWORD *)(a1 + 136);
      *(_OWORD *)(a3 + 144) = v11;
      *(_OWORD *)(a3 + 96) = v9;
      *(_OWORD *)(a3 + 112) = v10;
      long long v12 = *(_OWORD *)(a1 + 168);
      long long v13 = *(_OWORD *)(a1 + 184);
      long long v14 = *(_OWORD *)(a1 + 200);
      *(_DWORD *)(a3 + 208) = *(_DWORD *)(a1 + 216);
      *(_OWORD *)(a3 + 176) = v13;
      *(_OWORD *)(a3 + 192) = v14;
      *(_OWORD *)(a3 + 160) = v12;
    }
  }
  return result;
}

uint64_t TtTrkRpnExemplarPreProcess(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a1 || !*(void *)a1) {
    return 4294967292;
  }
  uint64_t result = 4294967292;
  if (a2)
  {
    if (a3)
    {
      if (a4)
      {
        if (a5)
        {
          if (a6)
          {
            if (a7)
            {
              uint64_t result = TtTrkRpnNode::setUpNetBuffers(a5, (_DWORD *)(a1 + 8), a7);
              if (!result)
              {
                if (!*(unsigned char *)(a2 + 8)
                  || (uint64_t result = TtTrkRpnNode::restart(*(rtcv::LoggerDevNull **)a1, a4), !result))
                {
                  uint64_t v13 = *(void *)a1;
                  return TtTrkRpnNode::exemplarPreProcess(v13, a2, (long long *)(a3 + 184), (int *)(a3 + 180), a4, a6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t TtTrkRpnInstancePreProcess(uint64_t a1, uint64_t a2, uint64_t a3, float32x2_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a1 || !*(void *)a1) {
    return 4294967292;
  }
  uint64_t result = 4294967292;
  if (a2)
  {
    if (a3)
    {
      if (a4)
      {
        if (a5)
        {
          if (a6)
          {
            if (a7)
            {
              uint64_t result = TtTrkRpnNode::setUpNetBuffers(a5, (_DWORD *)(a1 + 8), a7);
              if (!result)
              {
                if (*(unsigned char *)(a2 + 8))
                {
                  return 4294967294;
                }
                else
                {
                  uint64_t v13 = *(void *)a1;
                  return TtTrkRpnNode::instancePreProcess(v13, a2, a3 + 184, a3 + 180, a4, a6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t TtTrkRpnPreProcessCropResizeTempBytes(rtcv *a1, int a2, _DWORD *a3)
{
  *a3 = rtcv::simImageChMeanTempBytes(a1, a2);
  return 0;
}

uint64_t TtTrkRpnPreProcessCropResizeRef(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a1) {
    return 4294967292;
  }
  uint64_t result = 4294967292;
  if (a2 && *(void *)a1 && a4 && a6 && *(void *)a3)
  {
    if ((*(unsigned char *)(a3 + 12) & 3) != 0)
    {
      long long v12 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)0xFFFFFFFCLL);
      uint64_t v13 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v12);
      long long v14 = "Invalid source image!\n";
      uint64_t v15 = "Invalid source image!\n";
      size_t v16 = 22;
LABEL_9:
      unint64_t v17 = (rtcv::Logger *)fwrite(v15, v16, 1uLL, v13);
      uint64_t v18 = rtcv::Logger::instance(v17);
      rtcv::Logger::log<(rtcv::Logger::Severity)3>((uint64_t)v18, (uint64_t)v14, v19, v20, v21, v22, v23, v24);
      return 4294967292;
    }
    int v26 = (void **)(a1 + 220);
    uint64_t result = TtTrkRpnNode::setUpNetBuffers(a7, (_DWORD *)(a1 + 8), a1 + 220);
    if (!result)
    {
      if (*(unsigned char *)(a4 + 80))
      {
        *(unsigned char *)(a4 + 80) = 0;
        if (!*v26)
        {
          uint64_t v44 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)result);
          uint64_t v13 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v44);
          long long v14 = "Invalid instanceResult buffer!\n";
          goto LABEL_33;
        }
        unsigned int v27 = *(_DWORD *)(a1 + 232);
        if (v27 != *(_DWORD *)(a1 + 28) * *(_DWORD *)(a1 + 20)) {
          goto LABEL_29;
        }
        unsigned int v28 = *(_DWORD *)(a1 + 228);
        if (v28 != *(_DWORD *)(a1 + 24)) {
          goto LABEL_29;
        }
        unsigned int v29 = *(_DWORD *)(a1 + 236);
        if (v29 < v27 || (v29 & 0x3F) != 0)
        {
          uint64_t v46 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)result);
          uint64_t v47 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v46);
          uint64_t v48 = (rtcv::Logger *)fprintf(v47, "Invalid output buffer rowBytes (%d)!\n", *(_DWORD *)(a1 + 236));
          uint64_t v49 = rtcv::Logger::instance(v48);
          uint64_t v55 = (unsigned int *)(a1 + 236);
          goto LABEL_36;
        }
        uint64_t result = rtcv::simCropResizeExtendMean(*(rtcv::LoggerDevNull **)a3, *(_DWORD *)(a3 + 12) >> 2, *(_DWORD *)(a3 + 8), *(_DWORD *)(a3 + 16), 0, 0, 0, *v26, *(float *)(a6 + 112), *(float *)(a6 + 116), (float)v28 / fmaxf(*(float *)(a6 + 124), 1.0), v27 >> 2, v28, v29, a6 + 1858);
        if ((result & 1) == 0) {
          goto LABEL_28;
        }
      }
      if (!*(unsigned char *)(a4 + 81)) {
        return 0;
      }
      *(unsigned char *)(a4 + 81) = 0;
      if (*(void *)(a1 + 244))
      {
        unsigned int v30 = *(_DWORD *)(a1 + 256);
        if (v30 == *(_DWORD *)(a1 + 44) * *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 252) == *(_DWORD *)(a1 + 40))
        {
          unsigned int v31 = *(_DWORD *)(a1 + 260);
          if (v31 >= v30 && (v31 & 0x3F) == 0)
          {
            rtcv::simImageChMean(*(unsigned __int8 **)a3, *(_DWORD *)(a3 + 12) >> 2, *(_DWORD *)(a3 + 8), 0, *(float **)a5, *(unsigned int *)(a5 + 8), (unsigned char *)(a6 + 1858));
            BOOL v32 = rtcv::simCropResizeExtendMean(*(rtcv::LoggerDevNull **)a3, *(_DWORD *)(a3 + 12) >> 2, *(_DWORD *)(a3 + 8), *(_DWORD *)(a3 + 16), 0, 0, 0, *(void **)(a1 + 244), *(float *)(a6 + 96), *(float *)(a6 + 100), (float)*(unsigned int *)(a1 + 252) / fmaxf(*(float *)(a6 + 108), 1.0), *(_DWORD *)(a1 + 256) >> 2, *(_DWORD *)(a1 + 252), *(_DWORD *)(a1 + 260), a6 + 1858);
            uint64_t result = 0;
            if (v32) {
              return result;
            }
LABEL_28:
            uint64_t v33 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)result);
            uint64_t v34 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v33);
            uint64_t v35 = (rtcv::Logger *)fwrite("rtcv::simCropResize failed!\n", 0x1CuLL, 1uLL, v34);
            uint64_t v36 = rtcv::Logger::instance(v35);
            rtcv::Logger::log<(rtcv::Logger::Severity)3>((uint64_t)v36, (uint64_t)"rtcv::simCropResize failed!\n", v37, v38, v39, v40, v41, v42);
            return 4294967288;
          }
          char v56 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)result);
          uint64_t v57 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v56);
          uint64_t v58 = (rtcv::Logger *)fprintf(v57, "Invalid output buffer rowBytes (%d)!\n", *(_DWORD *)(a1 + 260));
          uint64_t v49 = rtcv::Logger::instance(v58);
          uint64_t v55 = (unsigned int *)(a1 + 260);
LABEL_36:
          rtcv::Logger::log<(rtcv::Logger::Severity)3,rtcv::SimResizePixelFormat &>((uint64_t)v49, (uint64_t)"Invalid output buffer rowBytes (%d)!\n", v55, v50, v51, v52, v53, v54);
          return 4294967292;
        }
LABEL_29:
        long long v43 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)result);
        uint64_t v13 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v43);
        long long v14 = "Output buffer size incorrect!\n";
        uint64_t v15 = "Output buffer size incorrect!\n";
        size_t v16 = 30;
        goto LABEL_9;
      }
      uint64_t v45 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)result);
      uint64_t v13 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v45);
      long long v14 = "Invalid exemplarResult buffer!\n";
LABEL_33:
      uint64_t v15 = v14;
      size_t v16 = 31;
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t TtTrkRpnExemplarPostProcess(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5, unsigned __int8 *a6)
{
  if (!a1) {
    return 4294967292;
  }
  if (!*(void *)a1) {
    return 4294967292;
  }
  uint64_t result = 4294967292;
  if (a2)
  {
    if (a3)
    {
      if (a5)
      {
        if (a6)
        {
          uint64_t result = TtTrkRpnNode::setUpNetBuffers(a3, (_DWORD *)(a1 + 8), a1 + 220);
          if (!result)
          {
            uint64_t result = TtTrkRpnNode::exemplarPostProcess(*(void *)a1, a1 + 268, 2u, a2, a5);
            if (!result)
            {
              if (*a6 < 3uLL)
              {
                uint64_t v20 = &a6[20 * *a6];
                *(_OWORD *)(v20 + 21) = xmmword_1A4109FD4;
                *(_DWORD *)(v20 + 37) = 0;
                uint64_t v21 = TtTrkRpnNode::config(*(TtTrkRpnNode **)a1);
                uint64_t result = 0;
                long long v22 = *(_OWORD *)v21;
                *(_DWORD *)(v20 + 97) = *(_DWORD *)(v21 + 16);
                *(_OWORD *)(v20 + 81) = v22;
                ++*a6;
                return result;
              }
              long long v11 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)result);
              long long v12 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v11);
              uint64_t v13 = (rtcv::Logger *)fprintf(v12, "TtResult modelInfo.numModels (%hhu) out of bounds!\n", *a6);
              long long v14 = rtcv::Logger::instance(v13);
              rtcv::Logger::log<(rtcv::Logger::Severity)3,unsigned char &>((uint64_t)v14, (uint64_t)"TtResult modelInfo.numModels (%hhu) out of bounds!\n", a6, v15, v16, v17, v18, v19);
              return 4294967292;
            }
          }
        }
      }
    }
  }
  return result;
}

void rtcv::Logger::log<(rtcv::Logger::Severity)3,unsigned char &>(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned __int8 *)(a1 + 192) >= 3u)
  {
    long long v8 = *(uint64_t **)(a1 + 72);
    long long v9 = *(uint64_t **)(a1 + 80);
    while (v8 != v9)
    {
      uint64_t v12 = *v8;
      v8 += 2;
      rtcv::Logger::Target::log(v12, 3, a2, a4, a5, a6, a7, a8, *a3);
    }
  }
}

uint64_t TtTrkRpnInstancePostProcess(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, unsigned int *a5, unsigned __int8 *a6)
{
  if (!a1) {
    return 4294967292;
  }
  if (!*(void *)a1) {
    return 4294967292;
  }
  uint64_t result = 4294967292;
  if (a2)
  {
    if (a3)
    {
      if (a5)
      {
        if (a6)
        {
          uint64_t result = TtTrkRpnNode::setUpNetBuffers(a3, (_DWORD *)(a1 + 8), a1 + 220);
          if (!result)
          {
            uint64_t result = TtTrkRpnNode::instancePostProcess(*(void *)a1, a1 + 316, 2u, a2, a5, (uint64_t)(a6 + 184), (_DWORD *)a6 + 45);
            if (!result)
            {
              unsigned int v11 = *a6;
              if (v11 < 3)
              {
                uint64_t result = 0;
                *a6 = v11 + 1;
                return result;
              }
              uint64_t v12 = rtcv::LoggerDevNull::instance((rtcv::LoggerDevNull *)result);
              uint64_t v13 = (FILE *)rtcv::LoggerDevNull::devNull((rtcv::LoggerDevNull *)v12);
              long long v14 = (rtcv::Logger *)fprintf(v13, "TtResult modelInfo.numModels (%hhu) out of bounds!\n", *a6);
              uint64_t v15 = rtcv::Logger::instance(v14);
              rtcv::Logger::log<(rtcv::Logger::Severity)3,unsigned char &>((uint64_t)v15, (uint64_t)"TtResult modelInfo.numModels (%hhu) out of bounds!\n", a6, v16, v17, v18, v19, v20);
              return 4294967292;
            }
          }
        }
      }
    }
  }
  return result;
}