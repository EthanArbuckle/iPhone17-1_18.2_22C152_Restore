uint64_t sub_24550A8B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_24550A9C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268EE37E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_24550AAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24550AB38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3800);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

char *sub_24550AC44(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_24550AD2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24550AD94(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24550ADF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_24550AE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x263F8EE78];
  v6[2] = MEMORY[0x263F8EE78];
  v6[3] = sub_2454D62F0(v7);
  v6[4] = a1;
  v6[5] = a3;
  v6[6] = a2;
  return v6;
}

void *sub_24550AEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x263F8EE78];
  v6[2] = MEMORY[0x263F8EE78];
  v6[3] = sub_2454D62F0(v7);
  v6[4] = a3;
  v6[5] = a1;
  v6[6] = a2;
  return v6;
}

void *sub_24550AF1C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_24558F1C8())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2456A1A40](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24550B044()
{
  type metadata accessor for CompositeKeyedEncoding();
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  size_t v4 = (void *)v0[6];
  uint64_t v3 = (void *)v0[7];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = (void *)swift_allocObject();
  v7[6] = v2;
  v7[7] = v1;
  v7[2] = v3;
  v7[3] = v6;
  v7[4] = v5;
  v7[5] = v4;
  swift_bridgeObjectRetain();
  id v8 = v3;
  id v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  return sub_24558F518();
}

void *sub_24550B118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (void *)swift_allocObject();
  result[6] = a1;
  result[7] = a2;
  result[2] = a3;
  result[3] = a5;
  result[4] = a6;
  result[5] = a4;
  return result;
}

void sub_24550B180(void *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(*(id *)(v1 + 48), sel_elements);
  sub_24549808C(0, &qword_26B0D8D30);
  unint64_t v5 = sub_24558E7C8();

  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    sub_24558EF78();
    swift_bridgeObjectRelease();
    v23[0] = 0xD000000000000021;
    v23[1] = 0x80000002455923B0;
    a1 = *(id *)(v2 + 48);
    id v22 = objc_msgSend(a1, sel_description);
    uint64_t v2 = sub_24558E5D8();

    unint64_t v5 = (unint64_t)v23;
    sub_24558E668();

    swift_bridgeObjectRelease();
    sub_24558F1A8();
    __break(1u);
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_24558F1C8();
  swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_11:
    id v6 = (id)MEMORY[0x2456A1A40](0, v5);
    goto LABEL_6;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return;
  }
  id v6 = *(id *)(v5 + 32);
LABEL_6:
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v7, sel_name);

  uint64_t v9 = sub_24558E5D8();
  uint64_t v11 = v10;

  id v13 = *(void **)(v2 + 48);
  v12 = *(void **)(v2 + 56);
  uint64_t v14 = *(void *)(v2 + 32);
  uint64_t v15 = *(void *)(v2 + 40);
  uint64_t v16 = type metadata accessor for CompositeSingleValueEncoding();
  v17 = (void *)swift_allocObject();
  v17[6] = v9;
  v17[7] = v11;
  v17[4] = v12;
  v17[5] = v13;
  v17[2] = v14;
  v17[3] = v15;
  a1[3] = v16;
  a1[4] = sub_2454ABFAC(&qword_268EE3980, v18, (void (*)(uint64_t))type metadata accessor for CompositeSingleValueEncoding);
  *a1 = v17;
  id v19 = v12;
  id v20 = v13;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRetain();
}

uint64_t sub_24550B41C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompositeEncoder()
{
  return self;
}

uint64_t sub_24550B498()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24550B4A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24550B4B0()
{
  return sub_24550B044();
}

void sub_24550B4D4()
{
}

void sub_24550B530(void *a1@<X8>)
{
}

uint64_t sub_24550B554()
{
  type metadata accessor for CompositeKeyedDecoding();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + 24;
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void **)(v4 + 8);
  swift_allocObject();
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24550E378(v5, v1, v2);
  swift_getWitnessTable();
  return sub_24558F3E8();
}

uint64_t sub_24550B628(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24550E378(a1, a2, a3);
}

uint64_t sub_24550B67C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + 24;
  uint64_t v4 = *(void *)(v1 + 24);
  id v5 = *(void **)(v6 + 8);
  uint64_t v7 = type metadata accessor for CompositeSingleValueDecoding();
  id v8 = (void *)swift_allocObject();
  v8[2] = v5;
  v8[3] = v3;
  id v9 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v4;
  a1[3] = v7;
  uint64_t result = sub_2454ABFAC(&qword_268EE3978, v10, (void (*)(uint64_t))type metadata accessor for CompositeSingleValueDecoding);
  a1[4] = result;
  *a1 = v8;
  return result;
}

uint64_t sub_24550B744()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompositeDecoder()
{
  return self;
}

uint64_t sub_24550B7B4()
{
  return sub_24547E7CC();
}

uint64_t sub_24550B7DC()
{
  return sub_24550B554();
}

void sub_24550B800()
{
}

uint64_t sub_24550B85C@<X0>(void *a1@<X8>)
{
  return sub_24550B67C(a1);
}

uint64_t sub_24550B880()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v4 = sub_24558F8C8();
  uint64_t v5 = v2;
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel___swift_setObject_forKeyedSubscript_, 0, sub_24558F728(), v4, v5);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24550B958()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = sub_24558F8C8();
  uint64_t v4 = v3;
  uint64_t v5 = (void *)sub_24558E908();
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel___swift_setObject_forKeyedSubscript_, v5, sub_24558F728(), v2, v4);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24550BA50()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = sub_24558F8C8();
  uint64_t v4 = v3;
  uint64_t v5 = (void *)sub_24558E5A8();
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel___swift_setObject_forKeyedSubscript_, v5, sub_24558F728(), v2, v4);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24550BB50()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = sub_24558F8C8();
  uint64_t v4 = v3;
  uint64_t v5 = (void *)sub_24558E978();
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel___swift_setObject_forKeyedSubscript_, v5, sub_24558F728(), v2, v4);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24550BC48()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = sub_24558F8C8();
  uint64_t v4 = v3;
  uint64_t v5 = (void *)sub_24558E998();
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel___swift_setObject_forKeyedSubscript_, v5, sub_24558F728(), v2, v4);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24550BD40(uint64_t a1, uint64_t a2)
{
  return sub_24550C1F8(a1, a2, MEMORY[0x263F07BE0]);
}

uint64_t sub_24550BD6C(uint64_t a1, uint64_t a2)
{
  return sub_24550BE74(a1, a2, MEMORY[0x263F07DF0]);
}

uint64_t sub_24550BD98(uint64_t a1, uint64_t a2)
{
  return sub_24550BFA0(a1, a2, MEMORY[0x263F07DF8]);
}

uint64_t sub_24550BDC4(uint64_t a1, uint64_t a2)
{
  return sub_24550C0CC(a1, a2, MEMORY[0x263F07E08]);
}

uint64_t sub_24550BDF0(uint64_t a1, uint64_t a2)
{
  return sub_24550C1F8(a1, a2, MEMORY[0x263F07E10]);
}

uint64_t sub_24550BE1C(uint64_t a1, uint64_t a2)
{
  return sub_24550C1F8(a1, a2, MEMORY[0x263F07D78]);
}

uint64_t sub_24550BE48(uint64_t a1, uint64_t a2)
{
  return sub_24550BE74(a1, a2, MEMORY[0x263F07E28]);
}

uint64_t sub_24550BE74(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  id v6 = *(id *)(v3 + 16);
  uint64_t v7 = sub_24558F8C8();
  uint64_t v9 = v8;
  uint64_t v10 = (void *)a3(a1);
  swift_bridgeObjectRetain();
  objc_msgSend(v6, sel___swift_setObject_forKeyedSubscript_, v10, sub_24558F728(), v7, v9);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24550BF74(uint64_t a1, uint64_t a2)
{
  return sub_24550BFA0(a1, a2, MEMORY[0x263F07E30]);
}

uint64_t sub_24550BFA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  id v6 = *(id *)(v3 + 16);
  uint64_t v7 = sub_24558F8C8();
  uint64_t v9 = v8;
  uint64_t v10 = (void *)a3(a1);
  swift_bridgeObjectRetain();
  objc_msgSend(v6, sel___swift_setObject_forKeyedSubscript_, v10, sub_24558F728(), v7, v9);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24550C0A0(uint64_t a1, uint64_t a2)
{
  return sub_24550C0CC(a1, a2, MEMORY[0x263F07E38]);
}

uint64_t sub_24550C0CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  id v6 = *(id *)(v3 + 16);
  uint64_t v7 = sub_24558F8C8();
  uint64_t v9 = v8;
  uint64_t v10 = (void *)a3(a1);
  swift_bridgeObjectRetain();
  objc_msgSend(v6, sel___swift_setObject_forKeyedSubscript_, v10, sub_24558F728(), v7, v9);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24550C1CC(uint64_t a1, uint64_t a2)
{
  return sub_24550C1F8(a1, a2, MEMORY[0x263F07E48]);
}

uint64_t sub_24550C1F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  id v6 = *(id *)(v3 + 16);
  uint64_t v7 = sub_24558F8C8();
  uint64_t v9 = v8;
  uint64_t v10 = (void *)a3(a1);
  swift_bridgeObjectRetain();
  objc_msgSend(v6, sel___swift_setObject_forKeyedSubscript_, v10, sub_24558F728(), v7, v9);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

void sub_24550C2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t)v4;
  uint64_t v11 = *v4;
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = v15;
  swift_getMetatypeMetadata();
  if (sub_24552CB74((uint64_t)&v76))
  {
    id v16 = *(id *)(v6 + 16);
    uint64_t v17 = sub_24558F8C8();
    uint64_t v19 = v18;
    uint64_t v20 = sub_24558F588();
    uint64_t v76 = v17;
    uint64_t v77 = v19;
    swift_bridgeObjectRetain();
    objc_msgSend(v16, sel___swift_setObject_forKeyedSubscript_, v20, sub_24558F728());
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8CA8);
  char v21 = swift_dynamicCast();
  uint64_t v80 = a1;
  if (v21)
  {
    sub_2454D2564(v74, (uint64_t)&v76);
    if (swift_conformsToProtocol2()) {
      uint64_t v22 = a3;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v22)
    {
      sub_24550CA00(v22, v6, a2, &v76, a3, v22);
LABEL_24:
      __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v76);
      return;
    }
    uint64_t v73 = a4;
    uint64_t v23 = a2;
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v76);
  }
  else
  {
    uint64_t v73 = a4;
    uint64_t v23 = a2;
    uint64_t v75 = 0;
    memset(v74, 0, sizeof(v74));
    sub_24549B164((uint64_t)v74, qword_26B0D8A28);
  }
  id v70 = *(id *)(v6 + 40);
  id v24 = objc_msgSend(v70, sel_elements);
  sub_24549808C(0, &qword_26B0D8D30);
  unint64_t v25 = sub_24558E7C8();

  MEMORY[0x270FA5388](v26);
  uint64_t v28 = *(void *)(v11 + 80);
  uint64_t v27 = *(void *)(v11 + 88);
  *(&v66 - 6) = v28;
  *(&v66 - 5) = a3;
  uint64_t v72 = v27;
  uint64_t v29 = v73;
  *(&v66 - 4) = v27;
  *(&v66 - 3) = v29;
  *(&v66 - 2) = v23;
  unint64_t v30 = sub_24550CF20((void (*)(uint64_t *__return_ptr, id *))sub_24551E9EC, (uint64_t)(&v66 - 8), v25);
  uint64_t v71 = v5;
  swift_bridgeObjectRelease();
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_24558F1C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v69 = v23;
  if (!v31)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    uint64_t v68 = v28;
    uint64_t v46 = sub_24558F8C8();
    uint64_t v48 = v47;
    uint64_t v49 = type metadata accessor for CompositeEncoder();
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = MEMORY[0x263F8EE78];
    *(void *)(v50 + 32) = MEMORY[0x263F8EE78];
    id v52 = v70;
    *(void *)(v50 + 40) = sub_2454D62F0(v51);
    id v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9A0]), sel_init);
    *(void *)(v50 + 16) = v46;
    *(void *)(v50 + 24) = v48;
    *(void *)(v50 + 48) = v52;
    *(void *)(v50 + 56) = v53;
    uint64_t v78 = v49;
    uint64_t v79 = sub_2454ABFAC(qword_268EE3558, v54, (void (*)(uint64_t))type metadata accessor for CompositeEncoder);
    uint64_t v76 = v50;
    swift_retain();
    uint64_t v55 = v71;
    sub_24558E4B8();
    if (v55)
    {
      swift_release();
      goto LABEL_24;
    }
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v76);
    v56 = *(void **)(v6 + 16);
    id v57 = *(id *)(v50 + 56);
    id v58 = v56;
    uint64_t v76 = sub_24558F8C8();
    uint64_t v77 = v59;
    id v60 = v57;
    swift_bridgeObjectRetain();
    objc_msgSend(v58, sel___swift_setObject_forKeyedSubscript_, v60, sub_24558F728());
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    swift_release();

    return;
  }
  if ((v30 & 0xC000000000000001) != 0)
  {
    uint64_t v32 = v28;
    id v33 = (id)MEMORY[0x2456A1A40](0, v30);
  }
  else
  {
    if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v32 = v28;
    id v33 = *(id *)(v30 + 32);
  }
  v34 = v33;
  swift_bridgeObjectRelease();
  self;
  uint64_t v35 = swift_dynamicCastObjCClass();
  if (!v35)
  {

    uint64_t v28 = v32;
    goto LABEL_22;
  }
  uint64_t v36 = v35;
  id v70 = (id)sub_24558F8C8();
  uint64_t v67 = v37;
  uint64_t v38 = type metadata accessor for CompositeEncoder();
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = MEMORY[0x263F8EE78];
  *(void *)(v39 + 32) = MEMORY[0x263F8EE78];
  id v41 = v34;
  *(void *)(v39 + 40) = sub_2454D62F0(v40);
  id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9A0]), sel_init);
  uint64_t v43 = v67;
  *(void *)(v39 + 16) = v70;
  *(void *)(v39 + 24) = v43;
  *(void *)(v39 + 48) = v36;
  *(void *)(v39 + 56) = v42;
  uint64_t v78 = v38;
  uint64_t v79 = sub_2454ABFAC(qword_268EE3558, v44, (void (*)(uint64_t))type metadata accessor for CompositeEncoder);
  uint64_t v76 = v39;
  swift_retain();
  uint64_t v45 = v71;
  sub_24558E4B8();
  if (v45)
  {
    swift_release();

    goto LABEL_24;
  }
  __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v76);
  v61 = *(void **)(v6 + 16);
  id v62 = *(id *)(v39 + 56);
  id v63 = v61;
  uint64_t v76 = sub_24558F8C8();
  uint64_t v77 = v64;
  id v65 = v62;
  swift_bridgeObjectRetain();
  objc_msgSend(v63, sel___swift_setObject_forKeyedSubscript_, v65, sub_24558F728());
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
}

uint64_t sub_24550CA00(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)&v18[0] = swift_getAssociatedTypeWitness();
  swift_getMetatypeMetadata();
  if (sub_24552CB74((uint64_t)v18))
  {
    id v9 = *(id *)(a2 + 16);
    uint64_t v10 = sub_24558F8C8();
    uint64_t v12 = v11;
    __swift_project_boxed_opaque_existential_1Tm_0(a4, a4[3]);
    uint64_t v13 = sub_24558F588();
    *(void *)&v18[0] = v10;
    *((void *)&v18[0] + 1) = v12;
    swift_bridgeObjectRetain();
    objc_msgSend(v9, sel___swift_setObject_forKeyedSubscript_, v13, sub_24558F728());
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  sub_24549B21C((uint64_t)a4, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8CA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8CB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    memset(v16, 0, sizeof(v16));
    sub_24549B164((uint64_t)v16, &qword_26B0D8E38);
LABEL_9:
    *(void *)&v18[0] = 0;
    *((void *)&v18[0] + 1) = 0xE000000000000000;
    sub_24558EF78();
    swift_bridgeObjectRelease();
    *(void *)&v18[0] = 0xD00000000000001ALL;
    *((void *)&v18[0] + 1) = 0x8000000245592330;
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24558F1A8();
    __break(1u);
    return result;
  }
  sub_24551E948(v16, v18);
  uint64_t v15 = dynamic_cast_existential_2_conditional(a6);
  if (!v15)
  {
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v18);
    goto LABEL_9;
  }
  sub_24550CCB4(v15, v18, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v18);
}

uint64_t sub_24550CCB4(uint64_t a1, void *a2, uint64_t a3)
{
  __swift_project_boxed_opaque_existential_1Tm_0(a2, a2[3]);
  sub_24558DBF8();
  swift_allocObject();
  sub_24558DBE8();
  uint64_t v4 = sub_24558DBD8();
  unint64_t v6 = v5;
  swift_release();
  id v7 = *(id *)(a3 + 16);
  sub_24558F8C8();
  uint64_t v8 = (void *)sub_24558E188();
  swift_bridgeObjectRetain();
  objc_msgSend(v7, sel___swift_setObject_forKeyedSubscript_, v8, sub_24558F728());
  sub_2454A2F3C(v4, v6);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

id sub_24550CE34@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(*a1, sel_name);
  uint64_t v5 = sub_24558E5D8();
  uint64_t v7 = v6;

  if (v5 == sub_24558F8C8() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  char v10 = sub_24558F598();
  swift_bridgeObjectRelease();
  id result = (id)swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_8:
    id result = v3;
    goto LABEL_9;
  }
  id v3 = 0;
LABEL_9:
  *a2 = v3;
  return result;
}

uint64_t sub_24550CF20(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_24558F1C8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2456A1A40](i - 4, a3) : *(id *)(a3 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v12)
      {
        MEMORY[0x2456A11F0]();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24558E808();
        }
        sub_24558E858();
        sub_24558E7E8();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

void sub_24550D0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *v4;
  uint64_t v36 = (void *)v5[5];
  id v10 = objc_msgSend(v36, sel_elements);
  sub_24549808C(0, &qword_26B0D8D30);
  unint64_t v11 = sub_24558E7C8();

  uint64_t v38 = *(void *)(v9 + 80);
  uint64_t v39 = a3;
  uint64_t v40 = *(void *)(v9 + 88);
  uint64_t v41 = a4;
  uint64_t v42 = a2;
  uint64_t v12 = sub_24550AF1C(sub_24551E9C4, (uint64_t)v37, v11);
  swift_bridgeObjectRelease();
  id v13 = (id)v5[2];
  *(void *)&v44[0] = sub_24558F8C8();
  *((void *)&v44[0] + 1) = v14;
  swift_bridgeObjectRetain();
  id v15 = objc_msgSend(v13, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v15)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v44, 0, sizeof(v44));
  }
  sub_24549B610((uint64_t)v44, (uint64_t)v45, &qword_26B0DA230);
  if (!v45[3])
  {
    swift_bridgeObjectRelease();
    sub_24549B164((uint64_t)v45, &qword_26B0DA230);
    goto LABEL_10;
  }
  sub_24549808C(0, &qword_268EE3670);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9A0]), sel_init);
    uint64_t v19 = (void *)v5[2];
    id v17 = v18;
    id v20 = v19;
    v45[0] = sub_24558F8C8();
    v45[1] = v21;
    swift_bridgeObjectRetain();
    objc_msgSend(v20, sel___swift_setObject_forKeyedSubscript_, v17, sub_24558F728());
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    if (!v12) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  id v16 = v43;
  swift_bridgeObjectRelease();
  sub_24549808C(0, &qword_268EE3678);
  id v17 = (id)sub_24558EB28();

  if (!v12) {
    goto LABEL_13;
  }
LABEL_11:
  self;
  if (swift_dynamicCastObjCClass())
  {
    type metadata accessor for CompositeKeyedEncoding();
    uint64_t v22 = sub_24558F8C8();
    uint64_t v24 = v23;
    self;
    uint64_t v25 = swift_dynamicCastObjCClassUnconditional();
    uint64_t v27 = v5[3];
    uint64_t v26 = v5[4];
    uint64_t v28 = (void *)swift_allocObject();
    v28[6] = v22;
    v28[7] = v24;
    v28[2] = v17;
    v28[3] = v27;
    v28[4] = v26;
    v28[5] = v25;
    v45[0] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_24558F518();
    return;
  }
LABEL_13:
  type metadata accessor for CompositeKeyedEncoding();
  uint64_t v29 = sub_24558F8C8();
  uint64_t v31 = v30;
  uint64_t v33 = v5[3];
  uint64_t v32 = v5[4];
  v34 = (void *)swift_allocObject();
  v34[6] = v29;
  v34[7] = v31;
  v34[2] = v17;
  v34[3] = v33;
  v34[4] = v32;
  v34[5] = v36;
  v45[0] = v34;
  id v35 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_getWitnessTable();
  sub_24558F518();
  swift_release();
}

uint64_t sub_24550D544(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_name);
  uint64_t v2 = sub_24558E5D8();
  uint64_t v4 = v3;

  if (v2 == sub_24558F8C8() && v4 == v5) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24558F598();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_24550D610()
{
}

uint64_t sub_24550D66C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = sub_24558ECE8();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  char v7 = (char *)&v12 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v5);
  id v10 = (char *)&v12 - v9;
  sub_24558F8D8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v3);
    sub_24550D818(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v3);
  }
  return result;
}

uint64_t sub_24550D818@<X0>(void *a1@<X8>)
{
  uint64_t v4 = v1[6];
  uint64_t v3 = v1[7];
  uint64_t v5 = (void *)v1[5];
  uint64_t v6 = type metadata accessor for CompositeEncoder();
  char v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x263F8EE78];
  v7[4] = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  id v9 = v5;
  v7[5] = sub_2454D62F0(v8);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9A0]), sel_init);
  v7[2] = v4;
  v7[3] = v3;
  v7[6] = v9;
  v7[7] = v10;
  a1[3] = v6;
  uint64_t result = sub_2454ABFAC(qword_268EE3558, v11, (void (*)(uint64_t))type metadata accessor for CompositeEncoder);
  a1[4] = result;
  *a1 = v7;
  return result;
}

uint64_t sub_24550D8F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24550D938()
{
  sub_24550D8F8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompositeKeyedEncoding()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24550D984()
{
  return sub_2454ED4F4();
}

uint64_t sub_24550D9A0()
{
  return sub_24550B880();
}

uint64_t sub_24550D9C4()
{
  return sub_24550B958();
}

uint64_t sub_24550D9E8()
{
  return sub_24550BA50();
}

uint64_t sub_24550DA0C()
{
  return sub_24550BB50();
}

uint64_t sub_24550DA30()
{
  return sub_24550BC48();
}

uint64_t sub_24550DA54(uint64_t a1, uint64_t a2)
{
  return sub_24550BD40(a1, a2);
}

uint64_t sub_24550DA78(uint64_t a1, uint64_t a2)
{
  return sub_24550BD6C(a1, a2);
}

uint64_t sub_24550DA9C(uint64_t a1, uint64_t a2)
{
  return sub_24550BD98(a1, a2);
}

uint64_t sub_24550DAC0(uint64_t a1, uint64_t a2)
{
  return sub_24550BDC4(a1, a2);
}

uint64_t sub_24550DAE4(uint64_t a1, uint64_t a2)
{
  return sub_24550BDF0(a1, a2);
}

uint64_t sub_24550DB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24550DC14(a1, a2, a3, a4, a5, MEMORY[0x263F8E428]);
}

uint64_t sub_24550DB34(uint64_t a1, uint64_t a2)
{
  return sub_24550BE1C(a1, a2);
}

uint64_t sub_24550DB58(uint64_t a1, uint64_t a2)
{
  return sub_24550BE48(a1, a2);
}

uint64_t sub_24550DB7C(uint64_t a1, uint64_t a2)
{
  return sub_24550BF74(a1, a2);
}

uint64_t sub_24550DBA0(uint64_t a1, uint64_t a2)
{
  return sub_24550C0A0(a1, a2);
}

uint64_t sub_24550DBC4(uint64_t a1, uint64_t a2)
{
  return sub_24550C1CC(a1, a2);
}

uint64_t sub_24550DBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24550DC14(a1, a2, a3, a4, a5, MEMORY[0x263F8E430]);
}

uint64_t sub_24550DC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = type metadata accessor for CompositeKeyedEncoding();
  return a6(a1, a2, a3, v11, a5);
}

void sub_24550DC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_24550DCA8()
{
  return sub_24558F6E8();
}

uint64_t sub_24550DD18()
{
  return sub_24558F6C8();
}

uint64_t sub_24550DD70()
{
  return sub_24558F6B8();
}

uint64_t sub_24550DDD8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24550E154(a1, a2, a3, a4, a5, MEMORY[0x263F8E3B8]);
}

uint64_t sub_24550DE04(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24550E0B8(a1, a2, a3, a4, MEMORY[0x263F8E3C0]);
}

uint64_t sub_24550DE30(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24550E154(a1, a2, a3, a4, a5, MEMORY[0x263F8E3C8]);
}

uint64_t sub_24550DE5C(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24550DF90(a1, a2, a3, a4, MEMORY[0x263F8E3D8]);
}

uint64_t sub_24550DE88(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24550E024(a1, a2, a3, a4, MEMORY[0x263F8E3E0]);
}

uint64_t sub_24550DEB4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24550E0B8(a1, a2, a3, a4, MEMORY[0x263F8E3E8]);
}

uint64_t sub_24550DEE0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24550E154(a1, a2, a3, a4, a5, MEMORY[0x263F8E3F0]);
}

uint64_t sub_24550DF0C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24550E1F4(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8E400]);
}

uint64_t sub_24550DF38(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24550E154(a1, a2, a3, a4, a5, MEMORY[0x263F8E3D0]);
}

uint64_t sub_24550DF64(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24550DF90(a1, a2, a3, a4, MEMORY[0x263F8E3F8]);
}

uint64_t sub_24550DF90(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for CompositeKeyedEncoding();
  return a5(a1 & 0x1FF, a2, v9, a4);
}

uint64_t sub_24550DFF8(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24550E024(a1, a2, a3, a4, MEMORY[0x263F8E408]);
}

uint64_t sub_24550E024(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for CompositeKeyedEncoding();
  return a5(a1 & 0x1FFFF, a2, v9, a4);
}

uint64_t sub_24550E08C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24550E0B8(a1, a2, a3, a4, MEMORY[0x263F8E410]);
}

uint64_t sub_24550E0B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for CompositeKeyedEncoding();
  return a5(a1 | ((HIDWORD(a1) & 1) << 32), a2, v9, a4);
}

uint64_t sub_24550E128(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24550E154(a1, a2, a3, a4, a5, MEMORY[0x263F8E418]);
}

uint64_t sub_24550E154(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a2 & 1;
  uint64_t v11 = type metadata accessor for CompositeKeyedEncoding();
  return a6(a1, v10, a3, v11, a5);
}

uint64_t sub_24550E1C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24550E1F4(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8E420]);
}

uint64_t sub_24550E1F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = a3 & 1;
  uint64_t v13 = type metadata accessor for CompositeKeyedEncoding();
  return a7(a1, a2, v12, a4, v13, a6);
}

uint64_t sub_24550E278()
{
  return sub_24558F6D8();
}

void sub_24550E2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_24550E30C()
{
}

uint64_t sub_24550E330@<X0>(void *a1@<X8>)
{
  return sub_24550D66C(a1);
}

uint64_t sub_24550E354@<X0>(void *a1@<X8>)
{
  return sub_24550D818(a1);
}

uint64_t sub_24550E378(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  *(void *)(v3 + 40) = MEMORY[0x263F8EE88];
  uint64_t v5 = v3 + 40;
  *(void *)(v5 - 16) = a3;
  *(void *)(v5 - 8) = a1;
  *(void *)(v5 - 24) = a2;
  id v6 = a1;
  id v7 = objc_msgSend(v6, sel_allKeys);
  uint64_t v8 = sub_24558E7C8();

  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = v8 + 32;
    while (1)
    {
      sub_2454CE878(v10, (uint64_t)v15);
      if ((swift_dynamicCast() & 1) == 0) {
        break;
      }
      uint64_t v11 = v14[0];
      uint64_t v12 = v14[1];
      swift_beginAccess();
      sub_2454973AC(v14, v11, v12);
      swift_endAccess();
      swift_bridgeObjectRelease();
      v10 += 32;
      if (!--v9) {
        goto LABEL_5;
      }
    }
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();

    return v4;
  }
  return result;
}

uint64_t sub_24550E4EC()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3968);
  sub_24551E8EC();
  uint64_t v0 = sub_24558E708();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24550E5C4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_24558F8C8();
  char v4 = sub_2454A6C1C(v2, v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

BOOL sub_24550E67C()
{
  id v1 = *(id *)(v0 + 32);
  *(void *)&v5[0] = sub_24558F8C8();
  *((void *)&v5[0] + 1) = v2;
  swift_bridgeObjectRetain();
  id v3 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_24558F728(), v5[0]);
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_24549B164((uint64_t)v5, &qword_26B0DA230);
  swift_bridgeObjectRelease();
  return v3 == 0;
}

uint64_t sub_24550E79C()
{
  id v1 = *(id *)(v0 + 32);
  v11[0] = sub_24558F8C8();
  v11[1] = v2;
  swift_bridgeObjectRetain();
  id v3 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_24549B610((uint64_t)&v9, (uint64_t)v11, &qword_26B0DA230);
  swift_bridgeObjectRelease();
  sub_2454A1140((uint64_t)v11, (uint64_t)&v9);
  if (!*((void *)&v10 + 1))
  {
    sub_24549B164((uint64_t)&v9, &qword_26B0DA230);
    goto LABEL_9;
  }
  sub_24549808C(0, &qword_26B0DA1C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_24549B164((uint64_t)v11, &qword_26B0DA230);
    return 0;
  }

  uint64_t result = sub_2454A1140((uint64_t)v11, (uint64_t)&v7);
  if (v8)
  {
    sub_2454A0BBC(&v7, &v9);
    swift_dynamicCast();
    id v5 = objc_msgSend(v6, sel_BOOLValue);

    sub_24549B164((uint64_t)v11, &qword_26B0DA230);
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void sub_24550E9A4()
{
  id v1 = *(id *)(v0 + 32);
  *(void *)&long long v5 = sub_24558F8C8();
  *((void *)&v5 + 1) = v2;
  swift_bridgeObjectRetain();
  id v3 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v4, &v5);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_24550EADC()
{
  id v1 = *(id *)(v0 + 32);
  *(void *)&long long v5 = sub_24558F8C8();
  *((void *)&v5 + 1) = v2;
  swift_bridgeObjectRetain();
  id v3 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v4, &v5);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_24550EC18()
{
  id v1 = *(id *)(v0 + 32);
  *(void *)&long long v5 = sub_24558F8C8();
  *((void *)&v5 + 1) = v2;
  swift_bridgeObjectRetain();
  id v3 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v4, &v5);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_24550ED54()
{
}

void sub_24550ED74()
{
}

void sub_24550ED94()
{
}

void sub_24550EDB4()
{
}

void sub_24550EDD4()
{
}

void sub_24550EDF4()
{
}

void sub_24550EE14()
{
}

void sub_24550EE34()
{
  id v1 = *(id *)(v0 + 32);
  *(void *)&long long v5 = sub_24558F8C8();
  *((void *)&v5 + 1) = v2;
  swift_bridgeObjectRetain();
  id v3 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v4, &v5);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_24550EF70()
{
}

void sub_24550EF90()
{
  id v1 = *(id *)(v0 + 32);
  *(void *)&long long v5 = sub_24558F8C8();
  *((void *)&v5 + 1) = v2;
  swift_bridgeObjectRetain();
  id v3 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v4, &v5);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_24550F0CC()
{
}

void sub_24550F0EC()
{
  id v1 = *(id *)(v0 + 32);
  *(void *)&long long v5 = sub_24558F8C8();
  *((void *)&v5 + 1) = v2;
  swift_bridgeObjectRetain();
  id v3 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v4, &v5);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_24550F228()
{
}

void sub_24550F248()
{
  id v1 = *(id *)(v0 + 32);
  *(void *)&long long v5 = sub_24558F8C8();
  *((void *)&v5 + 1) = v2;
  swift_bridgeObjectRetain();
  id v3 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v4, &v5);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_24550F384(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v6 = *v4;
  uint64_t v35 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24558ECE8();
  uint64_t v32 = *(void *)(v33 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v33);
  long long v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = *(void *)(v6 + 80);
  uint64_t v14 = *(void *)(v6 + 88);
  id v15 = (id)v4[4];
  *(void *)&long long v39 = sub_24558F8C8();
  *((void *)&v39 + 1) = v16;
  swift_bridgeObjectRetain();
  id v17 = objc_msgSend(v15, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  swift_unknownObjectRelease();

  if (v17)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v39 = 0u;
    long long v40 = 0u;
  }
  sub_24549B610((uint64_t)&v39, (uint64_t)v42, &qword_26B0DA230);
  swift_bridgeObjectRelease();
  if (swift_conformsToProtocol2()) {
    uint64_t v18 = a2;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v18)
  {
    sub_2454A1140((uint64_t)v42, (uint64_t)&v39);
    if (*((void *)&v40 + 1))
    {
      if (swift_dynamicCast())
      {
        sub_2454A2F3C(v38[0], v38[1]);
        uint64_t v19 = v35;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v12, 1, 1, a2);
        sub_24550F950(v18, (uint64_t)v12, (uint64_t)v42, v13, a2, v18, v14);
        swift_beginAccess();
        uint64_t v20 = v32;
        uint64_t v21 = v33;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v10, v12, v33);
        sub_24549B610((uint64_t)v42, (uint64_t)&v39, &qword_26B0DA230);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, a2) == 1)
        {
          sub_24549B610((uint64_t)&v39, (uint64_t)v38, &qword_26B0DA230);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA230);
          swift_dynamicCast();
          (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v21);
        }
        else
        {
          sub_24549B164((uint64_t)&v39, &qword_26B0DA230);
          (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v37, v10, a2);
        }
        return;
      }
    }
    else
    {
      sub_24549B164((uint64_t)&v39, &qword_26B0DA230);
    }
  }
  sub_2454A1140((uint64_t)v42, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    sub_24549B164((uint64_t)&v39, &qword_26B0DA230);
    goto LABEL_18;
  }
  sub_24549808C(0, &qword_268EE3670);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    sub_24549B610((uint64_t)v42, (uint64_t)&v39, &qword_26B0DA230);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA230);
    swift_dynamicCast();
    return;
  }
  uint64_t v22 = (void *)v38[0];
  sub_24549808C(0, &qword_268EE3678);
  uint64_t v23 = (void *)sub_24558EB28();
  uint64_t v24 = type metadata accessor for CompositeDecoder();
  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v26 = MEMORY[0x263F8EE78];
  v25[2] = MEMORY[0x263F8EE78];
  id v27 = v23;
  v25[3] = sub_2454D62F0(v26);
  v25[4] = v27;
  *((void *)&v40 + 1) = v24;
  uint64_t v41 = sub_2454ABFAC(&qword_268EE3550, v28, (void (*)(uint64_t))type metadata accessor for CompositeDecoder);
  *(void *)&long long v39 = v25;
  swift_retain();
  uint64_t v29 = v34;
  uint64_t v30 = v43;
  sub_24558E988();
  sub_24549B164((uint64_t)v42, &qword_26B0DA230);

  swift_release();
  if (!v30) {
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v37, v29, a2);
  }
}

uint64_t sub_24550F950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v19[1] = a1;
  v19[2] = a7;
  uint64_t v12 = sub_24558ECE8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)v19 - v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getMetatypeMetadata();
  if (sub_24552CB74((uint64_t)&AssociatedTypeWitness))
  {
    sub_2454A1140(a3, (uint64_t)&AssociatedTypeWitness);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA230);
    int v16 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56))(v15, v16 ^ 1u, 1, a5);
    swift_beginAccess();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 40))(a2, v15, v12);
  }
  else
  {
    uint64_t v18 = dynamic_cast_existential_2_conditional(a6);
    if (v18)
    {
      return sub_24550FBE0(v18, a3, a2, a4, a5, a6, v18);
    }
    else
    {
      uint64_t AssociatedTypeWitness = 0;
      unint64_t v21 = 0xE000000000000000;
      sub_24558EF78();
      swift_bridgeObjectRelease();
      uint64_t AssociatedTypeWitness = 0xD00000000000001ALL;
      unint64_t v21 = 0x8000000245592330;
      sub_24558F908();
      sub_24558E668();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24558F1A8();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_24550FBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a3;
  uint64_t v26 = a5;
  uint64_t v9 = sub_24558ECE8();
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = *(void *)(a7 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v10);
  int v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v25 - v17;
  sub_24558DBC8();
  swift_allocObject();
  sub_24558DBB8();
  sub_2454A1140(a2, (uint64_t)&v32);
  if (v33)
  {
    sub_2454A0BBC(&v32, &v34);
    swift_dynamicCast();
    uint64_t v19 = v30;
    unint64_t v20 = v31;
    sub_24558DBA8();
    swift_release();
    sub_2454A2F3C(v19, v20);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v18, a7);
    uint64_t v21 = v26;
    int v22 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, v22 ^ 1u, 1, v21);
    uint64_t v23 = v29;
    swift_beginAccess();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 40))(v23, v12, v28);
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void sub_24550FEA4()
{
  uint64_t v1 = v0;
  id v2 = *(id *)(v0 + 32);
  *(void *)&v10[0] = sub_24558F8C8();
  *((void *)&v10[0] + 1) = v3;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_24558F728(), v10[0]);
  swift_unknownObjectRelease();

  if (v4)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_24549B610((uint64_t)v10, (uint64_t)v11, &qword_26B0DA230);
  if (!v11[3])
  {
    swift_bridgeObjectRelease();
    sub_24549B164((uint64_t)v11, &qword_26B0DA230);
LABEL_9:
    id v6 = *(id *)(v0 + 32);
    goto LABEL_10;
  }
  sub_24549808C(0, &qword_268EE3670);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  long long v5 = (void *)v11[5];
  swift_bridgeObjectRelease();
  sub_24549808C(0, &qword_268EE3678);
  id v6 = (id)sub_24558EB28();

LABEL_10:
  type metadata accessor for CompositeKeyedDecoding();
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  swift_allocObject();
  id v9 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11[0] = sub_24550E378(v9, v8, v7);
  swift_retain();
  swift_getWitnessTable();
  sub_24558F3E8();
  swift_release();
}

void sub_245510120()
{
}

uint64_t sub_24551017C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = sub_24558ECE8();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v12 - v9;
  sub_24558F8D8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v3);
    sub_245510338((uint64_t)v10, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v3);
  }
  return result;
}

uint64_t sub_245510338@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = (void *)v2[4];
  uint64_t v6 = type metadata accessor for CompositeDecoder();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x263F8EE78];
  v7[2] = MEMORY[0x263F8EE78];
  id v9 = v5;
  v7[3] = sub_2454D62F0(v8);
  v7[4] = v9;
  uint64_t v10 = v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3808);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_245597620;
  uint64_t v12 = *(void *)(v4 + 80);
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 64) = *(void *)(v4 + 88);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(boxed_opaque_existential_2Tm, a1, v12);
  swift_bridgeObjectRetain();
  sub_245565140(inited);
  v7[2] = v10;
  swift_bridgeObjectRelease();
  a2[3] = v6;
  uint64_t result = sub_2454ABFAC(&qword_268EE3550, v14, (void (*)(uint64_t))type metadata accessor for CompositeDecoder);
  a2[4] = result;
  *a2 = v7;
  return result;
}

uint64_t sub_2455104EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_245510524()
{
  sub_2455104EC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompositeKeyedDecoding()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24551056C()
{
  return sub_24550E4EC();
}

uint64_t sub_245510590()
{
  return sub_24550E5C4() & 1;
}

BOOL sub_2455105B8()
{
  return sub_24550E67C();
}

uint64_t sub_2455105E0()
{
  return sub_24550E79C() & 1;
}

void sub_245510608()
{
}

void sub_24551062C()
{
}

void sub_245510650()
{
}

void sub_245510674()
{
}

void sub_245510698()
{
}

void sub_2455106BC()
{
}

void sub_2455106E0()
{
}

void sub_245510704()
{
}

uint64_t sub_245510728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510834(a1, a2, a3, MEMORY[0x263F8E3A8]);
}

void sub_245510754()
{
}

void sub_245510778()
{
}

void sub_24551079C()
{
}

void sub_2455107C0()
{
}

void sub_2455107E4()
{
}

uint64_t sub_245510808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510834(a1, a2, a3, MEMORY[0x263F8E3B0]);
}

uint64_t sub_245510834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for CompositeKeyedDecoding();
  return a4(a1, v7, a3);
}

void sub_245510890(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
}

uint64_t sub_2455108B4()
{
  return sub_24558F628();
}

uint64_t sub_245510908()
{
  return sub_24558F618();
}

uint64_t sub_24551095C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510CF0(a1, a2, a3, MEMORY[0x263F8E338]);
}

uint64_t sub_245510988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510C4C(a1, a2, a3, MEMORY[0x263F8E340]);
}

uint64_t sub_2455109B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510CF0(a1, a2, a3, MEMORY[0x263F8E348]);
}

uint64_t sub_2455109E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510B14(a1, a2, a3, MEMORY[0x263F8E358]);
}

uint64_t sub_245510A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510BB0(a1, a2, a3, MEMORY[0x263F8E360]);
}

uint64_t sub_245510A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510C4C(a1, a2, a3, MEMORY[0x263F8E368]);
}

uint64_t sub_245510A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510CF0(a1, a2, a3, MEMORY[0x263F8E370]);
}

uint64_t sub_245510A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510D84(a1, a2, a3, MEMORY[0x263F8E380]);
}

uint64_t sub_245510ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510CF0(a1, a2, a3, MEMORY[0x263F8E350]);
}

uint64_t sub_245510AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510B14(a1, a2, a3, MEMORY[0x263F8E378]);
}

uint64_t sub_245510B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for CompositeKeyedDecoding();
  return a4(a1, v7, a3) & 0x1FF;
}

uint64_t sub_245510B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510BB0(a1, a2, a3, MEMORY[0x263F8E388]);
}

uint64_t sub_245510BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for CompositeKeyedDecoding();
  return a4(a1, v7, a3) & 0x1FFFF;
}

uint64_t sub_245510C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510C4C(a1, a2, a3, MEMORY[0x263F8E390]);
}

uint64_t sub_245510C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for CompositeKeyedDecoding();
  unint64_t v8 = a4(a1, v7, a3);
  return v8 | ((HIDWORD(v8) & 1) << 32);
}

uint64_t sub_245510CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510CF0(a1, a2, a3, MEMORY[0x263F8E398]);
}

uint64_t sub_245510CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for CompositeKeyedDecoding();
  uint64_t result = a4(a1, v8, a3);
  if (v4) {
    return v10;
  }
  return result;
}

uint64_t sub_245510D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245510D84(a1, a2, a3, MEMORY[0x263F8E3A0]);
}

uint64_t sub_245510D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for CompositeKeyedDecoding();
  uint64_t result = a4(a1, v8, a3);
  if (v4) {
    return v10;
  }
  return result;
}

uint64_t sub_245510DF0()
{
  return sub_24558F668();
}

void sub_245510E70()
{
}

void sub_245510E94()
{
}

uint64_t sub_245510EB8@<X0>(void *a1@<X8>)
{
  return sub_24551017C(a1);
}

uint64_t sub_245510EDC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_245510338(a1, a2);
}

uint64_t sub_245510F00()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  swift_bridgeObjectRetain_n();
  id v2 = v1;
  objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, 0, sub_24558F728(), v4, v5);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_245510F94()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  id v4 = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_24558E908();
  swift_bridgeObjectRetain();
  objc_msgSend(v4, sel___swift_setObject_forKeyedSubscript_, v5, sub_24558F728(), v3, v2);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_245511048()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  id v4 = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_24558E5A8();
  swift_bridgeObjectRetain();
  objc_msgSend(v4, sel___swift_setObject_forKeyedSubscript_, v5, sub_24558F728(), v3, v2);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_245511104()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  id v4 = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_24558E978();
  swift_bridgeObjectRetain();
  objc_msgSend(v4, sel___swift_setObject_forKeyedSubscript_, v5, sub_24558F728(), v3, v2);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_2455111C0()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  id v4 = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_24558E998();
  swift_bridgeObjectRetain();
  objc_msgSend(v4, sel___swift_setObject_forKeyedSubscript_, v5, sub_24558F728(), v3, v2);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24551127C(uint64_t a1)
{
  return sub_245511668(a1, MEMORY[0x263F07BE0]);
}

uint64_t sub_2455112A8(uint64_t a1)
{
  return sub_2455113B0(a1, MEMORY[0x263F07DF0]);
}

uint64_t sub_2455112D4(uint64_t a1)
{
  return sub_245511498(a1, MEMORY[0x263F07DF8]);
}

uint64_t sub_245511300(uint64_t a1)
{
  return sub_245511580(a1, MEMORY[0x263F07E08]);
}

uint64_t sub_24551132C(uint64_t a1)
{
  return sub_245511668(a1, MEMORY[0x263F07E10]);
}

uint64_t sub_245511358(uint64_t a1)
{
  return sub_245511668(a1, MEMORY[0x263F07D78]);
}

uint64_t sub_245511384(uint64_t a1)
{
  return sub_2455113B0(a1, MEMORY[0x263F07E28]);
}

uint64_t sub_2455113B0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = (void *)v2[4];
  uint64_t v7 = v2[6];
  uint64_t v6 = v2[7];
  id v8 = v5;
  swift_bridgeObjectRetain();
  id v9 = (void *)a2(a1);
  swift_bridgeObjectRetain();
  objc_msgSend(v8, sel___swift_setObject_forKeyedSubscript_, v9, sub_24558F728(), v7, v6);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24551146C(uint64_t a1)
{
  return sub_245511498(a1, MEMORY[0x263F07E30]);
}

uint64_t sub_245511498(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = (void *)v2[4];
  uint64_t v7 = v2[6];
  uint64_t v6 = v2[7];
  id v8 = v5;
  swift_bridgeObjectRetain();
  id v9 = (void *)a2(a1);
  swift_bridgeObjectRetain();
  objc_msgSend(v8, sel___swift_setObject_forKeyedSubscript_, v9, sub_24558F728(), v7, v6);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_245511554(uint64_t a1)
{
  return sub_245511580(a1, MEMORY[0x263F07E38]);
}

uint64_t sub_245511580(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = (void *)v2[4];
  uint64_t v7 = v2[6];
  uint64_t v6 = v2[7];
  id v8 = v5;
  swift_bridgeObjectRetain();
  id v9 = (void *)a2(a1);
  swift_bridgeObjectRetain();
  objc_msgSend(v8, sel___swift_setObject_forKeyedSubscript_, v9, sub_24558F728(), v7, v6);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_24551163C(uint64_t a1)
{
  return sub_245511668(a1, MEMORY[0x263F07E48]);
}

uint64_t sub_245511668(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = (void *)v2[4];
  uint64_t v7 = v2[6];
  uint64_t v6 = v2[7];
  id v8 = v5;
  swift_bridgeObjectRetain();
  id v9 = (void *)a2(a1);
  swift_bridgeObjectRetain();
  objc_msgSend(v8, sel___swift_setObject_forKeyedSubscript_, v9, sub_24558F728(), v7, v6);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_245511724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v19[6] = a3;
  uint64_t v5 = v3[6];
  uint64_t v4 = v3[7];
  uint64_t v6 = (void *)v3[5];
  uint64_t v7 = type metadata accessor for CompositeEncoder();
  id v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8EE78];
  v8[4] = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  id v10 = v6;
  v8[5] = sub_2454D62F0(v9);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9A0]), sel_init);
  v8[2] = v5;
  v8[3] = v4;
  v8[6] = v10;
  v8[7] = v11;
  void v19[3] = v7;
  v19[4] = sub_2454ABFAC(qword_268EE3558, v12, (void (*)(uint64_t))type metadata accessor for CompositeEncoder);
  v19[0] = v8;
  swift_retain();
  sub_24558E4B8();
  if (v18)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v19);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v19);
    uint64_t v14 = (void *)v8[7];
    uint64_t v15 = (void *)v3[4];
    v19[0] = v5;
    v19[1] = v4;
    swift_bridgeObjectRetain_n();
    id v16 = v14;
    id v17 = v15;
    objc_msgSend(v17, sel___swift_setObject_forKeyedSubscript_, v16, sub_24558F728());
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    return swift_release();
  }
}

uint64_t sub_2455118D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompositeSingleValueEncoding()
{
  return self;
}

uint64_t sub_245511954()
{
  return sub_245510F00();
}

uint64_t sub_245511978()
{
  return sub_245510F94();
}

uint64_t sub_24551199C()
{
  return sub_245511048();
}

uint64_t sub_2455119C0()
{
  return sub_245511104();
}

uint64_t sub_2455119E4()
{
  return sub_2455111C0();
}

uint64_t sub_245511A08(uint64_t a1)
{
  return sub_24551127C(a1);
}

uint64_t sub_245511A2C(uint64_t a1)
{
  return sub_2455112A8(a1);
}

uint64_t sub_245511A50(uint64_t a1)
{
  return sub_2455112D4(a1);
}

uint64_t sub_245511A74(uint64_t a1)
{
  return sub_245511300(a1);
}

uint64_t sub_245511A98(uint64_t a1)
{
  return sub_24551132C(a1);
}

uint64_t sub_245511ABC()
{
  return sub_24558F5D8();
}

uint64_t sub_245511AD4(uint64_t a1)
{
  return sub_245511358(a1);
}

uint64_t sub_245511AF8(uint64_t a1)
{
  return sub_245511384(a1);
}

uint64_t sub_245511B1C(uint64_t a1)
{
  return sub_24551146C(a1);
}

uint64_t sub_245511B40(uint64_t a1)
{
  return sub_245511554(a1);
}

uint64_t sub_245511B64(uint64_t a1)
{
  return sub_24551163C(a1);
}

uint64_t sub_245511B88()
{
  return sub_24558F5E8();
}

uint64_t sub_245511BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245511724(a1, a2, a3);
}

uint64_t sub_245511BC4()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_allKeys);
  uint64_t v2 = sub_24558E7C8();

  if (*(void *)(v2 + 16))
  {
    sub_2454CE878(v2 + 32, (uint64_t)&v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (*((void *)&v6 + 1))
    {
      sub_2454A0BBC(&v5, &v7);
      swift_dynamicCast();
      return v4;
    }
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
    uint64_t result = swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_245511C88()
{
  id v1 = *(void **)(v0 + 16);
  type metadata accessor for CompositeDecoder();
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8EE78];
  v2[2] = MEMORY[0x263F8EE78];
  id v4 = v1;
  v2[3] = sub_2454D62F0(v3);
  v2[4] = v4;
  sub_2454ABFAC(&qword_268EE3550, v5, (void (*)(uint64_t))type metadata accessor for CompositeDecoder);
  return sub_24558E988();
}

uint64_t sub_245511D6C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompositeSingleValueDecoding()
{
  return self;
}

uint64_t sub_245511DD8()
{
  return 0;
}

uint64_t sub_245511DE0()
{
  return sub_24551E110() & 1;
}

uint64_t sub_245511E08()
{
  return sub_24551E1FC();
}

uint64_t sub_245511E2C()
{
  return sub_24551E2EC();
}

uint64_t sub_245511E50()
{
  return sub_24551E3E0();
}

uint64_t sub_245511E74()
{
  return sub_24551E798();
}

uint64_t sub_245511EA0()
{
  return sub_24551E4D4();
}

uint64_t sub_245511ECC()
{
  return sub_24551E5C0();
}

uint64_t sub_245511EF8()
{
  return sub_24551E6AC();
}

uint64_t sub_245511F24()
{
  return sub_24551E798();
}

uint64_t sub_245511F50()
{
  return sub_24558F5B8();
}

uint64_t sub_245511F68()
{
  return sub_24551E798();
}

uint64_t sub_245511F94()
{
  return sub_24551E4D4();
}

uint64_t sub_245511FC0()
{
  return sub_24551E5C0();
}

uint64_t sub_245511FEC()
{
  return sub_24551E6AC();
}

uint64_t sub_245512018()
{
  return sub_24551E798();
}

uint64_t sub_245512044()
{
  return sub_24558F5C8();
}

uint64_t sub_24551205C()
{
  return sub_245511C88();
}

void sub_245512080()
{
}

void sub_2455120DC()
{
}

void sub_245512138()
{
}

void sub_245512148()
{
}

void *sub_245512158(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_245497204(a1, a2, a3, a4, a5);
}

void sub_2455121C4()
{
}

void sub_245512220()
{
}

void sub_24551227C()
{
}

void sub_24551228C()
{
}

void sub_24551229C()
{
  id v1 = (void *)sub_24558E908();
  uint64_t v2 = *(void **)(v0 + 16);
  id v3 = v1;
  sub_24558F8C8();
  id v4 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
}

void sub_245512360(double a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a1);
  sub_24558F8C8();
  id v4 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
}

void sub_245512430(float a1)
{
  id v3 = *(void **)(v1 + 16);
  id v4 = objc_allocWithZone(NSNumber);
  *(float *)&double v5 = a1;
  id v6 = objc_msgSend(v4, sel_initWithFloat_, v5);
  sub_24558F8C8();
  long long v7 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setValue_forKey_, v6, v7);
}

void sub_245512500(char a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithChar_, a1);
  sub_24558F8C8();
  id v4 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
}

void sub_2455125C8(uint64_t a1, uint64_t a2)
{
}

void sub_2455125E8(uint64_t a1, uint64_t a2)
{
}

void sub_245512608(uint64_t a1, uint64_t a2)
{
}

void sub_245512628(unsigned __int8 a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedChar_, a1);
  sub_24558F8C8();
  id v4 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
}

void sub_2455126F0(unsigned __int16 a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedShort_, a1);
  sub_24558F8C8();
  id v4 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
}

void sub_2455127B8(uint64_t a1, uint64_t a2)
{
}

void sub_2455127D8(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = *(void **)(v3 + 16);
  id v5 = objc_msgSend(objc_allocWithZone(NSNumber), *a3, a1);
  sub_24558F8C8();
  id v6 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setValue_forKey_, v5, v6);
}

void sub_2455128A8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_2455128C8()
{
  type metadata accessor for ManagedObjectKeyedEncoding();
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  id v6 = v0 + 4;
  uint64_t v4 = v0[4];
  uint64_t v5 = v6[1];
  id v7 = v1;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2454B254C(v7, v5, v2, v3, v4);

  swift_getWitnessTable();
  return sub_24558F518();
}

void sub_2455129E0()
{
}

uint64_t sub_245512A3C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = sub_24558ECE8();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  id v7 = (char *)&v12 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v5);
  id v10 = (char *)&v12 - v9;
  sub_24558F8D8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v3);
    sub_245512BE8(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v3);
  }
  return result;
}

uint64_t sub_245512BE8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ManagedObjectEncoder();
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v7 = v1 + 32;
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v7 + 8);
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8EE78];
  v8[2] = MEMORY[0x263F8EE78];
  id v10 = v4;
  swift_retain();
  swift_retain();
  v8[3] = sub_2454D62F0(v9);
  v8[4] = v5;
  v8[5] = v10;
  v8[6] = v6;
  a1[3] = v3;
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  *a1 = v8;
  return result;
}

void sub_245512CCC(uint64_t a1, void *a2)
{
  sub_24549808C(0, &qword_268EE3678);
  id v3 = (id)sub_24558EB28();
  id v4 = objc_msgSend(a2, sel_userInfo);
  id v38 = v3;
  if (!v4)
  {
    long long v42 = 0u;
    long long v43 = 0u;
LABEL_11:

    sub_24549B164((uint64_t)&v42, &qword_26B0DA230);
    goto LABEL_18;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_24558E428();

  uint64_t v39 = 1836412517;
  sub_24558EF28();
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_2454B9F18((uint64_t)&v40), (v8 & 1) != 0))
  {
    sub_2454CE878(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v42);
  }
  else
  {
    long long v42 = 0u;
    long long v43 = 0u;
  }
  sub_2454BA024((uint64_t)&v40);
  swift_bridgeObjectRelease();
  if (!*((void *)&v43 + 1)) {
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9F58);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_18;
  }
  uint64_t v9 = (void *)v40;
  id v10 = objc_msgSend(v3, sel_allKeys);

  uint64_t v11 = sub_24558E7C8();
  if (*(void *)(v11 + 16))
  {
    sub_2454CE878(v11 + 32, (uint64_t)&v42);
  }
  else
  {
    long long v42 = 0u;
    long long v43 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v43 + 1))
  {
    sub_2454A0BBC(&v42, &v40);
    uint64_t v12 = MEMORY[0x263F8D310];
    swift_dynamicCast();
    char v13 = sub_2454A5B1C(1836412517, 0xE400000000000000, v9);
    swift_bridgeObjectRelease();
    if (v13)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3950);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_245597620;
      *(void *)(v14 + 32) = 1836412517;
      *(void *)(v14 + 40) = 0xE400000000000000;
      *(void *)(v14 + 88) = v12;
      *(void *)(v14 + 56) = v12;
      *(void *)(v14 + 64) = 1836412517;
      *(void *)(v14 + 72) = 0xE400000000000000;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_24558EB48();

      id v38 = (id)v15;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_18:
    id v16 = objc_msgSend(a2, sel_elements);
    sub_24549808C(0, &qword_26B0D8D30);
    unint64_t v17 = sub_24558E7C8();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_24558F1C8();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18)
      {
LABEL_20:
        if (v18 >= 1)
        {
          uint64_t v19 = 0;
          unint64_t v20 = v17 & 0xC000000000000001;
          uint64_t v21 = &qword_26B0DA230;
          unint64_t v37 = v17;
          uint64_t v36 = v18;
          while (1)
          {
            if (v20) {
              id v22 = (id)MEMORY[0x2456A1A40](v19, v17);
            }
            else {
              id v22 = *(id *)(v17 + 8 * v19 + 32);
            }
            id v23 = v22;
            self;
            if (swift_dynamicCastObjCClass())
            {
              uint64_t v24 = v21;
              id v25 = objc_msgSend(v23, sel_name);
              uint64_t v26 = sub_24558E5D8();
              uint64_t v28 = v27;

              *(void *)&long long v42 = v26;
              *((void *)&v42 + 1) = v28;
              swift_bridgeObjectRetain();
              id v29 = objc_msgSend(v38, sel___swift_objectForKeyedSubscript_, sub_24558F728());
              swift_unknownObjectRelease();
              if (v29)
              {
                sub_24558ED88();
                swift_unknownObjectRelease();
              }
              else
              {
                long long v42 = 0u;
                long long v43 = 0u;
              }
              uint64_t v21 = v24;
              sub_24549B610((uint64_t)&v42, (uint64_t)&v40, v24);
              if (!v41)
              {
                swift_bridgeObjectRelease();

                sub_24549B164((uint64_t)&v40, v24);
                goto LABEL_24;
              }
              sub_24549808C(0, &qword_268EE3670);
              if (swift_dynamicCast())
              {
                swift_bridgeObjectRelease();
                id v30 = objc_msgSend(v23, sel_name);
                uint64_t v31 = sub_24558E5D8();
                uint64_t v33 = v32;

                self;
                uint64_t v34 = swift_dynamicCastObjCClassUnconditional();
                id v23 = v23;
                uint64_t v35 = (void *)sub_245512CCC(v39, v34);

                *(void *)&long long v40 = v31;
                *((void *)&v40 + 1) = v33;
                swift_bridgeObjectRetain();
                objc_msgSend(v38, sel___swift_setObject_forKeyedSubscript_, v35, sub_24558F728());
                uint64_t v18 = v36;
                unint64_t v17 = v37;
                swift_bridgeObjectRelease();

                uint64_t v21 = v24;
                swift_unknownObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }

LABEL_24:
            if (v18 == ++v19) {
              goto LABEL_37;
            }
          }
        }
        __break(1u);
        goto LABEL_39;
      }
    }
LABEL_37:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_24551327C()
{
  return swift_bridgeObjectRetain();
}

void sub_245513288()
{
}

void sub_2455132AC(double a1)
{
}

void sub_2455132D0(float a1)
{
}

void sub_2455132F4(char a1)
{
}

void sub_245513318(uint64_t a1, uint64_t a2)
{
}

void sub_24551333C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_245513360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24551346C(a1, a2, a3, a4, a5, MEMORY[0x263F8E428]);
}

void sub_24551338C(uint64_t a1, uint64_t a2)
{
}

void sub_2455133B0(unsigned __int8 a1)
{
}

void sub_2455133D4(unsigned __int16 a1)
{
}

void sub_2455133F8(uint64_t a1, uint64_t a2)
{
}

void sub_24551341C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_245513440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24551346C(a1, a2, a3, a4, a5, MEMORY[0x263F8E430]);
}

uint64_t sub_24551346C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = type metadata accessor for ManagedObjectKeyedEncoding();
  return a6(a1, a2, a3, v11, a5);
}

uint64_t sub_2455134EC()
{
  return sub_24558F6E8();
}

uint64_t sub_24551356C()
{
  return sub_24558F6C8();
}

uint64_t sub_2455135D4()
{
  return sub_24558F6B8();
}

uint64_t sub_24551364C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2455139F8(a1, a2, a3, a4, a5, MEMORY[0x263F8E3B8]);
}

uint64_t sub_245513678(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551394C(a1, a2, a3, a4, MEMORY[0x263F8E3C0]);
}

uint64_t sub_2455136A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2455139F8(a1, a2, a3, a4, a5, MEMORY[0x263F8E3C8]);
}

uint64_t sub_2455136D0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245513804(a1, a2, a3, a4, MEMORY[0x263F8E3D8]);
}

uint64_t sub_2455136FC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2455138A8(a1, a2, a3, a4, MEMORY[0x263F8E3E0]);
}

uint64_t sub_245513728(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551394C(a1, a2, a3, a4, MEMORY[0x263F8E3E8]);
}

uint64_t sub_245513754(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2455139F8(a1, a2, a3, a4, a5, MEMORY[0x263F8E3F0]);
}

uint64_t sub_245513780(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_245513AA4(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8E400]);
}

uint64_t sub_2455137AC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2455139F8(a1, a2, a3, a4, a5, MEMORY[0x263F8E3D0]);
}

uint64_t sub_2455137D8(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245513804(a1, a2, a3, a4, MEMORY[0x263F8E3F8]);
}

uint64_t sub_245513804(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for ManagedObjectKeyedEncoding();
  return a5(a1 & 0x1FF, a2, v9, a4);
}

uint64_t sub_24551387C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2455138A8(a1, a2, a3, a4, MEMORY[0x263F8E408]);
}

uint64_t sub_2455138A8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for ManagedObjectKeyedEncoding();
  return a5(a1 & 0x1FFFF, a2, v9, a4);
}

uint64_t sub_245513920(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551394C(a1, a2, a3, a4, MEMORY[0x263F8E410]);
}

uint64_t sub_24551394C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for ManagedObjectKeyedEncoding();
  return a5(a1 | ((HIDWORD(a1) & 1) << 32), a2, v9, a4);
}

uint64_t sub_2455139CC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2455139F8(a1, a2, a3, a4, a5, MEMORY[0x263F8E418]);
}

uint64_t sub_2455139F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a2 & 1;
  uint64_t v11 = type metadata accessor for ManagedObjectKeyedEncoding();
  return a6(a1, v10, a3, v11, a5);
}

uint64_t sub_245513A78(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_245513AA4(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8E420]);
}

uint64_t sub_245513AA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = a3 & 1;
  uint64_t v13 = type metadata accessor for ManagedObjectKeyedEncoding();
  return a7(a1, a2, v12, a4, v13, a6);
}

uint64_t sub_245513B34()
{
  return sub_24558F6D8();
}

uint64_t sub_245513BB4()
{
  return sub_2455128C8();
}

void sub_245513BD8()
{
}

uint64_t sub_245513BFC@<X0>(void *a1@<X8>)
{
  return sub_245512A3C(a1);
}

uint64_t sub_245513C20@<X0>(void *a1@<X8>)
{
  return sub_245512BE8(a1);
}

uint64_t sub_245513C44()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3968);
  sub_24551E8EC();
  uint64_t v0 = sub_24558E708();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_245513D50()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_24558F8C8();
  uint64_t v2 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_24549B610((uint64_t)&v9, (uint64_t)v11, &qword_26B0DA230);
  sub_2454A1140((uint64_t)v11, (uint64_t)&v9);
  if (!*((void *)&v10 + 1))
  {
    sub_24549B164((uint64_t)&v9, &qword_26B0DA230);
    goto LABEL_9;
  }
  sub_24549808C(0, &qword_26B0DA1C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_24549B164((uint64_t)v11, &qword_26B0DA230);
    return 0;
  }

  uint64_t result = sub_2454A1140((uint64_t)v11, (uint64_t)&v7);
  if (v8)
  {
    sub_2454A0BBC(&v7, &v9);
    swift_dynamicCast();
    id v5 = objc_msgSend(v6, sel_BOOLValue);

    sub_24549B164((uint64_t)v11, &qword_26B0DA230);
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void sub_245513F20()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_24558F8C8();
  uint64_t v2 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v5, &v6);
    sub_24549808C(0, &qword_26B0DA1C8);
    swift_dynamicCast();
    id v4 = v7;
    objc_msgSend(v7, sel_doubleValue);
  }
  else
  {
    __break(1u);
  }
}

void sub_245514050()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_24558F8C8();
  uint64_t v2 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v5, &v6);
    sub_24549808C(0, &qword_26B0DA1C8);
    swift_dynamicCast();
    id v4 = v7;
    objc_msgSend(v7, sel_floatValue);
  }
  else
  {
    __break(1u);
  }
}

void sub_245514180()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_24558F8C8();
  uint64_t v2 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v5, &v6);
    sub_24549808C(0, &qword_26B0DA1C8);
    swift_dynamicCast();
    objc_msgSend(v4, sel_charValue);
  }
  else
  {
    __break(1u);
  }
}

void sub_2455142A8(uint64_t a1)
{
}

void sub_2455142C8(uint64_t a1)
{
}

void sub_2455142E8(uint64_t a1)
{
}

void sub_245514308()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_24558F8C8();
  uint64_t v2 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v5, &v6);
    sub_24549808C(0, &qword_26B0DA1C8);
    swift_dynamicCast();
    objc_msgSend(v4, sel_unsignedCharValue);
  }
  else
  {
    __break(1u);
  }
}

void sub_245514430()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_24558F8C8();
  uint64_t v2 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v5, &v6);
    sub_24549808C(0, &qword_26B0DA1C8);
    swift_dynamicCast();
    objc_msgSend(v4, sel_unsignedShortValue);
  }
  else
  {
    __break(1u);
  }
}

void sub_245514558(uint64_t a1)
{
}

void sub_245514578(uint64_t a1, SEL *a2)
{
  id v4 = *(void **)(v2 + 16);
  sub_24558F8C8();
  long long v5 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_valueForKey_, v5);

  if (v6)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v8, &v9);
    sub_24549808C(0, &qword_26B0DA1C8);
    swift_dynamicCast();
    id v7 = v10;
    [v10 *a2];
  }
  else
  {
    __break(1u);
  }
}

void sub_2455146A8(uint64_t a1)
{
}

uint64_t sub_2455146C8()
{
  type metadata accessor for ManagedObjectKeyedDecoding();
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  id v4 = (void *)v0[2];
  uint64_t v5 = v0[3];
  swift_allocObject();
  id v6 = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_245497204(v6, v1, v2, v3, v5);
  swift_getWitnessTable();
  return sub_24558F3E8();
}

void sub_2455147F0()
{
}

uint64_t sub_24551484C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = sub_24558ECE8();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  id v7 = (char *)&v12 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v5);
  id v10 = (char *)&v12 - v9;
  sub_24558F8D8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v3);
    sub_245514A08(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v3);
  }
  return result;
}

uint64_t sub_245514A08@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ManagedObjectDecoder();
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v7 = v1 + 24;
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v7 + 8);
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8EE78];
  v8[2] = MEMORY[0x263F8EE78];
  id v10 = v4;
  swift_retain();
  swift_retain();
  v8[3] = sub_2454D62F0(v9);
  v8[4] = v10;
  v8[5] = v5;
  v8[6] = v6;
  a1[3] = v3;
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  *a1 = v8;
  return result;
}

void sub_245514AF4(uint64_t a1, void *a2)
{
  sub_24549808C(0, &qword_268EE3678);
  id v3 = (id)sub_24558EB28();
  id v4 = objc_msgSend(a2, sel_userInfo);
  uint64_t v5 = MEMORY[0x263F8EE58];
  if (!v4)
  {
    long long v50 = 0u;
    long long v51 = 0u;

    uint64_t v10 = v5;
LABEL_18:
    sub_24549B164((uint64_t)&v50, &qword_26B0DA230);
LABEL_19:
    id v12 = objc_msgSend(a2, sel_elements);
    sub_24549808C(0, &qword_26B0D8D30);
    unint64_t v13 = sub_24558E7C8();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_24558F1C8();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_21:
        if (v14 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v15 = 0;
        unint64_t v46 = v13;
        unint64_t v47 = v13 & 0xC000000000000001;
        id v16 = &qword_26B0DA230;
        uint64_t v45 = v10 + 8;
        do
        {
          if (v47) {
            id v17 = (id)MEMORY[0x2456A1A40](v15, v13);
          }
          else {
            id v17 = *(id *)(v13 + 8 * v15 + 32);
          }
          uint64_t v18 = v17;
          self;
          uint64_t v19 = swift_dynamicCastObjCClass();
          if (!v19)
          {

            goto LABEL_25;
          }
          unint64_t v20 = (void *)v19;
          uint64_t v21 = v14;
          id v22 = v16;
          id v23 = v18;
          id v24 = objc_msgSend(v20, sel_name);
          uint64_t v25 = sub_24558E5D8();
          uint64_t v27 = v26;

          *(void *)&long long v50 = v25;
          *((void *)&v50 + 1) = v27;
          swift_bridgeObjectRetain();
          id v28 = objc_msgSend(v3, sel___swift_objectForKeyedSubscript_, sub_24558F728());
          swift_unknownObjectRelease();
          if (v28)
          {
            sub_24558ED88();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v50 = 0u;
            long long v51 = 0u;
          }
          id v16 = v22;
          sub_24549B610((uint64_t)&v50, (uint64_t)&v52, v22);
          if (v53)
          {
            sub_24549808C(0, &qword_268EE3670);
            if (swift_dynamicCast())
            {
              id v29 = (void *)v49;
              swift_bridgeObjectRelease();
              id v30 = objc_msgSend(v20, sel_userInfo);
              if (v30)
              {
                uint64_t v31 = v30;
                uint64_t v32 = sub_24558E428();

                *(void *)&long long v49 = 0x657079546D756E45;
                *((void *)&v49 + 1) = 0xE800000000000000;
                sub_24558EF28();
                if (*(void *)(v32 + 16) && (unint64_t v33 = sub_2454B9F18((uint64_t)&v52), (v34 & 1) != 0))
                {
                  sub_2454CE878(*(void *)(v32 + 56) + 32 * v33, (uint64_t)&v50);
                }
                else
                {
                  long long v50 = 0u;
                  long long v51 = 0u;
                }
                sub_2454BA024((uint64_t)&v52);
                swift_bridgeObjectRelease();
                if (*((void *)&v51 + 1))
                {
                  if (swift_dynamicCast() && (v52 & 1) != 0 && !objc_msgSend(v29, sel_count))
                  {
                    id v35 = objc_msgSend(v20, sel_name);
                    uint64_t v36 = sub_24558E5D8();
                    uint64_t v38 = v37;

                    *(void *)&long long v52 = v36;
                    *((void *)&v52 + 1) = v38;
                    swift_bridgeObjectRetain();
                    objc_msgSend(v3, sel___swift_setObject_forKeyedSubscript_, 0, sub_24558F728());
                    swift_bridgeObjectRelease();
LABEL_50:
                    swift_unknownObjectRelease();

                    id v16 = v22;
                    goto LABEL_24;
                  }
LABEL_49:
                  id v39 = objc_msgSend(v20, sel_name, v45);
                  uint64_t v40 = sub_24558E5D8();
                  uint64_t v41 = v3;
                  uint64_t v43 = v42;

                  uint64_t v44 = (void *)sub_245514AF4(v29, v20);
                  *(void *)&long long v52 = v40;
                  *((void *)&v52 + 1) = v43;
                  swift_bridgeObjectRetain();
                  objc_msgSend(v41, sel___swift_setObject_forKeyedSubscript_, v44, sub_24558F728());
                  id v3 = v41;
                  swift_bridgeObjectRelease();

                  goto LABEL_50;
                }
              }
              else
              {
                long long v50 = 0u;
                long long v51 = 0u;
              }
              sub_24549B164((uint64_t)&v50, v22);
              goto LABEL_49;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();

            sub_24549B164((uint64_t)&v52, v22);
          }
LABEL_24:
          uint64_t v14 = v21;
          unint64_t v13 = v46;
LABEL_25:
          ++v15;
        }
        while (v14 != v15);
      }
    }

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = v4;
  uint64_t v7 = sub_24558E428();

  *(void *)&long long v49 = 0x657079546D756E45;
  *((void *)&v49 + 1) = 0xE800000000000000;
  sub_24558EF28();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_2454B9F18((uint64_t)&v52), (v9 & 1) != 0))
  {
    sub_2454CE878(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v50);
  }
  else
  {
    long long v50 = 0u;
    long long v51 = 0u;
  }
  uint64_t v10 = MEMORY[0x263F8EE58];
  sub_2454BA024((uint64_t)&v52);
  swift_bridgeObjectRelease();
  if (!*((void *)&v51 + 1))
  {

    goto LABEL_18;
  }
  if (!swift_dynamicCast() || (v52 & 1) == 0)
  {

    goto LABEL_19;
  }
  sub_24558EB38();
  swift_retain();
  sub_24558EB58();
  sub_24549B610((uint64_t)&v50, (uint64_t)&v52, &qword_268EE3948);
  while (v53)
  {
    sub_2454A0BBC(&v52, &v50);
    sub_2454A0BBC(&v54, &v49);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3780);
    if (swift_dynamicCast())
    {
      char v11 = sub_24551526C(v48);
      swift_bridgeObjectRelease();
      if (v11)
      {
        __swift_project_boxed_opaque_existential_1Tm_0(&v50, *((uint64_t *)&v51 + 1));
        objc_msgSend(v3, sel___swift_setObject_forKeyedSubscript_, 0, sub_24558F588());
        swift_unknownObjectRelease();
      }
    }
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v50);
    sub_24558EB58();
    sub_24549B610((uint64_t)&v50, (uint64_t)&v52, &qword_268EE3948);
  }
  swift_release_n();

  sub_2455154D4((uint64_t)v3, a2);
}

uint64_t sub_24551526C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    char v2 = 1;
    return v2 & 1;
  }
  uint64_t v17 = a1 + 64;
  char v2 = 1;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v10 = v9 | (v8 << 6);
LABEL_6:
  uint64_t v11 = *(void *)(a1 + 56);
  id v12 = (void *)(*(void *)(a1 + 48) + 16 * v10);
  uint64_t v13 = v12[1];
  *(void *)&long long v18 = *v12;
  *((void *)&v18 + 1) = v13;
  sub_2454CE878(v11 + 32 * v10, (uint64_t)v19);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_24549B610((uint64_t)&v18, (uint64_t)v20, &qword_268EE3770);
    if (!v21)
    {
      swift_release();
      return v2 & 1;
    }
    swift_bridgeObjectRelease();
    sub_2454A0BBC(&v22, &v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3780);
    if ((swift_dynamicCast() & 1) == 0) {
      break;
    }
    char v2 = ((uint64_t (*)())sub_24551526C)();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_5;
    }
LABEL_7:
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v14 < v6)
    {
      unint64_t v15 = *(void *)(v17 + 8 * v14);
      if (v15) {
        goto LABEL_10;
      }
      int64_t v16 = v8 + 2;
      ++v8;
      if (v14 + 1 < v6)
      {
        unint64_t v15 = *(void *)(v17 + 8 * v16);
        if (v15) {
          goto LABEL_13;
        }
        int64_t v8 = v14 + 1;
        if (v14 + 2 < v6)
        {
          unint64_t v15 = *(void *)(v17 + 8 * (v14 + 2));
          if (v15)
          {
            v14 += 2;
            goto LABEL_10;
          }
          int64_t v16 = v14 + 3;
          int64_t v8 = v14 + 2;
          if (v14 + 3 < v6)
          {
            unint64_t v15 = *(void *)(v17 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                int64_t v14 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  break;
                }
                if (v14 >= v6)
                {
                  int64_t v8 = v6 - 1;
                  goto LABEL_24;
                }
                unint64_t v15 = *(void *)(v17 + 8 * v14);
                ++v16;
                if (v15) {
                  goto LABEL_10;
                }
              }
LABEL_34:
              __break(1u);
              return result;
            }
LABEL_13:
            int64_t v14 = v16;
LABEL_10:
            unint64_t v5 = (v15 - 1) & v15;
            unint64_t v10 = __clz(__rbit64(v15)) + (v14 << 6);
            int64_t v8 = v14;
            goto LABEL_6;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = 0;
    memset(v19, 0, sizeof(v19));
    long long v18 = 0u;
  }
  swift_release();
  char v2 = 0;
  return v2 & 1;
}

void sub_2455154D4(uint64_t a1, void *a2)
{
  sub_24549808C(0, &qword_268EE3678);
  id v3 = (id)sub_24558EB28();
  id v4 = objc_msgSend(a2, sel_userInfo);
  id v39 = v3;
  if (!v4)
  {
    long long v43 = 0u;
    long long v44 = 0u;
LABEL_11:

    sub_24549B164((uint64_t)&v43, &qword_26B0DA230);
    goto LABEL_18;
  }
  unint64_t v5 = v4;
  uint64_t v6 = sub_24558E428();

  uint64_t v40 = 1836412517;
  sub_24558EF28();
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_2454B9F18((uint64_t)&v41), (v8 & 1) != 0))
  {
    sub_2454CE878(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v43);
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  sub_2454BA024((uint64_t)&v41);
  swift_bridgeObjectRelease();
  if (!*((void *)&v44 + 1)) {
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9F58);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_18;
  }
  unint64_t v9 = (void *)v41;
  id v10 = objc_msgSend(v3, sel_allKeys);

  uint64_t v11 = sub_24558E7C8();
  if (*(void *)(v11 + 16))
  {
    sub_2454CE878(v11 + 32, (uint64_t)&v43);
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v44 + 1))
  {
    sub_2454A0BBC(&v43, &v41);
    uint64_t v12 = MEMORY[0x263F8D310];
    swift_dynamicCast();
    char v13 = sub_2454A5B1C(1836412517, 0xE400000000000000, v9);
    swift_bridgeObjectRelease();
    if (v13)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3950);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_245597620;
      *(void *)(v14 + 56) = v12;
      *(void *)(v14 + 32) = 1836412517;
      *(void *)(v14 + 40) = 0xE400000000000000;
      unint64_t v15 = sub_245535AF8(MEMORY[0x263F8EE78]);
      *(void *)(v14 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3958);
      *(void *)(v14 + 64) = v15;
      uint64_t v16 = sub_24558EB48();

      id v39 = (id)v16;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_18:
    id v17 = objc_msgSend(a2, sel_elements);
    sub_24549808C(0, &qword_26B0D8D30);
    unint64_t v18 = sub_24558E7C8();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_24558F1C8();
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v19)
      {
LABEL_20:
        if (v19 >= 1)
        {
          uint64_t v20 = 0;
          unint64_t v21 = v18 & 0xC000000000000001;
          long long v22 = &qword_26B0DA230;
          unint64_t v38 = v18;
          uint64_t v37 = v19;
          while (1)
          {
            if (v21) {
              id v23 = (id)MEMORY[0x2456A1A40](v20, v18);
            }
            else {
              id v23 = *(id *)(v18 + 8 * v20 + 32);
            }
            id v24 = v23;
            self;
            if (swift_dynamicCastObjCClass())
            {
              uint64_t v25 = v22;
              id v26 = objc_msgSend(v24, sel_name);
              uint64_t v27 = sub_24558E5D8();
              uint64_t v29 = v28;

              *(void *)&long long v43 = v27;
              *((void *)&v43 + 1) = v29;
              swift_bridgeObjectRetain();
              id v30 = objc_msgSend(v39, sel___swift_objectForKeyedSubscript_, sub_24558F728());
              swift_unknownObjectRelease();
              if (v30)
              {
                sub_24558ED88();
                swift_unknownObjectRelease();
              }
              else
              {
                long long v43 = 0u;
                long long v44 = 0u;
              }
              long long v22 = v25;
              sub_24549B610((uint64_t)&v43, (uint64_t)&v41, v25);
              if (!v42)
              {
                swift_bridgeObjectRelease();

                sub_24549B164((uint64_t)&v41, v25);
                goto LABEL_24;
              }
              sub_24549808C(0, &qword_268EE3670);
              if (swift_dynamicCast())
              {
                swift_bridgeObjectRelease();
                id v31 = objc_msgSend(v24, sel_name);
                uint64_t v32 = sub_24558E5D8();
                uint64_t v34 = v33;

                self;
                uint64_t v35 = swift_dynamicCastObjCClassUnconditional();
                id v24 = v24;
                uint64_t v36 = (void *)sub_2455154D4(v40, v35);

                *(void *)&long long v41 = v32;
                *((void *)&v41 + 1) = v34;
                swift_bridgeObjectRetain();
                objc_msgSend(v39, sel___swift_setObject_forKeyedSubscript_, v36, sub_24558F728());
                uint64_t v19 = v37;
                unint64_t v18 = v38;
                swift_bridgeObjectRelease();

                long long v22 = v25;
                swift_unknownObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }

LABEL_24:
            if (v19 == ++v20) {
              goto LABEL_37;
            }
          }
        }
        __break(1u);
        goto LABEL_39;
      }
    }
LABEL_37:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_245515A98(uint64_t a1, void *a2)
{
  type metadata accessor for CompositeDecoder();
  id v3 = (void *)swift_allocObject();
  uint64_t v4 = MEMORY[0x263F8EE78];
  v3[2] = MEMORY[0x263F8EE78];
  id v5 = a2;
  v3[3] = sub_2454D62F0(v4);
  v3[4] = v5;
  sub_2454ABFAC(&qword_268EE3550, v6, (void (*)(uint64_t))type metadata accessor for CompositeDecoder);
  swift_retain();
  sub_24558E988();

  return swift_release();
}

uint64_t sub_245515CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = dynamic_cast_existential_2_conditional(a7);
  if (result) {
    return sub_245515D78(result, a2, a3, a4, a5, a6, a7, result, a8, a9, a10, v18);
  }
  return result;
}

uint64_t sub_245515D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v33 = a3;
  v30[1] = a12;
  uint64_t v15 = sub_24558ECE8();
  uint64_t v31 = *(void *)(v15 - 8);
  uint64_t v32 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v30 - v17;
  uint64_t v19 = *(void *)(a8 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v16);
  long long v22 = (char *)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  id v24 = (char *)v30 - v23;
  sub_24558DBC8();
  swift_allocObject();
  sub_24558DBB8();
  sub_2454CE878(a2, (uint64_t)v36);
  swift_dynamicCast();
  uint64_t v25 = v34;
  unint64_t v26 = v35;
  sub_24558DBA8();
  swift_release();
  sub_2454A2F3C(v25, v26);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v24, a8);
  int v27 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))(v18, v27 ^ 1u, 1, a6);
  uint64_t v28 = v33;
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 40))(v28, v18, v32);
}

uint64_t sub_245516028()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24551607C()
{
  return sub_245513C44();
}

uint64_t sub_2455160A0()
{
  return sub_245513D50() & 1;
}

void sub_2455160C8()
{
}

void sub_2455160EC()
{
}

void sub_245516110()
{
}

void sub_245516134(uint64_t a1)
{
}

void sub_245516158(uint64_t a1)
{
}

uint64_t sub_24551617C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245516288(a1, a2, a3, MEMORY[0x263F8E3A8]);
}

void sub_2455161A8(uint64_t a1)
{
}

void sub_2455161CC()
{
}

void sub_2455161F0()
{
}

void sub_245516214(uint64_t a1)
{
}

void sub_245516238(uint64_t a1)
{
}

uint64_t sub_24551625C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245516288(a1, a2, a3, MEMORY[0x263F8E3B0]);
}

uint64_t sub_245516288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for ManagedObjectKeyedDecoding();
  return a4(a1, v7, a3);
}

uint64_t sub_2455162F0()
{
  return sub_24558F628();
}

uint64_t sub_245516350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245480E04(a1, a2, a3, MEMORY[0x263F8E338]);
}

uint64_t sub_24551637C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551657C(a1, a2, a3, MEMORY[0x263F8E340]);
}

uint64_t sub_2455163A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2455164B0(a1, a2, a3, MEMORY[0x263F8E358]);
}

uint64_t sub_2455163D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551657C(a1, a2, a3, MEMORY[0x263F8E368]);
}

uint64_t sub_245516400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245480E04(a1, a2, a3, MEMORY[0x263F8E370]);
}

uint64_t sub_24551642C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245516650(a1, a2, a3, MEMORY[0x263F8E380]);
}

uint64_t sub_245516458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245480E04(a1, a2, a3, MEMORY[0x263F8E350]);
}

uint64_t sub_245516484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2455164B0(a1, a2, a3, MEMORY[0x263F8E378]);
}

uint64_t sub_2455164B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for ManagedObjectKeyedDecoding();
  return a4(a1, v7, a3) & 0x1FF;
}

uint64_t sub_245516524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245497088(a1, a2, a3, MEMORY[0x263F8E388]);
}

uint64_t sub_245516550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551657C(a1, a2, a3, MEMORY[0x263F8E390]);
}

uint64_t sub_24551657C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for ManagedObjectKeyedDecoding();
  unint64_t v8 = a4(a1, v7, a3);
  return v8 | ((HIDWORD(v8) & 1) << 32);
}

uint64_t sub_2455165F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245480E04(a1, a2, a3, MEMORY[0x263F8E398]);
}

uint64_t sub_245516624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245516650(a1, a2, a3, MEMORY[0x263F8E3A0]);
}

uint64_t sub_245516650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for ManagedObjectKeyedDecoding();
  uint64_t result = a4(a1, v8, a3);
  if (v4) {
    return v10;
  }
  return result;
}

uint64_t sub_2455166C8()
{
  return sub_2455146C8();
}

void sub_2455166EC()
{
}

uint64_t sub_245516710@<X0>(void *a1@<X8>)
{
  return sub_24551484C(a1);
}

uint64_t sub_245516734@<X0>(void *a1@<X8>)
{
  return sub_245514A08(a1);
}

uint64_t sub_245516758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_24558E8A8();
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = sub_2454CEE4C();
  sub_2454CE878(a1, (uint64_t)v16);
  swift_retain();
  if (swift_dynamicCast())
  {
    v16[0] = v15;
    uint64_t v12 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 136);
    uint64_t WitnessTable = swift_getWitnessTable();
    v12(v11, v16, v10, a5, WitnessTable, a4, a6);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_2454CE878(a1, (uint64_t)v16);
    sub_24558EF78();
    sub_24558E668();
    sub_24558F8A8();
    sub_24558F568();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    sub_24558F0E8();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_2455169F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_getAssociatedTypeWitness();
  sub_24558E8A8();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = sub_2454A70D0();
  sub_2454A1140(a1, (uint64_t)&v18);
  if (v19)
  {
    sub_2454A0BBC(&v18, v20);
    sub_2454CE878((uint64_t)v20, (uint64_t)&v18);
    swift_retain();
    if (swift_dynamicCast())
    {
      *(void *)&long long v18 = v17;
      uint64_t v10 = *(void (**)(uint64_t, long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 112);
      uint64_t v11 = sub_24558ECE8();
      swift_getWitnessTable();
      uint64_t WitnessTable = swift_getWitnessTable();
      v10(v9, &v18, v11, WitnessTable, a4, a6);
      swift_bridgeObjectRelease();
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v20);
    }
    else
    {
      sub_2454CE878((uint64_t)v20, (uint64_t)&v18);
      sub_24558EF78();
      sub_24558E668();
      sub_24558ECE8();
      sub_24558F8A8();
      sub_24558F568();
      sub_24558E668();
      sub_24558F908();
      sub_24558E668();
      swift_bridgeObjectRelease();
      sub_24558E668();
      sub_24558F0E8();
      uint64_t result = sub_24558F1A8();
      __break(1u);
    }
  }
  else
  {
    swift_retain();
    sub_24549B164((uint64_t)&v18, &qword_26B0DA230);
    *(void *)&v20[0] = 0;
    uint64_t v14 = *(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 112);
    uint64_t v15 = sub_24558ECE8();
    swift_getWitnessTable();
    uint64_t v16 = swift_getWitnessTable();
    v14(v9, v20, v15, v16, a4, a6);
    return swift_release();
  }
  return result;
}

uint64_t sub_245516D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_24558E8A8();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = sub_2454CEE4C();
  sub_2454CE878(a1, (uint64_t)v15);
  swift_retain();
  if (swift_dynamicCast())
  {
    v15[0] = v14;
    uint64_t v11 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 112);
    uint64_t WitnessTable = swift_getWitnessTable();
    v11(v10, v15, v9, WitnessTable, a4, a6);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_2454CE878(a1, (uint64_t)v15);
    sub_24558EF78();
    sub_24558E668();
    sub_24558F8A8();
    sub_24558F568();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    sub_24558F0E8();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_245517034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_2454A70D0();
  sub_2454CE878(a1, (uint64_t)v16);
  swift_retain();
  if (swift_dynamicCast())
  {
    char v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 128);
    swift_unknownObjectRetain();
    v13(v12, v15, a5, a7, a4, a6);
    swift_release();
    return swift_unknownObjectRelease_n();
  }
  else
  {
    sub_2454CE878(a1, (uint64_t)v16);
    sub_24558EF78();
    sub_24558E668();
    sub_24558ECE8();
    sub_24558F8A8();
    sub_24558F568();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    sub_24558F0E8();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_2455172A8@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  sub_24558F8A8();
  uint64_t v4 = (void *)swift_dynamicCastClassUnconditional();
  swift_retain();
  sub_2455842F8(v4, a1, a2);
  swift_release();
  uint64_t v5 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(a2, 0, 1, v5);
}

uint64_t sub_24551738C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (uint64_t *)sub_24558E348();
  if (v12 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = *v11;
    if (swift_conformsToProtocol2()) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    if (v14) {
      return sub_245517510(v14, a2, a3, a4, a5, a6, v14);
    }
  }
  sub_24558EF78();
  sub_24558E668();
  sub_24558F908();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_245517510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_24558E8A8();
  sub_24558F8A8();
  uint64_t v8 = swift_dynamicCastClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v11 = sub_2455849EC(v9, a7, WitnessTable);
    swift_release();
    return v11;
  }
  else
  {
    sub_24558E668();
    sub_24558EDD8();
    sub_24558F0E8();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_245517678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v119 = a4;
  memset(v126, 0, 32);
  uint64_t v11 = sub_24549CCD8(a1);
  uint64_t v13 = v12;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = sub_2454A0BCC(AssociatedTypeWitness, AssociatedConformanceWitness);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v16 + 96);
  if (!*(void *)(v17 + 16)) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_2454A0B40(v11, v13);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease_n();
  swift_beginAccess();
  uint64_t v21 = *(void *)(v20 + 48);
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v23 = (unsigned char *)(v21 + 32);
    while ((*v23 & 1) == 0)
    {
      v23 += 40;
      if (!--v22) {
        goto LABEL_7;
      }
    }
    uint64_t v117 = a6;
    *(void *)&long long v120 = a2;
    swift_getMetatypeMetadata();
    if ((sub_2454CD0A4((uint64_t)&v120) & 1) == 0)
    {
      sub_24558F8A8();
      uint64_t v68 = swift_dynamicCastClassUnconditional();
      uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 104);
      *((void *)&v121 + 1) = v119;
      __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v120);
      swift_retain();
      v69(v68, v119, a3, a5);
      swift_release();
      swift_release();
      swift_release();
      sub_24549B164((uint64_t)v126, &qword_26B0DA230);
      sub_24549B610((uint64_t)&v120, (uint64_t)v126, &qword_26B0DA230);
      uint64_t v28 = v119;
      a6 = v117;
      goto LABEL_42;
    }
    *(void *)&long long v120 = a2;
    if (swift_conformsToProtocol2()) {
      uint64_t v54 = a2;
    }
    else {
      uint64_t v54 = 0;
    }
    a6 = v117;
    while (v54)
    {
      sub_24549E524(v54, (uint64_t *)&v120);
      a2 = v120;
      if (swift_conformsToProtocol2()) {
        uint64_t v54 = a2;
      }
      else {
        uint64_t v54 = 0;
      }
    }
    uint64_t v55 = sub_24558ECE8();
    v116 = &v115;
    uint64_t v56 = *(void *)(v55 - 8);
    MEMORY[0x270FA5388](v55);
    id v58 = (char *)&v115 - v57;
    uint64_t v59 = a3;
    uint64_t v28 = v119;
    sub_245518E3C(a2, a1, v118, v59, v119, a2, a5);
    uint64_t v60 = *(void *)(a2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, a2) != 1)
    {
      *((void *)&v121 + 1) = a2;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v120);
      (*(void (**)(uint64_t *, char *, uint64_t))(v60 + 32))(boxed_opaque_existential_2Tm, v58, a2);
      swift_release();
      swift_release();
      sub_24549B164((uint64_t)v126, &qword_26B0DA230);
      goto LABEL_40;
    }
    sub_24549B164((uint64_t)v126, &qword_26B0DA230);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v55);
    goto LABEL_39;
  }
LABEL_7:
  swift_release();
LABEL_10:
  uint64_t v24 = swift_conformsToProtocol2();
  if (v24) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 0;
  }
  if (v24) {
    uint64_t v26 = a2;
  }
  else {
    uint64_t v26 = 0;
  }
  if (!v26)
  {
    if (swift_conformsToProtocol2()) {
      uint64_t v32 = a2;
    }
    else {
      uint64_t v32 = 0;
    }
    if (v32)
    {
      *(void *)&long long v120 = v32;
      while (1)
      {
        uint64_t v33 = swift_conformsToProtocol2() ? v32 : 0;
        if (!v33) {
          break;
        }
        sub_24549E524(v33, (uint64_t *)&v120);
        uint64_t v32 = v120;
      }
      uint64_t v34 = swift_conformsToProtocol2();
      if (v34) {
        uint64_t v35 = v34;
      }
      else {
        uint64_t v35 = 0;
      }
      if (v34) {
        uint64_t v36 = v32;
      }
      else {
        uint64_t v36 = 0;
      }
      if (v36)
      {
        uint64_t v37 = a3;
        uint64_t v28 = v119;
        uint64_t v29 = sub_245518D48(v36, a1, v118, v37, v119, v36, a5, v35);
        if (v29) {
          goto LABEL_18;
        }
LABEL_38:
        sub_24549B164((uint64_t)v126, &qword_26B0DA230);
        swift_release();
LABEL_39:
        long long v120 = 0u;
        long long v121 = 0u;
        goto LABEL_40;
      }
      if (swift_conformsToProtocol2()) {
        uint64_t v61 = v32;
      }
      else {
        uint64_t v61 = 0;
      }
      if (!v61)
      {
        uint64_t v73 = dynamic_cast_existential_2_conditional(v32);
        uint64_t v117 = v75;
        if (!v73)
        {
          *(void *)&long long v120 = 0;
          *((void *)&v120 + 1) = 0xE000000000000000;
          sub_24558EF78();
          swift_bridgeObjectRelease();
          *(void *)&long long v120 = 0xD000000000000029;
          *((void *)&v120 + 1) = 0x8000000245591740;
          sub_24558F908();
          sub_24558E668();
          swift_bridgeObjectRelease();
          goto LABEL_124;
        }
LABEL_96:
        uint64_t v77 = v73;
        uint64_t v78 = v74;
        uint64_t v79 = sub_24558ECE8();
        v116 = &v115;
        uint64_t v80 = *(void *)(v79 - 8);
        MEMORY[0x270FA5388](v79);
        v82 = (char *)&v115 - v86;
        uint64_t v87 = a3;
        uint64_t v28 = v119;
        sub_2454B7D84(v77, a1, v118, v87, v119, v77, a5);
        goto LABEL_97;
      }
      sub_24558E348();
      if ((v62 & 0x8000000000000000) == 0)
      {
        if (v62)
        {
          id v63 = (uint64_t *)sub_24558E348();
          if (v64 >= 1)
          {
            uint64_t v65 = *v63;
            if (swift_conformsToProtocol2()) {
              uint64_t v66 = v65;
            }
            else {
              uint64_t v66 = 0;
            }
            if (v66)
            {
              uint64_t v67 = a3;
              uint64_t v28 = v119;
              if (sub_245518F38(v66, a1, v118, v67, v119, v66, a5))
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
                uint64_t v30 = sub_24558F0D8();
                swift_bridgeObjectRelease();
                uint64_t ObjectType = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
                goto LABEL_19;
              }
              goto LABEL_38;
            }
            if (dynamic_cast_existential_2_conditional(v65))
            {
              uint64_t v107 = dynamic_cast_existential_2_conditional(v61);
              uint64_t v117 = v109;
              if (v107)
              {
                uint64_t v77 = v107;
                uint64_t v110 = v108;
                uint64_t v101 = sub_24558ECE8();
                v116 = &v115;
                uint64_t v111 = *(void *)(v101 - 8);
                MEMORY[0x270FA5388](v101);
                v82 = (char *)&v115 - v112;
                uint64_t v113 = a3;
                uint64_t v28 = v119;
                sub_2454B7D84(v77, a1, v118, v113, v119, v77, a5);
                uint64_t v88 = *(void *)(v77 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v82, 1, v77) == 1)
                {
                  v89 = *(void (**)(char *, uint64_t))(v111 + 8);
                  v90 = v82;
                  goto LABEL_112;
                }
                *((void *)&v121 + 1) = v77;
                uint64_t v122 = v110;
                goto LABEL_101;
              }
            }
            *(void *)&long long v120 = 0;
            *((void *)&v120 + 1) = 0xE000000000000000;
            sub_24558EF78();
            swift_bridgeObjectRelease();
            *(void *)&long long v120 = 0xD00000000000001ALL;
            *((void *)&v120 + 1) = 0x8000000245591840;
            sub_24558F908();
            sub_24558E668();
            swift_bridgeObjectRelease();
LABEL_124:
            uint64_t result = sub_24558F1A8();
            __break(1u);
            return result;
          }
          goto LABEL_118;
        }
        uint64_t v73 = dynamic_cast_existential_2_conditional(v61);
        uint64_t v117 = v85;
        if (!v73) {
          goto LABEL_119;
        }
        goto LABEL_96;
      }
      goto LABEL_116;
    }
    uint64_t v42 = swift_conformsToProtocol2();
    if (v42) {
      uint64_t v43 = v42;
    }
    else {
      uint64_t v43 = 0;
    }
    if (v42) {
      uint64_t v44 = a2;
    }
    else {
      uint64_t v44 = 0;
    }
    if (v44)
    {
      sub_24558E348();
      if (v45 < 0)
      {
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
        goto LABEL_119;
      }
      if (v45)
      {
        unint64_t v46 = (uint64_t *)sub_24558E348();
        if (v47 >= 1)
        {
          uint64_t v48 = *v46;
          if (swift_conformsToProtocol2()) {
            uint64_t v49 = v48;
          }
          else {
            uint64_t v49 = 0;
          }
          if (v49)
          {
            *((void *)&v121 + 1) = v44;
            uint64_t v122 = v43;
            __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v120);
            uint64_t v50 = a3;
            uint64_t v28 = v119;
            sub_2455189BC(v44, a1, v118, v50, v119, v44, a5);
            uint64_t v51 = *((void *)&v121 + 1);
            long long v52 = __swift_project_boxed_opaque_existential_1Tm_0(&v120, *((uint64_t *)&v121 + 1));
            *((void *)&v125 + 1) = v51;
            uint64_t v53 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v124);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v53, v52, v51);
            swift_release();
            sub_24549B164((uint64_t)v126, &qword_26B0DA230);
            sub_24549B610((uint64_t)&v124, (uint64_t)v126, &qword_26B0DA230);
            __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v120);
            goto LABEL_42;
          }
          if (dynamic_cast_existential_2_conditional(v48))
          {
            uint64_t v96 = dynamic_cast_existential_2_conditional(v44);
            uint64_t v117 = v98;
            if (v96)
            {
              uint64_t v99 = v96;
              uint64_t v100 = v97;
              uint64_t v101 = sub_24558ECE8();
              v116 = &v115;
              uint64_t v102 = *(void *)(v101 - 8);
              MEMORY[0x270FA5388](v101);
              v104 = (char *)&v115 - v103;
              uint64_t v105 = a3;
              uint64_t v28 = v119;
              sub_2454A7450(v105, v99, a5, v100, (uint64_t)&v115 - v103);
              uint64_t v106 = *(void *)(v99 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v99) == 1)
              {
                v89 = *(void (**)(char *, uint64_t))(v102 + 8);
                v90 = v104;
LABEL_112:
                uint64_t v91 = v101;
                goto LABEL_99;
              }
              *((void *)&v121 + 1) = v99;
              uint64_t v122 = v100;
              uint64_t v123 = v117;
              v114 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v120);
              (*(void (**)(uint64_t *, char *, uint64_t))(v106 + 32))(v114, v104, v99);
LABEL_102:
              uint64_t v93 = *((void *)&v121 + 1);
              v94 = __swift_project_boxed_opaque_existential_1Tm_0(&v120, *((uint64_t *)&v121 + 1));
              *((void *)&v125 + 1) = v93;
              v95 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v124);
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v93 - 8) + 16))(v95, v94, v93);
              swift_release();
              sub_24549B164((uint64_t)v126, &qword_26B0DA230);
              __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v120);
              goto LABEL_103;
            }
            *(void *)&long long v120 = 0;
            *((void *)&v120 + 1) = 0xE000000000000000;
            sub_24558EF78();
            sub_24558E668();
            sub_24558F908();
            sub_24558E668();
            swift_bridgeObjectRelease();
            sub_24558E668();
            sub_24558E668();
            sub_24558E668();
            sub_24558F908();
            sub_24558E668();
            swift_bridgeObjectRelease();
          }
          else
          {
            *(void *)&long long v120 = 0;
            *((void *)&v120 + 1) = 0xE000000000000000;
            sub_24558EF78();
            sub_24558E668();
            sub_24558F908();
            sub_24558E668();
            swift_bridgeObjectRelease();
          }
          goto LABEL_124;
        }
        goto LABEL_117;
      }
      uint64_t v70 = dynamic_cast_existential_2_conditional(v44);
      uint64_t v117 = v76;
      if (!v70)
      {
LABEL_119:
        *(void *)&long long v120 = 0;
        *((void *)&v120 + 1) = 0xE000000000000000;
        sub_24558EF78();
        swift_bridgeObjectRelease();
        *(void *)&long long v120 = 0xD00000000000001DLL;
        *((void *)&v120 + 1) = 0x8000000245591770;
        sub_24558F908();
        sub_24558E668();
        swift_bridgeObjectRelease();
        goto LABEL_124;
      }
    }
    else
    {
      uint64_t v70 = dynamic_cast_existential_2_conditional(a2);
      uint64_t v117 = v72;
      if (!v70)
      {
        sub_24558EF78();
        swift_bridgeObjectRelease();
        *(void *)&long long v120 = 0xD000000000000029;
        *((void *)&v120 + 1) = 0x8000000245591740;
        sub_24558F908();
        sub_24558E668();
        swift_bridgeObjectRelease();
        goto LABEL_124;
      }
    }
    uint64_t v77 = v70;
    uint64_t v78 = v71;
    uint64_t v79 = sub_24558ECE8();
    v116 = &v115;
    uint64_t v80 = *(void *)(v79 - 8);
    MEMORY[0x270FA5388](v79);
    v82 = (char *)&v115 - v81;
    uint64_t v83 = a3;
    uint64_t v28 = v119;
    sub_2454A7450(v83, v77, a5, v78, (uint64_t)&v115 - v81);
LABEL_97:
    uint64_t v88 = *(void *)(v77 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v82, 1, v77) == 1)
    {
      v89 = *(void (**)(char *, uint64_t))(v80 + 8);
      v90 = v82;
      uint64_t v91 = v79;
LABEL_99:
      v89(v90, v91);
      swift_release();
      sub_24549B164((uint64_t)v126, &qword_26B0DA230);
      long long v124 = 0u;
      long long v125 = 0u;
LABEL_103:
      unint64_t v38 = &v124;
      goto LABEL_41;
    }
    *((void *)&v121 + 1) = v77;
    uint64_t v122 = v78;
LABEL_101:
    uint64_t v123 = v117;
    v92 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v120);
    (*(void (**)(uint64_t *, char *, uint64_t))(v88 + 32))(v92, v82, v77);
    goto LABEL_102;
  }
  uint64_t v27 = a3;
  uint64_t v28 = v119;
  uint64_t v29 = sub_2455188D8(v26, a1, v118, v27, v119, v26, a5, v25);
  if (!v29) {
    goto LABEL_38;
  }
LABEL_18:
  uint64_t v30 = v29;
  uint64_t ObjectType = swift_getObjectType();
LABEL_19:
  *((void *)&v121 + 1) = ObjectType;
  swift_release();
  *(void *)&long long v120 = v30;
  sub_24549B164((uint64_t)v126, &qword_26B0DA230);
LABEL_40:
  unint64_t v38 = &v120;
LABEL_41:
  sub_24549B610((uint64_t)v38, (uint64_t)v126, &qword_26B0DA230);
LABEL_42:
  sub_2454A1140((uint64_t)v126, (uint64_t)&v120);
  uint64_t v39 = *((void *)&v121 + 1);
  sub_24549B164((uint64_t)&v120, &qword_26B0DA230);
  if (v39)
  {
    sub_24549B610((uint64_t)v126, (uint64_t)&v124, &qword_26B0DA230);
    if (*((void *)&v125 + 1))
    {
      sub_2454A0BBC(&v124, &v120);
      swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, 0, 1, v28);
    }
    long long v41 = &v124;
  }
  else
  {
    long long v41 = v126;
  }
  sub_24549B164((uint64_t)v41, &qword_26B0DA230);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, 1, 1, v28);
}

uint64_t sub_2455188D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_getAssociatedTypeWitness();
  sub_24558F8A8();
  uint64_t v12 = swift_dynamicCastClassUnconditional();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 72);
  swift_retain();
  uint64_t v14 = v13(v12, a6, a8, a4, a7);
  swift_release();
  return v14;
}

uint64_t sub_2455189BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (uint64_t *)sub_24558E348();
  if (v14 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = *v13;
    if (!swift_conformsToProtocol2()) {
      uint64_t v15 = 0;
    }
    if (v15)
    {
      sub_245518B9C(v15, a2, a3, a4, a5, a6, v15, a7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
      sub_24558F0D8();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
      return swift_dynamicCast();
    }
  }
  sub_24558EF78();
  sub_24558E668();
  sub_24558F908();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_245518B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t WitnessTable;
  uint64_t result;
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24558E8A8();
  sub_24558F8A8();
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 88);
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    v14(&v17, v13, v11, a7, WitnessTable, a4, a8);
    swift_release();
    return v17;
  }
  else
  {
    sub_24558E668();
    sub_24558EDD8();
    sub_24558F0E8();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_245518D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_getAssociatedTypeWitness();
  sub_24558ECE8();
  sub_24558F8A8();
  uint64_t v12 = swift_dynamicCastClassUnconditional();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 80);
  swift_retain();
  uint64_t v14 = v13(v12, a6, a8, a4, a7);
  swift_release();
  return v14;
}

uint64_t sub_245518E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_24558ECE8();
  sub_24558F8A8();
  uint64_t v10 = swift_dynamicCastClassUnconditional();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 104);
  swift_retain();
  v11(v10, v9, a4, a7);

  return swift_release();
}

uint64_t sub_245518F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v13)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t WitnessTable;
  uint64_t result;
  uint64_t v16;

  swift_getAssociatedTypeWitness();
  sub_24558E8A8();
  uint64_t v10 = sub_24558ECE8();
  sub_24558F8A8();
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 88);
    swift_retain();
    swift_getWitnessTable();
    uint64_t WitnessTable = swift_getWitnessTable();
    v13(&v16, v12, v10, a6, WitnessTable, a4, a7);
    swift_release();
    return v16;
  }
  else
  {
    sub_24558E668();
    sub_24558EDD8();
    sub_24558F0E8();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_245519114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = sub_24552C994(a1, a2, AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_245517678(v16, a3, a4, a5, a6, a7);

  return swift_release();
}

uint64_t sub_245519200(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  sub_2454D2564(a1, v6 + 32);
  return v6;
}

uint64_t sub_245519258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*v3 + 88);
  *(void *)&long long v9 = *(void *)(*v3 + 80);
  *((void *)&v9 + 1) = v9;
  uint64_t v10 = a2;
  uint64_t v11 = v4;
  uint64_t v12 = v4;
  uint64_t v13 = a3;
  type metadata accessor for BackingDataDecoder.BackingDataKeyedDecoding();
  uint64_t v5 = v3[2];
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24558E828();
  sub_24549B21C((uint64_t)(v3 + 4), (uint64_t)&v9);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v6;
  sub_2454D2564(&v9, v7 + 32);
  *(void *)&long long v9 = v7;
  swift_getWitnessTable();
  return sub_24558F3E8();
}

uint64_t sub_245519370(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_2454D2564(a3, v6 + 32);
  return v6;
}

void sub_2455193C8()
{
}

BOOL sub_245519488()
{
  sub_24549B21C(v0 + 32, (uint64_t)v9);
  uint64_t v1 = v10;
  uint64_t v2 = v11;
  __swift_project_boxed_opaque_existential_1Tm_0(v9, v10);
  uint64_t v3 = sub_24558F8C8();
  sub_245519114(v3, v4, MEMORY[0x263F8EE58] + 8, v1, MEMORY[0x263F8EE58] + 8, v2, (uint64_t)v7);
  swift_bridgeObjectRelease();
  BOOL v5 = v8 != 0;
  sub_24549B164((uint64_t)v7, &qword_26B0DA230);
  __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v9);
  return v5;
}

BOOL sub_24551956C()
{
  sub_24549B21C(v0 + 32, (uint64_t)v9);
  uint64_t v1 = v10;
  uint64_t v2 = v11;
  __swift_project_boxed_opaque_existential_1Tm_0(v9, v10);
  uint64_t v3 = sub_24558F8C8();
  sub_245519114(v3, v4, MEMORY[0x263F8EE58] + 8, v1, MEMORY[0x263F8EE58] + 8, v2, (uint64_t)v7);
  swift_bridgeObjectRelease();
  BOOL v5 = v8 == 0;
  sub_24549B164((uint64_t)v7, &qword_26B0DA230);
  __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v9);
  return v5;
}

uint64_t sub_245519660()
{
  sub_24549B21C(v0 + 32, (uint64_t)v7);
  uint64_t v1 = v8;
  uint64_t v2 = v9;
  __swift_project_boxed_opaque_existential_1Tm_0(v7, v8);
  uint64_t v3 = sub_24558F8C8();
  sub_245519114(v3, v4, MEMORY[0x263F8D4F8], v1, MEMORY[0x263F8D4F8], v2, (uint64_t)&v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v10 == 2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v10 & 1;
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v7);
    return v6;
  }
  return result;
}

uint64_t sub_245519748()
{
  sub_24549B21C(v0 + 32, (uint64_t)v8);
  uint64_t v1 = v9;
  uint64_t v2 = v10;
  __swift_project_boxed_opaque_existential_1Tm_0(v8, v9);
  uint64_t v3 = sub_24558F8C8();
  sub_245519114(v3, v4, MEMORY[0x263F8D310], v1, MEMORY[0x263F8D310], v2, (uint64_t)v7);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7[1])
  {
    uint64_t v6 = v7[0];
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v8);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_245519830()
{
  sub_24549B21C(v0 + 32, (uint64_t)v8);
  uint64_t v1 = v9;
  uint64_t v2 = v10;
  __swift_project_boxed_opaque_existential_1Tm_0(v8, v9);
  uint64_t v3 = sub_24558F8C8();
  sub_245519114(v3, v4, MEMORY[0x263F8D538], v1, MEMORY[0x263F8D538], v2, (uint64_t)&v6);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0) {
    return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v8);
  }
  __break(1u);
  return result;
}

uint64_t sub_24551991C()
{
  sub_24549B21C(v0 + 32, (uint64_t)v8);
  uint64_t v1 = v9;
  uint64_t v2 = v10;
  __swift_project_boxed_opaque_existential_1Tm_0(v8, v9);
  uint64_t v3 = sub_24558F8C8();
  sub_245519114(v3, v4, MEMORY[0x263F8D5C8], v1, MEMORY[0x263F8D5C8], v2, (uint64_t)&v6);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0) {
    return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v8);
  }
  __break(1u);
  return result;
}

uint64_t sub_245519A08(uint64_t a1, uint64_t a2)
{
  sub_24549B21C(v2 + 32, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1Tm_0(v12, v13);
  uint64_t v6 = sub_24558F8C8();
  sub_245519114(v6, v7, a2, v4, a2, v5, (uint64_t)&v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v10;
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v12);
    return v9;
  }
  return result;
}

uint64_t sub_245519AEC(uint64_t a1, uint64_t a2)
{
  sub_24549B21C(v2 + 32, (uint64_t)v11);
  uint64_t v4 = v12;
  uint64_t v5 = v13;
  __swift_project_boxed_opaque_existential_1Tm_0(v11, v12);
  uint64_t v6 = sub_24558F8C8();
  sub_245519114(v6, v7, a2, v4, a2, v5, (uint64_t)v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v10[1])
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v10[0];
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v11);
    return v9;
  }
  return result;
}

uint64_t sub_245519BD0(uint64_t a1, uint64_t a2)
{
  sub_24549B21C(v2 + 32, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1Tm_0(v12, v13);
  uint64_t v6 = sub_24558F8C8();
  sub_245519114(v6, v7, a2, v4, a2, v5, (uint64_t)&v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v10;
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v12);
    return v9;
  }
  return result;
}

uint64_t sub_245519CB4(uint64_t a1, uint64_t a2)
{
  sub_24549B21C(v2 + 32, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1Tm_0(v12, v13);
  uint64_t v6 = sub_24558F8C8();
  sub_245519114(v6, v7, a2, v4, a2, v5, (uint64_t)&v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v10;
    __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v12);
    return v9;
  }
  return result;
}

uint64_t sub_245519D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v15 = a3;
  uint64_t v6 = sub_24558ECE8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16[-1] - v7;
  sub_24549B21C(v3 + 32, (uint64_t)v16);
  uint64_t v10 = v17;
  uint64_t v9 = v18;
  __swift_project_boxed_opaque_existential_1Tm_0(v16, v17);
  uint64_t v11 = sub_24558F8C8();
  sub_245519114(v11, v12, a1, v10, a2, v9, (uint64_t)v8);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, a2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v15, v8, a2);
    return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v16);
  }
  return result;
}

uint64_t sub_245519F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a4;
  uint64_t v5 = *v4;
  long long v10 = *(_OWORD *)(*v4 + 80);
  uint64_t v11 = a3;
  long long v12 = *(_OWORD *)(v5 + 104);
  type metadata accessor for BackingDataDecoder.BackingDataKeyedDecoding();
  uint64_t v6 = v4[2];
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_24558E828();
  sub_24549B21C((uint64_t)(v4 + 4), (uint64_t)&v10);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v7;
  sub_2454D2564(&v10, v8 + 32);
  *(void *)&long long v10 = v8;
  swift_getWitnessTable();
  return sub_24558F3E8();
}

void sub_24551A04C()
{
}

uint64_t sub_24551A118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 96);
  uint64_t v4 = sub_24558ECE8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  sub_24558F8D8();
  uint64_t v7 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_24551A278(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_24551A278@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BackingDataDecoder();
  sub_24549B21C(v1 + 32, (uint64_t)v8);
  uint64_t v4 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_2454D62F0(MEMORY[0x263F8EE78]);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  sub_2454D2564(v8, v6 + 32);
  a1[3] = v3;
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_24551A364()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm_1(v0 + 32);
  return v0;
}

uint64_t sub_24551A394()
{
  sub_24551A364();

  return swift_deallocClassInstance();
}

uint64_t sub_24551A3C4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24551A3D0()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_24551A3DC()
{
  return sub_245519488();
}

BOOL sub_24551A404()
{
  return sub_24551956C();
}

uint64_t sub_24551A42C()
{
  return sub_245519660() & 1;
}

uint64_t sub_24551A454()
{
  return sub_245519748();
}

uint64_t sub_24551A478()
{
  return sub_245519830();
}

uint64_t sub_24551A49C()
{
  return sub_24551991C();
}

uint64_t sub_24551A4C0(uint64_t a1)
{
  return sub_245519A08(a1, MEMORY[0x263F8D6C8]);
}

uint64_t sub_24551A4EC(uint64_t a1)
{
  return sub_245519AEC(a1, MEMORY[0x263F8E498]);
}

uint64_t sub_24551A518(uint64_t a1)
{
  return sub_245519BD0(a1, MEMORY[0x263F8E4F0]);
}

uint64_t sub_24551A544(uint64_t a1)
{
  return sub_245519CB4(a1, MEMORY[0x263F8E548]);
}

uint64_t sub_24551A570(uint64_t a1)
{
  return sub_245519A08(a1, MEMORY[0x263F8E5C0]);
}

uint64_t sub_24551A59C()
{
  return sub_24558F698();
}

uint64_t sub_24551A5B4(uint64_t a1)
{
  return sub_245519A08(a1, MEMORY[0x263F8D9D0]);
}

uint64_t sub_24551A5E0(uint64_t a1)
{
  return sub_245519AEC(a1, MEMORY[0x263F8E778]);
}

uint64_t sub_24551A60C(uint64_t a1)
{
  return sub_245519BD0(a1, MEMORY[0x263F8E888]);
}

uint64_t sub_24551A638(uint64_t a1)
{
  return sub_245519CB4(a1, MEMORY[0x263F8E8F8]);
}

uint64_t sub_24551A664(uint64_t a1)
{
  return sub_245519A08(a1, MEMORY[0x263F8E970]);
}

uint64_t sub_24551A690()
{
  return sub_24558F6A8();
}

uint64_t sub_24551A6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_245519D98(a1, a2, a3);
}

uint64_t sub_24551A6CC()
{
  return sub_24558F628();
}

uint64_t sub_24551A6E4()
{
  return sub_24558F618();
}

uint64_t sub_24551A6FC()
{
  uint64_t result = sub_24558F638();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24551A720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551A94C(a1, a2, a3, MEMORY[0x263F8E340]);
}

uint64_t sub_24551A74C()
{
  uint64_t result = sub_24558F648();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24551A770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551A894(a1, a2, a3, MEMORY[0x263F8E358]);
}

uint64_t sub_24551A79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551A8F0(a1, a2, a3, MEMORY[0x263F8E360]);
}

uint64_t sub_24551A7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551A94C(a1, a2, a3, MEMORY[0x263F8E368]);
}

uint64_t sub_24551A7F4()
{
  uint64_t result = sub_24558F678();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24551A818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551A9D4(a1, a2, a3, MEMORY[0x263F8E380]);
}

uint64_t sub_24551A844()
{
  uint64_t result = sub_24558F658();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24551A868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551A894(a1, a2, a3, MEMORY[0x263F8E378]);
}

uint64_t sub_24551A894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_24551A8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551A8F0(a1, a2, a3, MEMORY[0x263F8E388]);
}

uint64_t sub_24551A8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_24551A920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551A94C(a1, a2, a3, MEMORY[0x263F8E390]);
}

uint64_t sub_24551A94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_24551A984()
{
  uint64_t result = sub_24558F688();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24551A9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24551A9D4(a1, a2, a3, MEMORY[0x263F8E3A0]);
}

uint64_t sub_24551A9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_24551AA00()
{
  return sub_24558F668();
}

uint64_t sub_24551AA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245519F34(a1, a2, a3, a4);
}

void sub_24551AA50()
{
}

uint64_t sub_24551AA74@<X0>(uint64_t *a1@<X8>)
{
  return sub_24551A118(a1);
}

uint64_t sub_24551AA98@<X0>(uint64_t *a1@<X8>)
{
  return sub_24551A278(a1);
}

uint64_t sub_24551AABC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm_1(v0 + 32);
  return v0;
}

uint64_t sub_24551AAEC()
{
  sub_24551AABC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BackingDataDecoder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24551AB3C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BackingDataDecoder.BackingDataKeyedDecoding()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24551ABA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245519258(a1, a2, a3);
}

void sub_24551ABCC()
{
}

void sub_24551AC04()
{
}

void sub_24551AC3C()
{
}

void sub_24551AC9C()
{
}

uint64_t sub_24551ACFC(char a1, uint64_t a2)
{
  char v3 = a1;
  return sub_24549AC24((uint64_t)&v3, a2, MEMORY[0x263F8D4F8]);
}

uint64_t sub_24551AD34(uint64_t a1, double a2)
{
  double v3 = a2;
  return sub_24549AC24((uint64_t)&v3, a1, MEMORY[0x263F8D538]);
}

uint64_t sub_24551AD70(uint64_t a1, float a2)
{
  float v3 = a2;
  return sub_24549AC24((uint64_t)&v3, a1, MEMORY[0x263F8D5C8]);
}

uint64_t sub_24551ADAC(char a1, uint64_t a2)
{
  char v3 = a1;
  return sub_24549AC24((uint64_t)&v3, a2, MEMORY[0x263F8E498]);
}

uint64_t sub_24551ADE4(int a1, uint64_t a2)
{
  int v3 = a1;
  return sub_24549AC24((uint64_t)&v3, a2, MEMORY[0x263F8E548]);
}

uint64_t sub_24551AE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  return sub_24549AC24((uint64_t)&v3, a2, MEMORY[0x263F8E5C0]);
}

uint64_t sub_24551AE54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  return sub_24549AC24((uint64_t)&v3, a2, MEMORY[0x263F8D9D0]);
}

uint64_t sub_24551AE8C(char a1, uint64_t a2)
{
  char v3 = a1;
  return sub_24549AC24((uint64_t)&v3, a2, MEMORY[0x263F8E778]);
}

uint64_t sub_24551AEC4(__int16 a1, uint64_t a2)
{
  __int16 v3 = a1;
  return sub_24549AC24((uint64_t)&v3, a2, MEMORY[0x263F8E888]);
}

uint64_t sub_24551AEFC(int a1, uint64_t a2)
{
  int v3 = a1;
  return sub_24549AC24((uint64_t)&v3, a2, MEMORY[0x263F8E8F8]);
}

uint64_t sub_24551AF34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  return sub_24549AC24((uint64_t)&v3, a2, MEMORY[0x263F8E970]);
}

void sub_24551AF6C()
{
}

void sub_24551AFCC()
{
}

uint64_t sub_24551B0B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 112);
  uint64_t v4 = sub_24558ECE8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  sub_24558F8D8();
  uint64_t v7 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_24551B1FC(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_24551B1FC@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = *(_OWORD *)(*v1 + 136);
  v13[0] = *(_OWORD *)(*v1 + 96);
  v13[1] = v3;
  uint64_t v4 = type metadata accessor for BackingDataEncoder();
  uint64_t v5 = v1[4];
  sub_24549B21C(v5 + 32, (uint64_t)v13);
  uint64_t v8 = v5 + 16;
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v6 = *(void *)(v8 + 8);
  uint64_t v10 = v1[2];
  uint64_t v9 = v1[3];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2454D6C90(v13, v6, v7, v10, v9);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)v13);
  a1[3] = v4;
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  *a1 = v11;
  return result;
}

uint64_t sub_24551B304(char a1, uint64_t a2)
{
  return sub_24551ACFC(a1, a2);
}

uint64_t sub_24551B328(uint64_t a1, double a2)
{
  return sub_24551AD34(a1, a2);
}

uint64_t sub_24551B34C(uint64_t a1, float a2)
{
  return sub_24551AD70(a1, a2);
}

uint64_t sub_24551B370(char a1, uint64_t a2)
{
  return sub_24551ADAC(a1, a2);
}

uint64_t sub_24551B394(int a1, uint64_t a2)
{
  return sub_24551ADE4(a1, a2);
}

uint64_t sub_24551B3B8(uint64_t a1, uint64_t a2)
{
  return sub_24551AE1C(a1, a2);
}

uint64_t sub_24551B3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24551B4E8(a1, a2, a3, a4, a5, MEMORY[0x263F8E428]);
}

uint64_t sub_24551B408(uint64_t a1, uint64_t a2)
{
  return sub_24551AE54(a1, a2);
}

uint64_t sub_24551B42C(char a1, uint64_t a2)
{
  return sub_24551AE8C(a1, a2);
}

uint64_t sub_24551B450(__int16 a1, uint64_t a2)
{
  return sub_24551AEC4(a1, a2);
}

uint64_t sub_24551B474(int a1, uint64_t a2)
{
  return sub_24551AEFC(a1, a2);
}

uint64_t sub_24551B498(uint64_t a1, uint64_t a2)
{
  return sub_24551AF34(a1, a2);
}

uint64_t sub_24551B4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24551B4E8(a1, a2, a3, a4, a5, MEMORY[0x263F8E430]);
}

uint64_t sub_24551B4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = type metadata accessor for BackingDataEncoder.BackingDataKeyedEncoding();
  return a6(a1, a2, a3, v11, a5);
}

uint64_t sub_24551B578()
{
  return sub_24558F6E8();
}

uint64_t sub_24551B608()
{
  return sub_24558F6C8();
}

uint64_t sub_24551B680()
{
  return sub_24558F6B8();
}

uint64_t sub_24551B708(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24551BAE4(a1, a2, a3, a4, a5, MEMORY[0x263F8E3B8]);
}

uint64_t sub_24551B734(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551BA28(a1, a2, a3, a4, MEMORY[0x263F8E3C0]);
}

uint64_t sub_24551B760(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24551BAE4(a1, a2, a3, a4, a5, MEMORY[0x263F8E3C8]);
}

uint64_t sub_24551B78C(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551B8C0(a1, a2, a3, a4, MEMORY[0x263F8E3D8]);
}

uint64_t sub_24551B7B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551B974(a1, a2, a3, a4, MEMORY[0x263F8E3E0]);
}

uint64_t sub_24551B7E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551BA28(a1, a2, a3, a4, MEMORY[0x263F8E3E8]);
}

uint64_t sub_24551B810(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24551BAE4(a1, a2, a3, a4, a5, MEMORY[0x263F8E3F0]);
}

uint64_t sub_24551B83C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24551BBA0(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8E400]);
}

uint64_t sub_24551B868(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24551BAE4(a1, a2, a3, a4, a5, MEMORY[0x263F8E3D0]);
}

uint64_t sub_24551B894(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551B8C0(a1, a2, a3, a4, MEMORY[0x263F8E3F8]);
}

uint64_t sub_24551B8C0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for BackingDataEncoder.BackingDataKeyedEncoding();
  return a5(a1 & 0x1FF, a2, v9, a4);
}

uint64_t sub_24551B948(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551B974(a1, a2, a3, a4, MEMORY[0x263F8E408]);
}

uint64_t sub_24551B974(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for BackingDataEncoder.BackingDataKeyedEncoding();
  return a5(a1 & 0x1FFFF, a2, v9, a4);
}

uint64_t sub_24551B9FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24551BA28(a1, a2, a3, a4, MEMORY[0x263F8E410]);
}

uint64_t sub_24551BA28(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for BackingDataEncoder.BackingDataKeyedEncoding();
  return a5(a1 | ((HIDWORD(a1) & 1) << 32), a2, v9, a4);
}

uint64_t sub_24551BAB8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24551BAE4(a1, a2, a3, a4, a5, MEMORY[0x263F8E418]);
}

uint64_t sub_24551BAE4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a2 & 1;
  uint64_t v11 = type metadata accessor for BackingDataEncoder.BackingDataKeyedEncoding();
  return a6(a1, v10, a3, v11, a5);
}

uint64_t sub_24551BB74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24551BBA0(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8E420]);
}

uint64_t sub_24551BBA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = a3 & 1;
  uint64_t v13 = type metadata accessor for BackingDataEncoder.BackingDataKeyedEncoding();
  return a7(a1, a2, v12, a4, v13, a6);
}

uint64_t sub_24551BC40()
{
  return sub_24558F6D8();
}

void sub_24551BCD0()
{
}

void sub_24551BCE0()
{
}

uint64_t sub_24551BCF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_24551B0B8(a1);
}

uint64_t sub_24551BD1C@<X0>(uint64_t *a1@<X8>)
{
  return sub_24551B1FC(a1);
}

uint64_t sub_24551BD40(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v31 = (uint64_t)&v31 - v7;
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v9 = sub_24558ECE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = *(void *)(Descriptor - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v31 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, (uint64_t)v1 + *(void *)(v3 + 176), v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, Descriptor) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, Descriptor);
  sub_24558F028();
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v35 = *(void *)&v16[*(int *)(Descriptor + 56)];
    uint64_t v34 = v18;
    sub_24558E8A8();
    swift_retain();
    swift_getWitnessTable();
    if ((sub_24558E778() & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, Descriptor);
      return swift_release();
    }
    uint64_t v19 = a1 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier;
    uint64_t v20 = a1 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier;
    uint64_t v21 = v31;
    sub_24549B2DC(v20, v31);
    uint64_t v22 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 184));
    swift_beginAccess();
    uint64_t v23 = *v22;
    if (*(void *)(*v22 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_2454A2A10(v21);
      if (v25)
      {
        uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v26 = MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = MEMORY[0x263F8EE78];
    }
    sub_24549B280(v21);
    uint64_t v36 = v26;
    uint64_t v27 = swift_retain();
    MEMORY[0x2456A11F0](v27);
    if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_24558E808();
    }
    sub_24558E858();
    sub_24558E7E8();
    uint64_t v28 = v32;
    sub_24549B2DC(v19, v32);
    uint64_t v29 = v36;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *v22;
    *uint64_t v22 = 0x8000000000000000;
    sub_245506118(v29, v28, isUniquelyReferenced_nonNull_native);
    *uint64_t v22 = v33;
    swift_bridgeObjectRelease();
    sub_24549B280(v28);
    swift_endAccess();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, Descriptor);
}

void sub_24551C1E8()
{
}

void sub_24551C1F8()
{
}

uint64_t sub_24551C208(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v48 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v52 = a1;
  uint64_t v50 = v5;
  if (v14)
  {
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
LABEL_60:
      __break(1u);
LABEL_61:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_24558EF78();
      sub_24558E668();
      sub_24549B2DC((uint64_t)v5, (uint64_t)v8);
      sub_24558F0E8();
      sub_24549B280((uint64_t)v8);
      sub_24558E668();
      uint64_t v53 = v52;
      type metadata accessor for ModelContext(0);
      sub_24558F0E8();
      goto LABEL_67;
    }
    uint64_t v15 = Strong;
  }
  uint64_t v17 = *(void *)(v15 + 16);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v18 = *(void *)(v17 + 72);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier);
  sub_24549B2DC(v2 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier, (uint64_t)v13);
  uint64_t v19 = (uint64_t *)(*(void *)&v13[*(int *)(v4 + 20)]
                  + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  swift_bridgeObjectRetain();
  sub_24549B280((uint64_t)v13);
  if (!*(void *)(v18 + 16)) {
    goto LABEL_61;
  }
  unint64_t v22 = sub_2454A0B40(v20, v21);
  if ((v23 & 1) == 0) {
    goto LABEL_61;
  }
  uint64_t v24 = *(void *)(*(void *)(v18 + 56) + 8 * v22);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v24 + 144);
  if (!v25)
  {
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v53 = v24;
    type metadata accessor for Schema.Entity();
    sub_24558F0E8();
    goto LABEL_67;
  }
  uint64_t v51 = *(void *)(v24 + 152);
  uint64_t v26 = OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_keyPath;
  if (sub_24558EDA8() != v25)
  {
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24549B2DC((uint64_t)v5, (uint64_t)v8);
    sub_24558F0E8();
    sub_24549B280((uint64_t)v8);
    sub_24558E668();
    uint64_t v53 = *(void *)(v2 + v26);
    sub_24558EDD8();
    sub_24558F0E8();
    sub_24558E668();
    sub_24549B2DC((uint64_t)v5, (uint64_t)v8);
    swift_bridgeObjectRetain();
    sub_24549B280((uint64_t)v8);
    sub_24558E668();
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  sub_24558EDA8();
  uint64_t v8 = (char *)v27;
  uint64_t v54 = (uint64_t *)v27;
  if (swift_conformsToProtocol2()) {
    uint64_t v28 = v8;
  }
  else {
    uint64_t v28 = 0;
  }
  if (v28)
  {
    uint64_t v29 = (uint64_t)v28;
    do
    {
      sub_24549E524(v29, (uint64_t *)&v54);
      uint64_t v30 = v54;
      if (swift_conformsToProtocol2()) {
        uint64_t v29 = (uint64_t)v30;
      }
      else {
        uint64_t v29 = 0;
      }
    }
    while (v29);
  }
  else
  {
    uint64_t v30 = (uint64_t *)v8;
  }
  uint64_t v49 = v26;
  uint64_t v5 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9980);
  uint64_t v31 = *v30;
  if ((unint64_t)*v30 > 0x7FF || ((unint64_t)(v31 - 512) >= 3 ? (BOOL v32 = v31 == 0) : (BOOL v32 = 1), v32)) {
    uint64_t v47 = sub_24558E2B8();
  }
  else {
    uint64_t v47 = 0;
  }
  uint64_t v33 = *v5;
  if (*v5 > 0x7FFuLL || ((unint64_t)(v33 - 512) >= 3 ? (BOOL v34 = v33 == 0) : (BOOL v34 = 1), v34))
  {
    uint64_t v35 = sub_24558E2B8();
    if (v47)
    {
      if (v35 && v35 == v47) {
        goto LABEL_36;
      }
    }
    else if (!v35)
    {
LABEL_36:
      sub_24558E348();
      if (v36 < 0)
      {
        __break(1u);
      }
      else
      {
        if (!v36)
        {
LABEL_66:
          uint64_t v54 = 0;
          unint64_t v55 = 0xE000000000000000;
          sub_24558EF78();
          sub_24558E668();
          sub_24558F908();
          sub_24558E668();
          swift_bridgeObjectRelease();
          sub_24558E668();
          uint64_t v53 = *(void *)(v2 + v49);
          sub_24558EDD8();
          sub_24558F0E8();
          sub_24558E668();
          sub_24558F908();
          sub_24558E668();
          swift_bridgeObjectRelease();
          goto LABEL_67;
        }
        uint64_t v37 = (uint64_t *)sub_24558E348();
        if (v38 >= 1)
        {
          uint64_t v39 = *v37;
          uint64_t v40 = swift_conformsToProtocol2();
          if (v40) {
            uint64_t v41 = v40;
          }
          else {
            uint64_t v41 = 0;
          }
          if (v40) {
            uint64_t v42 = v39;
          }
          else {
            uint64_t v42 = 0;
          }
          if (v42)
          {
            sub_24551CDFC(v42, v2, v52, v28 != 0, v25, v51, v42, v41);
            return swift_release();
          }
          goto LABEL_66;
        }
      }
      __break(1u);
      goto LABEL_60;
    }
  }
  else if (!v47)
  {
    goto LABEL_36;
  }
  uint64_t v44 = swift_conformsToProtocol2();
  if (v44) {
    uint64_t v45 = v44;
  }
  else {
    uint64_t v45 = 0;
  }
  if (!v44) {
    uint64_t v30 = 0;
  }
  if (v30)
  {
    uint64_t v46 = *(void *)(v2 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_identifiersToLink);
    if (*(void *)(v46 + 16))
    {
      sub_24549B2DC(v46 + ((*((unsigned __int8 *)v50 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v50 + 80)), (uint64_t)v11);
      sub_24551DED8((uint64_t)v30, v28 != 0, v25, v51, v2, v52, (uint64_t)v11, (uint64_t)v30, v45);
      swift_release();
      return sub_24549B280((uint64_t)v11);
    }
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v53 = v2;
    type metadata accessor for BackingDataEncodingRelationshipLink();
    sub_24558F0E8();
  }
  else
  {
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v53 = *(void *)(v2 + v49);
    sub_24558EDD8();
    sub_24558F0E8();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
  }
LABEL_67:
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24551CC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a3 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier;
  sub_24549B2DC(v8, (uint64_t)v7);
  uint64_t v9 = sub_2454871BC((uint64_t)v7);
  sub_24549B280((uint64_t)v7);
  if (v9) {
    return v9;
  }
  v11[2] = 0;
  void v11[3] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_24549B2DC(v8, (uint64_t)v7);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v7);
  sub_24558E668();
  v11[1] = a2;
  type metadata accessor for ModelContext(0);
  sub_24558F0E8();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24551CDFC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a6;
  int v33 = a4;
  uint64_t v13 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v30 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v31 = (uint64_t)&v29 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v38 = sub_24558E408();
  uint64_t v21 = *(void *)(a2 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_identifiersToLink);
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v29 = v13;
    uint64_t v32 = a2;
    uint64_t v23 = v21 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v24 = *(void *)(v14 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24549B2DC(v23, (uint64_t)v20);
      uint64_t v25 = sub_2454871BC((uint64_t)v20);
      if (!v25) {
        break;
      }
      uint64_t v36 = v25;
      sub_24558E8A8();
      sub_24558E888();
      sub_24549B280((uint64_t)v20);
      v23 += v24;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        a2 = v32;
        goto LABEL_6;
      }
    }
    sub_24549B2DC((uint64_t)v20, v31);
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v27 = v32;
    uint64_t v28 = v30;
    sub_24549B2DC(v32 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier, v30);
    sub_24558F0E8();
    sub_24549B280(v28);
    sub_24558E668();
    sub_24558F0E8();
    sub_24558E668();
    uint64_t v35 = *(void *)(v27 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_keyPath);
    sub_24558EDD8();
    sub_24558F0E8();
    sub_24558E668();
    uint64_t v35 = a3;
    type metadata accessor for ModelContext(0);
    sub_24558F0E8();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  else
  {
LABEL_6:
    if (v33) {
      sub_24551D1DC(a5, v38, a2, a3, a7, a5, a7, a8, v34);
    }
    else {
      sub_24551D47C(a5, v38, a2, a3, a7, a5, a7, a8, v34);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24551D1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_24558E8A8();
  uint64_t v21 = sub_24558ECE8();
  sub_24558F8A8();
  uint64_t v13 = swift_dynamicCastClass();
  if (v13)
  {
    uint64_t v14 = v13;
    swift_retain();
    sub_24551CC30(a6, a4, a3);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 40))(&v22, a6, a9);
    uint64_t v16 = v23;
    uint64_t v15 = v24;
    __swift_project_boxed_opaque_existential_1Tm_0(&v22, v23);
    uint64_t v25 = a2;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 136);
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t WitnessTable = swift_getWitnessTable();
    v17(v14, &v25, v21, a7, WitnessTable, v16, v15);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v22);
  }
  else
  {
    sub_24558EF78();
    sub_24558E668();
    sub_24558EDD8();
    sub_24558F0E8();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_24551D47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v21 = sub_24558E8A8();
  sub_24558F8A8();
  uint64_t v14 = swift_dynamicCastClass();
  if (v14)
  {
    uint64_t v15 = v14;
    swift_retain();
    sub_24551CC30(a6, a4, a3);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 40))(&v22, a6, a9);
    uint64_t v16 = v23;
    uint64_t v17 = v24;
    __swift_project_boxed_opaque_existential_1Tm_0(&v22, v23);
    uint64_t v25 = a2;
    uint64_t v18 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 136);
    uint64_t WitnessTable = swift_getWitnessTable();
    v18(v15, &v25, v21, a7, WitnessTable, v16, v17);
    swift_release();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v22);
  }
  else
  {
    sub_24558EF78();
    sub_24558E668();
    sub_24558EDD8();
    sub_24558F0E8();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_24551D6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v29 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v15 = MEMORY[0x270FA5388](v29);
  uint64_t v28 = (uint64_t)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v27 = (uint64_t)&v27 - v17;
  uint64_t v18 = OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_keyPath;
  uint64_t v32 = sub_24558F8A8();
  uint64_t v19 = swift_dynamicCastClass();
  if (v19)
  {
    uint64_t v20 = v19;
    swift_retain();
    uint64_t v30 = a3;
    sub_24551CC30(a6, a4, a3);
    uint64_t v31 = a4;
    uint64_t v21 = sub_2454871BC(a5);
    if (v21)
    {
      uint64_t v22 = v21;
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 40))(&v33, a6, a8);
      uint64_t v23 = v35;
      uint64_t v24 = v36;
      __swift_project_boxed_opaque_existential_1Tm_0(&v33, v35);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 120))(v20, v22, a7, a9, v23, v24);
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v33);
    }
    sub_24549B2DC(a5, v27);
    uint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558F0E8();
    sub_24558E668();
    uint64_t v26 = v28;
    sub_24549B2DC(v30 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier, v28);
    sub_24558F0E8();
    sub_24549B280(v26);
    sub_24558E668();
    uint64_t v37 = v20;
    sub_24558F568();
    sub_24558E668();
    uint64_t v37 = v31;
    type metadata accessor for ModelContext(0);
    sub_24558F0E8();
  }
  else
  {
    uint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v37 = *(void *)(a3 + v18);
    sub_24558EDD8();
    sub_24558F0E8();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24551DACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v28 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v15 = MEMORY[0x270FA5388](v28);
  uint64_t v27 = (uint64_t)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v26 = (uint64_t)&v26 - v17;
  uint64_t v18 = OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_keyPath;
  sub_24558ECE8();
  uint64_t v30 = sub_24558F8A8();
  uint64_t v31 = swift_dynamicCastClass();
  if (v31)
  {
    swift_retain();
    uint64_t v29 = a3;
    sub_24551CC30(a6, a4, a3);
    uint64_t v19 = sub_2454871BC(a5);
    if (v19)
    {
      uint64_t v20 = v19;
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 40))(&v32, a6, a8);
      uint64_t v21 = v34;
      uint64_t v22 = v35;
      __swift_project_boxed_opaque_existential_1Tm_0(&v32, v34);
      uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 128);
      swift_unknownObjectRetain();
      v23(v31, v20, a7, a9, v21, v22);
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease_n();
      return __swift_destroy_boxed_opaque_existential_1Tm_1((uint64_t)&v32);
    }
    sub_24549B2DC(a5, v26);
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558F0E8();
    sub_24558E668();
    uint64_t v25 = v27;
    sub_24549B2DC(v29 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier, v27);
    sub_24558F0E8();
    sub_24549B280(v25);
    sub_24558E668();
    uint64_t v36 = v31;
    sub_24558F568();
    sub_24558E668();
    uint64_t v36 = a4;
    type metadata accessor for ModelContext(0);
    sub_24558F0E8();
  }
  else
  {
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v36 = *(void *)(a3 + v18);
    sub_24558EDD8();
    sub_24558F0E8();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24551DED8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2) {
    return sub_24551DACC(a3, a1, a5, a6, a7, a3, a8, a4, a9);
  }
  else {
    return sub_24551D6D4(a3, a1, a5, a6, a7, a3, a8, a4, a9);
  }
}

uint64_t sub_24551DF38()
{
  sub_24549B280(v0 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_24551DFBC()
{
  return type metadata accessor for BackingDataEncodingRelationshipLink();
}

uint64_t sub_24551DFC4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 152);
}

uint64_t sub_24551DFCC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_24551DFD4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

uint64_t sub_24551DFDC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_24551DFE4(uint64_t a1, int64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_245525A18();
    *uint64_t v3 = v13;
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (a2 < 0 || (uint64_t v9 = *v3, 1 << *(unsigned char *)(*v4 + 32) <= a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(v9 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(v9 + 36) == a3)
  {
    *uint64_t v4 = 0x8000000000000000;
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
    sub_2454A3CC8(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a2, a1, type metadata accessor for PersistentIdentifier);
    uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * a2);
    sub_245523098(a2, v9);
    *uint64_t v4 = v9;
    swift_bridgeObjectRelease();
    return v12;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_24551E110()
{
  uint64_t v1 = sub_245511BC4();
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)&long long v8 = v1;
  *((void *)&v8 + 1) = v3;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  uint64_t result = swift_unknownObjectRelease();
  if (v4)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v7, &v8);
    swift_dynamicCast();
    uint64_t v6 = v9;
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24551E1FC()
{
  uint64_t v1 = sub_245511BC4();
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)&long long v8 = v1;
  *((void *)&v8 + 1) = v3;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  uint64_t result = swift_unknownObjectRelease();
  if (v4)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v7, &v8);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24551E2EC()
{
  uint64_t v1 = sub_245511BC4();
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)&long long v7 = v1;
  *((void *)&v7 + 1) = v3;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  uint64_t result = swift_unknownObjectRelease();
  if (v4)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v6, &v7);
    swift_dynamicCast();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24551E3E0()
{
  uint64_t v1 = sub_245511BC4();
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)&long long v7 = v1;
  *((void *)&v7 + 1) = v3;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  uint64_t result = swift_unknownObjectRelease();
  if (v4)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v6, &v7);
    swift_dynamicCast();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24551E4D4()
{
  uint64_t v1 = sub_245511BC4();
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)&long long v8 = v1;
  *((void *)&v8 + 1) = v3;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  uint64_t result = swift_unknownObjectRelease();
  if (v4)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v7, &v8);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24551E5C0()
{
  uint64_t v1 = sub_245511BC4();
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)&long long v8 = v1;
  *((void *)&v8 + 1) = v3;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  uint64_t result = swift_unknownObjectRelease();
  if (v4)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v7, &v8);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24551E6AC()
{
  uint64_t v1 = sub_245511BC4();
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)&long long v8 = v1;
  *((void *)&v8 + 1) = v3;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  uint64_t result = swift_unknownObjectRelease();
  if (v4)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v7, &v8);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24551E798()
{
  uint64_t v1 = sub_245511BC4();
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)&long long v8 = v1;
  *((void *)&v8 + 1) = v3;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_24558F728());
  uint64_t result = swift_unknownObjectRelease();
  if (v4)
  {
    sub_24558ED88();
    swift_unknownObjectRelease();
    sub_2454A0BBC(&v7, &v8);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24551E884()
{
  return sub_24558F8D8();
}

unint64_t sub_24551E8EC()
{
  unint64_t result = qword_268EE3970;
  if (!qword_268EE3970)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3968);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3970);
  }
  return result;
}

_OWORD *sub_24551E948(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_24551E960()
{
  return sub_24558F8D8();
}

uint64_t sub_24551E9C4(id *a1)
{
  return sub_24550D544(a1) & 1;
}

id sub_24551E9EC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_24550CE34(a1, a2);
}

uint64_t sub_24551EA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_2454A0BBC((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *long long v3 = 0x8000000000000000;
    sub_2454DED7C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *long long v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2454A52AC(a1, &qword_26B0DA230);
    sub_2454E0660(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_2454A52AC((uint64_t)v9, &qword_26B0DA230);
  }
}

void *DataStoreSaveChangesResult.__allocating_init(for:remappedIdentifiers:snapshotsToReregister:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a3;
  result[3] = a1;
  result[4] = a2;
  result[5] = a4;
  return result;
}

uint64_t sub_24551EB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558ECE8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v17[-v7 - 8];
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_24549E1EC(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA030);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v12)
  {
    v13(v8, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, a2);
    char v14 = sub_24558E558();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    v13(v8, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    char v14 = 0;
  }
  return v14 & 1;
}

unint64_t DataStoreSnapshotCodingKey.stringValue.getter()
{
  if (v0[1]) {
    unint64_t v1 = *v0;
  }
  else {
    unint64_t v1 = 0xD000000000000014;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24551EE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return DataStore.fetchCount<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t DataStore.fetchCount<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = a3;
  uint64_t v21 = AssociatedTypeWitness;
  uint64_t v22 = a5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for DataStoreFetchResult();
  uint64_t v19 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 80))(a1, a3, a5, a2, a4);
  if (!v14)
  {
    uint64_t v15 = *(void *)&v13[*(int *)(v11 + 52)];
    uint64_t v16 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_bridgeObjectRetain();
    v16(v13, v11);
    uint64_t AssociatedTypeWitness = MEMORY[0x2456A12B0](v15, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
  }
  return AssociatedTypeWitness;
}

uint64_t sub_24551EFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return DataStore.fetchIdentifiers<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t DataStore.fetchIdentifiers<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = a5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for DataStoreFetchResult();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 80);
  uint64_t v25 = a5;
  uint64_t v15 = v30;
  v14(a1, v26, a5, a2, a4);
  if (!v15)
  {
    uint64_t v16 = *(void *)&v13[*(int *)(v10 + 52)];
    uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    swift_bridgeObjectRetain();
    uint64_t v18 = v17(v13, v10);
    uint64_t v26 = v16;
    MEMORY[0x270FA5388](v18);
    *(&v25 - 4) = a2;
    *(&v25 - 3) = a3;
    uint64_t v19 = v25;
    *(&v25 - 2) = a4;
    *(&v25 - 1) = v19;
    uint64_t v20 = sub_24558E8A8();
    uint64_t v21 = type metadata accessor for PersistentIdentifier(0);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v11 = sub_2454C7F30((void (*)(char *, char *))sub_245526904, (uint64_t)(&v25 - 6), v20, v21, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v23);
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_24551F258()
{
  return sub_245526928();
}

uint64_t DataStore.cachedSnapshots(for:editingState:)()
{
  return sub_245526928();
}

BOOL static DataStoreError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DataStoreError.hash(into:)()
{
  return sub_24558F7E8();
}

uint64_t DataStoreError.hashValue.getter()
{
  return sub_24558F818();
}

BOOL sub_24551F328(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24551F33C()
{
  return sub_24558F818();
}

uint64_t sub_24551F384()
{
  return sub_24558F7E8();
}

uint64_t sub_24551F3B0()
{
  return sub_24558F818();
}

uint64_t DataStoreSnapshotCodingKey.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  if (a1 == 0xD000000000000014 && a2 == 0x80000002455915F0 || (uint64_t result = sub_24558F598(), (result & 1) != 0))
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  *a3 = v4;
  a3[1] = v3;
  return result;
}

uint64_t DataStoreSnapshotCodingKey.intValue.getter()
{
  return 0;
}

double DataStoreSnapshotCodingKey.init(intValue:)@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_245598EA0;
  return result;
}

uint64_t sub_24551F4BC()
{
  return 0;
}

double sub_24551F4C8@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_245598EA0;
  return result;
}

uint64_t sub_24551F4D8(uint64_t a1)
{
  unint64_t v2 = sub_2454A2748();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24551F514(uint64_t a1)
{
  unint64_t v2 = sub_2454A2748();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DefaultSnapshot.persistentIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DefaultSnapshot(0);
  return sub_24549F9D4(v1 + *(int *)(v3 + 20), a1, type metadata accessor for PersistentIdentifier);
}

uint64_t DefaultSnapshot.init(from:relatedBackingDatas:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DefaultSnapshot(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v11 = MEMORY[0x263F8EE80];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm_1(a1, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
  uint64_t v14 = type metadata accessor for PersistentIdentifier(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v8, 1, v14);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_2454A3D30((uint64_t)v8, (uint64_t)v11 + *(int *)(v9 + 20), type metadata accessor for PersistentIdentifier);
    __swift_project_boxed_opaque_existential_1Tm_1(a1, a1[3]);
    uint64_t DynamicType = swift_getDynamicType();
    sub_2454D1960(DynamicType, a1, a2, v11);
    sub_2454A3D30((uint64_t)v11, a3, type metadata accessor for DefaultSnapshot);
    return __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)a1);
  }
  return result;
}

uint64_t DefaultSnapshot.copy(persistentIdentifier:remappedIdentifiers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for DefaultSnapshot(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t isUniquelyReferenced_nonNull_native = (unint64_t)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v136 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v136 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  MEMORY[0x270FA5388](v16 - 8);
  v154 = (char *)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v157 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v162 = (uint64_t)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v159 = (uint64_t)&v136 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v158 = (uint64_t)&v136 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v161 = (uint64_t)&v136 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  MEMORY[0x270FA5388](v29);
  v168 = v3;
  uint64_t v34 = (void *)*v3;
  if (!a2 || (uint64_t v160 = a2, !*(void *)(a2 + 16)))
  {
    uint64_t v44 = v34;
    swift_bridgeObjectRetain();
    goto LABEL_88;
  }
  uint64_t v149 = (uint64_t)&v136 - v30;
  uint64_t v146 = v32;
  uint64_t v147 = v33;
  uint64_t v153 = v31;
  uint64_t v35 = (uint64_t *)(*(void *)(a1 + *(int *)(v18 + 20))
                  + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  uint64_t v36 = *v35;
  uint64_t v37 = v35[1];
  v155 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_2454A22EC(v36, v37);
  swift_bridgeObjectRelease();
  if (!v38)
  {
LABEL_94:
    sub_24549F9D4((uint64_t)v168, isUniquelyReferenced_nonNull_native, type metadata accessor for DefaultSnapshot);
    *(void *)&v179[0] = 0;
    *((void *)&v179[0] + 1) = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558F0E8();
    goto LABEL_97;
  }
  uint64_t v150 = v18;
  v144 = v13;
  v145 = v15;
  swift_beginAccess();
  uint64_t v39 = *(void *)(v38 + 88);
  uint64_t v152 = v38;
  if ((v39 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24558EE48();
    type metadata accessor for Schema.Relationship();
    sub_2454A2AC4((unint64_t *)&qword_26B0D8D10, (void (*)(uint64_t))type metadata accessor for Schema.Relationship);
    sub_24558E9F8();
    uint64_t v40 = v180;
    uint64_t v166 = v181;
    uint64_t v41 = v182;
    unint64_t v42 = v183;
    uint64_t v43 = v184;
  }
  else
  {
    uint64_t v45 = -1 << *(unsigned char *)(v39 + 32);
    uint64_t v46 = *(void *)(v39 + 56);
    uint64_t v166 = v39 + 56;
    uint64_t v41 = ~v45;
    uint64_t v47 = -v45;
    if (v47 < 64) {
      uint64_t v48 = ~(-1 << v47);
    }
    else {
      uint64_t v48 = -1;
    }
    uint64_t v43 = v48 & v46;
    uint64_t v40 = swift_bridgeObjectRetain();
    unint64_t v42 = 0;
  }
  uint64_t v151 = v41;
  uint64_t v164 = v40 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v165 = (unint64_t)(v41 + 64) >> 6;
  v148 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56);
  uint64_t v163 = MEMORY[0x263F8EE50] + 8;
  uint64_t v167 = v40;
LABEL_12:
  unint64_t isUniquelyReferenced_nonNull_native = v42;
  unint64_t v49 = v43;
  while (v40 < 0)
  {
    uint64_t v51 = sub_24558EEC8();
    if (!v51) {
      goto LABEL_87;
    }
    *(void *)&long long v176 = v51;
    type metadata accessor for Schema.Relationship();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v52 = *(void *)&v179[0];
    swift_unknownObjectRelease();
    unint64_t v42 = isUniquelyReferenced_nonNull_native;
    uint64_t v43 = v49;
    if (!v52) {
      goto LABEL_87;
    }
LABEL_36:
    uint64_t v56 = *v168;
    swift_beginAccess();
    if (*(void *)(v56 + 16))
    {
      uint64_t v58 = *(void *)(v52 + 16);
      uint64_t v57 = *(void *)(v52 + 24);
      swift_bridgeObjectRetain();
      unint64_t v59 = sub_2454A0B40(v58, v57);
      if (v60)
      {
        sub_24549E2B4(*(void *)(v56 + 56) + 48 * v59, (uint64_t)&v176);
      }
      else
      {
        long long v178 = 0u;
        long long v176 = 0u;
        long long v177 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v177 + 1))
      {
        sub_2454A2148(&v176, v179);
        if (*(unsigned char *)(v52 + 168) != 1)
        {
          uint64_t v141 = (uint64_t)a3;
          uint64_t v142 = v7;
          sub_24549E2B4((uint64_t)v179, (uint64_t)&v176);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9828);
          uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D92A0);
          if (!swift_dynamicCast())
          {
            sub_24549F9D4((uint64_t)v168, (uint64_t)v144, type metadata accessor for DefaultSnapshot);
            sub_24549E2B4((uint64_t)v179, (uint64_t)&v176);
            *(void *)&long long v174 = 0;
            *((void *)&v174 + 1) = 0xE000000000000000;
            sub_24558EF78();
            sub_24558E668();
            swift_bridgeObjectRetain();
            sub_24558E668();
            swift_bridgeObjectRelease();
            sub_24558E668();
            sub_24558F0E8();
            sub_24558E668();
            sub_24558F0E8();
LABEL_97:
            sub_24558F1A8();
            __break(1u);
LABEL_98:
            uint64_t result = sub_24558F748();
            __break(1u);
            return result;
          }
          uint64_t v82 = *(void *)(v174 + 16);
          uint64_t v83 = v160;
          uint64_t v84 = v161;
          uint64_t v140 = a1;
          if (v82)
          {
            uint64_t v85 = v157;
            unint64_t v156 = (*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80);
            uint64_t v86 = v174 + v156;
            v139 = (uint64_t *)v174;
            swift_bridgeObjectRetain();
            uint64_t v87 = *(void *)(v85 + 72);
            unint64_t v88 = MEMORY[0x263F8EE78];
            do
            {
              sub_24549F9D4(v86, v84, type metadata accessor for PersistentIdentifier);
              if (*(void *)(v83 + 16) && (unint64_t v89 = sub_2454A2A10(v84), (v90 & 1) != 0))
              {
                uint64_t v91 = v153;
                sub_24549F9D4(*(void *)(v83 + 56) + v89 * v87, v153, type metadata accessor for PersistentIdentifier);
                uint64_t v92 = v91;
                uint64_t v93 = v158;
                sub_2454A3D30(v92, v158, type metadata accessor for PersistentIdentifier);
                sub_24549F9D4(v93, v159, type metadata accessor for PersistentIdentifier);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v88 = sub_2454D2B78(0, *(void *)(v88 + 16) + 1, 1, v88);
                }
                unint64_t v95 = *(void *)(v88 + 16);
                unint64_t v94 = *(void *)(v88 + 24);
                if (v95 >= v94 >> 1) {
                  unint64_t v88 = sub_2454D2B78(v94 > 1, v95 + 1, 1, v88);
                }
                *(void *)(v88 + 16) = v95 + 1;
                sub_2454A3D30(v159, v88 + v156 + v95 * v87, type metadata accessor for PersistentIdentifier);
                sub_24549F900(v158, type metadata accessor for PersistentIdentifier);
              }
              else
              {
                sub_24549F9D4(v84, v162, type metadata accessor for PersistentIdentifier);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v88 = sub_2454D2B78(0, *(void *)(v88 + 16) + 1, 1, v88);
                }
                unint64_t v97 = *(void *)(v88 + 16);
                unint64_t v96 = *(void *)(v88 + 24);
                if (v97 >= v96 >> 1) {
                  unint64_t v88 = sub_2454D2B78(v96 > 1, v97 + 1, 1, v88);
                }
                *(void *)(v88 + 16) = v97 + 1;
                sub_2454A3D30(v162, v88 + v156 + v97 * v87, type metadata accessor for PersistentIdentifier);
              }
              uint64_t v84 = v161;
              sub_24549F900(v161, type metadata accessor for PersistentIdentifier);
              v86 += v87;
              --v82;
              uint64_t v83 = v160;
            }
            while (v82);
            swift_bridgeObjectRelease_n();
          }
          else
          {
            swift_bridgeObjectRelease();
            unint64_t v88 = MEMORY[0x263F8EE78];
          }
          unint64_t v100 = *(void *)(v52 + 16);
          uint64_t v99 = *(void *)(v52 + 24);
          *((void *)&v177 + 1) = v143;
          v139 = (uint64_t *)sub_2454AB1C0(&qword_26B0D8CF8, &qword_26B0D9790);
          *(void *)&long long v178 = v139;
          uint64_t v138 = sub_2454AB1C0(&qword_26B0D8CF0, &qword_26B0D9788);
          *((void *)&v178 + 1) = v138;
          *(void *)&long long v176 = v88;
          sub_2454A2148(&v176, &v174);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v101 = v155;
          unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v173 = v101;
          unint64_t v156 = v100;
          uint64_t v102 = v100;
          uint64_t v103 = v99;
          unint64_t v105 = sub_2454A0B40(v102, v99);
          uint64_t v106 = v101[2];
          BOOL v107 = (v104 & 1) == 0;
          uint64_t v108 = v106 + v107;
          a3 = (void *)v141;
          uint64_t v7 = v142;
          if (!__OFADD__(v106, v107))
          {
            if (v101[3] >= v108)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v137 = v105;
                char v133 = v104;
                sub_245524CFC();
                LOBYTE(v104) = v133;
                unint64_t v105 = v137;
              }
            }
            else
            {
              LODWORD(v155) = v104;
              sub_2454A1E20(v108, isUniquelyReferenced_nonNull_native);
              unint64_t v109 = sub_2454A0B40(v156, v103);
              int v110 = v104 & 1;
              LOBYTE(v104) = (_BYTE)v155;
              if ((v155 & 1) != v110) {
                goto LABEL_98;
              }
              unint64_t v105 = v109;
            }
            v155 = v173;
            if (v104)
            {
              uint64_t v111 = (_OWORD *)(v173[7] + 48 * v105);
              __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v111);
              sub_2454A2148(&v174, v111);
LABEL_78:
              a1 = v140;
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v179);
              swift_bridgeObjectRelease();
              uint64_t v40 = v167;
              goto LABEL_12;
            }
            unint64_t v137 = v105;
            uint64_t v112 = __swift_mutable_project_boxed_opaque_existential_2((uint64_t)&v174, v175);
            uint64_t v136 = (uint64_t)&v136;
            MEMORY[0x270FA5388](v112);
            v114 = (uint64_t *)((char *)&v136 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v115 + 16))(v114);
            uint64_t v116 = *v114;
            unint64_t isUniquelyReferenced_nonNull_native = v103;
            unint64_t v117 = v137;
            v171 = v139;
            uint64_t v172 = v138;
            uint64_t v170 = v143;
            *(void *)&long long v169 = v116;
            v155[(v137 >> 6) + 8] |= 1 << v137;
            uint64_t v118 = (unint64_t *)(v155[6] + 16 * v117);
            *uint64_t v118 = v156;
            v118[1] = v103;
            sub_2454A2148(&v169, (_OWORD *)(v155[7] + 48 * v117));
            uint64_t v119 = v155[2];
            BOOL v120 = __OFADD__(v119, 1);
            uint64_t v121 = v119 + 1;
            if (!v120)
            {
              v155[2] = v121;
              __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)&v174);
              swift_bridgeObjectRetain();
              goto LABEL_78;
            }
            goto LABEL_91;
          }
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
          goto LABEL_94;
        }
        sub_24549E2B4((uint64_t)v179, (uint64_t)&v176);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9828);
        uint64_t v61 = (uint64_t)v154;
        uint64_t v62 = v150;
        int v63 = swift_dynamicCast();
        uint64_t v64 = *v148;
        if (!v63)
        {
          v64(v61, 1, 1, v62);
          sub_2454A52AC(v61, &qword_26B0D9280);
          sub_24549F9D4((uint64_t)v168, (uint64_t)v145, type metadata accessor for DefaultSnapshot);
          sub_24549E2B4((uint64_t)v179, (uint64_t)&v176);
          *(void *)&long long v174 = 0;
          *((void *)&v174 + 1) = 0xE000000000000000;
          sub_24558EF78();
          sub_24558E668();
          swift_bridgeObjectRetain();
          sub_24558E668();
          swift_bridgeObjectRelease();
          sub_24558E668();
          sub_24558F0E8();
          sub_24558E668();
          sub_24558F0E8();
          goto LABEL_97;
        }
        v64(v61, 0, 1, v62);
        uint64_t v65 = v149;
        sub_2454A3D30(v61, v149, type metadata accessor for PersistentIdentifier);
        uint64_t v66 = v160;
        if (*(void *)(v160 + 16) && (unint64_t v67 = sub_2454A2A10(v65), (v68 & 1) != 0))
        {
          uint64_t v69 = v146;
          sub_24549F9D4(*(void *)(v66 + 56) + *(void *)(v157 + 72) * v67, v146, type metadata accessor for PersistentIdentifier);
          uint64_t v70 = v147;
          sub_2454A3D30(v69, v147, type metadata accessor for PersistentIdentifier);
          uint64_t v143 = *(void *)(v52 + 16);
          unint64_t v156 = *(void *)(v52 + 24);
          *((void *)&v177 + 1) = v150;
          uint64_t v142 = sub_2454A2AC4(&qword_26B0D9790, (void (*)(uint64_t))type metadata accessor for PersistentIdentifier);
          *(void *)&long long v178 = v142;
          uint64_t v141 = sub_2454A2AC4(&qword_26B0D9788, (void (*)(uint64_t))type metadata accessor for PersistentIdentifier);
          *((void *)&v178 + 1) = v141;
          boxed_opaque_existential_2 = __swift_allocate_boxed_opaque_existential_2((uint64_t *)&v176);
          sub_24549F9D4(v70, (uint64_t)boxed_opaque_existential_2, type metadata accessor for PersistentIdentifier);
          sub_2454A2148(&v176, &v174);
          unint64_t isUniquelyReferenced_nonNull_native = v156;
          swift_bridgeObjectRetain();
          uint64_t v72 = v155;
          char v73 = swift_isUniquelyReferenced_nonNull_native();
          v173 = v72;
          unint64_t v75 = sub_2454A0B40(v143, isUniquelyReferenced_nonNull_native);
          uint64_t v76 = v72[2];
          BOOL v77 = (v74 & 1) == 0;
          uint64_t v78 = v76 + v77;
          if (__OFADD__(v76, v77)) {
            goto LABEL_92;
          }
          char v79 = v74;
          if (v72[3] >= v78)
          {
            if ((v73 & 1) == 0)
            {
              unint64_t v134 = v75;
              sub_245524CFC();
              unint64_t v75 = v134;
            }
          }
          else
          {
            sub_2454A1E20(v78, v73);
            unint64_t v80 = sub_2454A0B40(v143, v156);
            if ((v79 & 1) != (v81 & 1)) {
              goto LABEL_98;
            }
            unint64_t v75 = v80;
          }
          v155 = v173;
          if (v79)
          {
            uint64_t v122 = (_OWORD *)(v173[7] + 48 * v75);
            __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v122);
            sub_2454A2148(&v174, v122);
          }
          else
          {
            unint64_t isUniquelyReferenced_nonNull_native = v75;
            uint64_t v123 = __swift_mutable_project_boxed_opaque_existential_2((uint64_t)&v174, v175);
            v139 = &v136;
            MEMORY[0x270FA5388](v123);
            long long v125 = (char *)&v136 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v126 + 16))(v125);
            uint64_t v170 = v150;
            v171 = (void *)v142;
            uint64_t v172 = v141;
            v127 = __swift_allocate_boxed_opaque_existential_2((uint64_t *)&v169);
            uint64_t v128 = (uint64_t)v125;
            unint64_t v129 = v156;
            sub_2454A3D30(v128, (uint64_t)v127, type metadata accessor for PersistentIdentifier);
            v155[(isUniquelyReferenced_nonNull_native >> 6) + 8] |= 1 << isUniquelyReferenced_nonNull_native;
            v130 = (void *)(v155[6] + 16 * isUniquelyReferenced_nonNull_native);
            void *v130 = v143;
            v130[1] = v129;
            sub_2454A2148(&v169, (_OWORD *)(v155[7] + 48 * isUniquelyReferenced_nonNull_native));
            uint64_t v131 = v155[2];
            BOOL v120 = __OFADD__(v131, 1);
            uint64_t v132 = v131 + 1;
            if (v120) {
              goto LABEL_93;
            }
            v155[2] = v132;
            __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)&v174);
            swift_bridgeObjectRetain();
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24549F900(v147, type metadata accessor for PersistentIdentifier);
          uint64_t v98 = v149;
        }
        else
        {
          swift_release();
          uint64_t v98 = v65;
        }
        sub_24549F900(v98, type metadata accessor for PersistentIdentifier);
        __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v179);
        uint64_t v40 = v167;
        goto LABEL_12;
      }
    }
    else
    {
      long long v178 = 0u;
      long long v176 = 0u;
      long long v177 = 0u;
    }
    swift_release();
    sub_2454A52AC((uint64_t)&v176, &qword_26B0D9830);
    unint64_t isUniquelyReferenced_nonNull_native = v42;
    unint64_t v49 = v43;
    uint64_t v40 = v167;
  }
  if (v49)
  {
    uint64_t v43 = (v49 - 1) & v49;
    unint64_t v50 = __clz(__rbit64(v49)) | (isUniquelyReferenced_nonNull_native << 6);
    unint64_t v42 = isUniquelyReferenced_nonNull_native;
    goto LABEL_35;
  }
  int64_t v53 = isUniquelyReferenced_nonNull_native + 1;
  if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v53 >= v165) {
    goto LABEL_87;
  }
  unint64_t v54 = *(void *)(v166 + 8 * v53);
  unint64_t v42 = isUniquelyReferenced_nonNull_native + 1;
  if (v54) {
    goto LABEL_34;
  }
  unint64_t v42 = isUniquelyReferenced_nonNull_native + 2;
  if ((uint64_t)(isUniquelyReferenced_nonNull_native + 2) >= v165) {
    goto LABEL_87;
  }
  unint64_t v54 = *(void *)(v166 + 8 * v42);
  if (v54) {
    goto LABEL_34;
  }
  unint64_t v42 = isUniquelyReferenced_nonNull_native + 3;
  if ((uint64_t)(isUniquelyReferenced_nonNull_native + 3) >= v165) {
    goto LABEL_87;
  }
  unint64_t v54 = *(void *)(v166 + 8 * v42);
  if (v54) {
    goto LABEL_34;
  }
  unint64_t v42 = isUniquelyReferenced_nonNull_native + 4;
  if ((uint64_t)(isUniquelyReferenced_nonNull_native + 4) >= v165) {
    goto LABEL_87;
  }
  unint64_t v54 = *(void *)(v166 + 8 * v42);
  if (v54)
  {
LABEL_34:
    uint64_t v43 = (v54 - 1) & v54;
    unint64_t v50 = __clz(__rbit64(v54)) + (v42 << 6);
LABEL_35:
    uint64_t v52 = *(void *)(*(void *)(v40 + 48) + 8 * v50);
    swift_retain();
    if (!v52) {
      goto LABEL_87;
    }
    goto LABEL_36;
  }
  unint64_t v55 = isUniquelyReferenced_nonNull_native + 5;
  while (v165 != v55)
  {
    unint64_t v54 = *(void *)(v166 + 8 * v55++);
    if (v54)
    {
      unint64_t v42 = v55 - 1;
      uint64_t v40 = v167;
      goto LABEL_34;
    }
  }
LABEL_87:
  sub_2454A53C0();
  swift_release();
  uint64_t v44 = v155;
LABEL_88:
  uint64_t result = sub_24549F9D4(a1, (uint64_t)a3 + *(int *)(v7 + 20), type metadata accessor for PersistentIdentifier);
  *a3 = v44;
  return result;
}

uint64_t sub_245520B74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DefaultSnapshot.init(from:)(a1, a2);
}

uint64_t DataStoreFetchRequest.editingState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24549F9D4(v1, a1, type metadata accessor for EditingState);
}

uint64_t DataStoreFetchRequest.descriptor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Descriptor - 8) + 16);

  return v6(a2, v4, Descriptor);
}

uint64_t sub_245520C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t Request = type metadata accessor for DataStoreBatchFetchRequest();
  sub_2454A3D30(a1, a4 + *(int *)(Request + 40), type metadata accessor for EditingState);
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Descriptor - 8) + 32))(a4, a2, Descriptor);
  *(void *)(a4 + *(int *)(Request + 36)) = a3;
  return result;
}

uint64_t DataStoreFetchResult.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Descriptor - 8) + 16);

  return v4(a1, v1, Descriptor);
}

uint64_t DataStoreFetchResult.fetchedSnapshots.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DataStoreFetchResult.relatedSnapshots.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DataStoreSaveChangesRequest.inserted.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DataStoreSaveChangesRequest.updated.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DataStoreSaveChangesRequest.deleted.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DataStoreSaveChangesRequest.editingState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24549F9D4(v2 + *(int *)(a1 + 44), a2, type metadata accessor for EditingState);
}

uint64_t DataStoreSaveChangesResult.remappedIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DataStoreSaveChangesResult.storeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DataStoreSaveChangesResult.snapshotsToReregister.getter()
{
  return swift_bridgeObjectRetain();
}

void *DataStoreSaveChangesResult.init(for:remappedIdentifiers:snapshotsToReregister:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a4;
  return v4;
}

uint64_t DataStoreBatchDeleteRequest.predicate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  sub_24558E228();
  uint64_t v5 = sub_24558ECE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_245520EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2454A3D30(a1, a3, type metadata accessor for EditingState);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for DataStoreBatchDeleteRequest() + 36);
  sub_24558E228();
  uint64_t v6 = sub_24558ECE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a2, v6);
}

uint64_t EditingState.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24558E1E8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t EditingState.author.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EditingState(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditingState.author.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EditingState(0) + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EditingState.author.modify())()
{
  return nullsub_11;
}

uint64_t sub_2455210B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24558E1E8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_24552111C()
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  uint64_t v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

unint64_t sub_2455211DC(uint64_t a1)
{
  uint64_t v2 = sub_24558F7C8();

  return sub_245521350(a1, v2);
}

unint64_t sub_245521220(uint64_t a1)
{
  sub_24558F7D8();
  type metadata accessor for CFRunLoopObserver(0);
  sub_2454A2AC4(&qword_26B0D8C38, type metadata accessor for CFRunLoopObserver);
  sub_24558E298();
  uint64_t v2 = sub_24558F818();

  return sub_2455213EC(a1, v2);
}

unint64_t sub_2455212D4(uint64_t a1)
{
  sub_24558F128();
  uint64_t v2 = sub_24558E4C8();

  return sub_245521548(a1, v2);
}

uint64_t sub_245521338(uint64_t a1, uint64_t a2)
{
  return sub_2454A1038(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2455216E0);
}

unint64_t sub_245521350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2455213EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFRunLoopObserver(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_2454A2AC4(&qword_26B0D8C38, type metadata accessor for CFRunLoopObserver);
    id v7 = v6;
    char v8 = sub_24558E288();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_24558E288();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_245521548(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_24558F128();
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_24558E558();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_2455216E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      if (*(void *)(*(void *)(v3 + 48) + 16 * result) == a1) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_245521750(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_245521220(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_245523900();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_2455220C4(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

double sub_245521828@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2454A279C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24552488C();
      uint64_t v9 = v16;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_24558DD78();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = (_OWORD *)(*(void *)(v9 + 56) + (v6 << 6));
    long long v13 = v12[1];
    *a2 = *v12;
    a2[1] = v13;
    long long v14 = v12[3];
    a2[2] = v12[2];
    a2[3] = v14;
    sub_2455224C0(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    a2[2] = 0u;
    a2[3] = 0u;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_245521960@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_2454A0B40(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_245524CFC();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_2454A2148((long long *)(*(void *)(v11 + 56) + 48 * v8), a3);
    sub_245522998(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

uint64_t sub_245521A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2454A2A10(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_245524F30(type metadata accessor for DefaultSnapshot, &qword_26B0D9848, type metadata accessor for DefaultSnapshot, type metadata accessor for DefaultSnapshot);
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
    sub_24549F900(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, type metadata accessor for PersistentIdentifier);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for DefaultSnapshot(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_2454A3D30(v12 + *(void *)(v20 + 72) * v6, a2, type metadata accessor for DefaultSnapshot);
    sub_2454D8AC0(v6, v9, type metadata accessor for DefaultSnapshot);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for DefaultSnapshot(0);
    long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_245521C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2454DB208(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_245525244();
      uint64_t v9 = v19;
    }

    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
    uint64_t v18 = *(void *)(v11 - 8);
    sub_2454A3D30(v10 + *(void *)(v18 + 72) * v6, a2, type metadata accessor for PersistentIdentifier);
    sub_245522B84(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for PersistentIdentifier(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t sub_245521E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2454A2A10(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_245525750();
      uint64_t v9 = v20;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
    uint64_t v19 = *(void *)(v11 - 8);
    unint64_t v12 = *(void *)(v19 + 72) * v6;
    sub_24549F900(v10 + v12, type metadata accessor for PersistentIdentifier);
    sub_2454A3D30(*(void *)(v9 + 56) + v12, a2, type metadata accessor for PersistentIdentifier);
    sub_245522D70(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v14 = a2;
    uint64_t v15 = 0;
    uint64_t v16 = v11;
  }
  else
  {
    uint64_t v17 = type metadata accessor for PersistentIdentifier(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v16 = v17;
    uint64_t v14 = a2;
    uint64_t v15 = 1;
  }

  return v13(v14, v15, 1, v16);
}

uint64_t sub_245521FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_2454A0B40(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2455261B8();
      uint64_t v12 = v13;
    }
    swift_bridgeObjectRelease();
    sub_2454A35A0(*(void *)(v12 + 56) + 32 * v8, (uint64_t)a3);
    sub_2455233B8(v8, v12);
    *unint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    a3[3] = 1;
  }
  return result;
}

void sub_2455220C4(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_24558EE18();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_24558F7D8();
        type metadata accessor for CFRunLoopObserver(0);
        sub_2454A2AC4(&qword_26B0D8C38, type metadata accessor for CFRunLoopObserver);
        id v11 = v10;
        sub_24558E298();
        uint64_t v12 = sub_24558F818();

        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 < v9) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (_OWORD *)(v17 + 16 * v3);
          uint64_t v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 1))
          {
            *uint64_t v18 = *v19;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << a1) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_2455222E8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24558EE18();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24558F7D8();
        swift_bridgeObjectRetain();
        sub_24558E628();
        uint64_t v10 = sub_24558F818();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *unint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2455224C0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558DD78();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v37 = a2 + 64;
    unint64_t result = sub_24558EE18();
    uint64_t v12 = v37;
    if ((*(void *)(v37 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v34 = (result + 1) & v11;
      uint64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v36 = v5 + 16;
      unint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v35(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_2454A2AC4(&qword_26B0D9D00, MEMORY[0x263F06AB8]);
        uint64_t v17 = sub_24558E4C8();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v34)
        {
          if (v18 >= v34 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (long long *)(v22 + (a1 << 6));
            BOOL v24 = (long long *)(v22 + (v10 << 6));
            uint64_t v12 = v37;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 4))
            {
              long long v25 = *v24;
              long long v26 = v24[1];
              long long v27 = v24[3];
              void v23[2] = v24[2];
              v23[3] = v27;
              *uint64_t v23 = v25;
              v23[1] = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v34 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v37;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v28 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v28 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *uint64_t v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2455227C0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24558EE18();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24558F7D8();
        swift_bridgeObjectRetain();
        sub_24558E628();
        uint64_t v9 = sub_24558F818();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_245522998(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24558EE18();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24558F7D8();
        swift_bridgeObjectRetain();
        sub_24558E628();
        uint64_t v11 = sub_24558F818();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          uint64_t v17 = (long long *)(v16 + 48 * v3);
          uint64_t v18 = (long long *)(v16 + 48 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 3))
          {
            long long v9 = *v18;
            long long v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            long long *v17 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_245522B84(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_24558EE18();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_24558ECC8();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 < v9 || v3 < (uint64_t)v12) {
            goto LABEL_6;
          }
        }
        else if (v12 < v9 && v3 < (uint64_t)v12)
        {
          goto LABEL_6;
        }
        uint64_t v15 = *(void *)(a2 + 48);
        uint64_t v16 = (void *)(v15 + 8 * v3);
        uint64_t v17 = (void *)(v15 + 8 * v6);
        if (v3 != v6 || v16 >= v17 + 1) {
          *uint64_t v16 = *v17;
        }
        uint64_t v18 = *(void *)(a2 + 56);
        uint64_t v19 = *(void *)(*(void *)(type metadata accessor for PersistentIdentifier(0) - 8) + 72);
        int64_t v20 = v19 * v3;
        unint64_t v21 = v18 + v19 * v3;
        int64_t v22 = v19 * v6;
        unint64_t v23 = v18 + v19 * v6 + v19;
        if (v20 < v22 || v21 >= v23)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v20 == v22) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    long long v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *long long v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_245522D70(int64_t a1, uint64_t a2)
{
  uint64_t v25 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v4 = *(void *)(v25 - 8);
  unint64_t result = MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = sub_24558EE18();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v26 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v4 + 72);
      do
      {
        int64_t v13 = v12 * v10;
        sub_24549F9D4(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for PersistentIdentifier);
        sub_24558F7D8();
        sub_24558E158();
        sub_2454A2AC4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
        sub_24558E4D8();
        uint64_t v14 = sub_24558F818();
        unint64_t result = sub_24549F900((uint64_t)v7, type metadata accessor for PersistentIdentifier);
        unint64_t v15 = v14 & v11;
        if (a1 >= (uint64_t)v26)
        {
          if (v15 < v26 || a1 < (uint64_t)v15) {
            goto LABEL_6;
          }
        }
        else if (v15 < v26 && a1 < (uint64_t)v15)
        {
          goto LABEL_6;
        }
        int64_t v16 = v12 * a1;
        if (v12 * a1 < v13 || *(void *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v13 + v12))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v16 != v13)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v17 = *(void *)(a2 + 56);
        unint64_t result = v17 + v16;
        if (v16 < v13 || result >= v17 + v13 + v12)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v16 == v13) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << a1) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_245523098(int64_t a1, uint64_t a2)
{
  uint64_t v30 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v4 = *(void *)(v30 - 8);
  unint64_t result = MEMORY[0x270FA5388](v30);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = sub_24558EE18();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v12;
        int64_t v15 = v12 * v10;
        uint64_t v16 = v13;
        sub_24549F9D4(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for PersistentIdentifier);
        sub_24558F7D8();
        sub_24558E158();
        sub_2454A2AC4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
        sub_24558E4D8();
        uint64_t v17 = sub_24558F818();
        unint64_t result = sub_24549F900((uint64_t)v7, type metadata accessor for PersistentIdentifier);
        uint64_t v13 = v16;
        unint64_t v18 = v17 & v16;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 < v31)
          {
            uint64_t v12 = v14;
          }
          else
          {
            uint64_t v12 = v14;
            if (a1 >= (uint64_t)v18) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v12 = v14;
          if (v18 >= v31 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            uint64_t v19 = *(void *)(a2 + 48);
            unint64_t result = v19 + v12 * a1;
            if (v12 * a1 < v15 || result >= v19 + v15 + v12)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              uint64_t v13 = v16;
            }
            else if (v12 * a1 != v15)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            uint64_t v21 = (void *)(v20 + 8 * a1);
            BOOL v22 = (void *)(v20 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *uint64_t v21 = *v22;
              a1 = v10;
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v13;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2455233B8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24558EE18();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24558F7D8();
        swift_bridgeObjectRetain();
        sub_24558E628();
        uint64_t v10 = sub_24558F818();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_245523590()
{
  return sub_245523760(&qword_268EE37B8);
}

void *sub_24552359C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE37B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    BOOL v22 = (void *)(*(void *)(v4 + 56) + v18);
    *BOOL v22 = v20;
    v22[1] = v21;
    swift_retain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_245523754()
{
  return sub_245523760(&qword_26B0DA020);
}

void *sub_245523760(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_24558F1E8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v7 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v3 + 56) + v18);
    *(_OWORD *)(*(void *)(v5 + 48) + v17) = *(_OWORD *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v18) = v19;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_245523900()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id v20 = v17;
    unint64_t result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_245523AC0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA1E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_24549E1EC(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_2454AFE68(v26, *(void *)(v4 + 56) + v20);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_245523CAC()
{
  return sub_2455263B4(&qword_26B0D8D50);
}

void *sub_245523CB8()
{
  return sub_2455263B4(&qword_26B0DA1F8);
}

void *sub_245523CC4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE37D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_245523E80()
{
  return sub_2455263B4(&qword_26B0DA1F0);
}

void *sub_245523E8C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9FF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24552404C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9AF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_2454BA078(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_2454CE878(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    unint64_t result = sub_2454A0BBC(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_245524234()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA1E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2455243DC()
{
  return sub_2455263B4(&qword_26B0DA010);
}

void *sub_2455243E8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA0C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2455245AC()
{
  return sub_245524F30(type metadata accessor for ModelContext.WeakAnyPersistentObject, &qword_26B0D9840, type metadata accessor for ModelContext.WeakAnyPersistentObject, type metadata accessor for ModelContext.WeakAnyPersistentObject);
}

id sub_2455245F4()
{
  uint64_t v1 = sub_24558E1E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA018);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24558F1E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24552488C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24558DD78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9CF0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24558F1E8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v26 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v27 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v28 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v29 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      int64_t v11 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v11);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    unint64_t v18 = v16 << 6;
    sub_2454CBEE8(*(void *)(v6 + 56) + v18, (uint64_t)v30);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    int64_t v19 = (_OWORD *)(*(void *)(v8 + 56) + v18);
    long long v21 = v30[2];
    long long v20 = v30[3];
    long long v22 = v30[1];
    *int64_t v19 = v30[0];
    v19[1] = v22;
    _OWORD v19[2] = v21;
    void v19[3] = v20;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v11 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v11 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v11);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_245524B3C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3818);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    long long v20 = *(void **)(*(void *)(v2 + 56) + v19);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_245524CF0()
{
  return sub_2455254D0(&qword_26B0D9218);
}

void *sub_245524CFC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9858);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    sub_24549E2B4(*(void *)(v2 + 56) + 48 * v15, (uint64_t)v26);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = v19;
    v21[1] = v18;
    sub_2454A2148(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_245524EE8()
{
  return sub_245524F30(type metadata accessor for DefaultSnapshot, &qword_26B0D9848, type metadata accessor for DefaultSnapshot, type metadata accessor for DefaultSnapshot);
}

void *sub_245524F30(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  int64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *v4;
  uint64_t v14 = sub_24558F1E8();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v6 = v15;
    return result;
  }
  BOOL v32 = v6;
  id result = (void *)(v14 + 64);
  uint64_t v17 = v13 + 64;
  unint64_t v18 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v17 + 8 * v18) {
    id result = memmove(result, (const void *)(v13 + 64), 8 * v18);
  }
  int64_t v19 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v20 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v13 + 64);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v19 << 6);
      goto LABEL_9;
    }
    int64_t v28 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v23) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v17 + 8 * v28);
    ++v19;
    if (!v29)
    {
      int64_t v19 = v28 + 1;
      if (v28 + 1 >= v23) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v17 + 8 * v19);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    unint64_t v22 = (v29 - 1) & v29;
    unint64_t v25 = __clz(__rbit64(v29)) + (v19 << 6);
LABEL_9:
    unint64_t v26 = *(void *)(v33 + 72) * v25;
    sub_24549F9D4(*(void *)(v13 + 48) + v26, (uint64_t)v12, type metadata accessor for PersistentIdentifier);
    unint64_t v27 = *(void *)(v34 + 72) * v25;
    sub_24549F9D4(*(void *)(v13 + 56) + v27, (uint64_t)v9, v35);
    sub_2454A3D30((uint64_t)v12, *(void *)(v15 + 48) + v26, type metadata accessor for PersistentIdentifier);
    id result = (void *)sub_2454A3D30((uint64_t)v9, *(void *)(v15 + 56) + v27, v36);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v23)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v6 = v32;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v17 + 8 * v30);
  if (v29)
  {
    int64_t v19 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v19 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v19 >= v23) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v17 + 8 * v19);
    ++v30;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_245525244()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9238);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24558F1E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    int64_t v19 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_24549F9D4(*(void *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for PersistentIdentifier);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    sub_2454A3D30((uint64_t)v4, *(void *)(v7 + 56) + v20, type metadata accessor for PersistentIdentifier);
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_2455254C4()
{
  return sub_2455254D0(&qword_26B0D9220);
}

id sub_2455254D0(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v7 = *v1;
  uint64_t v8 = sub_24558F1E8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    id result = (id)swift_release();
LABEL_28:
    *uint64_t v3 = v9;
    return result;
  }
  unint64_t v27 = v3;
  id result = (id)(v8 + 64);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v12);
  }
  int64_t v14 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v18) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v11 + 8 * v24);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v24 + 1;
      if (v24 + 1 >= v18) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v11 + 8 * v14);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v20 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v28 + 72) * v20;
    sub_24549F9D4(*(void *)(v7 + 48) + v21, (uint64_t)v6, type metadata accessor for PersistentIdentifier);
    uint64_t v22 = 8 * v20;
    int64_t v23 = *(void **)(*(void *)(v7 + 56) + v22);
    sub_2454A3D30((uint64_t)v6, *(void *)(v9 + 48) + v21, type metadata accessor for PersistentIdentifier);
    *(void *)(*(void *)(v9 + 56) + v22) = v23;
    id result = v23;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v18)
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t v3 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v11 + 8 * v26);
  if (v25)
  {
    int64_t v14 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v11 + 8 * v14);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_245525750()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v25 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8CE0);
  uint64_t v8 = *v0;
  uint64_t v9 = sub_24558F1E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v10;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v9 + 64);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v12 + 8 * v13) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v13);
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v12 + 8 * v22);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v12 + 8 * v14);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v26 + 72) * v20;
    sub_24549F9D4(*(void *)(v8 + 48) + v21, (uint64_t)v7, type metadata accessor for PersistentIdentifier);
    sub_24549F9D4(*(void *)(v8 + 56) + v21, (uint64_t)v5, type metadata accessor for PersistentIdentifier);
    sub_2454A3D30((uint64_t)v7, *(void *)(v10 + 48) + v21, type metadata accessor for PersistentIdentifier);
    id result = (void *)sub_2454A3D30((uint64_t)v5, *(void *)(v10 + 56) + v21, type metadata accessor for PersistentIdentifier);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v18)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v12 + 8 * v24);
  if (v23)
  {
    int64_t v14 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v12 + 8 * v14);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_245525A0C()
{
  return sub_245525E50(&qword_26B0D9868);
}

void *sub_245525A18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B0D7A48);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24558F1E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v24 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_24549F9D4(*(void *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for PersistentIdentifier);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_2454A3D30((uint64_t)v4, *(void *)(v7 + 48) + v18, type metadata accessor for PersistentIdentifier);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_245525CA0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9248);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_245525E44()
{
  return sub_245525E50(&qword_26B0D9860);
}

void *sub_245525E50(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_24558F1E8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v7 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    int64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 8 * v16;
    uint64_t v22 = *(void *)(*(void *)(v3 + 56) + v21);
    int64_t v23 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v23 = v20;
    v23[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v21) = v22;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v14) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v7 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_245525FF8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9850);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v17;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2455261B8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9230);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_2454A3770(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26, &qword_26B0DA230);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v18;
    v21[1] = v19;
    sub_2454A35A0((uint64_t)v26, *(void *)(v4 + 56) + v20);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2455263A8()
{
  return sub_2455263B4(&qword_26B0D9228);
}

void *sub_2455263B4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_24558F1E8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_245526564()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_268EE3840);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_245526708()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3838);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24558F1E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_2(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x2456A2BD0);
  }
  return result;
}

uint64_t sub_245526904()
{
  return sub_24552111C();
}

uint64_t sub_245526928()
{
  return sub_24558E458();
}

unint64_t sub_245526A00()
{
  unint64_t result = qword_268EE3988[0];
  if (!qword_268EE3988[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268EE3988);
  }
  return result;
}

uint64_t sub_245526A54()
{
  return sub_2454A2AC4(&qword_26B0DA028, MEMORY[0x263F07508]);
}

uint64_t dispatch thunk of DataStore.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DataStore.schema.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DataStore.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DataStore.init(_:migrationPlan:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of DataStore.erase()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of DataStore.fetch<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of DataStore.fetchCount<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of DataStore.fetchIdentifiers<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t dispatch thunk of DataStore.save(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of DataStore.initializeState(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of DataStore.invalidateState(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of DataStore.cachedSnapshots(for:editingState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DataStoreError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DataStoreError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x245526D80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_245526DA8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_245526DB4(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DataStoreError()
{
  return &type metadata for DataStoreError;
}

uint64_t dispatch thunk of DataStoreConfiguration.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DataStoreConfiguration.schema.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DataStoreConfiguration.schema.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DataStoreConfiguration.schema.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of DataStoreConfiguration.validate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DataStoreSnapshot.persistentIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DataStoreSnapshot.init(from:relatedBackingDatas:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of DataStoreSnapshot.copy(persistentIdentifier:remappedIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

void *assignWithCopy for DataStoreSnapshotCodingKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for DataStoreSnapshotCodingKey(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataStoreSnapshotCodingKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DataStoreSnapshotCodingKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_245526FA8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_245526FC4(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DefaultSnapshot(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    BOOL v7 = (char *)a1 + v6;
    int v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24558E158();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
    uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
    *(void *)&v7[*(int *)(v11 + 20)] = *(void *)&v8[*(int *)(v11 + 20)];
  }
  swift_retain();
  return v5;
}

void *assignWithCopy for DefaultSnapshot(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  BOOL v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for DefaultSnapshot(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v5[*(int *)(v8 + 20)] = *(void *)&v6[*(int *)(v8 + 20)];
  return a1;
}

void *assignWithTake for DefaultSnapshot(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_2455272CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

void *sub_24552737C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PersistentIdentifier(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void *sub_245527424(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24558E1E8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for EditingState(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *uint64_t v10 = v13;
    v10[1] = v12;
    *((unsigned char *)a1 + *(int *)(v8 + 24)) = *((unsigned char *)a2 + *(int *)(v8 + 24));
    uint64_t v14 = *(int *)(a3 + 36);
    unint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24558E228();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_24558ECE8();
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
    *(void *)&v15[Descriptor[9]] = *(void *)&v16[Descriptor[9]];
    uint64_t v22 = Descriptor[10];
    int64_t v23 = &v15[v22];
    unint64_t v24 = &v16[v22];
    v23[8] = v24[8];
    *(void *)int64_t v23 = *(void *)v24;
    uint64_t v25 = Descriptor[11];
    int64_t v26 = &v15[v25];
    unint64_t v27 = &v16[v25];
    v26[8] = v27[8];
    *(void *)int64_t v26 = *(void *)v27;
    v15[Descriptor[12]] = v16[Descriptor[12]];
    *(void *)&v15[Descriptor[13]] = *(void *)&v16[Descriptor[13]];
    *(void *)&v15[Descriptor[14]] = *(void *)&v16[Descriptor[14]];
    v15[Descriptor[15]] = v16[Descriptor[15]];
    v15[Descriptor[16]] = v16[Descriptor[16]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2455276BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for EditingState(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (char *)(a1 + v13);
  unint64_t v15 = (char *)(a2 + v13);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24558E228();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_24558ECE8();
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&v14[Descriptor[9]] = *(void *)&v15[Descriptor[9]];
  uint64_t v20 = Descriptor[10];
  int64_t v21 = &v14[v20];
  uint64_t v22 = &v15[v20];
  v21[8] = v22[8];
  *(void *)int64_t v21 = *(void *)v22;
  uint64_t v23 = Descriptor[11];
  unint64_t v24 = &v14[v23];
  uint64_t v25 = &v15[v23];
  v24[8] = v25[8];
  *(void *)unint64_t v24 = *(void *)v25;
  v14[Descriptor[12]] = v15[Descriptor[12]];
  *(void *)&v14[Descriptor[13]] = *(void *)&v15[Descriptor[13]];
  *(void *)&v14[Descriptor[14]] = *(void *)&v15[Descriptor[14]];
  v14[Descriptor[15]] = v15[Descriptor[15]];
  v14[Descriptor[16]] = v15[Descriptor[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_245527904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for EditingState(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = sub_24558E228();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_24558ECE8();
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&v12[Descriptor[9]] = *(void *)&v13[Descriptor[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = Descriptor[10];
  uint64_t v22 = &v12[v21];
  uint64_t v23 = &v13[v21];
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  uint64_t v25 = Descriptor[11];
  int64_t v26 = &v12[v25];
  unint64_t v27 = &v13[v25];
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)int64_t v26 = v28;
  v12[Descriptor[12]] = v13[Descriptor[12]];
  *(void *)&v12[Descriptor[13]] = *(void *)&v13[Descriptor[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v12[Descriptor[14]] = *(void *)&v13[Descriptor[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[Descriptor[15]] = v13[Descriptor[15]];
  v12[Descriptor[16]] = v13[Descriptor[16]];
  return a1;
}

uint64_t sub_245527BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for EditingState(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = sub_24558E228();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_24558ECE8();
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&v9[Descriptor[9]] = *(void *)&v10[Descriptor[9]];
  uint64_t v15 = Descriptor[10];
  uint64_t v16 = &v9[v15];
  int v17 = &v10[v15];
  v16[8] = v17[8];
  *(void *)uint64_t v16 = *(void *)v17;
  uint64_t v18 = Descriptor[11];
  uint64_t v19 = &v9[v18];
  uint64_t v20 = &v10[v18];
  v19[8] = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  v9[Descriptor[12]] = v10[Descriptor[12]];
  *(void *)&v9[Descriptor[13]] = *(void *)&v10[Descriptor[13]];
  *(void *)&v9[Descriptor[14]] = *(void *)&v10[Descriptor[14]];
  v9[Descriptor[15]] = v10[Descriptor[15]];
  v9[Descriptor[16]] = v10[Descriptor[16]];
  return a1;
}

uint64_t sub_245527E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for EditingState(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = sub_24558E228();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_24558ECE8();
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&v14[Descriptor[9]] = *(void *)&v15[Descriptor[9]];
  swift_bridgeObjectRelease();
  uint64_t v23 = Descriptor[10];
  uint64_t v24 = &v14[v23];
  uint64_t v25 = &v15[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = Descriptor[11];
  unint64_t v27 = &v14[v26];
  uint64_t v28 = &v15[v26];
  v27[8] = v28[8];
  *(void *)unint64_t v27 = *(void *)v28;
  v14[Descriptor[12]] = v15[Descriptor[12]];
  *(void *)&v14[Descriptor[13]] = *(void *)&v15[Descriptor[13]];
  swift_bridgeObjectRelease();
  *(void *)&v14[Descriptor[14]] = *(void *)&v15[Descriptor[14]];
  swift_bridgeObjectRelease();
  v14[Descriptor[15]] = v15[Descriptor[15]];
  v14[Descriptor[16]] = v15[Descriptor[16]];
  return a1;
}

uint64_t sub_2455280B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2455280C8);
}

uint64_t sub_2455280C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EditingState(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t Descriptor = type metadata accessor for FetchDescriptor();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Descriptor - 8) + 48);
    uint64_t v12 = Descriptor;
    uint64_t v13 = a1 + *(int *)(a3 + 36);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_2455281C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2455281D8);
}

uint64_t sub_2455281D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for EditingState(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t Descriptor = type metadata accessor for FetchDescriptor();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Descriptor - 8) + 56);
    uint64_t v14 = Descriptor;
    uint64_t v15 = a1 + *(int *)(a4 + 36);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t *sub_2455282E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24558E228();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_24558ECE8();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
    *(uint64_t *)((char *)a1 + Descriptor[9]) = *(uint64_t *)((char *)a2 + Descriptor[9]);
    uint64_t v12 = Descriptor[10];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    v13[8] = v14[8];
    *(void *)uint64_t v13 = *(void *)v14;
    uint64_t v15 = Descriptor[11];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    v16[8] = v17[8];
    *(void *)uint64_t v16 = *(void *)v17;
    *((unsigned char *)a1 + Descriptor[12]) = *((unsigned char *)a2 + Descriptor[12]);
    *(uint64_t *)((char *)a1 + Descriptor[13]) = *(uint64_t *)((char *)a2 + Descriptor[13]);
    *(uint64_t *)((char *)a1 + Descriptor[14]) = *(uint64_t *)((char *)a2 + Descriptor[14]);
    *((unsigned char *)a1 + Descriptor[15]) = *((unsigned char *)a2 + Descriptor[15]);
    *((unsigned char *)a1 + Descriptor[16]) = *((unsigned char *)a2 + Descriptor[16]);
    uint64_t v18 = *(int *)(a3 + 56);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 52)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 52));
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *sub_24552851C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&a1[Descriptor[9]] = *(void *)&a2[Descriptor[9]];
  uint64_t v10 = Descriptor[10];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  v11[8] = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  uint64_t v13 = Descriptor[11];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  v14[8] = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  a1[Descriptor[12]] = a2[Descriptor[12]];
  *(void *)&a1[Descriptor[13]] = *(void *)&a2[Descriptor[13]];
  *(void *)&a1[Descriptor[14]] = *(void *)&a2[Descriptor[14]];
  a1[Descriptor[15]] = a2[Descriptor[15]];
  a1[Descriptor[16]] = a2[Descriptor[16]];
  uint64_t v16 = *(int *)(a3 + 56);
  *(void *)&a1[*(int *)(a3 + 52)] = *(void *)&a2[*(int *)(a3 + 52)];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_245528708(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&a1[Descriptor[9]] = *(void *)&a2[Descriptor[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = Descriptor[10];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)uint64_t v14 = v16;
  uint64_t v17 = Descriptor[11];
  uint64_t v18 = &a1[v17];
  int v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)uint64_t v18 = v20;
  a1[Descriptor[12]] = a2[Descriptor[12]];
  *(void *)&a1[Descriptor[13]] = *(void *)&a2[Descriptor[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[Descriptor[14]] = *(void *)&a2[Descriptor[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[Descriptor[15]] = a2[Descriptor[15]];
  a1[Descriptor[16]] = a2[Descriptor[16]];
  *(void *)&a1[*(int *)(a3 + 52)] = *(void *)&a2[*(int *)(a3 + 52)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 56)] = *(void *)&a2[*(int *)(a3 + 56)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_245528990(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&a1[Descriptor[9]] = *(void *)&a2[Descriptor[9]];
  uint64_t v10 = Descriptor[10];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  v11[8] = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  uint64_t v13 = Descriptor[11];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  v14[8] = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  a1[Descriptor[12]] = a2[Descriptor[12]];
  *(void *)&a1[Descriptor[13]] = *(void *)&a2[Descriptor[13]];
  *(void *)&a1[Descriptor[14]] = *(void *)&a2[Descriptor[14]];
  a1[Descriptor[15]] = a2[Descriptor[15]];
  a1[Descriptor[16]] = a2[Descriptor[16]];
  uint64_t v16 = *(int *)(a3 + 56);
  *(void *)&a1[*(int *)(a3 + 52)] = *(void *)&a2[*(int *)(a3 + 52)];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  return a1;
}

char *sub_245528B54(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&a1[Descriptor[9]] = *(void *)&a2[Descriptor[9]];
  swift_bridgeObjectRelease();
  uint64_t v13 = Descriptor[10];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = Descriptor[11];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  a1[Descriptor[12]] = a2[Descriptor[12]];
  *(void *)&a1[Descriptor[13]] = *(void *)&a2[Descriptor[13]];
  swift_bridgeObjectRelease();
  *(void *)&a1[Descriptor[14]] = *(void *)&a2[Descriptor[14]];
  swift_bridgeObjectRelease();
  a1[Descriptor[15]] = a2[Descriptor[15]];
  a1[Descriptor[16]] = a2[Descriptor[16]];
  *(void *)&a1[*(int *)(a3 + 52)] = *(void *)&a2[*(int *)(a3 + 52)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 56)] = *(void *)&a2[*(int *)(a3 + 56)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245528DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_245528DC8);
}

uint64_t sub_245528DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v7 = *(void *)(Descriptor - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, Descriptor);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 52));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_245528E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_245528EA4);
}

uint64_t sub_245528EA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FetchDescriptor();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  }
  return result;
}

uint64_t *sub_245528F68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 44);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24558E1E8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = type metadata accessor for EditingState(0);
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v14 = &v8[v13];
    uint64_t v15 = &v9[v13];
    uint64_t v17 = *(void *)v15;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = v17;
    *((void *)v14 + 1) = v16;
    v8[*(int *)(v12 + 24)] = v9[*(int *)(v12 + 24)];
    swift_bridgeObjectRetain();
  }
  return v5;
}

void *sub_24552909C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E1E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for EditingState(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[*(int *)(v10 + 24)] = v8[*(int *)(v10 + 24)];
  return a1;
}

uint64_t sub_2455291AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for EditingState(0);
  *(_OWORD *)(v5 + *(int *)(v8 + 20)) = *(_OWORD *)(v6 + *(int *)(v8 + 20));
  *(unsigned char *)(v5 + *(int *)(v8 + 24)) = *(unsigned char *)(v6 + *(int *)(v8 + 24));
  return a1;
}

void *sub_245529250(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E1E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for EditingState(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v7[*(int *)(v10 + 24)] = v8[*(int *)(v10 + 24)];
  return a1;
}

uint64_t sub_245529330(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for EditingState(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

void *sub_2455293E0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for EditingState(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t method lookup function for DataStoreSaveChangesResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DataStoreSaveChangesResult);
}

uint64_t dispatch thunk of DataStoreSaveChangesResult.__allocating_init(for:remappedIdentifiers:snapshotsToReregister:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DataStoreBatching.delete<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_2455294DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_2455294E4()
{
  uint64_t result = type metadata accessor for EditingState(319);
  if (v1 <= 0x3F)
  {
    sub_24558E228();
    uint64_t result = sub_24558ECE8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_2455295C4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24558E1E8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for EditingState(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *uint64_t v10 = v13;
    v10[1] = v12;
    *((unsigned char *)a1 + *(int *)(v8 + 24)) = *((unsigned char *)a2 + *(int *)(v8 + 24));
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24558E228();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_24558ECE8();
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t sub_2455297AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for EditingState(0);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return result;
}

uint64_t sub_2455298BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for EditingState(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24558E228();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_24558ECE8();
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t sub_245529A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for EditingState(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_24558E228();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_24558ECE8();
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_245529C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for EditingState(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_24558E228();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_24558ECE8();
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_245529DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for EditingState(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_24558E228();
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_24558ECE8();
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_245529FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24552A000);
}

uint64_t sub_24552A000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EditingState(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_24558E228();
    uint64_t v10 = sub_24558ECE8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v10);
  }
}

uint64_t sub_24552A110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24552A124);
}

uint64_t sub_24552A124(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for EditingState(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_24558E228();
    uint64_t v12 = sub_24558ECE8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1 + *(int *)(a4 + 36), a2, a2, v12);
  }
}

uint64_t type metadata accessor for DataStoreBatchDeleteRequest()
{
  return __swift_instantiateGenericMetadata();
}

void *initializeBufferWithCopyOfBuffer for EditingState(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24558E1E8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for EditingState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for EditingState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for EditingState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for EditingState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24552A510);
}

uint64_t sub_24552A510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1E8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for EditingState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24552A5F4);
}

uint64_t sub_24552A5F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24558E1E8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_24552A6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_24552A6BC()
{
  uint64_t result = type metadata accessor for FetchDescriptor();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for EditingState(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24552A794(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24558E228();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_24558ECE8();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
    *(uint64_t *)((char *)a1 + Descriptor[9]) = *(uint64_t *)((char *)a2 + Descriptor[9]);
    uint64_t v12 = Descriptor[10];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    v13[8] = v14[8];
    *(void *)uint64_t v13 = *(void *)v14;
    uint64_t v15 = Descriptor[11];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    v16[8] = v17[8];
    *(void *)uint64_t v16 = *(void *)v17;
    *((unsigned char *)a1 + Descriptor[12]) = *((unsigned char *)a2 + Descriptor[12]);
    *(uint64_t *)((char *)a1 + Descriptor[13]) = *(uint64_t *)((char *)a2 + Descriptor[13]);
    *(uint64_t *)((char *)a1 + Descriptor[14]) = *(uint64_t *)((char *)a2 + Descriptor[14]);
    *((unsigned char *)a1 + Descriptor[15]) = *((unsigned char *)a2 + Descriptor[15]);
    *((unsigned char *)a1 + Descriptor[16]) = *((unsigned char *)a2 + Descriptor[16]);
    uint64_t v18 = *(int *)(a3 + 40);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 36));
    int v19 = (char *)a1 + v18;
    int v20 = (char *)a2 + v18;
    uint64_t v21 = sub_24558E1E8();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    uint64_t v23 = type metadata accessor for EditingState(0);
    uint64_t v24 = *(int *)(v23 + 20);
    uint64_t v25 = &v19[v24];
    uint64_t v26 = &v20[v24];
    uint64_t v28 = *(void *)v26;
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = v28;
    *((void *)v25 + 1) = v27;
    v19[*(int *)(v23 + 24)] = v20[*(int *)(v23 + 24)];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24552AA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558E228();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  type metadata accessor for FetchDescriptor();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = sub_24558E1E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for EditingState(0);
  return swift_bridgeObjectRelease();
}

char *sub_24552AB90(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&a1[Descriptor[9]] = *(void *)&a2[Descriptor[9]];
  uint64_t v10 = Descriptor[10];
  int v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  v11[8] = v12[8];
  *(void *)int v11 = *(void *)v12;
  uint64_t v13 = Descriptor[11];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  v14[8] = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  a1[Descriptor[12]] = a2[Descriptor[12]];
  *(void *)&a1[Descriptor[13]] = *(void *)&a2[Descriptor[13]];
  *(void *)&a1[Descriptor[14]] = *(void *)&a2[Descriptor[14]];
  a1[Descriptor[15]] = a2[Descriptor[15]];
  a1[Descriptor[16]] = a2[Descriptor[16]];
  uint64_t v16 = *(int *)(a3 + 40);
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_24558E1E8();
  int v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  uint64_t v21 = type metadata accessor for EditingState(0);
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  v17[*(int *)(v21 + 24)] = v18[*(int *)(v21 + 24)];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_24552ADEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&a1[Descriptor[9]] = *(void *)&a2[Descriptor[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = Descriptor[10];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)uint64_t v14 = v16;
  uint64_t v17 = Descriptor[11];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)uint64_t v18 = v20;
  a1[Descriptor[12]] = a2[Descriptor[12]];
  *(void *)&a1[Descriptor[13]] = *(void *)&a2[Descriptor[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[Descriptor[14]] = *(void *)&a2[Descriptor[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[Descriptor[15]] = a2[Descriptor[15]];
  a1[Descriptor[16]] = a2[Descriptor[16]];
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  uint64_t v21 = *(int *)(a3 + 40);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_24558E1E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = type metadata accessor for EditingState(0);
  uint64_t v26 = *(int *)(v25 + 20);
  uint64_t v27 = &v22[v26];
  uint64_t v28 = &v23[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[*(int *)(v25 + 24)] = v23[*(int *)(v25 + 24)];
  return a1;
}

char *sub_24552B0D4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&a1[Descriptor[9]] = *(void *)&a2[Descriptor[9]];
  uint64_t v10 = Descriptor[10];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  v11[8] = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  uint64_t v13 = Descriptor[11];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  v14[8] = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  a1[Descriptor[12]] = a2[Descriptor[12]];
  *(void *)&a1[Descriptor[13]] = *(void *)&a2[Descriptor[13]];
  *(void *)&a1[Descriptor[14]] = *(void *)&a2[Descriptor[14]];
  a1[Descriptor[15]] = a2[Descriptor[15]];
  a1[Descriptor[16]] = a2[Descriptor[16]];
  uint64_t v16 = *(int *)(a3 + 40);
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_24558E1E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = type metadata accessor for EditingState(0);
  *(_OWORD *)&v17[*(int *)(v20 + 20)] = *(_OWORD *)&v18[*(int *)(v20 + 20)];
  v17[*(int *)(v20 + 24)] = v18[*(int *)(v20 + 24)];
  return a1;
}

char *sub_24552B2F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t Descriptor = (int *)type metadata accessor for FetchDescriptor();
  *(void *)&a1[Descriptor[9]] = *(void *)&a2[Descriptor[9]];
  swift_bridgeObjectRelease();
  uint64_t v13 = Descriptor[10];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = Descriptor[11];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  a1[Descriptor[12]] = a2[Descriptor[12]];
  *(void *)&a1[Descriptor[13]] = *(void *)&a2[Descriptor[13]];
  swift_bridgeObjectRelease();
  *(void *)&a1[Descriptor[14]] = *(void *)&a2[Descriptor[14]];
  swift_bridgeObjectRelease();
  a1[Descriptor[15]] = a2[Descriptor[15]];
  a1[Descriptor[16]] = a2[Descriptor[16]];
  uint64_t v19 = *(int *)(a3 + 40);
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_24558E1E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = type metadata accessor for EditingState(0);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v25 = &v20[v24];
  uint64_t v26 = &v21[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  v20[*(int *)(v23 + 24)] = v21[*(int *)(v23 + 24)];
  return a1;
}

uint64_t sub_24552B5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24552B5C4);
}

uint64_t sub_24552B5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v7 = *(void *)(Descriptor - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, Descriptor);
  }
  else
  {
    uint64_t v10 = type metadata accessor for EditingState(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 40);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_24552B6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24552B6D4);
}

uint64_t sub_24552B6D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v9 = *(void *)(Descriptor - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, Descriptor);
  }
  else
  {
    uint64_t v12 = type metadata accessor for EditingState(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 40);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for DataStoreBatchFetchRequest()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24552B7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(*(void *)(a3 - 8) + 16);
}

uint64_t sub_24552B804(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_24552B80C(char *a1, int a2, unsigned __int8 *a3)
{
  int v106 = a2;
  uint64_t v108 = a1;
  uint64_t v120 = *MEMORY[0x263EF8340];
  uint64_t v101 = sub_24558E098();
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v99 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24558E158();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  BOOL v107 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v97 = (char *)&v89 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v96 = (char *)&v89 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v109 = (char *)&v89 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v102 = (char *)&v89 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA100);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v103 = (uint64_t)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v98 = (char *)&v89 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v89 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v89 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v89 - v27;
  uint64_t v29 = sub_24558E3B8();
  uint64_t v104 = *(void *)(v29 - 8);
  uint64_t v105 = v29;
  MEMORY[0x270FA5388](v29);
  int v31 = *a3;
  uint64_t v33 = *((void *)a3 + 1);
  uint64_t v32 = *((void *)a3 + 2);
  int v110 = (char *)&v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24558E3A8();
  uint64_t v115 = v6;
  uint64_t v111 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v111(v28, 1, 1, v5);
  id v34 = objc_msgSend(self, sel_defaultManager);
  id v113 = v34;
  if (v31 != 1)
  {
    if (v32)
    {
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    LODWORD(v102) = 0;
    uint64_t v33 = 0;
LABEL_14:
    uint64_t v112 = 0;
    goto LABEL_15;
  }
  uint64_t v33 = sub_245533850();
  if (!v35)
  {
    LODWORD(v102) = 0;
    goto LABEL_14;
  }
  uint64_t v32 = v35;
LABEL_6:
  swift_bridgeObjectRetain();
  uint64_t v114 = v33;
  uint64_t v112 = v32;
  uint64_t v36 = (void *)sub_24558E5A8();
  id v37 = objc_msgSend(v34, sel_containerURLForSecurityApplicationGroupIdentifier_, v36);

  if (v37)
  {
    uint64_t v38 = v109;
    sub_24558E118();

    uint64_t v39 = v115;
    uint64_t v40 = v38;
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v115 + 32);
    v41(v26, v40, v5);
    v111(v26, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v26, 1, v5) != 1)
    {
      swift_bridgeObjectRelease();
      unint64_t v94 = v41;
      v41(v102, v26, v5);
      unint64_t v116 = 0x7972617262694CLL;
      unint64_t v117 = 0xE700000000000000;
      unsigned int v93 = *MEMORY[0x263F06E30];
      uint64_t v42 = v100;
      uint64_t v92 = *(void (**)(char *))(v100 + 104);
      uint64_t v43 = v99;
      unint64_t v95 = v28;
      uint64_t v44 = v101;
      v92(v99);
      unint64_t v91 = sub_2454ED040();
      uint64_t v45 = v109;
      sub_24558E148();
      char v90 = *(void (**)(char *, uint64_t))(v42 + 8);
      v90(v43, v44);
      swift_bridgeObjectRelease();
      unint64_t v116 = 0xD000000000000013;
      unint64_t v117 = 0x8000000245592DB0;
      ((void (*)(char *, void, uint64_t))v92)(v43, v93, v44);
      uint64_t v46 = v96;
      sub_24558E148();
      uint64_t v47 = v44;
      uint64_t v28 = v95;
      v90(v43, v47);
      swift_bridgeObjectRelease();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v115 + 8);
      v48(v45, v5);
      v48(v102, v5);
      sub_2454AF624((uint64_t)v28, &qword_26B0DA100);
      unint64_t v49 = v94;
      v94(v45, v46, v5);
      unint64_t v50 = v45;
      id v34 = v113;
      v49(v28, v50, v5);
      v111(v28, 0, 1, v5);
      LODWORD(v102) = 0;
      uint64_t v33 = v114;
      goto LABEL_15;
    }
  }
  else
  {
    v111(v26, 1, 1, v5);
  }
  sub_2454AF624((uint64_t)v26, &qword_26B0DA100);
  uint64_t v33 = v114;
  if ((sub_24558E698() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v116 = 0;
    unint64_t v117 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558E668();
    sub_24558E668();
    goto LABEL_36;
  }
  swift_bridgeObjectRelease();
  LODWORD(v102) = 1;
LABEL_15:
  uint64_t v114 = v33;
  sub_245535858((uint64_t)v28, (uint64_t)v23, &qword_26B0DA100);
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
  int v52 = v51(v23, 1, v5);
  sub_2454AF624((uint64_t)v23, &qword_26B0DA100);
  if (v52 == 1)
  {
    uint64_t v53 = 1;
    id v54 = objc_msgSend(v34, sel_URLsForDirectory_inDomains_, 14, 1);
    uint64_t v55 = sub_24558E7C8();

    uint64_t v56 = (uint64_t)v98;
    if (*(void *)(v55 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v115 + 16))(v98, v55 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80)), v5);
      uint64_t v53 = 0;
    }
    uint64_t v57 = v111;
    v111((char *)v56, v53, 1, v5);
    swift_bridgeObjectRelease();
    if (v51((char *)v56, 1, v5) == 1)
    {
      sub_2454AF624(v56, &qword_26B0DA100);
      uint64_t v58 = sub_24558E398();
      os_log_type_t v59 = sub_24558EB98();
      if (os_log_type_enabled(v58, v59))
      {
        char v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v60 = 0;
        _os_log_impl(&dword_245478000, v58, v59, "File Manager was unable to find Application Support in the User Domain", v60, 2u);
        MEMORY[0x2456A2BD0](v60, -1, -1);
      }
    }
    else
    {
      sub_2454AF624((uint64_t)v28, &qword_26B0DA100);
      uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 32);
      uint64_t v62 = v97;
      v61(v97, v56, v5);
      v61(v28, (uint64_t)v62, v5);
      v57(v28, 0, 1, v5);
    }
  }
  uint64_t v63 = v103;
  sub_245535858((uint64_t)v28, v103, &qword_26B0DA100);
  if (v51((char *)v63, 1, v5) == 1)
  {
    swift_bridgeObjectRelease();
    sub_2454AF624(v63, &qword_26B0DA100);
  }
  else
  {
    uint64_t v64 = v115;
    uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 32);
    uint64_t v66 = v107;
    v65(v107, v63, v5);
    unint64_t v67 = v108;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v108, v66, v5);
    if (v102)
    {
      unint64_t v116 = 0x646572616873;
      unint64_t v117 = 0xE600000000000000;
      uint64_t v68 = *MEMORY[0x263F06E30];
      uint64_t v69 = v100;
      uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 104);
      uint64_t v111 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5;
      uint64_t v71 = v99;
      uint64_t v72 = v28;
      uint64_t v73 = v101;
      v70(v99, v68, v101);
      sub_2454ED040();
      char v74 = v109;
      sub_24558E148();
      unint64_t v75 = v71;
      uint64_t v5 = (uint64_t)v111;
      uint64_t v76 = v73;
      uint64_t v28 = v72;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v75, v76);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v67, v5);
      v65(v67, (uint64_t)v74, v5);
    }
    if ((v106 & 1) == 0) {
      goto LABEL_29;
    }
    BOOL v77 = (void *)sub_24558E0D8();
    unint64_t v116 = 0;
    unsigned int v78 = objc_msgSend(v113, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v77, 1, 0, &v116);

    if (v78)
    {
      id v79 = (id)v116;
LABEL_29:

      (*(void (**)(char *, uint64_t))(v115 + 8))(v66, v5);
      sub_2454AF624((uint64_t)v28, &qword_26B0DA100);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v110, v105);
      return v114;
    }
    id v81 = (id)v116;
    swift_bridgeObjectRelease();
    uint64_t v82 = sub_24558E068();

    swift_willThrow();
    uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
    v83((uint64_t)v67, v5);
    v83((uint64_t)v66, v5);
    sub_2454AF624((uint64_t)v28, &qword_26B0DA100);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v110, v105);
    unint64_t v116 = 0;
    unint64_t v117 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    id v84 = objc_msgSend(self, sel_mainBundle);
    id v85 = objc_msgSend(v84, sel_bundleIdentifier);

    if (v85)
    {
      uint64_t v86 = sub_24558E5D8();
      uint64_t v88 = v87;
    }
    else
    {
      uint64_t v86 = 0;
      uint64_t v88 = 0;
    }
    uint64_t v118 = v86;
    uint64_t v119 = v88;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3660);
    sub_24558E5E8();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    uint64_t v118 = v82;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B0D9AF8);
    sub_24558F0E8();
  }
LABEL_36:
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24552C65C(uint64_t a1, uint64_t *a2)
{
  uint64_t v23 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (void *)*a2;
    swift_unknownObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = (uint64_t)v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v18 = sub_245496260(0, v18[2] + 1, 1, v18);
      *a2 = (uint64_t)v18;
    }
    unint64_t v21 = v18[2];
    unint64_t v20 = v18[3];
    if (v21 >= v20 >> 1) {
      *a2 = (uint64_t)sub_245496260((void *)(v20 > 1), v21 + 1, 1, v18);
    }
    uint64_t ObjectType = swift_getObjectType();
    sub_245496248(v21, v16, a2, ObjectType, v17);
    uint64_t result = swift_unknownObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v7) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v23 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v23 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v23 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v13 = *(void *)(v23 + 8 * v9);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v23 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v23 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24552C878@<X0>(_OWORD *a1@<X8>)
{
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v2 = sub_24558EFB8();
  swift_getObjectType();
  uint64_t result = sub_24558EFB8();
  if (v2 == result)
  {
    char v4 = sub_24558EFC8();
    swift_unknownObjectRelease();
    if (v4)
    {
      uint64_t result = swift_unknownObjectRelease();
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
    else
    {
      sub_24558F148();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24552C994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_2454A0BB8(a3, a4);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8)
  {
    uint64_t v9 = v6 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2454A0944(v9, (uint64_t)v13);
      BOOL v10 = v13[0] == a1 && v13[1] == a2;
      if (v10 || (sub_24558F598() & 1) != 0) {
        break;
      }
      sub_2454A0A9C((uint64_t)v13);
      v9 += 96;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
  }
  else
  {
LABEL_10:
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_24558EF78();
    swift_bridgeObjectRelease();
    strcpy((char *)v13, "Couldn't find ");
    HIBYTE(v13[1]) = -18;
    sub_24558E668();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    MEMORY[0x2456A1220](v7, &type metadata for Schema.PropertyMetadata);
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558F1A8();
    __break(1u);
  }
  swift_bridgeObjectRelease_n();
  uint64_t v11 = v13[2];
  swift_retain();
  sub_2454A0A9C((uint64_t)v13);
  return v11;
}

BOOL sub_24552CB74(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA238);
  swift_dynamicCast();
  uint64_t v3 = v10;
  uint64_t v9 = v10;
  if (swift_conformsToProtocol2()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    do
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      swift_beginAccess();
      uint64_t v9 = AssociatedTypeWitness;
      if (swift_conformsToProtocol2()) {
        uint64_t v6 = AssociatedTypeWitness;
      }
      else {
        uint64_t v6 = 0;
      }
    }
    while (v6);
  }
  if (swift_dynamicCastMetatype()) {
    return 1;
  }
  if (swift_dynamicCastMetatype()) {
    return 1;
  }
  sub_24558E1B8();
  if (swift_dynamicCastMetatype()) {
    return 1;
  }
  sub_24558E1E8();
  if (swift_dynamicCastMetatype()) {
    return 1;
  }
  sub_24558E158();
  if (swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype())
  {
    return 1;
  }
  type metadata accessor for Decimal(0);
  return swift_dynamicCastMetatype() != 0;
}

uint64_t sub_24552CE7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return PersistentModel.persistentModelID.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8), a3);
}

uint64_t sub_24552CEAC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 64);
  int64_t v38 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v40 = (v7 - 1) & v7;
  int64_t v41 = v9;
  for (unint64_t i = __clz(__rbit64(v7)) | (v9 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 56) + 16 * i);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    swift_retain();
    swift_bridgeObjectRetain();
    if (sub_24558ED98() == a1 && v18 == a2)
    {
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v8 = v16;
      goto LABEL_27;
    }
    char v20 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_26;
    }
LABEL_27:
    uint64_t v21 = v16;
    unint64_t v22 = sub_24552D2C0(46, 0xE100000000000000, a1, a2);
    if (v23) {
      goto LABEL_37;
    }
    unint64_t v24 = v22;
    swift_bridgeObjectRetain();
    uint64_t v25 = a1;
    sub_24552D274(v24, a1, a2);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_24558ECF8();
    swift_bridgeObjectRelease();
    if (v27 >> 14 < v28 >> 14)
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    unint64_t v29 = sub_24558ED08();
    unint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    LOBYTE(v29) = sub_245535308(v29, v31, v33, v35, v21, v17);
    swift_bridgeObjectRelease();
    swift_release();
    if (v29) {
      uint64_t v8 = v21;
    }
    swift_bridgeObjectRelease();
    a1 = v25;
    unint64_t v7 = v40;
    int64_t v9 = v41;
    if (v40) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_35;
    }
    if (v11 >= v38) {
      goto LABEL_33;
    }
    unint64_t v12 = *(void *)(v37 + 8 * v11);
    int64_t v13 = v9 + 1;
    if (!v12)
    {
      int64_t v13 = v9 + 2;
      if (v9 + 2 >= v38) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v37 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v9 + 3;
        if (v9 + 3 >= v38) {
          goto LABEL_33;
        }
        unint64_t v12 = *(void *)(v37 + 8 * v13);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v40 = (v12 - 1) & v12;
    int64_t v41 = v13;
  }
  uint64_t v14 = v9 + 4;
  if (v9 + 4 >= v38)
  {
LABEL_33:
    swift_release();
    return v8;
  }
  unint64_t v12 = *(void *)(v37 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v9 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v38) {
      goto LABEL_33;
    }
    unint64_t v12 = *(void *)(v37 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  sub_24558EF78();
  swift_bridgeObjectRelease();
  sub_24558E668();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

unint64_t sub_24552D274(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_24558E6C8();
  }
  __break(1u);
  return result;
}

unint64_t sub_24552D2C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_24558E6B8() != a1 || v9 != a2)
  {
    char v10 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_24558E648();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_24552D3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = 0;
  if (!sub_2454A6D54(a1))
  {
    unint64_t v60 = a1;
    if (swift_conformsToProtocol2()) {
      uint64_t v12 = a1;
    }
    else {
      uint64_t v12 = 0;
    }
    if (v12)
    {
      do
      {
        uint64_t AssociatedTypeWitness = (unint64_t *)swift_getAssociatedTypeWitness();
        swift_beginAccess();
        unint64_t v60 = (unint64_t)AssociatedTypeWitness;
        if (swift_conformsToProtocol2()) {
          uint64_t v14 = AssociatedTypeWitness;
        }
        else {
          uint64_t v14 = 0;
        }
      }
      while (v14);
    }
    else
    {
      uint64_t AssociatedTypeWitness = (unint64_t *)a1;
    }
    unint64_t v15 = *AssociatedTypeWitness;
    if (*AssociatedTypeWitness > 0x7FF)
    {
      if ((unint64_t)(sub_24558E308() - 2048) < 0xFFFFFFFFFFFFF801) {
        return MEMORY[0x263F8EE80];
      }
    }
    else
    {
      unint64_t v10 = MEMORY[0x263F8EE80];
      if (v15 - 513 < 2) {
        return v10;
      }
      if (v15 == 512)
      {
        if (swift_conformsToProtocol2()) {
          uint64_t v16 = AssociatedTypeWitness;
        }
        else {
          uint64_t v16 = 0;
        }
        if (v16)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v60 = v10;
          sub_245505B5C(a2, a3, a4, isUniquelyReferenced_nonNull_native);
          swift_release();
          swift_bridgeObjectRelease();
          return v10;
        }
        uint64_t v57 = a2;
        unint64_t v25 = 0;
        for (unint64_t i = 512; i <= 0x7FF; unint64_t i = *AssociatedTypeWitness)
        {
          if (i == 512)
          {
            swift_getKeyPath();
            uint64_t v37 = sub_24558EDB8();
            swift_release();
            unint64_t v28 = (unsigned int *)(*(unint64_t *)((char *)AssociatedTypeWitness + v37) + 20);
            goto LABEL_51;
          }
          if (!i) {
            break;
          }
          unint64_t v38 = sub_24558E308();
          if (v38 <= 0x7FF && v38 == i)
          {
            sub_24558E2E8();
            uint64_t v29 = sub_24558E2D8();
            if (sub_24558E2D8() < 0) {
              goto LABEL_108;
            }
            uint64_t v39 = sub_24558E2D8();
            if (v29 < 0 || v39 < v29) {
              goto LABEL_109;
            }
            goto LABEL_52;
          }
          if (!v25) {
            return v10;
          }
LABEL_53:
          unint64_t v30 = *AssociatedTypeWitness;
          if (*AssociatedTypeWitness > 0x7FF) {
            goto LABEL_56;
          }
          if (v30 == 512)
          {
            swift_getKeyPath();
            uint64_t v40 = sub_24558EDB8();
            swift_release();
            uint64_t v32 = (unsigned int *)(*(unint64_t *)((char *)AssociatedTypeWitness + v40) + 20);
            goto LABEL_57;
          }
          if (!v30)
          {
LABEL_56:
            swift_getKeyPath();
            uint64_t v31 = sub_24558EDB8();
            swift_release();
            uint64_t v32 = (unsigned int *)(*(unint64_t *)((char *)AssociatedTypeWitness + v31) + 36);
LABEL_57:
            uint64_t v33 = *v32;
            goto LABEL_58;
          }
          unint64_t v41 = sub_24558E308();
          uint64_t v33 = 0;
          if (v41 <= 0x7FF && v41 == v30)
          {
            sub_24558E2E8();
            uint64_t v33 = sub_24558E2D8();
            if (sub_24558E2D8() < 0) {
              goto LABEL_110;
            }
            uint64_t v42 = sub_24558E2D8();
            if (v33 < 0 || v42 < v33) {
              goto LABEL_111;
            }
          }
LABEL_58:
          if (v25 >= v33)
          {
            __break(1u);
            goto LABEL_107;
          }
          if (sub_24558E368() == 0x676E696B6361625FLL && v34 == 0xEC00000061746144) {
            goto LABEL_45;
          }
          char v35 = sub_24558F598();
          swift_bridgeObjectRelease();
          if ((v35 & 1) == 0)
          {
            if (sub_24558E368() == 0xD000000000000016 && v36 == 0x8000000245592830) {
              goto LABEL_45;
            }
            char v43 = sub_24558F598();
            swift_bridgeObjectRelease();
            if ((v43 & 1) == 0)
            {
              if (sub_24558E368() == 0x7265666675625FLL && v44 == 0xE700000000000000) {
                goto LABEL_45;
              }
              char v45 = sub_24558F598();
              swift_bridgeObjectRelease();
              if ((v45 & 1) == 0)
              {
                sub_24558E368();
                if (v12) {
                  sub_24558E358();
                }
                else {
                  sub_245533E34();
                }
                uint64_t v58 = v57;
                unint64_t v59 = a3;
                swift_bridgeObjectRetain();
                sub_24558E668();
                swift_bridgeObjectRetain();
                sub_24558E668();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v53 = v58;
                uint64_t v54 = v59;
                uint64_t v46 = sub_24558E378();
                uint64_t v58 = v46;
                if (swift_conformsToProtocol2()) {
                  uint64_t v47 = v46;
                }
                else {
                  uint64_t v47 = 0;
                }
                uint64_t v56 = v46;
                if (v47)
                {
                  do
                  {
                    uint64_t v46 = swift_getAssociatedTypeWitness();
                    swift_beginAccess();
                    uint64_t v58 = v46;
                    if (swift_conformsToProtocol2()) {
                      uint64_t v48 = v46;
                    }
                    else {
                      uint64_t v48 = 0;
                    }
                  }
                  while (v48);
                }
                sub_24558EDD8();
                uint64_t v55 = sub_24558F268();
                if (!v55)
                {
                  uint64_t v58 = 0;
                  unint64_t v59 = 0xE000000000000000;
                  sub_24558EF78();
                  sub_24558E668();
                  sub_24558F0E8();
                  sub_24558E668();
                  sub_24558F0E8();
                  goto LABEL_115;
                }
                if (sub_2454A6D54(v56) || (swift_conformsToProtocol2() ? (uint64_t v49 = v46) : (uint64_t v49 = 0), v49))
                {
                  swift_retain();
                  char v50 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v58 = v10;
                  sub_245505B5C(v53, v54, v55, v50);
                  unint64_t v10 = v58;
                  swift_release();
                  swift_release_n();
                }
                else
                {
                  uint64_t v51 = sub_24552D3B0(v56, v53, v54, v55, a5);
                  swift_bridgeObjectRelease();
                  if (!v51) {
                    goto LABEL_115;
                  }
                  char v52 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v58 = v10;
                  sub_245533E94(v51, (uint64_t)sub_2455352C0, 0, v52, &v58);
                  unint64_t v10 = v58;
                  swift_release();
                  swift_release();
                }
LABEL_45:
                swift_bridgeObjectRelease();
              }
            }
          }
          ++v25;
        }
        swift_getKeyPath();
        uint64_t v27 = sub_24558EDB8();
        swift_release();
        unint64_t v28 = (unsigned int *)(*(unint64_t *)((char *)AssociatedTypeWitness + v27) + 36);
LABEL_51:
        uint64_t v29 = *v28;
LABEL_52:
        if (v25 == v29) {
          return v10;
        }
        goto LABEL_53;
      }
      unint64_t v18 = sub_24558E308();
      if (v18 >= 0x800)
      {
        if (!v15) {
          return v10;
        }
      }
      else if (v15 == v18)
      {
        return v10;
      }
    }
    if (*AssociatedTypeWitness - 2048 <= 0xFFFFFFFFFFFFF800)
    {
      uint64_t v19 = *(void *)(a5 + 16);
      if (!v19) {
        goto LABEL_35;
      }
      if (*(unint64_t **)(a5 + 32) == AssociatedTypeWitness)
      {
LABEL_43:
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v19 == 1)
      {
LABEL_35:
        uint64_t v22 = swift_conformsToProtocol2();
        if (v22) {
          uint64_t v23 = v22;
        }
        else {
          uint64_t v23 = 0;
        }
        if (v22) {
          uint64_t v24 = (uint64_t)AssociatedTypeWitness;
        }
        else {
          uint64_t v24 = 0;
        }
        if (v24)
        {
          swift_bridgeObjectRelease();
          return sub_24553318C(v24, a5, a2, a3, v24, v23);
        }
        sub_24558EF78();
        swift_bridgeObjectRelease();
        unint64_t v60 = 0xD000000000000017;
        unint64_t v61 = 0x80000002455927F0;
        sub_24558F908();
        sub_24558E668();
        swift_bridgeObjectRelease();
        while (1)
        {
LABEL_115:
          sub_24558F1A8();
          __break(1u);
        }
      }
      uint64_t v20 = 5;
      while (1)
      {
        uint64_t v21 = v20 - 3;
        if (__OFADD__(v20 - 4, 1)) {
          break;
        }
        if (*(unint64_t **)(a5 + 8 * v20) == AssociatedTypeWitness) {
          goto LABEL_43;
        }
        ++v20;
        if (v21 == v19) {
          goto LABEL_35;
        }
      }
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
    }
    unint64_t v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    sub_24558EF78();
    swift_bridgeObjectRelease();
    unint64_t v60 = 0xD00000000000001FLL;
    unint64_t v61 = 0x8000000245592810;
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    goto LABEL_115;
  }
  return v10;
}

uint64_t sub_24552DE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_2454D7E9C(a3, a4);
  *(void *)(v6 + 48) = a1;
  *(void *)(v6 + 56) = a2;
  swift_unknownObjectRetain();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_24552DE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(sub_2454D7E9C(a1, a2) + 32);
  swift_unknownObjectRetain();
  swift_release();
  return v2;
}

uint64_t sub_24552DEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_2454D7E9C(a3, a4);
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  swift_unknownObjectRetain();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_24552DF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v37 = a1;
  uint64_t v38 = v9;
  if (swift_conformsToProtocol2()) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10)
  {
    do
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      swift_beginAccess();
      uint64_t v38 = AssociatedTypeWitness;
      if (swift_conformsToProtocol2()) {
        uint64_t v12 = AssociatedTypeWitness;
      }
      else {
        uint64_t v12 = 0;
      }
    }
    while (v12);
  }
  else
  {
    uint64_t AssociatedTypeWitness = v9;
  }
  if (sub_2454A7900(a2, a3)) {
    sub_2454B6C8C(a2, a3);
  }
  uint64_t v13 = dynamic_cast_existential_2_conditional(AssociatedTypeWitness);
  if (v13)
  {
    uint64_t v16 = v13;
    uint64_t v17 = v14;
    uint64_t v18 = v15;
    uint64_t v36 = (uint64_t *)a4;
    uint64_t v19 = sub_24558ECE8();
    uint64_t v35 = (uint64_t)&v35;
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v19);
    uint64_t v22 = (char *)&v35 - v21;
    sub_24552E35C(v9, v37, a2, v16, a3, v17, (uint64_t)&v35 - v21);
    uint64_t v23 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v16) == 1)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      unint64_t v25 = v36;
      *(_OWORD *)uint64_t v36 = 0u;
      *((_OWORD *)v25 + 1) = 0u;
    }
    else
    {
      uint64_t v39 = v16;
      uint64_t v40 = v17;
      uint64_t v41 = v18;
      unint64_t v30 = __swift_allocate_boxed_opaque_existential_2Tm_0(&v38);
      (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 32))(v30, v22, v16);
      uint64_t v31 = v39;
      uint64_t v32 = __swift_project_boxed_opaque_existential_2Tm(&v38, v39);
      uint64_t v33 = v36;
      v36[3] = v31;
      boxed_opaque_existential_2Tm_0 = __swift_allocate_boxed_opaque_existential_2Tm_0(v33);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(boxed_opaque_existential_2Tm_0, v32, v31);
      return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v38);
    }
  }
  else
  {
    uint64_t v26 = swift_conformsToProtocol2();
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      uint64_t v28 = AssociatedTypeWitness;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v28)
    {
      uint64_t result = sub_24552E600(v28, v4, v37, a2, v28, a3, v27);
      if (result)
      {
        uint64_t v29 = result;
        uint64_t result = swift_getObjectType();
        *(void *)(a4 + 24) = result;
        *(void *)a4 = v29;
      }
      else
      {
        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
      }
    }
    else
    {
      sub_24558EF78();
      sub_24558E668();
      type metadata accessor for Schema.Attribute();
      sub_24558F0E8();
      uint64_t result = sub_24558F1A8();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_24552E35C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  if (swift_conformsToProtocol2()) {
    uint64_t v14 = a1;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v29, a3, a5);
    uint64_t v15 = v30;
    uint64_t v16 = v31;
    __swift_project_boxed_opaque_existential_2Tm(v29, v30);
    swift_beginAccess();
    uint64_t v18 = *(void *)(a2 + 16);
    uint64_t v17 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    sub_24552C994(v18, v17, a3, a5);
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_24558ECE8();
    sub_24558F8A8();
    uint64_t v20 = swift_dynamicCastClassUnconditional();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 64);
    uint64_t WitnessTable = swift_getWitnessTable();
    v21(v20, v19, WitnessTable, v15, v16);
    swift_release();
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v29, a3, a5);
    uint64_t v23 = v30;
    uint64_t v24 = v31;
    __swift_project_boxed_opaque_existential_2Tm(v29, v30);
    swift_beginAccess();
    uint64_t v26 = *(void *)(a2 + 16);
    uint64_t v25 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    sub_24552C994(v26, v25, a3, a5);
    swift_bridgeObjectRelease();
    sub_24558F8A8();
    uint64_t v27 = swift_dynamicCastClassUnconditional();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 64))(v27, a4, a6, v23, v24);
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a7, 0, 1, a4);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v29);
}

uint64_t sub_24552E600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a6 + 40))(v19, a4, a6);
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  __swift_project_boxed_opaque_existential_2Tm(v19, v20);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v14 = *(void *)(a3 + 24);
  swift_bridgeObjectRetain();
  sub_24552C994(v15, v14, a4, a6);
  swift_bridgeObjectRelease();
  sub_24558F8A8();
  uint64_t v16 = swift_dynamicCastClassUnconditional();
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 72))(v16, a5, a7, v12, v13);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
  return v17;
}

uint64_t sub_24552E734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v9 = *(void *)(a2 + 56);
  v26[0] = v9;
  if (swift_conformsToProtocol2()) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10)
  {
    do
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      swift_beginAccess();
      v26[0] = AssociatedTypeWitness;
      if (swift_conformsToProtocol2()) {
        uint64_t v12 = AssociatedTypeWitness;
      }
      else {
        uint64_t v12 = 0;
      }
    }
    while (v12);
  }
  else
  {
    uint64_t AssociatedTypeWitness = v9;
  }
  uint64_t v13 = swift_conformsToProtocol2();
  if (v13) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v13) {
    uint64_t v15 = AssociatedTypeWitness;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v15)
  {
    sub_245535858(a1, (uint64_t)v21, &qword_26B0DA230);
    if (v22)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3A30);
      if (swift_dynamicCast())
      {
        if (*((void *)&v24 + 1))
        {
          sub_245535544(&v23, (uint64_t)v26);
          sub_24552E9EC(v15, v9, v4, a2, (uint64_t)v26, a3, v15, a4, v14);
          return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
        }
      }
      else
      {
        uint64_t v25 = 0;
        long long v23 = 0u;
        long long v24 = 0u;
      }
    }
    else
    {
      sub_2454AF624((uint64_t)v21, &qword_26B0DA230);
      long long v23 = 0u;
      long long v24 = 0u;
      uint64_t v25 = 0;
    }
    uint64_t v19 = (uint64_t *)&unk_268EE3A28;
    uint64_t v20 = &v23;
    return sub_2454AF624((uint64_t)v20, v19);
  }
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v17 = result;
  }
  else {
    uint64_t v17 = 0;
  }
  if (result) {
    uint64_t v18 = AssociatedTypeWitness;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v18)
  {
    sub_245535858(a1, (uint64_t)v26, &qword_26B0DA230);
    if (!v26[3])
    {
      uint64_t v19 = &qword_26B0DA230;
      uint64_t v20 = (long long *)v26;
      return sub_2454AF624((uint64_t)v20, v19);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      sub_24552EDEC(v18, v4, a2, v23, *((uint64_t *)&v23 + 1), a3, v18, a4, v17);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_24552E9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v35 = a5;
  uint64_t v37 = *(void *)(a7 - 8);
  uint64_t v36 = a9;
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24558ECE8();
  uint64_t v34 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v34 - v17;
  if (swift_conformsToProtocol2()) {
    uint64_t v19 = a2;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v19)
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a8 + 40))(v40, a6, a8);
    uint64_t v21 = v41;
    uint64_t v20 = v42;
    __swift_project_boxed_opaque_existential_2Tm(v40, v41);
    swift_beginAccess();
    uint64_t v22 = *(void *)(a4 + 16);
    uint64_t v23 = *(void *)(a4 + 24);
    swift_bridgeObjectRetain();
    sub_24552C994(v22, v23, a6, a8);
    swift_bridgeObjectRelease();
    sub_24558F8A8();
    uint64_t v24 = swift_dynamicCastClassUnconditional();
    sub_24549E250(v35, (uint64_t)v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3A30);
    int v25 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v18, v25 ^ 1u, 1, a7);
    uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 112);
    uint64_t v38 = v36;
    uint64_t WitnessTable = swift_getWitnessTable();
    v26(v24, v18, v16, WitnessTable, v21, v20);
    swift_release();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v16);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a8 + 40))(v40, a6, a8);
    uint64_t v28 = v41;
    uint64_t v29 = v42;
    __swift_project_boxed_opaque_existential_2Tm(v40, v41);
    swift_beginAccess();
    uint64_t v30 = *(void *)(a4 + 16);
    uint64_t v31 = *(void *)(a4 + 24);
    swift_bridgeObjectRetain();
    sub_24552C994(v30, v31, a6, a8);
    swift_bridgeObjectRelease();
    sub_24558F8A8();
    uint64_t v32 = swift_dynamicCastClassUnconditional();
    sub_24549E250(v35, (uint64_t)v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3A30);
    swift_dynamicCast();
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 112))(v32, v15, a7, v36, v28, v29);
    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v15, a7);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v40);
}

uint64_t sub_24552EDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a8 + 40))(v21, a6, a8);
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_2Tm(v21, v22);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = *(void *)(a3 + 24);
  swift_bridgeObjectRetain();
  sub_24552C994(v15, v16, a6, a8);
  swift_bridgeObjectRelease();
  sub_24558ECE8();
  sub_24558F8A8();
  uint64_t v17 = swift_dynamicCastClassUnconditional();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
  if (swift_dynamicCast()) {
    uint64_t v18 = v20;
  }
  else {
    uint64_t v18 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 128))(v17, v18, a7, a9, v13, v14);
  swift_release();
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v21);
}

uint64_t sub_24552EF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 64);
  if (swift_conformsToProtocol2()) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v8)
  {
    do
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      swift_beginAccess();
      if (swift_conformsToProtocol2()) {
        uint64_t v10 = AssociatedTypeWitness;
      }
      else {
        uint64_t v10 = 0;
      }
    }
    while (v10);
  }
  else
  {
    uint64_t AssociatedTypeWitness = v7;
  }
  uint64_t v11 = swift_conformsToProtocol2();
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  if (!v11) {
    uint64_t AssociatedTypeWitness = 0;
  }
  if (AssociatedTypeWitness)
  {
    if (sub_2454A7900(a2, a3)) {
      sub_2454B6C8C(a2, a3);
    }
    return sub_24552F18C(AssociatedTypeWitness, v7, v3, a1, a2, AssociatedTypeWitness, a3, v12);
  }
  else
  {
    sub_24558EF78();
    sub_24558E668();
    type metadata accessor for Schema.Relationship();
    sub_24558F0E8();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_24552F18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (swift_conformsToProtocol2()) {
    uint64_t v14 = a2;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a7 + 40))(v28, a5, a7);
    uint64_t v15 = v29;
    uint64_t v16 = v30;
    __swift_project_boxed_opaque_existential_2Tm(v28, v29);
    swift_beginAccess();
    uint64_t v18 = *(void *)(a4 + 16);
    uint64_t v17 = *(void *)(a4 + 24);
    swift_bridgeObjectRetain();
    sub_24552C994(v18, v17, a5, a7);
    swift_bridgeObjectRelease();
    sub_24558ECE8();
    sub_24558F8A8();
    uint64_t v19 = swift_dynamicCastClassUnconditional();
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 80))(v19, a6, a8, v15, v16);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a7 + 40))(v28, a5, a7);
    uint64_t v21 = v29;
    uint64_t v22 = v30;
    __swift_project_boxed_opaque_existential_2Tm(v28, v29);
    swift_beginAccess();
    uint64_t v24 = *(void *)(a4 + 16);
    uint64_t v23 = *(void *)(a4 + 24);
    swift_bridgeObjectRetain();
    sub_24552C994(v24, v23, a5, a7);
    swift_bridgeObjectRelease();
    sub_24558F8A8();
    uint64_t v25 = swift_dynamicCastClassUnconditional();
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 72))(v25, a6, a8, v21, v22);
  }
  uint64_t v26 = v20;
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v28);
  return v26;
}

uint64_t sub_24552F3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = *(void *)(a3 + 64);
  if (swift_conformsToProtocol2()) {
    uint64_t v13 = AssociatedTypeWitness;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v13)
  {
    do
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      swift_beginAccess();
      if (swift_conformsToProtocol2()) {
        uint64_t v14 = AssociatedTypeWitness;
      }
      else {
        uint64_t v14 = 0;
      }
    }
    while (v14);
  }
  uint64_t v15 = swift_conformsToProtocol2();
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  if (v15) {
    uint64_t v17 = AssociatedTypeWitness;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v17) {
    return sub_24552F5AC(v17, v6, a3, a1, a2, a4, v17, a5, v16);
  }
  sub_24558EF78();
  sub_24558E668();
  type metadata accessor for Schema.Relationship();
  sub_24558F0E8();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24552F5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a8 + 40))(v21, a6, a8);
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  __swift_project_boxed_opaque_existential_2Tm(v21, v22);
  swift_beginAccess();
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = *(void *)(a3 + 24);
  swift_bridgeObjectRetain();
  sub_24552C994(v16, v17, a6, a8);
  swift_bridgeObjectRelease();
  sub_24558ECE8();
  sub_24558F8A8();
  uint64_t v18 = swift_dynamicCastClassUnconditional();
  if (a4)
  {
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
    if (swift_dynamicCast()) {
      a4 = v20;
    }
    else {
      a4 = 0;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 128))(v18, a4, a7, a9, v14, v15);
  swift_release();
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v21);
}

uint64_t sub_24552F744(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = (void *)a1[8];
  uint64_t v28 = AssociatedTypeWitness;
  if (swift_conformsToProtocol2()) {
    uint64_t v8 = AssociatedTypeWitness;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v8)
  {
    do
    {
      uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
      swift_beginAccess();
      uint64_t v28 = AssociatedTypeWitness;
      if (swift_conformsToProtocol2()) {
        uint64_t v9 = AssociatedTypeWitness;
      }
      else {
        uint64_t v9 = 0;
      }
    }
    while (v9);
  }
  uint64_t v10 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9980);
  swift_beginAccess();
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24552C994(v11, v12, a2, a3);
  swift_bridgeObjectRelease();
  if (sub_2454A7900(a2, a3)) {
    sub_2454B6C8C(a2, a3);
  }
  uint64_t v14 = *AssociatedTypeWitness;
  if (*AssociatedTypeWitness > 0x7FFuLL || ((unint64_t)(v14 - 512) >= 3 ? (BOOL v15 = v14 == 0) : (BOOL v15 = 1), v15)) {
    uint64_t v27 = sub_24558E2B8();
  }
  else {
    uint64_t v27 = 0;
  }
  uint64_t v16 = *v10;
  if ((unint64_t)*v10 <= 0x7FF && (unint64_t)(v16 - 512) >= 3 && v16)
  {
    if (!v27) {
      goto LABEL_24;
    }
LABEL_35:
    uint64_t v24 = swift_conformsToProtocol2();
    if (v24) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 0;
    }
    if (!v24) {
      uint64_t AssociatedTypeWitness = 0;
    }
    if (AssociatedTypeWitness)
    {
      uint64_t v30 = AssociatedTypeWitness;
      uint64_t v31 = v25;
      __swift_allocate_boxed_opaque_existential_2Tm_0((uint64_t *)&v28);
      sub_24552FFF0((uint64_t)AssociatedTypeWitness, v3, v13, a2, (uint64_t)AssociatedTypeWitness, a3, v25);
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8B80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
      swift_dynamicCast();
      return (uint64_t)v32;
    }
    goto LABEL_49;
  }
  uint64_t v17 = sub_24558E2B8();
  if (!v27)
  {
    if (!v17) {
      goto LABEL_24;
    }
    goto LABEL_35;
  }
  if (!v17 || v17 != v27) {
    goto LABEL_35;
  }
LABEL_24:
  sub_24558E348();
  if (v18 < 0)
  {
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v32 = a1;
    type metadata accessor for Schema.Relationship();
    sub_24558F0E8();
    goto LABEL_52;
  }
  if (!v18)
  {
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    uint64_t v32 = (void *)v13;
    sub_24558EDD8();
    sub_24558F0E8();
    goto LABEL_52;
  }
  uint64_t v19 = (uint64_t *)sub_24558E348();
  if (v20 < 1) {
    goto LABEL_48;
  }
  uint64_t v21 = *v19;
  if (swift_conformsToProtocol2()) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  if (v22)
  {
    if (v8)
    {
      if (!sub_24552FE98(v22, v3, v13, a2, v22, a3))
      {
        swift_release();
        return MEMORY[0x263F8EE78];
      }
    }
    else
    {
      sub_24552FD6C(v22, v3, v13, a2, v22, a3);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
    uint64_t v23 = sub_24558F0D8();
    swift_release();
    swift_bridgeObjectRelease();
    return v23;
  }
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  dynamic_cast_existential_2_conditional(v21);
  sub_24558EF78();
  sub_24558E668();
  sub_24558F908();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  uint64_t v32 = a1;
  type metadata accessor for Schema.Relationship();
  sub_24558F0E8();
LABEL_52:
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24552FD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v11)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v15;
  void v16[3];
  uint64_t v17;
  uint64_t v18;

  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a6 + 40))(v16, a4, a6);
  uint64_t v7 = v17;
  uint64_t v8 = v18;
  __swift_project_boxed_opaque_existential_2Tm(v16, v17);
  uint64_t v9 = sub_24558E8A8();
  sub_24558F8A8();
  uint64_t v10 = swift_dynamicCastClassUnconditional();
  uint64_t v11 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 88);
  uint64_t WitnessTable = swift_getWitnessTable();
  v11(&v15, v10, v9, a5, WitnessTable, v7, v8);
  uint64_t v13 = v15;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v16);
  return v13;
}

uint64_t sub_24552FE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v11)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v15;
  void v16[3];
  uint64_t v17;
  uint64_t v18;

  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a6 + 40))(v16, a4, a6);
  uint64_t v7 = v17;
  uint64_t v8 = v18;
  __swift_project_boxed_opaque_existential_2Tm(v16, v17);
  sub_24558E8A8();
  uint64_t v9 = sub_24558ECE8();
  sub_24558F8A8();
  uint64_t v10 = swift_dynamicCastClassUnconditional();
  uint64_t v11 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 88);
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  v11(&v15, v10, v9, a5, WitnessTable, v7, v8);
  uint64_t v13 = v15;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v16);
  return v13;
}

uint64_t sub_24552FFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a6 + 40))(v15, a4, a6);
  uint64_t v9 = v16;
  uint64_t v10 = v17;
  __swift_project_boxed_opaque_existential_2Tm(v15, v16);
  sub_24558F8A8();
  uint64_t v11 = swift_dynamicCastClassUnconditional();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12(v11, a5, AssociatedTypeWitness, a7, v9, v10);
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v15);
}

uint64_t sub_245530104(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = (void *)a2[8];
  if (swift_conformsToProtocol2()) {
    uint64_t v10 = AssociatedTypeWitness;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10)
  {
    do
    {
      uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
      swift_beginAccess();
      if (swift_conformsToProtocol2()) {
        uint64_t v11 = AssociatedTypeWitness;
      }
      else {
        uint64_t v11 = 0;
      }
    }
    while (v11);
  }
  uint64_t v12 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9980);
  swift_beginAccess();
  uint64_t v13 = a2[2];
  uint64_t v14 = a2[3];
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_24552C994(v13, v14, a3, a4);
  swift_bridgeObjectRelease();
  uint64_t v16 = *AssociatedTypeWitness;
  if (*AssociatedTypeWitness > 0x7FFuLL || ((unint64_t)(v16 - 512) >= 3 ? (BOOL v17 = v16 == 0) : (BOOL v17 = 1), v17)) {
    uint64_t v30 = sub_24558E2B8();
  }
  else {
    uint64_t v30 = 0;
  }
  uint64_t v18 = *v12;
  if ((unint64_t)*v12 <= 0x7FF && (unint64_t)(v18 - 512) >= 3 && v18 != 0)
  {
    if (!v30) {
      goto LABEL_25;
    }
LABEL_35:
    uint64_t v26 = swift_conformsToProtocol2();
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      uint64_t v28 = (uint64_t)AssociatedTypeWitness;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v28)
    {
      sub_245530968(v28, v4, v15, a1, a3, v28, a4, v27);
      return swift_release();
    }
    goto LABEL_49;
  }
  uint64_t v20 = sub_24558E2B8();
  if (!v30)
  {
    if (!v20) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }
  if (!v20 || v20 != v30) {
    goto LABEL_35;
  }
LABEL_25:
  sub_24558E348();
  if (v21 < 0)
  {
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    sub_24558EF78();
    sub_24558E668();
    type metadata accessor for Schema.Relationship();
    sub_24558F0E8();
    goto LABEL_52;
  }
  if (!v21)
  {
    sub_24558EF78();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    sub_24558EDD8();
    sub_24558F0E8();
    goto LABEL_52;
  }
  uint64_t v22 = (uint64_t *)sub_24558E348();
  if (v23 < 1) {
    goto LABEL_48;
  }
  uint64_t v24 = *v22;
  if (swift_conformsToProtocol2()) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 0;
  }
  if (v25)
  {
    if (v10) {
      sub_2455307D0(v25, v4, v15, a1, a3, v25, a4);
    }
    else {
      sub_245530680(v25, v4, v15, a1, a3, v25, a4);
    }
    return swift_release();
  }
  dynamic_cast_existential_2_conditional(v24);
  sub_24558EF78();
  sub_24558E668();
  sub_24558F908();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  type metadata accessor for Schema.Relationship();
  sub_24558F0E8();
LABEL_52:
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_245530680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a7 + 40))(v16, a5, a7);
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  __swift_project_boxed_opaque_existential_2Tm(v16, v17);
  uint64_t v10 = sub_24558E8A8();
  sub_24558F8A8();
  uint64_t v11 = swift_dynamicCastClassUnconditional();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
  uint64_t v15 = sub_24558F0D8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 136);
  uint64_t WitnessTable = swift_getWitnessTable();
  v12(v11, &v15, v10, a6, WitnessTable, v8, v9);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v16);
}

uint64_t sub_2455307D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a7 + 40))(v17, a5, a7);
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_2Tm(v17, v18);
  sub_24558E8A8();
  uint64_t v11 = sub_24558ECE8();
  sub_24558F8A8();
  uint64_t v12 = swift_dynamicCastClassUnconditional();
  v16[2] = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
  swift_dynamicCast();
  v16[0] = v16[1];
  uint64_t v13 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 136);
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  v13(v12, v16, v11, a6, WitnessTable, v9, v10);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v17);
}

uint64_t sub_245530968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v23[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 40))(v23, v15, v14);
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  __swift_project_boxed_opaque_existential_2Tm(v23, v24);
  sub_24558F8A8();
  uint64_t v18 = swift_dynamicCastClassUnconditional();
  uint64_t v22 = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
  swift_dynamicCast();
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 136);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19(v18, v13, a6, AssociatedTypeWitness, a8, v16, v17);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a6);
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v23);
}

uint64_t sub_245530B30(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = PersistentModel.getValue<A>(forKey:)(a1, a4, a5);
  sub_2454C2E50(a3, v9, *(void *)(v8 + *MEMORY[0x263F8EA20]), *(void *)(v8 + *MEMORY[0x263F8EA20] + 8), a4, a5);

  return swift_unknownObjectRelease();
}

uint64_t sub_245530BE0(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*(void *)(*MEMORY[0x263F8EA20] + *a1 + 8) + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  PersistentModel.getValue<A, B>(forKey:)(a1, v10, a4, WitnessTable);
  if (MEMORY[0x2456A12E0](v19, v10))
  {
    uint64_t v12 = 4;
    do
    {
      uint64_t v13 = v12 - 4;
      char v14 = sub_24558E848();
      sub_24558E7F8();
      if (v14)
      {
        uint64_t v15 = *(void *)(v19 + 8 * v12);
        swift_unknownObjectRetain();
        BOOL v16 = __OFADD__(v13, 1);
        uint64_t v17 = v12 - 3;
        if (v16) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v15 = sub_24558EFE8();
        BOOL v16 = __OFADD__(v13, 1);
        uint64_t v17 = v12 - 3;
        if (v16)
        {
LABEL_9:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      sub_2454C2E50(a3, v15, *(void *)(v9 + *MEMORY[0x263F8EA20]), v10, a4, a5);
      swift_unknownObjectRelease();
      ++v12;
    }
    while (v17 != MEMORY[0x2456A12E0](v19, v10));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_245530D7C(uint64_t *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v50 = a8;
  uint64_t v51 = a7;
  char v52 = a6;
  uint64_t v46 = a5;
  int v48 = a4;
  uint64_t v14 = *a1;
  uint64_t v54 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v15 = *(void *)(v54 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v54);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v21 = PersistentModel.getValue<A>(forKey:)(a1, a11, a12);
  swift_beginAccess();
  uint64_t v22 = *(void *)(a3 + 16);
  uint64_t v23 = *(void *)(*MEMORY[0x263F8EA20] + v14 + 8);
  swift_bridgeObjectRetain();
  uint64_t v47 = v23;
  uint64_t v49 = a12;
  uint64_t v53 = v21;
  PersistentModel.persistentModelID.getter(v23, a12, (uint64_t)v20);
  if (!*(void *)(v22 + 16)
    || (sub_24558F7D8(),
        sub_24558E158(),
        sub_24553555C((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]),
        sub_24558E4D8(),
        uint64_t v24 = sub_24558F818(),
        uint64_t v25 = -1 << *(unsigned char *)(v22 + 32),
        unint64_t v26 = v24 & ~v25,
        ((*(void *)(v22 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_24549B280((uint64_t)v20);
    uint64_t v38 = v49;
    uint64_t v39 = v53;
    if (v48)
    {
      uint64_t v40 = (uint64_t *)(v46 + 16);
      swift_beginAccess();
      uint64_t v41 = (void *)*v40;
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v40 = (uint64_t)v41;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v41 = sub_245496260(0, v41[2] + 1, 1, v41);
        *uint64_t v40 = (uint64_t)v41;
      }
      unint64_t v44 = v41[2];
      unint64_t v43 = v41[3];
      if (v44 >= v43 >> 1) {
        *uint64_t v40 = (uint64_t)sub_245496260((void *)(v43 > 1), v44 + 1, 1, v41);
      }
      sub_245496248(v44, v39, v40, v47, v38);
      swift_endAccess();
    }
    swift_unknownObjectRetain();
    v52(v50, v39, v38);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  uint64_t v27 = ~v25;
  uint64_t v28 = *(int *)(v54 + 20);
  uint64_t v29 = *(void *)(v15 + 72);
  while (1)
  {
    sub_24549B2DC(*(void *)(v22 + 48) + v29 * v26, (uint64_t)v18);
    uint64_t v30 = *(void *)&v18[*(int *)(v54 + 20)];
    uint64_t v31 = *(void *)&v20[v28];
    uint64_t v32 = *(void *)(v30 + 24);
    uint64_t v33 = *(void *)(v31 + 24);
    if (v32)
    {
      if (!v33
        || (*(void *)(v30 + 16) == *(void *)(v31 + 16) ? (BOOL v34 = v32 == v33) : (BOOL v34 = 0),
            !v34 && (sub_24558F598() & 1) == 0))
      {
LABEL_5:
        sub_24549B280((uint64_t)v18);
        goto LABEL_6;
      }
    }
    else if (v33)
    {
      goto LABEL_5;
    }
    BOOL v35 = *(void *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v35 && (sub_24558F598() & 1) == 0) {
      goto LABEL_5;
    }
    if (*(void *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    char v37 = sub_24558F598();
    sub_24549B280((uint64_t)v18);
    if (v37) {
      goto LABEL_34;
    }
LABEL_6:
    unint64_t v26 = (v26 + 1) & v27;
    if (((*(void *)(v22 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
      goto LABEL_25;
    }
  }
  sub_24549B280((uint64_t)v18);
LABEL_34:
  swift_bridgeObjectRelease();
  sub_24549B280((uint64_t)v20);
  return swift_unknownObjectRelease();
}

uint64_t sub_2455311BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = *(void *)(*(void *)(*MEMORY[0x263F8EA20] + *a1 + 8) + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  PersistentModel.getValue<A, B>(forKey:)(a1, v12, a11, WitnessTable);
  swift_getWitnessTable();
  sub_24558E758();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24553133C(uint64_t *a1, uint64_t *a2, int a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v54 = a5;
  uint64_t v52 = a7;
  uint64_t v53 = a6;
  int v48 = a4;
  int v49 = a3;
  uint64_t v55 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v15 = *(void *)(v55 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v55);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v21 = *a1;
  swift_beginAccess();
  uint64_t v22 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v56 = v20;
  uint64_t v47 = a10;
  uint64_t v50 = v21;
  uint64_t v51 = a13;
  PersistentModel.persistentModelID.getter(a10, a13, (uint64_t)v20);
  if (!*(void *)(v22 + 16)
    || (sub_24558F7D8(),
        sub_24558E158(),
        sub_24553555C((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]),
        sub_24558E4D8(),
        uint64_t v23 = sub_24558F818(),
        uint64_t v24 = -1 << *(unsigned char *)(v22 + 32),
        unint64_t v25 = v23 & ~v24,
        ((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_24549B280((uint64_t)v56);
    uint64_t v39 = v50;
    uint64_t v38 = v51;
    if (v49)
    {
      uint64_t v40 = v48;
      swift_beginAccess();
      uint64_t v41 = (void *)*v40;
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v40 = (uint64_t)v41;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v41 = sub_245496260(0, v41[2] + 1, 1, v41);
        *uint64_t v40 = (uint64_t)v41;
      }
      unint64_t v44 = v41[2];
      unint64_t v43 = v41[3];
      if (v44 >= v43 >> 1) {
        *uint64_t v40 = (uint64_t)sub_245496260((void *)(v43 > 1), v44 + 1, 1, v41);
      }
      sub_245496248(v44, v39, v40, v47, v38);
      swift_endAccess();
    }
    return v54(v52, v39, v38);
  }
  uint64_t v26 = v15;
  uint64_t v27 = ~v24;
  uint64_t v28 = *(int *)(v55 + 20);
  uint64_t v29 = *(void *)(v26 + 72);
  while (1)
  {
    sub_24549B2DC(*(void *)(v22 + 48) + v29 * v25, (uint64_t)v18);
    uint64_t v30 = *(void *)&v18[*(int *)(v55 + 20)];
    uint64_t v31 = *(void *)&v56[v28];
    uint64_t v32 = *(void *)(v30 + 24);
    uint64_t v33 = *(void *)(v31 + 24);
    if (v32)
    {
      if (!v33
        || (*(void *)(v30 + 16) == *(void *)(v31 + 16) ? (BOOL v34 = v32 == v33) : (BOOL v34 = 0),
            !v34 && (sub_24558F598() & 1) == 0))
      {
LABEL_5:
        sub_24549B280((uint64_t)v18);
        goto LABEL_6;
      }
    }
    else if (v33)
    {
      goto LABEL_5;
    }
    BOOL v35 = *(void *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v35 && (sub_24558F598() & 1) == 0) {
      goto LABEL_5;
    }
    if (*(void *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    char v37 = sub_24558F598();
    sub_24549B280((uint64_t)v18);
    if (v37) {
      goto LABEL_33;
    }
LABEL_6:
    unint64_t v25 = (v25 + 1) & v27;
    if (((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_25;
    }
  }
  sub_24549B280((uint64_t)v18);
LABEL_33:
  swift_bridgeObjectRelease();
  return sub_24549B280((uint64_t)v56);
}

void sub_24553171C(uint64_t a1, uint64_t a2)
{
}

void sub_24553172C(char a1, uint64_t a2, uint64_t a3)
{
  if (PersistentModel.modelContext.getter(a2, a3))
  {
    if ((sub_2454A7900(a2, a3) & 1) != 0 && (a1 & 1) == 0) {
      sub_245544BD8(v3, a2, a3);
    }
    type metadata accessor for ModelSnapshot();
    uint64_t v7 = swift_unknownObjectRetain();
    sub_245583210(v7);
    swift_release();
    swift_getWitnessTable();
    sub_2455841E8();
  }
  else
  {
    sub_24558F1A8();
    __break(1u);
  }
}

uint64_t sub_245531860(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    sub_245535858(*(void *)(a5 + 56) + 32 * a2, result, &qword_26B0DA230);
    swift_bridgeObjectRetain();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_2455318F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24549D7B0();
  uint64_t v10 = v9;
  uint64_t result = PersistentModel.modelContext.getter(a2, a3);
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v12 = *(void *)(result + 16);
  if (v12)
  {
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_16:
      __break(1u);
      return result;
    }
    uint64_t v13 = result;
  }
  swift_retain();
  swift_release();
  uint64_t v14 = *(void *)(v13 + 80);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v14 + 16) || (unint64_t v15 = sub_2454A0B40(v8, v10), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v18 = *(void *)(v17 + 64);
  swift_beginAccess();
  uint64_t v19 = *(void *)(v17 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245497E04(v19);
  uint64_t v20 = sub_2454D7E9C(a2, a3);
  *(_DWORD *)(v20 + 24) |= 0x800u;
  swift_release();
  uint64_t v21 = *(void *)(v18 + 16);
  if (v21)
  {
    uint64_t v22 = (void *)(v18 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_245531B08(v22, a1, v4, a2, a3);
      v22 += 5;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = sub_2454D7E9C(a2, a3);
  *(_DWORD *)(v23 + 24) &= ~0x800u;
  swift_release();
  return swift_release();
}

uint64_t sub_245531B08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v9);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 104))(v9, v10))
  {
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    __swift_project_boxed_opaque_existential_2Tm(a1, v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
    if (*(void *)(a2 + 16))
    {
      unint64_t v15 = sub_2454A0B40(v13, v14);
      if (v16)
      {
        uint64_t v17 = v15;
        int v18 = *(_DWORD *)(a2 + 36);
        swift_bridgeObjectRelease();
        sub_245531860((uint64_t)v63, v17, v18, 0, a2);
        swift_bridgeObjectRelease();
        sub_24549E250((uint64_t)a1, (uint64_t)v64);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA128);
        type metadata accessor for Schema.Attribute();
        swift_dynamicCast();
        sub_24552DF44(v57, a4, a5, (uint64_t)&v61);
        swift_release();
        sub_24549E250((uint64_t)a1, (uint64_t)v64);
        swift_dynamicCast();
        sub_24552E734((uint64_t)v63, v57, a4, a5);
        swift_release();
        sub_2454AF624((uint64_t)&v61, &qword_26B0DA230);
        uint64_t v19 = v63;
        return sub_2454AF624((uint64_t)v19, &qword_26B0DA230);
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v65 = a4;
  sub_24549E250((uint64_t)a1, (uint64_t)v64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA128);
  type metadata accessor for Schema.Relationship();
  if (swift_dynamicCast())
  {
    uint64_t v21 = *(void *)&v63[0];
    if (*(unsigned char *)(*(void *)&v63[0] + 168) == 1)
    {
      uint64_t v22 = a1[3];
      uint64_t v23 = a1[4];
      __swift_project_boxed_opaque_existential_2Tm(a1, v22);
      uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v22, v23);
      if (*(void *)(a2 + 16))
      {
        unint64_t v26 = sub_2454A0B40(v24, v25);
        if (v27)
        {
          uint64_t v28 = v26;
          int v29 = *(_DWORD *)(a2 + 36);
          swift_bridgeObjectRelease();
          sub_245531860((uint64_t)v64, v28, v29, 0, a2);
          swift_bridgeObjectRelease();
          sub_245535858((uint64_t)v64, (uint64_t)&v61, &qword_26B0DA230);
          if (*((void *)&v62 + 1))
          {
            sub_2454A0BBC(&v61, v63);
            sub_2454CE878((uint64_t)v63, (uint64_t)&v61);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
            swift_dynamicCast();
            uint64_t v30 = v65;
            uint64_t v31 = sub_24552EF7C(v21, v65, a5);
            if (!v31 || v57 != v31)
            {
              uint64_t v32 = swift_unknownObjectRetain();
              sub_24552F3BC(v32, v58, v21, v30, a5);
              swift_unknownObjectRelease();
            }
            swift_unknownObjectRelease_n();
            goto LABEL_27;
          }
LABEL_28:
          sub_2454AF624((uint64_t)v64, &qword_26B0DA230);
          swift_release();
          uint64_t v19 = &v61;
          return sub_2454AF624((uint64_t)v19, &qword_26B0DA230);
        }
      }
      goto LABEL_24;
    }
    uint64_t v56 = a5;
    swift_release();
  }
  else
  {
    uint64_t v56 = a5;
  }
  uint64_t v34 = a1[3];
  uint64_t v33 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v34);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 112))(v34, v33);
  if ((result & 1) == 0) {
    return result;
  }
  sub_24549E250((uint64_t)a1, (uint64_t)v64);
  swift_dynamicCast();
  BOOL v35 = *(void **)&v63[0];
  uint64_t v36 = a1[3];
  uint64_t v37 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v36);
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 32))(v36, v37);
  if (!*(void *)(a2 + 16) || (unint64_t v40 = sub_2454A0B40(v38, v39), (v41 & 1) == 0))
  {
LABEL_24:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v42 = v40;
  int v43 = *(_DWORD *)(a2 + 36);
  swift_bridgeObjectRelease();
  sub_245531860((uint64_t)v64, v42, v43, 0, a2);
  swift_bridgeObjectRelease();
  sub_245535858((uint64_t)v64, (uint64_t)&v61, &qword_26B0DA230);
  if (!*((void *)&v62 + 1)) {
    goto LABEL_28;
  }
  sub_2454A0BBC(&v61, v63);
  sub_2454CE878((uint64_t)v63, (uint64_t)&v61);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
    return sub_2454AF624((uint64_t)v64, &qword_26B0DA230);
  }
  uint64_t v44 = v58;
  uint64_t v55 = v57;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_24552F744(v35, v65, v56);
  if (v59)
  {
    *((void *)&v62 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8E40);
    *(void *)&long long v61 = v59;
  }
  else
  {
    long long v61 = 0u;
    long long v62 = 0u;
  }
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
  uint64_t v57 = v45;
  swift_bridgeObjectRetain();
  sub_2454AF624((uint64_t)&v57, &qword_26B0DA230);
  sub_2454AF624((uint64_t)&v61, &qword_26B0DA230);
  uint64_t v57 = MEMORY[0x263F8EE88];
  uint64_t v46 = *(void *)(v45 + 16);
  if (v46)
  {
    uint64_t v54 = v44;
    swift_bridgeObjectRetain();
    uint64_t v47 = (uint64_t *)(v45 + 40);
    do
    {
      uint64_t v49 = *(v47 - 1);
      uint64_t v48 = *v47;
      swift_unknownObjectRetain_n();
      sub_2454DA36C(&v61, v49, v48);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v47 += 2;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease_n();
    uint64_t v50 = v56;
    uint64_t v51 = v57;
    uint64_t v44 = v54;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v51 = MEMORY[0x263F8EE88];
    uint64_t v50 = v56;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v52 = v65;
  if (v55)
  {
    if (*(void *)(v55 + 16)) {
      sub_2455341AC(v55);
    }
    swift_bridgeObjectRelease();
  }
  if (v44)
  {
    if (*(void *)(v44 + 16)) {
      sub_245532208(v44);
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v53 = v57;
  swift_bridgeObjectRetain();
  sub_245532388(v35, v51, v53, v52, v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
  sub_2454AF624((uint64_t)v64, &qword_26B0DA230);
  return swift_bridgeObjectRelease();
}

uint64_t sub_245532208(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_unknownObjectRetain();
    sub_2454DA36C(&v16, v11, v12);
    uint64_t result = swift_unknownObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_245532388(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a2 + 16) <= *(void *)(a3 + 16) >> 3)
  {
    v23[0] = a3;
    swift_bridgeObjectRetain();
    sub_2455341AC(a2);
    uint64_t v10 = v23[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_245534350(a2, a3);
  }
  if (*(void *)(a3 + 16) <= *(void *)(a2 + 16) >> 3)
  {
    v23[0] = a2;
    swift_bridgeObjectRetain();
    sub_2455341AC(a3);
    uint64_t v11 = a2;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_245534350(a3, a2);
  }
  uint64_t v24 = MEMORY[0x263F8EE88];
  uint64_t v12 = sub_24552F744(a1, a4, a5);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v22 = v10;
    swift_bridgeObjectRetain();
    unint64_t v14 = (uint64_t *)(v12 + 40);
    do
    {
      uint64_t v15 = *(v14 - 1);
      uint64_t v16 = *v14;
      swift_unknownObjectRetain_n();
      sub_2454DA36C(v23, v15, v16);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v14 += 2;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease_n();
    uint64_t v17 = v24;
    uint64_t v10 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x263F8EE88];
  }
  if (*(void *)(v11 + 16) <= *(void *)(v17 + 16) >> 3)
  {
    v23[0] = v17;
    swift_bridgeObjectRetain();
    sub_2455341AC(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v23[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_245534350(v11, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = sub_2454DBB90(v10, v18);
  v23[0] = MEMORY[0x263F8EE78];
  sub_24552C65C(v19, v23);
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_245530104(v20, a1, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2455325F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24549D7B0();
  uint64_t v8 = v7;
  uint64_t result = PersistentModel.modelContext.getter(a1, a2);
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v10 = *(void *)(result + 16);
  if (v10)
  {
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_18:
      __break(1u);
      return result;
    }
    uint64_t v11 = result;
  }
  swift_retain();
  swift_release();
  uint64_t v12 = *(void *)(v11 + 80);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v12 + 16) || (unint64_t v13 = sub_2454A0B40(v6, v8), (v14 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v16 = *(void *)(v15 + 64);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v15 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245497E04(v17);
  uint64_t v18 = v16;
  uint64_t v19 = sub_24553281C(a1, a2);
  uint64_t v21 = v20;
  unint64_t v22 = sub_245535C3C(MEMORY[0x263F8EE78]);
  unint64_t v26 = v22;
  uint64_t v23 = *(void *)(v18 + 16);
  if (v23)
  {
    uint64_t v24 = (void *)(v18 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_245532864(v24, v19, v21, (uint64_t)&v26, v3, a1, a2);
      v24 += 5;
      --v23;
    }
    while (v23);
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    unint64_t v25 = v26;
  }
  else
  {
    unint64_t v25 = v22;
    swift_release();
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v25 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v25;
}

uint64_t sub_24553281C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(sub_2454D7E9C(a1, a2) + 48);
  swift_unknownObjectRetain();
  swift_release();
  return v2;
}

uint64_t sub_245532864(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
  uint64_t v14 = v13;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v15);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 104))(v15, v16))
  {
    if (a2)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(&v54, v12, v14, ObjectType, a3);
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
    }
    sub_245535858((uint64_t)&v54, (uint64_t)&v52, &qword_26B0DA230);
    sub_2454E1130((uint64_t)&v52, v12, v14);
    return sub_2454AF624((uint64_t)&v54, &qword_26B0DA230);
  }
  sub_24549E250((uint64_t)a1, (uint64_t)&v54);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA128);
  type metadata accessor for Schema.Relationship();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (*(unsigned char *)(v52 + 168) != 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    __swift_project_boxed_opaque_existential_2Tm(a1, v20);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 112))(v20, v21);
    if ((result & 1) == 0) {
      return result;
    }
    if (a2)
    {
      swift_getObjectType();
      uint64_t v22 = a1[3];
      uint64_t v23 = a1[4];
      __swift_project_boxed_opaque_existential_2Tm(a1, v22);
      uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v22, v23);
      (*(void (**)(long long *__return_ptr, uint64_t))(a3 + 24))(&v52, v24);
      swift_bridgeObjectRelease();
      uint64_t v25 = a7;
      uint64_t v26 = a6;
      if (*((void *)&v53 + 1))
      {
        sub_2454A0BBC(&v52, &v54);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
        swift_dynamicCast();
        uint64_t v27 = v56;
        goto LABEL_18;
      }
    }
    else
    {
      long long v52 = 0u;
      long long v53 = 0u;
      uint64_t v25 = a7;
      uint64_t v26 = a6;
    }
    sub_2454AF624((uint64_t)&v52, &qword_26B0DA230);
    uint64_t v27 = 0;
LABEL_18:
    sub_24549E250((uint64_t)a1, (uint64_t)&v54);
    swift_dynamicCast();
    uint64_t v28 = sub_24552F744((void *)v52, v26, v25);
    swift_release();
    if (v27)
    {
      *((void *)&v55 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
      *(void *)&long long v54 = v27;
      uint64_t v29 = v27;
    }
    else
    {
      uint64_t v29 = 0;
      long long v54 = 0u;
      long long v55 = 0u;
    }
    *((void *)&v53 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
    *(void *)&long long v52 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2454AF624((uint64_t)&v52, &qword_26B0DA230);
    sub_2454AF624((uint64_t)&v54, &qword_26B0DA230);
    uint64_t v30 = *(void *)(v28 + 16);
    uint64_t v31 = MEMORY[0x263F8EE88];
    if (v30)
    {
      *(void *)&long long v52 = MEMORY[0x263F8EE88];
      swift_bridgeObjectRetain();
      uint64_t v32 = (uint64_t *)(v28 + 40);
      do
      {
        uint64_t v34 = *(v32 - 1);
        uint64_t v33 = *v32;
        swift_unknownObjectRetain_n();
        sub_2454DA36C(&v54, v34, v33);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v32 += 2;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease_n();
      uint64_t v35 = v52;
      if (!v27) {
        goto LABEL_34;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = 0;
      if (!v27) {
        goto LABEL_34;
      }
    }
    uint64_t v36 = *(void *)(v29 + 16);
    if (v36)
    {
      *(void *)&long long v52 = v31;
      swift_bridgeObjectRetain();
      uint64_t v37 = (uint64_t *)(v29 + 40);
      do
      {
        uint64_t v39 = *(v37 - 1);
        uint64_t v38 = *v37;
        swift_unknownObjectRetain_n();
        sub_2454DA36C(&v54, v39, v38);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v37 += 2;
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease_n();
      uint64_t v40 = v52;
LABEL_35:
      *(void *)&long long v52 = 0;
      uint64_t v56 = v40;
      if (v35 && *(void *)(v35 + 16))
      {
        *(void *)&long long v52 = v35;
        if (!v40) {
          goto LABEL_47;
        }
        uint64_t v41 = *(void *)(v40 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v41) {
          sub_2455341AC(v40);
        }
      }
      else
      {
        if (!v40) {
          goto LABEL_46;
        }
        swift_bridgeObjectRetain();
      }
      uint64_t v42 = *(void *)(v40 + 16);
      swift_bridgeObjectRelease();
      if (!v42) {
        goto LABEL_46;
      }
      uint64_t v56 = v40;
      if (v35)
      {
        if (*(void *)(v35 + 16))
        {
          sub_2455341AC(v35);
          swift_bridgeObjectRelease();
          uint64_t v40 = v56;
          goto LABEL_47;
        }
LABEL_46:
        swift_bridgeObjectRelease();
      }
LABEL_47:
      uint64_t v43 = a1[3];
      uint64_t v44 = a1[4];
      __swift_project_boxed_opaque_existential_2Tm(a1, v43);
      uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 32))(v43, v44);
      uint64_t v47 = v46;
      uint64_t v48 = v52;
      *((void *)&v55 + 1) = &type metadata for _UnorderedCollectionDeltaSnapshot;
      uint64_t v49 = (void *)swift_allocObject();
      *(void *)&long long v54 = v49;
      v49[2] = v48;
      v49[3] = v40;
      v49[4] = 0;
      v49[5] = 0;
      return sub_2454E1130((uint64_t)&v54, v45, v47);
    }
    swift_bridgeObjectRelease();
LABEL_34:
    uint64_t v40 = 0;
    goto LABEL_35;
  }
  if (a2)
  {
    uint64_t v18 = swift_getObjectType();
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(&v54, v12, v14, v18, a3);
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  sub_245535858((uint64_t)&v54, (uint64_t)&v52, &qword_26B0DA230);
  sub_2454E1130((uint64_t)&v52, v12, v14);
  swift_release();
  return sub_2454AF624((uint64_t)&v54, &qword_26B0DA230);
}

BOOL sub_245532EA8(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(sub_2454D7E9C(a1, a2) + 24);
  swift_release();
  return (v2 & 0x38) != 0;
}

uint64_t sub_245532EE8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *a1;
  uint64_t v7 = PersistentModel.getValue<A>(forKey:)(a1, a4, a5);
  sub_24547F014(v7, *(void *)(*MEMORY[0x263F8EA20] + v6 + 8), a5);

  return swift_unknownObjectRelease();
}

uint64_t sub_245532F8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *a1;
  uint64_t result = PersistentModel.getValue<A>(forKey:)(a1, a4, a5);
  if (result)
  {
    sub_24547F014(result, *(void *)(*(void *)(*MEMORY[0x263F8EA20] + v6 + 8) + 16), a5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24553304C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(*MEMORY[0x263F8EA20] + *a1 + 8) + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  PersistentModel.getValue<A, B>(forKey:)(a1, v6, a4, WitnessTable);
  swift_getWitnessTable();
  sub_24558E758();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24553318C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = sub_2454EDBC0(a2, a5, a6);
  int64_t v7 = 0;
  uint64_t v33 = v6 + 64;
  uint64_t v37 = v6;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v6 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v7 << 6);
    }
    else
    {
      int64_t v15 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_36;
      }
      if (v15 >= v34)
      {
LABEL_33:
        swift_release();
        return (uint64_t)v11;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v15);
      ++v7;
      if (!v16)
      {
        int64_t v7 = v15 + 1;
        if (v15 + 1 >= v34) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v7);
        if (!v16)
        {
          int64_t v7 = v15 + 2;
          if (v15 + 2 >= v34) {
            goto LABEL_33;
          }
          unint64_t v16 = *(void *)(v33 + 8 * v7);
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v34) {
              goto LABEL_33;
            }
            unint64_t v16 = *(void *)(v33 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v7 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_37;
                }
                if (v7 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v16 = *(void *)(v33 + 8 * v7);
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v7 = v17;
          }
        }
      }
LABEL_21:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v37 + 48) + 8 * v14);
    swift_bridgeObjectRetain();
    sub_24558E668();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24558E668();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = sub_2454CEC48(v18);
    uint64_t v22 = v11[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (v11[3] >= v24)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v20) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_24552359C();
        if (v25) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_245504090(v24, isUniquelyReferenced_nonNull_native);
      unint64_t v26 = sub_2454CEC48(v18);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_38;
      }
      unint64_t v21 = v26;
      if (v25)
      {
LABEL_4:
        uint64_t v12 = (void *)(v11[7] + 16 * v21);
        void *v12 = a3;
        v12[1] = a4;
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    v11[(v21 >> 6) + 8] |= 1 << v21;
    *(void *)(v11[6] + 8 * v21) = v18;
    uint64_t v28 = (void *)(v11[7] + 16 * v21);
    *uint64_t v28 = a3;
    v28[1] = a4;
    uint64_t v29 = v11[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_35;
    }
    v11[2] = v31;
    swift_retain();
LABEL_5:
    swift_release_n();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  sub_24558EDD8();
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

void sub_2455334BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v5 = objc_msgSend(v2, sel_environment);
  uint64_t v6 = sub_24558E428();

  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_2454A0B40(a1, a2);
    if (v8)
    {
      uint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v7);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v3, sel_arguments);
  uint64_t v13 = sub_24558E7C8();

  uint64_t v14 = *(void *)(v13 + 16);
  swift_bridgeObjectRelease();
  if (!v14)
  {
    __break(1u);
    goto LABEL_27;
  }
  id v15 = objc_msgSend(v3, sel_arguments);
  uint64_t v16 = sub_24558E7C8();

  if (!*(void *)(v16 + 16))
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v17 = 0;
  unint64_t v18 = 1;
  while (1)
  {
    uint64_t v20 = *(void *)(v16 + v17 + 32);
    uint64_t v19 = *(void *)(v16 + v17 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_24558E668();
    if (v20 == 45 && v19 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v22 = sub_24558F598();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0) {
        goto LABEL_16;
      }
    }
    id v23 = objc_msgSend(v3, sel_arguments);
    uint64_t v24 = sub_24558E7C8();

    unint64_t v25 = *(void *)(v24 + 16);
    swift_bridgeObjectRelease();
    if (v18 < v25) {
      break;
    }
LABEL_16:
    if (v14 == v18) {
      return;
    }
    id v26 = objc_msgSend(v3, sel_arguments);
    uint64_t v16 = sub_24558E7C8();

    v17 += 16;
    if (v18++ >= *(void *)(v16 + 16)) {
      goto LABEL_19;
    }
  }
  id v28 = objc_msgSend(v3, sel_arguments);
  uint64_t v29 = sub_24558E7C8();

  if (v18 >= *(void *)(v29 + 16))
  {
LABEL_27:
    __break(1u);
    return;
  }
  uint64_t v11 = *(void *)(v29 + v17 + 48);
  uint64_t v10 = *(void *)(v29 + v17 + 56);
  swift_bridgeObjectRetain();
LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_245569B18((uint64_t)&unk_26FA31308);
  swift_arrayDestroy();
  uint64_t v31 = sub_245569B18((uint64_t)&unk_26FA31258);
  swift_arrayDestroy();
  char v32 = sub_2454A6C1C(v11, v10, v30);
  swift_bridgeObjectRelease();
  if ((v32 & 1) == 0) {
    sub_2454A6C1C(v11, v10, v31);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_245533850()
{
  sub_24558E608();
  uint64_t v0 = (void *)xpc_copy_entitlement_for_self();
  swift_release();
  if (!v0) {
    return 0;
  }
  if ((uint64_t)xpc_array_get_count(v0) < 1 || !xpc_array_get_string(v0, 0))
  {
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v1 = sub_24558E678();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_2455338E4()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2455338F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return PersistentModel.persistentModelID.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8), a3);
}

uint64_t sub_245533924()
{
  return 16;
}

__n128 sub_245533930(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24553393C()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = *(void *)(*(void *)(v1 + 48) + 8 * v6);
    char v8 = (uint64_t *)(*(void *)(v1 + 56) + 16 * v6);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v7;
    v20[1] = v9;
    _OWORD v20[2] = v10;
    swift_retain();
    swift_bridgeObjectRetain();
    v11(&v19, v20);
    swift_bridgeObjectRelease();
    swift_release();
    return v19;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      id v15 = v0[1];
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        uint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          uint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            uint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              uint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              unint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                uint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    __n128 result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_245533AD4@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_2454CE878(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_24553548C((uint64_t)&v23, (uint64_t)v22);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_2454AF624((uint64_t)v21, &qword_268EE3A20);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_245533CB8()
{
  void (*v6)(uint64_t *__return_ptr, long long *);
  long long v7;
  uint64_t result;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  long long v16;

  int64_t v2 = v0[3];
  unint64_t v1 = v0[4];
  int64_t v3 = v2;
  if (v1)
  {
    uint64_t v4 = (v1 - 1) & v1;
    unint64_t v5 = __clz(__rbit64(v1)) | (v2 << 6);
LABEL_3:
    uint64_t v6 = (void (*)(uint64_t *__return_ptr, long long *))v0[5];
    int64_t v7 = *(_OWORD *)(*(void *)(*v0 + 48) + 16 * v5);
    v0[3] = v3;
    v0[4] = v4;
    unint64_t v16 = v7;
    swift_unknownObjectRetain();
    v6(&v15, &v16);
    swift_unknownObjectRelease();
    return v15;
  }
  uint64_t v9 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v10 = (unint64_t)(v0[2] + 64) >> 6;
    if (v9 < v10)
    {
      uint64_t v11 = v0[1];
      uint64_t v12 = *(void *)(v11 + 8 * v9);
      if (v12)
      {
LABEL_7:
        uint64_t v4 = (v12 - 1) & v12;
        unint64_t v5 = __clz(__rbit64(v12)) + (v9 << 6);
        int64_t v3 = v9;
        goto LABEL_3;
      }
      uint64_t v13 = v2 + 2;
      int64_t v3 = v2 + 1;
      if (v2 + 2 < v10)
      {
        uint64_t v12 = *(void *)(v11 + 8 * v13);
        if (v12)
        {
LABEL_10:
          uint64_t v9 = v13;
          goto LABEL_7;
        }
        int64_t v3 = v2 + 2;
        if (v2 + 3 < v10)
        {
          uint64_t v12 = *(void *)(v11 + 8 * (v2 + 3));
          if (v12)
          {
            uint64_t v9 = v2 + 3;
            goto LABEL_7;
          }
          uint64_t v13 = v2 + 4;
          int64_t v3 = v2 + 3;
          if (v2 + 4 < v10)
          {
            uint64_t v12 = *(void *)(v11 + 8 * v13);
            if (v12) {
              goto LABEL_10;
            }
            uint64_t v9 = v2 + 5;
            int64_t v3 = v2 + 4;
            if (v2 + 5 < v10)
            {
              uint64_t v12 = *(void *)(v11 + 8 * v9);
              if (v12) {
                goto LABEL_7;
              }
              int64_t v3 = v10 - 1;
              int64_t v14 = v2 + 6;
              while (v10 != v14)
              {
                uint64_t v12 = *(void *)(v11 + 8 * v14++);
                if (v12)
                {
                  uint64_t v9 = v14 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v3;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_245533E34()
{
  return sub_24558F898();
}

uint64_t sub_245533E94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_24553393C();
  if (!v7) {
    goto LABEL_23;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  uint64_t v13 = (void *)*a5;
  unint64_t v15 = sub_2454CEC48(v7);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      char v22 = (void *)*a5;
      if (v14) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_24552359C();
      char v22 = (void *)*a5;
      if (v19) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    *(void *)(v22[6] + 8 * v15) = v10;
    id v28 = (void *)(v22[7] + 16 * v15);
    *id v28 = v11;
    v28[1] = v12;
    uint64_t v29 = v22[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v22[2] = v31;
LABEL_13:
    uint64_t v32 = sub_24553393C();
    if (v32)
    {
      uint64_t v35 = v32;
      uint64_t v36 = v33;
      uint64_t v37 = v34;
      do
      {
        uint64_t v45 = (void *)*a5;
        unint64_t v46 = sub_2454CEC48(v35);
        uint64_t v48 = v45[2];
        BOOL v49 = (v47 & 1) == 0;
        BOOL v30 = __OFADD__(v48, v49);
        uint64_t v50 = v48 + v49;
        if (v30) {
          goto LABEL_24;
        }
        char v51 = v47;
        if (v45[3] < v50)
        {
          sub_245504090(v50, 1);
          unint64_t v46 = sub_2454CEC48(v35);
          if ((v51 & 1) != (v52 & 1)) {
            goto LABEL_26;
          }
        }
        long long v53 = (void *)*a5;
        if (v51)
        {
          uint64_t v38 = 16 * v46;
          uint64_t v39 = (uint64_t *)(v53[7] + 16 * v46);
          uint64_t v41 = *v39;
          uint64_t v40 = v39[1];
          swift_bridgeObjectRetain();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v42 = (void *)(v53[7] + v38);
          swift_bridgeObjectRelease();
          *uint64_t v42 = v41;
          v42[1] = v40;
        }
        else
        {
          v53[(v46 >> 6) + 8] |= 1 << v46;
          *(void *)(v53[6] + 8 * v46) = v35;
          long long v54 = (void *)(v53[7] + 16 * v46);
          *long long v54 = v36;
          v54[1] = v37;
          uint64_t v55 = v53[2];
          BOOL v30 = __OFADD__(v55, 1);
          uint64_t v56 = v55 + 1;
          if (v30) {
            goto LABEL_25;
          }
          v53[2] = v56;
        }
        uint64_t v35 = sub_24553393C();
        uint64_t v36 = v43;
        uint64_t v37 = v44;
      }
      while (v35);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2454ED02C();
    return swift_release();
  }
  sub_245504090(v18, a4 & 1);
  unint64_t v20 = sub_2454CEC48(v10);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    char v22 = (void *)*a5;
    if ((v19 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v23 = 16 * v15;
    uint64_t v24 = (uint64_t *)(v22[7] + 16 * v15);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
    char v27 = (void *)(v22[7] + v23);
    swift_bridgeObjectRelease();
    *char v27 = v26;
    v27[1] = v25;
    goto LABEL_13;
  }
LABEL_26:
  sub_24558EDD8();
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t sub_2455341AC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(*(void *)(v2 + 48) + 16 * v10 + 8);
    uint64_t v12 = swift_unknownObjectRetain();
    sub_2454EBEC8(v12, v11);
    swift_unknownObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v8 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        ++v15;
        if (v14) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v15;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_245534350(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v55 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v4 = MEMORY[0x270FA5388](v55);
  unint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)&v53 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (uint64_t)&v53 - v10;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = ~v11;
  uint64_t v13 = a1 + 56;
  uint64_t v14 = -v11;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v62 = v12;
  uint64_t v57 = (char *)(a2 + 56);
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  while (1)
  {
    if (v16)
    {
      uint64_t v18 = (v16 - 1) & v16;
      unint64_t v19 = __clz(__rbit64(v16)) | (v17 << 6);
    }
    else
    {
      int64_t v20 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        __break(1u);
      }
      int64_t v21 = (unint64_t)(v12 + 64) >> 6;
      if (v20 >= v21)
      {
LABEL_65:
        sub_2454ED02C();
        return a2;
      }
      unint64_t v22 = *(void *)(v13 + 8 * v20);
      uint64_t v23 = v17 + 1;
      if (!v22)
      {
        uint64_t v23 = v17 + 2;
        if (v17 + 2 >= v21) {
          goto LABEL_65;
        }
        unint64_t v22 = *(void *)(v13 + 8 * v23);
        if (!v22)
        {
          uint64_t v23 = v17 + 3;
          if (v17 + 3 >= v21) {
            goto LABEL_65;
          }
          unint64_t v22 = *(void *)(v13 + 8 * v23);
          if (!v22)
          {
            uint64_t v23 = v17 + 4;
            if (v17 + 4 >= v21) {
              goto LABEL_65;
            }
            unint64_t v22 = *(void *)(v13 + 8 * v23);
            if (!v22)
            {
              uint64_t v23 = v17 + 5;
              if (v17 + 5 >= v21) {
                goto LABEL_65;
              }
              unint64_t v22 = *(void *)(v13 + 8 * v23);
              if (!v22)
              {
                uint64_t v24 = v17 + 6;
                do
                {
                  if (v21 == v24) {
                    goto LABEL_65;
                  }
                  unint64_t v22 = *(void *)(v13 + 8 * v24++);
                }
                while (!v22);
                uint64_t v23 = v24 - 1;
              }
            }
          }
        }
      }
      uint64_t v18 = (v22 - 1) & v22;
      unint64_t v19 = __clz(__rbit64(v22)) + (v23 << 6);
      uint64_t v17 = v23;
    }
    uint64_t v25 = *(void *)(*(void *)(a1 + 48) + 16 * v19 + 8);
    uint64_t v63 = v17;
    unint64_t v64 = v18;
    sub_24558F7D8();
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v27 = v54;
    uint64_t v58 = ObjectType;
    uint64_t v59 = v25;
    PersistentModel.persistentModelID.getter(ObjectType, v25, v54);
    sub_24558E158();
    sub_24553555C((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
    sub_24558E4D8();
    sub_24549B280(v27);
    uint64_t v28 = sub_24558F818();
    uint64_t v29 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v30 = v28 & ~v29;
    if ((*(void *)&v57[(v30 >> 3) & 0xFFFFFFFFFFFFFF8] >> v30)) {
      break;
    }
LABEL_6:
    swift_unknownObjectRelease();
    uint64_t v17 = v63;
    unint64_t v16 = v64;
    a1 = v60;
    uint64_t v13 = v61;
    uint64_t v12 = v62;
  }
  uint64_t v56 = ~v29;
  while (1)
  {
    uint64_t v31 = a2;
    uint64_t v32 = *(void *)(*(void *)(a2 + 48) + 16 * v30 + 8);
    uint64_t v33 = swift_getObjectType();
    swift_unknownObjectRetain();
    PersistentModel.persistentModelID.getter(v33, v32, (uint64_t)v9);
    PersistentModel.persistentModelID.getter(v58, v59, (uint64_t)v6);
    uint64_t v34 = *(int *)(v55 + 20);
    uint64_t v35 = *(void *)&v9[v34];
    uint64_t v36 = *(void *)&v6[v34];
    uint64_t v37 = *(void *)(v35 + 24);
    uint64_t v38 = *(void *)(v36 + 24);
    if (v37)
    {
      if (!v38
        || (*(void *)(v35 + 16) == *(void *)(v36 + 16) ? (BOOL v39 = v37 == v38) : (BOOL v39 = 0),
            !v39 && (sub_24558F598() & 1) == 0))
      {
LABEL_28:
        sub_24549B280((uint64_t)v6);
        sub_24549B280((uint64_t)v9);
        a2 = v31;
LABEL_29:
        swift_unknownObjectRelease();
        goto LABEL_30;
      }
    }
    else if (v38)
    {
      goto LABEL_28;
    }
    BOOL v40 = *(void *)(v35 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v36 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v35 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v36 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v40 && (sub_24558F598() & 1) == 0) {
      goto LABEL_28;
    }
    if (*(void *)(v35 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v36 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v35 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v36 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      sub_24549B280((uint64_t)v6);
      sub_24549B280((uint64_t)v9);
      a2 = v31;
    }
    else
    {
      char v42 = sub_24558F598();
      sub_24549B280((uint64_t)v6);
      sub_24549B280((uint64_t)v9);
      a2 = v31;
      if ((v42 & 1) == 0) {
        goto LABEL_29;
      }
    }
    uint64_t v43 = PersistentModel.modelContext.getter(v33, v32);
    uint64_t v44 = PersistentModel.modelContext.getter(v58, v59);
    uint64_t v45 = v44;
    if (!v43) {
      break;
    }
    swift_unknownObjectRelease();
    swift_release();
    if (!v45) {
      goto LABEL_56;
    }
    swift_release();
    if (v43 == v45)
    {
      uint64_t isStackAllocationSafe = swift_unknownObjectRelease();
      goto LABEL_59;
    }
LABEL_30:
    unint64_t v30 = (v30 + 1) & v56;
    if (((*(void *)&v57[(v30 >> 3) & 0xFFFFFFFFFFFFFF8] >> v30) & 1) == 0) {
      goto LABEL_6;
    }
  }
  if (v44)
  {
    swift_unknownObjectRelease();
LABEL_56:
    swift_release();
    goto LABEL_30;
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t isStackAllocationSafe = swift_release();
LABEL_59:
  char v47 = *(unsigned char *)(a2 + 32);
  unint64_t v48 = (unint64_t)((1 << v47) + 63) >> 6;
  size_t v49 = 8 * v48;
  if ((v47 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    memcpy((char *)&v53 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v57, v49);
    uint64_t v50 = sub_2455349EC((unint64_t *)((char *)&v53 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0)), v48, a2, v30, &v60);
    swift_release();
    sub_2454ED02C();
  }
  else
  {
    char v51 = (void *)swift_slowAlloc();
    memcpy(v51, v57, v49);
    uint64_t v50 = sub_2455349EC((unint64_t *)v51, v48, a2, v30, &v60);
    swift_release();
    sub_2454ED02C();
    MEMORY[0x2456A2BD0](v51, -1, -1);
  }
  return v50;
}

uint64_t sub_2455349EC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v56 = a2;
  uint64_t v61 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v9 = MEMORY[0x270FA5388](v61);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v59 = a5;
  uint64_t v60 = (uint64_t)&v55 - v16;
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v19 = *(unint64_t *)((char *)a1 + v18) & ((-1 << a4) - 1);
  uint64_t v58 = a1;
  *(unint64_t *)((char *)a1 + v18) = v19;
  uint64_t v20 = v17 - 1;
  uint64_t v63 = a3 + 56;
  uint64_t v64 = a3;
LABEL_2:
  uint64_t v57 = v20;
LABEL_4:
  while (2)
  {
    int64_t v22 = a5[3];
    unint64_t v21 = a5[4];
    if (v21)
    {
      uint64_t v23 = (v21 - 1) & v21;
      unint64_t v24 = __clz(__rbit64(v21)) | (v22 << 6);
LABEL_16:
      uint64_t v30 = *(void *)(*(void *)(*a5 + 48) + 16 * v24 + 8);
      a5[3] = v22;
      a5[4] = v23;
      uint64_t v31 = v64;
      sub_24558F7D8();
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v33 = v60;
      uint64_t v65 = ObjectType;
      uint64_t v66 = v30;
      PersistentModel.persistentModelID.getter(ObjectType, v30, v60);
      sub_24558E158();
      sub_24553555C((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
      sub_24558E4D8();
      sub_24549B280(v33);
      uint64_t v34 = sub_24558F818();
      uint64_t v35 = -1 << *(unsigned char *)(v31 + 32);
      unint64_t v36 = v34 & ~v35;
      if (((*(void *)(v63 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
      {
LABEL_3:
        uint64_t result = swift_unknownObjectRelease();
        a5 = v59;
        continue;
      }
      uint64_t v62 = ~v35;
      while (1)
      {
        uint64_t v37 = *(void *)(*(void *)(v64 + 48) + 16 * v36 + 8);
        uint64_t v38 = swift_getObjectType();
        swift_unknownObjectRetain();
        PersistentModel.persistentModelID.getter(v38, v37, (uint64_t)v14);
        PersistentModel.persistentModelID.getter(v65, v66, (uint64_t)v11);
        uint64_t v39 = *(int *)(v61 + 20);
        uint64_t v40 = *(void *)&v14[v39];
        uint64_t v41 = *(void *)&v11[v39];
        uint64_t v42 = *(void *)(v40 + 24);
        uint64_t v43 = *(void *)(v41 + 24);
        if (v42)
        {
          if (!v43
            || (*(void *)(v40 + 16) == *(void *)(v41 + 16) ? (BOOL v44 = v42 == v43) : (BOOL v44 = 0),
                !v44 && (sub_24558F598() & 1) == 0))
          {
LABEL_19:
            sub_24549B280((uint64_t)v11);
            sub_24549B280((uint64_t)v14);
LABEL_20:
            swift_unknownObjectRelease();
            goto LABEL_21;
          }
        }
        else if (v43)
        {
          goto LABEL_19;
        }
        BOOL v45 = *(void *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v41 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
           && *(void *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v41 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
        if (!v45 && (sub_24558F598() & 1) == 0) {
          goto LABEL_19;
        }
        if (*(void *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v41 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
          && *(void *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v41 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
        {
          sub_24549B280((uint64_t)v11);
          sub_24549B280((uint64_t)v14);
        }
        else
        {
          char v47 = sub_24558F598();
          sub_24549B280((uint64_t)v11);
          sub_24549B280((uint64_t)v14);
          if ((v47 & 1) == 0) {
            goto LABEL_20;
          }
        }
        uint64_t v48 = PersistentModel.modelContext.getter(v38, v37);
        uint64_t v49 = PersistentModel.modelContext.getter(v65, v66);
        uint64_t v50 = v49;
        if (!v48)
        {
          if (!v49)
          {
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t result = swift_release();
LABEL_49:
            a5 = v59;
            uint64_t v51 = (v36 >> 3) & 0x1FFFFFFFFFFFFFF8;
            uint64_t v52 = *(unint64_t *)((char *)v58 + v51);
            *(unint64_t *)((char *)v58 + v51) = v52 & ~(1 << v36);
            if ((v52 & (1 << v36)) != 0)
            {
              uint64_t v20 = v57 - 1;
              if (__OFSUB__(v57, 1)) {
                goto LABEL_68;
              }
              if (v57 == 1) {
                return MEMORY[0x263F8EE88];
              }
              goto LABEL_2;
            }
            goto LABEL_4;
          }
          swift_unknownObjectRelease();
LABEL_47:
          swift_release();
          goto LABEL_21;
        }
        swift_unknownObjectRelease();
        swift_release();
        if (!v50) {
          goto LABEL_47;
        }
        swift_release();
        if (v48 == v50)
        {
          uint64_t result = swift_unknownObjectRelease();
          goto LABEL_49;
        }
LABEL_21:
        unint64_t v36 = (v36 + 1) & v62;
        if (((*(void *)(v63 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0) {
          goto LABEL_3;
        }
      }
    }
    break;
  }
  int64_t v25 = v22 + 1;
  if (!__OFADD__(v22, 1))
  {
    int64_t v26 = (unint64_t)(a5[2] + 64) >> 6;
    if (v25 >= v26)
    {
      int64_t v25 = a5[3];
LABEL_63:
      a5[3] = v25;
      a5[4] = 0;
      uint64_t v54 = v64;
      swift_retain();
      return sub_245534F64(v58, v56, v57, v54);
    }
    uint64_t v27 = a5[1];
    unint64_t v28 = *(void *)(v27 + 8 * v25);
    if (v28) {
      goto LABEL_15;
    }
    int64_t v29 = v22 + 2;
    if (v22 + 2 >= v26) {
      goto LABEL_63;
    }
    unint64_t v28 = *(void *)(v27 + 8 * v29);
    if (!v28)
    {
      if (v22 + 3 >= v26) {
        goto LABEL_65;
      }
      unint64_t v28 = *(void *)(v27 + 8 * (v22 + 3));
      if (v28)
      {
        int64_t v25 = v22 + 3;
        goto LABEL_15;
      }
      int64_t v29 = v22 + 4;
      if (v22 + 4 >= v26)
      {
        int64_t v25 = v22 + 3;
        goto LABEL_63;
      }
      unint64_t v28 = *(void *)(v27 + 8 * v29);
      if (!v28)
      {
        int64_t v25 = v22 + 5;
        if (v22 + 5 >= v26)
        {
LABEL_65:
          int64_t v25 = v29;
          goto LABEL_63;
        }
        unint64_t v28 = *(void *)(v27 + 8 * v25);
        if (!v28)
        {
          int64_t v25 = v26 - 1;
          int64_t v53 = v22 + 6;
          while (v26 != v53)
          {
            unint64_t v28 = *(void *)(v27 + 8 * v53++);
            if (v28)
            {
              int64_t v25 = v53 - 1;
              goto LABEL_15;
            }
          }
          goto LABEL_63;
        }
        goto LABEL_15;
      }
    }
    int64_t v25 = v29;
LABEL_15:
    uint64_t v23 = (v28 - 1) & v28;
    unint64_t v24 = __clz(__rbit64(v28)) + (v25 << 6);
    int64_t v22 = v25;
    goto LABEL_16;
  }
  __break(1u);
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_245534F64(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8E50);
  uint64_t result = sub_24558EF68();
  uint64_t v10 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v31;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v30)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v31[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v30) {
          goto LABEL_37;
        }
        unint64_t v18 = v31[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v30) {
            goto LABEL_37;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v30) {
              goto LABEL_37;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v30) {
                  goto LABEL_37;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    long long v32 = *(_OWORD *)(*(void *)(a4 + 48) + 16 * v16);
    sub_24558F7D8();
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    PersistentModel.persistentModelID.getter(ObjectType, *((uint64_t *)&v32 + 1), (uint64_t)v9);
    sub_24558E158();
    sub_24553555C((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
    sub_24558E4D8();
    sub_24549B280((uint64_t)v9);
    uint64_t result = sub_24558F818();
    uint64_t v21 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v14 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v14 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(_OWORD *)(*(void *)(v10 + 48) + 16 * v24) = v32;
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2455352C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_245535308(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return sub_24558F548() & 1;
  }
}

void *__swift_project_boxed_opaque_existential_2Tm(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_2455353C4()
{
  return objectdestroyTm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

uint64_t sub_2455353F0(uint64_t *a1)
{
  return sub_245530B30(a1, *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2455353FC()
{
  return objectdestroyTm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

uint64_t sub_245535428()
{
  return objectdestroyTm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

uint64_t sub_245535454(uint64_t *a1)
{
  return sub_245530BE0(a1, *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_245535460()
{
  return objectdestroyTm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

uint64_t sub_24553548C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_2Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_245535544(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24553555C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2455355A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_2455355F4()
{
  unint64_t result = qword_26B0D8D40;
  if (!qword_26B0D8D40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0D8D40);
  }
  return result;
}

uint64_t sub_245535634()
{
  return objectdestroyTm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEE8]);
}

uint64_t sub_245535660(uint64_t *a1)
{
  return sub_245532EE8(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_24553566C()
{
  return objectdestroyTm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

uint64_t sub_245535698(uint64_t *a1)
{
  return sub_245532F8C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_2455356A4()
{
  return objectdestroyTm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

uint64_t sub_2455356D0(uint64_t *a1)
{
  return sub_24553304C(a1, v1[4], v1[5], v1[2]);
}

uint64_t sub_2455356DC()
{
  return objectdestroyTm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

uint64_t sub_245535708(void *a1)
{
  return sub_245535738(a1);
}

uint64_t sub_245535720(void *a1)
{
  return sub_245535738(a1);
}

uint64_t sub_245535738(void *a1)
{
  return sub_24547F014(*a1, *(void *)(v1 + 24), *(void *)(v1 + 40));
}

uint64_t sub_24553576C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2455357A8(uint64_t a1)
{
  return sub_24548D134(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, void))sub_245530D7C);
}

uint64_t sub_2455357C8(uint64_t a1)
{
  return sub_24548D134(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, void))sub_2455311BC);
}

uint64_t sub_2455357E4(uint64_t *a1)
{
  return sub_245535814(a1);
}

uint64_t sub_2455357FC(uint64_t *a1)
{
  return sub_245535814(a1);
}

uint64_t sub_245535814(uint64_t *a1)
{
  return sub_24553133C(a1, *(uint64_t **)(v1 + 64), *(unsigned __int8 *)(v1 + 72), *(uint64_t **)(v1 + 80), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_245535858(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2455358C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_2454A0B40(a1, a2), (v3 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

unint64_t sub_245535904(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D7B60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA018);
  uint64_t v6 = sub_24558F218();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2454D130C(v12, (uint64_t)v5, &qword_26B0D7B60);
    unint64_t result = sub_245493B60((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24558E1E8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_245535AF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9AF0);
  uint64_t v2 = sub_24558F218();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2454D130C(v6, (uint64_t)v15, &qword_268EE3AC0);
    unint64_t result = sub_2454B9F18((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_2454A0BBC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_245535C3C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9230);
  uint64_t v2 = sub_24558F218();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2454D130C(v6, (uint64_t)&v15, &qword_268EE3AB8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2454A0B40(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_2454D753C((uint64_t)&v17, v3[7] + 32 * result, &qword_26B0DA230);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_245535D88(uint64_t a1)
{
  return sub_2454B5D64(a1, &qword_26B0DA1F0);
}

uint64_t sub_245535D94(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v6) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v6) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v2 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v6) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v2 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v6) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v2 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 16 * v10 + 8);
    uint64_t v12 = swift_unknownObjectRetain();
    sub_2454EBEC8(v12, v11);
    swift_unknownObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v6) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v2 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v6) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v2 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_245535F1C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_2455431B4(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2455431B4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_2455431B4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_2454A0BBC(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_245536044(unint64_t a1)
{
  return sub_2455360D4(a1, (uint64_t (*)(void))type metadata accessor for Schema.Attribute, &qword_26B0DA188, (void (*)(uint64_t))type metadata accessor for Schema.Attribute);
}

uint64_t sub_24553608C(unint64_t a1)
{
  return sub_2455360D4(a1, (uint64_t (*)(void))type metadata accessor for Schema.Relationship, &qword_26B0D8D28, (void (*)(uint64_t))type metadata accessor for Schema.Relationship);
}

uint64_t sub_2455360D4(unint64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_24558F1C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v8) {
    return v9;
  }
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2455431D4(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = MEMORY[0x2456A1A40](v11, a1);
        uint64_t v22 = v9;
        unint64_t v14 = *(void *)(v9 + 16);
        unint64_t v13 = *(void *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_2455431D4(v13 > 1, v14 + 1, 1);
          uint64_t v9 = v22;
        }
        ++v11;
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_245495DF4(a3, a4);
        *(void *)&long long v19 = v12;
        *(void *)(v9 + 16) = v14 + 1;
        sub_2454D1384(&v19, v9 + 40 * v14 + 32);
      }
      while (v8 != v11);
    }
    else
    {
      int64_t v15 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v16 = *v15;
        uint64_t v22 = v9;
        unint64_t v18 = *(void *)(v9 + 16);
        unint64_t v17 = *(void *)(v9 + 24);
        swift_retain();
        if (v18 >= v17 >> 1)
        {
          sub_2455431D4(v17 > 1, v18 + 1, 1);
          uint64_t v9 = v22;
        }
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_245495DF4(a3, a4);
        *(void *)&long long v19 = v16;
        *(void *)(v9 + 16) = v18 + 1;
        sub_2454D1384(&v19, v9 + 40 * v18 + 32);
        ++v15;
        --v8;
      }
      while (v8);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_2455362D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_245543234(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_2454D618C(v8, (uint64_t)v5, type metadata accessor for PersistentIdentifier);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_245543234(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = &off_26FA300B8;
      boxed_opaque_existential_1Tm_0 = __swift_allocate_boxed_opaque_existential_1Tm_0((uint64_t *)&v14);
      sub_2454D618C((uint64_t)v5, (uint64_t)boxed_opaque_existential_1Tm_0, type metadata accessor for PersistentIdentifier);
      *(void *)(v7 + 16) = v11 + 1;
      sub_2454D1384(&v14, v7 + 40 * v11 + 32);
      sub_24549F868((uint64_t)v5, type metadata accessor for PersistentIdentifier);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_2455364A0(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_2455576F8(v3);
    *int64_t v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      sub_24558E7E8();
      return v10;
    }
  }
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

BOOL sub_245536584(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_245536598()
{
  return sub_24558F818();
}

uint64_t sub_2455365E0()
{
  return sub_24558F7E8();
}

uint64_t sub_24553660C()
{
  return sub_24558F818();
}

uint64_t SwiftDataError._explanation.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static SwiftDataError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SwiftDataError.hash(into:)()
{
  return sub_24558F7E8();
}

void static SwiftDataError.includePendingChangesWithBatchSize.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.unsupportedPredicate.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.unsupportedKeyPath.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.sortingPendingChangesWithIdentifiers.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 3;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.unsupportedSortDescriptor.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.duplicateConfiguration.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 5;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.configurationFileNameTooLong.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 6;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.configurationFileNameContainsInvalidCharacters.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 7;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.configurationSchemaNotFoundInContainerSchema.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 8;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.loadIssueModelContainer.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 10;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.modelValidationFailure.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 11;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.missingModelContext.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 12;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.backwardMigration.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 13;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.unknownSchema.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 14;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.historyTokenExpired.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 15;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

void static SwiftDataError.invalidTransactionFetchRequest.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 16;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t SwiftDataError.hashValue.getter()
{
  return sub_24558F818();
}

uint64_t sub_245536814()
{
  return sub_24558F818();
}

uint64_t sub_24553685C()
{
  return sub_24558F7E8();
}

uint64_t sub_245536888()
{
  return sub_24558F818();
}

BOOL sub_2455368CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t static SwiftDataError.~= infix(_:_:)(unsigned __int8 *a1, id a2)
{
  int v2 = *a1;
  id v3 = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B0D9AF8);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_bridgeObjectRelease();
    return v5 == v2;
  }
  return result;
}

uint64_t sub_245536954@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  uint64_t v4 = (void *)(v3 + *(int *)(type metadata accessor for EditingState(0) + 20));
  uint64_t v5 = v4[1];
  *a2 = *v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2455369BC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  uint64_t v5 = (void *)(v4 + *(int *)(type metadata accessor for EditingState(0) + 20));
  *uint64_t v5 = v3;
  v5[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_245536A38()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for EditingState(0) + 20));
  swift_bridgeObjectRetain();
  return v2;
}

void (*sub_245536AA0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = type metadata accessor for EditingState(0);
  v3[7] = v6;
  unint64_t v7 = (void *)(v5 + *(int *)(v6 + 20));
  uint64_t v8 = v7[1];
  v3[3] = *v7;
  v3[4] = v8;
  swift_bridgeObjectRetain();
  return sub_245536B3C;
}

void sub_245536B3C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 48);
  uint64_t v4 = *(void *)(*(void *)a1 + 56);
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  unint64_t v7 = (void *)(v2[5] + v5 + *(int *)(v4 + 20));
  *unint64_t v7 = v3;
  v7[1] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  free(v2);
}

void *sub_245536BB0()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

void sub_245536BF4(void *a1)
{
  sub_24554464C(a1);
}

void (*sub_245536C2C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 40);
  v3[3] = v4;
  id v5 = v4;
  return sub_245536CA8;
}

void sub_245536CA8(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v4 = (void **)(*(void *)a1 + 24);
  uint64_t v3 = *v4;
  if (a2)
  {
    id v5 = v3;
    sub_24554464C(v3);

    uint64_t v3 = *v4;
  }
  else
  {
    sub_24554464C(*(void **)(*(void *)a1 + 24));
  }

  free(v2);
}

uint64_t sub_245536D24(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for EditingState(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2454D618C(a1, (uint64_t)v6, type metadata accessor for EditingState);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  sub_2455462A8((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_245536DF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  return sub_2454D618C(v3, a1, type metadata accessor for EditingState);
}

uint64_t sub_245536E5C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  sub_2455462A8(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_245536EB8())()
{
  return j__swift_endAccess;
}

uint64_t sub_245536F14()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveEnabled);
  swift_beginAccess();
  return *v1;
}

void (*sub_245536F5C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_245536FBC;
}

void sub_245536FBC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_245481A50();
  }
}

void sub_245536FF0()
{
  *(void *)(v0 + 32) = 0;
  swift_release();
  sub_24554464C(0);
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveEnabled);
  swift_beginAccess();
  *uint64_t v1 = 0;
  sub_245481A50();
  uint64_t v2 = OBJC_IVAR____TtC9SwiftData12ModelContext_timer;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_timer);
  if (v3)
  {
    objc_msgSend(v3, sel_invalidate);
    uint64_t v4 = *(void **)(v0 + v2);
    *(void *)(v0 + v2) = 0;
  }
  id v5 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v5, sel_removeObserver_, v0);

  *(unsigned char *)(v0 + 62) = 0;
}

uint64_t sub_2455370B4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(void *)(result + 16))
    {
      uint64_t v1 = *(void *)(result + 16);
    }
    else
    {
      if (!swift_weakLoadStrong()) {
        return swift_release();
      }
      uint64_t result = swift_weakLoadStrong();
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v1 = result;
    }
    swift_beginAccess();
    uint64_t v2 = *(void *)(v1 + 48);
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    if (v3) {
      sub_2454DC9F8(0);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t ModelContext.init(_:)(uint64_t a1)
{
  uint64_t v1 = sub_2454EA374(a1);
  swift_release();
  return v1;
}

void sub_2455371F8()
{
  uint64_t v1 = (void *)MEMORY[0x2456A2410]();
  sub_2454D32B4(1);
  sub_245536FF0();
  if (_SD_get_current_context_tsd())
  {
    (id)swift_retain_n();
    swift_release();
    swift_retain_n();
    char v2 = sub_245542B9C(v0);
    swift_release_n();
    if (v2) {
      swift_release();
    }
  }
}

uint64_t sub_245537294()
{
  uint64_t v0 = sub_24558DC38();
  if (!v0)
  {
    long long v6 = 0u;
    long long v7 = 0u;
    return sub_2454D61F4((uint64_t)&v6, &qword_26B0DA230);
  }
  uint64_t v1 = v0;
  sub_24558EF28();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_2454B9F18((uint64_t)v5), (v3 & 1) != 0))
  {
    sub_2454CE878(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2454BA024((uint64_t)v5);
  if (!*((void *)&v7 + 1)) {
    return sub_2454D61F4((uint64_t)&v6, &qword_26B0DA230);
  }
  sub_2454A0BBC(&v6, v5);
  sub_2454CE878((uint64_t)v5, (uint64_t)&v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D7D40);
  if (!swift_dynamicCast()) {
    return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v5);
  }
  sub_245545FBC(0xD000000000000031, (void (*)(id, id))sub_2455476D8);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2455373FC(void *a1, void *a2, uint64_t a3)
{
  id v48 = a2;
  uint64_t v49 = a3;
  uint64_t v4 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t ObjectType = v4;
  MEMORY[0x270FA5388](v4);
  BOOL v44 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D96C0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  BOOL v45 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v43 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v42 - v16;
  MEMORY[0x270FA5388](v15);
  long long v19 = (char *)&v42 - v18;
  type metadata accessor for PersistentIdentifierImplementation(0);
  swift_allocObject();
  uint64_t v20 = sub_24549D420(a1);
  *(void *)&v19[*(int *)(v12 + 28)] = v20;
  uint64_t v21 = v20 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  uint64_t v22 = sub_24558E158();
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  v23(v19, v21, v22);
  uint64_t v24 = (uint64_t)v17;
  swift_allocObject();
  uint64_t v25 = sub_24549D420(v48);
  *(void *)&v17[*(int *)(v12 + 28)] = v25;
  v23(v17, v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation, v22);
  unint64_t v26 = (uint64_t *)(v49 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration);
  swift_beginAccess();
  uint64_t v27 = *v26;
  if (*(void *)(*v26 + 16))
  {
    uint64_t v28 = v46;
    uint64_t v29 = ObjectType;
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_2454A2A10((uint64_t)v19);
    if (v31)
    {
      sub_2454D618C(*(void *)(v27 + 56) + *(void *)(v28 + 72) * v30, (uint64_t)v10, type metadata accessor for ModelContext.WeakAnyPersistentObject);
      long long v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v32(v10, 0, 1, v29);
    }
    else
    {
      long long v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v32(v10, 1, 1, v29);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = v46;
    uint64_t v29 = ObjectType;
    long long v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
    v32(v10, 1, 1, ObjectType);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v10, 1, v29))
  {
    sub_2454D61F4((uint64_t)v10, &qword_26B0D96C0);
  }
  else
  {
    uint64_t v33 = MEMORY[0x2456A2CA0](v10);
    uint64_t v34 = *((void *)v10 + 1);
    sub_2454D61F4((uint64_t)v10, &qword_26B0D96C0);
    if (v33)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v35 = v34;
      sub_2454EDA7C(v24, ObjectType, v34);
      uint64_t v49 = v24;
      uint64_t v36 = v43;
      sub_2454D618C((uint64_t)v19, v43, type metadata accessor for PersistentIdentifier);
      id v48 = (id)(v28 + 56);
      uint64_t v37 = (uint64_t)v45;
      v32(v45, 1, 1, v29);
      swift_beginAccess();
      sub_2454D80CC(v37, v36);
      swift_endAccess();
      sub_2454D618C(v49, v36, type metadata accessor for PersistentIdentifier);
      uint64_t v38 = v44;
      *((void *)v44 + 1) = 0;
      swift_unknownObjectWeakInit();
      *((void *)v38 + 1) = v34;
      swift_unknownObjectWeakAssign();
      uint64_t v39 = (uint64_t)&v38[*(int *)(v29 + 20)];
      swift_unknownObjectRetain();
      PersistentModel.persistentModelID.getter(ObjectType, v35, v39);
      swift_unknownObjectRelease();
      uint64_t v40 = (uint64_t)v38;
      uint64_t v24 = v49;
      sub_2454D601C(v40, v37, type metadata accessor for ModelContext.WeakAnyPersistentObject);
      v32((char *)v37, 0, 1, v29);
      swift_beginAccess();
      sub_2454D80CC(v37, v36);
      swift_endAccess();
      swift_unknownObjectRelease();
    }
  }
  sub_24549F868(v24, type metadata accessor for PersistentIdentifier);
  return sub_24549F868((uint64_t)v19, type metadata accessor for PersistentIdentifier);
}

BOOL static ModelContext.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_245537A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = (uint64_t *)(*(void *)(a1 + *(int *)(type metadata accessor for PersistentIdentifier(0) + 20))
                 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  if (*(void *)(a2 + 16))
  {
    uint64_t v9 = *(void *)(a2 + 16);
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    uint64_t v9 = Strong;
  }
  uint64_t v11 = *(void *)(v9 + 80);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v11 + 16))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    sub_24558EF78();
    sub_24558E668();
    sub_24558E668();
    sub_24558E668();
    if (*(void *)(a2 + 16) || swift_weakLoadStrong()) {
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_2454A0B40(v8, v7);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
  swift_retain();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 144);
  if (!v15)
  {
LABEL_14:
    sub_24558EF78();
    sub_24558E668();
    type metadata accessor for Schema.Entity();
    sub_24558F0E8();
    while (1)
    {
      sub_24558F1A8();
      __break(1u);
LABEL_16:
      type metadata accessor for ModelContainer();
      swift_retain();
      sub_24558F0E8();
      swift_release();
    }
  }
  uint64_t v16 = *(void *)(v14 + 152);
  uint64_t v17 = sub_245537D14(v15, a1, v14, a2, *(void *)(v14 + 144), v16);
  uint64_t result = swift_release();
  *a3 = v17;
  a3[1] = v16;
  return result;
}

uint64_t sub_245537D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v79 = a4;
  uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74[1] = a5;
  uint64_t v75 = a6;
  uint64_t v14 = type metadata accessor for _KKMDBackingData();
  uint64_t v78 = a2;
  sub_2454D618C(a2, (uint64_t)v13, type metadata accessor for PersistentIdentifier);
  v74[0] = v14;
  uint64_t v85 = sub_2454D74EC(a1, (uint64_t)v13);
  swift_beginAccess();
  uint64_t v77 = a3;
  uint64_t v15 = *(void *)(a3 + 80);
  if ((v15 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24558EE48();
    type metadata accessor for Schema.Attribute();
    sub_245495DF4(&qword_26B0DA170, (void (*)(uint64_t))type metadata accessor for Schema.Attribute);
    sub_24558E9F8();
    uint64_t v15 = v92;
    uint64_t v83 = v93;
    uint64_t v16 = v94;
    uint64_t v17 = v95;
    unint64_t v18 = v96;
  }
  else
  {
    uint64_t v19 = -1 << *(unsigned char *)(v15 + 32);
    uint64_t v20 = *(void *)(v15 + 56);
    uint64_t v83 = v15 + 56;
    uint64_t v21 = ~v19;
    uint64_t v22 = -v19;
    if (v22 < 64) {
      uint64_t v23 = ~(-1 << v22);
    }
    else {
      uint64_t v23 = -1;
    }
    unint64_t v18 = v23 & v20;
    swift_bridgeObjectRetain();
    uint64_t v16 = v21;
    uint64_t v17 = 0;
  }
  uint64_t v76 = v16;
  uint64_t v81 = v15 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v82 = (unint64_t)(v16 + 64) >> 6;
  uint64_t v24 = &qword_26B0DA230;
  uint64_t v80 = MEMORY[0x263F8EE50] + 8;
  uint64_t v84 = v15;
  if ((v15 & 0x8000000000000000) == 0) {
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v25 = sub_24558EEC8();
  if (!v25) {
    goto LABEL_40;
  }
  *(void *)&long long v87 = v25;
  type metadata accessor for Schema.Attribute();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v26 = v97;
  swift_unknownObjectRelease();
  uint64_t v27 = v17;
  uint64_t v28 = v18;
  if (!v26)
  {
LABEL_40:
    sub_2454E0658();
    uint64_t v44 = v77;
    swift_beginAccess();
    uint64_t v45 = *(void *)(v44 + 88);
    if ((v45 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_24558EE48();
      type metadata accessor for Schema.Relationship();
      sub_245495DF4((unint64_t *)&qword_26B0D8D10, (void (*)(uint64_t))type metadata accessor for Schema.Relationship);
      sub_24558E9F8();
      uint64_t v84 = *((void *)&v97 + 1);
      uint64_t v45 = v97;
      uint64_t v46 = v98;
      uint64_t v47 = v99;
      unint64_t v48 = v100;
    }
    else
    {
      uint64_t v49 = -1 << *(unsigned char *)(v45 + 32);
      uint64_t v50 = *(void *)(v45 + 56);
      uint64_t v84 = v45 + 56;
      uint64_t v46 = ~v49;
      uint64_t v51 = -v49;
      if (v51 < 64) {
        uint64_t v52 = ~(-1 << v51);
      }
      else {
        uint64_t v52 = -1;
      }
      unint64_t v48 = v52 & v50;
      swift_bridgeObjectRetain();
      uint64_t v47 = 0;
    }
    int64_t v53 = (unint64_t)(v46 + 64) >> 6;
    uint64_t v80 = v46;
    uint64_t v81 = v79 + 24;
    int64_t v82 = MEMORY[0x263F8EE50] + 8;
    uint64_t v83 = v45 & 0x7FFFFFFFFFFFFFFFLL;
    while (1)
    {
      if (v45 < 0)
      {
        uint64_t v57 = sub_24558EEC8();
        if (!v57) {
          goto LABEL_82;
        }
        uint64_t v86 = v57;
        type metadata accessor for Schema.Relationship();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v58 = v87;
        swift_unknownObjectRelease();
        uint64_t v56 = v47;
        uint64_t v54 = v48;
        if (!v58) {
          goto LABEL_82;
        }
      }
      else
      {
        if (v48)
        {
          uint64_t v54 = (v48 - 1) & v48;
          unint64_t v55 = __clz(__rbit64(v48)) | (v47 << 6);
          uint64_t v56 = v47;
        }
        else
        {
          int64_t v59 = v47 + 1;
          if (__OFADD__(v47, 1)) {
            goto LABEL_85;
          }
          if (v59 >= v53) {
            goto LABEL_82;
          }
          unint64_t v60 = *(void *)(v84 + 8 * v59);
          uint64_t v56 = v47 + 1;
          if (!v60)
          {
            uint64_t v56 = v47 + 2;
            if (v47 + 2 >= v53) {
              goto LABEL_82;
            }
            unint64_t v60 = *(void *)(v84 + 8 * v56);
            if (!v60)
            {
              uint64_t v56 = v47 + 3;
              if (v47 + 3 >= v53) {
                goto LABEL_82;
              }
              unint64_t v60 = *(void *)(v84 + 8 * v56);
              if (!v60)
              {
                uint64_t v56 = v47 + 4;
                if (v47 + 4 >= v53) {
                  goto LABEL_82;
                }
                unint64_t v60 = *(void *)(v84 + 8 * v56);
                if (!v60)
                {
                  uint64_t v61 = v47 + 5;
                  while (v53 != v61)
                  {
                    unint64_t v60 = *(void *)(v84 + 8 * v61++);
                    if (v60)
                    {
                      uint64_t v56 = v61 - 1;
                      goto LABEL_67;
                    }
                  }
LABEL_82:
                  sub_2454E0658();
                  uint64_t v88 = v74[0];
                  uint64_t WitnessTable = swift_getWitnessTable();
                  *(void *)&long long v87 = v85;
                  return (*(uint64_t (**)(long long *))(v75 + 32))(&v87);
                }
              }
            }
          }
LABEL_67:
          uint64_t v54 = (v60 - 1) & v60;
          unint64_t v55 = __clz(__rbit64(v60)) + (v56 << 6);
        }
        uint64_t v58 = *(void *)(*(void *)(v45 + 48) + 8 * v55);
        swift_retain();
        if (!v58) {
          goto LABEL_82;
        }
      }
      if ((*(unsigned char *)(v58 + 168) & 1) == 0)
      {
        swift_beginAccess();
        uint64_t v62 = *(void *)(v58 + 64);
        if (!(swift_conformsToProtocol2() ? v62 : 0))
        {
          if (*(void *)(v79 + 16))
          {
            uint64_t v64 = *(void *)(v79 + 16);
          }
          else
          {
            uint64_t Strong = swift_weakLoadStrong();
            if (!Strong) {
              goto LABEL_86;
            }
            uint64_t v64 = Strong;
          }
          uint64_t v66 = *(void *)(v64 + 80);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_release();
          swift_beginAccess();
          if (!*(void *)(v66 + 16)) {
            goto LABEL_91;
          }
          uint64_t v67 = *(void *)(v58 + 80);
          uint64_t v68 = *(void *)(v58 + 72);
          swift_bridgeObjectRetain();
          unint64_t v69 = sub_2454A0B40(v68, v67);
          if ((v70 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_91:
            swift_bridgeObjectRelease();
            *(void *)&long long v87 = 0;
            *((void *)&v87 + 1) = 0xE000000000000000;
            sub_24558EF78();
            sub_24558E668();
            swift_bridgeObjectRetain();
            sub_24558E668();
            swift_bridgeObjectRelease();
            sub_24558E668();
            goto LABEL_93;
          }
          uint64_t v71 = *(void *)(*(void *)(v66 + 56) + 8 * v69);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = *(void *)(v71 + 144);
          if (!v72)
          {
            *(void *)&long long v87 = 0;
            *((void *)&v87 + 1) = 0xE000000000000000;
            sub_24558EF78();
            sub_24558E668();
            uint64_t v86 = v71;
            type metadata accessor for Schema.Entity();
            sub_24558F0E8();
            goto LABEL_93;
          }
          sub_2455389A8(v72, (void *)v58, v78, v85, *(void *)(v71 + 144), *(void *)(v71 + 152));
          swift_release();
        }
      }
      swift_release();
      uint64_t v47 = v56;
      unint64_t v48 = v54;
    }
  }
  while (1)
  {
    swift_beginAccess();
    sub_2454D130C(v26 + 64, (uint64_t)&v87, v24);
    if (!v88)
    {
      swift_release();
      sub_2454D61F4((uint64_t)&v87, v24);
      uint64_t v17 = v27;
      unint64_t v18 = v28;
      if (v15 < 0) {
        goto LABEL_10;
      }
      goto LABEL_13;
    }
    unint64_t v18 = v28;
    uint64_t v33 = v24;
    sub_2454A0BBC(&v87, &v97);
    uint64_t v34 = *(void *)(v85 + 16);
    swift_beginAccess();
    uint64_t v35 = *(void *)(v26 + 16);
    uint64_t v36 = *(void *)(v26 + 24);
    sub_2454CE878((uint64_t)&v97, (uint64_t)&v87);
    uint64_t v37 = *(void *)(v34 + 16);
    uint64_t v38 = *(void *)(v37 + 16);
    swift_bridgeObjectRetain();
    if (!v38)
    {
      swift_retain();
      goto LABEL_89;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v39 = sub_2454A0B40(v35, v36);
    if ((v40 & 1) == 0) {
      goto LABEL_87;
    }
    unint64_t v41 = *(void *)(*(void *)(v37 + 56) + 8 * v39);
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    uint64_t v42 = *(void **)(v34 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v34 + 32) = v42;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v41 & 0x8000000000000000) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v42 = sub_24555778C(v42);
      *(void *)(v34 + 32) = v42;
      if ((v41 & 0x8000000000000000) != 0)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
    if (v41 >= v42[2]) {
      break;
    }
    sub_2454CEDE4((uint64_t)&v87, (uint64_t)&v42[4 * v41 + 4]);
    swift_endAccess();
    uint64_t v24 = v33;
    sub_2454D61F4((uint64_t)&v87, v33);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)&v97);
    uint64_t v17 = v27;
    uint64_t v15 = v84;
    if (v84 < 0) {
      goto LABEL_10;
    }
LABEL_13:
    if (v18)
    {
      uint64_t v28 = (v18 - 1) & v18;
      unint64_t v29 = __clz(__rbit64(v18)) | (v17 << 6);
      uint64_t v27 = v17;
    }
    else
    {
      int64_t v30 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_84;
      }
      if (v30 >= v82) {
        goto LABEL_40;
      }
      unint64_t v31 = *(void *)(v83 + 8 * v30);
      uint64_t v27 = v17 + 1;
      if (!v31)
      {
        uint64_t v27 = v17 + 2;
        if (v17 + 2 >= v82) {
          goto LABEL_40;
        }
        unint64_t v31 = *(void *)(v83 + 8 * v27);
        if (!v31)
        {
          uint64_t v27 = v17 + 3;
          if (v17 + 3 >= v82) {
            goto LABEL_40;
          }
          unint64_t v31 = *(void *)(v83 + 8 * v27);
          if (!v31)
          {
            uint64_t v27 = v17 + 4;
            if (v17 + 4 >= v82) {
              goto LABEL_40;
            }
            unint64_t v31 = *(void *)(v83 + 8 * v27);
            if (!v31)
            {
              uint64_t v32 = v17 + 5;
              do
              {
                if (v82 == v32) {
                  goto LABEL_40;
                }
                unint64_t v31 = *(void *)(v83 + 8 * v32++);
              }
              while (!v31);
              uint64_t v27 = v32 - 1;
            }
          }
        }
      }
      uint64_t v28 = (v31 - 1) & v31;
      unint64_t v29 = __clz(__rbit64(v31)) + (v27 << 6);
    }
    uint64_t v26 = *(void *)(*(void *)(v15 + 48) + 8 * v29);
    swift_retain();
    if (!v26) {
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  swift_bridgeObjectRelease();
LABEL_89:
  unint64_t v90 = 0;
  unint64_t v91 = 0xE000000000000000;
  sub_24558EF78();
  swift_bridgeObjectRelease();
  unint64_t v90 = 0xD000000000000029;
  unint64_t v91 = 0x8000000245593FE0;
  sub_24558E668();
  swift_bridgeObjectRelease();
LABEL_93:
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_2455387D8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9980);
  unint64_t v3 = **(void **)(*MEMORY[0x263F8EA20] + v1 + 8);
  if (v3 > 0x7FF || (v3 - 512 >= 3 ? (BOOL v4 = v3 == 0) : (BOOL v4 = 1), v4))
  {
    uint64_t v5 = sub_24558E2B8();
    goto LABEL_8;
  }
  while (1)
  {
    uint64_t v5 = 0;
LABEL_8:
    uint64_t v6 = *v2;
    if ((unint64_t)*v2 > 0x7FF) {
      break;
    }
    if ((unint64_t)(v6 - 512) < 3 || v6 == 0) {
      break;
    }
    if (!v5) {
      goto LABEL_17;
    }
LABEL_19:
    sub_24558EF78();
    sub_24558E668();
    sub_24558F8A8();
    sub_24558F568();
    sub_24558F1A8();
    __break(1u);
  }
  uint64_t v8 = sub_24558E2B8();
  if (!v5)
  {
    if (!v8) {
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  if (!v8 || v8 != v5) {
    goto LABEL_19;
  }
LABEL_17:
  sub_24558E408();
  sub_24558E8A8();
  return swift_dynamicCast();
}

uint64_t sub_2455389A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v17[0] = a3;
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (a2[6] && (uint64_t v11 = sub_24558E8A8(), sub_24558F8A8(), (v12 = swift_dynamicCastClass()) != 0))
  {
    char v13 = (uint64_t *)v12;
    swift_beginAccess();
    uint64_t v15 = a2[2];
    uint64_t v14 = a2[3];
    uint64_t v20 = v11;
    v17[1] = a6;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_2455387D8(v13);
    sub_24549D640((uint64_t)&v18, v15, v14);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_2454D618C(v17[0], (uint64_t)v10, type metadata accessor for PersistentIdentifier);
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    sub_24558EF78();
    uint64_t v21 = v18;
    unint64_t v22 = v19;
    sub_24558E668();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    sub_24558E158();
    sub_245495DF4(&qword_268EE3548, MEMORY[0x263F06EA8]);
    sub_24558F558();
    sub_24558E668();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_245538CBC(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  int v55 = a3;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D96C0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(a7 + 24);
  uint64_t v56 = a1;
  v21(a6, a7);
  uint64_t v22 = *(void *)(v8 + 16);
  uint64_t v57 = a4;
  if (v22)
  {
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v23 = Strong;
  }
  uint64_t v25 = *(void *)(v23 + 16);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v26 = *(void *)(v25 + 72);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v26 + 16)) {
    goto LABEL_23;
  }
  uint64_t v53 = a5;
  uint64_t v54 = a6;
  uint64_t v27 = (uint64_t *)(*(void *)&v20[*(int *)(v18 + 20)]
                  + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  swift_bridgeObjectRetain();
  unint64_t v30 = sub_2454A0B40(v28, v29);
  if ((v31 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v32 = *(void *)(*(void *)(v26 + 56) + 8 * v30);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v32 + 144);
  uint64_t v34 = *(void *)(v32 + 152);
  swift_release();
  if (v33)
  {
    if (a2)
    {
      uint64_t v35 = v8 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration;
      swift_beginAccess();
      uint64_t v36 = *(void *)v35;
      if (*(void *)(*(void *)v35 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v37 = sub_2454A2A10((uint64_t)v20);
        if (v38)
        {
          unint64_t v39 = v37;
          uint64_t v51 = *(void *)(v36 + 56);
          uint64_t v40 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
          uint64_t v41 = *(void *)(v40 - 8);
          uint64_t v52 = v8;
          uint64_t v42 = v41;
          sub_2454D618C(v51 + *(void *)(v41 + 72) * v39, (uint64_t)v17, type metadata accessor for ModelContext.WeakAnyPersistentObject);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v17, 0, 1, v40);
          uint64_t v8 = v52;
        }
        else
        {
          uint64_t v40 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v17, 1, 1, v40);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v40 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v17, 1, 1, v40);
      }
      type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v17, 1, v40))
      {
        sub_2454D61F4((uint64_t)v17, &qword_26B0D96C0);
      }
      else
      {
        uint64_t v43 = MEMORY[0x2456A2CA0](v17);
        uint64_t v45 = *((void *)v17 + 1);
        sub_2454D61F4((uint64_t)v17, &qword_26B0D96C0);
        if (v43)
        {
          uint64_t ObjectType = swift_getObjectType();
          if (PersistentModel.hasChanges.getter(ObjectType, v45)) {
            goto LABEL_18;
          }
          swift_unknownObjectRelease();
        }
      }
    }
    uint64_t v43 = sub_245539268(v33, (uint64_t)v20, v8, v57, v56, v53, v55 & 1, v54, v33, a7, v34);
LABEL_18:
    sub_24549F868((uint64_t)v20, type metadata accessor for PersistentIdentifier);
    return v43;
  }
LABEL_24:
  uint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_24558F0E8();
  sub_24558E668();
  uint64_t Strong = *(void *)(v8 + 16);
  if (!Strong)
  {
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v47 = Strong;
      goto LABEL_30;
    }
    __break(1u);
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v47 = Strong;
LABEL_30:
  uint64_t v48 = *(void *)(v47 + 16);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v49 = *(void *)(v48 + 64);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v50 = type metadata accessor for Schema.Entity();
  MEMORY[0x2456A1220](v49, v50);
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_245539268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v51 = a7;
  uint64_t v55 = a6;
  uint64_t v53 = a5;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D96C0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v54 = &v50[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = &v50[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = type metadata accessor for _KKMDBackingData();
  uint64_t v52 = a2;
  sub_2454D618C(a2, (uint64_t)v20, type metadata accessor for PersistentIdentifier);
  uint64_t v22 = sub_2454D74EC(a1, (uint64_t)v20);
  uint64_t v23 = qword_26B0DD420;
  *(void *)(*(void *)(v22 + qword_26B0DD420) + 16) = a3;
  swift_retain();
  swift_release();
  *(unsigned char *)(*(void *)(v22 + v23) + 80) = 0;
  sub_2454D6620(1);
  uint64_t v57 = a9;
  uint64_t v59 = a9;
  uint64_t v60 = a8;
  uint64_t v24 = a11;
  uint64_t v61 = a11;
  uint64_t v62 = a10;
  uint64_t v25 = type metadata accessor for BackingDataEncoder();
  uint64_t v62 = v21;
  uint64_t v56 = v21;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v63 = WitnessTable;
  uint64_t v59 = v22;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v27 = MEMORY[0x263F8EE78];
  unint64_t v28 = sub_2454D62F0(MEMORY[0x263F8EE78]);
  uint64_t v29 = sub_2454D6C90(&v59, a3, a4, v27, v28);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)&v59);
  uint64_t v62 = v25;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v59 = v29;
  swift_retain();
  sub_24558E4B8();
  uint64_t v30 = __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)&v59);
  MEMORY[0x270FA5388](v30);
  *(void *)&v50[-16] = v55;
  swift_retain();
  sub_2454D6850((void (*)(uint64_t))sub_2455476D0);
  swift_release();
  uint64_t v31 = a3 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration;
  swift_beginAccess();
  uint64_t v32 = *(void *)v31;
  if (*(void *)(*(void *)v31 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_2454A2A10(v52);
    if (v34)
    {
      unint64_t v35 = v33;
      uint64_t v53 = v29;
      uint64_t v36 = WitnessTable;
      uint64_t v37 = *(void *)(v32 + 56);
      uint64_t v38 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v55 = a11;
      uint64_t v40 = v39;
      uint64_t v41 = v37 + *(void *)(v39 + 72) * v35;
      uint64_t WitnessTable = v36;
      uint64_t v42 = v54;
      sub_2454D618C(v41, (uint64_t)v54, type metadata accessor for ModelContext.WeakAnyPersistentObject);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v40 + 56))(v42, 0, 1, v38);
      uint64_t v24 = v55;
    }
    else
    {
      uint64_t v38 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      uint64_t v42 = v54;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v54, 1, 1, v38);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
    uint64_t v42 = v54;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v54, 1, 1, v38);
  }
  type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v42, 1, v38))
  {
    sub_2454D61F4((uint64_t)v42, &qword_26B0D96C0);
LABEL_9:
    _SD_set_faulting_backingdata_tsd(1);
    uint64_t v62 = v56;
    uint64_t v63 = WitnessTable;
    uint64_t v59 = v22;
    uint64_t v43 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v24 + 32);
    swift_retain();
    uint64_t v44 = v57;
    uint64_t v45 = v43(&v59, v57, v24);
    sub_2454D84B8(v45, v44, v24);
    swift_release();
    swift_release();
    return v45;
  }
  uint64_t v46 = MEMORY[0x2456A2CA0](v42);
  uint64_t v47 = *((void *)v42 + 1);
  sub_2454D61F4((uint64_t)v42, &qword_26B0D96C0);
  if (!v46) {
    goto LABEL_9;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v62 = v56;
  uint64_t v59 = v22;
  swift_retain();
  sub_2454D75A0((uint64_t)&v59, ObjectType, v47);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)&v59);
  if (v51) {
    sub_245548654(ObjectType, v47);
  }
  swift_release();
  swift_release();
  uint64_t v59 = v46;
  uint64_t v60 = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
  swift_dynamicCast();
  return v58;
}

uint64_t sub_245539868(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = a1 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier;
  sub_2454D618C(a1 + OBJC_IVAR____TtC9SwiftData35BackingDataEncodingRelationshipLink_persistentIdentifier, (uint64_t)&v19 - v8, type metadata accessor for PersistentIdentifier);
  uint64_t v11 = *a2;
  if (*(void *)(*a2 + 16) && (unint64_t v12 = sub_2454A2A10((uint64_t)v9), (v13 & 1) != 0))
  {
    uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  sub_24549F868((uint64_t)v9, type metadata accessor for PersistentIdentifier);
  uint64_t v20 = v14;
  uint64_t v15 = swift_retain();
  MEMORY[0x2456A11F0](v15);
  if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_24558E808();
  }
  sub_24558E858();
  sub_24558E7E8();
  sub_2454D618C(v10, (uint64_t)v7, type metadata accessor for PersistentIdentifier);
  uint64_t v16 = v20;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *a2;
  *a2 = 0x8000000000000000;
  sub_245506118(v16, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  *a2 = v19;
  swift_bridgeObjectRelease();
  return sub_24549F868((uint64_t)v7, type metadata accessor for PersistentIdentifier);
}

uint64_t sub_245539A58()
{
  uint64_t v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 8);
  sub_24558F7D8();
  uint64_t ObjectType = swift_getObjectType();
  PersistentModel.persistentModelID.getter(ObjectType, v4, (uint64_t)v3);
  sub_24558E158();
  sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
  sub_24558E4D8();
  sub_24549F868((uint64_t)v3, type metadata accessor for PersistentIdentifier);
  return sub_24558F818();
}

uint64_t sub_245539B68()
{
  uint64_t v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  PersistentModel.persistentModelID.getter(ObjectType, v4, (uint64_t)v3);
  sub_24558E158();
  sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
  sub_24558E4D8();
  return sub_24549F868((uint64_t)v3, type metadata accessor for PersistentIdentifier);
}

uint64_t sub_245539C64()
{
  uint64_t v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 8);
  sub_24558F7D8();
  uint64_t ObjectType = swift_getObjectType();
  PersistentModel.persistentModelID.getter(ObjectType, v4, (uint64_t)v3);
  sub_24558E158();
  sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
  sub_24558E4D8();
  sub_24549F868((uint64_t)v3, type metadata accessor for PersistentIdentifier);
  return sub_24558F818();
}

BOOL sub_245539D78(uint64_t *a1, uint64_t *a2)
{
  return sub_245544790(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_245539D8C()
{
  return sub_24558F818();
}

uint64_t sub_245539E20()
{
  return sub_24558E4D8();
}

uint64_t sub_245539EA0()
{
  return sub_24558F818();
}

uint64_t sub_245539F34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  PersistentModel.getValue<A>(forKey:)(a1, a5, a4);
  if (sub_24558E558()) {
    return swift_unknownObjectRelease();
  }
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24553A038(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!PersistentModel.getValue<A>(forKey:)(a1, a5, a4)) {
    return PersistentModel.setValue<A>(forKey:to:)(a1, a3, a5, a4);
  }
  if (sub_24558E558()) {
    return swift_unknownObjectRelease();
  }
  sub_24558EF78();
  sub_24558E668();
  sub_24558F568();
  sub_24558E668();
  sub_24558F568();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24553A1D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(*(void *)(*MEMORY[0x263F8EA20] + *a1 + 8) + 16);
  v11[1] = a4;
  uint64_t WitnessTable = swift_getWitnessTable();
  PersistentModel.getValue<A, B>(forKey:)(a1, v7, a5, WitnessTable);
  v11[0] = v12;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  char v9 = sub_24558E768();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    swift_unknownObjectRetain();
    sub_24558E888();
    v11[0] = v12;
    PersistentModel.setValue<A, B>(forKey:to:)(a1, (uint64_t)v11, v7, a5, WitnessTable);
  }
  return swift_bridgeObjectRelease();
}

void sub_24553A37C()
{
  uint64_t v1 = v0;
  char v2 = *(unsigned char *)(v0 + 56);
  *(unsigned char *)(v0 + 56) = 0;
  sub_2454DC9F8(0);
  swift_beginAccess();
  *(void *)(v0 + 64) = 0;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (*(void *)(*(void *)(v0 + 88) + 16)
    || (swift_beginAccess(), *(void *)(*(void *)(v0 + 72) + 16))
    || (swift_beginAccess(), *(void *)(*(void *)(v0 + 104) + 16)))
  {
    unint64_t v3 = sub_2454DF23C(MEMORY[0x263F8EE78]);
    uint64_t v4 = *(void *)(v0 + 88);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_2454DBB90(v5, v4);
    swift_retain();
    sub_245544D58(v6);
    swift_bridgeObjectRelease();
    swift_release();
    swift_beginAccess();
    swift_retain();
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_245544EE4(v7, v1, (void (*)(uint64_t, uint64_t, uint64_t))sub_24547F014);
    swift_bridgeObjectRelease();
    swift_release();
    swift_retain();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_245544EE4(v8, v1, (void (*)(uint64_t, uint64_t, uint64_t))sub_245480B6C);
    swift_bridgeObjectRelease();
    swift_release();
    if (*(void *)(*(void *)(v1 + 88) + 16))
    {
      uint64_t v9 = sub_24558E5D8();
      uint64_t v11 = v10;
      uint64_t v12 = sub_2454DF668();
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
      *(void *)&long long v25 = v12;
      sub_2454A0BBC(&v25, v24);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_2454DED7C(v24, v9, v11, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(*(void *)(v1 + 72) + 16))
    {
      uint64_t v14 = sub_24558E5D8();
      uint64_t v16 = v15;
      uint64_t v17 = sub_2454E313C();
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
      *(void *)&long long v25 = v17;
      sub_2454A0BBC(&v25, v24);
      char v18 = swift_isUniquelyReferenced_nonNull_native();
      sub_2454DED7C(v24, v14, v16, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(*(void *)(v1 + 104) + 16))
    {
      uint64_t v19 = sub_24558E5D8();
      uint64_t v21 = v20;
      uint64_t v22 = sub_2454DB9C4();
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
      *(void *)&long long v25 = v22;
      sub_2454A0BBC(&v25, v24);
      char v23 = swift_isUniquelyReferenced_nonNull_native();
      sub_2454DED7C(v24, v19, v21, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_2454DF9F4(v3);
    swift_bridgeObjectRelease();
    sub_2454DC9F8(0);
    sub_2454D3D00();
  }
  *(unsigned char *)(v1 + 56) = v2;
}

uint64_t sub_24553A738(uint64_t a1)
{
  uint64_t v39 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v39);
  uint64_t v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v4) = *(_DWORD *)(v1 + 168);
  BOOL v6 = __OFADD__(v4, 1);
  int v7 = v4 + 1;
  if (v6)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  *(_DWORD *)(v1 + 168) = v7;
  uint64_t ObjectType = *(void *)(a1
                         + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__objects);
  uint64_t v8 = *(void *)(a1
                 + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__moveToUpdatesList);
  if (v8
    && (*(unsigned char *)(a1
                 + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__undoTransactionID
                 + 4) & 1) == 0)
  {
    BOOL v9 = *(_DWORD *)(a1
                   + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__undoTransactionID) == *(_DWORD *)(v1 + 160);
    uint64_t v10 = *(void *)(ObjectType + 16);
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_42;
  }
  BOOL v9 = 0;
  uint64_t v10 = *(void *)(ObjectType + 16);
  if (!v10)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_5:
  uint64_t v11 = *(void *)(a1
                  + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__snapshots);
  uint64_t v12 = *(void *)(a1
                  + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__deletedModifiedLastSnapshots);
  uint64_t v43 = v10 - 1;
  v38[3] = v1 + 104;
  uint64_t v38[4] = v1 + 112;
  uint64_t v47 = v1;
  v38[1] = v1 + 72;
  v38[2] = v1 + 80;
  uint64_t v45 = ObjectType + 32;
  if (!v8) {
    BOOL v9 = 0;
  }
  BOOL v44 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  uint64_t v46 = v12;
  uint64_t v14 = (uint64_t *)(v12 + 40);
  uint64_t v40 = (void *)MEMORY[0x263F8EE78];
  uint64_t v41 = ObjectType;
  uint64_t v42 = v8;
  while (1)
  {
    long long v48 = *(_OWORD *)(v45 + 16 * v13);
    if (v11)
    {
      if (v13 >= *(void *)(v11 + 16)) {
        goto LABEL_44;
      }
      uint64_t v15 = *(void *)(v11 + 8 * v13 + 32);
      swift_bridgeObjectRetain();
      if (!v44)
      {
LABEL_14:
        int v16 = 0;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v15 = 0;
      if (!v44) {
        goto LABEL_14;
      }
    }
    if (v13 >= *(void *)(v8 + 16)) {
      goto LABEL_45;
    }
    int v16 = *(unsigned __int8 *)(v8 + v13 + 32);
LABEL_15:
    uint64_t v17 = v48;
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain_n();
    uint64_t v18 = *((void *)&v48 + 1);
    PersistentModel.persistentModelID.getter(ObjectType, *((uint64_t *)&v48 + 1), (uint64_t)v5);
    sub_24547EDCC(v17, (uint64_t)v5, ObjectType, v18);
    sub_24549F868((uint64_t)v5, type metadata accessor for PersistentIdentifier);
    if (v15)
    {
      sub_2455318F4(v15, ObjectType, v18);
      swift_bridgeObjectRelease();
      if (v46)
      {
        if (v13 >= *(void *)(v46 + 16)) {
          goto LABEL_46;
        }
        if (*(v14 - 1))
        {
          uint64_t v19 = *v14;
          uint64_t v20 = swift_unknownObjectRetain();
          sub_2454DD6CC(v20, v19, ObjectType, v18);
          swift_unknownObjectRelease();
        }
      }
    }
    if (sub_245548FCC(ObjectType, v18))
    {
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v48;
      *(void *)(v21 + 32) = v47;
      swift_unknownObjectRetain();
      swift_retain();
      sub_24548274C(0, (uint64_t)sub_245547624, v21, ObjectType, v18);
      swift_release();
      sub_24547FB78(0, ObjectType, v18);
    }
    if (v16
      && (PersistentModel.persistentModelID.getter(ObjectType, v18, (uint64_t)v5),
          char v22 = *(unsigned char *)(*(void *)&v5[*(int *)(v39 + 20)] + 32),
          sub_24549F868((uint64_t)v5, type metadata accessor for PersistentIdentifier),
          (v22 & 1) == 0))
    {
      sub_2454D787C(0, ObjectType, v18);
      sub_2454C2DA0(0, ObjectType, v18);
      swift_beginAccess();
      sub_2454EBEC8(v17, v18);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_2454EBEC8(v17, v18);
      swift_endAccess();
      swift_unknownObjectRelease();
      sub_2454D77BC(0, ObjectType, v18);
      sub_2454E609C(0, ObjectType, v18);
      swift_beginAccess();
      sub_2454EBEC8(v17, v18);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_2454EBEC8(v17, v18);
      swift_endAccess();
      swift_unknownObjectRelease();
      sub_2454DDFBC(v17, ObjectType, v18);
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_2454DE400(0, v40[2] + 1, 1, v40);
      }
      unint64_t v24 = v40[2];
      unint64_t v23 = v40[3];
      uint64_t v8 = v42;
      if (v24 >= v23 >> 1) {
        uint64_t v40 = sub_2454DE400((void *)(v23 > 1), v24 + 1, 1, v40);
      }
      long long v25 = v40;
      v40[2] = v24 + 1;
      *(_OWORD *)&v25[2 * v24 + 4] = v48;
    }
    else
    {
      uint64_t v8 = v42;
    }
    swift_unknownObjectRelease_n();
    if (v43 == v13) {
      break;
    }
    ++v13;
    v14 += 2;
    if (v13 >= *(void *)(v41 + 16)) {
      goto LABEL_43;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = v47;
  int v27 = *(_DWORD *)(v47 + 168);
  BOOL v6 = __OFSUB__(v27, 1);
  int v28 = v27 - 1;
  if (v6)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  *(_DWORD *)(v47 + 168) = v28;
  uint64_t v29 = v40;
  if (v40[2])
  {
    swift_beginAccess();
    uint64_t v30 = *(void **)(v26 + 40);
    if (v30)
    {
      uint64_t v31 = (objc_class *)type metadata accessor for ModelContext._UndoModifiedDeletedList();
      uint64_t v32 = (char *)objc_allocWithZone(v31);
      *(void *)&v32[OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56024_UndoModifiedDeletedList__deletedModifiedObjects] = v29;
      v49.receiver = v32;
      v49.super_class = v31;
      id v33 = v30;
      swift_bridgeObjectRetain();
      id v34 = objc_msgSendSuper2(&v49, sel_init);
      objc_msgSend(v33, sel_registerUndoWithTarget_selector_object_, v26, sel__undoDeletionsMovedToUpdates_, v34);
    }
    uint64_t ObjectType = sub_24556AB98((uint64_t)v29);
    swift_bridgeObjectRelease();
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) == 0)
    {
LABEL_38:
      uint64_t v35 = MEMORY[0x263F8EE88];
      goto LABEL_39;
    }
LABEL_49:
    if (!sub_24558F1C8()) {
      goto LABEL_38;
    }
    sub_24556BE9C(MEMORY[0x263F8EE78]);
    uint64_t v35 = v37;
LABEL_39:
    sub_2454DE74C(ObjectType, MEMORY[0x263F8EE88], MEMORY[0x263F8EE88], v35, MEMORY[0x263F8EE88], 0);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24553AE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = swift_getObjectType();

  return sub_24547BD04(a1, a2, a4, v11, ObjectType, a5, a3);
}

uint64_t sub_24553AEBC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PersistentIdentifier(0);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v26 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v5) = *(_DWORD *)(v1 + 168);
  BOOL v6 = __OFADD__(v5, 1);
  int v7 = v5 + 1;
  if (v6)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  *(_DWORD *)(v1 + 168) = v7;
  uint64_t v8 = *(void *)(a1
                 + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__objects);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v27 = v9 - 1;
  uint64_t v28 = v1;
  uint64_t v10 = *(void *)(a1
                  + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__snapshots);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  uint64_t v12 = (uint64_t *)(v8 + 40);
  while (1)
  {
    uint64_t v13 = *v12;
    if (v10)
    {
      if (v11 >= *(void *)(v10 + 16)) {
        goto LABEL_18;
      }
      uint64_t v14 = *(void *)(v10 + 8 * v11 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain_n();
    uint64_t v16 = PersistentModel.modelContext.getter(ObjectType, v13);
    swift_release();
    if (v16)
    {
      if (!v14) {
        goto LABEL_11;
      }
LABEL_10:
      uint64_t v17 = v8;
      uint64_t v18 = swift_getObjectType();
      uint64_t v19 = swift_unknownObjectRetain();
      sub_2454DDFBC(v19, v18, v13);
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      uint64_t v20 = v18;
      uint64_t v8 = v17;
      sub_2455318F4(v14, v20, v13);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_11;
    }
    uint64_t v21 = v26;
    PersistentModel.persistentModelID.getter(ObjectType, v13, v26);
    sub_2454B38B4(v21);
    uint64_t v13 = v22;
    swift_unknownObjectRelease();
    sub_24549F868(v21, type metadata accessor for PersistentIdentifier);
    if (v14) {
      goto LABEL_10;
    }
LABEL_11:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
    if (v27 == v11) {
      break;
    }
    ++v11;
    v12 += 2;
    if (v11 >= *(void *)(v8 + 16))
    {
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  int v23 = *(_DWORD *)(v28 + 168);
  BOOL v6 = __OFSUB__(v23, 1);
  int v24 = v23 - 1;
  if (v6) {
    goto LABEL_21;
  }
  *(_DWORD *)(v28 + 168) = v24;
  return result;
}

uint64_t sub_24553B140(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  uint64_t result = MEMORY[0x270FA5388](v4 - 8);
  int v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v6) = *(_DWORD *)(v2 + 168);
  BOOL v8 = __OFADD__(v6, 1);
  int v9 = v6 + 1;
  if (v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(_DWORD *)(v2 + 168) = v9;
  uint64_t v10 = *(void *)(a1
                  + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__objects);
  uint64_t v24 = *(void *)(v10 + 16);
  if (v24)
  {
    uint64_t v11 = *(void *)(a1
                    + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56012_UndoPayload__snapshots);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = 0;
    uint64_t v23 = v10;
    uint64_t v13 = (uint64_t *)(v10 + 40);
    while (1)
    {
      uint64_t v16 = *v13;
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain_n();
      uint64_t v18 = PersistentModel.modelContext.getter(ObjectType, v16);
      uint64_t result = swift_release();
      if (v18)
      {
        if (!v11) {
          goto LABEL_18;
        }
      }
      else
      {
        PersistentModel.persistentModelID.getter(ObjectType, v16, (uint64_t)v7);
        sub_2454B38B4((uint64_t)v7);
        uint64_t v16 = v19;
        sub_24549F868((uint64_t)v7, type metadata accessor for PersistentIdentifier);
        uint64_t result = swift_unknownObjectRelease();
        if (!v11) {
          goto LABEL_18;
        }
      }
      if (v12 >= *(void *)(v11 + 16)) {
        break;
      }
      uint64_t v20 = *(void *)(v11 + 8 * v12 + 32);
      if (v20)
      {
        uint64_t v21 = swift_getObjectType();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        sub_2455318F4(v20, v21, v16);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      ++v12;
      uint64_t v14 = swift_getObjectType();
      uint64_t v15 = swift_unknownObjectRetain();
      sub_24547F014(v15, v14, v16);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease_n();
      v13 += 2;
      if (v24 == v12)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        int v9 = *(_DWORD *)(v2 + 168);
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_13:
  BOOL v8 = __OFSUB__(v9, 1);
  int v22 = v9 - 1;
  if (!v8)
  {
    *(_DWORD *)(v2 + 168) = v22;
    return result;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24553B3A8(uint64_t result)
{
  uint64_t v1 = *(void *)(result
                 + OBJC_IVAR____TtCC9SwiftData12ModelContextP33_9BAFD8545624C8465B3B73E4060DF56024_UndoModifiedDeletedList__deletedModifiedObjects);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v4 = *v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = swift_unknownObjectRetain();
      sub_24547F014(v6, ObjectType, v4);
      swift_unknownObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24553B478(uint64_t a1)
{
  sub_2454DC9F8(0);
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_2454CE878(a1 + 32, (uint64_t)v7);
  sub_2455476E0(0, &qword_26B0DA1C8);
  swift_dynamicCast();
  int v4 = *(_DWORD *)(v1 + 160);
  if (v4 != objc_msgSend(v6, sel_intValue))
  {

    return;
  }
  if (v3 < 2)
  {
LABEL_14:
    __break(1u);
    return;
  }
  sub_2454CE878(a1 + 64, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8E40);
  swift_dynamicCast();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_245545078(v5, (uint64_t)v6);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_release();
  *(unsigned char *)(v1 + 164) = 0;
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 72) + 16)
    || (swift_beginAccess(), *(void *)(*(void *)(v1 + 80) + 16))
    || (swift_beginAccess(), *(void *)(*(void *)(v1 + 104) + 16))
    || (swift_beginAccess(), *(void *)(*(void *)(v1 + 112) + 16))
    || *(void *)(*(void *)(v1 + 88) + 16))
  {
    *(unsigned char *)(v1 + 48) = 1;
  }
  else
  {
    swift_beginAccess();
    *(unsigned char *)(v1 + 48) = *(void *)(*(void *)(v1 + 96) + 16) != 0;
  }
}

uint64_t sub_24553B714(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v4 = MEMORY[0x270FA5388](v57);
  id v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  int v9 = (char *)&v46 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v46 - v10;
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v14 = a2 + 56;
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
  uint64_t v50 = ~v15;
  if (-v15 < 64) {
    uint64_t v16 = ~(-1 << -(char)v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v13;
  int64_t v18 = (unint64_t)(63 - v15) >> 6;
  uint64_t v56 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v53 = a2 + 56;
  uint64_t v54 = a2;
  uint64_t v47 = v11;
  int64_t v46 = v18;
  if (!v17) {
    goto LABEL_9;
  }
  while (2)
  {
    uint64_t v21 = (v17 - 1) & v17;
    unint64_t v22 = __clz(__rbit64(v17)) | (v20 << 6);
    int64_t v23 = v20;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_63;
    }
LABEL_23:
    unint64_t v48 = v21;
    int64_t v49 = v23;
    int64_t v51 = v20;
    unint64_t v52 = v17;
    uint64_t v27 = *(void *)(*(void *)(a2 + 48) + 16 * v22 + 8);
    sub_24558F7D8();
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v58 = ObjectType;
    uint64_t v59 = v27;
    PersistentModel.persistentModelID.getter(ObjectType, v27, (uint64_t)v11);
    sub_24558E158();
    sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
    sub_24558E4D8();
    sub_24549F868((uint64_t)v11, type metadata accessor for PersistentIdentifier);
    uint64_t v29 = sub_24558F818();
    uint64_t v30 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v31 = v29 & ~v30;
    if (((*(void *)(v56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
LABEL_60:
      swift_unknownObjectRelease();
      uint64_t v12 = 0;
      goto LABEL_61;
    }
    uint64_t v55 = ~v30;
    while (1)
    {
      uint64_t v32 = *(void *)(*(void *)(a1 + 48) + 16 * v31 + 8);
      uint64_t v33 = swift_getObjectType();
      swift_unknownObjectRetain();
      PersistentModel.persistentModelID.getter(v33, v32, (uint64_t)v9);
      PersistentModel.persistentModelID.getter(v58, v59, (uint64_t)v6);
      uint64_t v34 = *(int *)(v57 + 20);
      uint64_t v35 = *(void *)&v9[v34];
      uint64_t v36 = *(void *)&v6[v34];
      uint64_t v37 = *(void *)(v35 + 24);
      uint64_t v38 = *(void *)(v36 + 24);
      if (v37)
      {
        if (!v38
          || (*(void *)(v35 + 16) == *(void *)(v36 + 16) ? (BOOL v39 = v37 == v38) : (BOOL v39 = 0),
              !v39 && (sub_24558F598() & 1) == 0))
        {
LABEL_45:
          sub_24549F868((uint64_t)v6, type metadata accessor for PersistentIdentifier);
          sub_24549F868((uint64_t)v9, type metadata accessor for PersistentIdentifier);
LABEL_46:
          swift_unknownObjectRelease();
          goto LABEL_47;
        }
      }
      else if (v38)
      {
        goto LABEL_45;
      }
      BOOL v40 = *(void *)(v35 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v36 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
         && *(void *)(v35 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v36 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
      if (!v40 && (sub_24558F598() & 1) == 0) {
        goto LABEL_45;
      }
      if (*(void *)(v35 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v36 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
        && *(void *)(v35 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v36 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
      {
        sub_24549F868((uint64_t)v6, type metadata accessor for PersistentIdentifier);
        sub_24549F868((uint64_t)v9, type metadata accessor for PersistentIdentifier);
      }
      else
      {
        char v42 = sub_24558F598();
        sub_24549F868((uint64_t)v6, type metadata accessor for PersistentIdentifier);
        sub_24549F868((uint64_t)v9, type metadata accessor for PersistentIdentifier);
        if ((v42 & 1) == 0) {
          goto LABEL_46;
        }
      }
      uint64_t v43 = PersistentModel.modelContext.getter(v33, v32);
      uint64_t v44 = PersistentModel.modelContext.getter(v58, v59);
      uint64_t v45 = v44;
      if (!v43) {
        break;
      }
      swift_unknownObjectRelease();
      swift_release();
      if (!v45) {
        goto LABEL_56;
      }
      swift_release();
      if (v43 == v45)
      {
        uint64_t result = swift_unknownObjectRelease();
        unint64_t v17 = v48;
        int64_t v20 = v49;
        uint64_t v14 = v53;
        a2 = v54;
        goto LABEL_58;
      }
LABEL_47:
      unint64_t v31 = (v31 + 1) & v55;
      if (((*(void *)(v56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
        goto LABEL_60;
      }
    }
    if (v44)
    {
      swift_unknownObjectRelease();
LABEL_56:
      swift_release();
      goto LABEL_47;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t result = swift_release();
    unint64_t v17 = v48;
    int64_t v20 = v49;
    uint64_t v14 = v53;
    a2 = v54;
LABEL_58:
    uint64_t v11 = v47;
    int64_t v18 = v46;
    if (v17) {
      continue;
    }
    break;
  }
LABEL_9:
  int64_t v24 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
LABEL_66:
    __break(1u);
    return result;
  }
  if (v24 >= v18) {
    goto LABEL_64;
  }
  unint64_t v25 = *(void *)(v14 + 8 * v24);
  int64_t v23 = v20 + 1;
  if (v25) {
    goto LABEL_22;
  }
  int64_t v23 = v20 + 2;
  if (v20 + 2 >= v18) {
    goto LABEL_64;
  }
  unint64_t v25 = *(void *)(v14 + 8 * v23);
  if (v25) {
    goto LABEL_22;
  }
  int64_t v23 = v20 + 3;
  if (v20 + 3 >= v18) {
    goto LABEL_64;
  }
  unint64_t v25 = *(void *)(v14 + 8 * v23);
  if (v25) {
    goto LABEL_22;
  }
  int64_t v26 = v20 + 4;
  if (v20 + 4 >= v18)
  {
LABEL_64:
    uint64_t v12 = 1;
    goto LABEL_61;
  }
  unint64_t v25 = *(void *)(v14 + 8 * v26);
  if (!v25)
  {
    while (1)
    {
      int64_t v23 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        goto LABEL_66;
      }
      if (v23 >= v18) {
        goto LABEL_64;
      }
      unint64_t v25 = *(void *)(v14 + 8 * v23);
      ++v26;
      if (v25) {
        goto LABEL_22;
      }
    }
  }
  int64_t v23 = v20 + 4;
LABEL_22:
  uint64_t v21 = (v25 - 1) & v25;
  unint64_t v22 = __clz(__rbit64(v25)) + (v23 << 6);
  if (*(void *)(a1 + 16)) {
    goto LABEL_23;
  }
LABEL_63:
  uint64_t v12 = 0;
LABEL_61:
  sub_2454E0658();
  return v12;
}

uint64_t sub_24553BCD8()
{
  return sub_2454DC9F8(0);
}

uint64_t sub_24553BD30()
{
  sub_2454E0764();

  return swift_deallocClassInstance();
}

void sub_24553BD64(void *a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void **)(v1 + 40);
  if (v3)
  {
    id v4 = v3;
    if (objc_msgSend(a1, sel_object))
    {
      sub_24558ED88();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v8, 0, sizeof(v8));
    }
    sub_2454D753C((uint64_t)v8, (uint64_t)v9, &qword_26B0DA230);
    if (v9[3])
    {
      sub_2455476E0(0, &qword_268EE3A98);
      if (swift_dynamicCast())
      {

        if (v7 == v4) {
          uint64_t v5 = v4;
        }
        else {
          uint64_t v5 = v7;
        }

        goto LABEL_11;
      }
    }
    else
    {
      sub_2454D61F4((uint64_t)v9, &qword_26B0DA230);
    }
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    id v6 = objc_msgSend(a1, sel_description);
    sub_24558E5D8();

    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558F1A8();
    __break(1u);
    return;
  }
LABEL_11:
  if ((*(unsigned char *)(v1 + 60) & 1) == 0) {
    sub_2454DC9F8(0);
  }
}

uint64_t sub_24553BF60(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v5 = a3;
  swift_retain();
  a4(v5);

  return swift_release();
}

uint64_t sub_24553BFC4()
{
  uint64_t v1 = v0[15];
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24558EE88();
    swift_bridgeObjectRelease();
    if (v2 <= 0) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v4 = v0[15];
    uint64_t v5 = v0[17];
    uint64_t v6 = MEMORY[0x263F8EE88];
    v0[15] = MEMORY[0x263F8EE88];
    v0[17] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_2454DE74C(v6, v6, v6, v4, v5, v0[18] != 0);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (*(uint64_t *)(v1 + 16) > 0) {
    goto LABEL_7;
  }
LABEL_5:
  if (*(void *)(v0[17] + 16)) {
    goto LABEL_7;
  }
  uint64_t result = swift_beginAccess();
  if (v0[18]) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_24553C0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v6;
  uint64_t v46 = a2;
  uint64_t v54 = a4;
  sub_24558E228();
  uint64_t v45 = sub_24558ECE8();
  uint64_t v10 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v44 = (char *)&v38 - v11;
  uint64_t v12 = type metadata accessor for EditingState(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v42 = type metadata accessor for DataStoreBatchDeleteRequest();
  uint64_t v14 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v16 = (char *)&v38 - v15;
  if (*(void *)(v5 + 16))
  {
    uint64_t v17 = *(void *)(v5 + 16);
LABEL_5:
    swift_beginAccess();
    uint64_t v19 = *(void *)(v17 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v20 = *(void *)(v19 + 16);
    if (!v20) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v21 = v5 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    uint64_t v38 = v19;
    uint64_t v22 = v14;
    uint64_t v23 = v19 + 32;
    uint64_t v41 = v21;
    swift_beginAccess();
    BOOL v39 = (void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    BOOL v40 = (void (**)(char *, uint64_t))(v22 + 8);
    int64_t v24 = v16;
    while (1)
    {
      sub_2454D130C(v23, (uint64_t)v52, &qword_26B0DA078);
      uint64_t v25 = v53;
      swift_getObjectType();
      uint64_t v26 = swift_conformsToProtocol2();
      if (v26) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v26) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 0;
      }
      if (v28)
      {
        uint64_t v29 = v43;
        uint64_t v49 = v27;
        sub_2454D618C(v41, v43, type metadata accessor for EditingState);
        uint64_t v30 = (uint64_t)v44;
        (*v39)(v44, v46, v45);
        uint64_t v31 = (uint64_t)v24;
        uint64_t v32 = v29;
        uint64_t v33 = v24;
        uint64_t v34 = v47;
        uint64_t v51 = v7;
        uint64_t v35 = v48;
        sub_245520EB4(v32, v30, v31);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 16);
        swift_unknownObjectRetain();
        uint64_t v37 = v51;
        v36(v33, v34, v35, ObjectType, v49);
        uint64_t v7 = v37;
        if (v37)
        {
          swift_unknownObjectRelease_n();
          (*v40)(v33, v42);
          swift_bridgeObjectRelease();
          return sub_2454EABC0((uint64_t)v52);
        }
        swift_unknownObjectRelease_n();
        (*v40)(v33, v42);
        int64_t v24 = v33;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      sub_2454EABC0((uint64_t)v52);
      v23 += 56;
      if (!--v20) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_24553C4F4()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_contextChanged) == 1)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_contextChanged) = 0;
    double v1 = *(double *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveDelay);
    double v2 = *(double *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_AUTOSAVE_MAX_TIME);
    double v3 = v2 * 0.5;
    if (v1 == 0.0)
    {
      *(double *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveDelay) = v3;
      sub_24553C5CC(v3);
    }
    else
    {
      double v4 = v2 * 0.25;
      if (v1 == v3)
      {
        *(double *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveDelay) = v4;
        sub_24553C5CC(v2 * 0.25);
      }
      else if (v1 == v4)
      {
        *(double *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveDelay) = v2 * 0.125;
        sub_24553C5CC(v2 * 0.125);
      }
      else
      {
        double v5 = *(double *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_AUTOSAVE_MAX_TIME);
        *(double *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveDelay) = v2;
        sub_24553C5CC(v5);
      }
    }
  }
  else
  {
    *(void *)(v0 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveDelay) = 0;
    sub_24553C5CC(0.0);
  }
}

void sub_24553C5CC(double a1)
{
  if (a1 != 0.0 && *(double *)(v1 + OBJC_IVAR____TtC9SwiftData12ModelContext_AUTOSAVE_MAX_TIME) > a1)
  {
    double v5 = self;
    aBlock[4] = sub_245547578;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24553C734;
    aBlock[3] = &block_descriptor_3;
    uint64_t v6 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v7 = objc_msgSend(v5, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v6, a1);
    _Block_release(v6);
  }
  else
  {
    double v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveEnabled);
    swift_beginAccess();
    if (*v4 == 1 && *(unsigned char *)(v1 + 48) == 1)
    {
      *(void *)(v1 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveDelay) = 0;
      sub_2454D4974();
    }
  }
}

void sub_24553C734(uint64_t a1, void *a2)
{
  double v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_24553C834(void (*a1)(void))
{
  id v4 = (void *)MEMORY[0x2456A2410]();
  a1();
  if (!v2 && *(unsigned char *)(v1 + 48) == 1) {
    sub_2454D4974();
  }
}

unint64_t ModelContext.NotificationKey.rawValue.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6164696C61766E69;
      break;
    case 2:
      unint64_t result = 0x6465747265736E69;
      break;
    case 3:
      unint64_t result = 0x64657461647075;
      break;
    case 4:
      unint64_t result = 0x646574656C6564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24553C970(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a5;
  uint64_t v25 = a1;
  uint64_t v26 = a4;
  int v27 = a3;
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v10 = *(void *)(Descriptor - 8);
  MEMORY[0x270FA5388](Descriptor);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = type metadata accessor for EditingState(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Request = type metadata accessor for DataStoreFetchRequest();
  uint64_t v16 = *(void *)(Request - 8);
  MEMORY[0x270FA5388](Request);
  int64_t v18 = (char *)&v22 - v17;
  sub_2454B7878();
  uint64_t v19 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  sub_2454D618C(v19, (uint64_t)v15, type metadata accessor for EditingState);
  uint64_t v20 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v25, Descriptor);
  sub_245496938((uint64_t)v15, (uint64_t)v12, (uint64_t)v18);
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v31 = v18;
  uint64_t v32 = v7;
  uint64_t v33 = v20;
  uint64_t v34 = v26;
  uint64_t v35 = v28;
  char v36 = v27;
  sub_2454B7AE4((uint64_t (*)(uint64_t, uint64_t))sub_245546324);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, Request);
}

uint64_t sub_24553CBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v42 = a3;
  uint64_t v12 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v41 = (uint64_t)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D96C0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration;
  swift_beginAccess();
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *(void *)(*(void *)v17 + 16);
  uint64_t v43 = a2;
  if (v19)
  {
    uint64_t v40 = a1;
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_2454A2A10(a2);
    if (v21)
    {
      unint64_t v22 = v20;
      v39[1] = a4;
      uint64_t v23 = *(void *)(v18 + 56);
      uint64_t v24 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      uint64_t v25 = *(void *)(v24 - 8);
      v39[0] = a7;
      uint64_t v26 = v25;
      sub_2454D618C(v23 + *(void *)(v25 + 72) * v22, (uint64_t)v16, type metadata accessor for ModelContext.WeakAnyPersistentObject);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v16, 0, 1, v24);
      a7 = v39[0];
    }
    else
    {
      uint64_t v24 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v16, 1, 1, v24);
    }
    swift_bridgeObjectRelease();
    a1 = v40;
  }
  else
  {
    uint64_t v24 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v16, 1, 1, v24);
  }
  type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v16, 1, v24))
  {
    sub_2454D61F4((uint64_t)v16, &qword_26B0D96C0);
    uint64_t v27 = 0;
    uint64_t v28 = v43;
  }
  else
  {
    uint64_t v29 = MEMORY[0x2456A2CA0](v16);
    uint64_t v30 = *((void *)v16 + 1);
    sub_2454D61F4((uint64_t)v16, &qword_26B0D96C0);
    uint64_t v28 = v43;
    if (v29)
    {
      v44[0] = v29;
      v44[1] = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
      if (swift_dynamicCast()) {
        uint64_t v27 = v47;
      }
      else {
        uint64_t v27 = 0;
      }
    }
    else
    {
      uint64_t v27 = 0;
    }
  }
  if (*(unsigned char *)(v42 + *(int *)(type metadata accessor for FetchDescriptor() + 48)) == 1 && v27 != 0)
  {
    swift_unknownObjectRetain();
    if (PersistentModel.hasChanges.getter(a5, a7))
    {
      uint64_t v47 = v27;
      swift_beginAccess();
      sub_24558E8A8();
      swift_unknownObjectRetain();
      sub_24558E888();
      swift_endAccess();
      return swift_unknownObjectRelease_n();
    }
    swift_unknownObjectRelease();
  }
  uint64_t v32 = type metadata accessor for _FullFutureBackingData();
  uint64_t v33 = v41;
  sub_2454D618C(v28, v41, type metadata accessor for PersistentIdentifier);
  swift_retain();
  uint64_t v34 = sub_2454B47C8(a5, v33, a1);
  uint64_t v35 = v34;
  if (v27)
  {
    uint64_t v45 = v32;
    v44[0] = v34;
    swift_unknownObjectRetain();
    swift_retain();
    sub_2454D75A0((uint64_t)v44, a5, a7);
    __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v44);
    uint64_t v47 = v27;
    swift_beginAccess();
    sub_24558E8A8();
    swift_unknownObjectRetain();
    sub_24558E888();
    swift_endAccess();
    swift_release();
    return swift_unknownObjectRelease_n();
  }
  _SD_set_faulting_backingdata_tsd(1);
  uint64_t v45 = v32;
  uint64_t WitnessTable = swift_getWitnessTable();
  v44[0] = v35;
  uint64_t v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a7 + 32);
  swift_retain();
  uint64_t v38 = v37(v44, a5, a7);
  sub_2454D84B8(v38, a5, a7);
  uint64_t v47 = v38;
  swift_beginAccess();
  sub_24558E8A8();
  swift_unknownObjectRetain();
  sub_24558E888();
  swift_endAccess();
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_24553D174(char **a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558DC98();
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v23 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = *a2;
  uint64_t v14 = *(void *)(a3 + *(int *)(type metadata accessor for FetchDescriptor() + 36));
  uint64_t v15 = swift_bridgeObjectRetain();
  if (!MEMORY[0x2456A12E0](v15, v6)) {
    goto LABEL_8;
  }
  uint64_t v16 = v12;
  char v17 = sub_24558E848();
  sub_24558E7F8();
  if (v17)
  {
    uint64_t v18 = v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v11, v14 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), v6);
LABEL_4:
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v11, v6);
    uint64_t v25 = v16;
    uint64_t v24 = v13;
    unint64_t v19 = sub_24558DC78();
    if (v19 != -1)
    {
      uint64_t v11 = (char *)v19;
      if (v19 <= 1)
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v6);
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v6);
LABEL_8:
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v21 = sub_24558EFE8();
  if (v7 == 8)
  {
    uint64_t v25 = (char *)v21;
    uint64_t v18 = v23;
    (*(void (**)(char *, char **, uint64_t))(v23 + 16))(v11, &v25, v6);
    swift_unknownObjectRelease();
    goto LABEL_4;
  }
  __break(1u);
LABEL_12:
  type metadata accessor for ComparisonResult(0);
  uint64_t v25 = v11;
  uint64_t result = sub_24558F718();
  __break(1u);
  return result;
}

uint64_t sub_24553D414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v31 = a5;
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v35 = *(void *)(Descriptor - 8);
  MEMORY[0x270FA5388](Descriptor);
  uint64_t v34 = (char *)&v30 - v11;
  uint64_t v12 = type metadata accessor for EditingState(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Request = type metadata accessor for DataStoreBatchFetchRequest();
  uint64_t v32 = *(void *)(Request - 8);
  uint64_t v33 = Request;
  MEMORY[0x270FA5388](Request);
  char v17 = (char *)&v30 - v16;
  sub_2454B7878();
  uint64_t v18 = *(int *)(Descriptor + 48);
  uint64_t v36 = a1;
  if (*(unsigned char *)(a1 + v18))
  {
    sub_2454F2B70();
    swift_allocError();
    *(unsigned char *)uint64_t v19 = 0;
    *(void *)(v19 + 8) = 0;
    *(void *)(v19 + 16) = 0;
    return swift_willThrow();
  }
  uint64_t v38 = MEMORY[0x263F8EE78];
  uint64_t v21 = v5 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  uint64_t v22 = v21;
  uint64_t v23 = v37;
  sub_2454D618C(v22, (uint64_t)v14, type metadata accessor for EditingState);
  uint64_t v24 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, v36, Descriptor);
  sub_245520C34((uint64_t)v14, v24, v23, (uint64_t)v17);
  if (*(void *)(v5 + 16))
  {
    uint64_t v25 = *(void *)(v5 + 16);
  }
  else
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v25 = result;
  }
  swift_beginAccess();
  uint64_t v26 = *(void *)(v25 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = (uint64_t *)(v26 + 80);
    while (1)
    {
      sub_24553D79C((uint64_t)(v28 - 6), *(v28 - 1), *v28, (uint64_t)&v38, (uint64_t)v17, a3, a4);
      if (v6) {
        break;
      }
      v28 += 7;
      if (!--v27)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v29 = v38;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24558B70C(v29, v5, v23, 0, v31);
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24553D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v12 = a2;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v12)
  {
    swift_unknownObjectRetain();
    uint64_t v13 = sub_2454FA724(a5, a6, a7);
    if (!v7) {
      sub_2455652B8(v13);
    }
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_24558EF78();
    sub_24558E668();
    sub_24558E668();
    sub_24558E668();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_24553D90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  unint64_t v10 = sub_245544930(MEMORY[0x263F8EE78]);
  int64_t v11 = *(void *)(a1 + 16);
  if (a3 >= 1) {
    uint64_t v12 = a3;
  }
  else {
    uint64_t v12 = *(void *)(a1 + 16);
  }
  if (a4) {
    uint64_t v13 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v13 = v12;
  }
  if (v13)
  {
    uint64_t v14 = (void *)v10;
    uint64_t v35 = a5;
    swift_retain();
    int64_t v34 = v11;
    uint64_t v15 = sub_245547E08(0, v11, v13, a1, v13);
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v15 + 16);
    if (!v16)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *uint64_t v35 = v14;
      v35[1] = a2;
      v35[2] = v13;
      v35[3] = v34;
      return result;
    }
    uint64_t v17 = 0;
    uint64_t v18 = v15 + 32;
    while (1)
    {
      uint64_t v20 = *(void *)(v18 + 8 * v17);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v23 = sub_2455211DC(v17);
      uint64_t v24 = v14[2];
      BOOL v25 = (v22 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25)) {
        break;
      }
      char v27 = v22;
      if (v14[3] >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_245526564();
        }
      }
      else
      {
        sub_245505460(v26, isUniquelyReferenced_nonNull_native);
        unint64_t v28 = sub_2455211DC(v17);
        if ((v27 & 1) != (v29 & 1)) {
          goto LABEL_25;
        }
        unint64_t v23 = v28;
      }
      if (v27)
      {
        uint64_t v19 = v14[7];
        swift_bridgeObjectRelease();
        *(void *)(v19 + 8 * v23) = v20;
      }
      else
      {
        v14[(v23 >> 6) + 8] |= 1 << v23;
        *(void *)(v14[6] + 8 * v23) = v17;
        *(void *)(v14[7] + 8 * v23) = v20;
        uint64_t v30 = v14[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_23;
        }
        uint64_t v14[2] = v32;
      }
      ++v17;
      swift_bridgeObjectRelease();
      if (v16 == v17) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  __break(1u);
LABEL_25:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t sub_24553DB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for EditingState(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v39 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Request = type metadata accessor for DataStoreFetchRequest();
  uint64_t v35 = *(void *)(Request - 8);
  uint64_t v36 = Request;
  MEMORY[0x270FA5388](Request);
  uint64_t v41 = (uint64_t)&v33 - v11;
  uint64_t v43 = a3;
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v13 = *(void *)(Descriptor - 8);
  uint64_t v14 = MEMORY[0x270FA5388](Descriptor);
  uint64_t v38 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v33 - v16;
  sub_2454B7878();
  uint64_t v18 = *(int *)(Descriptor + 48);
  char v19 = *(unsigned char *)(a1 + v18);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v42 = a1;
  uint64_t v37 = v20;
  v20(v17, a1, Descriptor);
  uint64_t v34 = v18;
  if (v19)
  {
    uint64_t v44 = *(void *)&v17[*(int *)(Descriptor + 36)];
    sub_24558DC98();
    sub_24558E8A8();
    swift_getWitnessTable();
    char v21 = sub_24558EAD8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, Descriptor);
    if ((v21 & 1) == 0)
    {
      sub_2454F2B70();
      swift_allocError();
      *(unsigned char *)uint64_t v22 = 3;
      *(void *)(v22 + 8) = 0;
      *(void *)(v22 + 16) = 0;
      swift_willThrow();
      return v18;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, Descriptor);
  }
  uint64_t v45 = MEMORY[0x263F8EE78];
  uint64_t v23 = v4 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  uint64_t v24 = v39;
  sub_2454D618C(v23, v39, type metadata accessor for EditingState);
  uint64_t v25 = (uint64_t)v38;
  uint64_t v26 = v42;
  v37(v38, v42, Descriptor);
  uint64_t v27 = v41;
  uint64_t v28 = v43;
  uint64_t v29 = sub_245496938(v24, v25, v41);
  uint64_t v18 = (uint64_t)&v33;
  MEMORY[0x270FA5388](v29);
  *(&v33 - 4) = a2;
  *(&v33 - 3) = v28;
  *(&v33 - 2) = (uint64_t)&v45;
  *(&v33 - 1) = v27;
  uint64_t v30 = v40;
  sub_2454B7AE4(sub_2455484EC);
  if (v30)
  {
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v27, v36);
    swift_bridgeObjectRelease();
  }
  else if ((*(unsigned char *)(v26 + v34) & 1) != 0 && *(unsigned char *)(v4 + 48) == 1)
  {
    uint64_t v31 = v45;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_24553F95C(v26, v31, a2, v28);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v27, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v27, v36);
    return v45;
  }
  return v18;
}

uint64_t sub_24553DFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v27 = a2;
  uint64_t Descriptor = type metadata accessor for FetchDescriptor();
  uint64_t v28 = *(void *)(Descriptor - 8);
  MEMORY[0x270FA5388](Descriptor);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = type metadata accessor for EditingState(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Request = type metadata accessor for DataStoreFetchRequest();
  uint64_t v29 = *(void *)(Request - 8);
  uint64_t v30 = Request;
  MEMORY[0x270FA5388](Request);
  uint64_t v17 = (void **)((char *)&v26 - v16);
  sub_2454B7878();
  if (*(unsigned char *)(a1 + *(int *)(Descriptor + 48)))
  {
    sub_2454F2B70();
    swift_allocError();
    *(unsigned char *)uint64_t v18 = 0;
    *(void *)(v18 + 8) = 0;
    *(void *)(v18 + 16) = 0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v20 = a1;
    uint64_t v32 = MEMORY[0x263F8EE78];
    uint64_t v21 = v5 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    sub_2454D618C(v21, (uint64_t)v14, type metadata accessor for EditingState);
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v11, v20, Descriptor);
    uint64_t v22 = sub_245496938((uint64_t)v14, (uint64_t)v11, (uint64_t)v17);
    MEMORY[0x270FA5388](v22);
    *(&v26 - 4) = a3;
    *(&v26 - 3) = a4;
    *(&v26 - 2) = &v32;
    *(&v26 - 1) = v17;
    uint64_t v23 = v31;
    sub_2454B7AE4(sub_2455463FC);
    if (!v23)
    {
      uint64_t v24 = swift_bridgeObjectRetain();
      uint64_t v25 = sub_2455362D0(v24);
      swift_bridgeObjectRelease();
      swift_retain();
      sub_24553D90C(v25, v5, v27, 0, v26);
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v17, v30);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24553E2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 96))(a4, a5, a6, ObjectType, a2);
  if (!v6) {
    return sub_2454D29D4(result);
  }
  return result;
}

uint64_t sub_24553E384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v127 = a4;
  uint64_t v5 = a3;
  uint64_t v122 = a1;
  v134[17] = a3;
  uint64_t v126 = sub_24558E228();
  uint64_t v121 = sub_24558ECE8();
  unint64_t v117 = *(void **)(v121 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v121 - 8);
  uint64_t v124 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v113 = (char *)&v109 - v9;
  uint64_t v10 = swift_allocObject();
  uint64_t v128 = v10;
  *(void *)(v10 + 16) = 0;
  uint64_t v11 = (void *)(v10 + 16);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v4 + 104);
  swift_beginAccess();
  uint64_t v110 = v4;
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = v12;
  uint64_t v15 = a2;
  uint64_t v16 = sub_2454DBB90(v13, v14);
  uint64_t v17 = *(void *)(v16 + 56);
  uint64_t v125 = v16 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v23 = 0;
  uint64_t v116 = result;
  if (v20) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v26 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  uint64_t v27 = v124;
  if (v26 >= v21) {
    goto LABEL_27;
  }
  unint64_t v28 = *(void *)(v125 + 8 * v26);
  ++v23;
  if (v28) {
    goto LABEL_20;
  }
  int64_t v23 = v26 + 1;
  if (v26 + 1 < v21)
  {
    unint64_t v28 = *(void *)(v125 + 8 * v23);
    if (v28) {
      goto LABEL_20;
    }
    int64_t v23 = v26 + 2;
    if (v26 + 2 < v21)
    {
      unint64_t v28 = *(void *)(v125 + 8 * v23);
      if (!v28)
      {
        int64_t v29 = v26 + 3;
        if (v29 < v21)
        {
          unint64_t v28 = *(void *)(v125 + 8 * v29);
          if (v28)
          {
            int64_t v23 = v29;
            goto LABEL_20;
          }
          while (1)
          {
            int64_t v23 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              break;
            }
            if (v23 >= v21) {
              goto LABEL_27;
            }
            unint64_t v28 = *(void *)(v125 + 8 * v23);
            ++v29;
            if (v28) {
              goto LABEL_20;
            }
          }
LABEL_119:
          __break(1u);
          goto LABEL_120;
        }
        goto LABEL_27;
      }
LABEL_20:
      unint64_t v20 = (v28 - 1) & v28;
      for (unint64_t i = __clz(__rbit64(v28)) + (v23 << 6); ; unint64_t i = v24 | (v23 << 6))
      {
        uint64_t v30 = (void *)(*(void *)(v16 + 48) + 16 * i);
        uint64_t v31 = v30[1];
        unint64_t v129 = (void *)*v30;
        uint64_t v32 = (uint64_t)v129;
        uint64_t v130 = v31;
        swift_unknownObjectRetain_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
        if (swift_dynamicCast())
        {
          swift_unknownObjectRelease();
          uint64_t v33 = v11;
          uint64_t v34 = v128;
          sub_24553F494(v128, v15, v5, v127);
          swift_beginAccess();
          if (*(void *)(v34 + 16))
          {
            sub_2454EBEC8(v32, v31);
            swift_endAccess();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_endAccess();
          }
          uint64_t result = swift_unknownObjectRelease();
          uint64_t v11 = v33;
          uint64_t v16 = v116;
          if (!v20) {
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t result = swift_unknownObjectRelease();
          if (!v20) {
            goto LABEL_7;
          }
        }
LABEL_6:
        unint64_t v24 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
      }
    }
  }
LABEL_27:
  uint64_t v125 = v15;
  swift_release();
  uint64_t v35 = v110;
  swift_beginAccess();
  uint64_t v36 = *(void *)(v35 + 88);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = sub_2454DBB90(v37, v36);
  if (*(void *)(v16 + 16) <= *(void *)(v38 + 16) >> 3)
  {
    unint64_t v129 = (void *)v38;
    uint64_t result = sub_2455341AC(v16);
    uint64_t v39 = v129;
  }
  else
  {
    uint64_t result = sub_245534350(v16, v38);
    uint64_t v39 = (void *)result;
  }
  uint64_t v40 = v126;
  int64_t v41 = 0;
  uint64_t v42 = v39[7];
  uint64_t v114 = (uint64_t)(v39 + 7);
  uint64_t v43 = 1 << *((unsigned char *)v39 + 32);
  uint64_t v44 = -1;
  if (v43 < 64) {
    uint64_t v44 = ~(-1 << v43);
  }
  unint64_t v45 = v44 & v42;
  int64_t v115 = (unint64_t)(v43 + 63) >> 6;
  uint64_t v120 = (void (**)(char *, uint64_t, uint64_t))(v117 + 2);
  uint64_t v119 = v126 - 8;
  uint64_t v111 = (void (**)(char *, uint64_t))(v117 + 1);
  unint64_t v117 = v11;
  uint64_t v118 = v5;
  uint64_t v112 = v39;
  if ((v44 & v42) == 0) {
    goto LABEL_34;
  }
LABEL_33:
  unint64_t v46 = __clz(__rbit64(v45));
  v45 &= v45 - 1;
  for (unint64_t j = v46 | (v41 << 6); ; unint64_t j = __clz(__rbit64(v49)) + (v41 << 6))
  {
    uint64_t v51 = (void *)(v39[6] + 16 * j);
    uint64_t v52 = v51[1];
    unint64_t v129 = (void *)*v51;
    uint64_t v53 = (uint64_t)v129;
    uint64_t v130 = v52;
    swift_unknownObjectRetain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
    if (swift_dynamicCast())
    {
      uint64_t v54 = v134[0];
      uint64_t v55 = v113;
      uint64_t v56 = v121;
      (*v120)(v113, v122, v121);
      uint64_t v57 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v40) == 1)
      {
        (*v111)(v55, v56);
LABEL_53:
        uint64_t v27 = v124;
        uint64_t v11 = v117;
        uint64_t v5 = v118;
        uint64_t v65 = v128;
        sub_24553F494(v128, v125, v118, v127);
        swift_beginAccess();
        if (*(void *)(v65 + 16))
        {
          swift_unknownObjectRetain();
          sub_2454DA36C(v134, v53, v52);
          swift_endAccess();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_endAccess();
        }
        swift_unknownObjectRelease();
        uint64_t result = swift_unknownObjectRelease();
        uint64_t v40 = v126;
        uint64_t v39 = v112;
        if (v45) {
          goto LABEL_33;
        }
        goto LABEL_34;
      }
      v134[0] = v54;
      unint64_t v129 = v134;
      swift_unknownObjectRetain();
      uint64_t v60 = v40;
      uint64_t v61 = (uint64_t)v55;
      uint64_t v62 = v123;
      char v63 = sub_24558E208();
      uint64_t v123 = v62;
      if (v62)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v60);
        goto LABEL_114;
      }
      char v64 = v63;
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v60);
      if (v64) {
        goto LABEL_53;
      }
      swift_unknownObjectRelease();
      uint64_t v58 = v127;
      uint64_t v27 = v124;
      uint64_t v11 = v117;
      uint64_t v5 = v118;
      uint64_t v39 = v112;
    }
    else
    {
      uint64_t v58 = v127;
    }
    uint64_t v59 = v128;
    sub_24553F494(v128, v125, v5, v58);
    swift_beginAccess();
    if (*(void *)(v59 + 16))
    {
      sub_2454EBEC8(v53, v52);
      swift_endAccess();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_endAccess();
    }
    uint64_t result = swift_unknownObjectRelease();
    uint64_t v40 = v126;
    if (v45) {
      goto LABEL_33;
    }
LABEL_34:
    BOOL v48 = __OFADD__(v41++, 1);
    if (v48) {
      goto LABEL_117;
    }
    if (v41 >= v115)
    {
LABEL_66:
      swift_release();
      uint64_t v66 = v110;
      swift_beginAccess();
      uint64_t v67 = *(void *)(v66 + 72);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v68 = swift_bridgeObjectRetain();
      uint64_t v69 = sub_2454DBB90(v68, v67);
      if (*(void *)(v116 + 16) <= *(void *)(v69 + 16) >> 3)
      {
        unint64_t v129 = (void *)v69;
        sub_2455341AC(v116);
        uint64_t v40 = v126;
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v70 = (uint64_t)v129;
      }
      else
      {
        uint64_t v70 = sub_245534350(v116, v69);
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v71 = 0;
      uint64_t v72 = *(void *)(v70 + 56);
      int64_t v115 = v70 + 56;
      uint64_t v73 = 1 << *(unsigned char *)(v70 + 32);
      uint64_t v74 = -1;
      if (v73 < 64) {
        uint64_t v74 = ~(-1 << v73);
      }
      unint64_t v75 = v74 & v72;
      uint64_t v116 = (unint64_t)(v73 + 63) >> 6;
      uint64_t v114 = v70;
      if ((v74 & v72) != 0) {
        goto LABEL_74;
      }
LABEL_75:
      BOOL v48 = __OFADD__(v71++, 1);
      if (!v48)
      {
        if (v71 < v116)
        {
          unint64_t v78 = *(void *)(v115 + 8 * v71);
          if (v78)
          {
LABEL_85:
            unint64_t v75 = (v78 - 1) & v78;
            for (unint64_t k = __clz(__rbit64(v78)) + (v71 << 6); ; unint64_t k = v76 | (v71 << 6))
            {
              uint64_t v80 = (void *)(*(void *)(v70 + 48) + 16 * k);
              uint64_t v82 = v80[1];
              unint64_t v129 = (void *)*v80;
              uint64_t v81 = (uint64_t)v129;
              uint64_t v130 = v82;
              swift_unknownObjectRetain_n();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
              if ((swift_dynamicCast() & 1) == 0)
              {
                uint64_t result = swift_unknownObjectRelease();
                if (!v75) {
                  goto LABEL_75;
                }
                goto LABEL_74;
              }
              uint64_t v83 = v133[0];
              uint64_t v84 = v121;
              (*v120)(v27, v122, v121);
              uint64_t v85 = *(void *)(v40 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v27, 1, v40) == 1)
              {
                (*v111)(v27, v84);
                uint64_t v86 = v127;
              }
              else
              {
                v133[0] = v83;
                unint64_t v129 = v133;
                swift_unknownObjectRetain();
                uint64_t v87 = v40;
                uint64_t v61 = (uint64_t)v27;
                uint64_t v88 = v123;
                char v89 = sub_24558E208();
                uint64_t v123 = v88;
                if (v88)
                {
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  swift_release();
                  swift_unknownObjectRelease();
                  (*(void (**)(char *, uint64_t))(v85 + 8))(v27, v87);
                  goto LABEL_114;
                }
                char v90 = v89;
                swift_unknownObjectRelease();
                (*(void (**)(char *, uint64_t))(v85 + 8))(v27, v87);
                if ((v90 & 1) == 0)
                {
                  swift_unknownObjectRelease();
                  uint64_t result = swift_unknownObjectRelease();
                  uint64_t v40 = v126;
                  uint64_t v27 = v124;
                  uint64_t v5 = v118;
                  uint64_t v11 = v117;
                  goto LABEL_97;
                }
                uint64_t v86 = v127;
                uint64_t v27 = v124;
              }
              uint64_t v5 = v118;
              uint64_t v11 = v117;
              uint64_t v91 = v128;
              sub_24553F494(v128, v125, v118, v86);
              swift_beginAccess();
              if (*(void *)(v91 + 16))
              {
                swift_unknownObjectRetain();
                sub_2454DA36C(v133, v81, v82);
                swift_endAccess();
                swift_unknownObjectRelease();
              }
              else
              {
                swift_endAccess();
              }
              swift_unknownObjectRelease();
              uint64_t result = swift_unknownObjectRelease();
              uint64_t v40 = v126;
LABEL_97:
              uint64_t v70 = v114;
              if (!v75) {
                goto LABEL_75;
              }
LABEL_74:
              unint64_t v76 = __clz(__rbit64(v75));
              v75 &= v75 - 1;
            }
          }
          uint64_t v79 = v71 + 1;
          if (v71 + 1 < v116)
          {
            unint64_t v78 = *(void *)(v115 + 8 * v79);
            if (v78) {
              goto LABEL_84;
            }
            uint64_t v79 = v71 + 2;
            if (v71 + 2 >= v116) {
              goto LABEL_103;
            }
            unint64_t v78 = *(void *)(v115 + 8 * v79);
            if (v78)
            {
LABEL_84:
              uint64_t v71 = v79;
              goto LABEL_85;
            }
            uint64_t v79 = v71 + 3;
            if (v71 + 3 < v116)
            {
              unint64_t v78 = *(void *)(v115 + 8 * v79);
              if (!v78)
              {
                while (1)
                {
                  uint64_t v71 = v79 + 1;
                  if (__OFADD__(v79, 1)) {
                    goto LABEL_121;
                  }
                  if (v71 >= v116) {
                    goto LABEL_103;
                  }
                  unint64_t v78 = *(void *)(v115 + 8 * v71);
                  ++v79;
                  if (v78) {
                    goto LABEL_85;
                  }
                }
              }
              goto LABEL_84;
            }
          }
        }
LABEL_103:
        swift_release();
        uint64_t v92 = swift_beginAccess();
        if (*v11)
        {
          unint64_t v129 = (void *)*v11;
          MEMORY[0x270FA5388](v92);
          uint64_t v93 = v127;
          *(&v109 - 2) = v5;
          *(&v109 - 1) = v93;
          swift_bridgeObjectRetain();
          uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8E40);
          uint64_t v95 = sub_245487C4C(&qword_26B0D8880, &qword_26B0D8E40);
          uint64_t v97 = sub_2454C7F30((void (*)(char *, char *))sub_245548384, (uint64_t)(&v109 - 4), v94, v5, MEMORY[0x263F8E628], v95, MEMORY[0x263F8E658], v96);
          swift_bridgeObjectRelease();
          uint64_t Descriptor = type metadata accessor for FetchDescriptor();
          uint64_t v99 = v122;
          uint64_t v100 = *(void *)(v122 + *(int *)(Descriptor + 36));
          uint64_t v101 = sub_24558DC98();
          swift_bridgeObjectRetain();
          uint64_t v102 = MEMORY[0x2456A12B0](v100, v101);
          if (v102 <= 0)
          {
            uint64_t v61 = v97;
          }
          else
          {
            unint64_t v129 = (void *)v97;
            MEMORY[0x270FA5388](v102);
            *(&v109 - 4) = v5;
            *(&v109 - 3) = v93;
            *(&v109 - 2) = v99;
            sub_24558E8A8();
            swift_getWitnessTable();
            uint64_t v99 = v122;
            uint64_t v61 = sub_24558E748();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v103 = v99 + *(int *)(Descriptor + 40);
          if (*(unsigned char *)(v103 + 8) == 1
            || *(uint64_t *)v103 < 1
            || (uint64_t v104 = *(void *)v103, v104 >= MEMORY[0x2456A12B0](v61, v5)))
          {
LABEL_114:
            swift_release();
          }
          else
          {
            unint64_t v129 = (void *)sub_24558E8E8();
            uint64_t v130 = v105;
            uint64_t v131 = v106;
            uint64_t v132 = v107;
            sub_24558EDE8();
            swift_getWitnessTable();
            uint64_t v108 = sub_24558E8D8();
            swift_release();
            swift_bridgeObjectRelease();
            return v108;
          }
        }
        else
        {
          uint64_t v61 = v125;
          swift_bridgeObjectRetain();
          swift_release();
        }
        return v61;
      }
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    unint64_t v49 = *(void *)(v114 + 8 * v41);
    if (v49) {
      goto LABEL_44;
    }
    int64_t v50 = v41 + 1;
    if (v41 + 1 >= v115) {
      goto LABEL_66;
    }
    unint64_t v49 = *(void *)(v114 + 8 * v50);
    if (!v49)
    {
      int64_t v50 = v41 + 2;
      if (v41 + 2 >= v115) {
        goto LABEL_66;
      }
      unint64_t v49 = *(void *)(v114 + 8 * v50);
      if (!v49)
      {
        int64_t v50 = v41 + 3;
        if (v41 + 3 >= v115) {
          goto LABEL_66;
        }
        unint64_t v49 = *(void *)(v114 + 8 * v50);
        if (!v49) {
          break;
        }
      }
    }
    int64_t v41 = v50;
LABEL_44:
    unint64_t v45 = (v49 - 1) & v49;
  }
  while (1)
  {
    int64_t v41 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    if (v41 >= v115) {
      goto LABEL_66;
    }
    unint64_t v49 = *(void *)(v114 + 8 * v41);
    ++v50;
    if (v49) {
      goto LABEL_44;
    }
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
  return result;
}

uint64_t sub_24553F494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (uint64_t *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  if (!*(void *)(a1 + 16))
  {
    v15[5] = a2;
    MEMORY[0x270FA5388](result);
    _OWORD v15[2] = a3;
    void v15[3] = a4;
    uint64_t v10 = sub_24558E8A8();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v13 = sub_2454C7F30((void (*)(char *, char *))sub_2455483C8, (uint64_t)v15, v10, (uint64_t)&type metadata for ModelContext.AnyPersistentObject, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v12);
    uint64_t v14 = sub_24556AB98(v13);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *uint64_t v8 = v14;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24553F5CC()
{
  return swift_dynamicCast();
}

uint64_t sub_24553F63C(uint64_t *a1, uint64_t *a2, void (**a3)(char *, uint64_t *, uint64_t))
{
  unint64_t v24 = a3;
  uint64_t v6 = sub_24558DC98();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v23 - v11;
  uint64_t v13 = *a1;
  uint64_t v25 = *a2;
  uint64_t v26 = v13;
  uint64_t v14 = *(uint64_t *)((char *)v24 + *(int *)(type metadata accessor for FetchDescriptor() + 36));
  uint64_t v15 = swift_bridgeObjectRetain();
  if (!MEMORY[0x2456A12E0](v15, v6))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v16 = 0;
  v23[1] = v3;
  unint64_t v24 = (void (**)(char *, uint64_t *, uint64_t))(v7 + 16);
  uint64_t v17 = (void (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    char v18 = sub_24558E848();
    sub_24558E7F8();
    if ((v18 & 1) == 0) {
      break;
    }
    uint64_t v19 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, v14+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, v6);
    uint64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_11;
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    uint64_t v28 = v26;
    uint64_t v27 = v25;
    uint64_t v19 = sub_24558DC78();
    if (v19) {
      goto LABEL_12;
    }
    (*v17)(v10, v6);
    ++v16;
    if (v20 == MEMORY[0x2456A12E0](v14, v6)) {
      goto LABEL_14;
    }
  }
  uint64_t v19 = sub_24558EFE8();
  if (v23[0] != 8)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v28 = v19;
  (*v24)(v12, &v28, v6);
  uint64_t v19 = swift_unknownObjectRelease();
  uint64_t v20 = v16 + 1;
  if (!__OFADD__(v16, 1)) {
    goto LABEL_5;
  }
LABEL_11:
  __break(1u);
LABEL_12:
  if (v19 == 1)
  {
    (*v17)(v10, v6);
    goto LABEL_14;
  }
  if (v19 == -1)
  {
    (*v17)(v10, v6);
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_19:
  uint64_t v22 = v19;
  type metadata accessor for ComparisonResult(0);
  uint64_t v28 = v22;
  uint64_t result = sub_24558F718();
  __break(1u);
  return result;
}

uint64_t sub_24553F95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v255 = a1;
  v237[1] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D7B30);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  v249 = (char *)v237 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v251 = (char *)v237 - v10;
  uint64_t v289 = a3;
  uint64_t v11 = sub_24558E228();
  uint64_t v12 = sub_24558ECE8();
  uint64_t v238 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  v247 = (char *)v237 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v248 = (char *)v237 - v15;
  uint64_t v274 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v259 = *(void *)(v274 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v274);
  uint64_t v268 = (uint64_t)v237 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v263 = (uint64_t)v237 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v261 = (uint64_t)v237 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v264 = (uint64_t)v237 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v272 = (uint64_t)v237 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v269 = (uint64_t)v237 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v271 = (char *)v237 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v265 = (uint64_t)v237 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v262 = (uint64_t)v237 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v266 = (char *)v237 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v273 = (uint64_t)v237 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v270 = (uint64_t)v237 - v38;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
  v253 = (void (**)(char *, uint64_t))((char *)v237 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)v237 - v42;
  unint64_t v288 = 0;
  swift_beginAccess();
  uint64_t v44 = *(void *)(v4 + 104);
  swift_beginAccess();
  uint64_t v239 = v4;
  swift_bridgeObjectRetain();
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_2454DBB90(v45, v44);
  uint64_t v47 = -1 << *(unsigned char *)(v46 + 32);
  uint64_t v48 = ~v47;
  uint64_t v49 = -v47;
  if (v49 < 64) {
    uint64_t v50 = ~(-1 << v49);
  }
  else {
    uint64_t v50 = -1;
  }
  uint64_t v51 = v50 & *(void *)(v46 + 56);
  uint64_t v281 = v46;
  uint64_t v282 = v46 + 56;
  uint64_t v283 = v48;
  uint64_t v284 = 0;
  uint64_t v285 = v51;
  v286 = sub_245548504;
  uint64_t v287 = 0;
  uint64_t v240 = v46;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v52 = sub_245533CB8();
  uint64_t v254 = a2;
  uint64_t v257 = v11;
  uint64_t v258 = a3;
  uint64_t v260 = v12;
  if (v52)
  {
    uint64_t v54 = v52;
    uint64_t v55 = v53;
    v250 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v259 + 56);
    v246 = v43;
    do
    {
      v276 = (void *)v54;
      uint64_t v277 = v55;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_unknownObjectRelease();
        goto LABEL_7;
      }
      swift_unknownObjectRelease();
      if (!v288)
      {
        uint64_t v57 = swift_bridgeObjectRetain();
        uint64_t v58 = sub_24556AEAC(v57);
        swift_bridgeObjectRelease();
        unint64_t v288 = v58;
        uint64_t v12 = v260;
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      if (!v288)
      {
        swift_endAccess();
        swift_unknownObjectRelease();
        (*v250)(v43, 1, 1, v274);
        sub_2454D61F4((uint64_t)v43, &qword_26B0D9280);
        goto LABEL_7;
      }
      uint64_t ObjectType = swift_getObjectType();
      v252 = (void (**)(char *, uint64_t, uint64_t))v54;
      PersistentModel.persistentModelID.getter(ObjectType, v55, v270);
      unint64_t v60 = v288;
      sub_24558F7D8();
      sub_24558E158();
      sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
      swift_bridgeObjectRetain();
      sub_24558E4D8();
      uint64_t v61 = sub_24558F818();
      uint64_t v62 = -1 << *(unsigned char *)(v60 + 32);
      unint64_t v63 = v61 & ~v62;
      if (((*(void *)(v60 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63) & 1) == 0)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        uint64_t v75 = 1;
        uint64_t v11 = v257;
        uint64_t v12 = v260;
        uint64_t v43 = v246;
        goto LABEL_41;
      }
      uint64_t v267 = ~v62;
      uint64_t v64 = *(int *)(v274 + 20);
      uint64_t v65 = *(void *)(v259 + 72);
      while (1)
      {
        uint64_t v66 = v273;
        sub_2454D618C(*(void *)(v60 + 48) + v65 * v63, v273, type metadata accessor for PersistentIdentifier);
        uint64_t v67 = *(void *)(v66 + *(int *)(v274 + 20));
        uint64_t v68 = *(void *)(v270 + v64);
        uint64_t v69 = *(void *)(v67 + 24);
        uint64_t v70 = *(void *)(v68 + 24);
        if (v69)
        {
          if (!v70
            || (*(void *)(v67 + 16) == *(void *)(v68 + 16) ? (BOOL v71 = v69 == v70) : (BOOL v71 = 0),
                !v71 && (sub_24558F598() & 1) == 0))
          {
LABEL_15:
            sub_24549F868(v273, type metadata accessor for PersistentIdentifier);
            goto LABEL_16;
          }
        }
        else if (v70)
        {
          goto LABEL_15;
        }
        BOOL v72 = *(void *)(v67 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v68 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
           && *(void *)(v67 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v68 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
        if (!v72 && (sub_24558F598() & 1) == 0) {
          goto LABEL_15;
        }
        if (*(void *)(v67 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v68 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
          && *(void *)(v67 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v68 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
        {
          break;
        }
        char v74 = sub_24558F598();
        sub_24549F868(v273, type metadata accessor for PersistentIdentifier);
        if (v74) {
          goto LABEL_38;
        }
LABEL_16:
        unint64_t v63 = (v63 + 1) & v267;
        if (((*(void *)(v60 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63) & 1) == 0) {
          goto LABEL_35;
        }
      }
      sub_24549F868(v273, type metadata accessor for PersistentIdentifier);
LABEL_38:
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v77 = (void *)v288;
      v276 = (void *)v288;
      unint64_t v288 = 0x8000000000000000;
      uint64_t v11 = v257;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_245509044();
        uint64_t v77 = v276;
      }
      uint64_t v43 = v246;
      sub_2454D601C(v77[6] + v65 * v63, (uint64_t)v246, type metadata accessor for PersistentIdentifier);
      sub_245543E5C(v63);
      unint64_t v288 = (unint64_t)v276;
      swift_bridgeObjectRelease();
      uint64_t v75 = 0;
      uint64_t v12 = v260;
LABEL_41:
      (*v250)(v43, v75, 1, v274);
      swift_endAccess();
      swift_unknownObjectRelease();
      sub_24549F868(v270, type metadata accessor for PersistentIdentifier);
      sub_2454D61F4((uint64_t)v43, &qword_26B0D9280);
LABEL_7:
      uint64_t v54 = sub_245533CB8();
      uint64_t v55 = v56;
    }
    while (v54);
  }
  sub_2454E0658();
  swift_release();
  uint64_t v78 = v239;
  swift_beginAccess();
  uint64_t v79 = *(void *)(v78 + 88);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v80 = swift_bridgeObjectRetain();
  uint64_t v81 = sub_2454DBB90(v80, v79);
  if (*(void *)(v240 + 16) <= *(void *)(v81 + 16) >> 3)
  {
    v276 = (void *)v81;
    sub_2455341AC(v240);
    uint64_t v82 = (uint64_t)v276;
  }
  else
  {
    uint64_t v82 = sub_245534350(v240, v81);
  }
  uint64_t v83 = -1 << *(unsigned char *)(v82 + 32);
  uint64_t v84 = ~v83;
  uint64_t v85 = -v83;
  if (v85 < 64) {
    uint64_t v86 = ~(-1 << v85);
  }
  else {
    uint64_t v86 = -1;
  }
  uint64_t v87 = v86 & *(void *)(v82 + 56);
  uint64_t v281 = v82;
  uint64_t v282 = v82 + 56;
  uint64_t v283 = v84;
  uint64_t v284 = 0;
  uint64_t v285 = v87;
  v286 = sub_245541AA4;
  uint64_t v287 = 0;
  uint64_t v88 = sub_245533CB8();
  if (!v88)
  {
LABEL_154:
    sub_2454E0658();
    swift_release();
    uint64_t v169 = v239;
    swift_beginAccess();
    uint64_t v170 = *(void *)(v169 + 72);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v171 = swift_bridgeObjectRetain();
    uint64_t v172 = sub_2454DBB90(v171, v170);
    if (*(void *)(v240 + 16) <= *(void *)(v172 + 16) >> 3)
    {
      v276 = (void *)v172;
      sub_2455341AC(v240);
      swift_bridgeObjectRelease();
      uint64_t v173 = (uint64_t)v276;
    }
    else
    {
      uint64_t v173 = sub_245534350(v240, v172);
      swift_bridgeObjectRelease();
    }
    uint64_t v174 = -1 << *(unsigned char *)(v173 + 32);
    uint64_t v175 = ~v174;
    uint64_t v176 = -v174;
    if (v176 < 64) {
      uint64_t v177 = ~(-1 << v176);
    }
    else {
      uint64_t v177 = -1;
    }
    uint64_t v178 = v177 & *(void *)(v173 + 56);
    uint64_t v281 = v173;
    uint64_t v282 = v173 + 56;
    uint64_t v283 = v175;
    uint64_t v284 = 0;
    uint64_t v285 = v178;
    v286 = sub_245548508;
    uint64_t v287 = 0;
    uint64_t v179 = sub_245533CB8();
    if (!v179)
    {
LABEL_233:
      sub_2454E0658();
      swift_release();
      if (v288)
      {
        uint64_t v231 = swift_bridgeObjectRetain();
        size_t v164 = sub_245557590(v231);
        swift_bridgeObjectRelease();
        uint64_t v232 = v255 + *(int *)(type metadata accessor for FetchDescriptor() + 40);
        if ((*(unsigned char *)(v232 + 8) & 1) != 0
          || (unint64_t v104 = *(void *)v232, *(uint64_t *)v232 < 1)
          || v104 >= *(void *)(v164 + 16))
        {
          uint64_t v91 = v164;
        }
        else
        {
          sub_24558F608();
          swift_unknownObjectRetain_n();
          uint64_t v233 = swift_dynamicCastClass();
          if (!v233)
          {
            swift_release();
            uint64_t v233 = MEMORY[0x263F8EE78];
          }
          uint64_t v234 = *(void *)(v233 + 16);
          swift_release();
          if (v234 != v104) {
            goto LABEL_252;
          }
          uint64_t v91 = swift_dynamicCastClass();
          swift_release();
          if (!v91)
          {
            uint64_t v91 = MEMORY[0x263F8EE78];
            goto LABEL_242;
          }
        }
LABEL_248:
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v91 = v254;
        swift_bridgeObjectRetain();
      }
      return v91;
    }
    uint64_t v181 = v179;
    uint64_t v91 = v180;
    uint64_t v270 = v11 - 8;
    v271 = (char *)(v238 + 16);
    v253 = (void (**)(char *, uint64_t))(v238 + 8);
LABEL_164:
    v276 = (void *)v181;
    uint64_t v277 = v91;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_unknownObjectRelease();
      goto LABEL_163;
    }
    uint64_t v272 = v181;
    uint64_t v183 = v278;
    uint64_t v184 = v247;
    uint64_t v185 = v260;
    (*(void (**)(char *, uint64_t, uint64_t))v271)(v247, v255, v260);
    uint64_t v186 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v184, 1, v11) == 1)
    {
      (*v253)(v184, v185);
      if (v288)
      {
LABEL_168:
        swift_beginAccess();
        if (!v288)
        {
          swift_endAccess();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D7B28);
          uint64_t v212 = (uint64_t)v249;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v211 - 8) + 56))(v249, 1, 1, v211);
          goto LABEL_232;
        }
        uint64_t v269 = v183;
        uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D7B28);
        v266 = &v249[*(int *)(v189 + 48)];
        uint64_t v267 = v189;
        uint64_t v190 = swift_getObjectType();
        PersistentModel.persistentModelID.getter(v190, v91, v264);
        unint64_t v191 = v288;
        sub_24558F7D8();
        uint64_t v192 = sub_24558E158();
        uint64_t v193 = sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
        swift_bridgeObjectRetain();
        uint64_t v265 = v192;
        uint64_t v262 = v193;
        sub_24558E4D8();
        uint64_t v194 = sub_24558F818();
        uint64_t v195 = -1 << *(unsigned char *)(v191 + 32);
        unint64_t v104 = v194 & ~v195;
        if ((*(void *)(v191 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104))
        {
          uint64_t v273 = ~v195;
          uint64_t v196 = *(int *)(v274 + 20);
          uint64_t v197 = *(void *)(v259 + 72);
          do
          {
            uint64_t v198 = v268;
            sub_2454D618C(*(void *)(v191 + 48) + v197 * v104, v268, type metadata accessor for PersistentIdentifier);
            uint64_t v199 = *(void *)(v198 + *(int *)(v274 + 20));
            uint64_t v200 = *(void *)(v264 + v196);
            uint64_t v201 = *(void *)(v199 + 24);
            uint64_t v202 = *(void *)(v200 + 24);
            if (v201)
            {
              if (!v202
                || (*(void *)(v199 + 16) == *(void *)(v200 + 16) ? (BOOL v203 = v201 == v202) : (BOOL v203 = 0),
                    !v203 && (sub_24558F598() & 1) == 0))
              {
LABEL_172:
                sub_24549F868(v268, type metadata accessor for PersistentIdentifier);
                goto LABEL_173;
              }
            }
            else if (v202)
            {
              goto LABEL_172;
            }
            BOOL v204 = *(void *)(v199 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v200 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
                && *(void *)(v199 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v200 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
            if (!v204 && (sub_24558F598() & 1) == 0) {
              goto LABEL_172;
            }
            if (*(void *)(v199 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v200 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
              && *(void *)(v199 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v200 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
            {
              sub_24549F868(v268, type metadata accessor for PersistentIdentifier);
LABEL_230:
              swift_bridgeObjectRelease();
              sub_24549F868(v264, type metadata accessor for PersistentIdentifier);
              sub_2454D618C(*(void *)(v288 + 48) + v197 * v104, (uint64_t)v266, type metadata accessor for PersistentIdentifier);
              char v230 = 0;
LABEL_231:
              swift_endAccess();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              uint64_t v212 = (uint64_t)v249;
              char *v249 = v230;
              (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v267 - 8) + 56))(v212, 0, 1);
              uint64_t v11 = v257;
LABEL_232:
              sub_2454D61F4(v212, &qword_26B0D7B30);
LABEL_163:
              uint64_t v181 = sub_245533CB8();
              uint64_t v91 = v182;
              if (!v181) {
                goto LABEL_233;
              }
              goto LABEL_164;
            }
            char v206 = sub_24558F598();
            sub_24549F868(v268, type metadata accessor for PersistentIdentifier);
            if (v206) {
              goto LABEL_230;
            }
LABEL_173:
            unint64_t v104 = (v104 + 1) & v273;
          }
          while (((*(void *)(v191 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104) & 1) != 0);
        }
        swift_bridgeObjectRelease();
        int v210 = swift_isUniquelyReferenced_nonNull_native();
        sub_2454D618C(v264, v261, type metadata accessor for PersistentIdentifier);
        size_t v275 = v288;
        unint64_t v288 = 0x8000000000000000;
        if (*(void *)(v275 + 24) > *(void *)(v275 + 16))
        {
          if ((v210 & 1) == 0) {
            sub_245509044();
          }
          goto LABEL_227;
        }
        if (v210) {
          sub_245507AD8();
        }
        else {
          sub_24547AD6C();
        }
        size_t v213 = v275;
        sub_24558F7D8();
        sub_24558E4D8();
        uint64_t v214 = sub_24558F818();
        uint64_t v215 = -1 << *(unsigned char *)(v213 + 32);
        unint64_t v104 = v214 & ~v215;
        if (((*(void *)(v213 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104) & 1) == 0)
        {
LABEL_227:
          size_t v164 = v275;
          *(void *)(v275 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v104;
          sub_2454D601C(v261, *(void *)(v164 + 48) + *(void *)(v259 + 72) * v104, type metadata accessor for PersistentIdentifier);
          uint64_t v228 = *(void *)(v164 + 16);
          BOOL v166 = __OFADD__(v228, 1);
          uint64_t v229 = v228 + 1;
          if (!v166)
          {
            *(void *)(v164 + 16) = v229;
            unint64_t v288 = v164;
            swift_bridgeObjectRelease();
            sub_2454D601C(v264, (uint64_t)v266, type metadata accessor for PersistentIdentifier);
            char v230 = 1;
            goto LABEL_231;
          }
          goto LABEL_251;
        }
        uint64_t v216 = ~v215;
        uint64_t v217 = *(int *)(v274 + 20);
        uint64_t v218 = *(void *)(v259 + 72);
        while (1)
        {
          uint64_t v219 = v263;
          sub_2454D618C(*(void *)(v213 + 48) + v218 * v104, v263, type metadata accessor for PersistentIdentifier);
          uint64_t v220 = *(void *)(v219 + *(int *)(v274 + 20));
          uint64_t v221 = *(void *)(v261 + v217);
          uint64_t v222 = *(void *)(v220 + 24);
          uint64_t v223 = *(void *)(v221 + 24);
          if (v222)
          {
            if (!v223
              || (*(void *)(v220 + 16) == *(void *)(v221 + 16) ? (BOOL v224 = v222 == v223) : (BOOL v224 = 0),
                  !v224 && (sub_24558F598() & 1) == 0))
            {
LABEL_207:
              sub_24549F868(v263, type metadata accessor for PersistentIdentifier);
              goto LABEL_208;
            }
          }
          else if (v223)
          {
            goto LABEL_207;
          }
          BOOL v225 = *(void *)(v220 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v221 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
              && *(void *)(v220 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v221 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
          if (!v225 && (sub_24558F598() & 1) == 0) {
            goto LABEL_207;
          }
          if (*(void *)(v220 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v221 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
            && *(void *)(v220 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v221 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
          {
            uint64_t v236 = v263;
LABEL_255:
            sub_24549F868(v236, type metadata accessor for PersistentIdentifier);
            goto LABEL_256;
          }
          char v227 = sub_24558F598();
          sub_24549F868(v263, type metadata accessor for PersistentIdentifier);
          if (v227) {
            goto LABEL_256;
          }
LABEL_208:
          unint64_t v104 = (v104 + 1) & v216;
          if (((*(void *)(v213 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104) & 1) == 0) {
            goto LABEL_227;
          }
        }
      }
    }
    else
    {
      uint64_t v278 = v183;
      v276 = &v278;
      swift_unknownObjectRetain();
      uint64_t v207 = v256;
      char v208 = sub_24558E208();
      uint64_t v256 = v207;
      if (v207)
      {
        sub_2454E0658();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v186 + 8))(v184, v11);
        goto LABEL_248;
      }
      char v209 = v208;
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v184, v11);
      if ((v209 & 1) == 0)
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_163;
      }
      if (v288) {
        goto LABEL_168;
      }
    }
    uint64_t v187 = swift_bridgeObjectRetain();
    uint64_t v188 = sub_24556AEAC(v187);
    swift_bridgeObjectRelease();
    unint64_t v288 = v188;
    swift_bridgeObjectRelease();
    goto LABEL_168;
  }
  uint64_t v90 = v88;
  uint64_t v91 = v89;
  v252 = (void (**)(char *, uint64_t, uint64_t))(v238 + 16);
  v250 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 - 8);
  uint64_t v267 = v259 + 56;
  v241 = (void (**)(char *, uint64_t))(v238 + 8);
  while (1)
  {
    v276 = (void *)v90;
    uint64_t v277 = v91;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_90;
    }
    uint64_t v270 = v90;
    uint64_t v96 = v280;
    uint64_t v97 = v248;
    (*v252)(v248, v255, v12);
    uint64_t v98 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v97, 1, v11) == 1)
    {
      (*v241)(v97, v12);
      if (v288) {
        goto LABEL_57;
      }
LABEL_56:
      uint64_t v99 = swift_bridgeObjectRetain();
      uint64_t v100 = v96;
      uint64_t v101 = sub_24556AEAC(v99);
      swift_bridgeObjectRelease();
      unint64_t v288 = v101;
      uint64_t v96 = v100;
      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
    uint64_t v280 = v96;
    v276 = &v280;
    uint64_t v121 = v96;
    swift_unknownObjectRetain();
    uint64_t v122 = v256;
    char v123 = sub_24558E208();
    uint64_t v256 = v122;
    if (v122)
    {
      sub_2454E0658();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v11);
      goto LABEL_248;
    }
    char v124 = v123;
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v11);
    if ((v124 & 1) == 0)
    {
      swift_unknownObjectRelease();
      uint64_t v90 = v270;
LABEL_90:
      if (!v288)
      {
        uint64_t v128 = swift_bridgeObjectRetain();
        uint64_t v129 = sub_24556AEAC(v128);
        swift_bridgeObjectRelease();
        unint64_t v288 = v129;
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      if (!v288)
      {
        swift_endAccess();
        swift_unknownObjectRelease();
        uint64_t v92 = v253;
        (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))v267)(v253, 1, 1, v274);
        uint64_t v93 = (uint64_t)v92;
        uint64_t v94 = &qword_26B0D9280;
        goto LABEL_51;
      }
      uint64_t v130 = swift_getObjectType();
      uint64_t v270 = v90;
      PersistentModel.persistentModelID.getter(v130, v91, v269);
      unint64_t v131 = v288;
      sub_24558F7D8();
      sub_24558E158();
      sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
      swift_bridgeObjectRetain();
      sub_24558E4D8();
      uint64_t v132 = sub_24558F818();
      uint64_t v133 = -1 << *(unsigned char *)(v131 + 32);
      unint64_t v134 = v132 & ~v133;
      if (((*(void *)(v131 + 56 + ((v134 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v134) & 1) == 0)
      {
LABEL_116:
        swift_bridgeObjectRelease();
        uint64_t v146 = 1;
        uint64_t v12 = v260;
        goto LABEL_123;
      }
      uint64_t v273 = ~v133;
      uint64_t v135 = *(int *)(v274 + 20);
      uint64_t v136 = *(void *)(v259 + 72);
      while (2)
      {
        uint64_t v137 = v272;
        sub_2454D618C(*(void *)(v131 + 48) + v136 * v134, v272, type metadata accessor for PersistentIdentifier);
        uint64_t v138 = *(void *)(v137 + *(int *)(v274 + 20));
        uint64_t v139 = *(void *)(v269 + v135);
        uint64_t v140 = *(void *)(v138 + 24);
        uint64_t v141 = *(void *)(v139 + 24);
        if (v140)
        {
          if (v141)
          {
            BOOL v142 = *(void *)(v138 + 16) == *(void *)(v139 + 16) && v140 == v141;
            if (v142 || (sub_24558F598() & 1) != 0)
            {
LABEL_105:
              BOOL v143 = *(void *)(v138 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v139 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
                  && *(void *)(v138 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v139 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
              if (v143 || (sub_24558F598() & 1) != 0)
              {
                if (*(void *)(v138 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v139 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
                  && *(void *)(v138 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v139 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
                {
                  sub_24549F868(v272, type metadata accessor for PersistentIdentifier);
LABEL_120:
                  swift_bridgeObjectRelease();
                  char v147 = swift_isUniquelyReferenced_nonNull_native();
                  v148 = (void *)v288;
                  v276 = (void *)v288;
                  unint64_t v288 = 0x8000000000000000;
                  uint64_t v12 = v260;
                  if ((v147 & 1) == 0)
                  {
                    sub_245509044();
                    v148 = v276;
                  }
                  sub_2454D601C(v148[6] + v136 * v134, (uint64_t)v253, type metadata accessor for PersistentIdentifier);
                  sub_245543E5C(v134);
                  unint64_t v288 = (unint64_t)v276;
                  swift_bridgeObjectRelease();
                  uint64_t v146 = 0;
LABEL_123:
                  uint64_t v149 = v253;
                  (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))v267)(v253, v146, 1, v274);
                  swift_endAccess();
                  swift_unknownObjectRelease();
                  sub_24549F868(v269, type metadata accessor for PersistentIdentifier);
                  sub_2454D61F4((uint64_t)v149, &qword_26B0D9280);
                  uint64_t v11 = v257;
                  goto LABEL_52;
                }
                char v145 = sub_24558F598();
                sub_24549F868(v272, type metadata accessor for PersistentIdentifier);
                if (v145) {
                  goto LABEL_120;
                }
                goto LABEL_97;
              }
            }
          }
        }
        else if (!v141)
        {
          goto LABEL_105;
        }
        sub_24549F868(v272, type metadata accessor for PersistentIdentifier);
LABEL_97:
        unint64_t v134 = (v134 + 1) & v273;
        if (((*(void *)(v131 + 56 + ((v134 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v134) & 1) == 0) {
          goto LABEL_116;
        }
        continue;
      }
    }
    uint64_t v96 = v121;
    if (!v288) {
      goto LABEL_56;
    }
LABEL_57:
    swift_beginAccess();
    if (!v288)
    {
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D7B28);
      uint64_t v127 = v251;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v251, 1, 1, v126);
      goto LABEL_153;
    }
    v246 = (char *)v96;
    uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D7B28);
    v244 = &v251[*(int *)(v102 + 48)];
    uint64_t v245 = v102;
    uint64_t v103 = swift_getObjectType();
    unint64_t v104 = (unint64_t)v266;
    PersistentModel.persistentModelID.getter(v103, v91, (uint64_t)v266);
    unint64_t v105 = v288;
    sub_24558F7D8();
    uint64_t v106 = sub_24558E158();
    uint64_t v107 = sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
    swift_bridgeObjectRetain();
    uint64_t v242 = v107;
    uint64_t v243 = v106;
    sub_24558E4D8();
    uint64_t v108 = sub_24558F818();
    uint64_t v109 = -1 << *(unsigned char *)(v105 + 32);
    unint64_t v110 = v108 & ~v109;
    if (((*(void *)(v105 + 56 + ((v110 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v110) & 1) == 0) {
      break;
    }
    uint64_t v273 = ~v109;
    uint64_t v111 = *(int *)(v274 + 20);
    uint64_t v112 = *(void *)(v259 + 72);
    while (1)
    {
      id v113 = v271;
      sub_2454D618C(*(void *)(v105 + 48) + v112 * v110, (uint64_t)v271, type metadata accessor for PersistentIdentifier);
      unint64_t v104 = *(void *)&v113[*(int *)(v274 + 20)];
      uint64_t v114 = *(void *)&v266[v111];
      uint64_t v115 = *(void *)(v104 + 24);
      uint64_t v116 = *(void *)(v114 + 24);
      if (v115)
      {
        if (!v116
          || (*(void *)(v104 + 16) == *(void *)(v114 + 16) ? (BOOL v117 = v115 == v116) : (BOOL v117 = 0),
              !v117 && (sub_24558F598() & 1) == 0))
        {
LABEL_61:
          sub_24549F868((uint64_t)v271, type metadata accessor for PersistentIdentifier);
          goto LABEL_62;
        }
      }
      else if (v116)
      {
        goto LABEL_61;
      }
      BOOL v118 = *(void *)(v104 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v114 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
          && *(void *)(v104 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v114 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
      if (!v118 && (sub_24558F598() & 1) == 0) {
        goto LABEL_61;
      }
      if (*(void *)(v104 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v114 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
        && *(void *)(v104 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v114 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
      {
        break;
      }
      char v120 = sub_24558F598();
      sub_24549F868((uint64_t)v271, type metadata accessor for PersistentIdentifier);
      if (v120) {
        goto LABEL_151;
      }
LABEL_62:
      unint64_t v110 = (v110 + 1) & v273;
      if (((*(void *)(v105 + 56 + ((v110 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v110) & 1) == 0) {
        goto LABEL_85;
      }
    }
    sub_24549F868((uint64_t)v271, type metadata accessor for PersistentIdentifier);
LABEL_151:
    swift_bridgeObjectRelease();
    sub_24549F868((uint64_t)v266, type metadata accessor for PersistentIdentifier);
    sub_2454D618C(*(void *)(v288 + 48) + v112 * v110, (uint64_t)v244, type metadata accessor for PersistentIdentifier);
    char v168 = 0;
LABEL_152:
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v127 = v251;
    char *v251 = v168;
    (*(void (**)(char *, void, uint64_t))(*(void *)(v245 - 8) + 56))(v127, 0, 1);
    uint64_t v11 = v257;
    uint64_t v12 = v260;
LABEL_153:
    uint64_t v93 = (uint64_t)v127;
    uint64_t v94 = &qword_26B0D7B30;
LABEL_51:
    sub_2454D61F4(v93, v94);
LABEL_52:
    uint64_t v90 = sub_245533CB8();
    uint64_t v91 = v95;
    if (!v90) {
      goto LABEL_154;
    }
  }
LABEL_85:
  swift_bridgeObjectRelease();
  int v125 = swift_isUniquelyReferenced_nonNull_native();
  sub_2454D618C((uint64_t)v266, v262, type metadata accessor for PersistentIdentifier);
  size_t v279 = v288;
  unint64_t v288 = 0x8000000000000000;
  if (*(void *)(v279 + 24) > *(void *)(v279 + 16))
  {
    if ((v125 & 1) == 0) {
      sub_245509044();
    }
LABEL_148:
    size_t v164 = v279;
    *(void *)(v279 + ((v110 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v110;
    sub_2454D601C(v262, *(void *)(v164 + 48) + *(void *)(v259 + 72) * v110, type metadata accessor for PersistentIdentifier);
    uint64_t v165 = *(void *)(v164 + 16);
    BOOL v166 = __OFADD__(v165, 1);
    uint64_t v167 = v165 + 1;
    if (!v166)
    {
      *(void *)(v164 + 16) = v167;
      unint64_t v288 = v164;
      swift_bridgeObjectRelease();
      sub_2454D601C((uint64_t)v266, (uint64_t)v244, type metadata accessor for PersistentIdentifier);
      char v168 = 1;
      goto LABEL_152;
    }
    __break(1u);
LABEL_251:
    __break(1u);
LABEL_252:
    swift_release();
    uint64_t v91 = sub_245557350(v164, v164 + ((*(unsigned __int8 *)(v259 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v259 + 80)), 0, (2 * v104) | 1);
LABEL_242:
    swift_release();
    goto LABEL_248;
  }
  if (v125) {
    sub_245507AD8();
  }
  else {
    sub_24547AD6C();
  }
  size_t v150 = v279;
  sub_24558F7D8();
  sub_24558E4D8();
  uint64_t v151 = sub_24558F818();
  uint64_t v152 = -1 << *(unsigned char *)(v150 + 32);
  unint64_t v110 = v151 & ~v152;
  if (((*(void *)(v150 + 56 + ((v110 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v110) & 1) == 0) {
    goto LABEL_148;
  }
  unint64_t v104 = ~v152;
  uint64_t v153 = *(int *)(v274 + 20);
  uint64_t v154 = *(void *)(v259 + 72);
  while (2)
  {
    uint64_t v155 = v265;
    sub_2454D618C(*(void *)(v150 + 48) + v154 * v110, v265, type metadata accessor for PersistentIdentifier);
    uint64_t v156 = *(void *)(v155 + *(int *)(v274 + 20));
    uint64_t v157 = *(void *)(v262 + v153);
    uint64_t v158 = *(void *)(v156 + 24);
    uint64_t v159 = *(void *)(v157 + 24);
    if (!v158)
    {
      if (!v159) {
        goto LABEL_137;
      }
      goto LABEL_128;
    }
    if (!v159
      || (*(void *)(v156 + 16) == *(void *)(v157 + 16) ? (BOOL v160 = v158 == v159) : (BOOL v160 = 0),
          !v160 && (sub_24558F598() & 1) == 0))
    {
LABEL_128:
      sub_24549F868(v265, type metadata accessor for PersistentIdentifier);
      goto LABEL_129;
    }
LABEL_137:
    BOOL v161 = *(void *)(v156 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v157 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
        && *(void *)(v156 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v157 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v161 && (sub_24558F598() & 1) == 0) {
      goto LABEL_128;
    }
    if (*(void *)(v156 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v157 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v156 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v157 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      uint64_t v236 = v265;
      goto LABEL_255;
    }
    char v163 = sub_24558F598();
    sub_24549F868(v265, type metadata accessor for PersistentIdentifier);
    if ((v163 & 1) == 0)
    {
LABEL_129:
      unint64_t v110 = (v110 + 1) & v104;
      if (((*(void *)(v150 + 56 + ((v110 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v110) & 1) == 0) {
        goto LABEL_148;
      }
      continue;
    }
    break;
  }
LABEL_256:
  uint64_t result = sub_24558F738();
  __break(1u);
  return result;
}

uint64_t sub_245541AA4@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_unknownObjectRetain();
}

id sub_245541AE4()
{
  return sub_245541B44((uint64_t (*)(void))type metadata accessor for ModelContext._UndoPayload);
}

id sub_245541B2C()
{
  return sub_245541B44((uint64_t (*)(void))type metadata accessor for ModelContext._UndoModifiedDeletedList);
}

id sub_245541B44(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id static ModelContext.willSave.getter()
{
  return sub_245541BDC(&qword_26B0D8E60, (void **)&qword_26B0D8E78);
}

id static ModelContext.didSave.getter()
{
  return sub_245541BDC(&qword_26B0D8E70, (void **)&qword_26B0D8E68);
}

id sub_245541BDC(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  objc_super v3 = *a2;

  return v3;
}

SwiftData::ModelContext::NotificationKey_optional __swiftcall ModelContext.NotificationKey.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24558F288();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_245541C84(unsigned __int8 *a1, char *a2)
{
  return sub_24556C4A0(*a1, *a2);
}

uint64_t sub_245541C90()
{
  return sub_245541C98();
}

uint64_t sub_245541C98()
{
  return sub_24558F818();
}

uint64_t sub_245541D98()
{
  sub_24558E628();

  return swift_bridgeObjectRelease();
}

uint64_t sub_245541E80()
{
  return sub_245541E88();
}

uint64_t sub_245541E88()
{
  return sub_24558F818();
}

SwiftData::ModelContext::NotificationKey_optional sub_245541F84(Swift::String *a1)
{
  return ModelContext.NotificationKey.init(rawValue:)(*a1);
}

void sub_245541F90(void *a1@<X8>)
{
  unint64_t v2 = 0x80000002455904A0;
  unint64_t v3 = 0xD000000000000012;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE006C6C41646574;
      unint64_t v3 = 0x6164696C61766E69;
      goto LABEL_3;
    case 2:
      *a1 = 0x6465747265736E69;
      a1[1] = 0xE800000000000000;
      return;
    case 3:
      unsigned int v4 = 1633972341;
      goto LABEL_7;
    case 4:
      unsigned int v4 = 1701602660;
LABEL_7:
      *a1 = v4 | 0x64657400000000;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_245542050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  if (*(void *)(v3 + 16))
  {
    uint64_t v9 = *(void *)(v3 + 16);
  }
  else
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = result;
  }
  swift_beginAccess();
  uint64_t v11 = *(void *)(v9 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = v12 - 1;
    uint64_t v14 = (uint64_t *)(v11 + 80);
    do
    {
      uint64_t v15 = v13;
      sub_245542154((uint64_t)(v14 - 6), *(v14 - 1), *v14, a1, a2, a3);
      if (v5) {
        break;
      }
      uint64_t v13 = v15 - 1;
      v14 += 7;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_245542154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA118);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8B78);
  if (swift_dynamicCast())
  {
    sub_2454D1384(v11, (uint64_t)v15);
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    uint64_t DynamicType = swift_getDynamicType();
    sub_245542254(DynamicType, (uint64_t)v15, a4, a5, DynamicType, a6, v15[4]);
    return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v15);
  }
  else
  {
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    return sub_2454D61F4((uint64_t)v11, &qword_268EE3AD0);
  }
}

uint64_t sub_245542254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a2);
  uint64_t v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2454D139C(v13, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8B78);
  swift_dynamicCast();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a7 + 24))(a5, a7) == a4) {
    sub_2455423B8(a4, a3, (uint64_t)v15, a4, a5, a4, a6, a7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, a5);
}

uint64_t sub_2455423B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v20[1] = a3;
  uint64_t v11 = type metadata accessor for HistoryDescriptor();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v20 - v13;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for HistoryDescriptor();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v20 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  swift_dynamicCast();
  (*(void (**)(char *, uint64_t, uint64_t))(a8 + 40))(v18, a5, a8);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

BOOL sub_2455425C8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2455425DC()
{
  swift_weakAssign();
  *(void *)(v0 + 24) = 0;
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_245542640()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_24554269C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)(v1 + 16);
  swift_beginAccess();
  unint64_t v5 = *(void *)(v2 + 16);
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24558F1C8();
  if (!v6) {
    goto LABEL_12;
  }
LABEL_3:
  unint64_t result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_21:
    MEMORY[0x2456A1A40](result, v5);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (result >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_retain();
LABEL_8:
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    unint64_t result = swift_release();
    if (Strong == a1) {
      return result;
    }
  }
LABEL_13:
  type metadata accessor for _SwiftDataContextScope();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  *(void *)(v9 + 24) = 0;
  swift_weakAssign();
  if (!*(void *)(a1 + 16))
  {
    unint64_t result = swift_weakLoadStrong();
    if (result)
    {
      unint64_t v10 = result;
      goto LABEL_17;
    }
LABEL_24:
    __break(1u);
    return result;
  }
  unint64_t v10 = *(void *)(a1 + 16);
LABEL_17:
  uint64_t v11 = *(void *)(v10 + 72);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)(v9 + 24) = v11;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = swift_retain();
  MEMORY[0x2456A11F0](v12);
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_24558E808();
  }
  sub_24558E858();
  sub_24558E7E8();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_24554289C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  unint64_t v4 = *(void *)(v1 + 16);
  if (v4 >> 62) {
    goto LABEL_31;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v6 = v5 - 1;
  if (v5 < 1) {
    goto LABEL_25;
  }
  do
  {
    char v7 = 0;
    if (!v6)
    {
LABEL_7:
      if ((v7 & 1) == 0)
      {
        unint64_t v8 = 0;
        char v7 = 1;
        goto LABEL_9;
      }
      break;
    }
    while (1)
    {
      unint64_t v8 = v6 - 1;
LABEL_9:
      uint64_t v9 = *v3;
      if ((*v3 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = MEMORY[0x2456A1A40](v6, v9);
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      uint64_t v10 = *(void *)(v9 + 8 * v6 + 32);
      swift_retain();
LABEL_12:
      uint64_t Strong = swift_weakLoadStrong();
      swift_release();
      if (Strong)
      {
        uint64_t v12 = swift_weakLoadStrong();
        if (v12)
        {
          uint64_t v13 = v12;
          swift_release();
          if (v13 == a1)
          {
            swift_beginAccess();
            sub_2455364A0(v6);
            swift_endAccess();
            swift_release();
            *(void *)(v10 + 24) = 0;
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_25;
          }
        }
        swift_release();
        unint64_t v6 = v8;
        if (!v8) {
          goto LABEL_7;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v14 = *v3;
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *uint64_t v3 = v14;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v14 < 0 || (v14 & 0x4000000000000000) != 0)
        {
          uint64_t v14 = sub_2455576F8(v14);
          *uint64_t v3 = v14;
        }
        uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
        unint64_t v17 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v6 >= v17) {
          goto LABEL_30;
        }
        unint64_t v18 = v17 - 1;
        uint64_t v19 = v17 - 1 - v6;
        if (v19 < 0)
        {
          uint64_t result = sub_24558F228();
          __break(1u);
          return result;
        }
        memmove((void *)(v16 + 8 * v6 + 32), (const void *)(v16 + 8 * v6 + 40), 8 * v19);
        *(void *)(v16 + 16) = v18;
        sub_24558E7E8();
        swift_endAccess();
        swift_release();
        *(void *)(v10 + 24) = 0;
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v6 = v8;
        if (!v8) {
          goto LABEL_7;
        }
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    unint64_t v6 = v22 - 1;
  }
  while (v22 >= 1);
LABEL_25:
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    if (!v20) {
LABEL_27:
    }
      _SD_remove_current_context_tsd();
  }
  else
  {
    uint64_t v20 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v20) {
      goto LABEL_27;
    }
  }
  return v20 == 0;
}

uint64_t sub_245542B9C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  unint64_t v4 = *(void *)(v1 + 16);
  if (v4 >> 62) {
    goto LABEL_33;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v6 = v5 - 1;
  if (v5 < 1) {
    goto LABEL_34;
  }
  do
  {
    char v7 = 0;
    if (!v6)
    {
LABEL_6:
      if ((v7 & 1) == 0)
      {
        unint64_t v8 = 0;
        char v7 = 1;
        goto LABEL_9;
      }
      break;
    }
    while (1)
    {
      unint64_t v8 = v6 - 1;
LABEL_9:
      uint64_t v9 = *v3;
      if ((*v3 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = MEMORY[0x2456A1A40](v6, v9);
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      uint64_t v10 = *(void *)(v9 + 8 * v6 + 32);
      swift_retain();
LABEL_12:
      uint64_t Strong = swift_weakLoadStrong();
      swift_release();
      if (Strong)
      {
        uint64_t v12 = swift_weakLoadStrong();
        if (v12)
        {
          uint64_t v13 = v12;
          swift_release();
          if (v13 == a1)
          {
            swift_beginAccess();
            uint64_t v14 = *v3;
            int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *uint64_t v3 = v14;
            if (!isUniquelyReferenced_nonNull_bridgeObject || v14 < 0 || (v14 & 0x4000000000000000) != 0)
            {
              uint64_t v14 = sub_2455576F8(v14);
              *uint64_t v3 = v14;
            }
            uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
            unint64_t v17 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v6 >= v17) {
              goto LABEL_32;
            }
            goto LABEL_26;
          }
        }
        swift_release();
        unint64_t v6 = v8;
        if (!v8) {
          goto LABEL_6;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v18 = *v3;
        int v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *uint64_t v3 = v18;
        if (!v19 || v18 < 0 || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v18 = sub_2455576F8(v18);
          *uint64_t v3 = v18;
        }
        uint64_t v16 = v18 & 0xFFFFFFFFFFFFFF8;
        unint64_t v17 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v6 >= v17) {
          goto LABEL_31;
        }
LABEL_26:
        unint64_t v20 = v17 - 1;
        uint64_t v21 = v17 - 1 - v6;
        if (v21 < 0)
        {
          uint64_t result = sub_24558F228();
          __break(1u);
          return result;
        }
        memmove((void *)(v16 + 8 * v6 + 32), (const void *)(v16 + 8 * v6 + 40), 8 * v21);
        *(void *)(v16 + 16) = v20;
        sub_24558E7E8();
        swift_endAccess();
        swift_release();
        *(void *)(v10 + 24) = 0;
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v6 = v8;
        if (!v8) {
          goto LABEL_6;
        }
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    unint64_t v6 = v22 - 1;
  }
  while (v22 >= 1);
LABEL_34:
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    if (!v23) {
LABEL_36:
    }
      _SD_remove_current_context_tsd();
  }
  else
  {
    uint64_t v23 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v23) {
      goto LABEL_36;
    }
  }
  return v23 == 0;
}

uint64_t sub_245542EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_2454E332C(a1, a2);
  return v4;
}

uint64_t sub_245542EF0(uint64_t a1, uint64_t a2, void *a3, void **a4)
{
  uint64_t v8 = *(void *)(*a3 + 80);
  uint64_t v9 = sub_24558ECE8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v21 - v11;
  swift_beginAccess();
  uint64_t v13 = a3[4];
  uint64_t v14 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v15 = sub_245495DF4(&qword_26B0D9AD0, (void (*)(uint64_t))type metadata accessor for PersistentIdentifier);
  swift_bridgeObjectRetain();
  MEMORY[0x2456A0EE0](a1, v13, v14, v8, v15);
  swift_bridgeObjectRelease();
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v12, 1, v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v8 == 1)
  {
    sub_2454D139C(a2, (uint64_t)v21);
    unint64_t v17 = *a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v17 = sub_2454D176C(0, v17[2] + 1, 1, v17);
      *a4 = v17;
    }
    unint64_t v20 = v17[2];
    unint64_t v19 = v17[3];
    if (v20 >= v19 >> 1)
    {
      unint64_t v17 = sub_2454D176C((void *)(v19 > 1), v20 + 1, 1, v17);
      *a4 = v17;
    }
    uint64_t v17[2] = v20 + 1;
    return sub_2454D1384(v21, (uint64_t)&v17[5 * v20 + 4]);
  }
  return result;
}

void _Destroy_SwiftDataContextThreadLocalState()
{
  uint64_t v0 = (void *)MEMORY[0x2456A2410]();
  swift_release();
}

uint64_t sub_245543184(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2455433D4(a1, a2, a3, (void *)*v3, qword_26B0D7D48, &qword_26B0DA1A0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2455431B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_245543264(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2455431D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_245543564(a1, a2, a3, (void *)*v3, &qword_26B0DA208, &qword_26B0DA128);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_245543204(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2455433D4(a1, a2, a3, (void *)*v3, &qword_268EE3AD8, &qword_268EE3760);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_245543234(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_245543564(a1, a2, a3, (void *)*v3, &qword_268EE3828, &qword_268EE3830);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_245543264(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3680);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_2455433D4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size_1(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    _OWORD v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_245543564(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size_1(v13);
    v13[2] = v11;
    _OWORD v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_24554370C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_2454CE878((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_245543760(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v52 = v8;
  uint64_t v53 = 0;
  uint64_t v54 = v11 & v9;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_245533AD4(&v48);
  uint64_t v12 = *((void *)&v48 + 1);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_27;
  }
  uint64_t v13 = v48;
  sub_2454A0BBC(v49, v47);
  size_t v14 = *(void **)a5;
  unint64_t v16 = sub_2454A0B40(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_24547BAB8();
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    uint64_t v24 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    uint64_t v25 = (uint64_t *)(v24[6] + 16 * v16);
    *uint64_t v25 = v13;
    v25[1] = v12;
    sub_2454A0BBC(v47, (_OWORD *)(v24[7] + 32 * v16));
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    _OWORD v24[2] = v28;
LABEL_16:
    sub_245533AD4(&v48);
    for (uint64_t i = *((void *)&v48 + 1); *((void *)&v48 + 1); uint64_t i = *((void *)&v48 + 1))
    {
      uint64_t v31 = v48;
      sub_2454A0BBC(v49, v47);
      uint64_t v32 = *(void **)a5;
      unint64_t v34 = sub_2454A0B40(v31, i);
      uint64_t v35 = v32[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      char v38 = v33;
      if (v32[3] < v37)
      {
        sub_2454DEED0(v37, 1);
        unint64_t v39 = sub_2454A0B40(v31, i);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_30;
        }
        unint64_t v34 = v39;
      }
      if (v38)
      {
        sub_2454CE878((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v47);
        swift_bridgeObjectRelease();
        uint64_t v30 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v30);
        sub_2454A0BBC(v46, v30);
      }
      else
      {
        uint64_t v41 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
        *uint64_t v42 = v31;
        v42[1] = i;
        sub_2454A0BBC(v47, (_OWORD *)(v41[7] + 32 * v34));
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_29;
        }
        v41[2] = v44;
      }
      sub_245533AD4(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2454E0658();
    return swift_release();
  }
  sub_2454DEED0(v19, a4 & 1);
  unint64_t v21 = sub_2454A0B40(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_2454CE878((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v47);
    swift_bridgeObjectRelease();
    uint64_t v23 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v23);
    sub_2454A0BBC(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t sub_245543AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v3;
  sub_24558F7D8();
  sub_24558E158();
  sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
  swift_bridgeObjectRetain();
  uint64_t v36 = a1;
  sub_24558E4D8();
  uint64_t v11 = sub_24558F818();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v26, 1, v6);
  }
  uint64_t v32 = v3;
  uint64_t v33 = v7;
  uint64_t v34 = a2;
  uint64_t v35 = ~v12;
  uint64_t v14 = *(int *)(v6 + 20);
  uint64_t v15 = *(void *)(v7 + 72);
  while (1)
  {
    unint64_t v16 = v15 * v13;
    sub_2454D618C(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for PersistentIdentifier);
    uint64_t v17 = v6;
    uint64_t v18 = *(void *)&v9[*(int *)(v6 + 20)];
    uint64_t v19 = *(void *)(v36 + v14);
    uint64_t v20 = *(void *)(v18 + 24);
    uint64_t v21 = *(void *)(v19 + 24);
    if (v20)
    {
      if (!v21
        || (*(void *)(v18 + 16) == *(void *)(v19 + 16) ? (BOOL v22 = v20 == v21) : (BOOL v22 = 0),
            !v22 && (sub_24558F598() & 1) == 0))
      {
LABEL_4:
        sub_24549F868((uint64_t)v9, type metadata accessor for PersistentIdentifier);
        uint64_t v6 = v17;
        goto LABEL_5;
      }
    }
    else if (v21)
    {
      goto LABEL_4;
    }
    BOOL v23 = *(void *)(v18 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v19 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v18 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v19 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v23 && (sub_24558F598() & 1) == 0) {
      goto LABEL_4;
    }
    if (*(void *)(v18 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v19 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v18 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v19 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    char v25 = sub_24558F598();
    sub_24549F868((uint64_t)v9, type metadata accessor for PersistentIdentifier);
    uint64_t v6 = v17;
    if (v25) {
      goto LABEL_27;
    }
LABEL_5:
    unint64_t v13 = (v13 + 1) & v35;
    if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = 1;
      uint64_t v7 = v33;
      a2 = v34;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v26, 1, v6);
    }
  }
  sub_24549F868((uint64_t)v9, type metadata accessor for PersistentIdentifier);
  uint64_t v6 = v17;
LABEL_27:
  swift_bridgeObjectRelease();
  BOOL v27 = v32;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = *v27;
  uint64_t v37 = *v27;
  *BOOL v27 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_245509044();
    uint64_t v29 = v37;
  }
  uint64_t v30 = *(void *)(v29 + 48) + v16;
  a2 = v34;
  sub_2454D601C(v30, v34, type metadata accessor for PersistentIdentifier);
  sub_245543E5C(v13);
  *BOOL v27 = v37;
  swift_bridgeObjectRelease();
  uint64_t v26 = 0;
  uint64_t v7 = v33;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v26, 1, v6);
}

uint64_t sub_245543E5C(int64_t a1)
{
  uint64_t v25 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v3 = *(void *)(v25 - 8);
  uint64_t result = MEMORY[0x270FA5388](v25);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v24 = v1;
    uint64_t v11 = ~v9;
    swift_retain();
    uint64_t v12 = sub_24558EE18();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v26 = (v12 + 1) & v11;
      uint64_t v13 = *(void *)(v3 + 72);
      do
      {
        uint64_t v14 = v13;
        int64_t v15 = v13 * v10;
        sub_2454D618C(*(void *)(v7 + 48) + v13 * v10, (uint64_t)v6, type metadata accessor for PersistentIdentifier);
        sub_24558F7D8();
        sub_24558E158();
        sub_245495DF4((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
        uint64_t v16 = v11;
        sub_24558E4D8();
        uint64_t v17 = sub_24558F818();
        sub_24549F868((uint64_t)v6, type metadata accessor for PersistentIdentifier);
        unint64_t v18 = v17 & v16;
        uint64_t v11 = v16;
        if (a1 >= (uint64_t)v26)
        {
          if (v18 < v26)
          {
            uint64_t v13 = v14;
            goto LABEL_6;
          }
          uint64_t v13 = v14;
          if (a1 < (uint64_t)v18) {
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v13 = v14;
          if (v18 < v26 && a1 < (uint64_t)v18) {
            goto LABEL_6;
          }
        }
        int64_t v19 = v13 * a1;
        if (v13 * a1 < v15 || *(void *)(v7 + 48) + v13 * a1 >= (unint64_t)(*(void *)(v7 + 48) + v15 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v19 == v15) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v24;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v20 = *v1;
  uint64_t v21 = *(void *)(*v1 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
  return result;
}

uint64_t sub_24554416C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D96C0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  PersistentModel.persistentModelID.getter(a3, a4, (uint64_t)v13);
  uint64_t v14 = a2 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration;
  swift_beginAccess();
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(*(void *)v14 + 16);
  uint64_t v31 = v11;
  if (v16)
  {
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_2454A2A10((uint64_t)v13);
    if (v18)
    {
      unint64_t v19 = v17;
      uint64_t v29 = a1;
      uint64_t v20 = a2;
      uint64_t v21 = a4;
      uint64_t v22 = *(void *)(v15 + 56);
      uint64_t v23 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v30 = a3;
      uint64_t v25 = v24;
      uint64_t v26 = v22 + *(void *)(v24 + 72) * v19;
      a4 = v21;
      a2 = v20;
      a1 = v29;
      sub_2454D618C(v26, (uint64_t)v10, type metadata accessor for ModelContext.WeakAnyPersistentObject);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v23);
      a3 = v30;
    }
    else
    {
      uint64_t v23 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 1, 1, v23);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 1, 1, v23);
  }
  type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v10, 1, v23))
  {
    sub_2454D61F4((uint64_t)v10, &qword_26B0D96C0);
LABEL_12:
    sub_2454D7984(a1, a2, a3, a4);
    swift_unknownObjectRelease();
    return sub_24549F868((uint64_t)v13, type metadata accessor for PersistentIdentifier);
  }
  uint64_t v27 = MEMORY[0x2456A2CA0](v10);
  sub_2454D61F4((uint64_t)v10, &qword_26B0D96C0);
  if (!v27 || v27 == a1) {
    goto LABEL_12;
  }
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_24558F0E8();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_245544554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for ModelContext.WeakAnyPersistentObject(0) + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = *(int *)(type metadata accessor for PersistentIdentifier(0) + 20);
  uint64_t v8 = *(void *)(v5 + v7);
  uint64_t v9 = *(void *)(v6 + v7);
  uint64_t v10 = *(void *)(v8 + 24);
  uint64_t v11 = *(void *)(v9 + 24);
  if (v10)
  {
    if (!v11) {
      return 0;
    }
    BOOL v12 = *(void *)(v8 + 16) == *(void *)(v9 + 16) && v10 == v11;
    if (!v12 && (sub_24558F598() & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  BOOL v13 = *(void *)(v8 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v9 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
     && *(void *)(v8 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v9 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
  if (v13 || (sub_24558F598() & 1) != 0)
  {
    BOOL v14 = *(void *)(v8 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v9 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
       && *(void *)(v8 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v9 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8);
    if (v14 || (sub_24558F598() & 1) != 0) {
      return 1;
    }
  }
  return 0;
}

void sub_24554464C(void *a1)
{
  uint64_t v3 = (void **)(v1 + 40);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 40);
  uint64_t v5 = (void *)MEMORY[0x263F08618];
  if (v4)
  {
    uint64_t v6 = self;
    id v7 = v4;
    id v8 = objc_msgSend(v6, sel_defaultCenter);
    objc_msgSend(v8, sel_removeObserver_name_object_, v1, *v5, v7);

    objc_msgSend(v7, sel_removeAllActionsWithTarget_, v1);
    uint64_t v9 = *(void **)(v1 + 40);
  }
  else
  {
    uint64_t v9 = 0;
  }
  *uint64_t v3 = a1;
  id v10 = a1;

  uint64_t v11 = *v3;
  if (*v3)
  {
    BOOL v12 = self;
    id v13 = v11;
    id v14 = objc_msgSend(v12, sel_defaultCenter);
    objc_msgSend(v14, sel_addObserver_selector_name_object_, v1, sel__undoManagerCheckpoint_, *v5, v13);
  }
}

BOOL sub_245544790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t ObjectType = swift_getObjectType();
  PersistentModel.persistentModelID.getter(ObjectType, a2, (uint64_t)v11);
  uint64_t v13 = swift_getObjectType();
  PersistentModel.persistentModelID.getter(v13, a4, (uint64_t)v9);
  char v14 = _s9SwiftData20PersistentIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v9);
  sub_24549F868((uint64_t)v9, type metadata accessor for PersistentIdentifier);
  sub_24549F868((uint64_t)v11, type metadata accessor for PersistentIdentifier);
  if ((v14 & 1) == 0) {
    return 0;
  }
  uint64_t v15 = PersistentModel.modelContext.getter(ObjectType, a2);
  uint64_t v16 = PersistentModel.modelContext.getter(v13, a4);
  uint64_t v17 = v16;
  if (v15)
  {
    swift_release();
    if (v17)
    {
      swift_release();
      return v15 == v17;
    }
    goto LABEL_7;
  }
  if (v16)
  {
LABEL_7:
    swift_release();
    return 0;
  }
  swift_release();
  return 1;
}

unint64_t sub_245544930(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_268EE3840);
  uint64_t v3 = (void *)sub_24558F218();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_2455211DC(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2455211DC(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_245544A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v4 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_23:
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = swift_unknownObjectRetain();
    if (sub_24547F1F0(v19, v18, a2))
    {
      sub_2454EBEC8(v17, v18);
      swift_unknownObjectRelease();
    }
    uint64_t result = swift_unknownObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v8) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_245544BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v10[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  PersistentModel.persistentModelID.getter(a2, a3, (uint64_t)v7);
  sub_2454B70A4((uint64_t)v7, a2, a3, v10);
  sub_24549F868((uint64_t)v7, type metadata accessor for PersistentIdentifier);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a3 + 48))(v10, a2, a3);
}

uint64_t sub_245544CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24552DE94(a2, a3);
  if (v5) {
    return v5;
  }
  sub_24553171C(a2, a3);
  uint64_t v6 = v7;
  uint64_t v9 = v8;
  uint64_t v10 = swift_unknownObjectRetain();
  sub_24552DEDC(v10, v9, a2, a3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_245544D58(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_23:
    uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 16 * v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = swift_unknownObjectRetain();
    if (sub_245544CCC(v16, ObjectType, v14)) {
      swift_unknownObjectRelease();
    }
    uint64_t result = swift_unknownObjectRelease();
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_245544EE4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v9) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v11;
    if (!v18)
    {
      int64_t v11 = v17 + 1;
      if (v17 + 1 >= v9) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v5 + 8 * v11);
      if (!v18)
      {
        int64_t v11 = v17 + 2;
        if (v17 + 2 >= v9) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v5 + 8 * v11);
        if (!v18)
        {
          int64_t v11 = v17 + 3;
          if (v17 + 3 >= v9) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v5 + 8 * v11);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v18 - 1) & v18;
    unint64_t v13 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_5:
    uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 16 * v13 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = swift_unknownObjectRetain();
    a3(v16, ObjectType, v14);
    uint64_t result = swift_unknownObjectRelease();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v9) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    int64_t v11 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v11 >= v9) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v5 + 8 * v11);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_245545078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v7) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v20 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v20 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v20 + 8 * v9);
        if (!v14)
        {
          int64_t v9 = v13 + 3;
          if (v13 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v20 + 8 * v9);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = swift_unknownObjectRetain_n();
    if (sub_24547F1F0(v19, v18, a2))
    {
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_2454D7764(0, ObjectType, v18);
      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_2454EBEC8(v17, v18);
      swift_endAccess();
      swift_unknownObjectRelease_n();
    }
    uint64_t result = swift_unknownObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v7) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v20 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v20 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_2455452A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v44[3] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D96C0);
  MEMORY[0x270FA5388](v5 - 8);
  int64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24558EE48();
    sub_2455476E0(0, (unint64_t *)&qword_26B0D8E48);
    sub_24554757C();
    sub_24558E9F8();
    a1 = v54[5];
    uint64_t v49 = v54[6];
    uint64_t v11 = v54[7];
    uint64_t v12 = v54[8];
    unint64_t v13 = v54[9];
  }
  else
  {
    uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v49 = a1 + 56;
    uint64_t v16 = ~v14;
    uint64_t v17 = -v14;
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    else {
      uint64_t v18 = -1;
    }
    unint64_t v13 = v18 & v15;
    swift_bridgeObjectRetain();
    uint64_t v11 = v16;
    uint64_t v12 = 0;
  }
  uint64_t v47 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v44[1] = v11;
  int64_t v48 = (unint64_t)(v11 + 64) >> 6;
  uint64_t v45 = v8;
  uint64_t v46 = MEMORY[0x263F8EE50] + 8;
  uint64_t v51 = v10;
  if ((a1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_31:
  uint64_t v25 = sub_24558EEC8();
  if (!v25) {
    goto LABEL_43;
  }
  v54[12] = v25;
  sub_2455476E0(0, (unint64_t *)&qword_26B0D8E48);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v24 = (id)v54[0];
  swift_unknownObjectRelease();
  uint64_t v20 = v12;
  uint64_t v53 = v13;
  if (!v24) {
    goto LABEL_43;
  }
  while (1)
  {
    uint64_t v52 = v20;
    type metadata accessor for PersistentIdentifierImplementation(0);
    swift_allocObject();
    id v26 = v24;
    uint64_t v27 = sub_24549D420(v26);
    *(void *)&v10[*(int *)(v8 + 20)] = v27;
    uint64_t v28 = v27 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
    uint64_t v29 = sub_24558E158();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v10, v28, v29);
    uint64_t v30 = (uint64_t *)(a2 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration);
    swift_beginAccess();
    uint64_t v31 = *v30;
    if (*(void *)(*v30 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_2454A2A10((uint64_t)v10);
      if (v33)
      {
        unint64_t v34 = v32;
        id v50 = v26;
        uint64_t v35 = v7;
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        uint64_t v38 = *(void *)(v31 + 56);
        uint64_t v39 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
        uint64_t v40 = *(void *)(v39 - 8);
        uint64_t v41 = v38 + *(void *)(v40 + 72) * v34;
        a1 = v37;
        a2 = v36;
        int64_t v7 = v35;
        id v26 = v50;
        sub_2454D618C(v41, (uint64_t)v7, type metadata accessor for ModelContext.WeakAnyPersistentObject);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v7, 0, 1, v39);
        uint64_t v8 = v45;
      }
      else
      {
        uint64_t v39 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v7, 1, 1, v39);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v39 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v7, 1, 1, v39);
    }
    unint64_t v13 = v53;
    type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v7, 1, v39))
    {
      sub_2454D61F4((uint64_t)v7, &qword_26B0D96C0);
      unint64_t v10 = v51;
LABEL_10:
      sub_24549F868((uint64_t)v10, type metadata accessor for PersistentIdentifier);

      uint64_t v12 = v52;
      if (a1 < 0) {
        goto LABEL_31;
      }
      goto LABEL_11;
    }
    uint64_t v42 = MEMORY[0x2456A2CA0](v7);
    uint64_t v43 = *((void *)v7 + 1);
    sub_2454D61F4((uint64_t)v7, &qword_26B0D96C0);
    unint64_t v10 = v51;
    if (!v42) {
      goto LABEL_10;
    }
    sub_24549F868((uint64_t)v51, type metadata accessor for PersistentIdentifier);
    sub_2454DA36C(v54, v42, v43);

    swift_unknownObjectRelease();
    uint64_t v12 = v52;
    if (a1 < 0) {
      goto LABEL_31;
    }
LABEL_11:
    if (!v13) {
      break;
    }
    uint64_t v53 = (v13 - 1) & v13;
    unint64_t v19 = __clz(__rbit64(v13)) | (v12 << 6);
    uint64_t v20 = v12;
LABEL_29:
    id v24 = *(id *)(*(void *)(a1 + 48) + 8 * v19);
    if (!v24) {
      goto LABEL_43;
    }
  }
  int64_t v21 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    return;
  }
  if (v21 >= v48) {
    goto LABEL_43;
  }
  unint64_t v22 = *(void *)(v49 + 8 * v21);
  uint64_t v20 = v12 + 1;
  if (v22) {
    goto LABEL_28;
  }
  uint64_t v20 = v12 + 2;
  if (v12 + 2 >= v48) {
    goto LABEL_43;
  }
  unint64_t v22 = *(void *)(v49 + 8 * v20);
  if (v22) {
    goto LABEL_28;
  }
  uint64_t v20 = v12 + 3;
  if (v12 + 3 >= v48) {
    goto LABEL_43;
  }
  unint64_t v22 = *(void *)(v49 + 8 * v20);
  if (v22) {
    goto LABEL_28;
  }
  uint64_t v20 = v12 + 4;
  if (v12 + 4 >= v48) {
    goto LABEL_43;
  }
  unint64_t v22 = *(void *)(v49 + 8 * v20);
  if (v22) {
    goto LABEL_28;
  }
  uint64_t v20 = v12 + 5;
  if (v12 + 5 >= v48) {
    goto LABEL_43;
  }
  unint64_t v22 = *(void *)(v49 + 8 * v20);
  if (v22)
  {
LABEL_28:
    uint64_t v53 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v20 << 6);
    goto LABEL_29;
  }
  uint64_t v23 = v12 + 6;
  while (v48 != v23)
  {
    unint64_t v22 = *(void *)(v49 + 8 * v23++);
    if (v22)
    {
      uint64_t v20 = v23 - 1;
      goto LABEL_28;
    }
  }
LABEL_43:
  sub_2454E0658();
}

void sub_245545914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v45[3] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D96C0);
  MEMORY[0x270FA5388](v5 - 8);
  int64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24558EE48();
    sub_2455476E0(0, (unint64_t *)&qword_26B0D8E48);
    sub_24554757C();
    sub_24558E9F8();
    a1 = v55[5];
    uint64_t v50 = v55[6];
    uint64_t v11 = v55[7];
    uint64_t v12 = v55[8];
    unint64_t v13 = v55[9];
  }
  else
  {
    uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v50 = a1 + 56;
    uint64_t v16 = ~v14;
    uint64_t v17 = -v14;
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    else {
      uint64_t v18 = -1;
    }
    unint64_t v13 = v18 & v15;
    swift_bridgeObjectRetain();
    uint64_t v11 = v16;
    uint64_t v12 = 0;
  }
  uint64_t v48 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v45[1] = v11;
  int64_t v49 = (unint64_t)(v11 + 64) >> 6;
  uint64_t v46 = v8;
  uint64_t v47 = MEMORY[0x263F8EE50] + 8;
  uint64_t v52 = v10;
  while (a1 < 0)
  {
    uint64_t v21 = sub_24558EEC8();
    if (!v21) {
      goto LABEL_45;
    }
    v55[12] = v21;
    sub_2455476E0(0, (unint64_t *)&qword_26B0D8E48);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v22 = (id)v55[0];
    swift_unknownObjectRelease();
    uint64_t v20 = v12;
    uint64_t v54 = v13;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_34:
    uint64_t v53 = v20;
    type metadata accessor for PersistentIdentifierImplementation(0);
    swift_allocObject();
    id v26 = v22;
    uint64_t v27 = sub_24549D420(v26);
    *(void *)&v10[*(int *)(v8 + 20)] = v27;
    uint64_t v28 = v27 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
    uint64_t v29 = sub_24558E158();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v10, v28, v29);
    uint64_t v30 = (uint64_t *)(a2 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration);
    swift_beginAccess();
    uint64_t v31 = *v30;
    if (*(void *)(*v30 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_2454A2A10((uint64_t)v10);
      if (v33)
      {
        unint64_t v34 = v32;
        id v51 = v26;
        uint64_t v35 = v7;
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        uint64_t v38 = *(void *)(v31 + 56);
        uint64_t v39 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
        uint64_t v40 = *(void *)(v39 - 8);
        uint64_t v41 = v38 + *(void *)(v40 + 72) * v34;
        a1 = v37;
        a2 = v36;
        int64_t v7 = v35;
        id v26 = v51;
        sub_2454D618C(v41, (uint64_t)v7, type metadata accessor for ModelContext.WeakAnyPersistentObject);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v7, 0, 1, v39);
        uint64_t v8 = v46;
      }
      else
      {
        uint64_t v39 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v7, 1, 1, v39);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v39 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v7, 1, 1, v39);
    }
    type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v7, 1, v39))
    {
      sub_2454D61F4((uint64_t)v7, &qword_26B0D96C0);
      unint64_t v10 = v52;
LABEL_9:
      sub_24549F868((uint64_t)v10, type metadata accessor for PersistentIdentifier);

      goto LABEL_10;
    }
    uint64_t v42 = MEMORY[0x2456A2CA0](v7);
    uint64_t v43 = *((void *)v7 + 1);
    sub_2454D61F4((uint64_t)v7, &qword_26B0D96C0);
    unint64_t v10 = v52;
    if (!v42) {
      goto LABEL_9;
    }
    sub_24549F868((uint64_t)v52, type metadata accessor for PersistentIdentifier);
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    if (sub_2454DDCF8(ObjectType, v43))
    {
      sub_2454DA36C(v55, v42, v43);
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
LABEL_10:
    uint64_t v12 = v53;
    unint64_t v13 = v54;
  }
  if (v13)
  {
    uint64_t v54 = (v13 - 1) & v13;
    unint64_t v19 = __clz(__rbit64(v13)) | (v12 << 6);
    uint64_t v20 = v12;
LABEL_33:
    id v22 = *(id *)(*(void *)(a1 + 48) + 8 * v19);
    if (!v22) {
      goto LABEL_45;
    }
    goto LABEL_34;
  }
  int64_t v23 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v23 >= v49) {
      goto LABEL_45;
    }
    unint64_t v24 = *(void *)(v50 + 8 * v23);
    uint64_t v20 = v12 + 1;
    if (!v24)
    {
      uint64_t v20 = v12 + 2;
      if (v12 + 2 >= v49) {
        goto LABEL_45;
      }
      unint64_t v24 = *(void *)(v50 + 8 * v20);
      if (!v24)
      {
        uint64_t v20 = v12 + 3;
        if (v12 + 3 >= v49) {
          goto LABEL_45;
        }
        unint64_t v24 = *(void *)(v50 + 8 * v20);
        if (!v24)
        {
          uint64_t v20 = v12 + 4;
          if (v12 + 4 >= v49) {
            goto LABEL_45;
          }
          unint64_t v24 = *(void *)(v50 + 8 * v20);
          if (!v24)
          {
            uint64_t v20 = v12 + 5;
            if (v12 + 5 >= v49) {
              goto LABEL_45;
            }
            unint64_t v24 = *(void *)(v50 + 8 * v20);
            if (!v24)
            {
              uint64_t v25 = v12 + 6;
              while (v49 != v25)
              {
                unint64_t v24 = *(void *)(v50 + 8 * v25++);
                if (v24)
                {
                  uint64_t v20 = v25 - 1;
                  goto LABEL_32;
                }
              }
LABEL_45:
              sub_2454E0658();
              return;
            }
          }
        }
      }
    }
LABEL_32:
    uint64_t v54 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

void sub_245545FBC(unint64_t a1, void (*a2)(id, id))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v21 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unint64_t v5 = sub_24558F158() | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v3 = ~v6;
    unint64_t v21 = a1 + 64;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 64);
    unint64_t v5 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v20 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v10 = (v4 - 1) & v4;
      unint64_t v11 = __clz(__rbit64(v4)) | (v9 << 6);
      uint64_t v12 = v9;
      goto LABEL_29;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v20) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v21 + 8 * v15);
    uint64_t v12 = v9 + 1;
    if (!v16)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v20) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v12);
      if (!v16)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v20) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v21 + 8 * v12);
        if (!v16)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v20) {
            goto LABEL_32;
          }
          unint64_t v16 = *(void *)(v21 + 8 * v12);
          if (!v16)
          {
            uint64_t v12 = v9 + 5;
            if (v9 + 5 >= v20) {
              goto LABEL_32;
            }
            unint64_t v16 = *(void *)(v21 + 8 * v12);
            if (!v16)
            {
              uint64_t v17 = v9 + 6;
              while (v20 != v17)
              {
                unint64_t v16 = *(void *)(v21 + 8 * v17++);
                if (v16)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_2454E0658();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_29:
    uint64_t v18 = 8 * v11;
    unint64_t v19 = *(void **)(*(void *)(v5 + 56) + v18);
    id v13 = *(id *)(*(void *)(v5 + 48) + v18);
    id v14 = v19;
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      a2(v13, v14);

      uint64_t v9 = v12;
      unint64_t v4 = v10;
      if ((v5 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_24558F188())
      {
        sub_2455476E0(0, (unint64_t *)&qword_26B0D8E48);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v22;
        swift_unknownObjectRelease();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v14 = v22;
        swift_unknownObjectRelease();
        uint64_t v12 = v9;
        uint64_t v10 = v4;
        if (v22) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_2455462A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditingState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24554630C()
{
  return objectdestroyTm_0(MEMORY[0x263F8EED8]);
}

uint64_t sub_245546324(uint64_t a1, void (**a2)(char *, uint64_t *, uint64_t))
{
  uint64_t v6 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = (void (*)(uint64_t))v2[7];
  uint64_t v11 = v2[8];
  uint64_t ObjectType = swift_getObjectType();
  return sub_24554771C(a1, a2, v7, v8, v9, v10, v11, v6, ObjectType, v5, (uint64_t)a2);
}

uint64_t sub_2455463B4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2455463EC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2455463FC(uint64_t a1, uint64_t a2)
{
  return sub_24553E2EC(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

unint64_t sub_245546420()
{
  unint64_t result = qword_268EE3A38;
  if (!qword_268EE3A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3A38);
  }
  return result;
}

unint64_t sub_245546478()
{
  unint64_t result = qword_268EE3A40;
  if (!qword_268EE3A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3A40);
  }
  return result;
}

id sub_2455464D4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 40);
  *a2 = v4;

  return v4;
}

void sub_24554652C(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_24554464C(v1);
}

uint64_t sub_24554657C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  return sub_2454D618C(v3, a2, type metadata accessor for EditingState);
}

uint64_t sub_2455465EC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveEnabled);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_245546640(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveEnabled);
  swift_beginAccess();
  *uint64_t v3 = v2;
  sub_245481A50();
}

uint64_t destroy for SwiftDataError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s9SwiftData14SwiftDataErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SwiftDataError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SwiftDataError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SwiftDataError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SwiftDataError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SwiftDataError()
{
  return &type metadata for SwiftDataError;
}

uint64_t sub_24554682C()
{
  return type metadata accessor for ModelContext(0);
}

uint64_t method lookup function for ModelContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ModelContext);
}

uint64_t dispatch thunk of ModelContext.author.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of ModelContext.author.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of ModelContext.undoManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of ModelContext.undoManager.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of ModelContext.undoManager.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of ModelContext.insertedModelsArray.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 976))();
}

uint64_t dispatch thunk of ModelContext.changedModelsArray.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1032))();
}

uint64_t dispatch thunk of ModelContext.deletedModelsArray.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1088))();
}

uint64_t dispatch thunk of ModelContext.editingState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1288))();
}

uint64_t dispatch thunk of ModelContext.editingState.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1296))();
}

uint64_t dispatch thunk of ModelContext.editingState.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1304))();
}

uint64_t dispatch thunk of ModelContext.autosaveEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1472))();
}

uint64_t dispatch thunk of ModelContext.autosaveEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1488))();
}

uint64_t dispatch thunk of ModelContext.model(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1696))();
}

uint64_t dispatch thunk of ModelContext.rollback()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1776))();
}

uint64_t dispatch thunk of ModelContext.processPendingChanges()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2016))();
}

uint64_t dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2328))();
}

uint64_t dispatch thunk of ModelContext.transaction(block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2384))();
}

uint64_t dispatch thunk of ModelContext.enumerate<A>(_:batchSize:allowEscapingMutations:block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2400))();
}

uint64_t dispatch thunk of ModelContext.fetch<A>(_:batchSize:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2432))();
}

uint64_t dispatch thunk of ModelContext.fetchIdentifiers<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2440))();
}

uint64_t dispatch thunk of ModelContext.fetchIdentifiers<A>(_:batchSize:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2448))();
}

uint64_t dispatch thunk of ModelContext.deleteHistory<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2488))();
}

uint64_t type metadata accessor for ModelContext._UndoModifiedDeletedList()
{
  return self;
}

uint64_t getEnumTagSinglePayload for ModelContext.NotificationKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModelContext.NotificationKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x245546E4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelContext.NotificationKey()
{
  return &type metadata for ModelContext.NotificationKey;
}

uint64_t type metadata accessor for _SwiftDataContextScope()
{
  return self;
}

uint64_t type metadata accessor for _SwiftDataContextThreadLocalState()
{
  return self;
}

uint64_t sub_245546ED0()
{
  return type metadata accessor for DataStoreSaveChangesRequestBuilder(0);
}

_OWORD *initializeBufferWithCopyOfBuffer for ModelContext.AnyPersistentObject(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for ModelContext.AnyPersistentObject(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *assignWithTake for ModelContext.AnyPersistentObject(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelContext.AnyPersistentObject(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelContext.AnyPersistentObject(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SwiftDataError._Error(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SwiftDataError._Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24554716CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

uint64_t sub_245547194(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2455471A0(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SwiftDataError._Error()
{
  return &type metadata for SwiftDataError._Error;
}

uint64_t *sub_2455471B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 20);
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24558E158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
    *(void *)&v8[*(int *)(v11 + 20)] = *(void *)&v9[*(int *)(v11 + 20)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_2455472AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = v6 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_245547358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
      return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = type metadata accessor for PersistentIdentifier(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
    uint64_t v9 = v7;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    return v8(v10, a2, v9);
  }
}

void *sub_245547408(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
    result[1] = 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for PersistentIdentifier(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2455474B4()
{
  return sub_245495DF4(&qword_268EE3A78, (void (*)(uint64_t))type metadata accessor for ModelContext.WeakAnyPersistentObject);
}

unint64_t sub_245547500()
{
  unint64_t result = qword_268EE3A80;
  if (!qword_268EE3A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3A80);
  }
  return result;
}

uint64_t sub_245547554(uint64_t a1, uint64_t a2)
{
  return sub_245542EF0(a1, a2, *(void **)(v2 + 16), *(void ***)(v2 + 24));
}

uint64_t sub_245547560()
{
  return 16;
}

__n128 sub_24554756C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_24554757C()
{
  unint64_t result = qword_268EE3AA0;
  if (!qword_268EE3AA0)
  {
    sub_2455476E0(255, (unint64_t *)&qword_26B0D8E48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3AA0);
  }
  return result;
}

uint64_t sub_2455475E4()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_245547624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24553AE24(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_245547630()
{
  return objectdestroyTm_0(MEMORY[0x263F8EEE8]);
}

uint64_t sub_245547648(uint64_t *a1)
{
  return sub_245539F34(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_245547654()
{
  return objectdestroyTm_0(MEMORY[0x263F8EEE8]);
}

uint64_t sub_24554766C(uint64_t *a1)
{
  return sub_24553A038(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_245547678()
{
  return objectdestroyTm_0(MEMORY[0x263F8EEE8]);
}

uint64_t sub_245547690(uint64_t *a1)
{
  return sub_24553A1D8(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_24554769C()
{
  return objectdestroyTm_0(MEMORY[0x263F8EEE8]);
}

uint64_t sub_2455476B4(uint64_t a1)
{
  return sub_2454824BC(a1) & 1;
}

uint64_t sub_2455476D0(uint64_t a1)
{
  return sub_245539868(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_2455476D8(void *a1, void *a2)
{
  return sub_2455373FC(a1, a2, v2);
}

uint64_t sub_2455476E0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24554771C(uint64_t a1, void (**a2)(char *, uint64_t *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v70 = a7;
  uint64_t v69 = a6;
  uint64_t v83 = a5;
  uint64_t v85 = a4;
  uint64_t v81 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = *(void *)(v73 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  BOOL v72 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v84 = (char *)&v64 - v17;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v89 = a8;
  unint64_t v90 = AssociatedTypeWitness;
  uint64_t v91 = a10;
  uint64_t v92 = AssociatedConformanceWitness;
  uint64_t v82 = AssociatedConformanceWitness;
  uint64_t v74 = type metadata accessor for DataStoreFetchResult();
  uint64_t v71 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  int64_t v20 = (char *)&v64 - v19;
  uint64_t v89 = a1;
  unint64_t v90 = (unint64_t)v81;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA118);
  swift_dynamicCast();
  uint64_t v21 = v93;
  uint64_t v22 = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a11 + 80))(a3, a8, a10, a9, a11);
  if (v22) {
    return swift_unknownObjectRelease();
  }
  uint64_t v86 = a10;
  uint64_t v65 = v15;
  uint64_t v67 = v21;
  uint64_t v68 = 0;
  uint64_t v93 = MEMORY[0x263F8EE80];
  uint64_t v88 = sub_24558E408();
  uint64_t v24 = *(void *)&v20[*(int *)(v74 + 52)];
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = MEMORY[0x2456A12E0](v25, AssociatedTypeWitness);
  uint64_t v27 = v20;
  uint64_t v28 = v24;
  uint64_t v30 = (uint64_t)v72;
  uint64_t v29 = v73;
  if (v26)
  {
    uint64_t v31 = AssociatedTypeWitness;
    uint64_t Descriptor = type metadata accessor for FetchDescriptor();
    uint64_t v33 = 0;
    uint64_t v34 = *(int *)(Descriptor + 48);
    uint64_t v78 = *(int *)(Descriptor + 64);
    uint64_t v79 = v34;
    uint64_t v35 = *(int *)(v74 + 56);
    uint64_t v80 = v24;
    uint64_t v81 = (void (**)(char *, uint64_t *, uint64_t))(v29 + 16);
    unint64_t v76 = (void (**)(uint64_t, char *, uint64_t))(v29 + 32);
    uint64_t v77 = v35;
    uint64_t v75 = (void (**)(uint64_t, uint64_t))(v29 + 8);
    while (1)
    {
      char v36 = sub_24558E848();
      sub_24558E7F8();
      if (v36)
      {
        uint64_t v37 = v84;
        uint64_t v38 = v31;
        (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v84, v28+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v33, v31);
      }
      else
      {
        uint64_t v51 = sub_24558EFE8();
        uint64_t v37 = v84;
        if (v65 != 8) {
          goto LABEL_29;
        }
        uint64_t v89 = v51;
        uint64_t v38 = v31;
        (*v81)(v84, &v89, v31);
        swift_unknownObjectRelease();
      }
      uint64_t v39 = v83;
      if (__OFADD__(v33, 1)) {
        break;
      }
      uint64_t v86 = v33 + 1;
      uint64_t v40 = v37;
      uint64_t v41 = v29;
      uint64_t v31 = v38;
      (*v76)(v30, v40, v38);
      char v42 = *(unsigned char *)(v39 + v79);
      int v43 = *(unsigned __int8 *)(v39 + v78);
      uint64_t v44 = a8;
      uint64_t v45 = v27;
      uint64_t v46 = *(void *)&v27[v77];
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_245538CBC(v30, v42, v43, v46, (uint64_t)&v93, v31, v82);
      unint64_t v49 = v48;
      a8 = v44;
      swift_bridgeObjectRelease();
      uint64_t v89 = v47;
      unint64_t v90 = v49;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
      if (!swift_dynamicCast()) {
        goto LABEL_30;
      }
      uint64_t v89 = v87;
      sub_24558E8A8();
      sub_24558E888();
      (*v75)(v30, v31);
      uint64_t v28 = v80;
      uint64_t v50 = MEMORY[0x2456A12E0](v80, v31);
      ++v33;
      uint64_t v27 = v45;
      uint64_t v29 = v41;
      if (v86 == v50) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t v89 = 0;
    unint64_t v90 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558F568();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  else
  {
LABEL_13:
    uint64_t v66 = v27;
    swift_bridgeObjectRelease();
    uint64_t v52 = v85;
    swift_retain();
    uint64_t v53 = swift_bridgeObjectRetain();
    uint64_t v54 = v68;
    sub_24549637C(v53, v52);
    swift_bridgeObjectRelease_n();
    swift_release();
    uint64_t v55 = v88;
    if (MEMORY[0x2456A12E0](v88, a8))
    {
      uint64_t v56 = 4;
      uint64_t v57 = v69;
      uint64_t v58 = v71;
      while (1)
      {
        uint64_t v59 = v56 - 4;
        char v60 = sub_24558E848();
        sub_24558E7F8();
        if (v60)
        {
          uint64_t v61 = *(void *)(v55 + 8 * v56);
          swift_unknownObjectRetain();
          BOOL v62 = __OFADD__(v59, 1);
          uint64_t v63 = v56 - 3;
          if (v62) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v61 = sub_24558EFE8();
          BOOL v62 = __OFADD__(v59, 1);
          uint64_t v63 = v56 - 3;
          if (v62)
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        v57(v61);
        if (v54) {
          break;
        }
        swift_unknownObjectRelease();
        ++v56;
        if (v63 == MEMORY[0x2456A12E0](v55, a8)) {
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
LABEL_23:
      uint64_t v58 = v71;
LABEL_24:
      swift_bridgeObjectRelease();
    }
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v66, v74);
  }
  return result;
}

uint64_t sub_245547E08(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a3;
  int64_t v7 = a1;
  int64_t v8 = 0;
  int64_t v9 = a1;
  while (1)
  {
    BOOL v10 = v9 <= a2;
    if (a3 > 0) {
      BOOL v10 = v9 >= a2;
    }
    if (v10) {
      break;
    }
    BOOL v11 = __OFADD__(v9, a3);
    v9 += a3;
    if (v11) {
      int64_t v9 = (v9 >> 63) ^ 0x8000000000000000;
    }
    BOOL v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v44 = MEMORY[0x263F8EE78];
  sub_245543204(0, v8, 0);
  uint64_t result = v44;
  if (v8)
  {
    uint64_t v39 = *(void *)(a4 + 16);
    uint64_t v38 = a4 + 32;
    int64_t v13 = a2;
    while (1)
    {
      BOOL v14 = v7 <= v13;
      if (v6 > 0) {
        BOOL v14 = v7 >= v13;
      }
      if (v14) {
        break;
      }
      if (__OFADD__(v7, v6)) {
        int64_t v15 = ((v7 + v6) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v15 = v7 + v6;
      }
      if (__OFADD__(v7, a5)) {
        goto LABEL_73;
      }
      if (v39 >= v7 + a5) {
        uint64_t v16 = v7 + a5;
      }
      else {
        uint64_t v16 = v39;
      }
      uint64_t v17 = v16 - v7;
      if (v16 < v7) {
        goto LABEL_74;
      }
      if (v7 < 0) {
        goto LABEL_75;
      }
      uint64_t v42 = result;
      uint64_t v18 = v6;
      sub_24558F608();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v19 = swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = MEMORY[0x263F8EE78];
      }
      uint64_t v20 = *(void *)(v19 + 16);
      swift_release();
      if (v20 == v17)
      {
        uint64_t v21 = (void *)swift_dynamicCastClass();
        uint64_t v6 = v18;
        int64_t v13 = a2;
        if (!v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v21 = (void *)MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = (void *)MEMORY[0x263F8EE78];
        uint64_t v6 = v18;
        int64_t v13 = a2;
        if (v16 != v7)
        {
          if (v17 < 1)
          {
            if (v17 < 0) {
              goto LABEL_79;
            }
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3828);
            uint64_t v21 = (void *)swift_allocObject();
            size_t v24 = _swift_stdlib_malloc_size_1(v21);
            long long v21[2] = v17;
            _OWORD v21[3] = 2 * ((uint64_t)(v24 - 32) / 40);
          }
          if (v38 + 40 * v7 < (unint64_t)&v21[5 * v17 + 4] && (unint64_t)(v21 + 4) < v38 + 40 * v16) {
            goto LABEL_79;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3830);
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v42;
      unint64_t v23 = *(void *)(v42 + 16);
      unint64_t v22 = *(void *)(v42 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_245543204(v22 > 1, v23 + 1, 1);
        int64_t v13 = a2;
        uint64_t result = v42;
      }
      *(void *)(result + 16) = v23 + 1;
      *(void *)(result + 8 * v23 + 32) = v21;
      int64_t v7 = v15;
      if (!--v8) {
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
  }
  else
  {
    int64_t v15 = v7;
    int64_t v13 = a2;
LABEL_41:
    BOOL v25 = v15 <= v13;
    if (v6 > 0) {
      BOOL v25 = v15 >= v13;
    }
    if (v25) {
      return result;
    }
    uint64_t v43 = a4 + 32;
    while (1)
    {
      int64_t v26 = __OFADD__(v15, v6) ? ((v15 + v6) >> 63) ^ 0x8000000000000000 : v15 + v6;
      if (__OFADD__(v15, a5)) {
        break;
      }
      if (*(void *)(a4 + 16) >= v15 + a5) {
        uint64_t v27 = v15 + a5;
      }
      else {
        uint64_t v27 = *(void *)(a4 + 16);
      }
      uint64_t v28 = v27 - v15;
      if (v27 < v15) {
        goto LABEL_77;
      }
      if (v15 < 0) {
        goto LABEL_78;
      }
      uint64_t v29 = result;
      sub_24558F608();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v30 = swift_dynamicCastClass();
      if (!v30)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = MEMORY[0x263F8EE78];
      }
      uint64_t v31 = *(void *)(v30 + 16);
      swift_release();
      if (v31 == v28)
      {
        unint64_t v32 = (void *)swift_dynamicCastClass();
        if (!v32)
        {
          swift_bridgeObjectRelease();
          unint64_t v32 = (void *)MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v32 = (void *)MEMORY[0x263F8EE78];
        if (v27 != v15)
        {
          if (v28 < 1)
          {
            if (v28 < 0) {
              goto LABEL_79;
            }
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3828);
            unint64_t v32 = (void *)swift_allocObject();
            size_t v37 = _swift_stdlib_malloc_size_1(v32);
            v32[2] = v28;
            v32[3] = 2 * ((uint64_t)(v37 - 32) / 40);
          }
          if (v43 + 40 * v15 < (unint64_t)&v32[5 * v28 + 4] && (unint64_t)(v32 + 4) < v43 + 40 * v27) {
            goto LABEL_79;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3830);
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v29;
      uint64_t v45 = v29;
      unint64_t v34 = *(void *)(v29 + 16);
      unint64_t v33 = *(void *)(v29 + 24);
      int64_t v35 = a2;
      if (v34 >= v33 >> 1)
      {
        sub_245543204(v33 > 1, v34 + 1, 1);
        int64_t v35 = a2;
        uint64_t result = v45;
      }
      *(void *)(result + 16) = v34 + 1;
      *(void *)(result + 8 * v34 + 32) = v32;
      BOOL v36 = v26 <= v35;
      if (v6 > 0) {
        BOOL v36 = v26 >= v35;
      }
      int64_t v15 = v26;
      if (v36) {
        return result;
      }
    }
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_245548384()
{
  return sub_24553F5CC();
}

uint64_t sub_2455483A4(uint64_t *a1, uint64_t *a2)
{
  return sub_24553F63C(a1, a2, *(void (***)(char *, uint64_t *, uint64_t))(v2 + 32)) & 1;
}

uint64_t sub_2455483C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 24);
  *a2 = *a1;
  a2[1] = v3;
  return swift_unknownObjectRetain();
}

uint64_t sub_2455483EC(char **a1, uint64_t *a2)
{
  return sub_24553D174(a1, a2, *(void *)(v2 + 48)) & 1;
}

uint64_t sub_245548414@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return PersistentModel.persistentModelID.getter(*(void *)(a2 + a1 - 32), *(void *)(a2 + a1 - 16), a3);
}

uint64_t sub_245548448()
{
  return 32;
}

__n128 sub_245548454(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_245548460()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_245548498()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2455484A8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2455484E0()
{
  return sub_2455370B4();
}

uint64_t sub_2455484EC(uint64_t a1, uint64_t a2)
{
  return sub_2455463FC(a1, a2);
}

BOOL PersistentModel.hasChanges.getter(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(sub_2454D7E9C(a1, a2) + 24);
  swift_release();
  return (v2 & 0x3F) != 0;
}

uint64_t sub_245548654(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24558E278();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24554D274(v2, a1, a2, (uint64_t)v8);
  int64_t v9 = sub_2454A0D2C(a1, a2);
  uint64_t v10 = v9[2];
  if (v10)
  {
    uint64_t v11 = (uint64_t)(v9 + 4);
    do
    {
      sub_2454A0944(v11, (uint64_t)v13);
      swift_retain();
      sub_2454A0A9C((uint64_t)v13);
      sub_24554D860();
      swift_release();
      v11 += 96;
      --v10;
    }
    while (v10);
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PersistentModel.setValue<A, B>(forKey:to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v72)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t AssociatedConformanceWitness;
  uint64_t v84;
  void v85[3];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  uint64_t v6 = v5;
  uint64_t v80 = a5;
  uint64_t v81 = a3;
  uint64_t v8 = *a1;
  uint64_t v78 = a1;
  int64_t v9 = (uint64_t *)(v8 + *MEMORY[0x263F8EA20]);
  uint64_t v10 = v9[1];
  uint64_t v11 = sub_24558ECE8();
  uint64_t v74 = *(void (**)(char *, uint64_t))(v11 - 8);
  uint64_t v75 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v77 = (char *)&v70 - v13;
  uint64_t v14 = *(void *)(v10 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v82 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v70 - v17;
  uint64_t v19 = *v9;
  if (sub_2454A7900(*v9, a4)) {
    sub_2454B6C8C(v19, a4);
  }
  unint64_t v76 = v14;
  uint64_t v92 = PersistentModel.modelContext.getter(v19, a4);
  uint64_t v20 = MEMORY[0x263F8EE88];
  uint64_t v91 = MEMORY[0x263F8EE88];
  uint64_t v21 = v81;
  unint64_t v90 = sub_24558E408();
  uint64_t v89 = (void *)MEMORY[0x263F8EE78];
  MEMORY[0x270FA5388](v90);
  *(&v70 - 10) = v19;
  *(&v70 - 9) = v10;
  *(&v70 - 8) = v21;
  *(&v70 - 7) = a4;
  uint64_t v22 = v80;
  *(&v70 - 6) = v80;
  *(&v70 - 5) = (uint64_t)&v91;
  *(&v70 - 4) = (uint64_t)&v90;
  *(&v70 - 3) = (uint64_t)&v92;
  uint64_t v68 = (uint64_t)&v89;
  sub_24558506C((void (*)(uint64_t))sub_24554DA0C, (uint64_t)(&v70 - 12), v10, v22);
  uint64_t v23 = PersistentModel.modelContext.getter(v19, a4);
  swift_release();
  if (!v23 && v92)
  {
    size_t v24 = v89;
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v89 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      size_t v24 = sub_245496260(0, v24[2] + 1, 1, v24);
      uint64_t v89 = v24;
    }
    unint64_t v27 = v24[2];
    unint64_t v26 = v24[3];
    if (v27 >= v26 >> 1) {
      size_t v24 = sub_245496260((void *)(v26 > 1), v27 + 1, 1, v24);
    }
    _OWORD v24[2] = v27 + 1;
    uint64_t v28 = &v24[2 * v27];
    v28[4] = v6;
    v28[5] = a4;
    uint64_t v89 = v24;
    uint64_t v29 = swift_retain();
    sub_24547BCA0(v29, v19, a4);
    swift_release();
  }
  uint64_t v88 = v20;
  BOOL v72 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 40);
  v72(v85, v19, a4);
  uint64_t v31 = v86;
  uint64_t v30 = v87;
  __swift_project_boxed_opaque_existential_1(v85, v86);
  unint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 88);
  uint64_t v33 = v6;
  uint64_t v71 = v19;
  unint64_t v34 = v18;
  uint64_t v35 = (uint64_t)v78;
  uint64_t v36 = v10;
  uint64_t v37 = v81;
  uint64_t v79 = v10;
  uint64_t v38 = v80;
  uint64_t v39 = v32(v78, v36, v81, v80, v31, v30);
  MEMORY[0x270FA5388](v39);
  *(&v70 - 8) = v37;
  *(&v70 - 7) = a4;
  *(&v70 - 6) = v38;
  *(&v70 - 5) = (uint64_t)&v88;
  *(&v70 - 4) = (uint64_t)&v91;
  *(&v70 - 3) = v33;
  uint64_t v68 = v35;
  uint64_t v40 = v38;
  uint64_t v41 = v79;
  sub_24558506C((void (*)(uint64_t))sub_24554DA44, (uint64_t)(&v70 - 10), v79, v40);
  uint64_t v42 = v76;
  uint64_t v43 = v76 + 8;
  uint64_t v44 = *(void (**)(char *, uint64_t))(v76 + 8);
  v44(v34, v41);
  __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v85);
  v85[0] = v90;
  uint64_t v45 = sub_24558E8A8();
  swift_bridgeObjectRetain();
  uint64_t v46 = v77;
  int v47 = swift_dynamicCast();
  unint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  if (v47)
  {
    uint64_t v73 = v45;
    uint64_t v74 = v44;
    uint64_t v75 = v43;
    v48(v46, 0, 1, v41);
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v82, v46, v41);
    uint64_t v49 = v71;
    if (PersistentModel.modelContext.getter(v71, a4))
    {
      sub_2454DDFBC(v33, v49, a4);
      swift_release();
    }
    v72(v85, v49, a4);
    uint64_t v50 = v86;
    uint64_t v51 = v87;
    __swift_project_boxed_opaque_existential_1(v85, v86);
    uint64_t v52 = v78;
    uint64_t v53 = v81;
    uint64_t v54 = v41;
    uint64_t v55 = v80;
    (*(void (**)(void *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 136))(v78, v82, v54, v81, v80, v50, v51);
    uint64_t v56 = __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v85);
    v85[0] = v90;
    MEMORY[0x270FA5388](v56);
    *(&v70 - 6) = v53;
    *(&v70 - 5) = a4;
    *(&v70 - 4) = v55;
    *(&v70 - 3) = (uint64_t)&v88;
    uint64_t v68 = v33;
    uint64_t v69 = v52;
    uint64_t v57 = v79;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    swift_bridgeObjectRetain();
    uint64_t v58 = v73;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_24558506C((void (*)(uint64_t))sub_24554DA58, (uint64_t)(&v70 - 8), v58, WitnessTable);
    swift_bridgeObjectRelease();
    char v60 = v74;
    if (v92)
    {
      uint64_t v61 = v89;
      uint64_t v62 = v89[2];
      if (v62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v63 = v61 + 5;
        do
        {
          uint64_t v64 = *v63;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v66 = swift_unknownObjectRetain();
          sub_245480B6C(v66, ObjectType, v64);
          swift_unknownObjectRelease();
          v63 += 2;
          --v62;
        }
        while (v62);
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    v60(v82, v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v48(v46, 1, 1, v41);
    (*((void (**)(char *, uint64_t))v74 + 1))(v46, v75);
    v85[0] = 0;
    v85[1] = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    uint64_t v84 = v90;
    swift_getWitnessTable();
    sub_24558F578();
    LODWORD(v69) = 0;
    uint64_t v68 = 235;
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_245548FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(sub_2454D7E9C(a1, a2) + 80);
  swift_release();
  return v2;
}

uint64_t PersistentModel.getValue<A, B>(forKey:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *a1;
  uint64_t v11 = (void *)MEMORY[0x263F8EA20];
  uint64_t v12 = *(void *)(*a1 + *MEMORY[0x263F8EA20]);
  if (sub_2454A7900(v12, a3)) {
    sub_2454B6C8C(v12, a3);
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v16, v12, a3);
  uint64_t v13 = v17;
  uint64_t v14 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 96))(a1, *(void *)(*v11 + v10 + 8), a2, a4, a5, v13, v14);
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v16);
}

uint64_t sub_24554979C(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, void **a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v53 = a5;
  char v60 = a4;
  uint64_t v58 = a3;
  uint64_t v63 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v54 = *(void *)(v63 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v63);
  uint64_t v56 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v55 = (uint64_t)&v52 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v52 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v52 - v18;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if (sub_2454A7900(a8, AssociatedConformanceWitness)) {
    sub_2454B6C8C(a8, AssociatedConformanceWitness);
  }
  uint64_t v57 = a2;
  uint64_t v21 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v61 = a1;
  uint64_t v62 = a8;
  uint64_t v59 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a8, AssociatedConformanceWitness, (uint64_t)v19);
  if (!*(void *)(v21 + 16)
    || (sub_24558F7D8(),
        sub_24558E158(),
        sub_24554DE60(),
        sub_24558E4D8(),
        uint64_t v22 = sub_24558F818(),
        uint64_t v23 = -1 << *(unsigned char *)(v21 + 32),
        unint64_t v24 = v22 & ~v23,
        ((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    sub_24549B280((uint64_t)v19);
    uint64_t v36 = v56;
    uint64_t v38 = v61;
    uint64_t v37 = v62;
    uint64_t v39 = v59;
    PersistentModel.persistentModelID.getter(v62, v59, v56);
    uint64_t v40 = v55;
    sub_24547F75C(v55, v36);
    sub_24549B280(v40);
    uint64_t v64 = v38;
    sub_24558E8A8();
    swift_unknownObjectRetain();
    sub_24558E888();
    uint64_t v41 = PersistentModel.modelContext.getter(v37, v39);
    uint64_t result = swift_release();
    uint64_t v43 = v60;
    uint64_t v44 = *v60;
    if (v41)
    {
      if (v44) {
        return result;
      }
    }
    else if (v44)
    {
      uint64_t v45 = v53;
      uint64_t v46 = *v53;
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v45 = v46;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v46 = sub_245496260(0, v46[2] + 1, 1, v46);
        *uint64_t v45 = v46;
      }
      unint64_t v49 = v46[2];
      unint64_t v48 = v46[3];
      if (v49 >= v48 >> 1)
      {
        uint64_t v46 = sub_245496260((void *)(v48 > 1), v49 + 1, 1, v46);
        *uint64_t v45 = v46;
      }
      _OWORD v46[2] = v49 + 1;
      uint64_t v50 = &v46[2 * v49];
      unsigned char v50[4] = v38;
      v50[5] = v39;
      uint64_t v51 = swift_retain();
      sub_24547BCA0(v51, v37, v39);
      return swift_release();
    }
    *uint64_t v43 = PersistentModel.modelContext.getter(v37, v39);
    return swift_release();
  }
  uint64_t v25 = ~v23;
  uint64_t v26 = *(int *)(v63 + 20);
  uint64_t v27 = *(void *)(v54 + 72);
  while (1)
  {
    sub_24549B2DC(*(void *)(v21 + 48) + v27 * v24, (uint64_t)v17);
    uint64_t v28 = *(void *)&v17[*(int *)(v63 + 20)];
    uint64_t v29 = *(void *)&v19[v26];
    uint64_t v30 = *(void *)(v28 + 24);
    uint64_t v31 = *(void *)(v29 + 24);
    if (v30)
    {
      if (!v31
        || (*(void *)(v28 + 16) == *(void *)(v29 + 16) ? (BOOL v32 = v30 == v31) : (BOOL v32 = 0),
            !v32 && (sub_24558F598() & 1) == 0))
      {
LABEL_7:
        sub_24549B280((uint64_t)v17);
        goto LABEL_8;
      }
    }
    else if (v31)
    {
      goto LABEL_7;
    }
    BOOL v33 = *(void *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v33 && (sub_24558F598() & 1) == 0) {
      goto LABEL_7;
    }
    if (*(void *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    char v35 = sub_24558F598();
    sub_24549B280((uint64_t)v17);
    if (v35) {
      goto LABEL_39;
    }
LABEL_8:
    unint64_t v24 = (v24 + 1) & v25;
    if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
      goto LABEL_27;
    }
  }
  sub_24549B280((uint64_t)v17);
LABEL_39:
  swift_bridgeObjectRelease();
  return sub_24549B280((uint64_t)v19);
}

uint64_t sub_245549C44(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a4;
  uint64_t v50 = a7;
  uint64_t v10 = *a5;
  uint64_t v46 = a5;
  uint64_t v11 = v10;
  uint64_t v51 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v43 = *(void *)(v51 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v51);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v43 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v43 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v45 = v11;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  PersistentModel.persistentModelID.getter(a6, AssociatedConformanceWitness, (uint64_t)v20);
  sub_24547F75C((uint64_t)v22, (uint64_t)v20);
  sub_24549B280((uint64_t)v22);
  uint64_t v24 = *a3;
  swift_bridgeObjectRetain();
  uint64_t v47 = a1;
  uint64_t v48 = a6;
  uint64_t v44 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a6, AssociatedConformanceWitness, (uint64_t)v17);
  if (!*(void *)(v24 + 16)
    || (sub_24558F7D8(),
        sub_24558E158(),
        sub_24554DE60(),
        sub_24558E4D8(),
        uint64_t v25 = sub_24558F818(),
        uint64_t v26 = -1 << *(unsigned char *)(v24 + 32),
        unint64_t v27 = v25 & ~v26,
        ((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_24549B280((uint64_t)v17);
    uint64_t v39 = *(void **)(v45 + *MEMORY[0x263F8EA20]);
    uint64_t v40 = v50;
    uint64_t v41 = (void *)sub_2454BCE88((uint64_t)v46, v39, v50);
    sub_2454C2E50(v41, v47, (uint64_t)v39, v48, v40, v44);
    return swift_release();
  }
  uint64_t v28 = ~v26;
  uint64_t v29 = *(int *)(v51 + 20);
  uint64_t v30 = *(void *)(v43 + 72);
  while (1)
  {
    sub_24549B2DC(*(void *)(v24 + 48) + v30 * v27, (uint64_t)v14);
    uint64_t v31 = *(void *)&v14[*(int *)(v51 + 20)];
    uint64_t v32 = *(void *)&v17[v29];
    uint64_t v33 = *(void *)(v31 + 24);
    uint64_t v34 = *(void *)(v32 + 24);
    if (v33)
    {
      if (!v34
        || (*(void *)(v31 + 16) == *(void *)(v32 + 16) ? (BOOL v35 = v33 == v34) : (BOOL v35 = 0),
            !v35 && (sub_24558F598() & 1) == 0))
      {
LABEL_5:
        sub_24549B280((uint64_t)v14);
        goto LABEL_6;
      }
    }
    else if (v34)
    {
      goto LABEL_5;
    }
    BOOL v36 = *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v32 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v32 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v36 && (sub_24558F598() & 1) == 0) {
      goto LABEL_5;
    }
    if (*(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v32 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v32 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    char v38 = sub_24558F598();
    sub_24549B280((uint64_t)v14);
    if (v38) {
      goto LABEL_28;
    }
LABEL_6:
    unint64_t v27 = (v27 + 1) & v28;
    if (((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
      goto LABEL_25;
    }
  }
  sub_24549B280((uint64_t)v14);
LABEL_28:
  swift_bridgeObjectRelease();
  return sub_24549B280((uint64_t)v17);
}

uint64_t sub_24554A014(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a3;
  uint64_t v46 = a6;
  uint64_t v9 = *a4;
  uint64_t v42 = a4;
  uint64_t v10 = v9;
  uint64_t v47 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v11 = *(void *)(v47 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v47);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = *a2;
  uint64_t v41 = v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  uint64_t v43 = a1;
  uint64_t v44 = a5;
  uint64_t v40 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a5, AssociatedConformanceWitness, (uint64_t)v16);
  if (!*(void *)(v17 + 16)
    || (sub_24558F7D8(),
        sub_24558E158(),
        sub_24554DE60(),
        sub_24558E4D8(),
        uint64_t v19 = sub_24558F818(),
        uint64_t v20 = -1 << *(unsigned char *)(v17 + 32),
        unint64_t v21 = v19 & ~v20,
        ((*(void *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_24549B280((uint64_t)v16);
    uint64_t v33 = v40;
    uint64_t v34 = *(void **)(v41 + *MEMORY[0x263F8EA20]);
    uint64_t v35 = v43;
    uint64_t v36 = v46;
    sub_2454BD094(v43, v40, (uint64_t)v34, v46);
    uint64_t v37 = (void *)sub_2454BCE88((uint64_t)v42, v34, v36);
    sub_2454BD2A4(v37, v35, (uint64_t)v34, v44, v36, v33);
    return swift_release();
  }
  uint64_t v22 = ~v20;
  uint64_t v23 = *(int *)(v47 + 20);
  uint64_t v24 = *(void *)(v11 + 72);
  while (1)
  {
    sub_24549B2DC(*(void *)(v17 + 48) + v24 * v21, (uint64_t)v14);
    uint64_t v25 = *(void *)&v14[*(int *)(v47 + 20)];
    uint64_t v26 = *(void *)&v16[v23];
    uint64_t v27 = *(void *)(v25 + 24);
    uint64_t v28 = *(void *)(v26 + 24);
    if (v27)
    {
      if (!v28
        || (*(void *)(v25 + 16) == *(void *)(v26 + 16) ? (BOOL v29 = v27 == v28) : (BOOL v29 = 0),
            !v29 && (sub_24558F598() & 1) == 0))
      {
LABEL_5:
        sub_24549B280((uint64_t)v14);
        goto LABEL_6;
      }
    }
    else if (v28)
    {
      goto LABEL_5;
    }
    BOOL v30 = *(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v30 && (sub_24558F598() & 1) == 0) {
      goto LABEL_5;
    }
    if (*(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    char v32 = sub_24558F598();
    sub_24549B280((uint64_t)v14);
    if (v32) {
      goto LABEL_28;
    }
LABEL_6:
    unint64_t v21 = (v21 + 1) & v22;
    if (((*(void *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_25;
    }
  }
  sub_24549B280((uint64_t)v14);
LABEL_28:
  swift_bridgeObjectRelease();
  return sub_24549B280((uint64_t)v16);
}

uint64_t PersistentModel.setValue<A, B>(forKey:to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v79)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void (**v82)(char *, uint64_t);
  uint64_t v83;
  char *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t AssociatedConformanceWitness;
  uint64_t v91;
  void v92[3];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;

  uint64_t v7 = v6;
  uint64_t v87 = a6;
  uint64_t v89 = a5;
  uint64_t v10 = *a1;
  uint64_t v85 = a1;
  uint64_t v11 = (uint64_t *)(v10 + *MEMORY[0x263F8EA20]);
  uint64_t v12 = v11[1];
  uint64_t v13 = sub_24558ECE8();
  uint64_t v82 = *(void (***)(char *, uint64_t))(v13 - 8);
  uint64_t v83 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v84 = (char *)v78 - v15;
  uint64_t v80 = *(void *)(v12 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v88 = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v78 - v18;
  uint64_t v20 = *v11;
  if (sub_2454A7900(*v11, a4)) {
    sub_2454B6C8C(v20, a4);
  }
  uint64_t v99 = PersistentModel.modelContext.getter(v20, a4);
  uint64_t v98 = (void *)MEMORY[0x263F8EE78];
  uint64_t v21 = MEMORY[0x263F8EE88];
  uint64_t v97 = MEMORY[0x263F8EE88];
  uint64_t v96 = sub_24558E408();
  MEMORY[0x270FA5388](v96);
  v78[-10] = v20;
  v78[-9] = v12;
  v78[-8] = a3;
  v78[-7] = a4;
  uint64_t v22 = v87;
  v78[-6] = v89;
  v78[-5] = v22;
  v78[-4] = &v97;
  v78[-3] = &v96;
  uint64_t v76 = (uint64_t)&v99;
  uint64_t v77 = &v98;
  sub_24558506C((void (*)(uint64_t))sub_24554DA68, (uint64_t)&v78[-12], v12, v22);
  uint64_t v23 = PersistentModel.modelContext.getter(v20, a4);
  swift_release();
  if (!v23 && v99)
  {
    uint64_t v24 = v98;
    uint64_t v86 = v7;
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v98 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v24 = sub_245496260(0, v24[2] + 1, 1, v24);
      uint64_t v98 = v24;
    }
    unint64_t v27 = v24[2];
    unint64_t v26 = v24[3];
    if (v27 >= v26 >> 1) {
      uint64_t v24 = sub_245496260((void *)(v26 > 1), v27 + 1, 1, v24);
    }
    _OWORD v24[2] = v27 + 1;
    uint64_t v28 = &v24[2 * v27];
    uint64_t v7 = v86;
    v28[4] = v86;
    v28[5] = a4;
    uint64_t v98 = v24;
    uint64_t v29 = swift_retain();
    sub_24547BCA0(v29, v20, a4);
    swift_release();
  }
  uint64_t v95 = v21;
  uint64_t v79 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 40);
  v78[1] = a4 + 40;
  v79(v92, v20, a4);
  uint64_t v30 = v94;
  __swift_project_boxed_opaque_existential_1(v92, v93);
  uint64_t v31 = *(uint64_t (**)(void))(v30 + 88);
  uint64_t v86 = a3;
  uint64_t v32 = v87;
  uint64_t v33 = v85;
  uint64_t v34 = v31();
  MEMORY[0x270FA5388](v34);
  v78[-8] = v86;
  v78[-7] = a4;
  v78[-6] = v89;
  v78[-5] = v32;
  v78[-4] = &v95;
  v78[-3] = &v97;
  uint64_t v76 = v7;
  uint64_t v77 = v33;
  uint64_t v35 = v86;
  sub_24558506C((void (*)(uint64_t))sub_24554DAA8, (uint64_t)&v78[-10], v12, v32);
  uint64_t v36 = v80 + 8;
  uint64_t v37 = *(void (***)(char *, uint64_t))(v80 + 8);
  char v38 = v19;
  uint64_t v39 = v80;
  ((void (*)(char *, uint64_t))v37)(v38, v12);
  __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v92);
  v92[0] = v96;
  uint64_t v40 = v20;
  uint64_t v41 = a4;
  uint64_t v42 = v35;
  uint64_t v43 = sub_24558E8A8();
  swift_bridgeObjectRetain();
  uint64_t v44 = v84;
  int v45 = swift_dynamicCast();
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  if (v45)
  {
    uint64_t v81 = v43;
    uint64_t v82 = v37;
    uint64_t v83 = v36;
    v46(v44, 0, 1, v12);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v88, v44, v12);
    if (PersistentModel.modelContext.getter(v40, v41))
    {
      sub_2454DDFBC(v7, v40, v41);
      swift_release();
    }
    uint64_t v47 = v40;
    v79(v92, v40, v41);
    uint64_t v48 = v93;
    uint64_t v49 = v94;
    __swift_project_boxed_opaque_existential_1(v92, v93);
    uint64_t v50 = *(void (**)(void *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 144);
    uint64_t v51 = v41;
    uint64_t v52 = (uint64_t)v85;
    uint64_t v53 = v89;
    uint64_t v54 = v12;
    uint64_t v84 = (char *)v12;
    uint64_t v55 = v47;
    uint64_t v56 = v87;
    v50(v85, v88, v54, v42, v89, v87, v48, v49);
    __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v92);
    uint64_t v57 = v84;
    uint64_t v58 = PersistentModel.modelContext.getter(v55, v51);
    uint64_t v59 = swift_release();
    if (!v58)
    {
      uint64_t v60 = v56;
      uint64_t v61 = v98;
      swift_unknownObjectRetain();
      uint64_t v59 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v98 = v61;
      if ((v59 & 1) == 0)
      {
        uint64_t v59 = (uint64_t)sub_245496260(0, v61[2] + 1, 1, v61);
        uint64_t v61 = (void *)v59;
        uint64_t v98 = (void *)v59;
      }
      unint64_t v63 = v61[2];
      unint64_t v62 = v61[3];
      if (v63 >= v62 >> 1)
      {
        uint64_t v59 = (uint64_t)sub_245496260((void *)(v62 > 1), v63 + 1, 1, v61);
        uint64_t v61 = (void *)v59;
      }
      v61[2] = v63 + 1;
      uint64_t v64 = &v61[2 * v63];
      v64[4] = v7;
      v64[5] = v51;
      uint64_t v98 = v61;
      uint64_t v52 = (uint64_t)v85;
      uint64_t v53 = v89;
      uint64_t v56 = v60;
    }
    v92[0] = v96;
    MEMORY[0x270FA5388](v59);
    v78[-8] = v65;
    v78[-7] = v51;
    v78[-6] = v53;
    v78[-5] = v56;
    v78[-4] = &v95;
    v78[-3] = v7;
    uint64_t v76 = v52;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    swift_bridgeObjectRetain();
    uint64_t v66 = v81;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_24558506C((void (*)(uint64_t))sub_24554DADC, (uint64_t)&v78[-10], v66, WitnessTable);
    swift_bridgeObjectRelease();
    uint64_t v68 = v57;
    if (v99)
    {
      uint64_t v69 = v98;
      uint64_t v70 = v98[2];
      if (v70)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v71 = v69 + 5;
        do
        {
          uint64_t v72 = *v71;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v74 = swift_unknownObjectRetain();
          sub_245480B6C(v74, ObjectType, v72);
          swift_unknownObjectRelease();
          v71 += 2;
          --v70;
        }
        while (v70);
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    ((void (*)(char *, char *))v82)(v88, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v46(v44, 1, 1, v12);
    v82[1](v44, v83);
    v92[0] = 0;
    v92[1] = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    uint64_t v91 = v96;
    swift_getWitnessTable();
    sub_24558F578();
    LODWORD(v77) = 0;
    uint64_t v76 = 292;
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_24554AC8C(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, void **a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v53 = a5;
  uint64_t v60 = a4;
  uint64_t v58 = a3;
  uint64_t v63 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v54 = *(void *)(v63 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v63);
  uint64_t v56 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v55 = (uint64_t)&v52 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v52 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v52 - v18;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if (sub_2454A7900(a8, AssociatedConformanceWitness)) {
    sub_2454B6C8C(a8, AssociatedConformanceWitness);
  }
  uint64_t v57 = a2;
  uint64_t v21 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v61 = a1;
  uint64_t v62 = a8;
  uint64_t v59 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a8, AssociatedConformanceWitness, (uint64_t)v19);
  if (!*(void *)(v21 + 16)
    || (sub_24558F7D8(),
        sub_24558E158(),
        sub_24554DE60(),
        sub_24558E4D8(),
        uint64_t v22 = sub_24558F818(),
        uint64_t v23 = -1 << *(unsigned char *)(v21 + 32),
        unint64_t v24 = v22 & ~v23,
        ((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    sub_24549B280((uint64_t)v19);
    uint64_t v36 = v56;
    uint64_t v38 = v61;
    uint64_t v37 = v62;
    uint64_t v39 = v59;
    PersistentModel.persistentModelID.getter(v62, v59, v56);
    uint64_t v40 = v55;
    sub_24547F75C(v55, v36);
    sub_24549B280(v40);
    uint64_t v64 = v38;
    sub_24558E8A8();
    swift_unknownObjectRetain();
    sub_24558E888();
    uint64_t v41 = PersistentModel.modelContext.getter(v37, v39);
    uint64_t result = swift_release();
    uint64_t v43 = v60;
    uint64_t v44 = *v60;
    if (v41)
    {
      if (v44) {
        return result;
      }
    }
    else if (v44)
    {
      int v45 = v53;
      uint64_t v46 = *v53;
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *int v45 = v46;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v46 = sub_245496260(0, v46[2] + 1, 1, v46);
        *int v45 = v46;
      }
      unint64_t v49 = v46[2];
      unint64_t v48 = v46[3];
      if (v49 >= v48 >> 1)
      {
        uint64_t v46 = sub_245496260((void *)(v48 > 1), v49 + 1, 1, v46);
        *int v45 = v46;
      }
      _OWORD v46[2] = v49 + 1;
      uint64_t v50 = &v46[2 * v49];
      unsigned char v50[4] = v38;
      v50[5] = v39;
      uint64_t v51 = swift_retain();
      sub_24547BCA0(v51, v37, v39);
      return swift_release();
    }
    *uint64_t v43 = PersistentModel.modelContext.getter(v37, v39);
    return swift_release();
  }
  uint64_t v25 = ~v23;
  uint64_t v26 = *(int *)(v63 + 20);
  uint64_t v27 = *(void *)(v54 + 72);
  while (1)
  {
    sub_24549B2DC(*(void *)(v21 + 48) + v27 * v24, (uint64_t)v17);
    uint64_t v28 = *(void *)&v17[*(int *)(v63 + 20)];
    uint64_t v29 = *(void *)&v19[v26];
    uint64_t v30 = *(void *)(v28 + 24);
    uint64_t v31 = *(void *)(v29 + 24);
    if (v30)
    {
      if (!v31
        || (*(void *)(v28 + 16) == *(void *)(v29 + 16) ? (BOOL v32 = v30 == v31) : (BOOL v32 = 0),
            !v32 && (sub_24558F598() & 1) == 0))
      {
LABEL_7:
        sub_24549B280((uint64_t)v17);
        goto LABEL_8;
      }
    }
    else if (v31)
    {
      goto LABEL_7;
    }
    BOOL v33 = *(void *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v33 && (sub_24558F598() & 1) == 0) {
      goto LABEL_7;
    }
    if (*(void *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    char v35 = sub_24558F598();
    sub_24549B280((uint64_t)v17);
    if (v35) {
      goto LABEL_39;
    }
LABEL_8:
    unint64_t v24 = (v24 + 1) & v25;
    if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
      goto LABEL_27;
    }
  }
  sub_24549B280((uint64_t)v17);
LABEL_39:
  swift_bridgeObjectRelease();
  return sub_24549B280((uint64_t)v19);
}

uint64_t sub_24554B134(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a4;
  uint64_t v50 = a7;
  uint64_t v10 = *a5;
  uint64_t v46 = a5;
  uint64_t v11 = v10;
  uint64_t v51 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v43 = *(void *)(v51 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v51);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v43 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v43 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v45 = v11;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  PersistentModel.persistentModelID.getter(a6, AssociatedConformanceWitness, (uint64_t)v20);
  sub_24547F75C((uint64_t)v22, (uint64_t)v20);
  sub_24549B280((uint64_t)v22);
  uint64_t v24 = *a3;
  swift_bridgeObjectRetain();
  uint64_t v47 = a1;
  uint64_t v48 = a6;
  uint64_t v44 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a6, AssociatedConformanceWitness, (uint64_t)v17);
  if (!*(void *)(v24 + 16)
    || (sub_24558F7D8(),
        sub_24558E158(),
        sub_24554DE60(),
        sub_24558E4D8(),
        uint64_t v25 = sub_24558F818(),
        uint64_t v26 = -1 << *(unsigned char *)(v24 + 32),
        unint64_t v27 = v25 & ~v26,
        ((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_24549B280((uint64_t)v17);
    uint64_t v39 = *(void **)(v45 + *MEMORY[0x263F8EA20]);
    uint64_t v40 = v50;
    uint64_t v41 = (void *)sub_2454BCE88((uint64_t)v46, v39, v50);
    sub_2454C2E50(v41, v47, (uint64_t)v39, v48, v40, v44);
    return swift_release();
  }
  uint64_t v28 = ~v26;
  uint64_t v29 = *(int *)(v51 + 20);
  uint64_t v30 = *(void *)(v43 + 72);
  while (1)
  {
    sub_24549B2DC(*(void *)(v24 + 48) + v30 * v27, (uint64_t)v14);
    uint64_t v31 = *(void *)&v14[*(int *)(v51 + 20)];
    uint64_t v32 = *(void *)&v17[v29];
    uint64_t v33 = *(void *)(v31 + 24);
    uint64_t v34 = *(void *)(v32 + 24);
    if (v33)
    {
      if (!v34
        || (*(void *)(v31 + 16) == *(void *)(v32 + 16) ? (BOOL v35 = v33 == v34) : (BOOL v35 = 0),
            !v35 && (sub_24558F598() & 1) == 0))
      {
LABEL_5:
        sub_24549B280((uint64_t)v14);
        goto LABEL_6;
      }
    }
    else if (v34)
    {
      goto LABEL_5;
    }
    BOOL v36 = *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v32 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v32 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v36 && (sub_24558F598() & 1) == 0) {
      goto LABEL_5;
    }
    if (*(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v32 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v32 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    char v38 = sub_24558F598();
    sub_24549B280((uint64_t)v14);
    if (v38) {
      goto LABEL_28;
    }
LABEL_6:
    unint64_t v27 = (v27 + 1) & v28;
    if (((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
      goto LABEL_25;
    }
  }
  sub_24549B280((uint64_t)v14);
LABEL_28:
  swift_bridgeObjectRelease();
  return sub_24549B280((uint64_t)v17);
}

uint64_t sub_24554B504(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a3;
  uint64_t v46 = a6;
  uint64_t v9 = *a4;
  uint64_t v42 = a4;
  uint64_t v10 = v9;
  uint64_t v47 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v11 = *(void *)(v47 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v47);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = *a2;
  uint64_t v41 = v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  uint64_t v43 = a1;
  uint64_t v44 = a5;
  uint64_t v40 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a5, AssociatedConformanceWitness, (uint64_t)v16);
  if (!*(void *)(v17 + 16)
    || (sub_24558F7D8(),
        sub_24558E158(),
        sub_24554DE60(),
        sub_24558E4D8(),
        uint64_t v19 = sub_24558F818(),
        uint64_t v20 = -1 << *(unsigned char *)(v17 + 32),
        unint64_t v21 = v19 & ~v20,
        ((*(void *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_24549B280((uint64_t)v16);
    uint64_t v33 = v40;
    uint64_t v34 = *(void **)(v41 + *MEMORY[0x263F8EA20]);
    uint64_t v35 = v43;
    uint64_t v36 = v46;
    sub_2454BD094(v43, v40, (uint64_t)v34, v46);
    uint64_t v37 = (void *)sub_2454BCE88((uint64_t)v42, v34, v36);
    sub_2454BD2A4(v37, v35, (uint64_t)v34, v44, v36, v33);
    return swift_release();
  }
  uint64_t v22 = ~v20;
  uint64_t v23 = *(int *)(v47 + 20);
  uint64_t v24 = *(void *)(v11 + 72);
  while (1)
  {
    sub_24549B2DC(*(void *)(v17 + 48) + v24 * v21, (uint64_t)v14);
    uint64_t v25 = *(void *)&v14[*(int *)(v47 + 20)];
    uint64_t v26 = *(void *)&v16[v23];
    uint64_t v27 = *(void *)(v25 + 24);
    uint64_t v28 = *(void *)(v26 + 24);
    if (v27)
    {
      if (!v28
        || (*(void *)(v25 + 16) == *(void *)(v26 + 16) ? (BOOL v29 = v27 == v28) : (BOOL v29 = 0),
            !v29 && (sub_24558F598() & 1) == 0))
      {
LABEL_5:
        sub_24549B280((uint64_t)v14);
        goto LABEL_6;
      }
    }
    else if (v28)
    {
      goto LABEL_5;
    }
    BOOL v30 = *(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v30 && (sub_24558F598() & 1) == 0) {
      goto LABEL_5;
    }
    if (*(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    char v32 = sub_24558F598();
    sub_24549B280((uint64_t)v14);
    if (v32) {
      goto LABEL_28;
    }
LABEL_6:
    unint64_t v21 = (v21 + 1) & v22;
    if (((*(void *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_25;
    }
  }
  sub_24549B280((uint64_t)v14);
LABEL_28:
  swift_bridgeObjectRelease();
  return sub_24549B280((uint64_t)v16);
}

uint64_t sub_24554B87C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *a1;
  sub_24554DFF4(a2 + 24, (uint64_t)v21, &qword_26B0DA230);
  uint64_t v14 = (void *)MEMORY[0x263F8EA20];
  if (!v22)
  {
    sub_2454A5308((uint64_t)v21, &qword_26B0DA230);
    goto LABEL_7;
  }
  uint64_t v15 = *(void *)(*MEMORY[0x263F8EA20] + v13 + 8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v24 = a3;
    sub_24558F568();
    sub_24558E668();
    uint64_t v24 = a4;
    type metadata accessor for Schema.Relationship();
    sub_24558F0E8();
    sub_24558E668();
    uint64_t v24 = a5;
    sub_24558F568();
    sub_24558E668();
    uint64_t result = sub_24558F1A8();
    __break(1u);
    return result;
  }
  uint64_t v16 = v24;
  uint64_t v17 = *(void *)(v13 + *v14);
  if (PersistentModel.modelContext.getter(v17, a7))
  {
    sub_2454DDFBC(a5, v17, a7);
    swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a7 + 40))(v21, v17, a7);
  uint64_t v18 = v22;
  uint64_t v19 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 120))(a1, v16, v15, a6, v18, v19);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v21);
}

uint64_t sub_24554BB54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = (void *)MEMORY[0x263F8EA20];
  uint64_t v10 = *(void *)(*MEMORY[0x263F8EA20] + *a1 + 8);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v21 = a4;
  uint64_t WitnessTable = swift_getWitnessTable();
  PersistentModel.getValue<A, B>(forKey:)(a1, v11, a5, WitnessTable);
  uint64_t v12 = *(void *)(v8 + *v9);
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24558EB08();
  if (PersistentModel.modelContext.getter(v12, a5))
  {
    sub_2454DDFBC(a2, v12, a5);
    swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v18, v12, a5);
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  uint64_t v17 = v22;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 136))(a1, &v17, v10, v11, WitnessTable, v13, v14);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v18);
}

uint64_t sub_24554BD60(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v9 = (void *)MEMORY[0x263F8EA20];
  uint64_t v10 = *(void *)(*a1 + *MEMORY[0x263F8EA20]);
  if (PersistentModel.modelContext.getter(v10, a4))
  {
    sub_2454DDFBC(a2, v10, a4);
    swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 40))(v14, v10, a4);
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(uint64_t *, void, void, uint64_t, uint64_t, uint64_t))(v12 + 128))(a1, 0, *(void *)(*(void *)(*v9 + v8 + 8) + 16), a3, v11, v12);
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v14);
}

uint64_t sub_24554BE8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *a1;
  sub_24554DFF4(a2 + 24, (uint64_t)v19, &qword_26B0DA230);
  uint64_t v12 = (void *)MEMORY[0x263F8EA20];
  if (!v20)
  {
    sub_2454A5308((uint64_t)v19, &qword_26B0DA230);
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(*MEMORY[0x263F8EA20] + v11 + 8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v19[0] = 0;
    v19[1] = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    uint64_t v22 = a3;
    type metadata accessor for Schema.Relationship();
    sub_24558F0E8();
    sub_24558E668();
    uint64_t v22 = a4;
    sub_24558F568();
    sub_24558E668();
    uint64_t result = sub_24558F1A8();
    __break(1u);
    return result;
  }
  uint64_t v14 = v22;
  uint64_t v15 = *(void *)(v11 + *v12);
  if (PersistentModel.modelContext.getter(v15, a5))
  {
    sub_2454DDFBC(a4, v15, a5);
    swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v19, v15, a5);
  uint64_t v16 = v20;
  uint64_t v17 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 120))(a1, v14, v13, a6, v16, v17);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v19);
}

uint64_t sub_24554C15C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v22)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v24)(void *__return_ptr, uint64_t, uint64_t);
  void *v25;
  void v26[3];
  void v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  uint64_t v8 = *a1;
  uint64_t v9 = (void *)MEMORY[0x263F8EA20];
  uint64_t v10 = *(void *)(*a1 + *MEMORY[0x263F8EA20]);
  uint64_t v24 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 40);
  v24(v27, v10, a4);
  uint64_t v12 = v28;
  uint64_t v11 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  uint64_t v22 = *(void (**)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 88);
  uint64_t v13 = *(void *)(*v9 + v8 + 8);
  uint64_t v14 = *(void *)(v13 + 16);
  long long v26[2] = a5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = a1;
  uint64_t v16 = a1;
  uint64_t v17 = v14;
  uint64_t v18 = WitnessTable;
  v22(&v30, v16, v13, v17, WitnessTable, v12, v11);
  __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v27);
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24558EB08();
  if (PersistentModel.modelContext.getter(v10, a4))
  {
    sub_2454DDFBC(a2, v10, a4);
    swift_release();
  }
  v24(v27, v10, a4);
  uint64_t v19 = v28;
  uint64_t v20 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  v26[0] = v30;
  (*(void (**)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 136))(v25, v26, v13, v17, v18, v19, v20);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v27);
}

uint64_t sub_24554C3D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v17;
  void (*v18)(void *__return_ptr);
  uint64_t v20;
  void v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  uint64_t v5 = *a1;
  uint64_t v6 = (void *)MEMORY[0x263F8EA20];
  uint64_t v18 = *(void (**)(void *__return_ptr))(a4 + 40);
  uint64_t v17 = *(void *)(*a1 + *MEMORY[0x263F8EA20]);
  v18(v21);
  uint64_t v7 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  uint64_t v8 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t))(v7 + 88);
  uint64_t v9 = *(void *)(*v6 + v5 + 8);
  uint64_t v10 = *(void *)(*(void *)(v9 + 16) + 16);
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  v8(&v20, a1, v9, v10);
  if (v20)
  {
    uint64_t v24 = v20;
    uint64_t v11 = __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v21);
    MEMORY[0x270FA5388](v11);
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_24558EB08();
    if (PersistentModel.modelContext.getter(v17, a4))
    {
      sub_2454DDFBC(a2, v17, a4);
      swift_release();
    }
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v18)(v21, v17, a4);
    uint64_t v12 = v22;
    uint64_t v13 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v20 = v24;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 136))(a1, &v20, v9, v10, WitnessTable, v12, v13);
    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v21);
}

uint64_t sub_24554C6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v16 - v12;
  PersistentModel.persistentModelID.getter(a4, a6, (uint64_t)v16 - v12);
  PersistentModel.persistentModelID.getter(a4, a6, (uint64_t)v11);
  char v14 = _s9SwiftData20PersistentIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v11);
  sub_24549B280((uint64_t)v11);
  sub_24549B280((uint64_t)v13);
  return v14 & 1;
}

uint64_t sub_24554C7AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v9 = (void *)MEMORY[0x263F8EA20];
  uint64_t v10 = *(void *)(*a1 + *MEMORY[0x263F8EA20]);
  if (PersistentModel.modelContext.getter(v10, a3))
  {
    sub_2454DDFBC(a2, v10, a3);
    swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v14, v10, a3);
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(uint64_t *, void, void, uint64_t, uint64_t, uint64_t))(v12 + 128))(a1, 0, *(void *)(*(void *)(*v9 + v8 + 8) + 16), a4, v11, v12);
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v14);
}

uint64_t sub_24554C8D8(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  void (*v10)(void *__return_ptr);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  void v23[3];
  uint64_t v24;
  uint64_t v25;

  uint64_t v9 = *a1;
  uint64_t v10 = *(void (**)(void *__return_ptr))(a6 + 40);
  uint64_t v11 = (void *)MEMORY[0x263F8EA20];
  uint64_t v20 = *(void *)(*a1 + *MEMORY[0x263F8EA20]);
  v10(v23);
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  char v14 = *(void *)(*v11 + v9 + 8);
  uint64_t v15 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 72))(a1, v14, a5, v13, v12);
  __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v23);
  v23[0] = v15;
  if ((sub_24558E558() & 1) == 0)
  {
    if (PersistentModel.modelContext.getter(v20, a6))
    {
      sub_2454DDFBC(a2, v20, a6);
      swift_release();
    }
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)(v23, v20, a6);
    uint64_t v16 = v24;
    uint64_t v17 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 120))(a1, a3, v14, a5, v16, v17);
    __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v23);
    sub_24554E12C(a2, a4, v15, v14, v20, a5, a6);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_24554CAD4(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  void (*v21)(void *__return_ptr);
  uint64_t v22;
  void v24[3];
  uint64_t v25;
  uint64_t v26;

  uint64_t v10 = *a1;
  uint64_t v11 = (void *)MEMORY[0x263F8EA20];
  uint64_t v22 = *(void *)(*a1 + *MEMORY[0x263F8EA20]);
  uint64_t v21 = *(void (**)(void *__return_ptr))(a6 + 40);
  v21(v24);
  uint64_t v12 = v25;
  uint64_t v13 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  uint64_t v14 = *(void *)(*(void *)(*v11 + v10 + 8) + 16);
  uint64_t v15 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 80))(a1, v14, a5, v12, v13);
  __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v24);
  if (v15)
  {
    v24[0] = v15;
    swift_unknownObjectRetain_n();
    char v16 = sub_24558E558();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    if (v16) {
      return swift_unknownObjectRelease();
    }
  }
  if (PersistentModel.modelContext.getter(v22, a6))
  {
    sub_2454DDFBC(a2, v22, a6);
    swift_release();
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v21)(v24, v22, a6);
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 128))(a1, a3, v14, a5, v17, v18);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v24);
  if (v15)
  {
    swift_unknownObjectRetain();
    sub_24554E12C(a2, a4, v15, v14, v22, a5, a6);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24554CD10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a1;
  uint64_t v10 = (void *)MEMORY[0x263F8EA20];
  uint64_t v11 = *(void *)(*MEMORY[0x263F8EA20] + *a1 + 8);
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v22 = a4;
  uint64_t WitnessTable = swift_getWitnessTable();
  PersistentModel.getValue<A, B>(forKey:)(a1, v12, a5, WitnessTable);
  v19[0] = a3;
  swift_unknownObjectRetain();
  sub_24558E888();
  uint64_t v14 = *(void *)(v9 + *v10);
  if (PersistentModel.modelContext.getter(v14, a5))
  {
    sub_2454DDFBC(a2, v14, a5);
    swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v19, v14, a5);
  uint64_t v15 = v20;
  uint64_t v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  uint64_t v18 = v23;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 136))(a1, &v18, v11, v12, WitnessTable, v15, v16);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v19);
}

uint64_t sub_24554CEBC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  if (a2) {
    uint64_t v5 = a3;
  }
  else {
    uint64_t v5 = 0;
  }
  sub_24558F8A8();
  return sub_24548CF48(a2, v5, a1);
}

uint64_t sub_24554CF90(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  if (a2) {
    uint64_t v5 = a3;
  }
  else {
    uint64_t v5 = 0;
  }
  sub_24558F8A8();
  return sub_24548CF48(a2, v5, a1);
}

uint64_t sub_24554D064(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  if (a2) {
    uint64_t v5 = a3;
  }
  else {
    uint64_t v5 = 0;
  }
  sub_24558F8A8();
  return sub_24548CF48(a2, v5, a1);
}

uint64_t PersistentModel.hash(into:)()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unsigned int v4 = (char *)&v6 - v3;
  uint64_t v7 = v0;
  sub_24558EFA8();
  swift_getAssociatedConformanceWitness();
  sub_24558E4D8();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, AssociatedTypeWitness);
}

uint64_t sub_24554D274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v43 = a4;
  uint64_t v42 = sub_24558F868();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B10);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v39 = (char *)&v34 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v38 = (char *)&v34 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v41 = a3;
  uint64_t v19 = sub_2454D7E9C(a2, a3) + OBJC_IVAR____TtC9SwiftData14_ModelMetadata_observationRegistar;
  swift_beginAccess();
  sub_24554DFF4(v19, (uint64_t)v18, &qword_268EE3B10);
  swift_release();
  uint64_t v20 = sub_24558E278();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v22((uint64_t)v18, 1, v20) == 1)
  {
    uint64_t v34 = v22;
    uint64_t v37 = v12;
    sub_2454A5308((uint64_t)v18, &qword_268EE3B10);
    uint64_t v35 = a2;
    *((void *)&v51 + 1) = a2;
    *(void *)&long long v50 = a1;
    uint64_t v36 = a1;
    swift_unknownObjectRetain();
    sub_24558F828();
    sub_24558F858();
    sub_24558F0C8();
    sub_24558F248();
    uint64_t v23 = (uint64_t)v38;
    if (*((void *)&v49 + 1))
    {
      while (1)
      {
        long long v44 = v47;
        long long v45 = v48;
        long long v46 = v49;
        if (*((void *)&v47 + 1))
        {
          if ((void)v44 == 0xD000000000000016 && *((void *)&v47 + 1) == 0x8000000245592830
            || (sub_24558F598() & 1) != 0)
          {
            break;
          }
        }
        sub_2454A5308((uint64_t)&v44, &qword_268EE3B30);
        sub_24558F248();
        if (!*((void *)&v49 + 1)) {
          goto LABEL_14;
        }
      }
      swift_release();
      long long v50 = v44;
      long long v51 = v45;
      long long v52 = v46;
      swift_release();
      uint64_t v24 = (uint64_t)v37;
      if (*((void *)&v52 + 1))
      {
        swift_bridgeObjectRelease();
        sub_2454A0BBC(&v51, &v53);
        int v25 = swift_dynamicCast();
        uint64_t v26 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56);
        v26(v23, v25 ^ 1u, 1, v20);
        int v27 = v34(v23, 1, v20);
        uint64_t v28 = v35;
        if (v27 != 1)
        {
          uint64_t v29 = v43;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v43, v23, v20);
          uint64_t v30 = sub_2454D7E9C(v28, v41);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v42);
          uint64_t v31 = (uint64_t)v39;
          (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v39, v29, v20);
          v26(v31, 0, 1, v20);
          sub_24554DDF8(v31, v24);
          uint64_t v32 = v30 + OBJC_IVAR____TtC9SwiftData14_ModelMetadata_observationRegistar;
          swift_beginAccess();
          sub_24554DCC4(v24, v32);
          swift_endAccess();
          return swift_release();
        }
        goto LABEL_16;
      }
    }
    else
    {
LABEL_14:
      swift_release();
      long long v50 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      swift_release();
    }
    sub_2454A5308((uint64_t)&v50, &qword_268EE3B28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v23, 1, 1, v20);
LABEL_16:
    sub_2454A5308(v23, &qword_268EE3B10);
    uint64_t result = sub_24558F1A8();
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v43, v18, v20);
}

uint64_t sub_24554D860()
{
  uint64_t v0 = sub_24558EDA8();
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v2 = v0;
  }
  else {
    uint64_t v2 = 0;
  }
  if (v2)
  {
    sub_24558EDA8();
    return sub_24554D960();
  }
  return result;
}

uint64_t sub_24554D960()
{
  return swift_release();
}

uint64_t sub_24554DA0C(uint64_t a1)
{
  return sub_24554979C(a1, *(void **)(v1 + 56), *(void *)(v1 + 64), *(uint64_t **)(v1 + 72), *(void ***)(v1 + 80), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24554DA44(uint64_t a1)
{
  return sub_245549C44(a1, *(void *)(v1 + 40), *(uint64_t **)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24554DA58(uint64_t a1)
{
  return sub_24554A014(a1, *(uint64_t **)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24554DA68(uint64_t a1)
{
  return sub_24554AC8C(a1, *(void **)(v1 + 64), *(void *)(v1 + 72), *(uint64_t **)(v1 + 80), *(void ***)(v1 + 88), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24554DAA8(uint64_t a1)
{
  return sub_24554B134(a1, *(void *)(v1 + 48), *(uint64_t **)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24554DADC(uint64_t a1)
{
  return sub_24554B504(a1, *(uint64_t **)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t dispatch thunk of PersistentModel.init(backingData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PersistentModel.persistentBackingData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PersistentModel.persistentBackingData.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PersistentModel.persistentBackingData.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of static PersistentModel.schemaMetadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_24554DB54()
{
  return type metadata accessor for _ModelMetadata();
}

void sub_24554DB5C()
{
  sub_24554DC20();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_24554DC20()
{
  if (!qword_268EE3B08)
  {
    sub_24558E278();
    unint64_t v0 = sub_24558ECE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268EE3B08);
    }
  }
}

uint64_t sub_24554DC78()
{
  type metadata accessor for _InitialBackingData();

  return swift_getWitnessTable();
}

uint64_t sub_24554DCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24554DD30(uint64_t a1)
{
  return sub_24548CE30(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24554CEBC);
}

uint64_t sub_24554DD50(uint64_t a1)
{
  return sub_24554CF90(a1, *(void (**)(uint64_t))(v1 + 48), *(void *)(v1 + 56));
}

uint64_t objectdestroy_38Tm()
{
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24554DDD0(uint64_t a1)
{
  return sub_24554D064(a1, *(void (**)(uint64_t))(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_24554DDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24554DE60()
{
  unint64_t result = qword_26B0DA0F0;
  if (!qword_26B0DA0F0)
  {
    sub_24558E158();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0DA0F0);
  }
  return result;
}

uint64_t sub_24554DEB8()
{
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1Tm_4(v0 + 56);
  }
  if (*(void *)(v0 + 112)) {
    __swift_destroy_boxed_opaque_existential_1Tm_4(v0 + 88);
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 152, 7);
}

uint64_t sub_24554DF30(uint64_t *a1)
{
  return sub_24554B87C(a1, (uint64_t)(v1 + 4), v1[16], v1[17], v1[18], v1[2], v1[3]);
}

uint64_t sub_24554DF44()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24554DF7C(uint64_t *a1)
{
  return sub_24554BD60(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_24554DF8C(uint64_t *a1)
{
  return sub_24554BB54(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_24554DF9C()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24554DFB0()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24554DFC4(uint64_t a1)
{
  return sub_245484F64(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_245484F94) & 1;
}

uint64_t sub_24554DFF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24554E05C(uint64_t a1)
{
  return sub_24554E0D8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24554C8D8);
}

uint64_t objectdestroy_62Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24554E0C0(uint64_t a1)
{
  return sub_24554E0D8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24554CAD4);
}

uint64_t sub_24554E0D8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_24554E0F4(uint64_t *a1)
{
  return sub_24554CD10(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_24554E104()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24554E118()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24554E12C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  uint64_t v14 = (uint64_t *)a2[6];
  if (!v14)
  {
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    uint64_t v14 = &v39;
    sub_24558EF78();
    sub_24558E668();
    *(void *)&v38[0] = a2;
    type metadata accessor for Schema.Relationship();
    sub_24558F0E8();
    goto LABEL_12;
  }
  uint64_t v7 = v38;
  swift_retain();
  uint64_t v36 = a4;
  uint64_t v15 = sub_2454A0D2C(a4, a6);
  uint64_t v16 = v15[2];
  if (v16)
  {
    uint64_t v17 = (uint64_t)(v15 + 4);
    swift_beginAccess();
    do
    {
      sub_2454A0944(v17, (uint64_t)v37);
      BOOL v18 = *(void *)&v37[0] == a2[2] && *((void *)&v37[0] + 1) == a2[3];
      if (v18 || (sub_24558F598() & 1) != 0) {
        goto LABEL_13;
      }
      sub_2454A0A9C((uint64_t)v37);
      v17 += 96;
      --v16;
    }
    while (v16);
  }
  memset(v38, 0, sizeof(v38));
  swift_bridgeObjectRelease();
  do
  {
    sub_2454A5308((uint64_t)v38, &qword_26B0D9820);
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_24558EF78();
    swift_bridgeObjectRelease();
    *(void *)&v38[0] = 0xD000000000000025;
    *((void *)&v38[0] + 1) = 0x8000000245594950;
    swift_beginAccess();
    a2 = (void *)a2[3];
    swift_bridgeObjectRetain();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    sub_24558F908();
    uint64_t v14 = (uint64_t *)v38;
    sub_24558E668();
    swift_bridgeObjectRelease();
LABEL_12:
    sub_24558F1A8();
    __break(1u);
LABEL_13:
    long long v19 = v37[2];
    long long v20 = v37[4];
    long long v21 = v37[5];
    void v7[3] = v37[3];
    v7[4] = v20;
    v7[5] = v21;
    v38[0] = v37[0];
    v7[1] = v37[1];
    void v7[2] = v19;
    swift_bridgeObjectRelease();
  }
  while (!*((void *)&v38[0] + 1));
  long long v22 = v7[3];
  long long v23 = v7[4];
  long long v24 = v7[1];
  v7[8] = v7[2];
  v7[9] = v22;
  long long v25 = v7[5];
  v7[10] = v23;
  v7[11] = v25;
  v7[6] = v38[0];
  v7[7] = v24;
  sub_2454A0944((uint64_t)&v39, (uint64_t)v38);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a6;
  *(void *)(v26 + 24) = a7;
  long long v27 = v7[3];
  long long v28 = v7[4];
  long long v29 = v7[1];
  *(_OWORD *)(v26 + 64) = v7[2];
  *(_OWORD *)(v26 + 80) = v27;
  long long v30 = v7[5];
  *(_OWORD *)(v26 + 96) = v28;
  *(_OWORD *)(v26 + 112) = v30;
  *(_OWORD *)(v26 + 32) = v38[0];
  *(_OWORD *)(v26 + 48) = v29;
  *(void *)(v26 + 128) = a2;
  *(void *)(v26 + 136) = a3;
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = a6;
  v31[3] = a7;
  v31[4] = a3;
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = a6;
  v32[3] = a7;
  v32[4] = a3;
  v32[5] = a1;
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = a6;
  v33[3] = a7;
  v33[4] = a3;
  v33[5] = a1;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_24548C470(v36, (uint64_t)v14, (void (*)(uint64_t))sub_24554E5E0, v26, (void (*)(uint64_t))sub_24554E5F0, (uint64_t)v31, (void (*)(uint64_t))sub_24554E600, (uint64_t)v32, (void (*)(uint64_t))sub_24554E650, (uint64_t)v33, 0, 0, 0, 0, v36, v36, a5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_2454A0A9C((uint64_t)&v39);
}

uint64_t sub_24554E570()
{
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1Tm_4(v0 + 56);
  }
  if (*(void *)(v0 + 112)) {
    __swift_destroy_boxed_opaque_existential_1Tm_4(v0 + 88);
  }
  swift_release();
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 144, 7);
}

uint64_t sub_24554E5E0(uint64_t *a1)
{
  return sub_24554BE8C(a1, (uint64_t)(v1 + 4), v1[16], v1[17], v1[2], v1[3]);
}

uint64_t sub_24554E5F0(uint64_t *a1)
{
  return sub_24554C7AC(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_24554E600(void *a1)
{
  return sub_24554C15C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t objectdestroy_50Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24554E650(uint64_t *a1)
{
  return sub_24554C3D4(a1, v1[4], v1[5], v1[2]);
}

uint64_t sub_24554E65C(uint64_t a1)
{
  return sub_245484F64(a1, sub_24554C6AC) & 1;
}

uint64_t sub_24554E68C(uint64_t a1)
{
  return sub_245484F64(a1, sub_24554C6AC) & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for _UnorderedCollectionDeltaSnapshot(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for _UnorderedCollectionDeltaSnapshot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for _UnorderedCollectionDeltaSnapshot(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for _UnorderedCollectionDeltaSnapshot(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for _UnorderedCollectionDeltaSnapshot(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _UnorderedCollectionDeltaSnapshot(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _UnorderedCollectionDeltaSnapshot(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _UnorderedCollectionDeltaSnapshot()
{
  return &type metadata for _UnorderedCollectionDeltaSnapshot;
}

uint64_t sub_24554E94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for DefaultHistoryInsert();
  uint64_t result = sub_2454A1C18(a3, (uint64_t)a4 + *(int *)(v7 + 40));
  a4[1] = a2;
  return result;
}

uint64_t sub_24554E9A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  uint64_t v9 = type metadata accessor for DefaultHistoryUpdate();
  uint64_t result = sub_2454A1C18(a3, (uint64_t)a5 + *(int *)(v9 + 40));
  a5[1] = a2;
  *(void *)((char *)a5 + *(int *)(v9 + 44)) = a4;
  return result;
}

uint64_t sub_24554EA14@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA0C0);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  sub_24558F028();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3B38);
  swift_getTupleTypeMetadata2();
  sub_24558E828();
  uint64_t result = sub_24558E458();
  *a1 = v2;
  a1[1] = result;
  return result;
}

void sub_24554EABC(uint64_t a1, uint64_t a2)
{
  int v4 = *v2 + 4;
  os_unfair_lock_lock(v4);
  sub_245554150(a2, (uint64_t)v5);
  sub_24558F028();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3B38);
  sub_24558E488();
  sub_24558E4A8();
  os_unfair_lock_unlock(v4);
}

__n128 sub_24554EB70@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  uint64_t v9 = type metadata accessor for DefaultHistoryDelete();
  sub_2454A1C18(a3, (uint64_t)a5 + *(int *)(v9 + 40));
  a5[1] = a2;
  __n128 result = *a4;
  *(__n128 *)((char *)a5 + *(int *)(v9 + 44)) = *a4;
  return result;
}

uint64_t sub_24554EBE4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_245559094(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_245550644(v5);
  *a1 = v2;
  return result;
}

uint64_t HistoryChange.changedPersistentIdentifier.getter()
{
  sub_2454FE178(v0, (uint64_t)v7);
  sub_24554ED64(v7, (uint64_t)v4);
  uint64_t v1 = v5;
  uint64_t v2 = v6;
  __swift_project_boxed_opaque_existential_1Tm_2(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 88))(v1, v2);
  return __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)v4);
}

uint64_t sub_24554ED64(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t HistoryTombstone.Iterator.next()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = sub_24558F028();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B38);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_24558E478();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 >= v7)
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    uint64_t v13 = *(void *)(v1 + 16);
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (!v14) {
      goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    v18[0] = v3;
    uint64_t v9 = MEMORY[0x263F8DAB8];
    sub_24558E468();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_24558E8D8();
    sub_24558E8F8();
    swift_bridgeObjectRelease();
    uint64_t v17 = v3;
    swift_bridgeObjectRetain();
    swift_retain();
    MEMORY[0x2456A0EE0](v18, &v17, v3, v5, v6, v9);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v10 = v19;
    if (v19)
    {
      uint64_t v11 = __swift_project_boxed_opaque_existential_1Tm_2(v18, v19);
      *(void *)(a1 + 24) = v10;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(boxed_opaque_existential_0, v11, v10);
      swift_release();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)v18);
      goto LABEL_8;
    }
  }
  swift_release();
  uint64_t result = sub_24555109C((uint64_t)v18);
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
LABEL_8:
  uint64_t v16 = *(void *)(v1 + 16);
  BOOL v14 = __OFADD__(v16, 1);
  uint64_t v15 = v16 + 1;
  if (!v14)
  {
LABEL_9:
    *(void *)(v1 + 16) = v15;
    return result;
  }
  __break(1u);
  return result;
}

void HistoryTombstone.subscript.getter(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  uint64_t v8 = a1;
  uint64_t v6 = sub_24558F028();
  swift_retain();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B38);
  MEMORY[0x2456A0EE0](&v8, v4, v6, v7, MEMORY[0x263F8DAB8]);
  swift_release();
  os_unfair_lock_unlock(v5);
}

uint64_t HistoryTombstone.makeIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = 0;
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_24554F068@<X0>(void *a1@<X8>)
{
  HistoryTombstone.makeIterator()(a1);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_24554F0A4()
{
  return 0;
}

uint64_t sub_24554F0AC()
{
  return 2;
}

uint64_t sub_24554F0B4()
{
  uint64_t v0 = sub_24555133C();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_24554F104()
{
  return sub_24558E728();
}

uint64_t HistoryDescriptor.predicate.getter@<X0>(uint64_t a1@<X8>)
{
  sub_24558E228();
  uint64_t v3 = sub_24558ECE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HistoryDescriptor.predicate.setter(uint64_t a1)
{
  sub_24558E228();
  uint64_t v3 = sub_24558ECE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*HistoryDescriptor.predicate.modify())()
{
  return nullsub_21;
}

uint64_t HistoryDescriptor.fetchLimit.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 36));
}

uint64_t HistoryDescriptor.fetchLimit.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + *(int *)(a2 + 36)) = result;
  return result;
}

uint64_t (*HistoryDescriptor.fetchLimit.modify())()
{
  return nullsub_22;
}

uint64_t DefaultHistoryTransaction.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24558E1B8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DefaultHistoryTransaction.changes.getter()
{
  type metadata accessor for DefaultHistoryTransaction();

  return swift_bridgeObjectRetain();
}

uint64_t DefaultHistoryTransaction.token.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 24));

  return swift_bridgeObjectRetain();
}

uint64_t DefaultHistoryTransaction.transactionIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 28));
}

uint64_t DefaultHistoryTransaction.storeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DefaultHistoryTransaction.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DefaultHistoryTransaction.processIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DefaultHistoryTransaction.author.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static DefaultHistoryTransaction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DefaultHistoryTransaction();
  return *(void *)(a1 + *(int *)(v4 + 28)) == *(void *)(a2 + *(int *)(v4 + 28));
}

uint64_t DefaultHistoryTransaction.hash(into:)()
{
  return sub_24558F808();
}

uint64_t DefaultHistoryTransaction.hashValue.getter()
{
  return sub_24558F818();
}

uint64_t sub_24554F558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24558E1B8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_24554F5C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24554F5CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(a1 + 24));
  return swift_bridgeObjectRetain();
}

uint64_t sub_24554F5DC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(result + 28));
  return result;
}

uint64_t sub_24554F5EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_24554F624(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_24554F65C()
{
  return sub_24558F818();
}

uint64_t sub_24554F6A8()
{
  return sub_24558F808();
}

uint64_t sub_24554F6D8()
{
  return sub_24558F818();
}

BOOL sub_24554F720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a1 + *(int *)(a3 + 28)) == *(void *)(a2 + *(int *)(a3 + 28));
}

BOOL static DefaultHistoryInsert.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24554F844(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for DefaultHistoryInsert);
}

uint64_t DefaultHistoryUpdate.updatedAttributes.getter(uint64_t a1)
{
  sub_245551340(a1);

  return swift_bridgeObjectRetain();
}

BOOL static DefaultHistoryUpdate.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24554F844(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for DefaultHistoryUpdate);
}

uint64_t sub_24554F7A0(uint64_t a1)
{
  sub_245551340(a1);

  return swift_bridgeObjectRetain();
}

uint64_t DefaultHistoryDelete.changeIdentifier.getter()
{
  return *(void *)v0;
}

uint64_t DefaultHistoryDelete.transactionIdentifier.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t DefaultHistoryDelete.changedPersistentIdentifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24549B2DC(v2 + *(int *)(a1 + 40), a2);
}

uint64_t DefaultHistoryDelete.tombstone.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 44));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  swift_retain();

  return swift_bridgeObjectRetain();
}

BOOL static DefaultHistoryDelete.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24554F844(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for DefaultHistoryDelete);
}

BOOL sub_24554F844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint64_t *)((char *)&v22 - v12);
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a2 + 8);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v16((char *)&v22 - v12, a1, v7);
  v16(v11, a2, v7);
  if (v14 == v15)
  {
    uint64_t v17 = *v13;
    BOOL v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18((char *)v13, v7);
    uint64_t v19 = *(void *)v11;
    v18(v11, v7);
    return v17 == v19;
  }
  else
  {
    long long v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v11, v7);
    v21((char *)v13, v7);
    return 0;
  }
}

uint64_t _s9SwiftData20DefaultHistoryInsertV4hash4intoys6HasherVz_tF_0()
{
  return sub_24558F808();
}

uint64_t sub_24554FA20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DefaultHistoryDelete.changeIdentifier.getter();
  *a1 = result;
  return result;
}

uint64_t sub_24554FA48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DefaultHistoryDelete.transactionIdentifier.getter();
  *a1 = result;
  return result;
}

uint64_t DefaultHistoryToken.id.getter()
{
  return DefaultHistoryToken.hashValue.getter();
}

uint64_t DefaultHistoryToken.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t result = sub_24558F7D8();
  int64_t v3 = 0;
  uint64_t v4 = v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v7 = v6 & *(void *)(v1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v9 >= v8) {
      return sub_24558F818();
    }
    uint64_t v10 = *(void *)(v4 + 8 * v9);
    ++v3;
    if (!v10)
    {
      int64_t v3 = v9 + 1;
      if (v9 + 1 >= v8) {
        return sub_24558F818();
      }
      uint64_t v10 = *(void *)(v4 + 8 * v3);
      if (!v10)
      {
        int64_t v3 = v9 + 2;
        if (v9 + 2 >= v8) {
          return sub_24558F818();
        }
        uint64_t v10 = *(void *)(v4 + 8 * v3);
        if (!v10)
        {
          int64_t v3 = v9 + 3;
          if (v9 + 3 >= v8) {
            return sub_24558F818();
          }
          uint64_t v10 = *(void *)(v4 + 8 * v3);
          if (!v10)
          {
            int64_t v3 = v9 + 4;
            if (v9 + 4 >= v8) {
              return sub_24558F818();
            }
            uint64_t v10 = *(void *)(v4 + 8 * v3);
            if (!v10) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v7 = (v10 - 1) & v10;
LABEL_5:
    uint64_t result = sub_24558F808();
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v8) {
    return sub_24558F818();
  }
  uint64_t v10 = *(void *)(v4 + 8 * v11);
  if (v10)
  {
    int64_t v3 = v11;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v8) {
      return sub_24558F818();
    }
    uint64_t v10 = *(void *)(v4 + 8 * v3);
    ++v11;
    if (v10) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t DefaultHistoryToken.hash(into:)()
{
  int64_t v1 = 0;
  uint64_t v2 = *v0;
  uint64_t v3 = 1 << *(unsigned char *)(*v0 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v5 = v2 + 64;
  uint64_t v7 = v4 & v6;
  int64_t v8 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    int64_t v10 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v10 >= v8) {
      return result;
    }
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    ++v1;
    if (!v11)
    {
      int64_t v1 = v10 + 1;
      if (v10 + 1 >= v8) {
        return result;
      }
      uint64_t v11 = *(void *)(v5 + 8 * v1);
      if (!v11)
      {
        int64_t v1 = v10 + 2;
        if (v10 + 2 >= v8) {
          return result;
        }
        uint64_t v11 = *(void *)(v5 + 8 * v1);
        if (!v11) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v7 = (v11 - 1) & v11;
LABEL_5:
    uint64_t result = sub_24558F808();
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v8) {
    return result;
  }
  uint64_t v11 = *(void *)(v5 + 8 * v12);
  if (v11)
  {
    int64_t v1 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v1 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v1 >= v8) {
      return result;
    }
    uint64_t v11 = *(void *)(v5 + 8 * v1);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

BOOL static DefaultHistoryToken.< infix(_:_:)()
{
  uint64_t v0 = DefaultHistoryToken.hashValue.getter();
  return v0 < DefaultHistoryToken.hashValue.getter();
}

uint64_t sub_24554FDA8()
{
  return 1;
}

uint64_t sub_24554FDB0()
{
  return sub_24558F818();
}

uint64_t sub_24554FDF4()
{
  return sub_24558F7E8();
}

uint64_t sub_24554FE1C()
{
  return sub_24558F818();
}

uint64_t sub_24554FE5C()
{
  return 0x6B6F5465726F7473;
}

uint64_t sub_24554FE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6B6F5465726F7473 && a2 == 0xEB00000000736E65)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24558F598();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24554FF2C()
{
  return 0;
}

void sub_24554FF38(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24554FF44(uint64_t a1)
{
  unint64_t v2 = sub_24555137C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24554FF80(uint64_t a1)
{
  unint64_t v2 = sub_24555137C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DefaultHistoryToken.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B48);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1Tm_2(a1, a1[3]);
  sub_24555137C();
  sub_24558F888();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B58);
  sub_2455513D0(&qword_268EE3B60);
  sub_24558F468();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DefaultHistoryToken.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  int64_t v12 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B68);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2454BB790(MEMORY[0x263F8EE78]);
  __swift_project_boxed_opaque_existential_1Tm_2(a1, a1[3]);
  sub_24555137C();
  sub_24558F878();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)a1);
  }
  else
  {
    int64_t v8 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B58);
    sub_2455513D0(&qword_268EE3B70);
    sub_24558F3B8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v10 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *int64_t v8 = v10;
    __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)a1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24555031C@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_245550330()
{
  uint64_t v1 = *v0;
  uint64_t result = sub_24558F7D8();
  int64_t v3 = 0;
  uint64_t v4 = v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v7 = v6 & *(void *)(v1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v9 >= v8) {
      return sub_24558F818();
    }
    uint64_t v10 = *(void *)(v4 + 8 * v9);
    ++v3;
    if (!v10)
    {
      int64_t v3 = v9 + 1;
      if (v9 + 1 >= v8) {
        return sub_24558F818();
      }
      uint64_t v10 = *(void *)(v4 + 8 * v3);
      if (!v10)
      {
        int64_t v3 = v9 + 2;
        if (v9 + 2 >= v8) {
          return sub_24558F818();
        }
        uint64_t v10 = *(void *)(v4 + 8 * v3);
        if (!v10) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v7 = (v10 - 1) & v10;
LABEL_5:
    uint64_t result = sub_24558F808();
  }
  int64_t v11 = v9 + 3;
  if (v11 >= v8) {
    return sub_24558F818();
  }
  uint64_t v10 = *(void *)(v4 + 8 * v11);
  if (v10)
  {
    int64_t v3 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v8) {
      return sub_24558F818();
    }
    uint64_t v10 = *(void *)(v4 + 8 * v3);
    ++v11;
    if (v10) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

BOOL sub_245550474()
{
  uint64_t v0 = DefaultHistoryToken.hashValue.getter();
  return v0 < DefaultHistoryToken.hashValue.getter();
}

BOOL sub_2455504CC()
{
  uint64_t v0 = DefaultHistoryToken.hashValue.getter();
  return v0 >= DefaultHistoryToken.hashValue.getter();
}

BOOL sub_245550524()
{
  uint64_t v0 = DefaultHistoryToken.hashValue.getter();
  return v0 >= DefaultHistoryToken.hashValue.getter();
}

BOOL sub_24555057C()
{
  uint64_t v0 = DefaultHistoryToken.hashValue.getter();
  return v0 < DefaultHistoryToken.hashValue.getter();
}

uint64_t sub_2455505D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DefaultHistoryToken.hashValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_245550610@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DefaultHistoryToken.init(from:)(a1, a2);
}

uint64_t sub_245550628(void *a1)
{
  return DefaultHistoryToken.encode(to:)(a1);
}

uint64_t sub_245550644(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24558F538();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_245550D30(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_245550E00((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_24555889C((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_24558E838();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  int64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (*v17 == v15 && v17[1] == v16)
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_24558F598();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    long long v21 = (void *)(v103 + 16 * v20);
    do
    {
      long long v23 = (void *)(v10 + 16 * v9);
      if (*v23 == *(v21 - 1) && v23[1] == *v21)
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_24558F598()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v11 = sub_245558628(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      int64_t v11 = sub_245558628((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          long long v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        unint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_245550E00((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        int64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        char v38 = v33;
        do
        {
          BOOL v39 = *(v38 - 2) == v35 && *(v38 - 1) == v36;
          if (v39 || (sub_24558F598() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)char v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_24558F198();
  __break(1u);
  return result;
}

uint64_t sub_245550D30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = v6;
    uint64_t v13 = (void *)v8;
    while (1)
    {
      uint64_t result = *(v13 - 2);
      BOOL v14 = result == v10 && *(v13 - 1) == v11;
      if (v14 || (uint64_t result = sub_24558F598(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v10 = *v13;
      uint64_t v11 = v13[1];
      *(_OWORD *)uint64_t v13 = *((_OWORD *)v13 - 1);
      *(v13 - 1) = v11;
      *(v13 - 2) = v10;
      v13 -= 2;
      if (v4 == ++v12) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_245550E00(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        BOOL v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = v21 == *((void *)v17 - 2) && v22 == *((void *)v17 - 1);
          if (v23 || (sub_24558F598() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)BOOL v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)BOOL v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    BOOL v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v4 == *(void *)v6 && *((void *)v4 + 1) == *((void *)v6 + 1);
        if (v15 || (sub_24558F598() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_245558724((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_24555109C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3B40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for DefaultHistoryInsert()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s9SwiftData19DefaultHistoryTokenV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*(void *)(*a1 + 16) != *(void *)(*a2 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_245556FB4(v2);
  swift_bridgeObjectRelease();
  uint64_t v21 = v4;
  sub_24554EBE4((uint64_t *)&v21);
  swift_bridgeObjectRelease();
  uint64_t v5 = v21;
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_245556FB4(v3);
  swift_bridgeObjectRelease();
  uint64_t v21 = v6;
  sub_24554EBE4((uint64_t *)&v21);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_245574194(v5, v21);
  swift_release();
  if ((v7 & 1) == 0)
  {
LABEL_15:
    swift_release();
    return 0;
  }
  uint64_t v8 = v5[2];
  if (v8)
  {
    int64_t v9 = v5 + 5;
    do
    {
      uint64_t v11 = *(v9 - 1);
      uint64_t v10 = *v9;
      uint64_t v12 = *(void *)(v2 + 16);
      swift_bridgeObjectRetain();
      if (v12 && (unint64_t v13 = sub_2454A0B40(v11, v10), (v14 & 1) != 0))
      {
        char v15 = 0;
        uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v13);
        if (!*(void *)(v3 + 16)) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v16 = 0;
        char v15 = 1;
        if (!*(void *)(v3 + 16)) {
          goto LABEL_5;
        }
      }
      unint64_t v17 = sub_2454A0B40(v11, v10);
      if ((v18 & 1) == 0)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0) {
          goto LABEL_15;
        }
        goto LABEL_6;
      }
      uint64_t v19 = *(void *)(*(void *)(v3 + 56) + 8 * v17);
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0 || v16 != v19) {
        goto LABEL_15;
      }
LABEL_6:
      v9 += 2;
      --v8;
    }
    while (v8);
  }
  swift_release();
  return 1;
}

uint64_t sub_245551340(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 44));
}

uint64_t type metadata accessor for DefaultHistoryUpdate()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for DefaultHistoryDelete()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_24555137C()
{
  unint64_t result = qword_268EE3B50;
  if (!qword_268EE3B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3B50);
  }
  return result;
}

uint64_t sub_2455513D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3B58);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_245551438()
{
  return swift_getWitnessTable();
}

uint64_t sub_245551460()
{
  return MEMORY[0x263F8E5D8];
}

uint64_t sub_24555146C()
{
  return MEMORY[0x263F8E5D0];
}

uint64_t sub_245551478()
{
  return MEMORY[0x263F8E5D0];
}

uint64_t sub_245551484()
{
  return MEMORY[0x263F8E5D8];
}

uint64_t sub_245551490()
{
  return MEMORY[0x263F8E5D0];
}

uint64_t sub_24555149C()
{
  return MEMORY[0x263F8E5D8];
}

uint64_t sub_2455514A8()
{
  return MEMORY[0x263F8E5D0];
}

uint64_t sub_2455514B4()
{
  return MEMORY[0x263F8E5D8];
}

uint64_t sub_2455514C0()
{
  return MEMORY[0x263F8E5D0];
}

uint64_t sub_2455514CC()
{
  return MEMORY[0x263F8E5D8];
}

uint64_t sub_2455514D8()
{
  return MEMORY[0x263F8E5D0];
}

uint64_t sub_2455514E4()
{
  return MEMORY[0x263F8E5D8];
}

uint64_t sub_2455514F0()
{
  return MEMORY[0x263F8E5D0];
}

uint64_t sub_2455514FC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_245551504()
{
  return MEMORY[0x263F8E5D8];
}

uint64_t sub_245551510()
{
  return MEMORY[0x263F8E5D0];
}

uint64_t sub_24555151C()
{
  return sub_2455513D0(&qword_268EE3B70);
}

uint64_t sub_245551560()
{
  return sub_2455513D0(&qword_268EE3B60);
}

unint64_t sub_2455515A8()
{
  unint64_t result = qword_268EE3B78[0];
  if (!qword_268EE3B78[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3B58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268EE3B78);
  }
  return result;
}

uint64_t sub_245551614()
{
  return MEMORY[0x263F8D6D8];
}

uint64_t dispatch thunk of HistoryTransaction.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HistoryTransaction.changes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HistoryTransaction.token.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of HistoryTransaction.transactionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of HistoryTransaction.storeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of HistoryTransaction.author.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t initializeBufferWithCopyOfBuffer for HistoryChange(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for HistoryChange(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm_5(a1);
}

uint64_t initializeWithCopy for HistoryChange(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 3) {
    unsigned int v3 = *(_DWORD *)a2 + 3;
  }
  if (v3 == 2)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    char v5 = 2;
  }
  else if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    char v5 = 1;
  }
  else
  {
    char v5 = 0;
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
  }
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for HistoryChange(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm_5(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a2 + 3;
    }
    if (v4 == 2)
    {
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v6 = 2;
    }
    else if (v4 == 1)
    {
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HistoryChange(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm_5(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 3) {
      LOBYTE(v4) = *(unsigned char *)a2 + 3;
    }
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HistoryChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HistoryChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_245551964(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_245551984(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

uint64_t dispatch thunk of HistoryInsert.changeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HistoryInsert.transactionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HistoryInsert.changedPersistentIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HistoryUpdate.changeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HistoryUpdate.transactionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HistoryUpdate.changedPersistentIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HistoryUpdate.updatedAttributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of HistoryDelete.changeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HistoryDelete.transactionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HistoryDelete.changedPersistentIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HistoryDelete.tombstone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of HistoryToken.tokenValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_245551A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

void *sub_245551AAC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_245551AE4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_245551B44(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245551B84(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_245551BCC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for HistoryTombstone()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_245551C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_245551C2C()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_245551C6C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_245551CAC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_245551D14(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t sub_245551D5C(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_245551DA4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for HistoryTombstone.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *sub_245551DFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24558E228();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_24558ECE8();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 36));
  }
  return a1;
}

char *sub_245551F78(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  return a1;
}

char *sub_245552108(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  return a1;
}

char *sub_245552234(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  return a1;
}

uint64_t sub_2455523C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2455523D8);
}

uint64_t sub_2455523D8(uint64_t a1, uint64_t a2)
{
  sub_24558E228();
  uint64_t v4 = sub_24558ECE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_24555245C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_245552470);
}

uint64_t sub_245552470(uint64_t a1, uint64_t a2)
{
  sub_24558E228();
  uint64_t v4 = sub_24558ECE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t dispatch thunk of static HistoryProviding.historyType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HistoryProviding.fetchHistory(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of HistoryProviding.deleteHistory(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DefaultHistoryTransaction(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24558E1B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    int v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *int v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[9];
    uint64_t v14 = a3[10];
    char v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *char v15 = *v16;
    v15[1] = v17;
    char v18 = (uint64_t *)((char *)a1 + v14);
    uint64_t v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *char v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[11];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    BOOL v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DefaultHistoryTransaction(uint64_t a1)
{
  uint64_t v2 = sub_24558E1B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24558E1B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  int v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v12);
  char v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)(a1 + v13);
  char v18 = (void *)(a2 + v13);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24558E1B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[9];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  char v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v16);
  char v18 = (void *)(a2 + v16);
  void *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24558E1B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24558E1B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[10];
  char v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *char v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_245552BD4);
}

uint64_t sub_245552BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E1B8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_245552CA8);
}

uint64_t sub_245552CA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24558E1B8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_245552D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_245552D6C()
{
  uint64_t result = type metadata accessor for PersistentIdentifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_245552E08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 40);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_24558E158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    uint64_t v9 = type metadata accessor for PersistentIdentifier(0);
    *(void *)&v6[*(int *)(v9 + 20)] = *(void *)&v7[*(int *)(v9 + 20)];
  }
  swift_retain();
  return v3;
}

uint64_t sub_245552EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 40);
  uint64_t v3 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for PersistentIdentifier(0);

  return swift_release();
}

_OWORD *sub_245552F64(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v5[*(int *)(v8 + 20)] = *(void *)&v6[*(int *)(v8 + 20)];
  swift_retain();
  return a1;
}

void *sub_245552FF8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v5[*(int *)(v8 + 20)] = *(void *)&v6[*(int *)(v8 + 20)];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2455530A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v5[*(int *)(v8 + 20)] = *(void *)&v6[*(int *)(v8 + 20)];
  return a1;
}

_OWORD *sub_245553130(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v5[*(int *)(v8 + 20)] = *(void *)&v6[*(int *)(v8 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_2455531C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2455531DC);
}

uint64_t sub_2455531DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 40);
  uint64_t v5 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_24555324C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_245553260);
}

uint64_t sub_245553260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 40);
  uint64_t v6 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_2455532D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_2455532DC()
{
  return sub_2455537C4();
}

uint64_t *sub_2455532EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24558E158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
    *(void *)&v8[*(int *)(v11 + 20)] = *(void *)&v9[*(int *)(v11 + 20)];
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 44)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 44));
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2455533F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 40);
  uint64_t v3 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for PersistentIdentifier(0);
  swift_release();

  return swift_bridgeObjectRelease();
}

_OWORD *sub_24555348C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  *(void *)((char *)a1 + *(int *)(a3 + 44)) = *(void *)((char *)a2 + *(int *)(a3 + 44));
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_245553544(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 44)) = *(void *)((char *)a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_245553618(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  *(void *)((char *)a1 + *(int *)(a3 + 44)) = *(void *)((char *)a2 + *(int *)(a3 + 44));
  return a1;
}

_OWORD *sub_2455536C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 44)) = *(void *)((char *)a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245553780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_14Tm);
}

uint64_t sub_245553798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_15Tm);
}

uint64_t sub_2455537B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_2455537B8()
{
  return sub_2455537C4();
}

uint64_t sub_2455537C4()
{
  uint64_t result = type metadata accessor for PersistentIdentifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_245553864(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24558E158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = type metadata accessor for PersistentIdentifier(0);
    *(void *)&v8[*(int *)(v11 + 20)] = *(void *)&v9[*(int *)(v11 + 20)];
    uint64_t v12 = *(int *)(a3 + 44);
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24555397C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 40);
  uint64_t v3 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for PersistentIdentifier(0);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

_OWORD *sub_245553A20(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  uint64_t v11 = *(int *)(a3 + 44);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_245553AE8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  swift_retain();
  swift_release();
  uint64_t v11 = *(int *)(a3 + 44);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (void *)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = *v13;
  swift_retain();
  swift_release();
  *((void *)v12 + 1) = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_245553BDC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 44));
  return a1;
}

_OWORD *sub_245553C88(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24558E158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  swift_release();
  uint64_t v11 = *(int *)(a3 + 44);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (void *)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = *v13;
  swift_release();
  *((void *)v12 + 1) = v13[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245553D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_245553D70);
}

uint64_t __swift_get_extra_inhabitant_index_14Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_245553E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_245553E4C);
}

uint64_t __swift_store_extra_inhabitant_index_15Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PersistentIdentifier(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 40);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DefaultHistoryToken.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for DefaultHistoryToken.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x245554000);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_245554028()
{
  return 0;
}

ValueMetadata *type metadata accessor for DefaultHistoryToken.CodingKeys()
{
  return &type metadata for DefaultHistoryToken.CodingKeys;
}

unint64_t sub_24555404C()
{
  unint64_t result = qword_268EE3D00;
  if (!qword_268EE3D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3D00);
  }
  return result;
}

unint64_t sub_2455540A4()
{
  unint64_t result = qword_268EE3D08;
  if (!qword_268EE3D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3D08);
  }
  return result;
}

unint64_t sub_2455540FC()
{
  unint64_t result = qword_268EE3D10;
  if (!qword_268EE3D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3D10);
  }
  return result;
}

uint64_t sub_245554150(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t Schema.__allocating_init(_:version:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  Schema.init(_:version:)(a1, a2);
  return v4;
}

uint64_t Schema.__allocating_init(versionedSchema:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 8))();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a2 + 16))(&v9, a1, a2);
  long long v7 = v9;
  uint64_t v8 = v10;
  uint64_t v5 = swift_allocObject();
  Schema.init(_:version:)(v4, (uint64_t)&v7);
  return v5;
}

uint64_t sub_2455542E0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2455590A8();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2455577C8(v6);
  return sub_24558F048();
}

uint64_t sub_245554368()
{
  return sub_24558F818();
}

uint64_t sub_2455543B0()
{
  return sub_24558F7E8();
}

uint64_t sub_2455543E0()
{
  return sub_24558F818();
}

BOOL sub_245554424(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_245554438()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA0C0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_268EEAC98 = result;
  return result;
}

void sub_245554470()
{
  off_268EE3D18 = (_UNKNOWN *)MEMORY[0x263F8EE80];
}

void sub_245554494()
{
  off_268EE3D20 = (_UNKNOWN *)MEMORY[0x263F8EE80];
}

void static Schema.schemaEncodingVersion.getter(void *a1@<X8>)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 1;
}

__n128 Schema.encodingVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[2].n128_u64[0];
  __n128 result = v1[1];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  return result;
}

__n128 Schema.version.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 56);
  __n128 result = *(__n128 *)(v1 + 40);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  return result;
}

uint64_t Schema.entities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.entitiesByName.getter()
{
  return swift_bridgeObjectRetain();
}

id static Schema.purgeSchemaCaches()()
{
  if (qword_26B0DA0E8 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_26B0DA160, sel_lock);
  if (qword_26B0DA158 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)MEMORY[0x263F8EE80];
  off_26B0DA150 = (_UNKNOWN *)MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  if (qword_268EE36A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  off_268EE3D20 = v0;
  swift_bridgeObjectRelease();
  return objc_msgSend((id)qword_26B0DA160, sel_unlock);
}

void *static Schema.createSchema(versionedSchema:)(uint64_t a1, uint64_t a2)
{
  if (qword_26B0DA0E8 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_26B0DA160, sel_lock);
  if (qword_268EE36A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = off_268EE3D20;
  if (*((void *)off_268EE3D20 + 2) && (uint64_t v5 = sub_245521338(a1, a2), (v6 & 1) != 0))
  {
    long long v7 = *(void **)(v4[7] + 8 * v5);
    swift_endAccess();
    uint64_t v8 = (void *)qword_26B0DA160;
    swift_retain();
    objc_msgSend(v8, sel_unlock);
  }
  else
  {
    swift_endAccess();
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a2 + 16))(&v20, a1, a2);
    long long v18 = v20;
    uint64_t v19 = v21;
    long long v7 = (void *)swift_allocObject();
    Schema.init(_:version:)(v9, (uint64_t)&v18);
    objc_msgSend((id)qword_26B0DA160, sel_lock, v18, v19);
    if (qword_26B0DA158 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v10 = off_26B0DA150;
    uint64_t v11 = (void *)swift_retain();
    id v12 = sub_24548ADC0(v11, (uint64_t)v10);
    swift_release();
    swift_endAccess();
    if (!v12)
    {
      uint64_t v13 = sub_2454BE6A4();
      if (!v13)
      {
        objc_msgSend((id)qword_26B0DA160, sel_unlock);
        sub_245559258();
        swift_allocError();
        void *v17 = 0xD000000000000031;
        v17[1] = 0x8000000245594A50;
        swift_willThrow();
        swift_release();
        objc_msgSend((id)qword_26B0DA160, sel_unlock);
        return v7;
      }
      uint64_t v14 = (void *)v13;
      swift_beginAccess();
      swift_retain();
      id v12 = v14;
      sub_24547E380((uint64_t)v12, v7);
      swift_endAccess();
      swift_release();
    }
    objc_msgSend((id)qword_26B0DA160, sel_unlock);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v18 = off_268EE3D20;
    off_268EE3D20 = (_UNKNOWN *)0x8000000000000000;
    sub_245506298((uint64_t)v7, a1, a2, isUniquelyReferenced_nonNull_native);
    off_268EE3D20 = (_UNKNOWN *)v18;
    swift_bridgeObjectRelease();
    swift_endAccess();

    objc_msgSend((id)qword_26B0DA160, sel_unlock);
  }
  return v7;
}

void *Schema.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 1;
  v0[3] = 0;
  v0[4] = 0;
  v0[5] = 1;
  v0[6] = 0;
  v0[7] = 0;
  uint64_t v1 = MEMORY[0x263F8EE78];
  v0[8] = MEMORY[0x263F8EE78];
  v0[9] = sub_245535D88(v1);
  return v0;
}

void *Schema.init()()
{
  v0[2] = 1;
  v0[3] = 0;
  v0[4] = 0;
  v0[5] = 1;
  v0[6] = 0;
  v0[7] = 0;
  uint64_t v1 = MEMORY[0x263F8EE78];
  v0[8] = MEMORY[0x263F8EE78];
  v0[9] = sub_245535D88(v1);
  return v0;
}

uint64_t Schema.__allocating_init(_:version:)(unint64_t a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_245559B30(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t Schema.init(_:version:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_245559B30(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_245554AD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_245554AE8()
{
  return sub_24558F7E8();
}

uint64_t sub_245554B18()
{
  uint64_t v1 = 0x6E6F6973726576;
  if (*v0 != 1) {
    uint64_t v1 = 0x7365697469746E65;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x676E69646F636E65;
  }
}

uint64_t sub_245554B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_245559708(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245554BA8()
{
  return 0;
}

void sub_245554BB4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_245554BC0(uint64_t a1)
{
  unint64_t v2 = sub_245559DC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_245554BFC(uint64_t a1)
{
  unint64_t v2 = sub_245559DC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Schema.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Schema.init(from:)(a1);
  return v2;
}

uint64_t Schema.init(from:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3D30);
  uint64_t v58 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v7 = (void *)((char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_245559DC8();
  sub_24558F878();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1Tm_6(a1);
    return v3;
  }
  LOBYTE(v55) = 0;
  sub_245559E1C();
  sub_24558F3B8();
  uint64_t isUniquelyReferenced_nonNull_native = v5;
  uint64_t v9 = v57;
  *(_OWORD *)(v1 + 16) = v56;
  *(void *)(v1 + 32) = v9;
  LOBYTE(v55) = 1;
  sub_24558F3B8();
  uint64_t v10 = 0;
  uint64_t v11 = v57;
  *(_OWORD *)(v1 + 40) = v56;
  *(void *)(v1 + 56) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3D48);
  LOBYTE(v55) = 2;
  sub_245559EC4(&qword_268EE3D50, &qword_268EE3D58);
  sub_24558F3B8();
  unint64_t v13 = v56;
  *(void *)(v1 + 64) = v56;
  if (v13 >> 62) {
    goto LABEL_49;
  }
  uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
LABEL_7:
  v44[1] = v10;
  uint64_t v45 = isUniquelyReferenced_nonNull_native;
  uint64_t v49 = v3;
  uint64_t v46 = a1;
  uint64_t v51 = v7;
  if (v14)
  {
    unint64_t v48 = v13 & 0xC000000000000001;
    uint64_t v15 = (void *)MEMORY[0x263F8EE80];
    uint64_t v10 = 4;
    uint64_t v47 = v14;
    while (1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = v10 - 4;
      if (v48)
      {
        long long v7 = (void *)MEMORY[0x2456A1A40](v10 - 4, v13);
        unint64_t v17 = v10 - 3;
        if (__OFADD__(isUniquelyReferenced_nonNull_native, 1)) {
          goto LABEL_45;
        }
      }
      else
      {
        long long v7 = *(void **)(v13 + 8 * v10);
        swift_retain();
        unint64_t v17 = v10 - 3;
        if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          swift_bridgeObjectRetain_n();
          uint64_t v14 = sub_24558F1C8();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
      }
      unint64_t v50 = v17;
      unint64_t v18 = v13;
      swift_beginAccess();
      uint64_t v3 = v7[2];
      uint64_t v19 = v7[3];
      swift_bridgeObjectRetain();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      BOOL v55 = v15;
      unint64_t v13 = sub_2454A0B40(v3, v19);
      uint64_t v21 = v15[2];
      BOOL v22 = (v20 & 1) == 0;
      uint64_t v23 = v21 + v22;
      if (__OFADD__(v21, v22)) {
        goto LABEL_46;
      }
      a1 = v20;
      if (v15[3] >= v23)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v15 = v55;
          if (v20) {
            goto LABEL_9;
          }
        }
        else
        {
          sub_245523E80();
          uint64_t v15 = v55;
          if (a1) {
            goto LABEL_9;
          }
        }
      }
      else
      {
        sub_245493230(v23, isUniquelyReferenced_nonNull_native);
        unint64_t v24 = sub_2454A0B40(v3, v19);
        if ((a1 & 1) != (v25 & 1)) {
          goto LABEL_54;
        }
        unint64_t v13 = v24;
        uint64_t v15 = v55;
        if (a1)
        {
LABEL_9:
          uint64_t v16 = v15[7];
          swift_release();
          *(void *)(v16 + 8 * v13) = v7;
          goto LABEL_10;
        }
      }
      v15[(v13 >> 6) + 8] |= 1 << v13;
      uint64_t v26 = (uint64_t *)(v15[6] + 16 * v13);
      *uint64_t v26 = v3;
      v26[1] = v19;
      *(void *)(v15[7] + 8 * v13) = v7;
      uint64_t v27 = v15[2];
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_48;
      }
      _OWORD v15[2] = v29;
      swift_bridgeObjectRetain();
LABEL_10:
      long long v7 = v51;
      unint64_t v13 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v10;
      uint64_t v3 = v49;
      if (v50 == v47) {
        goto LABEL_28;
      }
    }
  }
  uint64_t v15 = (void *)MEMORY[0x263F8EE80];
LABEL_28:
  swift_bridgeObjectRelease_n();
  *(void *)(v3 + 72) = v15;
  unint64_t v30 = *(void *)(v3 + 64);
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_30;
    }
    goto LABEL_51;
  }
  uint64_t v10 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10)
  {
LABEL_51:
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v58 + 8))(v7, v45);
    __swift_destroy_boxed_opaque_existential_1Tm_6(v46);
    return v3;
  }
LABEL_30:
  unint64_t v50 = v30 & 0xC000000000000001;
  a1 = 4;
  while (1)
  {
    uint64_t v31 = a1 - 4;
    if (v50)
    {
      long long v7 = (void *)MEMORY[0x2456A1A40](a1 - 4, v30);
      uint64_t isUniquelyReferenced_nonNull_native = a1 - 3;
      if (__OFADD__(v31, 1)) {
        goto LABEL_47;
      }
    }
    else
    {
      long long v7 = *(void **)(v30 + 8 * a1);
      swift_retain();
      uint64_t isUniquelyReferenced_nonNull_native = a1 - 3;
      if (__OFADD__(v31, 1)) {
        goto LABEL_47;
      }
    }
    uint64_t v32 = v3;
    swift_beginAccess();
    uint64_t v33 = v7[6];
    if (v33) {
      break;
    }
    swift_release();
    long long v7 = v51;
    uint64_t v3 = v32;
LABEL_32:
    ++a1;
    if (isUniquelyReferenced_nonNull_native == v10) {
      goto LABEL_51;
    }
  }
  unint64_t v13 = v7[5];
  uint64_t v34 = *(void *)(v32 + 72);
  uint64_t v35 = *(void *)(v34 + 16);
  swift_bridgeObjectRetain();
  if (!v35) {
    goto LABEL_53;
  }
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_2454A0B40(v13, v33);
  if (v37)
  {
    uint64_t v38 = *(void *)(*(void *)(v34 + 56) + 8 * v36);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    v7[7] = v38;
    swift_retain_n();
    swift_release();
    uint64_t v39 = v7[7];
    swift_beginAccess();
    if (v39)
    {
      uint64_t v40 = *(void *)(v39 + 64);
      swift_beginAccess();
      uint64_t v41 = *(void *)(v39 + 72);
      uint64_t v52 = v40;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_245497E04(v41);
      unint64_t v42 = v30;
      uint64_t v43 = v52;
      swift_beginAccess();
      v7[9] = v43;
      unint64_t v30 = v42;
      swift_bridgeObjectRelease();
      sub_245566D0C();
      swift_release();
    }
    else
    {
      v7[9] = MEMORY[0x263F8EE78];
      swift_bridgeObjectRelease();
      sub_245566D0C();
    }
    swift_release();
    swift_release();
    swift_release();
    uint64_t v3 = v49;
    long long v7 = v51;
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
LABEL_53:
  uint64_t v52 = 0;
  unint64_t v53 = 0xE000000000000000;
  sub_24558EF78();
  swift_bridgeObjectRelease();
  strcpy((char *)v54, "SuperEntity ");
  HIBYTE(v54[6]) = 0;
  v54[7] = -5120;
  sub_24558E668();
  sub_24558E668();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  sub_24558F1A8();
  __break(1u);
LABEL_54:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t Schema.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3D60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_245559DC8();
  sub_24558F888();
  uint64_t v9 = *(void *)(v3 + 32);
  long long v14 = *(_OWORD *)(v3 + 16);
  uint64_t v15 = v9;
  char v13 = 0;
  sub_245559E70();
  sub_24558F468();
  if (!v2)
  {
    uint64_t v10 = *(void *)(v3 + 56);
    long long v14 = *(_OWORD *)(v3 + 40);
    uint64_t v15 = v10;
    char v13 = 1;
    sub_24558F468();
    *(void *)&long long v14 = *(void *)(v3 + 64);
    char v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3D48);
    sub_245559EC4(&qword_268EE3D70, &qword_268EE3D78);
    sub_24558F468();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Schema.hash(into:)()
{
  sub_24558F7E8();
  sub_24558F7E8();
  sub_24558F7E8();
  unint64_t v1 = *(void *)(v0 + 64);
  if (!(v1 >> 62))
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24558F7E8();
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_12:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  sub_24558F1C8();
  swift_bridgeObjectRelease();
  sub_24558F7E8();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_24558F1C8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_12;
  }
LABEL_3:
  if (v3 >= 1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        MEMORY[0x2456A1A40](v4++, v1);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_24558E628();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v3 != v4);
    }
    else
    {
      uint64_t v5 = 0;
      do
      {
        ++v5;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_24558E628();
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v3 != v5);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t Schema.save(to:)()
{
  sub_24558DBF8();
  swift_allocObject();
  sub_24558DBE8();
  sub_2454ED124(&qword_268EE3D80, v1, (void (*)(uint64_t))type metadata accessor for Schema);
  uint64_t v2 = sub_24558DBD8();
  if (!v0)
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    sub_24558E198();
    sub_2454A2F3C(v4, v5);
  }
  return swift_release();
}

uint64_t static Schema.load(from:)()
{
  uint64_t result = sub_24558E168();
  if (!v0)
  {
    uint64_t v3 = result;
    unint64_t v4 = v2;
    sub_24558DBC8();
    swift_allocObject();
    sub_24558DBB8();
    sub_2454ED124(&qword_268EE3D88, v5, (void (*)(uint64_t))type metadata accessor for Schema);
    sub_24558DBA8();
    swift_release();
    sub_2454A2F3C(v3, v4);
    return v6;
  }
  return result;
}

uint64_t Schema.entity<A>(for:)()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_24549D7B0();
  if (!*(void *)(v1 + 16) || (unint64_t v4 = sub_2454A0B40(v2, v3), (v5 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(v1 + 56) + 8 * v4);
  swift_retain();
  swift_bridgeObjectRelease();
  if (!*(void *)(v6 + 144)
    || (uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(),
        ObjCClassFromMetadata != swift_getObjCClassFromMetadata()))
  {
    swift_release();
    return 0;
  }
  return v6;
}

uint64_t static Schema.entityName<A>(for:)()
{
  return sub_24549D7B0();
}

uint64_t Schema.Version.major.getter()
{
  return *(void *)v0;
}

uint64_t Schema.Version.minor.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t Schema.Version.patch.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t static Schema.Version.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4 = _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0((long long *)a1, (long long *)a2);
  uint64_t v5 = *(void *)(a1 + 16);
  long long v11 = *(_OWORD *)a1;
  uint64_t v12 = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  long long v9 = *(_OWORD *)a2;
  uint64_t v10 = v6;
  if (v4) {
    char v7 = 0;
  }
  else {
    char v7 = _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v9, &v11) ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_245555CCC(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 16);
    if (!v3) {
      return 0;
    }
    uint64_t v4 = *(void *)(a2 + 32);
    uint64_t v5 = *(void *)(result + 32);
    if (v4 < v5) {
      return 1;
    }
    if (v5 < v4) {
      return 0;
    }
    uint64_t v6 = 0;
    uint64_t v7 = result + 40;
    while (v2 - 1 != v6)
    {
      if (v3 - 1 == v6) {
        return 0;
      }
      uint64_t v8 = *(void *)(a2 + 40 + 8 * v6);
      uint64_t v9 = *(void *)(v7 + 8 * v6);
      if (v8 < v9) {
        return 1;
      }
      uint64_t result = 0;
      ++v6;
      if (v9 < v8) {
        return result;
      }
    }
  }
  else
  {
    unint64_t v3 = *(void *)(result + 16);
  }
  if (v2 == v3) {
    return 0;
  }
  if (v2 < v3) {
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t Schema.Version.hash(into:)()
{
  return sub_24558F7E8();
}

uint64_t sub_245555DAC()
{
  return sub_24558F818();
}

uint64_t sub_245555DF8()
{
  return sub_24558F818();
}

uint64_t sub_245555E3C()
{
  return *(void *)&aMajor_0[8 * *v0];
}

uint64_t sub_245555E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_245559884(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245555E7C()
{
  return 0;
}

void sub_245555E88(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_245555E94(uint64_t a1)
{
  unint64_t v2 = sub_245559F5C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_245555ED0(uint64_t a1)
{
  unint64_t v2 = sub_245559F5C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Schema.Version.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3D90);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_245559F5C();
  sub_24558F888();
  char v13 = 0;
  sub_24558F448();
  if (!v2)
  {
    char v12 = 1;
    sub_24558F448();
    char v11 = 2;
    sub_24558F448();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Schema.Version.hashValue.getter()
{
  return sub_24558F818();
}

uint64_t Schema.Version.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3DA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_245559F5C();
  sub_24558F878();
  if (!v2)
  {
    char v16 = 0;
    uint64_t v9 = sub_24558F3A8();
    char v15 = 1;
    uint64_t v11 = sub_24558F3A8();
    char v14 = 2;
    uint64_t v12 = sub_24558F3A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm_6((uint64_t)a1);
}

uint64_t sub_2455562D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Schema.Version.init(from:)(a1, a2);
}

uint64_t sub_2455562F0(void *a1)
{
  return Schema.Version.encode(to:)(a1);
}

BOOL sub_24555630C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  long long v7 = *(_OWORD *)a1;
  uint64_t v8 = v2;
  long long v5 = *(_OWORD *)a2;
  uint64_t v6 = v3;
  return (_s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v5, &v7) & 1) == 0;
}

BOOL sub_24555635C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  long long v7 = *(_OWORD *)a1;
  uint64_t v8 = v2;
  long long v5 = *(_OWORD *)a2;
  uint64_t v6 = v3;
  return (_s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v7, &v5) & 1) == 0;
}

uint64_t sub_2455563AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  long long v7 = *(_OWORD *)a1;
  uint64_t v8 = v2;
  long long v5 = *(_OWORD *)a2;
  uint64_t v6 = v3;
  return _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v5, &v7) & 1;
}

uint64_t sub_2455563FC()
{
  return sub_24558F818();
}

uint64_t sub_245556468()
{
  return sub_24558F7E8();
}

uint64_t sub_2455564B0()
{
  return sub_24558F818();
}

uint64_t sub_245556518(uint64_t a1, uint64_t a2)
{
  char v4 = _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0((long long *)a1, (long long *)a2);
  uint64_t v5 = *(void *)(a1 + 16);
  long long v11 = *(_OWORD *)a1;
  uint64_t v12 = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  long long v9 = *(_OWORD *)a2;
  uint64_t v10 = v6;
  if (v4) {
    char v7 = 0;
  }
  else {
    char v7 = _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v9, &v11) ^ 1;
  }
  return v7 & 1;
}

uint64_t Schema.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Schema.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t Schema.hashValue.getter()
{
  sub_24558F7D8();
  sub_24558F7E8();
  sub_24558F7E8();
  sub_24558F7E8();
  unint64_t v1 = *(void *)(v0 + 64);
  if (!(v1 >> 62))
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24558F7E8();
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return sub_24558F818();
  }
  swift_bridgeObjectRetain_n();
  sub_24558F1C8();
  swift_bridgeObjectRelease();
  sub_24558F7E8();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_24558F1C8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        MEMORY[0x2456A1A40](v4++, v1);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_24558E628();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v3 != v4);
    }
    else
    {
      uint64_t v5 = 0;
      do
      {
        ++v5;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_24558E628();
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v3 != v5);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2455567D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = Schema.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_245556828(void *a1)
{
  return Schema.encode(to:)(a1);
}

uint64_t sub_24555684C()
{
  return Schema.hashValue.getter();
}

uint64_t sub_245556870()
{
  uint64_t v1 = *v0;
  sub_24558F7E8();
  sub_24558F7E8();
  sub_24558F7E8();
  unint64_t v2 = *(void *)(v1 + 64);
  if (!(v2 >> 62))
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24558F7E8();
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_12:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  sub_24558F1C8();
  swift_bridgeObjectRelease();
  sub_24558F7E8();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_24558F1C8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_12;
  }
LABEL_3:
  if (v4 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        MEMORY[0x2456A1A40](v5++, v2);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_24558E628();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v4 != v5);
    }
    else
    {
      uint64_t v6 = 0;
      do
      {
        ++v6;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_24558E628();
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v4 != v6);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_245556A6C()
{
  uint64_t v1 = *v0;
  sub_24558F7D8();
  sub_24558F7E8();
  sub_24558F7E8();
  sub_24558F7E8();
  unint64_t v2 = *(void *)(v1 + 64);
  if (!(v2 >> 62))
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24558F7E8();
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return sub_24558F818();
  }
  swift_bridgeObjectRetain_n();
  sub_24558F1C8();
  swift_bridgeObjectRelease();
  sub_24558F7E8();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_24558F1C8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  if (v4 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        MEMORY[0x2456A1A40](v5++, v2);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_24558E628();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v4 != v5);
    }
    else
    {
      uint64_t v6 = 0;
      do
      {
        ++v6;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_24558E628();
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v4 != v6);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_245556C48(void **a1, void **a2)
{
  return _s9SwiftData6SchemaC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t Schema.debugDescription.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA220);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_245599560;
  *(void *)(v1 + 32) = 0x616D65686353;
  *(void *)(v1 + 40) = 0xE600000000000000;
  sub_24558EF78();
  swift_bridgeObjectRelease();
  Schema.Version.description.getter();
  sub_24558E668();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = 0xD000000000000017;
  *(void *)(v1 + 56) = 0x8000000245594AF0;
  sub_24558EF78();
  swift_bridgeObjectRelease();
  Schema.Version.description.getter();
  sub_24558E668();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = 0xD000000000000011;
  *(void *)(v1 + 72) = 0x8000000245594B10;
  *(void *)(v1 + 80) = 0x7365697469746E65;
  *(void *)(v1 + 88) = 0xE90000000000003ALL;
  unint64_t v2 = *(void *)(v0 + 64);
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9F58);
    sub_2454F2B14();
    uint64_t v13 = sub_24558E4E8();
    swift_bridgeObjectRelease();
    return v13;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_24558F1C8();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v3 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        MEMORY[0x2456A1A40](v5, v2);
        Schema.Entity.debugDescription.getter();
        sub_24558E668();
        swift_bridgeObjectRelease();
        unint64_t v7 = *(void *)(v1 + 16);
        unint64_t v6 = *(void *)(v1 + 24);
        if (v7 >= v6 >> 1) {
          uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v6 > 1), v7 + 1, 1, (void *)v1);
        }
        ++v5;
        *(void *)(v1 + 16) = v7 + 1;
        uint64_t v8 = v1 + 16 * v7;
        *(void *)(v8 + 32) = 32;
        *(void *)(v8 + 40) = 0xE100000000000000;
        swift_unknownObjectRelease();
      }
      while (v3 != v5);
    }
    else
    {
      uint64_t v9 = 0;
      do
      {
        swift_retain();
        Schema.Entity.debugDescription.getter();
        sub_24558E668();
        swift_bridgeObjectRelease();
        unint64_t v11 = *(void *)(v1 + 16);
        unint64_t v10 = *(void *)(v1 + 24);
        if (v11 >= v10 >> 1) {
          uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v10 > 1), v11 + 1, 1, (void *)v1);
        }
        ++v9;
        *(void *)(v1 + 16) = v11 + 1;
        uint64_t v12 = v1 + 16 * v11;
        *(void *)(v12 + 32) = 32;
        *(void *)(v12 + 40) = 0xE100000000000000;
        swift_release();
      }
      while (v3 != v9);
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_245556F90()
{
  return Schema.debugDescription.getter();
}

void *sub_245556FB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA220);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size_2(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_2455588B0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24555AE04();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_24555709C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B0D9D20);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size_2(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_2455698F8((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v3;
}

uint64_t sub_245557194(uint64_t a1)
{
  return sub_245557224(a1, (void (*)(void))type metadata accessor for Schema.Relationship, (unint64_t *)&qword_26B0D8D10, (void (*)(uint64_t))type metadata accessor for Schema.Relationship);
}

uint64_t sub_2455571DC(uint64_t a1)
{
  return sub_245557224(a1, (void (*)(void))type metadata accessor for Schema.Attribute, &qword_26B0DA170, (void (*)(uint64_t))type metadata accessor for Schema.Attribute);
}

uint64_t sub_245557224(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = sub_24558EE88();
    if (v8) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v8 <= 0)
  {
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B0D9D20);
    uint64_t v9 = (void *)swift_allocObject();
    int64_t v10 = _swift_stdlib_malloc_size_2(v9);
    uint64_t v11 = v10 - 32;
    if (v10 < 32) {
      uint64_t v11 = v10 - 25;
    }
    void v9[2] = v8;
    void v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_245558AB0((uint64_t)&v14, v9 + 4, v8, a1, a2, a3, a4);
  uint64_t result = sub_24555AE04();
  if (v12 == v8) {
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_245557350(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  if (v5 <= 0)
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for PersistentIdentifier(0) - 8);
      char v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_26B0D92B0);
  uint64_t v8 = *(void *)(type metadata accessor for PersistentIdentifier(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = _swift_stdlib_malloc_size_2(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    long long v11[2] = v5;
    void v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

size_t sub_245557590(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_26B0D92B0);
  uint64_t v3 = *(void *)(type metadata accessor for PersistentIdentifier(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size_2(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_245558DB4(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_24555AE04();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_2455576E4(void *a1)
{
  return sub_2455035C0(0, a1[2], 0, a1);
}

void sub_2455576FC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24558F1C8();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x2456A1A50);
}

void *sub_245557778(unint64_t a1)
{
  return sub_24547CED0(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_24555778C(void *a1)
{
  return sub_245503994(0, a1[2], 0, a1);
}

void *sub_2455577A0(void *a1)
{
  return sub_245496260(0, a1[2], 0, a1);
}

void *sub_2455577B4(void *a1)
{
  return sub_2454D176C(0, a1[2], 0, a1);
}

uint64_t sub_2455577C8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24558F538();
  uint64_t v150 = v3;
  if (result >= v3)
  {
    if (v3 < 0)
    {
LABEL_221:
      __break(1u);
LABEL_222:
      __break(1u);
LABEL_223:
      __break(1u);
LABEL_224:
      __break(1u);
LABEL_225:
      __break(1u);
LABEL_226:
      __break(1u);
LABEL_227:
      sub_24558F228();
      __break(1u);
      goto LABEL_228;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v9 = (uint64_t *)*a1;
      uint64_t v10 = -1;
      uint64_t v11 = 1;
      size_t v12 = (uint64_t *)*a1;
      do
      {
        uint64_t v13 = v9[v11];
        uint64_t v14 = v10;
        char v15 = v12;
        do
        {
          uint64_t v16 = *v15;
          swift_beginAccess();
          uint64_t v17 = *(void *)(v13 + 16);
          uint64_t v18 = *(void *)(v13 + 24);
          uint64_t result = swift_beginAccess();
          BOOL v19 = v17 == *(void *)(v16 + 16) && v18 == *(void *)(v16 + 24);
          if (v19) {
            break;
          }
          uint64_t result = sub_24558F598();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_223;
          }
          uint64_t v20 = *v15;
          uint64_t v13 = v15[1];
          *char v15 = v13;
          v15[1] = v20;
          --v15;
        }
        while (!__CFADD__(v14++, 1));
        ++v11;
        ++v12;
        --v10;
      }
      while (v11 != v150);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1)
    {
LABEL_228:
      uint64_t result = sub_24558F198();
      __break(1u);
      return result;
    }
    uint64_t v145 = result;
    v144 = a1;
    if (v3 >= 2)
    {
      uint64_t v6 = v5 >> 1;
      type metadata accessor for Schema.Entity();
      uint64_t v7 = sub_24558E838();
      *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
      uint64_t v8 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v161 = v7;
LABEL_23:
      uint64_t v23 = 0;
      uint64_t v24 = *a1;
      uint64_t v147 = v24 - 8;
      BOOL v22 = (char *)MEMORY[0x263F8EE78];
      uint64_t v157 = v24;
      __dst = v8;
      while (1)
      {
        uint64_t v26 = v23 + 1;
        if (v23 + 1 < v3)
        {
          uint64_t v27 = *(void *)(v24 + 8 * v26);
          uint64_t v28 = *(void *)(v24 + 8 * v23);
          swift_beginAccess();
          uint64_t v29 = *(void *)(v27 + 16);
          uint64_t v30 = *(void *)(v27 + 24);
          swift_beginAccess();
          if (v29 == *(void *)(v28 + 16) && v30 == *(void *)(v28 + 24))
          {
            uint64_t v33 = v23 + 2;
            if (v23 + 2 >= v3) {
              goto LABEL_53;
            }
            int v32 = 0;
            do
            {
LABEL_37:
              uint64_t v35 = *(void *)(v157 + 8 * v33);
              uint64_t v36 = *(void *)(v157 + 8 * v26);
              swift_beginAccess();
              uint64_t v37 = *(void *)(v35 + 16);
              uint64_t v38 = *(void *)(v35 + 24);
              swift_beginAccess();
              if (v37 == *(void *)(v36 + 16) && v38 == *(void *)(v36 + 24))
              {
                uint64_t v3 = v150;
                if (v32) {
                  goto LABEL_46;
                }
              }
              else
              {
                uint64_t v3 = v150;
                if ((v32 ^ sub_24558F598())) {
                  goto LABEL_45;
                }
              }
              uint64_t v34 = v33 + 1;
              uint64_t v26 = v33;
              uint64_t v33 = v34;
            }
            while (v34 < v3);
            uint64_t v33 = v34;
          }
          else
          {
            int v32 = sub_24558F598();
            uint64_t v33 = v23 + 2;
            if (v23 + 2 < v3) {
              goto LABEL_37;
            }
          }
LABEL_45:
          uint64_t v26 = v33;
          if (v32)
          {
LABEL_46:
            if (v33 < v23) {
              goto LABEL_220;
            }
            if (v23 < v33)
            {
              uint64_t v40 = (uint64_t *)(v147 + 8 * v33);
              uint64_t v41 = v33;
              uint64_t v42 = v23;
              uint64_t v43 = (uint64_t *)(v157 + 8 * v23);
              do
              {
                if (v42 != --v41)
                {
                  if (!v157) {
                    goto LABEL_225;
                  }
                  uint64_t v44 = *v43;
                  *uint64_t v43 = *v40;
                  *uint64_t v40 = v44;
                }
                ++v42;
                --v40;
                ++v43;
              }
              while (v42 < v41);
            }
LABEL_53:
            uint64_t v26 = v33;
          }
        }
        if (v26 >= v3) {
          goto LABEL_74;
        }
        if (__OFSUB__(v26, v23)) {
          goto LABEL_213;
        }
        if (v26 - v23 >= v145)
        {
LABEL_74:
          uint64_t v24 = v157;
LABEL_75:
          if (v26 < v23) {
            goto LABEL_212;
          }
          goto LABEL_76;
        }
        uint64_t v24 = v157;
        if (__OFADD__(v23, v145)) {
          goto LABEL_218;
        }
        if (v23 + v145 >= v3) {
          uint64_t v45 = v3;
        }
        else {
          uint64_t v45 = v23 + v145;
        }
        if (v45 < v23) {
          goto LABEL_219;
        }
        if (v26 == v45) {
          goto LABEL_75;
        }
        uint64_t v46 = (uint64_t *)(v147 + 8 * v26);
        uint64_t v159 = v45;
        do
        {
          uint64_t v47 = *(void *)(v24 + 8 * v26);
          uint64_t v48 = v23;
          uint64_t v49 = v23;
          unint64_t v50 = v46;
          do
          {
            uint64_t v51 = v26;
            uint64_t v52 = *v50;
            swift_beginAccess();
            uint64_t v53 = *(void *)(v47 + 16);
            uint64_t v54 = *(void *)(v47 + 24);
            swift_beginAccess();
            uint64_t v55 = *(void *)(v52 + 16);
            uint64_t v56 = *(void *)(v52 + 24);
            uint64_t v26 = v51;
            BOOL v57 = v53 == v55 && v54 == v56;
            if (v57 || (sub_24558F598() & 1) == 0) {
              break;
            }
            if (!v157) {
              goto LABEL_222;
            }
            uint64_t v58 = *v50;
            uint64_t v47 = v50[1];
            *unint64_t v50 = v47;
            v50[1] = v58;
            --v50;
            ++v49;
          }
          while (v51 != v49);
          uint64_t v26 = v51 + 1;
          ++v46;
          uint64_t v24 = v157;
          uint64_t v23 = v48;
        }
        while (v26 != v159);
        uint64_t v26 = v159;
        uint64_t v3 = v150;
        if (v159 < v48) {
          goto LABEL_212;
        }
LABEL_76:
        uint64_t v146 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v22 = sub_245558628(0, *((void *)v22 + 2) + 1, 1, v22);
        }
        unint64_t v60 = *((void *)v22 + 2);
        unint64_t v59 = *((void *)v22 + 3);
        unint64_t v25 = v60 + 1;
        if (v60 >= v59 >> 1) {
          BOOL v22 = sub_245558628((char *)(v59 > 1), v60 + 1, 1, v22);
        }
        *((void *)v22 + 2) = v25;
        uint64_t v61 = v22 + 32;
        uint64_t v62 = &v22[16 * v60 + 32];
        *(void *)uint64_t v62 = v23;
        *((void *)v62 + 1) = v146;
        if (v60)
        {
          uint64_t v8 = __dst;
          v148 = v22;
          uint64_t v149 = v22 + 32;
          while (1)
          {
            unint64_t v63 = v25 - 1;
            if (v25 >= 4)
            {
              uint64_t v68 = &v61[16 * v25];
              uint64_t v69 = *((void *)v68 - 8);
              uint64_t v70 = *((void *)v68 - 7);
              BOOL v74 = __OFSUB__(v70, v69);
              uint64_t v71 = v70 - v69;
              if (v74) {
                goto LABEL_201;
              }
              uint64_t v73 = *((void *)v68 - 6);
              uint64_t v72 = *((void *)v68 - 5);
              BOOL v74 = __OFSUB__(v72, v73);
              uint64_t v66 = v72 - v73;
              char v67 = v74;
              if (v74) {
                goto LABEL_202;
              }
              unint64_t v75 = v25 - 2;
              uint64_t v76 = &v61[16 * v25 - 32];
              uint64_t v78 = *(void *)v76;
              uint64_t v77 = *((void *)v76 + 1);
              BOOL v74 = __OFSUB__(v77, v78);
              uint64_t v79 = v77 - v78;
              if (v74) {
                goto LABEL_204;
              }
              BOOL v74 = __OFADD__(v66, v79);
              uint64_t v80 = v66 + v79;
              if (v74) {
                goto LABEL_207;
              }
              if (v80 >= v71)
              {
                uint64_t v98 = &v61[16 * v63];
                uint64_t v100 = *(void *)v98;
                uint64_t v99 = *((void *)v98 + 1);
                BOOL v74 = __OFSUB__(v99, v100);
                uint64_t v101 = v99 - v100;
                if (v74) {
                  goto LABEL_211;
                }
                BOOL v91 = v66 < v101;
                goto LABEL_113;
              }
            }
            else
            {
              if (v25 != 3)
              {
                uint64_t v92 = *((void *)v22 + 4);
                uint64_t v93 = *((void *)v22 + 5);
                BOOL v74 = __OFSUB__(v93, v92);
                uint64_t v85 = v93 - v92;
                char v86 = v74;
                goto LABEL_107;
              }
              uint64_t v65 = *((void *)v22 + 4);
              uint64_t v64 = *((void *)v22 + 5);
              BOOL v74 = __OFSUB__(v64, v65);
              uint64_t v66 = v64 - v65;
              char v67 = v74;
            }
            if (v67) {
              goto LABEL_203;
            }
            unint64_t v75 = v25 - 2;
            uint64_t v81 = &v61[16 * v25 - 32];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v84 = __OFSUB__(v82, v83);
            uint64_t v85 = v82 - v83;
            char v86 = v84;
            if (v84) {
              goto LABEL_206;
            }
            uint64_t v87 = &v61[16 * v63];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v74 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v74) {
              goto LABEL_209;
            }
            if (__OFADD__(v85, v90)) {
              goto LABEL_210;
            }
            if (v85 + v90 >= v66)
            {
              BOOL v91 = v66 < v90;
LABEL_113:
              if (v91) {
                unint64_t v63 = v75;
              }
              goto LABEL_115;
            }
LABEL_107:
            if (v86) {
              goto LABEL_205;
            }
            uint64_t v94 = &v61[16 * v63];
            uint64_t v96 = *(void *)v94;
            uint64_t v95 = *((void *)v94 + 1);
            BOOL v74 = __OFSUB__(v95, v96);
            uint64_t v97 = v95 - v96;
            if (v74) {
              goto LABEL_208;
            }
            if (v97 < v85) {
              goto LABEL_25;
            }
LABEL_115:
            if (v63 - 1 >= v25)
            {
              __break(1u);
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              __break(1u);
LABEL_206:
              __break(1u);
LABEL_207:
              __break(1u);
LABEL_208:
              __break(1u);
LABEL_209:
              __break(1u);
LABEL_210:
              __break(1u);
LABEL_211:
              __break(1u);
LABEL_212:
              __break(1u);
LABEL_213:
              __break(1u);
              goto LABEL_214;
            }
            if (!v24) {
              goto LABEL_224;
            }
            unint64_t v153 = v63 - 1;
            uint64_t v152 = &v61[16 * v63 - 16];
            uint64_t v102 = *(void *)v152;
            uint64_t v103 = &v61[16 * v63];
            uint64_t v104 = *(void *)v103;
            uint64_t v151 = v103;
            uint64_t v105 = (char *)(v24 + 8 * *(void *)v152);
            uint64_t v106 = (char *)(v24 + 8 * *(void *)v103);
            unint64_t v155 = v63;
            uint64_t v156 = *((void *)v103 + 1);
            unint64_t v107 = v24 + 8 * v156;
            uint64_t v108 = v106 - v105;
            uint64_t v109 = v106 - v105 + 7;
            if (v106 - v105 >= 0) {
              uint64_t v109 = v106 - v105;
            }
            uint64_t v110 = v109 >> 3;
            uint64_t v111 = v107 - (void)v106;
            uint64_t v112 = v107 - (void)v106 + 7;
            if ((uint64_t)(v107 - (void)v106) >= 0) {
              uint64_t v112 = v107 - (void)v106;
            }
            uint64_t v113 = v112 >> 3;
            uint64_t v154 = *(void *)v152;
            if (v110 >= v112 >> 3)
            {
              if (v111 < -7) {
                goto LABEL_227;
              }
              if ((unint64_t)v8 >= v107 || v8 != v106)
              {
                uint64_t v123 = *(void *)v152;
                memmove(v8, v106, 8 * v113);
                uint64_t v102 = v123;
              }
              uint64_t v114 = &v8[8 * v113];
              uint64_t v61 = v149;
              int64_t v124 = v155;
              if (v102 >= v104 || v111 < 8)
              {
                uint64_t v115 = v8;
                goto LABEL_170;
              }
              int v125 = (char *)(v147 + 8 * v156);
              while (2)
              {
                uint64_t v126 = v125 + 8;
                unint64_t v160 = (unint64_t)v114;
                uint64_t v128 = v114 - 8;
                uint64_t v127 = *((void *)v114 - 1);
                uint64_t v129 = v106;
                uint64_t v130 = *((void *)v106 - 1);
                v106 -= 8;
                swift_beginAccess();
                uint64_t v131 = *(void *)(v127 + 16);
                uint64_t v132 = *(void *)(v127 + 24);
                swift_beginAccess();
                uint64_t v133 = *(void *)(v130 + 24);
                BOOL v134 = v131 == *(void *)(v130 + 16) && v132 == v133;
                if (v134 || (sub_24558F598() & 1) == 0)
                {
                  if (v126 != (char *)v160)
                  {
                    uint64_t v114 = v128;
                    uint64_t v8 = __dst;
                    uint64_t v106 = v129;
                    goto LABEL_162;
                  }
                  uint64_t v114 = v128;
                  uint64_t v8 = __dst;
                  uint64_t v106 = v129;
                  if ((unint64_t)v125 >= v160) {
                    goto LABEL_162;
                  }
                }
                else
                {
                  uint64_t v128 = v106;
                  if (v126 != v129)
                  {
                    uint64_t v8 = __dst;
                    uint64_t v114 = (char *)v160;
                    goto LABEL_162;
                  }
                  uint64_t v8 = __dst;
                  uint64_t v114 = (char *)v160;
                  if (v125 >= v129) {
LABEL_162:
                  }
                    *(void *)int v125 = *(void *)v128;
                }
                if (v105 >= v106 || (v125 -= 8, v8 >= v114))
                {
                  uint64_t v115 = v8;
                  goto LABEL_168;
                }
                continue;
              }
            }
            if (v108 < -7) {
              goto LABEL_227;
            }
            if (v8 != v105 || v8 >= v106) {
              memmove(v8, v105, 8 * v110);
            }
            uint64_t v114 = &v8[8 * v110];
            if (v104 < v156 && v108 >= 8)
            {
              uint64_t v115 = v8;
              while (1)
              {
                unint64_t v116 = (unint64_t)v114;
                uint64_t v117 = *(void *)v106;
                uint64_t v118 = *(void *)v115;
                swift_beginAccess();
                uint64_t v120 = *(void *)(v117 + 16);
                uint64_t v119 = *(void *)(v117 + 24);
                swift_beginAccess();
                BOOL v121 = v120 == *(void *)(v118 + 16) && v119 == *(void *)(v118 + 24);
                if (v121 || (sub_24558F598() & 1) == 0) {
                  break;
                }
                uint64_t v122 = v106;
                BOOL v19 = v105 == v106;
                v106 += 8;
                if (!v19) {
                  goto LABEL_138;
                }
LABEL_139:
                v105 += 8;
                uint64_t v114 = (char *)v116;
                if ((unint64_t)v115 >= v116 || (unint64_t)v106 >= v107) {
                  goto LABEL_167;
                }
              }
              uint64_t v122 = v115;
              BOOL v19 = v105 == v115;
              v115 += 8;
              if (v19) {
                goto LABEL_139;
              }
LABEL_138:
              *(void *)uint64_t v105 = *(void *)v122;
              goto LABEL_139;
            }
            uint64_t v115 = v8;
LABEL_167:
            uint64_t v106 = v105;
LABEL_168:
            uint64_t v61 = v149;
            int64_t v124 = v155;
LABEL_170:
            uint64_t v135 = v114 - v115 + 7;
            if (v114 - v115 >= 0) {
              uint64_t v135 = v114 - v115;
            }
            BOOL v22 = v148;
            if (v114 - v115 <= -8) {
              goto LABEL_227;
            }
            uint64_t v136 = v135 >> 3;
            uint64_t v3 = v150;
            if (v106 != v115 || v106 >= &v115[8 * v136]) {
              memmove(v106, v115, 8 * v136);
            }
            if (v156 < v154) {
              goto LABEL_198;
            }
            if (v124 > *((void *)v148 + 2)) {
              goto LABEL_199;
            }
            *(void *)uint64_t v152 = v154;
            *(void *)&v61[16 * v153 + 8] = v156;
            unint64_t v137 = *((void *)v148 + 2);
            if (v124 >= (uint64_t)v137) {
              goto LABEL_200;
            }
            unint64_t v25 = v137 - 1;
            memmove(v151, v151 + 16, 16 * (v137 - 1 - v124));
            *((void *)v148 + 2) = v137 - 1;
            uint64_t v24 = v157;
            if (v137 <= 2) {
              goto LABEL_25;
            }
          }
        }
        unint64_t v25 = 1;
        uint64_t v8 = __dst;
LABEL_25:
        uint64_t v23 = v146;
        if (v146 >= v3) {
          goto LABEL_184;
        }
      }
    }
    BOOL v22 = (char *)MEMORY[0x263F8EE78];
    uint64_t v161 = MEMORY[0x263F8EE78];
    uint64_t v8 = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 == 1) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_184:
    if (v25 >= 2)
    {
      uint64_t v138 = *v144;
      while (1)
      {
        unint64_t v139 = v25 - 2;
        if (v25 < 2) {
          break;
        }
        if (!v138) {
          goto LABEL_226;
        }
        uint64_t v140 = *(void *)&v22[16 * v139 + 32];
        uint64_t v141 = *(void *)&v22[16 * v25 + 24];
        sub_2455582F8((char *)(v138 + 8 * v140), (char *)(v138 + 8 * *(void *)&v22[16 * v25 + 16]), v138 + 8 * v141, v8);
        if (v1) {
          goto LABEL_195;
        }
        if (v141 < v140) {
          goto LABEL_215;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v22 = sub_24555889C((uint64_t)v22);
        }
        if (v139 >= *((void *)v22 + 2)) {
          goto LABEL_216;
        }
        BOOL v142 = &v22[16 * v139 + 32];
        *(void *)BOOL v142 = v140;
        *((void *)v142 + 1) = v141;
        unint64_t v143 = *((void *)v22 + 2);
        if (v25 > v143) {
          goto LABEL_217;
        }
        memmove(&v22[16 * v25 + 16], &v22[16 * v25 + 32], 16 * (v143 - v25));
        *((void *)v22 + 2) = v143 - 1;
        unint64_t v25 = v143 - 1;
        if (v143 <= 2) {
          goto LABEL_195;
        }
      }
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
LABEL_217:
      __break(1u);
LABEL_218:
      __break(1u);
LABEL_219:
      __break(1u);
LABEL_220:
      __break(1u);
      goto LABEL_221;
    }
LABEL_195:
    swift_bridgeObjectRelease();
    *(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_24558E7E8();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2455582F8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v39 = __src;
  uint64_t v38 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[8 * v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    BOOL v22 = &v4[8 * v13];
    uint64_t v37 = v22;
    uint64_t v39 = v6;
    uint64_t v36 = __src;
    if (__src >= v6 || v11 < 8) {
      goto LABEL_52;
    }
    uint64_t v23 = (char *)(a3 - 8);
    uint64_t v24 = v6;
    uint64_t v35 = v4;
    while (1)
    {
      unint64_t v25 = v23 + 8;
      uint64_t v27 = v22 - 8;
      uint64_t v26 = *((void *)v22 - 1);
      uint64_t v28 = *((void *)v24 - 1);
      v24 -= 8;
      swift_beginAccess();
      uint64_t v29 = *(void *)(v26 + 16);
      uint64_t v30 = *(void *)(v26 + 24);
      swift_beginAccess();
      uint64_t v31 = *(void *)(v28 + 24);
      BOOL v32 = v29 == *(void *)(v28 + 16) && v30 == v31;
      if (v32 || (sub_24558F598() & 1) == 0)
      {
        uint64_t v37 = v22 - 8;
        if (v25 >= v22 && v23 < v22)
        {
          uint64_t v33 = v35;
          if (v25 != v22) {
            *(void *)uint64_t v23 = *(void *)v27;
          }
          uint64_t v24 = v6;
          v22 -= 8;
          goto LABEL_50;
        }
        *(void *)uint64_t v23 = *(void *)v27;
        uint64_t v24 = v6;
        v22 -= 8;
      }
      else
      {
        if (v25 != v6 || v23 >= v6) {
          *(void *)uint64_t v23 = *(void *)v24;
        }
        uint64_t v39 = v24;
      }
      uint64_t v33 = v35;
LABEL_50:
      if (v24 > v36)
      {
        v23 -= 8;
        uint64_t v6 = v24;
        if (v22 > v33) {
          continue;
        }
      }
      goto LABEL_52;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = __src;
    char v15 = &v4[8 * v10];
    uint64_t v37 = v15;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        uint64_t v16 = *(void *)v6;
        uint64_t v17 = *(void *)v4;
        swift_beginAccess();
        uint64_t v18 = *(void *)(v16 + 16);
        uint64_t v19 = *(void *)(v16 + 24);
        swift_beginAccess();
        BOOL v20 = v18 == *(void *)(v17 + 16) && v19 == *(void *)(v17 + 24);
        if (v20 || (sub_24558F598() & 1) == 0)
        {
          if (v14 != v4) {
            *(void *)uint64_t v14 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v38 = v4;
          uint64_t v21 = v6;
        }
        else
        {
          uint64_t v21 = v6 + 8;
          if (v14 < v6 || v14 >= v21 || v14 != v6) {
            *(void *)uint64_t v14 = *(void *)v6;
          }
        }
        v14 += 8;
        if (v4 >= v15) {
          break;
        }
        uint64_t v6 = v21;
      }
      while ((unint64_t)v21 < a3);
      uint64_t v39 = v14;
    }
LABEL_52:
    sub_2455587E0((void **)&v39, (const void **)&v38, &v37);
    return 1;
  }
LABEL_53:
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

char *sub_245558628(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3DE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_245558724(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_24558F228();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_2455587E0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_24558F228();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_24555889C(uint64_t a1)
{
  return sub_245558628(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2455588B0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    BOOL v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_245558AB0(uint64_t result, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t v7 = a4;
  unint64_t v9 = a2;
  uint64_t v30 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_24558EE48();
    a5(0);
    sub_2454ED124(a6, 255, a7);
    uint64_t result = sub_24558E9F8();
    uint64_t v7 = v34;
    uint64_t v13 = v35;
    uint64_t v14 = v36;
    int64_t v15 = v37;
    unint64_t v16 = v38;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v17 = 0;
    goto LABEL_38;
  }
  int64_t v15 = 0;
  uint64_t v25 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v13 = a4 + 56;
  uint64_t v14 = ~v25;
  uint64_t v26 = -v25;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v16 = v27 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v17 = 0;
LABEL_38:
    uint64_t v28 = v30;
LABEL_41:
    *uint64_t v28 = v7;
    v28[1] = v13;
    v28[2] = v14;
    void v28[3] = v15;
    v28[4] = v16;
    return v17;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v17 = 0;
  int64_t v31 = (unint64_t)(v14 + 64) >> 6;
  uint64_t v29 = v14;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_24558EEC8()) {
        goto LABEL_40;
      }
      a5(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v20 = v33;
      uint64_t result = swift_unknownObjectRelease();
      if (!v33) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v15 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v21 >= v31)
    {
      unint64_t v16 = 0;
      goto LABEL_40;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v21);
    if (v22) {
      goto LABEL_23;
    }
    int64_t v23 = v15 + 2;
    if (v15 + 2 >= v31)
    {
      unint64_t v16 = 0;
      ++v15;
      goto LABEL_40;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v23);
    if (!v22)
    {
      if (v15 + 3 >= v31) {
        goto LABEL_44;
      }
      unint64_t v22 = *(void *)(v13 + 8 * (v15 + 3));
      if (v22)
      {
        int64_t v21 = v15 + 3;
        goto LABEL_23;
      }
      int64_t v23 = v15 + 4;
      if (v15 + 4 >= v31)
      {
        unint64_t v16 = 0;
        v15 += 3;
        goto LABEL_40;
      }
      unint64_t v22 = *(void *)(v13 + 8 * v23);
      if (!v22)
      {
        int64_t v21 = v15 + 5;
        if (v15 + 5 >= v31)
        {
LABEL_44:
          unint64_t v16 = 0;
          int64_t v15 = v23;
          goto LABEL_40;
        }
        unint64_t v22 = *(void *)(v13 + 8 * v21);
        if (!v22)
        {
          int64_t v24 = v15 + 6;
          while (v31 != v24)
          {
            unint64_t v22 = *(void *)(v13 + 8 * v24++);
            if (v22)
            {
              int64_t v21 = v24 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v16 = 0;
          int64_t v15 = v31 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v21 = v23;
LABEL_23:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v15 = v21;
LABEL_7:
    uint64_t v20 = *(void *)(*(void *)(v7 + 48) + 8 * v19);
    uint64_t result = swift_retain();
    if (!v20) {
      goto LABEL_40;
    }
LABEL_8:
    ++v17;
    *v9++ = v20;
    if (v17 == a3)
    {
      uint64_t v17 = a3;
LABEL_40:
      uint64_t v14 = v29;
      uint64_t v28 = v30;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_245558DB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  int64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  int64_t v15 = (char *)&v30 - v14;
  uint64_t v35 = a4;
  uint64_t v18 = *(void *)(a4 + 56);
  uint64_t v17 = a4 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = -1 << *(unsigned char *)(v17 - 24);
  if (-v19 < 64) {
    uint64_t v20 = ~(-1 << -(char)v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v16;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_38:
    *a1 = v35;
    a1[1] = v17;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v32 = -1 << *(unsigned char *)(v17 - 24);
  uint64_t v33 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  int64_t v34 = (unint64_t)(63 - v19) >> 6;
  int64_t v31 = v34 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_24555AE0C(*(void *)(v35 + 48) + v29 * v25, (uint64_t)v12, type metadata accessor for PersistentIdentifier);
    sub_2454A1C18((uint64_t)v12, (uint64_t)v15);
    uint64_t result = sub_2454A1C18((uint64_t)v15, a2);
    if (v23 == a3) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v34) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    unint64_t v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    uint64_t v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v34)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_245559094(uint64_t a1)
{
  return sub_2454B6B20(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_2455590A8()
{
}

uint64_t _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  long long v8 = *a1;
  long long v9 = *a2;
  uint64_t v3 = *((void *)a2 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA228);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_245597630;
  *(_OWORD *)(inited + 32) = v8;
  *(void *)(inited + 48) = v2;
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_245597630;
  *(_OWORD *)(v5 + 32) = v9;
  *(void *)(v5 + 48) = v3;
  if (sub_24557425C((void *)inited, (void *)v5)) {
    char v6 = 0;
  }
  else {
    char v6 = sub_245555CCC(v5, inited);
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  return v6 & 1;
}

unint64_t _s9SwiftData6SchemaC2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = a1[7];
  *(void *)&long long v19 = v4;
  *((void *)&v19 + 1) = v5;
  uint64_t v20 = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a2[6];
  uint64_t v9 = a2[7];
  *(void *)&long long v17 = v7;
  *((void *)&v17 + 1) = v8;
  uint64_t v18 = v9;
  if (_s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v19, &v17)) {
    return 0;
  }
  *(void *)&long long v15 = v4;
  *((void *)&v15 + 1) = v5;
  uint64_t v16 = v6;
  *(void *)&long long v13 = v7;
  *((void *)&v13 + 1) = v8;
  uint64_t v14 = v9;
  if (_s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v13, &v15)) {
    return 0;
  }
  unint64_t v11 = a1[8];
  uint64_t v12 = a2[8];

  return sub_2454ECDB0(v11, v12);
}

unint64_t sub_245559258()
{
  unint64_t result = qword_268EE3D28;
  if (!qword_268EE3D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3D28);
  }
  return result;
}

uint64_t sub_2455592AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_268EE3690 != -1) {
    swift_once();
  }
  uint64_t v6 = (os_unfair_lock_s *)(qword_268EEAC98 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  swift_release();
  if (qword_268EE3698 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = off_268EE3D18;
  off_268EE3D18 = (_UNKNOWN *)0x8000000000000000;
  sub_2455059F4(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  off_268EE3D18 = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v8 = (os_unfair_lock_s *)qword_268EEAC98;
  swift_retain();
  os_unfair_lock_unlock(v8 + 4);
  return swift_release();
}

uint64_t sub_2455593FC(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_24558F1C8();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x2456A1A50](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for Schema.Entity();
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_24558F1C8();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_24558F228();
          __break(1u);
          return result;
        }
        long long v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_24558F1C8();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_24558E7E8();
}

uint64_t sub_245559708(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E69646F636E65 && a2 == 0xEF6E6F6973726556;
  if (v2 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_245559884(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F6A616DLL && a2 == 0xE500000000000000;
  if (v2 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6E696DLL && a2 == 0xE500000000000000 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6863746170 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2455599C4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_2454C22EC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_245559B30(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = 1;
  *(_OWORD *)(v2 + 5) = *(_OWORD *)a2;
  v2[7] = v4;
  v2[8] = a1;
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_24558F1C8();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v5)
    {
LABEL_3:
      unint64_t v27 = v2;
      unint64_t v29 = v3 & 0xC000000000000001;
      char v6 = (void *)MEMORY[0x263F8EE80];
      uint64_t v7 = 4;
      uint64_t v28 = v3;
      while (1)
      {
        uint64_t v9 = v7 - 4;
        if (v29)
        {
          uint64_t v10 = MEMORY[0x2456A1A40](v7 - 4, v3);
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(v3 + 8 * v7);
          swift_retain();
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        uint64_t v30 = v11;
        swift_beginAccess();
        uint64_t v3 = *(void *)(v10 + 16);
        uint64_t v12 = *(void *)(v10 + 24);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        int64_t v31 = v6;
        uint64_t v2 = v6;
        unint64_t v15 = sub_2454A0B40(v3, v12);
        uint64_t v16 = v6[2];
        BOOL v17 = (v14 & 1) == 0;
        uint64_t v18 = v16 + v17;
        if (__OFADD__(v16, v17)) {
          goto LABEL_24;
        }
        char v19 = v14;
        if (v6[3] >= v18)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            char v6 = v31;
            if (v14) {
              goto LABEL_4;
            }
          }
          else
          {
            uint64_t v2 = &v31;
            sub_245523E80();
            char v6 = v31;
            if (v19) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_245493230(v18, isUniquelyReferenced_nonNull_native);
          uint64_t v2 = v31;
          unint64_t v20 = sub_2454A0B40(v3, v12);
          if ((v19 & 1) != (v21 & 1))
          {
            uint64_t result = sub_24558F748();
            __break(1u);
            return result;
          }
          unint64_t v15 = v20;
          char v6 = v31;
          if (v19)
          {
LABEL_4:
            uint64_t v8 = v6[7];
            swift_release();
            *(void *)(v8 + 8 * v15) = v10;
            goto LABEL_5;
          }
        }
        v6[(v15 >> 6) + 8] |= 1 << v15;
        uint64_t v22 = (uint64_t *)(v6[6] + 16 * v15);
        *uint64_t v22 = v3;
        v22[1] = v12;
        *(void *)(v6[7] + 8 * v15) = v10;
        uint64_t v23 = v6[2];
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v23 + 1;
        if (v24) {
          goto LABEL_25;
        }
        uint64_t v6[2] = v25;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v7;
        uint64_t v3 = v28;
        if (v30 == v5)
        {
          swift_bridgeObjectRelease();
          uint64_t v2 = v27;
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  char v6 = (void *)MEMORY[0x263F8EE80];
LABEL_28:
  v2[9] = v6;
  return (uint64_t)v2;
}

unint64_t sub_245559DC8()
{
  unint64_t result = qword_268EE3D38;
  if (!qword_268EE3D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3D38);
  }
  return result;
}

unint64_t sub_245559E1C()
{
  unint64_t result = qword_268EE3D40;
  if (!qword_268EE3D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3D40);
  }
  return result;
}

unint64_t sub_245559E70()
{
  unint64_t result = qword_268EE3D68;
  if (!qword_268EE3D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3D68);
  }
  return result;
}

uint64_t sub_245559EC4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3D48);
    sub_2454ED124(a2, 255, (void (*)(uint64_t))type metadata accessor for Schema.Entity);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_245559F5C()
{
  unint64_t result = qword_268EE3D98;
  if (!qword_268EE3D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3D98);
  }
  return result;
}

unint64_t sub_245559FB4()
{
  unint64_t result = qword_268EE3DA8;
  if (!qword_268EE3DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3DA8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MigrationStage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for MigrationStage(uint64_t *a1)
{
}

uint64_t *initializeWithCopy for MigrationStage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  sub_2454FE54C(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return a1;
}

uint64_t *assignWithCopy for MigrationStage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  sub_2454FE54C(*a2, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  uint64_t v16 = a1[5];
  uint64_t v17 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  sub_2454FE5BC(v11, v12, v13, v14, v15, v16, v17);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for MigrationStage(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  long long v10 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v10;
  long long v11 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v11;
  sub_2454FE5BC(v3, v5, v4, v6, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MigrationStage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0xFFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  unsigned int v4 = (((v3 >> 36) >> 27) & 0xF0000001 | (2
                                                       * ((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7 | (*(void *)(a1 + 8) >> 50) & 0x3C00 | ((*(void *)(a1 + 8) & 7) << 7) & 0x3FFF | (*(void *)(a1 + 16) >> 43) & 0x1E0000 | ((*(void *)(a1 + 16) & 7) << 14) & 0x7FFFFFF | (v3 >> 36) & 0x7000000 | ((v3 & 7) << 21) & 0x7FFFFFF))) ^ 0xFFFFFFF;
  if (v4 >= 0xFFFFFFE) {
    unsigned int v4 = -1;
  }
  return v4 + 1;
}

uint64_t storeEnumTagSinglePayload for MigrationStage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0xFFFFFFF;
    if (a3 >= 0xFFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2)
    {
      unint64_t v3 = ((-a2 >> 1) & 0x7FFFFFF) - (a2 << 27);
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
      uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(v3);
      *(int8x16_t *)(result + 8) = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_24559A4D0), (int8x16_t)vdupq_n_s64(7uLL)), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_24559A4E0), (int8x16_t)vdupq_n_s64(0xF000000000000000)));
      *(void *)(result + 24) = ((v3 >> 21) | (v3 << 36)) & 0xF000000000000007;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
    }
  }
  return result;
}

uint64_t sub_24555A344(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 63;
}

uint64_t sub_24555A350(uint64_t result)
{
  *(void *)(result + 24) &= ~0x8000000000000000;
  return result;
}

int8x16_t sub_24555A360(int8x16_t *a1, uint64_t a2)
{
  uint64_t v2 = a1[1].i64[0] & 0xFFFFFFFFFFFFFF8;
  uint64_t v3 = a1[1].i64[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  int8x16_t result = vandq_s8(*a1, (int8x16_t)vdupq_n_s64(0xFFFFFFFFFFFFFF8uLL));
  *a1 = result;
  a1[1].i64[0] = v2;
  a1[1].i64[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for MigrationStage()
{
  return &type metadata for MigrationStage;
}

uint64_t dispatch thunk of static VersionedSchema.models.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static VersionedSchema.versionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static SchemaMigrationPlan.schemas.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static SchemaMigrationPlan.stages.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for Schema(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Schema);
}

uint64_t dispatch thunk of Schema.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Schema.__allocating_init(_:version:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of Schema.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t getEnumTagSinglePayload for Schema.Version(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Schema.Version(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)int8x16_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

uint64_t assignWithCopy for Schema.PropertyMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm_6(a1 + 24);
  }
  else if (v4)
  {
    *(void *)(a1 + 48) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
LABEL_8:
  uint64_t v6 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v6)
    {
      *(void *)(a1 + 80) = v6;
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 56, a2 + 56);
      return a1;
    }
LABEL_14:
    long long v7 = *(_OWORD *)(a2 + 56);
    long long v8 = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v7;
    *(_OWORD *)(a1 + 72) = v8;
    return a1;
  }
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1Tm_6(a1 + 56);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    char v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        int8x16_t result = (uint64_t *)swift_release();
        *char v3 = v12;
      }
      else
      {
        long long v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *int8x16_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *char v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for Schema.PropertyMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1Tm_6(a1 + 24);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  if (*(void *)(a1 + 80)) {
    __swift_destroy_boxed_opaque_existential_1Tm_6(a1 + 56);
  }
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

ValueMetadata *type metadata accessor for Schema.Version.CodingKeys()
{
  return &type metadata for Schema.Version.CodingKeys;
}

uint64_t _s9SwiftData6SchemaC7VersionV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9SwiftData6SchemaC7VersionV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *int8x16_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24555AA54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *int8x16_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_24555AA7C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24555AA88(unsigned char *result, char a2)
{
  *int8x16_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Schema.CodingKeys()
{
  return &type metadata for Schema.CodingKeys;
}

void *initializeBufferWithCopyOfBuffer for Schema.SchemaError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for Schema.SchemaError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for Schema.SchemaError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Schema.SchemaError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Schema.SchemaError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Schema.SchemaError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)int8x16_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24555ABD4()
{
  return 0;
}

ValueMetadata *type metadata accessor for Schema.SchemaError()
{
  return &type metadata for Schema.SchemaError;
}

unint64_t sub_24555ABF8()
{
  unint64_t result = qword_268EE3DB0;
  if (!qword_268EE3DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3DB0);
  }
  return result;
}

unint64_t sub_24555AC50()
{
  unint64_t result = qword_268EE3DB8;
  if (!qword_268EE3DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3DB8);
  }
  return result;
}

unint64_t sub_24555ACA8()
{
  unint64_t result = qword_268EE3DC0;
  if (!qword_268EE3DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3DC0);
  }
  return result;
}

unint64_t sub_24555AD00()
{
  unint64_t result = qword_268EE3DC8;
  if (!qword_268EE3DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3DC8);
  }
  return result;
}

unint64_t sub_24555AD58()
{
  unint64_t result = qword_268EE3DD0;
  if (!qword_268EE3DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3DD0);
  }
  return result;
}

unint64_t sub_24555ADB0()
{
  unint64_t result = qword_268EE3DD8;
  if (!qword_268EE3DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3DD8);
  }
  return result;
}

uint64_t sub_24555AE04()
{
  return swift_release();
}

uint64_t sub_24555AE0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for Schema.VersionedSchemaTypeKey()
{
  return &type metadata for Schema.VersionedSchemaTypeKey;
}

uint64_t _s9SwiftData6SchemaC22VersionedSchemaTypeKeyVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24555AEDC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_24555AF1C()
{
  unint64_t result = qword_268EE3DE8;
  if (!qword_268EE3DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3DE8);
  }
  return result;
}

id sub_24555AF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  v24[1] = a1;
  uint64_t v4 = sub_24558DD78();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24558E028();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)v24 - v10;
  v30[5] = (uint64_t)v24 - v10;
  v30[3] = a3;
  sub_24558E228();
  sub_24558E218();
  uint64_t v26 = v8;
  sub_24558E018();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9CF8);
  uint64_t v12 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9CD8) - 8);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_245597620;
  unint64_t v15 = v14 + v13 + v12[14];
  (*(void (**)(void))(v5 + 16))();
  uint64_t v16 = self;
  uint64_t v17 = v25;
  swift_retain();
  id v18 = objc_msgSend(v16, sel_expressionForEvaluatedObject);
  *(_OWORD *)(v15 + 8) = 0u;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  *(void *)(v15 + 56) = 0;
  *(void *)unint64_t v15 = v18;
  unint64_t v19 = sub_2454CC2A8(v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v30[0] = 1;
  v30[1] = v19;
  void v30[2] = v17;
  sub_24558E1F8();
  uint64_t v21 = v28;
  uint64_t v20 = v29;
  __swift_project_boxed_opaque_existential_0Tm(v27, v28);
  id v22 = sub_2454C8330(v30, v21, *(void *)(v20 + 8));
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v26);
  return v22;
}

uint64_t FetchDescriptor.predicate.getter@<X0>(uint64_t a1@<X8>)
{
  sub_24558E228();
  uint64_t v3 = sub_24558ECE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FetchDescriptor.predicate.setter(uint64_t a1)
{
  sub_24558E228();
  uint64_t v3 = sub_24558ECE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FetchDescriptor.predicate.modify())()
{
  return nullsub_30;
}

uint64_t FetchDescriptor.sortBy.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchDescriptor.sortBy.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FetchDescriptor.sortBy.modify())()
{
  return nullsub_31;
}

uint64_t FetchDescriptor.fetchLimit.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 40));
}

uint64_t FetchDescriptor.fetchLimit.setter(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v4 = v3 + *(int *)(a3 + 40);
  *(void *)uint64_t v4 = result;
  *(unsigned char *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*FetchDescriptor.fetchLimit.modify())()
{
  return nullsub_32;
}

uint64_t FetchDescriptor.fetchOffset.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 44));
}

uint64_t FetchDescriptor.fetchOffset.setter(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v4 = v3 + *(int *)(a3 + 44);
  *(void *)uint64_t v4 = result;
  *(unsigned char *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*FetchDescriptor.fetchOffset.modify())()
{
  return nullsub_33;
}

uint64_t FetchDescriptor.includePendingChanges.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t FetchDescriptor.includePendingChanges.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 48)) = result;
  return result;
}

uint64_t (*FetchDescriptor.includePendingChanges.modify())()
{
  return nullsub_34;
}

uint64_t FetchDescriptor.propertiesToFetch.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchDescriptor.propertiesToFetch.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FetchDescriptor.propertiesToFetch.modify())()
{
  return nullsub_35;
}

uint64_t FetchDescriptor.relationshipKeyPathsForPrefetching.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchDescriptor.relationshipKeyPathsForPrefetching.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 56);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FetchDescriptor.relationshipKeyPathsForPrefetching.modify())()
{
  return nullsub_36;
}

uint64_t FetchDescriptor.returnModelsAsFutures.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 60));
}

uint64_t FetchDescriptor.returnModelsAsFutures.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 60)) = result;
  return result;
}

uint64_t (*FetchDescriptor.returnModelsAsFutures.modify())()
{
  return nullsub_37;
}

uint64_t FetchDescriptor.triggerObservationChanges.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 64));
}

uint64_t FetchDescriptor.triggerObservationChanges.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 64)) = result;
  return result;
}

uint64_t (*FetchDescriptor.triggerObservationChanges.modify())()
{
  return nullsub_38;
}

uint64_t sub_24555B68C(uint64_t a1)
{
  uint64_t v3 = sub_24558DD78();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0x5F6C61636F6C5F24;
  *(void *)&long long v14 = 0xE800000000000000;
  uint64_t v18 = *v1;
  uint64_t v7 = v18;
  sub_24558F558();
  sub_24558E668();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v13;
    *uint64_t v1 = v7 + 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_24558E5A8();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(self, sel_expressionForVariable_, v10);

    uint64_t v17 = 0;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v14 = 0u;
    uint64_t v13 = (uint64_t)v11;
    sub_2454E4AFC(&v13, (uint64_t)v6);
    return v9;
  }
  return result;
}

id sub_24555B83C()
{
  uint64_t v1 = v0;
  if (objc_msgSend(v0, sel_expressionType) == (id)1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)sub_24558E5A8();
    swift_bridgeObjectRelease();
    id v3 = objc_msgSend(self, sel_expressionForKeyPath_, v2);
LABEL_3:
    id v4 = v3;

    return v4;
  }
  if (objc_msgSend(v0, sel_expressionType) == (id)3)
  {
    id v6 = objc_msgSend(v0, sel_keyPath);
    uint64_t v7 = sub_24558E5D8();
    uint64_t v9 = v8;

    uint64_t v22 = v7;
    uint64_t v23 = v9;
    *(void *)&long long v20 = 64;
    *((void *)&v20 + 1) = 0xE100000000000000;
    sub_2454ED040();
    LOBYTE(v6) = sub_24558ED78();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      id v16 = objc_msgSend(v1, sel_keyPath, v20);
      uint64_t v17 = sub_24558E5D8();
      uint64_t v19 = v18;

      uint64_t v22 = v17;
      uint64_t v23 = v19;
      sub_24558E668();
      sub_24558E668();
      uint64_t v2 = (void *)sub_24558E5A8();
      swift_bridgeObjectRelease();
      id v3 = objc_msgSend(self, sel_expressionForKeyPath_, v2);
      goto LABEL_3;
    }
  }
  uint64_t v10 = sub_2454C8408(0, &qword_268EE3DF8);
  uint64_t v24 = v10;
  uint64_t v22 = (uint64_t)v1;
  id v11 = self;
  id v12 = v1;
  uint64_t v13 = (void *)sub_24558E5A8();
  id v14 = objc_msgSend(v11, sel__newKeyPathExpressionForString_, v13);

  if (v14)
  {
    *((void *)&v21 + 1) = v10;
    *(void *)&long long v20 = v14;
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  id v15 = objc_allocWithZone(MEMORY[0x263F08908]);
  id result = sub_2455629CC(&v22, &v20);
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24555BA9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  a1[3] = v6;
  a1[4] = v7;
  boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm(a1);
  id v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v12(boxed_opaque_existential_0Tm, v3, v6);
  uint64_t v9 = v3 + *(int *)(a3 + 36);
  a2[3] = v6;
  a2[4] = v7;
  uint64_t v10 = __swift_allocate_boxed_opaque_existential_0Tm(a2);

  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v12)(v10, v9, v6);
}

uint64_t sub_24555BB58()
{
  return swift_getKeyPath();
}

uint64_t sub_24555BB88()
{
  return sub_24555BB58();
}

uint64_t sub_24555BB90(uint64_t *a1, uint64_t *a2)
{
  uint64_t v146 = sub_24558DD78();
  uint64_t v141 = *(void *)(v146 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v146);
  uint64_t v156 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v157 = (char *)&v126 - v7;
  unint64_t v8 = a2[2];
  uint64_t v9 = 8 * v8;
  unint64_t v155 = v8;
  if (v8 == 1)
  {
    uint64_t TupleTypeMetadata = *(void *)(a2[4] & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    MEMORY[0x270FA5388](v6);
    id v11 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v12)
    {
      unint64_t v13 = 0;
      unint64_t v14 = a2[4] & 0xFFFFFFFFFFFFFFFELL;
      if (v155 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)&v11[-v14] < 0x20) {
        goto LABEL_9;
      }
      unint64_t v13 = v155 & 0xFFFFFFFFFFFFFFFCLL;
      id v15 = (long long *)(v14 + 16);
      id v16 = v11 + 16;
      unint64_t v17 = v155 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v18 = *v15;
        *(v16 - 1) = *(v15 - 1);
        *id v16 = v18;
        v15 += 2;
        v16 += 2;
        v17 -= 4;
      }
      while (v17);
      if (v155 != v13)
      {
LABEL_9:
        unint64_t v19 = v155 - v13;
        uint64_t v20 = 8 * v13;
        long long v21 = &v11[8 * v13];
        uint64_t v22 = (uint64_t *)(v14 + v20);
        do
        {
          uint64_t v23 = *v22++;
          *(void *)long long v21 = v23;
          v21 += 8;
          --v19;
        }
        while (v19);
      }
    }
    unint64_t v24 = v155;
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    unint64_t v8 = v24;
  }
  uint64_t v147 = a1;
  unint64_t v139 = &v126;
  uint64_t v143 = TupleTypeMetadata;
  uint64_t v130 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v25 = MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v149 = (char *)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v153 = a2;
  if (v8 == 1)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v27 = sub_24558E028();
  }
  else
  {
    MEMORY[0x270FA5388](v25);
    if (v28)
    {
      unint64_t v29 = v153[4] & 0xFFFFFFFFFFFFFFFELL;
      unint64_t v30 = v153[6] & 0xFFFFFFFFFFFFFFFELL;
      int64_t v31 = (uint64_t *)((char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v32 = v155;
      do
      {
        v29 += 8;
        v30 += 8;
        swift_getAssociatedTypeWitness();
        *v31++ = sub_24558E028();
        --v32;
      }
      while (v32);
    }
    unint64_t v33 = v155;
    uint64_t v27 = swift_getTupleTypeMetadata();
    unint64_t v8 = v33;
    a2 = v153;
  }
  uint64_t v138 = &v126;
  uint64_t v142 = v27;
  uint64_t v129 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  v148 = (char *)&v126 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24558DCB8();
  unint64_t v137 = &v126;
  uint64_t v151 = (void *)v35;
  uint64_t v150 = *(void *)(v35 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v140 = (char *)&v126 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = &v126;
  uint64_t v145 = (void (**)(char *, uint64_t))a2[3];
  v144 = (char *)*(v145 - 1);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)&v126 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = &v126;
  MEMORY[0x270FA5388](v38);
  uint64_t v131 = v9;
  if (v8)
  {
    unint64_t v41 = v153[4] & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v42 = v153[6] & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v43 = (uint64_t *)((char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v44 = v155;
    do
    {
      v41 += 8;
      v42 += 8;
      *v43++ = swift_getAssociatedTypeWitness();
      --v44;
    }
    while (v44);
  }
  unint64_t v45 = v155;
  uint64_t v46 = sub_24558E228();
  uint64_t v133 = sub_24558ECE8();
  uint64_t v132 = *(void *)(v133 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v133);
  uint64_t v49 = (char *)&v126 - v48;
  BOOL v134 = &v126;
  uint64_t v50 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v52 = (char *)&v126 - v51;
  sub_24558DCF8();
  uint64_t v53 = v140;
  sub_24558DCC8();
  uint64_t v54 = v154;
  uint64_t v55 = v145;
  sub_24558DCD8();
  if (v54)
  {

    (*(void (**)(char *, void *))(v150 + 8))(v53, v151);
    (*((void (**)(char *, void))v144 + 1))(v40, v55);
    uint64_t v56 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v49, 1, 1, v46);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v49, v133);
    sub_2454F2B70();
    swift_allocError();
    *(unsigned char *)uint64_t v57 = 1;
    *(void *)(v57 + 8) = 0xD0000000000000A4;
    *(void *)(v57 + 16) = 0x8000000245594E10;
    swift_willThrow();
    return v56;
  }
  (*(void (**)(char *, void *))(v150 + 8))(v53, v151);
  (*((void (**)(char *, void))v144 + 1))(v40, v55);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v49, 0, 1, v46);
  uint64_t v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v50 + 32))(v52, v49, v46);
  MEMORY[0x270FA5388](v58);
  unint64_t v60 = (char *)&v126 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = 0;
  uint64_t v128 = v46;
  uint64_t v127 = v50;
  uint64_t v126 = v52;
  uint64_t v140 = v61;
  if (!v45)
  {
    sub_24558E218();
    sub_24558DCE8();
    uint64_t v93 = v147;
    uint64_t v65 = v148;
LABEL_53:
    uint64_t v119 = v128;
    uint64_t v120 = v126;
    sub_24558E1F8();
    uint64_t v121 = v162;
    uint64_t v56 = v163;
    __swift_project_boxed_opaque_existential_0Tm(&v160, v162);
    uint64_t v122 = v154;
    id v123 = sub_2454CB060(v93, v121, *(void *)(v56 + 8));
    if (!v122) {
      uint64_t v56 = (uint64_t)v123;
    }
    (*(void (**)(char *, uint64_t))(v127 + 8))(v120, v119);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v160);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v149, v143);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v65, v142);
    return v56;
  }
  uint64_t v62 = 0;
  uint64_t v63 = 32;
  uint64_t v64 = v142;
  uint64_t v65 = v148;
  do
  {
    if (v45 == 1) {
      int v66 = 0;
    }
    else {
      int v66 = *(_DWORD *)(v64 + v63);
    }
    *(void *)&v60[8 * v62++] = &v65[v66];
    v63 += 16;
  }
  while (v45 != v62);
  uint64_t v67 = sub_24558E218();
  MEMORY[0x270FA5388](v67);
  uint64_t v69 = (char *)&v126 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = 0;
  uint64_t v71 = 32;
  uint64_t v72 = v143;
  uint64_t v73 = v149;
  do
  {
    if (v45 == 1) {
      int v74 = 0;
    }
    else {
      int v74 = *(_DWORD *)(v72 + v71);
    }
    *(void *)&v69[8 * v70++] = &v73[v74];
    v71 += 16;
  }
  while (v45 != v70);
  unint64_t v75 = v153;
  sub_24558DCE8();
  uint64_t v76 = (uint64_t *)(v75[4] & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v77 = (uint64_t *)(v75[6] & 0xFFFFFFFFFFFFFFFELL);
  v144 = &v161;
  uint64_t v150 = v141 + 16;
  uint64_t v145 = (void (**)(char *, uint64_t))(v141 + 8);
  uint64_t v78 = 32;
  unint64_t v79 = v45;
  while (1)
  {
    unint64_t v152 = v79;
    if (v45 == 1) {
      int v81 = 0;
    }
    else {
      int v81 = *(_DWORD *)(v142 + v78);
    }
    unint64_t v153 = v76;
    uint64_t v82 = *v76;
    uint64_t v83 = *v77;
    BOOL v84 = &v65[v81];
    swift_getAssociatedTypeWitness();
    uint64_t v85 = sub_24558E028();
    uint64_t v151 = &v126;
    uint64_t v86 = *(void *)(v85 - 8);
    MEMORY[0x270FA5388](v85);
    uint64_t v88 = (char *)&v126 - v87;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))((char *)&v126 - v87, v84, v85);
    sub_24558E018();
    uint64_t v89 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v88, v85);
    uint64_t v90 = *(void *)(v82 - 8);
    MEMORY[0x270FA5388](v89);
    uint64_t v92 = (char *)&v126 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v90 + 16))(v92);
    uint64_t v93 = v147;
    uint64_t v94 = v154;
    id v95 = sub_2454CAF48(v147, v82, v83);
    uint64_t v154 = v94;
    if (v94)
    {
      int v125 = *(void (**)(char *, uint64_t))(v90 + 8);
      uint64_t v56 = v90 + 8;
      v125(v92, v82);
      (*v145)(v157, v146);
      (*(void (**)(char *, uint64_t))(v127 + 8))(v126, v128);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v149, v143);
      (*(void (**)(char *, uint64_t))(v129 + 8))(v148, v142);
      return v56;
    }
    id v96 = v95;
    (*(void (**)(char *, uint64_t))(v90 + 8))(v92, v82);
    uint64_t v97 = v144;
    *((void *)v144 + 6) = 0;
    *((_OWORD *)v97 + 1) = 0u;
    *((_OWORD *)v97 + 2) = 0u;
    *(_OWORD *)uint64_t v97 = 0u;
    id v160 = v96;
    uint64_t v98 = *(void (**)(uint64_t, char *, uint64_t))v150;
    uint64_t v99 = (uint64_t)v156;
    uint64_t v100 = v146;
    (*(void (**)(char *, char *, uint64_t))v150)(v156, v157, v146);
    sub_2454CBEE8((uint64_t)&v160, (uint64_t)v159);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v158 = (void *)v93[1];
    uint64_t v102 = v158;
    v93[1] = 0x8000000000000000;
    unint64_t v104 = sub_2454A279C(v99);
    uint64_t v105 = v102[2];
    BOOL v106 = (v103 & 1) == 0;
    uint64_t v107 = v105 + v106;
    if (__OFADD__(v105, v106)) {
      break;
    }
    char v108 = v103;
    if (v102[3] >= v107)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v111 = v158;
        if (v103) {
          goto LABEL_35;
        }
      }
      else
      {
        sub_24552488C();
        uint64_t v111 = v158;
        if (v108) {
          goto LABEL_35;
        }
      }
    }
    else
    {
      sub_2454E4EB8(v107, isUniquelyReferenced_nonNull_native);
      unint64_t v109 = sub_2454A279C((uint64_t)v156);
      if ((v108 & 1) != (v110 & 1)) {
        goto LABEL_60;
      }
      unint64_t v104 = v109;
      uint64_t v111 = v158;
      if (v108)
      {
LABEL_35:
        sub_24550AD94((uint64_t)v159, v111[7] + (v104 << 6));
        goto LABEL_36;
      }
    }
    v111[(v104 >> 6) + 8] |= 1 << v104;
    v98(v111[6] + *(void *)(v141 + 72) * v104, v156, v100);
    uint64_t v112 = (_OWORD *)(v111[7] + (v104 << 6));
    long long v113 = v159[0];
    long long v114 = v159[1];
    long long v115 = v159[3];
    v112[2] = v159[2];
    v112[3] = v115;
    *uint64_t v112 = v113;
    v112[1] = v114;
    uint64_t v116 = v111[2];
    BOOL v117 = __OFADD__(v116, 1);
    uint64_t v118 = v116 + 1;
    if (v117) {
      goto LABEL_59;
    }
    v111[2] = v118;
    uint64_t v111 = v158;
LABEL_36:
    v93[1] = (uint64_t)v111;
    swift_bridgeObjectRelease();
    uint64_t v80 = *v145;
    (*v145)(v156, v100);
    v80(v157, v100);
    sub_2454CBE58((uint64_t)&v160);
    v78 += 16;
    ++v77;
    uint64_t v76 = v153 + 1;
    unint64_t v79 = v152 - 1;
    unint64_t v45 = v155;
    uint64_t v65 = v148;
    if (v152 == 1) {
      goto LABEL_53;
    }
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t sub_24555CD34(uint64_t *a1, uint64_t *a2)
{
  uint64_t result = sub_24555BB90(a1, a2);
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t sub_24555CD58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v139 = sub_24558DD78();
  uint64_t v134 = *(void *)(v139 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v139);
  uint64_t v149 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v150 = (char *)&v119 - v7;
  unint64_t v8 = a2[2];
  uint64_t v9 = 8 * v8;
  if (v8 == 1)
  {
    uint64_t TupleTypeMetadata = *(void *)(a2[4] & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    MEMORY[0x270FA5388](v6);
    id v11 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v8)
    {
      unint64_t v12 = 0;
      unint64_t v13 = a2[4] & 0xFFFFFFFFFFFFFFFELL;
      if (v8 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)&v11[-v13] < 0x20) {
        goto LABEL_9;
      }
      unint64_t v12 = v8 & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v14 = (long long *)(v13 + 16);
      id v15 = v11 + 16;
      unint64_t v16 = v8 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v17 = *v14;
        *(v15 - 1) = *(v14 - 1);
        *id v15 = v17;
        v14 += 2;
        v15 += 2;
        v16 -= 4;
      }
      while (v16);
      if (v8 != v12)
      {
LABEL_9:
        unint64_t v18 = v8 - v12;
        uint64_t v19 = 8 * v12;
        uint64_t v20 = &v11[8 * v12];
        long long v21 = (uint64_t *)(v13 + v19);
        do
        {
          uint64_t v22 = *v21++;
          *(void *)uint64_t v20 = v22;
          v20 += 8;
          --v18;
        }
        while (v18);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  uint64_t v140 = a1;
  uint64_t v132 = &v119;
  uint64_t v136 = TupleTypeMetadata;
  uint64_t v123 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v23 = MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v142 = (char *)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = a2;
  uint64_t v126 = 8 * v8;
  if (v8 == 1)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v25 = sub_24558E028();
  }
  else
  {
    MEMORY[0x270FA5388](v23);
    if (v8)
    {
      unint64_t v26 = v146[4] & 0xFFFFFFFFFFFFFFFELL;
      unint64_t v27 = v146[7] & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v28 = (uint64_t *)((char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v29 = v8;
      do
      {
        v26 += 8;
        v27 += 8;
        swift_getAssociatedTypeWitness();
        *v28++ = sub_24558E028();
        --v29;
      }
      while (v29);
    }
    uint64_t v25 = swift_getTupleTypeMetadata();
    a2 = v146;
    uint64_t v9 = v126;
  }
  uint64_t v131 = &v119;
  uint64_t v135 = v25;
  uint64_t v122 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v141 = (char *)&v119 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_24558DCB8();
  uint64_t v130 = &v119;
  v144 = (void *)v31;
  uint64_t v143 = *(void *)(v31 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v133 = (char *)&v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = &v119;
  uint64_t v138 = (void (**)(char *, uint64_t))a2[3];
  unint64_t v137 = (char *)*(v138 - 1);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v119 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = &v119;
  MEMORY[0x270FA5388](v34);
  unint64_t v148 = v8;
  if (v8)
  {
    unint64_t v37 = v146[4] & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v38 = v146[7] & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v39 = (uint64_t *)((char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v40 = v148;
    do
    {
      v37 += 8;
      v38 += 8;
      *v39++ = swift_getAssociatedTypeWitness();
      --v40;
    }
    while (v40);
  }
  unint64_t v41 = v148;
  uint64_t v42 = sub_24558DB88();
  uint64_t v125 = sub_24558ECE8();
  uint64_t v124 = *(void *)(v125 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v125);
  unint64_t v45 = (char *)&v119 - v44;
  uint64_t v127 = &v119;
  uint64_t v46 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v48 = (char *)&v119 - v47;
  sub_24558DEA8();
  uint64_t v49 = v133;
  sub_24558DCC8();
  uint64_t v50 = v147;
  uint64_t v51 = v138;
  sub_24558DCD8();
  if (v50)
  {

    (*(void (**)(char *, void *))(v143 + 8))(v49, v144);
    (*((void (**)(char *, void))v137 + 1))(v36, v51);
    uint64_t v52 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v45, 1, 1, v42);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v45, v125);
    sub_2454F2B70();
    swift_allocError();
    *(unsigned char *)uint64_t v53 = 1;
    *(void *)(v53 + 8) = 0xD0000000000000A6;
    *(void *)(v53 + 16) = 0x8000000245594D60;
    swift_willThrow();
    return v52;
  }
  uint64_t v147 = 0;
  (*(void (**)(char *, void *))(v143 + 8))(v49, v144);
  (*((void (**)(char *, void))v137 + 1))(v36, v51);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v45, 0, 1, v42);
  uint64_t v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 32))(v48, v45, v42);
  uint64_t v55 = v126;
  MEMORY[0x270FA5388](v54);
  uint64_t v121 = v42;
  uint64_t v120 = v46;
  uint64_t v119 = v48;
  uint64_t v133 = v56;
  if (!v41)
  {
    sub_24558DB78();
    sub_24558DEB8();
    uint64_t v86 = v140;
    unint64_t v60 = v141;
LABEL_53:
    uint64_t v112 = v121;
    long long v113 = v119;
    sub_24558DB68();
    uint64_t v114 = v155;
    uint64_t v52 = v156;
    __swift_project_boxed_opaque_existential_0Tm(&v153, v155);
    long long v115 = v147;
    id v116 = sub_2454CB060(v86, v114, *(void *)(v52 + 8));
    if (!v115) {
      uint64_t v52 = (uint64_t)v116;
    }
    (*(void (**)(char *, uint64_t))(v120 + 8))(v113, v112);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v153);
    (*(void (**)(char *, uint64_t))(v123 + 8))(v142, v136);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v60, v135);
    return v52;
  }
  uint64_t v57 = 0;
  uint64_t v58 = 32;
  uint64_t v59 = v135;
  unint64_t v60 = v141;
  uint64_t v61 = v146;
  do
  {
    if (v41 == 1) {
      int v62 = 0;
    }
    else {
      int v62 = *(_DWORD *)(v59 + v58);
    }
    *(char **)((char *)&(&v119)[v57++] - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0)) = &v60[v62];
    v58 += 16;
  }
  while (v41 != v57);
  uint64_t v63 = sub_24558DB78();
  MEMORY[0x270FA5388](v63);
  uint64_t v64 = 0;
  uint64_t v65 = 32;
  uint64_t v66 = v136;
  uint64_t v67 = v142;
  do
  {
    if (v41 == 1) {
      int v68 = 0;
    }
    else {
      int v68 = *(_DWORD *)(v66 + v65);
    }
    *(char **)((char *)&(&v119)[v64++] - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0)) = &v67[v68];
    v65 += 16;
  }
  while (v41 != v64);
  sub_24558DEB8();
  uint64_t v69 = (uint64_t *)(v61[4] & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v70 = (uint64_t *)(v61[7] & 0xFFFFFFFFFFFFFFFELL);
  unint64_t v137 = &v154;
  uint64_t v143 = v134 + 16;
  uint64_t v138 = (void (**)(char *, uint64_t))(v134 + 8);
  uint64_t v71 = 32;
  unint64_t v72 = v41;
  while (1)
  {
    unint64_t v145 = v72;
    if (v41 == 1) {
      int v74 = 0;
    }
    else {
      int v74 = *(_DWORD *)(v135 + v71);
    }
    uint64_t v146 = v69;
    uint64_t v75 = *v69;
    uint64_t v76 = *v70;
    uint64_t v77 = &v60[v74];
    swift_getAssociatedTypeWitness();
    uint64_t v78 = sub_24558E028();
    v144 = &v119;
    uint64_t v79 = *(void *)(v78 - 8);
    MEMORY[0x270FA5388](v78);
    int v81 = (char *)&v119 - v80;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))((char *)&v119 - v80, v77, v78);
    sub_24558E018();
    uint64_t v82 = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v81, v78);
    uint64_t v83 = *(void *)(v75 - 8);
    MEMORY[0x270FA5388](v82);
    uint64_t v85 = (char *)&v119 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v83 + 16))(v85);
    uint64_t v86 = v140;
    uint64_t v87 = v147;
    id v88 = sub_2454CAF48(v140, v75, v76);
    uint64_t v147 = v87;
    if (v87)
    {
      uint64_t v118 = *(void (**)(char *, uint64_t))(v83 + 8);
      uint64_t v52 = v83 + 8;
      v118(v85, v75);
      (*v138)(v150, v139);
      (*(void (**)(char *, uint64_t))(v120 + 8))(v119, v121);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v142, v136);
      (*(void (**)(char *, uint64_t))(v122 + 8))(v141, v135);
      return v52;
    }
    id v89 = v88;
    (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v75);
    uint64_t v90 = v137;
    *((void *)v137 + 6) = 0;
    *((_OWORD *)v90 + 1) = 0u;
    *((_OWORD *)v90 + 2) = 0u;
    *(_OWORD *)uint64_t v90 = 0u;
    id v153 = v89;
    uint64_t v91 = *(void (**)(uint64_t, char *, uint64_t))v143;
    uint64_t v92 = (uint64_t)v149;
    uint64_t v93 = v139;
    (*(void (**)(char *, char *, uint64_t))v143)(v149, v150, v139);
    sub_2454CBEE8((uint64_t)&v153, (uint64_t)v152);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v151 = (void *)v86[1];
    id v95 = v151;
    v86[1] = 0x8000000000000000;
    unint64_t v97 = sub_2454A279C(v92);
    uint64_t v98 = v95[2];
    BOOL v99 = (v96 & 1) == 0;
    uint64_t v100 = v98 + v99;
    if (__OFADD__(v98, v99)) {
      break;
    }
    char v101 = v96;
    if (v95[3] >= v100)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v104 = v151;
        if (v96) {
          goto LABEL_35;
        }
      }
      else
      {
        sub_24552488C();
        unint64_t v104 = v151;
        if (v101) {
          goto LABEL_35;
        }
      }
    }
    else
    {
      sub_2454E4EB8(v100, isUniquelyReferenced_nonNull_native);
      unint64_t v102 = sub_2454A279C((uint64_t)v149);
      if ((v101 & 1) != (v103 & 1)) {
        goto LABEL_60;
      }
      unint64_t v97 = v102;
      unint64_t v104 = v151;
      if (v101)
      {
LABEL_35:
        sub_24550AD94((uint64_t)v152, v104[7] + (v97 << 6));
        goto LABEL_36;
      }
    }
    v104[(v97 >> 6) + 8] |= 1 << v97;
    v91(v104[6] + *(void *)(v134 + 72) * v97, v149, v93);
    uint64_t v105 = (_OWORD *)(v104[7] + (v97 << 6));
    long long v106 = v152[0];
    long long v107 = v152[1];
    long long v108 = v152[3];
    v105[2] = v152[2];
    v105[3] = v108;
    *uint64_t v105 = v106;
    v105[1] = v107;
    uint64_t v109 = v104[2];
    BOOL v110 = __OFADD__(v109, 1);
    uint64_t v111 = v109 + 1;
    if (v110) {
      goto LABEL_59;
    }
    v104[2] = v111;
    unint64_t v104 = v151;
LABEL_36:
    v86[1] = (uint64_t)v104;
    swift_bridgeObjectRelease();
    uint64_t v73 = *v138;
    (*v138)(v149, v93);
    v73(v150, v93);
    sub_2454CBE58((uint64_t)&v153);
    v71 += 16;
    ++v70;
    uint64_t v69 = v146 + 1;
    unint64_t v72 = v145 - 1;
    unint64_t v41 = v148;
    unint64_t v60 = v141;
    if (v145 == 1) {
      goto LABEL_53;
    }
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t sub_24555DEDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t result = sub_24555CD58(a1, a2);
  if (v2) {
    return v4;
  }
  return result;
}

_OWORD *sub_24555DF00(uint64_t *a1, void *a2)
{
  uint64_t result = sub_2454CFD70(a1, a2, MEMORY[0x263F06B00], MEMORY[0x263F06B08], (SEL *)&selRef_orPredicateWithSubpredicates_);
  if (v2) {
    return (_OWORD *)v4;
  }
  return result;
}

uint64_t sub_24555DF54(uint64_t *a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v44 = a1;
  uint64_t v39 = a2[3];
  uint64_t v38 = *(void *)(v39 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  unint64_t v37 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v4);
  id v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24558DE88();
  unint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v35 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v34 - v18;
  sub_24558DD08();
  unint64_t v40 = v15;
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v19, v14);
  if (v20 == *MEMORY[0x263F06B78])
  {
    unint64_t v40 = 0xE700000000000000;
    uint64_t v21 = 0x3A6F743A646461;
LABEL_5:
    uint64_t v36 = v21;
    goto LABEL_8;
  }
  if (v20 == *MEMORY[0x263F06B88])
  {
    unint64_t v40 = 0xEE003A7463617274;
    uint64_t v21 = 0x6275733A6D6F7266;
    goto LABEL_5;
  }
  if (v20 != *MEMORY[0x263F06B80])
  {
    (*(void (**)(uint64_t, uint64_t, void *))(v34 + 16))(v36, v2, v3);
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v33 = v35;
    sub_24558DD08();
    sub_24558F0E8();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v14);
    uint64_t result = sub_24558F1A8();
    __break(1u);
    return result;
  }
  unint64_t v40 = 0xEC0000003A79623ALL;
  uint64_t v36 = 0x796C7069746C756DLL;
LABEL_8:
  uint64_t v22 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3680);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_245599550;
  sub_24558DD18();
  uint64_t v24 = v41;
  id v25 = sub_2454CAF48(v22, v7, v3[4]);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (v24)
  {
    swift_bridgeObjectRelease();
    *(void *)(v23 + 16) = 0;
    swift_release();
  }
  else
  {
    uint64_t v26 = sub_2454C8408(0, &qword_268EE3DF8);
    *(void *)(v23 + 56) = v26;
    *(void *)(v23 + 32) = v25;
    unint64_t v27 = v37;
    sub_24558DD28();
    uint64_t v28 = v39;
    id v30 = sub_2454CAF48(v22, v39, v3[5]);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v28);
    *(void *)(v23 + 88) = v26;
    *(void *)(v23 + 64) = v30;
    uint64_t v31 = (void *)sub_24558E5A8();
    swift_bridgeObjectRelease();
    uint64_t v32 = (void *)sub_24558E7B8();
    swift_bridgeObjectRelease();
    uint64_t v3 = objc_msgSend(self, sel_expressionForFunction_arguments_, v31, v32);
  }
  return (uint64_t)v3;
}

uint64_t sub_24555E520(uint64_t *a1, void *a2)
{
  uint64_t result = sub_24555DF54(a1, a2);
  if (v2) {
    return v4;
  }
  return result;
}

char *sub_24555E544(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3680);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_245599550;
  sub_24558DD68();
  uint64_t v10 = v8;
  id v11 = sub_2454CAF48(a1, v5, *(void *)(a2 + 24));
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v9 + 16) = 0;
    swift_release();
  }
  else
  {
    id v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = sub_2454C8408(0, &qword_268EE3DF8);
    *(void *)(v9 + 56) = v13;
    *(void *)(v9 + 32) = v12;
    v20[1] = -1;
    uint64_t v14 = sub_24558F728();
    unint64_t v15 = self;
    id v16 = objc_msgSend(v15, sel_expressionForConstantValue_, v14);
    swift_unknownObjectRelease();
    *(void *)(v9 + 88) = v13;
    *(void *)(v9 + 64) = v16;
    uint64_t v17 = (void *)sub_24558E5A8();
    uint64_t v18 = (void *)sub_24558E7B8();
    swift_bridgeObjectRelease();
    uint64_t v10 = (char *)objc_msgSend(v15, sel_expressionForFunction_arguments_, v17, v18);
  }
  return v10;
}

char *sub_24555E78C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = sub_24555E544(a1, a2);
  if (v2) {
    return (char *)v4;
  }
  return result;
}

uint64_t sub_24555E7B0(uint64_t *a1, void *a2)
{
  uint64_t v42 = a1;
  uint64_t v37 = *(void *)(a2[3] - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v36 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v4);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v34 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24558DE98();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v33 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v32 - v18;
  sub_24558DD38();
  uint64_t v35 = v15;
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v19, v14);
  uint64_t v21 = 0;
  if (v20 != *MEMORY[0x263F06BA8])
  {
    if (v20 == *MEMORY[0x263F06B98])
    {
      uint64_t v21 = 1;
    }
    else if (v20 == *MEMORY[0x263F06B90])
    {
      uint64_t v21 = 2;
    }
    else
    {
      if (v20 != *MEMORY[0x263F06BA0])
      {
        (*(void (**)(char *, uint64_t, void *))(v32 + 16))(v34, v2, a2);
        uint64_t v40 = 0;
        unint64_t v41 = 0xE000000000000000;
        sub_24558EF78();
        sub_24558E668();
        uint64_t v31 = v33;
        sub_24558DD38();
        sub_24558F0E8();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v14);
        uint64_t result = sub_24558F1A8();
        __break(1u);
        return result;
      }
      uint64_t v21 = 3;
    }
  }
  uint64_t v35 = v21;
  sub_24558DD48();
  uint64_t v22 = v42;
  uint64_t v23 = v11;
  uint64_t v24 = v39;
  id v25 = sub_2454CAF48(v42, v7, a2[4]);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (!v24)
  {
    uint64_t v26 = v36;
    sub_24558DD58();
    uint64_t v27 = v38;
    id v28 = sub_2454CAF48(v22, v38, a2[5]);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v27);
    id v30 = objc_allocWithZone(MEMORY[0x263F08720]);
    uint64_t v23 = (char *)objc_msgSend(v30, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v25, v28, 0, v35, 0);
  }
  return (uint64_t)v23;
}

uint64_t sub_24555EC64(uint64_t *a1, void *a2)
{
  uint64_t result = sub_24555E7B0(a1, a2);
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t *sub_24555EC88(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = a2[2];
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24558E008();
  id v9 = sub_2454C8330(a1, v5, v3[3]);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v2)
  {
    uint64_t v3 = (uint64_t *)objc_msgSend(self, sel_notPredicateWithSubpredicate_, v9);
  }
  return v3;
}

uint64_t *sub_24555EDC0(uint64_t *a1, uint64_t *a2)
{
  uint64_t result = sub_24555EC88(a1, a2);
  if (v2) {
    return (uint64_t *)v4;
  }
  return result;
}

id sub_24555EDE4(uint64_t *a1, void *a2)
{
  uint64_t v36 = a1;
  uint64_t v32 = a2[3];
  uint64_t v30 = *(void *)(v32 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v31 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v34 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24558DD78();
  uint64_t v8 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a2[4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24558E028();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v29 - v13;
  sub_24558DFA8();
  sub_24558E018();
  uint64_t v15 = v14;
  uint64_t v16 = v34;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t v17 = v36;
  v29[1] = sub_24555B68C((uint64_t)v10);
  id v19 = v18;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v35);
  sub_24558DF98();
  id v20 = v38;
  id v21 = sub_2454CAF48(v17, v6, v33);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v21;
    id v38 = v19;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v6);
    uint64_t v23 = v31;
    sub_24558DF88();
    uint64_t v24 = v17;
    uint64_t v25 = v32;
    id v27 = sub_2454C8330(v24, v32, a2[5]);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v25);
    id v28 = (void *)sub_24558E5A8();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(self, sel_expressionForSubquery_usingIteratorVariable_predicate_, v22, v28, v27);
  }
  return v19;
}

id sub_24555F228(uint64_t *a1, void *a2)
{
  id result = sub_24555EDE4(a1, a2);
  if (v2) {
    return (id)v4;
  }
  return result;
}

id sub_24555F24C(uint64_t *a1, void *a2)
{
  uint64_t v28 = a2[3];
  uint64_t v25 = *(void *)(v28 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3680);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_245599550;
  uint64_t v26 = v2;
  MEMORY[0x2456A0850](a2);
  uint64_t v15 = a2[4];
  id v27 = a1;
  id v16 = sub_2454CAF48(a1, v10, v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v3)
  {
    *(void *)(v14 + 16) = 0;
    swift_release();
  }
  else
  {
    uint64_t v17 = v25;
    uint64_t v18 = sub_2454C8408(0, &qword_268EE3DF8);
    *(void *)(v14 + 56) = v18;
    *(void *)(v14 + 32) = v16;
    MEMORY[0x2456A0860](a2);
    uint64_t v19 = v28;
    id v21 = sub_2454CAF48(v27, v28, a2[5]);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v19);
    *(void *)(v14 + 88) = v18;
    *(void *)(v14 + 64) = v21;
    uint64_t v22 = (void *)sub_24558E5A8();
    uint64_t v23 = (void *)sub_24558E7B8();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(self, sel_expressionForFunction_arguments_, v22, v23);
  }
  return v16;
}

id sub_24555F528(uint64_t *a1, void *a2)
{
  id result = sub_24555F24C(a1, a2);
  if (v2) {
    return (id)v4;
  }
  return result;
}

id sub_24555F54C(uint64_t *a1, void *a2)
{
  uint64_t v25 = a2[3];
  uint64_t v22 = *(void *)(v25 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B0D9D20);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24559AB50;
  uint64_t v23 = v2;
  MEMORY[0x2456A07D0](a2);
  uint64_t v15 = a2[4];
  uint64_t v24 = a1;
  id v16 = sub_2454CAF48(a1, v10, v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v3)
  {
    *(void *)(v14 + 16) = 0;
    swift_release();
  }
  else
  {
    *(void *)(v14 + 32) = v16;
    uint64_t v17 = v22;
    MEMORY[0x2456A07E0](a2);
    uint64_t v18 = v25;
    id v20 = sub_2454CAF48(v24, v25, a2[5]);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
    *(void *)(v14 + 40) = v20;
    uint64_t v26 = v14;
    sub_24558E7E8();
    sub_2454C8408(0, &qword_268EE3DF8);
    id v21 = (void *)sub_24558E7B8();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(self, sel_expressionForAggregate_, v21);
  }
  return v16;
}

id sub_24555F7F0(uint64_t *a1, void *a2)
{
  id result = sub_24555F54C(a1, a2);
  if (v2) {
    return (id)v4;
  }
  return result;
}

uint64_t sub_24555F814@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  a2[3] = *(void *)(a1 + 16);
  a2[4] = v3;
  __swift_allocate_boxed_opaque_existential_0Tm(a2);
  return MEMORY[0x2456A09A0](a1);
}

uint64_t sub_24555F854@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 40);
  a2[3] = *(void *)(a1 + 24);
  a2[4] = v3;
  __swift_allocate_boxed_opaque_existential_0Tm(a2);
  return MEMORY[0x2456A09B0](a1);
}

uint64_t sub_24555F89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v61 = sub_24558F108();
  uint64_t v56 = *(void *)(v61 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v61);
  uint64_t v57 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v60 = (char *)&v55 - v7;
  uint64_t v65 = sub_24558F238();
  uint64_t v58 = *(void *)(v65 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v65);
  uint64_t v59 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)&v55 - v10;
  uint64_t v69 = sub_24558F0F8();
  uint64_t v62 = *(void *)(v69 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v69);
  uint64_t v63 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int v68 = (char *)&v55 - v13;
  uint64_t v14 = sub_24558E548();
  uint64_t v66 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v67 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v55 - v17;
  uint64_t v19 = sub_24558EB18();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v55 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (uint64_t *)((char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = v29;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v29 + 16))(v28, v70, a1);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v26, v19);
    uint64_t v70 = v28;
    uint64_t v30 = v71;
    *(void *)(v71 + 24) = AssociatedTypeWitness;
    *(void *)(v30 + 32) = AssociatedConformanceWitness;
    boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v30);
    uint64_t v32 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
    v32(boxed_opaque_existential_0Tm, v23, AssociatedTypeWitness);
    uint64_t v33 = &v23[*(int *)(v19 + 36)];
    *(void *)(v30 + 64) = AssociatedTypeWitness;
    *(void *)(v30 + 72) = AssociatedConformanceWitness;
    uint64_t v34 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(v30 + 40));
    v32(v34, v33, AssociatedTypeWitness);
    *(unsigned char *)(v30 + 80) = 0;
    uint64_t v28 = v70;
  }
  else
  {
    uint64_t v35 = v71;
    if (swift_dynamicCast())
    {
      uint64_t v36 = v67;
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v67, v18, v14);
      uint64_t v70 = (uint64_t *)(v35 + 40);
      *(void *)(v35 + 24) = AssociatedTypeWitness;
      *(void *)(v35 + 32) = AssociatedConformanceWitness;
      uint64_t v37 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v35);
      id v38 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
      v38(v37, v36, AssociatedTypeWitness);
      uint64_t v39 = &v36[*(int *)(v14 + 36)];
      *(void *)(v35 + 64) = AssociatedTypeWitness;
      *(void *)(v35 + 72) = AssociatedConformanceWitness;
      uint64_t v40 = __swift_allocate_boxed_opaque_existential_0Tm(v70);
      v38(v40, v39, AssociatedTypeWitness);
      char v41 = 1;
    }
    else
    {
      unint64_t v43 = v68;
      uint64_t v42 = v69;
      if (swift_dynamicCast())
      {
        uint64_t v44 = v63;
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v63, v43, v42);
        *(void *)(v35 + 24) = AssociatedTypeWitness;
        *(void *)(v35 + 32) = AssociatedConformanceWitness;
        unint64_t v45 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v35);
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v45, v44, AssociatedTypeWitness);
        char v41 = 2;
      }
      else
      {
        uint64_t v47 = v64;
        uint64_t v46 = v65;
        if (swift_dynamicCast())
        {
          uint64_t v48 = v59;
          (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v59, v47, v46);
          *(void *)(v35 + 24) = AssociatedTypeWitness;
          *(void *)(v35 + 32) = AssociatedConformanceWitness;
          uint64_t v49 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v35);
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v49, v48, AssociatedTypeWitness);
          char v41 = 3;
        }
        else
        {
          uint64_t v51 = v60;
          uint64_t v50 = v61;
          if (swift_dynamicCast())
          {
            uint64_t v52 = v57;
            (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v57, v51, v50);
            *(void *)(v35 + 24) = AssociatedTypeWitness;
            *(void *)(v35 + 32) = AssociatedConformanceWitness;
            uint64_t v53 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v35);
            (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v53, v52, AssociatedTypeWitness);
            char v41 = 4;
          }
          else
          {
            *(_OWORD *)(v35 + 48) = 0u;
            *(_OWORD *)(v35 + 64) = 0u;
            *(_OWORD *)(v35 + 16) = 0u;
            *(_OWORD *)(v35 + 32) = 0u;
            *(_OWORD *)uint64_t v35 = 0u;
            char v41 = -1;
          }
        }
      }
    }
    *(unsigned char *)(v35 + 80) = v41;
  }
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v72 + 8))(v28, a1);
}

uint64_t sub_245560024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x2456A09C0](v5);
  sub_24555F89C(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_245560100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_245560024(a1, a2);
}

char *sub_245560108(uint64_t *a1, void *a2)
{
  uint64_t v32 = a2[2];
  uint64_t v29 = *(void *)(v32 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  void v27[3] = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v31 = (char *)v27 - v11;
  uint64_t v13 = *(void *)(v12 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v2;
  MEMORY[0x2456A0980](v17);
  uint64_t v18 = a2[5];
  uint64_t v28 = a1;
  uint64_t v19 = v16;
  id v20 = v33;
  id v21 = sub_2454CAF48(a1, v13, v18);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    v27[2] = v9;
    id v33 = v21;
    uint64_t v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v27[1] = v13;
    v23(v16, v13);
    MEMORY[0x2456A0970](a2);
    id v24 = sub_2454CAF48(v28, v32, a2[4]);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v32);
    id v25 = objc_allocWithZone(MEMORY[0x263F08720]);
    uint64_t v26 = v33;
    uint64_t v19 = (char *)objc_msgSend(v25, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v33, v24, 0, 100, 0);
  }
  return v19;
}

char *sub_245560DE4(uint64_t *a1, void *a2)
{
  id result = sub_245560108(a1, a2);
  if (v2) {
    return (char *)v4;
  }
  return result;
}

uint64_t *sub_245560E08(uint64_t *a1, void *a2)
{
  uint64_t v39 = a1;
  uint64_t v35 = a2[3];
  uint64_t v33 = *(void *)(v35 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *(void *)(v5 + 16);
  uint64_t v40 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_24558DD78();
  uint64_t v8 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a2[4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24558E028();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - v13;
  sub_24558DEE8();
  sub_24558E018();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v15 = v39;
  uint64_t v16 = sub_24555B68C((uint64_t)v10);
  uint64_t v17 = v10;
  uint64_t v18 = v36;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v38);
  MEMORY[0x2456A0950](a2);
  id v19 = v41;
  id v20 = sub_2454CAF48(v15, v18, v37);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = v16;
    id v41 = v20;
    uint64_t v21 = v33;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v18);
    uint64_t v22 = v34;
    MEMORY[0x2456A0940](a2);
    uint64_t v23 = v35;
    id v25 = sub_2454C8330(v15, v35, a2[5]);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    uint64_t v26 = (void *)sub_24558E5A8();
    swift_bridgeObjectRelease();
    uint64_t v27 = self;
    uint64_t v28 = v41;
    id v29 = objc_msgSend(v27, sel_expressionForSubquery_usingIteratorVariable_predicate_, v41, v26, v25);

    id v30 = sub_24555B83C();
    uint64_t v42 = 0;
    id v31 = objc_msgSend(v27, sel_expressionForConstantValue_, sub_24558F728());
    swift_unknownObjectRelease();
    uint64_t v15 = (uint64_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v30, v31, 0, 5, 0);
  }
  return v15;
}

uint64_t *sub_2455612E4(uint64_t *a1, void *a2)
{
  id result = sub_245560E08(a1, a2);
  if (v2) {
    return (uint64_t *)v4;
  }
  return result;
}

id sub_245561308(uint64_t *a1, void *a2)
{
  uint64_t v44 = a1;
  uint64_t v3 = a2[2];
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)(v6 + 24);
  uint64_t v46 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_24558DD78();
  uint64_t v9 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a2[4];
  uint64_t v41 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24558E028();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - v14;
  sub_24558DEE8();
  sub_24558E018();
  uint64_t v16 = v15;
  uint64_t v17 = v44;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v18 = v43;
  uint64_t v37 = sub_24555B68C((uint64_t)v11);
  id v20 = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v42);
  MEMORY[0x2456A0910](a2);
  id v21 = v45;
  id v22 = sub_2454C8330(v17, v18, a2[5]);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = v22;
    id v45 = v20;
    uint64_t v24 = v39;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v18);
    id v25 = objc_msgSend(self, sel_notPredicateWithSubpredicate_, v23);

    uint64_t v26 = v40;
    MEMORY[0x2456A0920](a2);
    uint64_t v27 = v17;
    uint64_t v28 = v41;
    id v30 = sub_2454CAF48(v27, v41, v38);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v28);
    id v31 = v25;
    uint64_t v32 = (void *)sub_24558E5A8();
    swift_bridgeObjectRelease();
    uint64_t v33 = self;
    id v34 = objc_msgSend(v33, sel_expressionForSubquery_usingIteratorVariable_predicate_, v30, v32, v31);

    id v35 = sub_24555B83C();
    uint64_t v47 = 0;
    id v36 = objc_msgSend(v33, sel_expressionForConstantValue_, sub_24558F728());
    swift_unknownObjectRelease();
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v35, v36, 0, 4, 0);
  }
  return v20;
}

id sub_245561814(uint64_t *a1, void *a2)
{
  id result = sub_245561308(a1, a2);
  if (v2) {
    return (id)v4;
  }
  return result;
}

id sub_245561838(uint64_t *a1, uint64_t a2)
{
  id result = sub_245561880(a1, a2, MEMORY[0x263F06B48], (id)0x6C65732E78616D40);
  if (v2) {
    return (id)v4;
  }
  return result;
}

id sub_245561880(uint64_t *a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v12);
  id v14 = sub_2454CAF48(a1, v8, *(void *)(a2 + 24));
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v4)
  {
    a4 = sub_24555B83C();
  }
  return a4;
}

id sub_2455619AC(uint64_t *a1, uint64_t a2)
{
  id result = sub_245561880(a1, a2, MEMORY[0x263F06B58], (id)0x6C65732E6E696D40);
  if (v2) {
    return (id)v4;
  }
  return result;
}

void *sub_2455619F4(uint64_t *a1, void *a2)
{
  uint64_t v32 = a2[4];
  uint64_t v31 = *(void *)(v32 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *(void **)(v13 + 16);
  uint64_t v15 = *(v14 - 1);
  MEMORY[0x270FA5388](v10);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v2;
  sub_24558DDC8();
  uint64_t v18 = a2[5];
  id v34 = a1;
  id v19 = v36;
  id v20 = sub_2454C8330(a1, (uint64_t)v14, v18);
  (*(void (**)(char *, void *))(v15 + 8))(v17, v14);
  if (!v19)
  {
    id v36 = v20;
    uint64_t v21 = v31;
    uint64_t v22 = v32;
    sub_24558DDA8();
    uint64_t v23 = v34;
    id v24 = sub_2454CAF48(v34, v9, a2[6]);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v9);
    id v25 = v24;
    sub_24558DDB8();
    id v26 = sub_2454CAF48(v23, v22, a2[7]);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
    uint64_t v28 = self;
    id v29 = v36;
    id v14 = objc_msgSend(v28, sel_expressionForConditional_trueExpression_falseExpression_, v36, v25, v26);
  }
  return v14;
}

void *sub_245561CF4(uint64_t *a1, void *a2)
{
  id result = sub_2455619F4(a1, a2);
  if (v2) {
    return (void *)v4;
  }
  return result;
}

id sub_245561D18(uint64_t *a1, void *a2)
{
  uint64_t v27 = a2[3];
  uint64_t v29 = *(void *)(v27 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x2456A0820](v13);
  uint64_t v14 = a2[4];
  uint64_t v28 = a1;
  id v15 = sub_2454CAF48(a1, v9, v14);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  id v16 = (id)(v10 + 8);
  v17(v12, v9);
  if (!v2)
  {
    uint64_t v18 = v15;
    sub_24558DDE8();
    uint64_t v19 = v27;
    id v20 = sub_2454CAF48(v28, v27, a2[5]);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v19);
    uint64_t v22 = self;
    id v23 = v18;
    id v24 = objc_msgSend(v22, sel_expressionForConstantValue_, 0);
    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v23, v24, 0, 5, 0);

    id v26 = v25;
    id v16 = objc_msgSend(v22, sel_expressionForConditional_trueExpression_falseExpression_, v26, v23, v20);
  }
  return v16;
}

id sub_245561FB0(uint64_t *a1, void *a2)
{
  id result = sub_245561D18(a1, a2);
  if (v2) {
    return (id)v4;
  }
  return result;
}

id sub_245561FD4(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_245562294(a1, a2, a3, MEMORY[0x263F06A58], MEMORY[0x263F06A60], 99);
}

id sub_245562018(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v31 = a6;
  uint64_t v10 = a2[3];
  uint64_t v28 = a7;
  uint64_t v29 = v10;
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20(v19);
  uint64_t v21 = a2[4];
  uint64_t v30 = a1;
  id v22 = sub_2454CAF48(a1, v15, v21);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (!v7)
  {
    id v23 = v22;
    uint64_t v24 = v28;
    v31(a2);
    uint64_t v25 = v29;
    id v26 = sub_2454CAF48(v30, v29, a2[5]);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v25);
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v22, v26, 0, v24, 0);
  }
  return v22;
}

id sub_245562250(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_245562294(a1, a2, a3, MEMORY[0x263F06BC0], MEMORY[0x263F06BC8], 8);
}

id sub_245562294(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  id result = sub_245562018(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16), a4, a5, a6);
  if (v6) {
    return (id)v8;
  }
  return result;
}

uint64_t sub_2455622CC(uint64_t a1)
{
  type metadata accessor for ComparisonResult(0);
  void v12[3] = v3;
  v12[0] = a1;
  sub_2454CF1C0(v12, (uint64_t)v13);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  if (!v1)
  {
    uint64_t v5 = v14;
    if (v14)
    {
      uint64_t v6 = __swift_project_boxed_opaque_existential_0Tm(v13, v14);
      uint64_t v7 = *(void *)(v5 - 8);
      MEMORY[0x270FA5388](v6);
      uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      uint64_t v10 = sub_24558F588();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v11 = objc_msgSend(self, sel_expressionForConstantValue_, v10);
    swift_unknownObjectRelease();
    return (uint64_t)v11;
  }
  return result;
}

id sub_245562450(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v12 = (id)a5;
  id v15 = sub_2454CAF48(a3, a5, a7);
  if (!v8)
  {
    uint64_t v29 = v15;
    id v16 = sub_2454CAF48(a3, a6, a8);
    id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v29, v16, 0, 4, a4);

    id v18 = sub_2454CAF48(a3, (uint64_t)v12, a7);
    id v19 = sub_2454CAF48(a3, a6, a8);
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v18, v19, 0, 0, a4);

    uint64_t v21 = (void *)sub_2455622CC(-1);
    id v22 = (void *)sub_2455622CC(1);
    id v23 = self;
    id v24 = v20;
    id v25 = objc_msgSend(v23, sel_expressionForConditional_trueExpression_falseExpression_, v24, v21, v22);

    id v26 = (void *)sub_2455622CC(0);
    id v27 = v28;
    id v12 = objc_msgSend(v23, sel_expressionForConditional_trueExpression_falseExpression_, v27, v26, v25);
  }
  return v12;
}

void (*sub_2455626E4(uint64_t *a1, void *a2))(void *)
{
  uint64_t result = sub_245562734(a1, a2, MEMORY[0x263F06C18], MEMORY[0x263F06C20], 1);
  if (v2) {
    return (void (*)(void *))v4;
  }
  return result;
}

void (*sub_245562734(uint64_t *a1, void *a2, uint64_t a3, void (*a4)(void *), uint64_t a5))(void *)
{
  id v22 = a1;
  uint64_t v23 = a5;
  uint64_t v7 = a2[3];
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v9);
  id v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18(v17);
  a4(a2);
  uint64_t v19 = v24;
  id v20 = (void (*)(void *))sub_245562450((uint64_t)v16, (uint64_t)v11, v22, v23, v13, v7, a2[4], a2[5]);
  if (!v19) {
    a4 = v20;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return a4;
}

void (*sub_245562928(uint64_t *a1, void *a2))(void *)
{
  uint64_t result = sub_245562734(a1, a2, MEMORY[0x263F06BF0], MEMORY[0x263F06BF8], 8);
  if (v2) {
    return (void (*)(void *))v4;
  }
  return result;
}

char *sub_245562978(uint64_t *a1, void *a2)
{
  uint64_t result = sub_2454C8444(a1, a2, MEMORY[0x263F06C30], MEMORY[0x263F06C38], 99, 11);
  if (v2) {
    return (char *)v4;
  }
  return result;
}

id sub_2455629CC(void *a1, void *a2)
{
  uint64_t v4 = a1[3];
  if (!v4)
  {
    uint64_t v10 = 0;
    uint64_t v11 = a2[3];
    if (v11) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  uint64_t v6 = __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  uint64_t v7 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = sub_24558F588();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  uint64_t v11 = a2[3];
  if (!v11) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v12 = __swift_project_boxed_opaque_existential_0Tm(a2, v11);
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  uint64_t v16 = sub_24558F588();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a2);
LABEL_6:
  id v17 = objc_msgSend(v2, sel_initWithOperand_andKeyPath_, v10, v16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_245562BFC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562C38(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562C74(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562CB0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562CEC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562D28(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562D64(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562DA0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562DDC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562E18(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562E54(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562E90(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562ECC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562F08(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562F44(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562F80(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562FBC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245562FF8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245563034(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245563070(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2455630AC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2455630E8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_245563124(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *sub_245563160(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24558E228();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_24558ECE8();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = a3[11];
    uint64_t v15 = a3[12];
    uint64_t v16 = (char *)a1 + v14;
    id v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v18 = a3[14];
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    uint64_t v19 = a3[16];
    *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *sub_245563354(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)uint64_t v13 = v15;
  uint64_t v16 = a3[11];
  id v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)id v17 = v19;
  a1[a3[12]] = a2[a3[12]];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[15]] = a2[a3[15]];
  a1[a3[16]] = a2[a3[16]];
  return a1;
}

char *sub_245563588(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)int v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = a3[11];
  uint64_t v13 = a3[12];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  a1[v13] = a2[v13];
  uint64_t v16 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  uint64_t v17 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  a1[v17] = a2[v17];
  return a1;
}

char *sub_245563718(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24558E228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_24558ECE8();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = a3[11];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  v14[8] = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  uint64_t v16 = &a1[v13];
  uint64_t v17 = &a2[v13];
  v16[8] = v17[8];
  *(void *)uint64_t v16 = *(void *)v17;
  uint64_t v18 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  a1[v19] = a2[v19];
  return a1;
}

uint64_t sub_245563928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24558E228();
  uint64_t v6 = sub_24558ECE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_2455639F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_24558E228();
  uint64_t result = sub_24558ECE8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t sub_245563ABC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  *(unsigned char *)(a2 + 80) = *(unsigned char *)(a1 + 80);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 32) = v3;
  return a2;
}

uint64_t sub_245563AE4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_245563B1C(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *long long v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_24558F1C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x2456A1A50](v7, v9, a2 & 1, v5);
  *long long v2 = result;
  return result;
}

uint64_t sub_245563BDC(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v2 = a2;
  uint64_t v3 = result;
  unint64_t v4 = a2 >> 62;
  if (a2 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24558F1C8();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v12 = v11 - v3;
    if (__OFSUB__(v11, v3))
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24558F1C8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v14 < 0)
    {
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= (v12 & ~(v12 >> 63)) || v13 <= -1) {
      uint64_t v16 = v12 & ~(v12 >> 63);
    }
    else {
      uint64_t v16 = v13;
    }
    if (v12 >= 1) {
      uint64_t v7 = v16;
    }
    else {
      uint64_t v7 = v12 & ~(v12 >> 63);
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24558F1C8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17 >= v7) {
      goto LABEL_10;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5 >= ((v5 - result) & ~((uint64_t)(v5 - result) >> 63))) {
    uint64_t v6 = (v5 - result) & ~((uint64_t)(v5 - result) >> 63);
  }
  else {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((uint64_t)(v5 - result) >= 1) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = (v5 - result) & ~((uint64_t)(v5 - result) >> 63);
  }
  if ((uint64_t)v5 < v7) {
    goto LABEL_31;
  }
LABEL_10:
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_24558EDD8();
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = v8 + 1;
      sub_24558EFD8();
      uint64_t v8 = v9;
    }
    while (v7 != v9);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24558F1D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v10;
}

uint64_t sub_245563DA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1[3];
  uint64_t v9 = __swift_project_boxed_opaque_existential_0Tm(a1, v8);
  void v19[3] = v8;
  boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm(v19);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0Tm, v9, v8);
  sub_2454CD190(v19, a2, a3, a4, &v20);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
  if (!v4)
  {
    uint64_t v12 = v21;
    if (v21)
    {
      uint64_t v13 = __swift_project_boxed_opaque_existential_0Tm(&v20, v21);
      uint64_t v14 = *(void *)(v12 - 8);
      MEMORY[0x270FA5388](v13);
      uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v14 + 16))(v16);
      uint64_t v17 = sub_24558F588();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v20);
    }
    else
    {
      uint64_t v17 = 0;
    }
    id v18 = objc_msgSend(self, sel_expressionForConstantValue_, v17);
    swift_unknownObjectRelease();
    return (uint64_t)v18;
  }
  return result;
}

uint64_t sub_245563F74(uint64_t a1)
{
  return a1;
}

unint64_t sub_245563FA4()
{
  unint64_t result = qword_268EE3E30;
  if (!qword_268EE3E30)
  {
    sub_2454C8408(255, &qword_268EE3DF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3E30);
  }
  return result;
}

id sub_24556400C(id result, char a2)
{
  if (a2 != -1) {
    return result;
  }
  return result;
}

void sub_245564020(id a1, char a2)
{
  if (a2 != -1) {
}
  }

uint64_t sub_245564034(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24556404C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_245564064(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_24556404C(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_245564078(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_245564034(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_24556408C()
{
  unint64_t result = qword_268EE3E38;
  if (!qword_268EE3E38)
  {
    sub_24558E598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3E38);
  }
  return result;
}

uint64_t destroy for SuffixOperation(uint64_t a1)
{
  return sub_24556404C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s9SwiftData15SuffixOperationOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_245564034(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SuffixOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_245564034(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24556404C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SuffixOperation(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24556404C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SuffixOperation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SuffixOperation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_245564288(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2455642A4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SuffixOperation()
{
  return &type metadata for SuffixOperation;
}

uint64_t destroy for AnyRange(uint64_t a1)
{
  uint64_t v1 = a1;
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 >= 5) {
    unsigned int v2 = *(_DWORD *)a1 + 5;
  }
  if (v2 <= 1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    v1 += 40;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v1);
}

uint64_t initializeWithCopy for AnyRange(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 80);
  if (v4 >= 5) {
    unsigned int v4 = *(_DWORD *)a2 + 5;
  }
  switch(v4)
  {
    case 1u:
      long long v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
      long long v9 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 64) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40);
      char v7 = 1;
      break;
    case 2u:
      long long v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1, a2);
      char v7 = 2;
      break;
    case 3u:
      long long v11 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
      char v7 = 3;
      break;
    case 4u:
      long long v12 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v12;
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1, a2);
      char v7 = 4;
      break;
    default:
      long long v5 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v5;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      long long v6 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 64) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
      char v7 = 0;
      break;
  }
  *(unsigned char *)(a1 + 80) = v7;
  return a1;
}

uint64_t assignWithCopy for AnyRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 80);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
      a1 = v2 + 40;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    unsigned int v5 = *(unsigned __int8 *)(a2 + 80);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 1u:
        uint64_t v9 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v9;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v2, a2);
        uint64_t v10 = *(void *)(a2 + 64);
        *(void *)(v2 + 64) = v10;
        *(void *)(v2 + 72) = *(void *)(a2 + 72);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v2 + 40, a2 + 40);
        char v8 = 1;
        break;
      case 2u:
        uint64_t v11 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v11;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v2, a2);
        char v8 = 2;
        break;
      case 3u:
        uint64_t v12 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v12;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v2, a2);
        char v8 = 3;
        break;
      case 4u:
        uint64_t v13 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v13;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v2, a2);
        char v8 = 4;
        break;
      default:
        uint64_t v6 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v6;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v2, a2);
        uint64_t v7 = *(void *)(a2 + 64);
        *(void *)(v2 + 64) = v7;
        *(void *)(v2 + 72) = *(void *)(a2 + 72);
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v2 + 40, a2 + 40);
        char v8 = 0;
        break;
    }
    *(unsigned char *)(v2 + 80) = v8;
  }
  return v2;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AnyRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 80);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
      a1 = v2 + 40;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    unsigned int v5 = *(unsigned __int8 *)(a2 + 80);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 1u:
        long long v9 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(v2 + 48) = v9;
        *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
        long long v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v10;
        char v6 = 1;
        break;
      case 2u:
        long long v11 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v11;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        char v6 = 2;
        break;
      case 3u:
        long long v12 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v12;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        char v6 = 3;
        break;
      case 4u:
        long long v13 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v13;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        char v6 = 4;
        break;
      default:
        char v6 = 0;
        long long v7 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(v2 + 48) = v7;
        *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v8;
        break;
    }
    *(unsigned char *)(v2 + 80) = v6;
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for AnyRange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 >= 5) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnyRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_245564A28(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 80);
  if (result >= 5) {
    return (*(_DWORD *)a1 + 5);
  }
  return result;
}

uint64_t sub_245564A48(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyRange()
{
  return &type metadata for AnyRange;
}

uint64_t initializeBufferWithCopyOfBuffer for VariableMapping(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t assignWithCopy for VariableMapping(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  unsigned int v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  long long v7 = (_OWORD *)(a1 + 8);
  long long v8 = (long long *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v9)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2454C9EE4(a1 + 8);
      long long v11 = *(_OWORD *)(a2 + 24);
      long long v10 = *(_OWORD *)(a2 + 40);
      long long v12 = *v8;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v11;
      *(_OWORD *)(a1 + 40) = v10;
      *long long v7 = v12;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 8, a2 + 8);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *v8;
    long long v14 = *(_OWORD *)(a2 + 24);
    long long v15 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v14;
    *(_OWORD *)(a1 + 40) = v15;
    *long long v7 = v13;
  }
  return a1;
}

uint64_t assignWithTake for VariableMapping(uint64_t a1, void *a2)
{
  unsigned int v4 = a2 + 1;
  unsigned int v5 = *(void **)a1;
  *(void *)a1 = *a2;

  id v6 = (_OWORD *)(a1 + 8);
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  if (!a2[4])
  {
    sub_2454C9EE4(a1 + 8);
LABEL_5:
    long long v8 = *((_OWORD *)v4 + 1);
    *id v6 = *(_OWORD *)v4;
    *(_OWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 40) = *((_OWORD *)v4 + 2);
    *(void *)(a1 + 56) = v4[6];
    return a1;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 8);
  long long v7 = *((_OWORD *)v4 + 1);
  *id v6 = *(_OWORD *)v4;
  *(_OWORD *)(a1 + 24) = v7;
  *(void *)(a1 + 40) = v4[4];
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VariableMapping(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VariableMapping(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t *assignWithCopy for KeyPathParserResult(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for KeyPathParserResult(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t Schema.Entity.properties.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_245497C88(v2, (uint64_t (*)(void))sub_2454AF610, &qword_26B0DA128);
  return v1;
}

uint64_t sub_245564EB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8 = a4 >> 1;
  uint64_t v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_11;
  }
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v9;
  if (!__OFADD__(v10, v9)) {
    goto LABEL_4;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  uint64_t v13 = 1;
LABEL_16:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24558F1C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v16 <= v11) {
    uint64_t v16 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = MEMORY[0x2456A1A50](v13, v16, 1, v7);
  swift_bridgeObjectRelease();
  *long long v4 = v7;
  uint64_t v14 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_24558F1C8();
      swift_bridgeObjectRelease();
      uint64_t v11 = v15 + v9;
      if (__OFADD__(v15, v9)) {
        goto LABEL_14;
      }
LABEL_4:
      unint64_t v7 = *v4;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *long long v4 = v7;
      uint64_t v13 = 0;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v7 & 0x8000000000000000) != 0
        || (v7 & 0x4000000000000000) != 0)
      {
        goto LABEL_16;
      }
      uint64_t v14 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_15;
      }
      if (v8 != v5) {
        goto LABEL_21;
      }
    }
    goto LABEL_28;
  }
LABEL_21:
  uint64_t v17 = *(void *)(v14 + 16);
  if ((*(void *)(v14 + 24) >> 1) - v17 < v9)
  {
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    uint64_t result = sub_24558F228();
    __break(1u);
    return result;
  }
  if (v9 < 0) {
    goto LABEL_34;
  }
  unint64_t v18 = v14 + 8 * v17 + 32;
  unint64_t v19 = v6 + 8 * v5;
  if (v19 < v18 + 8 * v9 && v18 < v19 + 8 * v9) {
    goto LABEL_34;
  }
  sub_24558EDD8();
  swift_arrayInitWithCopy();
  if (v9)
  {
    uint64_t v20 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v9);
    uint64_t v22 = v20 + v9;
    if (!v21)
    {
      *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
      goto LABEL_28;
    }
    goto LABEL_33;
  }
LABEL_28:
  swift_unknownObjectRelease();

  return sub_24558E7E8();
}

uint64_t sub_245565140(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  long long v3 = sub_245503980(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3810);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_2455652B8(uint64_t a1)
{
  return sub_245497C88(a1, (uint64_t (*)(void))sub_2455035C0, &qword_268EE3830);
}

uint64_t sub_2455652D8(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24558EE48();
    type metadata accessor for Schema.Attribute();
    sub_2454B01E0(&qword_26B0DA170, 255, (void (*)(uint64_t))type metadata accessor for Schema.Attribute);
    sub_24558E9F8();
    uint64_t v2 = v40;
    uint64_t v38 = v41;
    uint64_t v4 = v42;
    uint64_t v5 = v43;
    unint64_t v6 = v44;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v38 = a2 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    uint64_t v5 = 0;
  }
  int64_t v37 = (unint64_t)(v4 + 64) >> 6;
  for (i = v2; ; uint64_t v2 = i)
  {
    if (v2 < 0)
    {
      if (!sub_24558EEC8()) {
        goto LABEL_44;
      }
      type metadata accessor for Schema.Attribute();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      int64_t v15 = v45;
      swift_unknownObjectRelease();
      uint64_t v14 = v5;
      uint64_t v12 = v6;
      if (!v45) {
        goto LABEL_44;
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v12 = (v6 - 1) & v6;
        unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
        uint64_t v14 = v5;
      }
      else
      {
        int64_t v16 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_47;
        }
        if (v16 >= v37) {
          goto LABEL_44;
        }
        unint64_t v17 = *(void *)(v38 + 8 * v16);
        uint64_t v14 = v5 + 1;
        if (!v17)
        {
          uint64_t v14 = v5 + 2;
          if (v5 + 2 >= v37) {
            goto LABEL_44;
          }
          unint64_t v17 = *(void *)(v38 + 8 * v14);
          if (!v17)
          {
            uint64_t v14 = v5 + 3;
            if (v5 + 3 >= v37) {
              goto LABEL_44;
            }
            unint64_t v17 = *(void *)(v38 + 8 * v14);
            if (!v17)
            {
              uint64_t v14 = v5 + 4;
              if (v5 + 4 >= v37) {
                goto LABEL_44;
              }
              unint64_t v17 = *(void *)(v38 + 8 * v14);
              if (!v17)
              {
                uint64_t v14 = v5 + 5;
                if (v5 + 5 >= v37) {
                  goto LABEL_44;
                }
                unint64_t v17 = *(void *)(v38 + 8 * v14);
                if (!v17)
                {
                  uint64_t v18 = v5 + 6;
                  while (v37 != v18)
                  {
                    unint64_t v17 = *(void *)(v38 + 8 * v18++);
                    if (v17)
                    {
                      uint64_t v14 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_44:
                  sub_2454C1C20();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        uint64_t v12 = (v17 - 1) & v17;
        unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
      }
      int64_t v15 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
      swift_retain();
      if (!v15) {
        goto LABEL_44;
      }
    }
    swift_beginAccess();
    uint64_t v20 = v15[2];
    uint64_t v19 = v15[3];
    swift_bridgeObjectRetain();
    swift_retain();
    BOOL v21 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v45 = a1;
    unint64_t v24 = sub_2454A0B40(v20, v19);
    uint64_t v25 = a1[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      break;
    }
    char v28 = v23;
    if (v21[3] >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v31 = v45;
        if (v23) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_245523CB8();
        uint64_t v31 = v45;
        if (v28) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_2455046DC(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_2454A0B40(v20, v19);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_48;
      }
      unint64_t v24 = v29;
      uint64_t v31 = v45;
      if (v28)
      {
LABEL_8:
        a1 = v31;
        uint64_t v11 = v31[7];
        swift_release();
        *(void *)(v11 + 8 * v24) = v15;
        goto LABEL_9;
      }
    }
    v31[(v24 >> 6) + 8] |= 1 << v24;
    uint64_t v32 = (uint64_t *)(v31[6] + 16 * v24);
    *uint64_t v32 = v20;
    v32[1] = v19;
    *(void *)(v31[7] + 8 * v24) = v15;
    uint64_t v33 = v31[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_46;
    }
    a1 = v31;
    v31[2] = v35;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v14;
    unint64_t v6 = v12;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t sub_245565720(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24558EE48();
    type metadata accessor for Schema.Relationship();
    sub_2454B01E0((unint64_t *)&qword_26B0D8D10, 255, (void (*)(uint64_t))type metadata accessor for Schema.Relationship);
    sub_24558E9F8();
    uint64_t v2 = v40;
    uint64_t v38 = v41;
    uint64_t v4 = v42;
    uint64_t v5 = v43;
    unint64_t v6 = v44;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v38 = a2 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    uint64_t v5 = 0;
  }
  int64_t v37 = (unint64_t)(v4 + 64) >> 6;
  for (i = v2; ; uint64_t v2 = i)
  {
    if (v2 < 0)
    {
      if (!sub_24558EEC8()) {
        goto LABEL_44;
      }
      type metadata accessor for Schema.Relationship();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      int64_t v15 = v45;
      swift_unknownObjectRelease();
      uint64_t v14 = v5;
      uint64_t v12 = v6;
      if (!v45) {
        goto LABEL_44;
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v12 = (v6 - 1) & v6;
        unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
        uint64_t v14 = v5;
      }
      else
      {
        int64_t v16 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_47;
        }
        if (v16 >= v37) {
          goto LABEL_44;
        }
        unint64_t v17 = *(void *)(v38 + 8 * v16);
        uint64_t v14 = v5 + 1;
        if (!v17)
        {
          uint64_t v14 = v5 + 2;
          if (v5 + 2 >= v37) {
            goto LABEL_44;
          }
          unint64_t v17 = *(void *)(v38 + 8 * v14);
          if (!v17)
          {
            uint64_t v14 = v5 + 3;
            if (v5 + 3 >= v37) {
              goto LABEL_44;
            }
            unint64_t v17 = *(void *)(v38 + 8 * v14);
            if (!v17)
            {
              uint64_t v14 = v5 + 4;
              if (v5 + 4 >= v37) {
                goto LABEL_44;
              }
              unint64_t v17 = *(void *)(v38 + 8 * v14);
              if (!v17)
              {
                uint64_t v14 = v5 + 5;
                if (v5 + 5 >= v37) {
                  goto LABEL_44;
                }
                unint64_t v17 = *(void *)(v38 + 8 * v14);
                if (!v17)
                {
                  uint64_t v18 = v5 + 6;
                  while (v37 != v18)
                  {
                    unint64_t v17 = *(void *)(v38 + 8 * v18++);
                    if (v17)
                    {
                      uint64_t v14 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_44:
                  sub_2454C1C20();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        uint64_t v12 = (v17 - 1) & v17;
        unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
      }
      int64_t v15 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
      swift_retain();
      if (!v15) {
        goto LABEL_44;
      }
    }
    swift_beginAccess();
    uint64_t v20 = v15[2];
    uint64_t v19 = v15[3];
    swift_bridgeObjectRetain();
    swift_retain();
    BOOL v21 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v45 = a1;
    unint64_t v24 = sub_2454A0B40(v20, v19);
    uint64_t v25 = a1[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      break;
    }
    char v28 = v23;
    if (v21[3] >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v31 = v45;
        if (v23) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_245523CAC();
        uint64_t v31 = v45;
        if (v28) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_2455046D0(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_2454A0B40(v20, v19);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_48;
      }
      unint64_t v24 = v29;
      uint64_t v31 = v45;
      if (v28)
      {
LABEL_8:
        a1 = v31;
        uint64_t v11 = v31[7];
        swift_release();
        *(void *)(v11 + 8 * v24) = v15;
        goto LABEL_9;
      }
    }
    v31[(v24 >> 6) + 8] |= 1 << v24;
    uint64_t v32 = (uint64_t *)(v31[6] + 16 * v24);
    *uint64_t v32 = v20;
    v32[1] = v19;
    *(void *)(v31[7] + 8 * v24) = v15;
    uint64_t v33 = v31[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_46;
    }
    a1 = v31;
    v31[2] = v35;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v14;
    unint64_t v6 = v12;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t Schema.Entity.superentity.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  swift_retain();
  swift_release();
  sub_245566934();
  return swift_release();
}

uint64_t Schema.Entity.debugDescription.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA220);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_245597630;
  unint64_t v2 = 0xE000000000000000;
  sub_24558EF78();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = 0x2D20797469746E45;
  *(void *)(v1 + 40) = 0xEF203A656D616E20;
  sub_24558EF78();
  swift_bridgeObjectRelease();
  uint64_t v68 = 0x6572657075732020;
  unint64_t v69 = 0xEF203A797469746ELL;
  swift_beginAccess();
  uint64_t v63 = v0;
  uint64_t v3 = v0[7];
  if (v3)
  {
    swift_beginAccess();
    unint64_t v2 = *(void *)(v3 + 24);
    swift_bridgeObjectRetain();
  }
  sub_24558E668();
  swift_bridgeObjectRelease();
  unint64_t v4 = v69;
  *(void *)(v1 + 48) = v68;
  *(void *)(v1 + 56) = v4;
  strcpy((char *)(v1 + 64), "  subentities:");
  *(unsigned char *)(v1 + 79) = -18;
  swift_beginAccess();
  uint64_t v5 = v63[4];
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    int64_t v6 = sub_24558EE48();
    sub_2454B01E0(&qword_268EE3E40, v7, (void (*)(uint64_t))type metadata accessor for Schema.Entity);
    sub_24558E9F8();
    uint64_t v5 = v68;
    unint64_t v65 = v69;
    int64_t v8 = v70;
    uint64_t v9 = v71;
    unint64_t v10 = v72;
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v65 = v5 + 56;
    int64_t v6 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v10 = v13 & *(void *)(v5 + 56);
    swift_bridgeObjectRetain();
    int64_t v8 = v6;
    uint64_t v9 = 0;
  }
  int64_t v64 = (unint64_t)(v8 + 64) >> 6;
  unint64_t v14 = MEMORY[0x263F8EE50] + 8;
  if (v5 < 0) {
    goto LABEL_12;
  }
  while (1)
  {
    if (v10)
    {
      uint64_t v15 = (v10 - 1) & v10;
      unint64_t v16 = __clz(__rbit64(v10)) | (v9 << 6);
      uint64_t v17 = v9;
      goto LABEL_29;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_67;
    }
    if (v20 >= v64) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v65 + 8 * v20);
    uint64_t v17 = v9 + 1;
    if (!v21)
    {
      uint64_t v17 = v9 + 2;
      if (v9 + 2 >= v64) {
        goto LABEL_34;
      }
      unint64_t v21 = *(void *)(v65 + 8 * v17);
      if (!v21)
      {
        uint64_t v17 = v9 + 3;
        if (v9 + 3 >= v64) {
          goto LABEL_34;
        }
        unint64_t v21 = *(void *)(v65 + 8 * v17);
        if (!v21)
        {
          uint64_t v17 = v9 + 4;
          if (v9 + 4 >= v64) {
            goto LABEL_34;
          }
          unint64_t v21 = *(void *)(v65 + 8 * v17);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_28:
    uint64_t v15 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_29:
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    swift_retain();
    if (!v19) {
      goto LABEL_34;
    }
    while (1)
    {
      v66[0] = 0;
      v66[1] = 0xE000000000000000;
      sub_24558E668();
      uint64_t v67 = v19;
      sub_24558F0E8();
      unint64_t v2 = *(void *)(v1 + 16);
      unint64_t v23 = *(void *)(v1 + 24);
      int64_t v6 = v2 + 1;
      if (v2 >= v23 >> 1) {
        uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v23 > 1), v2 + 1, 1, (void *)v1);
      }
      *(void *)(v1 + 16) = v6;
      unint64_t v24 = v1 + 16 * v2;
      *(void *)(v24 + 32) = 0;
      *(void *)(v24 + 40) = 0xE000000000000000;
      swift_release();
      uint64_t v9 = v17;
      unint64_t v10 = v15;
      if ((v5 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_12:
      uint64_t v18 = sub_24558EEC8();
      if (v18)
      {
        uint64_t v67 = v18;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v19 = v66[0];
        swift_unknownObjectRelease();
        uint64_t v17 = v9;
        uint64_t v15 = v10;
        if (v66[0]) {
          continue;
        }
      }
      goto LABEL_34;
    }
  }
  uint64_t v22 = v9 + 5;
  while (v64 != v22)
  {
    unint64_t v21 = *(void *)(v65 + 8 * v22++);
    if (v21)
    {
      uint64_t v17 = v22 - 1;
      goto LABEL_28;
    }
  }
LABEL_34:
  sub_2454C1C20();
  unint64_t v2 = *(void *)(v1 + 16);
  unint64_t v14 = *(void *)(v1 + 24);
  int64_t v6 = v2 + 1;
  if (v2 < v14 >> 1) {
    goto LABEL_35;
  }
LABEL_67:
  uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v14 > 1), v6, 1, (void *)v1);
LABEL_35:
  *(void *)(v1 + 16) = v6;
  unint64_t v25 = v1 + 16 * v2;
  *(void *)(v25 + 32) = 0xD000000000000013;
  *(void *)(v25 + 40) = 0x8000000245595010;
  swift_beginAccess();
  uint64_t v26 = v63[8];
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    uint64_t v28 = v26 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_2454AFE04(v28, (uint64_t)v66);
      sub_24558E668();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA128);
      sub_24558F0E8();
      unint64_t v30 = *(void *)(v1 + 16);
      unint64_t v29 = *(void *)(v1 + 24);
      if (v30 >= v29 >> 1) {
        uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v29 > 1), v30 + 1, 1, (void *)v1);
      }
      *(void *)(v1 + 16) = v30 + 1;
      uint64_t v31 = v1 + 16 * v30;
      *(void *)(v31 + 32) = 0;
      *(void *)(v31 + 40) = 0xE000000000000000;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      v28 += 40;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  unint64_t v33 = *(void *)(v1 + 16);
  unint64_t v32 = *(void *)(v1 + 24);
  if (v33 >= v32 >> 1) {
    uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v32 > 1), v33 + 1, 1, (void *)v1);
  }
  *(void *)(v1 + 16) = v33 + 1;
  uint64_t v34 = v1 + 16 * v33;
  *(void *)(v34 + 32) = 0xD000000000000016;
  *(void *)(v34 + 40) = 0x8000000245595030;
  swift_beginAccess();
  uint64_t v35 = v63[9];
  uint64_t v36 = *(void *)(v35 + 16);
  if (v36)
  {
    uint64_t v37 = v35 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_2454AFE04(v37, (uint64_t)v66);
      sub_24558E668();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA128);
      sub_24558F0E8();
      unint64_t v39 = *(void *)(v1 + 16);
      unint64_t v38 = *(void *)(v1 + 24);
      if (v39 >= v38 >> 1) {
        uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v38 > 1), v39 + 1, 1, (void *)v1);
      }
      *(void *)(v1 + 16) = v39 + 1;
      uint64_t v40 = v1 + 16 * v39;
      *(void *)(v40 + 32) = 0;
      *(void *)(v40 + 40) = 0xE000000000000000;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      v37 += 40;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
  }
  unint64_t v42 = *(void *)(v1 + 16);
  unint64_t v41 = *(void *)(v1 + 24);
  if (v42 >= v41 >> 1) {
    uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v41 > 1), v42 + 1, 1, (void *)v1);
  }
  *(void *)(v1 + 16) = v42 + 1;
  uint64_t v43 = v1 + 16 * v42;
  *(void *)(v43 + 32) = 0xD000000000000018;
  *(void *)(v43 + 40) = 0x8000000245595050;
  swift_beginAccess();
  uint64_t v44 = *(void *)(v63[20] + 16);
  if (v44)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = 0;
    uint64_t v46 = MEMORY[0x263F8D310];
    do
    {
      uint64_t v47 = swift_bridgeObjectRetain();
      MEMORY[0x2456A1220](v47, v46);
      sub_24558E668();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v49 = *(void *)(v1 + 16);
      unint64_t v48 = *(void *)(v1 + 24);
      if (v49 >= v48 >> 1) {
        uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v48 > 1), v49 + 1, 1, (void *)v1);
      }
      ++v45;
      *(void *)(v1 + 16) = v49 + 1;
      uint64_t v50 = v1 + 16 * v49;
      *(void *)(v50 + 32) = 538976288;
      *(void *)(v50 + 40) = 0xE400000000000000;
    }
    while (v44 != v45);
    swift_bridgeObjectRelease();
  }
  unint64_t v52 = *(void *)(v1 + 16);
  unint64_t v51 = *(void *)(v1 + 24);
  if (v52 >= v51 >> 1) {
    uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v51 > 1), v52 + 1, 1, (void *)v1);
  }
  *(void *)(v1 + 16) = v52 + 1;
  uint64_t v53 = v1 + 16 * v52;
  *(void *)(v53 + 32) = 0x656369646E692020;
  *(void *)(v53 + 40) = 0xEA00000000003A73;
  swift_beginAccess();
  uint64_t v54 = *(void *)(v63[21] + 16);
  if (v54)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = 0;
    uint64_t v56 = MEMORY[0x263F8D310];
    do
    {
      uint64_t v57 = swift_bridgeObjectRetain();
      MEMORY[0x2456A1220](v57, v56);
      sub_24558E668();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v59 = *(void *)(v1 + 16);
      unint64_t v58 = *(void *)(v1 + 24);
      if (v59 >= v58 >> 1) {
        uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v58 > 1), v59 + 1, 1, (void *)v1);
      }
      ++v55;
      *(void *)(v1 + 16) = v59 + 1;
      uint64_t v60 = v1 + 16 * v59;
      *(void *)(v60 + 32) = 538976288;
      *(void *)(v60 + 40) = 0xE400000000000000;
    }
    while (v54 != v55);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9F58);
  sub_24556C248((unint64_t *)&qword_268EE3668, &qword_26B0D9F58);
  uint64_t v61 = sub_24558E4E8();
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t Schema.Entity.name.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Entity.name.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.name.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t Schema.Entity.subentities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.subentities.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.subentities.modify())()
{
  return j_j__swift_endAccess_0_1;
}

uint64_t Schema.Entity.superentityName.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Entity.superentityName.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.superentityName.modify())()
{
  return j_j__swift_endAccess_0_0;
}

uint64_t Schema.Entity.superentity.getter()
{
  return swift_retain();
}

uint64_t sub_2455668C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 56) = v2;
  swift_retain_n();
  swift_release();
  sub_245566934();
  return swift_release();
}

uint64_t sub_245566934()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 56);
  swift_beginAccess();
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    swift_beginAccess();
    uint64_t v4 = *(void *)(v2 + 72);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245497C88(v4, (uint64_t (*)(void))sub_2454AF610, &qword_26B0DA128);
    swift_beginAccess();
    *(void *)(v1 + 72) = v3;
    swift_bridgeObjectRelease();
    sub_245566D0C();
    return swift_release();
  }
  else
  {
    *(void *)(v0 + 72) = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    return sub_245566D0C();
  }
}

uint64_t Schema.Entity.inheritedProperties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  swift_bridgeObjectRelease();
  return sub_245566D0C();
}

uint64_t (*Schema.Entity.superentity.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_245566B00;
}

uint64_t sub_245566B00(uint64_t a1, char a2)
{
  return sub_245566FD4(a1, a2, (uint64_t (*)(uint64_t))sub_245566934);
}

uint64_t Schema.Entity.storedProperties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_245566B50(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 64) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_2454AFBAC();
}

uint64_t Schema.Entity.storedProperties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  swift_bridgeObjectRelease();
  return sub_2454AFBAC();
}

uint64_t (*Schema.Entity.storedProperties.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_245566C58;
}

uint64_t sub_245566C58(uint64_t a1, char a2)
{
  return sub_245566FD4(a1, a2, (uint64_t (*)(uint64_t))sub_2454AFBAC);
}

uint64_t Schema.Entity.inheritedProperties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_245566CA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 72) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_245566D0C();
}

uint64_t sub_245566D0C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v25 = v0;
  if (!v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)MEMORY[0x263F8EE80];
LABEL_17:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v25 + 120) = v4;
    return swift_bridgeObjectRelease();
  }
  uint64_t v3 = v1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    sub_2454AFE04(v3, (uint64_t)v27);
    uint64_t v6 = v28;
    uint64_t v7 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    uint64_t v10 = v9;
    sub_2454AFE04((uint64_t)v27, (uint64_t)v26);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = sub_2454A0B40(v8, v10);
    uint64_t v14 = v4[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v4[3] >= v16)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v12) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_245523AC0();
        if (v17) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_2454AFE80(v16, isUniquelyReferenced_nonNull_native);
      unint64_t v18 = sub_2454A0B40(v8, v10);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_20;
      }
      unint64_t v13 = v18;
      if (v17)
      {
LABEL_3:
        uint64_t v5 = v4[7] + 40 * v13;
        __swift_destroy_boxed_opaque_existential_1(v5);
        sub_2454AFE68(v26, v5);
        goto LABEL_4;
      }
    }
    v4[(v13 >> 6) + 8] |= 1 << v13;
    int64_t v20 = (uint64_t *)(v4[6] + 16 * v13);
    *int64_t v20 = v8;
    v20[1] = v10;
    sub_2454AFE68(v26, v4[7] + 40 * v13);
    uint64_t v21 = v4[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_19;
    }
    v4[2] = v23;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    v3 += 40;
    if (!--v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t (*Schema.Entity.inheritedProperties.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_245566FBC;
}

uint64_t sub_245566FBC(uint64_t a1, char a2)
{
  return sub_245566FD4(a1, a2, (uint64_t (*)(uint64_t))sub_245566D0C);
}

uint64_t sub_245566FD4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t Schema.Entity.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.attributes.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.attributes.modify())()
{
  return j__swift_endAccess_0;
}

uint64_t Schema.Entity.relationships.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.relationships.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.relationships.modify())()
{
  return j_j__swift_endAccess_0_2;
}

uint64_t Schema.Entity.attributesByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.attributesByName.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.attributesByName.modify())()
{
  return j_j__swift_endAccess_0_3;
}

uint64_t Schema.Entity.relationshipsByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.relationshipsByName.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 104) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.relationshipsByName.modify())()
{
  return j_j__swift_endAccess_0_4;
}

uint64_t Schema.Entity.storedPropertiesByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.storedPropertiesByName.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.storedPropertiesByName.modify())()
{
  return j_j__swift_endAccess_0_5;
}

uint64_t Schema.Entity.inheritedPropertiesByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.inheritedPropertiesByName.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.inheritedPropertiesByName.modify())()
{
  return j_j__swift_endAccess_0_6;
}

uint64_t Schema.Entity.uniquenessConstraints.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.uniquenessConstraints.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 160) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.uniquenessConstraints.modify())()
{
  return j_j__swift_endAccess_0_7;
}

uint64_t Schema.Entity.indices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.indices.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 168) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.indices.modify())()
{
  return j_j__swift_endAccess_0_8;
}

BOOL sub_2455676BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2455676D0()
{
  return sub_24558F818();
}

uint64_t sub_245567718()
{
  return sub_24558F7E8();
}

uint64_t sub_245567744()
{
  return sub_24558F818();
}

uint64_t sub_245567788()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7469746E65627573;
      break;
    case 2:
      uint64_t result = 0x746E657265707573;
      break;
    case 3:
      uint64_t result = 0x7475626972747461;
      break;
    case 4:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_245567850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24556AC30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245567878()
{
  return 0;
}

void sub_245567884(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_245567890(uint64_t a1)
{
  unint64_t v2 = sub_24556B5C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2455678CC(uint64_t a1)
{
  unint64_t v2 = sub_24556B5C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Schema.Entity.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  Schema.Entity.init(_:)(a1, a2);
  return v4;
}

uint64_t Schema.Entity.__allocating_init(_:subentities:properties:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  Schema.Entity.init(_:subentities:properties:)(a1, a2, a3, a4);
  return v8;
}

uint64_t Schema.Entity.init(_:subentities:properties:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  v4[22] = 0;
  v4[6] = 0;
  v4[7] = 0;
  v4[5] = 0;
  *((_OWORD *)v4 + 8) = 0u;
  *((_OWORD *)v4 + 9) = 0u;
  v4[2] = a1;
  void v4[3] = a2;
  uint64_t v6 = sub_24556B458(a3);
  uint64_t v7 = a4;
  swift_bridgeObjectRelease();
  v4[4] = v6;
  uint64_t v8 = MEMORY[0x263F8EE88];
  v4[8] = a4;
  uint64_t v61 = v8;
  uint64_t v62 = v8;
  uint64_t v9 = *(void *)(a4 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (!v9)
  {
    v4[10] = v8;
    v4[11] = v8;
    v4[20] = v10;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = (void *)MEMORY[0x263F8EE80];
    uint64_t v49 = v8;
LABEL_41:
    swift_bridgeObjectRelease();
    v4[14] = v29;
    swift_bridgeObjectRetain();
    uint64_t v50 = (void *)MEMORY[0x263F8EE80];
    uint64_t v51 = sub_2455652D8(MEMORY[0x263F8EE80], v49);
    swift_bridgeObjectRelease();
    v4[12] = v51;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_245565720(v50, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v4[13] = v52;
    v4[9] = v10;
    v4[15] = sub_2454B5E7C(v10);
    v4[21] = v10;
    return (uint64_t)v4;
  }
  uint64_t v54 = v4;
  uint64_t v11 = a4 + 32;
  swift_bridgeObjectRetain_n();
  unint64_t v12 = 0;
  unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  uint64_t v55 = v7;
  while (v12 < *(void *)(v7 + 16))
  {
    sub_2454AFE04(v11 + 40 * v12, (uint64_t)v58);
    sub_2454AFE04((uint64_t)v58, (uint64_t)v57);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA128);
    type metadata accessor for Schema.Attribute();
    if (swift_dynamicCast())
    {
      uint64_t v14 = v56;
      swift_retain();
      sub_2454B0290(v57, (void *)v56);
      swift_release();
      swift_beginAccess();
      uint64_t v15 = *(void *)(v56 + 48);
      uint64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        char v17 = (unsigned char *)(v15 + 64);
        while ((*v17 & 1) == 0)
        {
          v17 += 40;
          if (!--v16) {
            goto LABEL_3;
          }
        }
LABEL_20:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA220);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_245597620;
        swift_beginAccess();
        uint64_t v22 = *(void *)(v14 + 24);
        *(void *)(v21 + 32) = *(void *)(v14 + 16);
        *(void *)(v21 + 40) = v22;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_2454C24F0(0, v13[2] + 1, 1, v13);
        }
        uint64_t v23 = v13;
        unint64_t v24 = v13[2];
        uint64_t v25 = v23;
        unint64_t v26 = v23[3];
        if (v24 >= v26 >> 1) {
          uint64_t v25 = sub_2454C24F0((void *)(v26 > 1), v24 + 1, 1, v25);
        }
        _OWORD v25[2] = v24 + 1;
        uint64_t v27 = &v25[v24];
        unint64_t v13 = v25;
        void v27[4] = v21;
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
        uint64_t v7 = v55;
        goto LABEL_4;
      }
    }
    else
    {
      sub_2454AFE04((uint64_t)v58, (uint64_t)v57);
      type metadata accessor for Schema.Relationship();
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_45;
      }
      uint64_t v14 = v56;
      swift_retain();
      sub_2454B0B9C((uint64_t *)v57, v56);
      swift_release();
      swift_beginAccess();
      uint64_t v18 = *(void *)(v56 + 56);
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        int64_t v20 = (unsigned char *)(v18 + 32);
        while ((*v20 & 1) == 0)
        {
          ++v20;
          if (!--v19) {
            goto LABEL_3;
          }
        }
        if (*(unsigned char *)(v56 + 168) == 1) {
          goto LABEL_20;
        }
      }
    }
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    swift_release();
LABEL_4:
    if (++v12 == v9)
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = v61;
      v54[10] = v62;
      v54[11] = v28;
      v54[20] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = (void *)MEMORY[0x263F8EE80];
      while (1)
      {
        sub_2454AFE04(v11, (uint64_t)v58);
        uint64_t v31 = v59;
        uint64_t v32 = v60;
        __swift_project_boxed_opaque_existential_1(v58, v59);
        uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32);
        uint64_t v35 = v34;
        sub_2454AFE04((uint64_t)v58, (uint64_t)v57);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v38 = sub_2454A0B40(v33, v35);
        uint64_t v39 = v29[2];
        BOOL v40 = (v37 & 1) == 0;
        uint64_t v41 = v39 + v40;
        if (__OFADD__(v39, v40)) {
          goto LABEL_43;
        }
        char v42 = v37;
        if (v29[3] >= v41)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v37 & 1) == 0) {
              goto LABEL_35;
            }
          }
          else
          {
            sub_245523AC0();
            if ((v42 & 1) == 0) {
              goto LABEL_35;
            }
          }
        }
        else
        {
          sub_2454AFE80(v41, isUniquelyReferenced_nonNull_native);
          unint64_t v43 = sub_2454A0B40(v33, v35);
          if ((v42 & 1) != (v44 & 1)) {
            goto LABEL_46;
          }
          unint64_t v38 = v43;
          if ((v42 & 1) == 0)
          {
LABEL_35:
            v29[(v38 >> 6) + 8] |= 1 << v38;
            uint64_t v45 = (uint64_t *)(v29[6] + 16 * v38);
            *uint64_t v45 = v33;
            v45[1] = v35;
            sub_2454AFE68(v57, v29[7] + 40 * v38);
            uint64_t v46 = v29[2];
            BOOL v47 = __OFADD__(v46, 1);
            uint64_t v48 = v46 + 1;
            if (v47) {
              goto LABEL_44;
            }
            void v29[2] = v48;
            swift_bridgeObjectRetain();
            goto LABEL_27;
          }
        }
        uint64_t v30 = v29[7] + 40 * v38;
        __swift_destroy_boxed_opaque_existential_1(v30);
        sub_2454AFE68(v57, v30);
LABEL_27:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
        v11 += 40;
        if (!--v9)
        {
          swift_bridgeObjectRelease();
          uint64_t v8 = v61;
          uint64_t v49 = v62;
          uint64_t v4 = v54;
          uint64_t v10 = MEMORY[0x263F8EE78];
          goto LABEL_41;
        }
      }
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  sub_24558F1A8();
  __break(1u);
LABEL_46:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t Schema.Entity.__allocating_init(_:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  Schema.Entity.init(_:properties:)(a1, a2, a3);
  return v6;
}

uint64_t Schema.Entity.init(_:properties:)(uint64_t a1, uint64_t a2, uint64_t isUniquelyReferenced_nonNull_native)
{
  v3[22] = 0;
  v3[6] = 0;
  v3[7] = 0;
  v3[5] = 0;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  v3[2] = a1;
  v3[3] = a2;
  uint64_t v5 = MEMORY[0x263F8EE88];
  uint64_t v6 = (uint64_t *)MEMORY[0x263F8EE78];
  unint64_t v7 = MEMORY[0x263F8EE88];
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0) {
    goto LABEL_46;
  }
  while (1)
  {
    v3[4] = v7;
    v3[8] = isUniquelyReferenced_nonNull_native;
    uint64_t v55 = v5;
    uint64_t v56 = v5;
    uint64_t v8 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
    if (!v8) {
      break;
    }
    uint64_t v48 = v3;
    uint64_t v9 = isUniquelyReferenced_nonNull_native + 32;
    swift_bridgeObjectRetain_n();
    unint64_t v10 = 0;
    uint64_t v5 = MEMORY[0x263F8EE78];
    uint64_t v6 = &qword_26B0DA220;
    uint64_t v49 = isUniquelyReferenced_nonNull_native;
    while (v10 < *(void *)(isUniquelyReferenced_nonNull_native + 16))
    {
      sub_2454AFE04(v9 + 40 * v10, (uint64_t)v52);
      sub_2454AFE04((uint64_t)v52, (uint64_t)v51);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA128);
      type metadata accessor for Schema.Attribute();
      if (swift_dynamicCast())
      {
        uint64_t v11 = (uint64_t)v50;
        swift_retain();
        uint64_t v3 = &v56;
        sub_2454B0290(v51, (void *)v11);
        swift_release();
        swift_beginAccess();
        uint64_t v12 = *(void *)(v11 + 48);
        uint64_t v13 = *(void *)(v12 + 16);
        if (v13)
        {
          uint64_t v14 = (unsigned char *)(v12 + 64);
          while ((*v14 & 1) == 0)
          {
            v14 += 40;
            if (!--v13) {
              goto LABEL_4;
            }
          }
LABEL_21:
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA220);
          uint64_t v3 = (uint64_t *)swift_allocObject();
          *((_OWORD *)v3 + 1) = xmmword_245597620;
          swift_beginAccess();
          uint64_t v18 = *(void *)(v11 + 24);
          v3[4] = *(void *)(v11 + 16);
          v3[5] = v18;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = (uint64_t)sub_2454C24F0(0, *(void *)(v5 + 16) + 1, 1, (void *)v5);
          }
          uint64_t v19 = (void *)v5;
          unint64_t v20 = *(void *)(v5 + 16);
          uint64_t v21 = v19;
          unint64_t v22 = v19[3];
          if (v20 >= v22 >> 1) {
            uint64_t v21 = sub_2454C24F0((void *)(v22 > 1), v20 + 1, 1, v21);
          }
          long long v21[2] = v20 + 1;
          uint64_t v23 = &v21[v20];
          uint64_t v5 = (uint64_t)v21;
          v23[4] = v3;
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
          char isUniquelyReferenced_nonNull_native = v49;
          goto LABEL_5;
        }
      }
      else
      {
        sub_2454AFE04((uint64_t)v52, (uint64_t)v51);
        type metadata accessor for Schema.Relationship();
        if ((swift_dynamicCast() & 1) == 0)
        {
          sub_24558F1A8();
          __break(1u);
LABEL_50:
          uint64_t result = sub_24558F748();
          __break(1u);
          return result;
        }
        uint64_t v11 = (uint64_t)v50;
        swift_retain();
        uint64_t v3 = &v55;
        sub_2454B0B9C((uint64_t *)v51, v11);
        swift_release();
        swift_beginAccess();
        uint64_t v15 = *(void *)(v11 + 56);
        uint64_t v16 = *(void *)(v15 + 16);
        if (v16)
        {
          char v17 = (unsigned char *)(v15 + 32);
          while ((*v17 & 1) == 0)
          {
            ++v17;
            if (!--v16) {
              goto LABEL_4;
            }
          }
          if (*(unsigned char *)(v11 + 168) == 1) {
            goto LABEL_21;
          }
        }
      }
LABEL_4:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      swift_release();
LABEL_5:
      if (++v10 == v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v55;
        v48[10] = v56;
        v48[11] = v24;
        v48[20] = v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v25 = (void *)MEMORY[0x263F8EE80];
        uint64_t v5 = 40;
        while (1)
        {
          sub_2454AFE04(v9, (uint64_t)v52);
          uint64_t v27 = v53;
          uint64_t v28 = v54;
          __swift_project_boxed_opaque_existential_1(v52, v53);
          uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 32))(v27, v28);
          uint64_t v6 = v30;
          sub_2454AFE04((uint64_t)v52, (uint64_t)v51);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v50 = v25;
          uint64_t v3 = v25;
          unint64_t v32 = sub_2454A0B40(v29, (uint64_t)v6);
          uint64_t v33 = v25[2];
          BOOL v34 = (v31 & 1) == 0;
          uint64_t v35 = v33 + v34;
          if (__OFADD__(v33, v34)) {
            goto LABEL_44;
          }
          char v36 = v31;
          if (v25[3] >= v35)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v25 = v50;
              if ((v31 & 1) == 0) {
                goto LABEL_36;
              }
            }
            else
            {
              uint64_t v3 = (uint64_t *)&v50;
              sub_245523AC0();
              uint64_t v25 = v50;
              if ((v36 & 1) == 0) {
                goto LABEL_36;
              }
            }
          }
          else
          {
            sub_2454AFE80(v35, isUniquelyReferenced_nonNull_native);
            uint64_t v3 = v50;
            unint64_t v37 = sub_2454A0B40(v29, (uint64_t)v6);
            if ((v36 & 1) != (v38 & 1)) {
              goto LABEL_50;
            }
            unint64_t v32 = v37;
            uint64_t v25 = v50;
            if ((v36 & 1) == 0)
            {
LABEL_36:
              v25[(v32 >> 6) + 8] |= 1 << v32;
              uint64_t v39 = (uint64_t *)(v25[6] + 16 * v32);
              *uint64_t v39 = v29;
              v39[1] = (uint64_t)v6;
              sub_2454AFE68(v51, v25[7] + 40 * v32);
              uint64_t v40 = v25[2];
              BOOL v41 = __OFADD__(v40, 1);
              uint64_t v42 = v40 + 1;
              if (v41) {
                goto LABEL_45;
              }
              _OWORD v25[2] = v42;
              swift_bridgeObjectRetain();
              goto LABEL_28;
            }
          }
          uint64_t v26 = v25[7] + 40 * v32;
          __swift_destroy_boxed_opaque_existential_1(v26);
          sub_2454AFE68(v51, v26);
LABEL_28:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
          v9 += 40;
          if (!--v8)
          {
            swift_bridgeObjectRelease();
            uint64_t v5 = v55;
            uint64_t v43 = v56;
            uint64_t v3 = v48;
            uint64_t v6 = (uint64_t *)MEMORY[0x263F8EE78];
            goto LABEL_42;
          }
        }
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    if (sub_24558F1C8()) {
      unint64_t v7 = sub_245569BB0(MEMORY[0x263F8EE78]);
    }
    else {
      unint64_t v7 = MEMORY[0x263F8EE88];
    }
  }
  v3[10] = v5;
  v3[11] = v5;
  v3[20] = (uint64_t)v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = (void *)MEMORY[0x263F8EE80];
  uint64_t v43 = v5;
LABEL_42:
  swift_bridgeObjectRelease();
  v3[14] = (uint64_t)v25;
  swift_bridgeObjectRetain();
  char v44 = (void *)MEMORY[0x263F8EE80];
  uint64_t v45 = sub_2455652D8(MEMORY[0x263F8EE80], v43);
  swift_bridgeObjectRelease();
  v3[12] = v45;
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_245565720(v44, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v3[13] = v46;
  v3[9] = (uint64_t)v6;
  v3[15] = sub_2454B5E7C((uint64_t)v6);
  v3[21] = (uint64_t)v6;
  return (uint64_t)v3;
}

uint64_t Schema.Entity.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  Schema.Entity.init(from:)(a1);
  return v2;
}

uint64_t Schema.Entity.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  *(void *)&long long v75 = *(void *)v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3E48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 176) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  uint64_t v9 = a1[3];
  uint64_t v76 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_24556B5C4();
  sub_24558F878();
  if (v2)
  {
    uint64_t v11 = (uint64_t)v76;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    uint64_t v12 = v11;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1(v12);
    return v3;
  }
  uint64_t v74 = v6;
  LOBYTE(v78[0]) = 0;
  *(void *)(v3 + 16) = sub_24558F388();
  *(void *)(v3 + 24) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3E58);
  LOBYTE(v77[0]) = 1;
  sub_24556B618();
  sub_24558F3B8();
  *(void *)(v3 + 32) = v78[0];
  LOBYTE(v78[0]) = 2;
  uint64_t v14 = sub_24558F298();
  uint64_t v16 = v15;
  swift_beginAccess();
  *(void *)(v3 + 40) = v14;
  *(void *)(v3 + 48) = v16;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3E68);
  LOBYTE(v77[0]) = 3;
  sub_24556B6BC();
  sub_24558F3B8();
  *(void *)(v3 + 80) = v78[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3E78);
  LOBYTE(v77[0]) = 4;
  sub_24556B764();
  sub_24558F3B8();
  unint64_t v72 = v8;
  *(void *)(v3 + 88) = v78[0];
  swift_beginAccess();
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = sub_2455571DC(v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_245536044(v18);
  swift_release();
  swift_beginAccess();
  uint64_t v20 = swift_bridgeObjectRetain();
  unint64_t v21 = sub_245557194(v20);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_24553608C(v21);
  swift_release();
  v78[0] = v19;
  sub_245497C88(v22, (uint64_t (*)(void))sub_2454AF610, &qword_26B0DA128);
  uint64_t v23 = v78[0];
  *(void *)(v3 + 64) = v78[0];
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v25 = (void *)MEMORY[0x263F8EE78];
  if (v24)
  {
    uint64_t v71 = v3 + 64;
    uint64_t v26 = v23 + 32;
    uint64_t v70 = v23;
    swift_bridgeObjectRetain();
    uint64_t v73 = (void *)MEMORY[0x263F8EE78];
    long long v75 = xmmword_245597620;
    do
    {
      sub_2454AFE04(v26, (uint64_t)v78);
      uint64_t v27 = v79;
      uint64_t v28 = v80;
      __swift_project_boxed_opaque_existential_1(v78, v79);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v28 + 136))(v27, v28))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA220);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = v75;
        uint64_t v30 = v79;
        uint64_t v31 = v80;
        __swift_project_boxed_opaque_existential_1(v78, v79);
        *(void *)(v29 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
        *(void *)(v29 + 40) = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v73 = sub_2454C24F0(0, v73[2] + 1, 1, v73);
        }
        uint64_t v33 = v73;
        unint64_t v35 = v73[2];
        unint64_t v34 = v73[3];
        if (v35 >= v34 >> 1) {
          uint64_t v33 = sub_2454C24F0((void *)(v34 > 1), v35 + 1, 1, v73);
        }
        v33[2] = v35 + 1;
        uint64_t v73 = v33;
        v33[v35 + 4] = v29;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
      v26 += 40;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = v73;
  }
  uint64_t v70 = v5;
  *(void *)(v3 + 160) = v25;
  swift_beginAccess();
  uint64_t v36 = *(void *)(v3 + 64);
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v73 = v25;
  uint64_t v71 = v36;
  if (!v37)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = (void *)MEMORY[0x263F8EE80];
LABEL_31:
    swift_bridgeObjectRelease();
    *(void *)(v3 + 112) = v39;
    uint64_t v63 = *(void *)(v3 + 80);
    swift_bridgeObjectRetain();
    int64_t v64 = (void *)MEMORY[0x263F8EE80];
    uint64_t v65 = sub_2455652D8(MEMORY[0x263F8EE80], v63);
    swift_bridgeObjectRelease();
    *(void *)(v3 + 96) = v65;
    uint64_t v66 = *(void *)(v3 + 88);
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_245565720(v64, v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 104) = v67;
    uint64_t v68 = MEMORY[0x263F8EE78];
    *(void *)(v3 + 72) = MEMORY[0x263F8EE78];
    *(void *)(v3 + 120) = sub_2454B5E7C(v68);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v70);
    *(void *)(v3 + 168) = v68;
    uint64_t v12 = (uint64_t)v76;
    goto LABEL_4;
  }
  uint64_t v38 = v36 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    *(void *)&long long v75 = v38;
    sub_2454AFE04(v38, (uint64_t)v78);
    uint64_t v42 = v79;
    uint64_t v43 = v80;
    __swift_project_boxed_opaque_existential_1(v78, v79);
    uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 32))(v42, v43);
    uint64_t v46 = v45;
    sub_2454AFE04((uint64_t)v78, (uint64_t)v77);
    BOOL v47 = v39;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int v81 = v39;
    uint64_t v49 = v44;
    unint64_t v51 = sub_2454A0B40(v44, v46);
    uint64_t v52 = v39[2];
    BOOL v53 = (v50 & 1) == 0;
    uint64_t v54 = v52 + v53;
    if (__OFADD__(v52, v53)) {
      break;
    }
    char v55 = v50;
    if (v47[3] >= v54)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v58 = v81;
        if (v50) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_245523AC0();
        unint64_t v58 = v81;
        if (v55) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      sub_2454AFE80(v54, isUniquelyReferenced_nonNull_native);
      unint64_t v56 = sub_2454A0B40(v49, v46);
      if ((v55 & 1) != (v57 & 1)) {
        goto LABEL_34;
      }
      unint64_t v51 = v56;
      unint64_t v58 = v81;
      if (v55)
      {
LABEL_17:
        uint64_t v39 = v58;
        uint64_t v40 = v58[7] + 40 * v51;
        __swift_destroy_boxed_opaque_existential_1(v40);
        sub_2454AFE68(v77, v40);
        goto LABEL_18;
      }
    }
    v58[(v51 >> 6) + 8] |= 1 << v51;
    uint64_t v59 = (uint64_t *)(v58[6] + 16 * v51);
    *uint64_t v59 = v49;
    v59[1] = v46;
    sub_2454AFE68(v77, v58[7] + 40 * v51);
    uint64_t v60 = v58[2];
    BOOL v61 = __OFADD__(v60, 1);
    uint64_t v62 = v60 + 1;
    if (v61) {
      goto LABEL_33;
    }
    uint64_t v39 = v58;
    v58[2] = v62;
    swift_bridgeObjectRetain();
LABEL_18:
    uint64_t v41 = v75;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    uint64_t v38 = v41 + 40;
    if (!--v37) {
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t Schema.Entity.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3E88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24556B5C4();
  sub_24558F888();
  swift_beginAccess();
  char v15 = 0;
  swift_bridgeObjectRetain();
  sub_24558F408();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v14 = v3[4];
    char v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3E58);
    sub_24556B80C();
    sub_24558F468();
    swift_beginAccess();
    char v13 = 2;
    swift_bridgeObjectRetain();
    sub_24558F3F8();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v12 = v3[10];
    LOBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3E68);
    sub_24556B8B0();
    sub_24558F468();
    swift_beginAccess();
    uint64_t v11 = v3[11];
    v10[15] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3E78);
    sub_24556B958();
    sub_24558F468();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t Schema.Entity.hash(into:)()
{
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Entity.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 56);
  *(void *)(v0 + 56) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + 56);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t Schema.Entity.__deallocating_deinit()
{
  Schema.Entity.deinit();

  return swift_deallocClassInstance();
}

uint64_t Schema.Entity.hashValue.getter()
{
  return sub_24558F818();
}

uint64_t sub_245569584@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = Schema.Entity.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_2455695DC(void *a1)
{
  return Schema.Entity.encode(to:)(a1);
}

uint64_t sub_245569600()
{
  return sub_24558F818();
}

uint64_t sub_245569674()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2455696E0()
{
  return sub_24558F818();
}

uint64_t sub_245569750()
{
  return Schema.Entity.debugDescription.getter();
}

uint64_t sub_245569774(void **a1, void **a2)
{
  return _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t sub_2455697A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24558EE88();
  if (v3 != result) {
    return 0;
  }
  int64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v9 &= v9 - 1;
LABEL_6:
    swift_retain();
    char v11 = sub_24558EED8();
    uint64_t result = swift_release();
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
  int64_t v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v12 >= v10) {
    return 1;
  }
  uint64_t v13 = *(void *)(v6 + 8 * v12);
  ++v5;
  if (v13) {
    goto LABEL_19;
  }
  int64_t v5 = v12 + 1;
  if (v12 + 1 >= v10) {
    return 1;
  }
  uint64_t v13 = *(void *)(v6 + 8 * v5);
  if (v13)
  {
LABEL_19:
    uint64_t v9 = (v13 - 1) & v13;
    goto LABEL_6;
  }
  int64_t v14 = v12 + 2;
  if (v14 >= v10) {
    return 1;
  }
  uint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13)
  {
    int64_t v5 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v10) {
      return 1;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v5);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2455698F8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24556C248(&qword_268EE3EE0, &qword_268EE3D48);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3D48);
          int64_t v12 = sub_245509688(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for Schema.Entity();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_24558F228();
  __break(1u);
  return result;
}

uint64_t sub_245569B18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_24558E9D8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_2454973AC(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_245569BB0(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24558F1C8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_268EE37C8);
      uint64_t result = sub_24558EF68();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_24558F1C8();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = v3 + 56;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t result = MEMORY[0x2456A1A40](v8, v1);
        BOOL v9 = __OFADD__(v8++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_35;
        }
        uint64_t v10 = (void *)result;
        sub_24558F7D8();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_24558E628();
        swift_bridgeObjectRelease();
        uint64_t result = sub_24558F818();
        uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
        if (((1 << v12) & v14) != 0) {
          break;
        }
LABEL_19:
        *(void *)(v7 + 8 * v13) = v15 | v14;
        *(void *)(*(void *)(v3 + 48) + 8 * v12) = v10;
        uint64_t v21 = *(void *)(v3 + 16);
        BOOL v9 = __OFADD__(v21, 1);
        uint64_t v22 = v21 + 1;
        if (v9) {
          goto LABEL_36;
        }
        *(void *)(v3 + 16) = v22;
        if (v8 == v5) {
          return v3;
        }
      }
      uint64_t v16 = (void *)swift_retain();
      char v17 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v16, v10);
      uint64_t result = swift_release();
      if ((v17 & 1) == 0)
      {
        uint64_t v18 = ~v11;
        do
        {
          unint64_t v12 = (v12 + 1) & v18;
          unint64_t v13 = v12 >> 6;
          uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
          uint64_t v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0) {
            goto LABEL_19;
          }
          uint64_t v19 = (void *)swift_retain();
          char v20 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v19, v10);
          uint64_t result = swift_release();
        }
        while ((v20 & 1) == 0);
      }
      swift_unknownObjectRelease();
      if (v8 == v5) {
        return v3;
      }
    }
  }
  uint64_t v23 = 0;
  unint64_t v38 = v1 + 32;
  uint64_t v24 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v23 != v24)
  {
    uint64_t v25 = *(void **)(v38 + 8 * v23);
    sub_24558F7D8();
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24558E628();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24558F818();
    uint64_t v26 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    uint64_t v29 = *(void *)(v7 + 8 * (v27 >> 6));
    uint64_t v30 = 1 << v27;
    if (((1 << v27) & v29) != 0)
    {
      uint64_t v31 = (void *)swift_retain();
      char v32 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v31, v25);
      uint64_t result = swift_release();
      if (v32)
      {
LABEL_23:
        uint64_t result = swift_release();
        goto LABEL_24;
      }
      uint64_t v33 = ~v26;
      while (1)
      {
        unint64_t v27 = (v27 + 1) & v33;
        unint64_t v28 = v27 >> 6;
        uint64_t v29 = *(void *)(v7 + 8 * (v27 >> 6));
        uint64_t v30 = 1 << v27;
        if ((v29 & (1 << v27)) == 0) {
          break;
        }
        unint64_t v34 = (void *)swift_retain();
        char v35 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v34, v25);
        uint64_t result = swift_release();
        if (v35) {
          goto LABEL_23;
        }
      }
    }
    *(void *)(v7 + 8 * v28) = v30 | v29;
    *(void *)(*(void *)(v3 + 48) + 8 * v27) = v25;
    uint64_t v36 = *(void *)(v3 + 16);
    BOOL v9 = __OFADD__(v36, 1);
    uint64_t v37 = v36 + 1;
    if (v9) {
      goto LABEL_37;
    }
    *(void *)(v3 + 16) = v37;
LABEL_24:
    if (++v23 == v5) {
      return v3;
    }
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_245569F5C(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24558F1C8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA0E0);
      uint64_t result = sub_24558EF68();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (!v2)
  {
LABEL_4:
    uint64_t v5 = *(void *)(v4 + 16);
    if (!v5) {
      return v3;
    }
    goto LABEL_9;
  }
LABEL_8:
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24558F1C8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = v3 + 56;
  uint64_t v60 = v5;
  unint64_t v61 = v3;
  if ((v1 & 0xC000000000000001) == 0)
  {
    uint64_t v33 = 0;
    unint64_t v57 = v1 + 32;
    uint64_t v59 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    do
    {
      if (v33 == v59) {
        goto LABEL_86;
      }
      unint64_t v34 = *(void **)(v57 + 8 * v33);
      sub_24558F7D8();
      swift_beginAccess();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_24558E628();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24558F818();
      uint64_t v35 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v36 = result & ~v35;
      unint64_t v37 = v36 >> 6;
      uint64_t v38 = *(void *)(v7 + 8 * (v36 >> 6));
      uint64_t v39 = 1 << v36;
      if (((1 << v36) & v38) != 0)
      {
        uint64_t v63 = v33;
        uint64_t v40 = ~v35;
        uint64_t v41 = v34 + 6;
        uint64_t v42 = *(void *)(v3 + 48);
        swift_beginAccess();
        swift_beginAccess();
        while (1)
        {
          uint64_t v43 = *(void **)(v42 + 8 * v36);
          swift_beginAccess();
          BOOL v44 = v43[2] == v34[2] && v43[3] == v34[3];
          if (v44 || (uint64_t result = sub_24558F598(), (result & 1) != 0))
          {
            uint64_t result = swift_beginAccess();
            uint64_t v45 = v43[6];
            uint64_t v46 = *v41;
            uint64_t v47 = *(void *)(v45 + 16);
            if (v47 == *(void *)(*v41 + 16))
            {
              if (v47) {
                BOOL v48 = v45 == v46;
              }
              else {
                BOOL v48 = 1;
              }
              if (v48)
              {
LABEL_53:
                uint64_t result = swift_beginAccess();
                if (v43[7] == v34[7])
                {
                  uint64_t result = swift_release();
                  uint64_t v5 = v60;
                  unint64_t v3 = v61;
                  uint64_t v33 = v63;
                  goto LABEL_49;
                }
              }
              else
              {
                uint64_t v49 = (unsigned __int8 *)(v45 + 68);
                char v50 = (unsigned __int8 *)(v46 + 68);
                while (*(v49 - 4) == *(v50 - 4))
                {
                  if ((*(v49 - 2) ^ *(v50 - 2))) {
                    break;
                  }
                  if ((*v49 ^ *v50)) {
                    break;
                  }
                  if ((*(v49 - 3) ^ *(v50 - 3))) {
                    break;
                  }
                  if ((*(v49 - 1) ^ *(v50 - 1))) {
                    break;
                  }
                  int v51 = *(v49 - 36);
                  int v52 = *(v50 - 36);
                  if ((v51 ^ v52)) {
                    break;
                  }
                  if ((v51 & v52) == 1)
                  {
                    uint64_t v53 = *(void *)(v49 - 12);
                    uint64_t v54 = *(void *)(v50 - 12);
                    if (v53)
                    {
                      if (!v54) {
                        break;
                      }
                      uint64_t result = *(void *)(v49 - 20);
                      if (result != *(void *)(v50 - 20) || v53 != v54)
                      {
                        uint64_t result = sub_24558F598();
                        if ((result & 1) == 0) {
                          break;
                        }
                      }
                    }
                    else if (v54)
                    {
                      break;
                    }
                  }
                  v49 += 40;
                  v50 += 40;
                  if (!--v47) {
                    goto LABEL_53;
                  }
                }
              }
            }
          }
          unint64_t v36 = (v36 + 1) & v40;
          unint64_t v37 = v36 >> 6;
          uint64_t v38 = *(void *)(v7 + 8 * (v36 >> 6));
          uint64_t v39 = 1 << v36;
          if ((v38 & (1 << v36)) == 0)
          {
            uint64_t v5 = v60;
            unint64_t v3 = v61;
            uint64_t v33 = v63;
            break;
          }
        }
      }
      *(void *)(v7 + 8 * v37) = v39 | v38;
      *(void *)(*(void *)(v3 + 48) + 8 * v36) = v34;
      uint64_t v55 = *(void *)(v3 + 16);
      BOOL v9 = __OFADD__(v55, 1);
      uint64_t v56 = v55 + 1;
      if (v9) {
        goto LABEL_87;
      }
      *(void *)(v3 + 16) = v56;
LABEL_49:
      ++v33;
    }
    while (v33 != v5);
    return v3;
  }
  uint64_t v8 = 0;
  unint64_t v58 = v1;
  while (1)
  {
    uint64_t result = MEMORY[0x2456A1A40](v8, v1);
    BOOL v9 = __OFADD__(v8++, 1);
    if (v9) {
      break;
    }
    uint64_t v10 = (void *)result;
    sub_24558F7D8();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_24558E628();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24558F818();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v62 = v8;
      uint64_t v16 = ~v11;
      char v17 = v10 + 6;
      uint64_t v18 = *(void *)(v3 + 48);
      swift_beginAccess();
      swift_beginAccess();
      while (1)
      {
        uint64_t v19 = *(void **)(v18 + 8 * v12);
        swift_beginAccess();
        BOOL v20 = v19[2] == v10[2] && v19[3] == v10[3];
        if (v20 || (uint64_t result = sub_24558F598(), (result & 1) != 0))
        {
          uint64_t result = swift_beginAccess();
          uint64_t v21 = v19[6];
          uint64_t v22 = *v17;
          uint64_t v23 = *(void *)(v21 + 16);
          if (v23 == *(void *)(*v17 + 16))
          {
            if (v23) {
              BOOL v24 = v21 == v22;
            }
            else {
              BOOL v24 = 1;
            }
            if (!v24)
            {
              uint64_t v25 = (unsigned __int8 *)(v21 + 68);
              uint64_t v26 = (unsigned __int8 *)(v22 + 68);
              while (*(v25 - 4) == *(v26 - 4))
              {
                if ((*(v25 - 2) ^ *(v26 - 2))) {
                  break;
                }
                if ((*v25 ^ *v26)) {
                  break;
                }
                if ((*(v25 - 3) ^ *(v26 - 3))) {
                  break;
                }
                if ((*(v25 - 1) ^ *(v26 - 1))) {
                  break;
                }
                int v27 = *(v25 - 36);
                int v28 = *(v26 - 36);
                if ((v27 ^ v28)) {
                  break;
                }
                if ((v27 & v28) == 1)
                {
                  uint64_t v29 = *(void *)(v25 - 12);
                  uint64_t v30 = *(void *)(v26 - 12);
                  if (v29)
                  {
                    if (!v30) {
                      goto LABEL_16;
                    }
                    uint64_t result = *(void *)(v25 - 20);
                    if (result != *(void *)(v26 - 20) || v29 != v30)
                    {
                      uint64_t result = sub_24558F598();
                      if ((result & 1) == 0) {
                        goto LABEL_16;
                      }
                    }
                  }
                  else if (v30)
                  {
                    goto LABEL_16;
                  }
                }
                v25 += 40;
                v26 += 40;
                if (!--v23) {
                  goto LABEL_15;
                }
              }
              goto LABEL_16;
            }
LABEL_15:
            uint64_t result = swift_beginAccess();
            if (v19[7] == v10[7]) {
              break;
            }
          }
        }
LABEL_16:
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0)
        {
          uint64_t v5 = v60;
          unint64_t v3 = v61;
          unint64_t v1 = v58;
          uint64_t v8 = v62;
          goto LABEL_44;
        }
      }
      swift_unknownObjectRelease();
      uint64_t v5 = v60;
      unint64_t v3 = v61;
      unint64_t v1 = v58;
      uint64_t v8 = v62;
      if (v62 == v60) {
        return v3;
      }
    }
    else
    {
LABEL_44:
      *(void *)(v7 + 8 * v13) = v15 | v14;
      *(void *)(*(void *)(v3 + 48) + 8 * v12) = v10;
      uint64_t v31 = *(void *)(v3 + 16);
      BOOL v9 = __OFADD__(v31, 1);
      uint64_t v32 = v31 + 1;
      if (v9) {
        goto LABEL_85;
      }
      *(void *)(v3 + 16) = v32;
      if (v8 == v5) {
        return v3;
      }
    }
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
  return result;
}

uint64_t sub_24556A5C4(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8D48);
      uint64_t v3 = sub_24558EF68();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (!v2)
  {
LABEL_4:
    uint64_t v5 = *(void *)(v4 + 16);
    if (!v5) {
      return v3;
    }
    goto LABEL_9;
  }
LABEL_8:
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24558F1C8();
  swift_bridgeObjectRelease();
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v42 = v1;
  unint64_t v43 = v1 & 0xC000000000000001;
  unint64_t v39 = v1 + 32;
  uint64_t v40 = v1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v41 = v5;
  while (1)
  {
LABEL_10:
    if (v43)
    {
      uint64_t v9 = MEMORY[0x2456A1A40](v7, v1);
      BOOL v10 = __OFADD__(v7++, 1);
      if (v10) {
        goto LABEL_64;
      }
    }
    else
    {
      if (v7 >= *(void *)(v40 + 16)) {
        goto LABEL_66;
      }
      uint64_t v9 = *(void *)(v39 + 8 * v7);
      swift_retain();
      BOOL v10 = __OFADD__(v7++, 1);
      if (v10)
      {
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        JUMPOUT(0x24556AB78);
      }
    }
    sub_24558F7D8();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_24558E628();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_24558F818();
    uint64_t v12 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    uint64_t v15 = *(void *)(v8 + 8 * (v13 >> 6));
    uint64_t v16 = 1 << v13;
    if (((1 << v13) & v15) != 0) {
      break;
    }
LABEL_58:
    *(void *)(v8 + 8 * v14) = v16 | v15;
    *(void *)(*(void *)(v3 + 48) + 8 * v13) = v9;
    uint64_t v36 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v36, 1);
    uint64_t v37 = v36 + 1;
    if (v10) {
      goto LABEL_65;
    }
    *(void *)(v3 + 16) = v37;
    if (v7 == v5) {
      return v3;
    }
  }
  unint64_t v44 = v7;
  uint64_t v17 = ~v12;
  uint64_t v18 = v9 + 56;
  uint64_t v19 = (void *)(v9 + 64);
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  while (1)
  {
    uint64_t v20 = *(void *)(*(void *)(v3 + 48) + 8 * v13);
    swift_beginAccess();
    BOOL v21 = *(void *)(v20 + 16) == *(void *)(v9 + 16) && *(void *)(v20 + 24) == *(void *)(v9 + 24);
    if (v21 || (sub_24558F598() & 1) != 0)
    {
      swift_beginAccess();
      uint64_t v22 = *(void *)(v20 + 56);
      uint64_t v23 = *(void *)v18;
      uint64_t v24 = *(void *)(v22 + 16);
      if (v24 == *(void *)(*(void *)v18 + 16))
      {
        if (v24) {
          BOOL v25 = v22 == v23;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          uint64_t v26 = (unsigned __int8 *)(v22 + 32);
          int v27 = (unsigned __int8 *)(v23 + 32);
          while (*v26 == *v27)
          {
            ++v26;
            ++v27;
            if (!--v24) {
              goto LABEL_34;
            }
          }
          goto LABEL_20;
        }
LABEL_34:
        swift_beginAccess();
        if (*(void *)(v20 + 64) == *v19)
        {
          swift_beginAccess();
          if (*(void *)(v20 + 72) == *(void *)(v9 + 72) && *(void *)(v20 + 80) == *(void *)(v9 + 80)) {
            break;
          }
          if (sub_24558F598()) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v13 + 1) & v17;
    unint64_t v14 = v13 >> 6;
    uint64_t v15 = *(void *)(v8 + 8 * (v13 >> 6));
    uint64_t v16 = 1 << v13;
    if ((v15 & (1 << v13)) == 0)
    {
      uint64_t v5 = v41;
      unint64_t v1 = v42;
      unint64_t v7 = v44;
      goto LABEL_58;
    }
  }
  swift_beginAccess();
  unint64_t v28 = 0xE800000000000000;
  uint64_t v29 = 0x6E6F697463416F6ELL;
  switch(*(unsigned char *)(v20 + 88))
  {
    case 1:
      unint64_t v28 = 0xE700000000000000;
      uint64_t v29 = 0x7966696C6C756ELL;
      break;
    case 2:
      unint64_t v28 = 0xE700000000000000;
      uint64_t v29 = 0x65646163736163;
      break;
    case 3:
      unint64_t v28 = 0xE400000000000000;
      uint64_t v29 = 2037278052;
      break;
    default:
      break;
  }
  unint64_t v30 = 0xE800000000000000;
  uint64_t v31 = 0x6E6F697463416F6ELL;
  switch(*(unsigned char *)(v9 + 88))
  {
    case 1:
      unint64_t v30 = 0xE700000000000000;
      if (v29 != 0x7966696C6C756ELL) {
        goto LABEL_50;
      }
      goto LABEL_47;
    case 2:
      unint64_t v30 = 0xE700000000000000;
      uint64_t v31 = 0x65646163736163;
      goto LABEL_46;
    case 3:
      unint64_t v30 = 0xE400000000000000;
      if (v29 != 2037278052) {
        goto LABEL_50;
      }
      goto LABEL_47;
    default:
LABEL_46:
      if (v29 != v31) {
        goto LABEL_50;
      }
LABEL_47:
      if (v28 == v30)
      {
        swift_retain();
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_50:
        char v32 = sub_24558F598();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v32 & 1) == 0) {
          goto LABEL_19;
        }
      }
      swift_beginAccess();
      uint64_t v33 = *(void *)(v20 + 104);
      uint64_t v34 = *(void *)(v9 + 104);
      if (!v33)
      {
        if (!v34) {
          goto LABEL_61;
        }
LABEL_19:
        swift_release();
        uint64_t v19 = (void *)(v9 + 64);
        goto LABEL_20;
      }
      if (!v34) {
        goto LABEL_19;
      }
      if (*(void *)(v20 + 96) != *(void *)(v9 + 96) || v33 != v34)
      {
        char v35 = sub_24558F598();
        swift_release();
        uint64_t v19 = (void *)(v9 + 64);
        if (v35) {
          goto LABEL_62;
        }
        goto LABEL_20;
      }
LABEL_61:
      swift_release();
LABEL_62:
      swift_release();
      uint64_t v5 = v41;
      unint64_t v1 = v42;
      unint64_t v7 = v44;
      if (v44 != v41) {
        goto LABEL_10;
      }
      return v3;
  }
}

uint64_t sub_24556AB98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_24556C1F4();
  uint64_t result = sub_24558E9D8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_unknownObjectRetain();
      sub_2454DA36C(&v7, v5, v6);
      swift_unknownObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_24556AC30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469746E65627573 && a2 == 0xEB00000000736569 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E657265707573 && a2 == 0xEF656D614E797469 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24556AEAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v51 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v56 = (uint64_t)&v51 - v11;
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v51 - v12;
  uint64_t v14 = *(void *)(a1 + 16);
  sub_2454B01E0(&qword_26B0D9AD0, 255, (void (*)(uint64_t))type metadata accessor for PersistentIdentifier);
  uint64_t v58 = v2;
  uint64_t v15 = sub_24558E9D8();
  uint64_t v52 = v14;
  if (!v14) {
    return v15;
  }
  uint64_t v16 = 0;
  uint64_t v51 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v17 = *(void *)(v3 + 72);
  unint64_t v57 = v13;
  while (1)
  {
    uint64_t v55 = v16;
    sub_24549B2DC(v51 + v17 * v16, (uint64_t)v13);
    sub_24558F7D8();
    uint64_t v18 = sub_24558E158();
    uint64_t v19 = sub_2454B01E0((unint64_t *)&qword_26B0DA0F0, 255, MEMORY[0x263F06EA8]);
    swift_bridgeObjectRetain();
    uint64_t v53 = v19;
    uint64_t v54 = v18;
    sub_24558E4D8();
    uint64_t v20 = sub_24558F818();
    uint64_t v21 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v22 = v20 & ~v21;
    if ((*(void *)(v15 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
    {
      uint64_t v23 = ~v21;
      uint64_t v24 = *(int *)(v58 + 20);
      do
      {
        sub_24549B2DC(*(void *)(v15 + 48) + v22 * v17, (uint64_t)v6);
        uint64_t v25 = *(void *)&v6[*(int *)(v58 + 20)];
        uint64_t v26 = *(void *)&v57[v24];
        uint64_t v27 = *(void *)(v25 + 24);
        uint64_t v28 = *(void *)(v26 + 24);
        if (v27)
        {
          if (!v28
            || (*(void *)(v25 + 16) == *(void *)(v26 + 16) ? (BOOL v29 = v27 == v28) : (BOOL v29 = 0),
                !v29 && (sub_24558F598() & 1) == 0))
          {
LABEL_8:
            sub_24549B280((uint64_t)v6);
            goto LABEL_9;
          }
        }
        else if (v28)
        {
          goto LABEL_8;
        }
        BOOL v30 = *(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
           && *(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
        if (!v30 && (sub_24558F598() & 1) == 0) {
          goto LABEL_8;
        }
        if (*(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
          && *(void *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
        {
          sub_24549B280((uint64_t)v6);
          goto LABEL_4;
        }
        char v32 = sub_24558F598();
        sub_24549B280((uint64_t)v6);
        if (v32) {
          goto LABEL_4;
        }
LABEL_9:
        unint64_t v22 = (v22 + 1) & v23;
      }
      while (((*(void *)(v15 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24549B2DC((uint64_t)v57, v56);
    uint64_t v59 = v15;
    if (*(void *)(v15 + 24) > *(void *)(v15 + 16))
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_245509044();
      }
      goto LABEL_57;
    }
    if (isUniquelyReferenced_nonNull_native) {
      sub_245507AD8();
    }
    else {
      sub_24547AD6C();
    }
    uint64_t v34 = v59;
    sub_24558F7D8();
    sub_24558E4D8();
    uint64_t v35 = sub_24558F818();
    uint64_t v36 = -1 << *(unsigned char *)(v34 + 32);
    unint64_t v22 = v35 & ~v36;
    if ((*(void *)(v34 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
    {
      uint64_t v37 = ~v36;
      uint64_t v38 = *(int *)(v58 + 20);
      do
      {
        sub_24549B2DC(*(void *)(v34 + 48) + v22 * v17, (uint64_t)v9);
        uint64_t v39 = *(void *)&v9[*(int *)(v58 + 20)];
        uint64_t v40 = *(void *)(v56 + v38);
        uint64_t v41 = *(void *)(v39 + 24);
        uint64_t v42 = *(void *)(v40 + 24);
        if (v41)
        {
          if (!v42
            || (*(void *)(v39 + 16) == *(void *)(v40 + 16) ? (BOOL v43 = v41 == v42) : (BOOL v43 = 0),
                !v43 && (sub_24558F598() & 1) == 0))
          {
LABEL_37:
            sub_24549B280((uint64_t)v9);
            goto LABEL_38;
          }
        }
        else if (v42)
        {
          goto LABEL_37;
        }
        BOOL v44 = *(void *)(v39 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
           && *(void *)(v39 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
        if (!v44 && (sub_24558F598() & 1) == 0) {
          goto LABEL_37;
        }
        if (*(void *)(v39 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
          && *(void *)(v39 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
        {
          goto LABEL_61;
        }
        char v46 = sub_24558F598();
        sub_24549B280((uint64_t)v9);
        if (v46) {
          goto LABEL_62;
        }
LABEL_38:
        unint64_t v22 = (v22 + 1) & v37;
      }
      while (((*(void *)(v34 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) != 0);
    }
LABEL_57:
    uint64_t v15 = v59;
    *(void *)(v59 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v22;
    sub_2454A1C18(v56, *(void *)(v15 + 48) + v22 * v17);
    uint64_t v47 = *(void *)(v15 + 16);
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      break;
    }
    *(void *)(v15 + 16) = v49;
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v16 = v55 + 1;
    unint64_t v13 = v57;
    sub_24549B280((uint64_t)v57);
    if (v16 == v52) {
      return v15;
    }
  }
  __break(1u);
LABEL_61:
  sub_24549B280((uint64_t)v9);
LABEL_62:
  uint64_t result = sub_24558F738();
  __break(1u);
  return result;
}

uint64_t sub_24556B458(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24558F1C8();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for Schema.Entity();
  sub_2454B01E0(&qword_268EE3E40, v3, (void (*)(uint64_t))type metadata accessor for Schema.Entity);
  uint64_t result = sub_24558E9D8();
  uint64_t v5 = result;
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24558F1C8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v6) {
      return v5;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v6) {
      return v5;
    }
  }
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = (void *)MEMORY[0x2456A1A40](i, a1);
      }
      else
      {
        uint64_t v8 = *(void **)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_245506530(&v9, v8);
      swift_release();
    }
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_24556B5C4()
{
  unint64_t result = qword_268EE3E50;
  if (!qword_268EE3E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3E50);
  }
  return result;
}

unint64_t sub_24556B618()
{
  unint64_t result = qword_268EE3E60;
  if (!qword_268EE3E60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3E58);
    sub_2454B01E0(&qword_268EE3D58, v1, (void (*)(uint64_t))type metadata accessor for Schema.Entity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3E60);
  }
  return result;
}

unint64_t sub_24556B6BC()
{
  unint64_t result = qword_268EE3E70;
  if (!qword_268EE3E70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3E68);
    sub_2454B01E0(&qword_26B0DA180, 255, (void (*)(uint64_t))type metadata accessor for Schema.Attribute);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3E70);
  }
  return result;
}

unint64_t sub_24556B764()
{
  unint64_t result = qword_268EE3E80;
  if (!qword_268EE3E80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3E78);
    sub_2454B01E0(&qword_26B0D8D20, 255, (void (*)(uint64_t))type metadata accessor for Schema.Relationship);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3E80);
  }
  return result;
}

unint64_t sub_24556B80C()
{
  unint64_t result = qword_268EE3E90;
  if (!qword_268EE3E90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3E58);
    sub_2454B01E0(&qword_268EE3D78, v1, (void (*)(uint64_t))type metadata accessor for Schema.Entity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3E90);
  }
  return result;
}

unint64_t sub_24556B8B0()
{
  unint64_t result = qword_268EE3E98;
  if (!qword_268EE3E98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3E68);
    sub_2454B01E0(&qword_26B0DA168, 255, (void (*)(uint64_t))type metadata accessor for Schema.Attribute);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3E98);
  }
  return result;
}

unint64_t sub_24556B958()
{
  unint64_t result = qword_268EE3EA0;
  if (!qword_268EE3EA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3E78);
    sub_2454B01E0(&qword_26B0D8D08, 255, (void (*)(uint64_t))type metadata accessor for Schema.Relationship);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3EA0);
  }
  return result;
}

uint64_t sub_24556BA00(uint64_t a1, uint64_t a2)
{
  return sub_2454B01E0(&qword_268EE3EA8, a2, (void (*)(uint64_t))type metadata accessor for Schema.Entity);
}

uint64_t sub_24556BA48@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_retain();
}

uint64_t sub_24556BA98@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24556BAE8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for Schema.Entity(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Schema.Entity);
}

uint64_t dispatch thunk of Schema.Entity.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of Schema.Entity.__allocating_init(_:subentities:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of Schema.Entity.__allocating_init(_:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of Schema.Entity.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t _s6EntityC10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6EntityC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24556BD10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_24556BD38(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24556BD44(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *_s6EntityC10CodingKeysOMa()
{
  return &_s6EntityC10CodingKeysON;
}

unint64_t sub_24556BD60()
{
  unint64_t result = qword_268EE3EB0;
  if (!qword_268EE3EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3EB0);
  }
  return result;
}

unint64_t sub_24556BDB8()
{
  unint64_t result = qword_268EE3EB8;
  if (!qword_268EE3EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3EB8);
  }
  return result;
}

unint64_t sub_24556BE10()
{
  unint64_t result = qword_268EE3EC0;
  if (!qword_268EE3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3EC0);
  }
  return result;
}

uint64_t sub_24556BE64()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24556BE9C(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3EC8);
      uint64_t v3 = sub_24558EF68();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_24558F1C8();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v40 = v1;
    while (1)
    {
      uint64_t v9 = MEMORY[0x2456A1A40](v8, v1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_24558ECC8();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_2454DB5DC();
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_24558ECD8();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v1 = v40;
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_24558ECD8();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v40;
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v1 + 32 + 8 * v25);
    uint64_t v27 = sub_24558ECC8();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_2454DB5DC();
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_24558ECD8();

      if (v34) {
        goto LABEL_24;
      }
      uint64_t v35 = ~v28;
      unint64_t v29 = (v29 + 1) & v35;
      unint64_t v30 = v29 >> 6;
      uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
      uint64_t v32 = 1 << v29;
      if ((v31 & (1 << v29)) != 0)
      {
        while (1)
        {
          id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
          char v37 = sub_24558ECD8();

          if (v37) {
            break;
          }
          unint64_t v29 = (v29 + 1) & v35;
          unint64_t v30 = v29 >> 6;
          uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
          uint64_t v32 = 1 << v29;
          if ((v31 & (1 << v29)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v5 = v42;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v5 = v42;
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

unint64_t sub_24556C1F4()
{
  unint64_t result = qword_26B0D8878;
  if (!qword_26B0D8878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D8878);
  }
  return result;
}

uint64_t sub_24556C248(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Schema.Relationship.isToOneRelationship.getter()
{
  return *(unsigned __int8 *)(v0 + 168);
}

BOOL SchemaProperty.isOptional.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 80))();
  if (swift_conformsToProtocol2()) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  return v3 != 0;
}

uint64_t sub_24556C320(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E6F697463416F6ELL;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E6F697463416F6ELL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x7966696C6C756ELL;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x65646163736163;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 2037278052;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x7966696C6C756ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x65646163736163;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 2037278052) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_24558F598();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_24556C4A0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x80000002455904A0;
  uint64_t v4 = a1;
  uint64_t v5 = 0xD000000000000012;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6164696C61766E69;
      unint64_t v3 = 0xEE006C6C41646574;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6465747265736E69;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      unsigned int v6 = 1633972341;
      goto LABEL_6;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unsigned int v6 = 1701602660;
LABEL_6:
      uint64_t v5 = v6 | 0x64657400000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000002455904A0;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEE006C6C41646574;
      if (v5 == 0x6164696C61766E69) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x6465747265736E69) {
        goto LABEL_17;
      }
      goto LABEL_14;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v2 = 0x64657461647075;
      goto LABEL_13;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x646574656C6564) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_17:
      }
        char v8 = sub_24558F598();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t Schema.Attribute.__allocating_init(name:originalName:options:valueType:defaultValue:hashModifier:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t Schema.CompositeAttribute.__allocating_init(name:originalName:options:valueType:defaultValue:hashModifier:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t sub_24556C7C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_24558F028();
  uint64_t v3 = sub_24558E8A8();
  uint64_t v4 = swift_bridgeObjectRetain();
  if (!MEMORY[0x2456A12E0](v4, v3)) {
    goto LABEL_23;
  }
  uint64_t v5 = 0;
  uint64_t v18 = v1 + 32;
  uint64_t v16 = v3;
  uint64_t v17 = v1;
  while (1)
  {
    char v6 = sub_24558E848();
    sub_24558E7F8();
    if (v6)
    {
      uint64_t v7 = *(void *)(v18 + 8 * v5);
      swift_bridgeObjectRetain();
      BOOL v8 = __OFADD__(v5++, 1);
      if (v8) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v7 = sub_24558EFE8();
      BOOL v8 = __OFADD__(v5++, 1);
      if (v8)
      {
LABEL_22:
        __break(1u);
LABEL_23:
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    if (MEMORY[0x2456A12E0](v7, v2)) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    if (v5 == MEMORY[0x2456A12E0](v17, v16)) {
      goto LABEL_23;
    }
  }
  uint64_t v9 = 4;
  while (1)
  {
    uint64_t v10 = v9 - 4;
    char v11 = sub_24558E848();
    sub_24558E7F8();
    if ((v11 & 1) == 0) {
      break;
    }
    swift_retain();
    uint64_t v12 = v9 - 3;
    if (__OFADD__(v10, 1)) {
      goto LABEL_24;
    }
LABEL_11:
    uint64_t v13 = sub_24558EDA8();
    if (swift_conformsToProtocol2()) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    if (v14 && !swift_dynamicCastMetatype()) {
      goto LABEL_25;
    }
    swift_release();
    ++v9;
    if (v12 == MEMORY[0x2456A12E0](v7, v2)) {
      goto LABEL_3;
    }
  }
  sub_24558EFE8();
  uint64_t v12 = v9 - 3;
  if (!__OFADD__(v10, 1)) {
    goto LABEL_11;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  sub_24558EF78();
  sub_24558E668();
  sub_24558F908();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  sub_24558F908();
  sub_24558E668();
  swift_bridgeObjectRelease();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24556CAE0()
{
  uint64_t v31 = *v0;
  uint64_t v1 = v0[2];
  uint64_t v30 = *(void *)(*v0 + 80);
  uint64_t v2 = sub_24558F028();
  uint64_t v3 = sub_24558E8A8();
  uint64_t v4 = swift_bridgeObjectRetain();
  if (MEMORY[0x2456A12E0](v4, v3))
  {
    uint64_t v5 = 0;
    uint64_t v28 = v1 + 32;
    char v6 = (void *)MEMORY[0x263F8EE78];
    uint64_t v26 = v3;
    uint64_t v27 = v1;
    while (1)
    {
      char v7 = sub_24558E848();
      sub_24558E7F8();
      if (v7)
      {
        uint64_t v8 = *(void *)(v28 + 8 * v5);
        uint64_t result = swift_bridgeObjectRetain();
        BOOL v10 = __OFADD__(v5, 1);
        uint64_t v11 = v5 + 1;
        if (v10) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t result = sub_24558EFE8();
        uint64_t v8 = result;
        BOOL v10 = __OFADD__(v5, 1);
        uint64_t v11 = v5 + 1;
        if (v10)
        {
LABEL_31:
          __break(1u);
          return result;
        }
      }
      uint64_t v29 = v11;
      if (MEMORY[0x2456A12E0](v8, v2))
      {
        uint64_t v12 = 4;
        uint64_t v13 = (void *)MEMORY[0x263F8EE78];
        while (1)
        {
          uint64_t v14 = v12 - 4;
          char v15 = sub_24558E848();
          sub_24558E7F8();
          if (v15)
          {
            uint64_t v16 = *(void *)(v8 + 8 * v12);
            uint64_t result = swift_retain();
            uint64_t v17 = v12 - 3;
            if (__OFADD__(v14, 1)) {
              goto LABEL_30;
            }
          }
          else
          {
            uint64_t result = sub_24558EFE8();
            uint64_t v16 = result;
            uint64_t v17 = v12 - 3;
            if (__OFADD__(v14, 1))
            {
LABEL_30:
              __break(1u);
              goto LABEL_31;
            }
          }
          uint64_t v18 = sub_24549CE00(v16, v30, *(void *)(v31 + 88));
          uint64_t v20 = v19;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v13 = sub_2454C22EC(0, v13[2] + 1, 1, v13);
          }
          unint64_t v22 = v13[2];
          unint64_t v21 = v13[3];
          if (v22 >= v21 >> 1) {
            uint64_t v13 = sub_2454C22EC((void *)(v21 > 1), v22 + 1, 1, v13);
          }
          v13[2] = v22 + 1;
          uint64_t v23 = &v13[2 * v22];
          v23[4] = v18;
          v23[5] = v20;
          swift_release();
          ++v12;
          if (v17 == MEMORY[0x2456A12E0](v8, v2)) {
            goto LABEL_19;
          }
        }
      }
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
LABEL_19:
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v6 = sub_2454C24F0(0, v6[2] + 1, 1, v6);
      }
      uint64_t v5 = v29;
      unint64_t v25 = v6[2];
      unint64_t v24 = v6[3];
      if (v25 >= v24 >> 1) {
        char v6 = sub_2454C24F0((void *)(v24 > 1), v25 + 1, 1, v6);
      }
      uint64_t v6[2] = v25 + 1;
      v6[v25 + 4] = v13;
      if (v29 == MEMORY[0x2456A12E0](v27, v26)) {
        goto LABEL_29;
      }
    }
  }
  char v6 = (void *)MEMORY[0x263F8EE78];
LABEL_29:
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

uint64_t sub_24556CDF4()
{
  return 0x552E616D65686353;
}

uint64_t sub_24556CE18()
{
  return 0;
}

uint64_t SchemaProperty.isAttribute.getter()
{
  return 0;
}

uint64_t sub_24556CE28()
{
  return 0;
}

uint64_t SchemaProperty.isRelationship.getter()
{
  return 0;
}

uint64_t sub_24556CE38()
{
  return 0;
}

uint64_t SchemaProperty.isTransient.getter()
{
  return 0;
}

uint64_t sub_24556CE4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24556CEB4())()
{
  return j_j__swift_endAccess_1;
}

uint64_t sub_24556CF08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24556CF70())()
{
  return j_j__swift_endAccess_1_2;
}

uint64_t sub_24556CFC4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 48) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24556D024()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24556D05C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24556D0A4())()
{
  return j_j__swift_endAccess_1_0;
}

uint64_t sub_24556D0F8()
{
  swift_beginAccess();
  return *(void *)(v0 + 56);
}

uint64_t sub_24556D12C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_24556D16C())()
{
  return j_j__swift_endAccess_1_1;
}

uint64_t sub_24556D1C0(uint64_t a1, void *a2)
{
  sub_2454A1140(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + 64;
  swift_beginAccess();
  sub_24550AAD0((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_24556D220@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_2454A1140(v1 + 64, a1);
}

uint64_t sub_24556D26C(uint64_t a1)
{
  swift_beginAccess();
  sub_24550AAD0(a1, v1 + 64);
  return swift_endAccess();
}

uint64_t (*sub_24556D2C0())()
{
  return j_j__swift_endAccess_1_3;
}

uint64_t sub_24556D314()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t sub_24556D348(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 96) = a1;
  return result;
}

uint64_t (*sub_24556D388())()
{
  return j_j__swift_endAccess_1_8;
}

uint64_t sub_24556D3DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 104) = v3;
  *(void *)(v4 + 112) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24556D43C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24556D488(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24556D4DC())()
{
  return j_j__swift_endAccess_1_4;
}

void static Schema.Attribute.Option.unique.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  *(_DWORD *)(a1 + 33) = 0;
  *(unsigned char *)(a1 + 37) = 0;
}

uint64_t static Schema.Attribute.Option.transformable(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = 1;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(_DWORD *)(a3 + 32) = 0;
  *(_WORD *)(a3 + 36) = 0;
  return swift_bridgeObjectRetain();
}

void static Schema.Attribute.Option.externalStorage.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 32) = 256;
  *(_DWORD *)(a1 + 34) = 0;
}

double static Schema.Attribute.Option.allowsCloudEncryption.getter@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 32) = 0;
  *(void *)&double result = 0x100000001;
  *(_DWORD *)(a1 + 34) = 1;
  return result;
}

void static Schema.Attribute.Option.preserveValueOnDeletion.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 31) = 0;
  *(_WORD *)(a1 + 35) = 1;
  *(unsigned char *)(a1 + 37) = 0;
}

void static Schema.Attribute.Option.ephemeral.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 29) = 0;
  *(unsigned char *)(a1 + 37) = 1;
}

void static Schema.Attribute.Option.spotlight.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 36) = 1;
}

uint64_t sub_24556D600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(void *)(v3 + 104) = 0;
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = MEMORY[0x263F8EE80];
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 56) = a3;
  if (swift_conformsToProtocol2()) {
    uint64_t v5 = a3;
  }
  else {
    uint64_t v5 = 0;
  }
  *(unsigned char *)(v3 + 96) = v5 != 0;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0xE000000000000000;
  *(void *)(v3 + 48) = MEMORY[0x263F8EE78];
  return v3;
}

uint64_t Schema.Attribute.__allocating_init(_:originalName:hashModifier:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v10;
  *(void *)(v10 + 104) = 0;
  uint64_t v12 = (void *)(v10 + 104);
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  uint64_t v13 = MEMORY[0x263F8EE80];
  *(void *)(v10 + 112) = 0;
  *(void *)(v10 + 120) = v13;
  if (a3) {
    uint64_t v14 = a2;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a3) {
    unint64_t v15 = a3;
  }
  else {
    unint64_t v15 = 0xE000000000000000;
  }
  *(void *)(v10 + 32) = v14;
  *(void *)(v10 + 40) = v15;
  *(void *)(v10 + 48) = a1;
  swift_beginAccess();
  void *v12 = a4;
  *(void *)(v11 + 112) = a5;
  swift_bridgeObjectRelease();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0xE000000000000000;
  *(void *)(v11 + 56) = MEMORY[0x263F8EE58] + 8;
  *(unsigned char *)(v11 + 96) = 0;
  return v11;
}

uint64_t sub_24556D768()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C616E696769726FLL;
      break;
    case 2:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 3:
      uint64_t result = 0x70795465756C6176;
      break;
    case 4:
      uint64_t result = 0x69646F4D68736168;
      break;
    case 5:
      uint64_t result = 0x6E6F6974704F7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24556D848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_245577C7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24556D870()
{
  return 0;
}

void sub_24556D87C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24556D888(uint64_t a1)
{
  unint64_t v2 = sub_24556FD28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24556D8C4(uint64_t a1)
{
  unint64_t v2 = sub_24556FD28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Schema.Attribute.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  Schema.Attribute.init(from:)(a1);
  return v2;
}

uint64_t Schema.Attribute.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3EE8);
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v3;
  *(_OWORD *)(v3 + 64) = 0u;
  uint64_t v9 = v3 + 64;
  *(void *)(v9 + 40) = 0;
  *(_OWORD *)(v9 + 16) = 0u;
  uint64_t v10 = MEMORY[0x263F8EE80];
  *(void *)(v9 + 48) = 0;
  *(void *)(v9 + 56) = v10;
  uint64_t v11 = a1[3];
  uint64_t v23 = a1;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, v11);
  sub_24556FD28();
  sub_24558F878();
  if (v2)
  {
    uint64_t v12 = (uint64_t)v23;
    sub_2454CED84(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for Schema.Attribute();
    swift_deallocPartialClassInstance();
    uint64_t v20 = v12;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1Tm_7(v20);
    return v8;
  }
  uint64_t v13 = v22;
  LOBYTE(v24) = 0;
  *(void *)(v8 + 16) = sub_24558F388();
  *(void *)(v8 + 24) = v14;
  LOBYTE(v24) = 1;
  *(void *)(v8 + 32) = sub_24558F388();
  *(void *)(v8 + 40) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3EF8);
  char v25 = 2;
  sub_24556FDD0(&qword_268EE3F00, &qword_268EE3EF8, (void (*)(void))sub_24556FD7C);
  sub_24558F3B8();
  *(void *)(v8 + 48) = v24;
  LOBYTE(v24) = 3;
  sub_24558F388();
  uint64_t v21 = sub_24558EF98();
  uint64_t result = swift_bridgeObjectRelease();
  if (v21)
  {
    *(void *)(v8 + 56) = v21;
    LOBYTE(v24) = 4;
    uint64_t v17 = sub_24558F298();
    uint64_t v19 = v18;
    swift_beginAccess();
    *(void *)(v8 + 104) = v17;
    *(void *)(v8 + 112) = v19;
    swift_bridgeObjectRelease();
    char v25 = 5;
    LOBYTE(v17) = sub_24558F398();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v5);
    *(unsigned char *)(v8 + 96) = v17 & 1;
    uint64_t v20 = (uint64_t)v23;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_24556DD30(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_24556FD28();
  sub_24558F888();
  swift_beginAccess();
  char v16 = 0;
  swift_bridgeObjectRetain();
  sub_24558F408();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v15 = 1;
    swift_bridgeObjectRetain();
    sub_24558F408();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v14 = *(void *)(v3 + 48);
    LOBYTE(v12) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3EF8);
    sub_24556FDD0(&qword_268EE3F18, &qword_268EE3EF8, (void (*)(void))sub_24556FE3C);
    sub_24558F468();
    swift_beginAccess();
    uint64_t v12 = sub_24558F118();
    uint64_t v13 = v10;
    LOBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3660);
    sub_2455785D4(&qword_268EE3F28, &qword_268EE3660);
    sub_24558F468();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    long long v11 = *(_OWORD *)(v3 + 104);
    char v17 = 4;
    sub_24558F468();
    swift_beginAccess();
    char v17 = 5;
    sub_24558F418();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_24556E0FC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24556E164()
{
  return 1;
}

uint64_t sub_24556E16C()
{
  return 0;
}

uint64_t sub_24556E174()
{
  return 0;
}

uint64_t sub_24556E17C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = (unsigned __int8 *)(v1 + 32);
  uint64_t v4 = v2 - 1;
  do
  {
    uint64_t result = *v3;
    if (result) {
      break;
    }
    uint64_t v6 = v4--;
    v3 += 40;
  }
  while (v6);
  return result;
}

uint64_t sub_24556E1E0()
{
  *(void *)&long long v6 = 0;
  *((void *)&v6 + 1) = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_24558E668();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  MEMORY[0x2456A1220](v1, &type metadata for Schema.Attribute.Option);
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  sub_24558F908();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  sub_2454A1140(v0 + 64, (uint64_t)&v4);
  if (v5)
  {
    sub_2454A0BBC(&v4, &v6);
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8D310];
    *(void *)&long long v6 = 7104878;
    *((void *)&v6 + 1) = 0xE300000000000000;
    sub_2454CED84((uint64_t)&v4);
  }
  sub_24558F0E8();
  __swift_destroy_boxed_opaque_existential_1Tm_7((uint64_t)&v6);
  sub_24558E668();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 112);
  *(void *)&long long v4 = *(void *)(v0 + 104);
  *((void *)&v4 + 1) = v2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3660);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t Schema.Attribute.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2454CED84(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24556E49C()
{
  return sub_24558F818();
}

uint64_t (*sub_24556E510())()
{
  return j_j__swift_endAccess_1_5;
}

uint64_t (*sub_24556E570())()
{
  return j_j__swift_endAccess_1_6;
}

uint64_t sub_24556E5C8(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 56) = a1;
  return result;
}

uint64_t (*sub_24556E60C())()
{
  return j_j__swift_endAccess_1_7;
}

uint64_t sub_24556E664()
{
  return 0;
}

uint64_t sub_24556E66C()
{
  return 0;
}

uint64_t sub_24556E674()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 96);
}

uint64_t sub_24556E6B4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 432))();
}

uint64_t sub_24556E700@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 360))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_24556E73C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 368))();
}

uint64_t sub_24556E788()
{
  return sub_24558F818();
}

uint64_t sub_24556E7FC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24556E868()
{
  return sub_24558F818();
}

BOOL sub_24556E8D8(void **a1, void **a2)
{
  return _s9SwiftData6SchemaC9AttributeC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t Schema.CompositeAttribute.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.CompositeAttribute.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 128) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.CompositeAttribute.properties.modify())()
{
  return j_j__swift_endAccess_1_9;
}

uint64_t sub_24556E9C0()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C616E696769726FLL;
      break;
    case 2:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 3:
      uint64_t result = 0x70795465756C6176;
      break;
    case 4:
      uint64_t result = 0x69747265706F7270;
      break;
    case 5:
      uint64_t result = 0x6E6F6974704F7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24556EAA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2455779BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24556EAC8()
{
  return 0;
}

void sub_24556EAD4(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24556EAE0(uint64_t a1)
{
  unint64_t v2 = sub_24557737C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24556EB1C(uint64_t a1)
{
  unint64_t v2 = sub_24557737C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 128) = MEMORY[0x263F8EE78];
  char v17 = (void *)(v9 + 128);
  sub_2454A1140(a7, (uint64_t)&v105);
  swift_bridgeObjectRetain();
  Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(a1, a2, a3, a4, a5, a6, (uint64_t)&v105, a8, a9);
  *(void *)&long long v105 = a6;
  if (swift_conformsToProtocol2()) {
    uint64_t v18 = a6;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v18)
  {
    do
    {
      sub_24549E524(v18, (uint64_t *)&v105);
      uint64_t v19 = (unint64_t *)v105;
      if (swift_conformsToProtocol2()) {
        uint64_t v18 = (uint64_t)v19;
      }
      else {
        uint64_t v18 = 0;
      }
    }
    while (v18);
  }
  else
  {
    uint64_t v19 = (unint64_t *)a6;
  }
  unint64_t v20 = *v19;
  uint64_t v103 = v9;
  if (*v19 > 0x7FF) {
    goto LABEL_55;
  }
  if (v20 - 513 >= 2)
  {
    if (v20 == 512)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      if (sub_24558E388())
      {
        uint64_t v31 = 0;
        uint64_t v32 = MEMORY[0x263F8EE78];
        while (v31 < sub_24558E388())
        {
          uint64_t v33 = sub_24558E378();
          *(void *)&long long v105 = v33;
          if (swift_conformsToProtocol2()) {
            uint64_t v34 = v33;
          }
          else {
            uint64_t v34 = 0;
          }
          if (v34)
          {
            do
            {
              sub_24549E524(v34, (uint64_t *)&v105);
              uint64_t v35 = v105;
              if (swift_conformsToProtocol2()) {
                uint64_t v34 = v35;
              }
              else {
                uint64_t v34 = 0;
              }
            }
            while (v34);
          }
          else
          {
            uint64_t v35 = v33;
          }
          if (sub_2454A6D54(v35) || (swift_conformsToProtocol2() ? (uint64_t v36 = v35) : (uint64_t v36 = 0), v36))
          {
            uint64_t v37 = sub_24558E368();
            uint64_t v39 = v38;
            type metadata accessor for Schema.Attribute();
            swift_allocObject();
            sub_24556D600(v37, v39, v33);
          }
          else
          {
            uint64_t v41 = sub_24558E368();
            uint64_t v43 = v42;
            long long v105 = 0u;
            long long v106 = 0u;
            swift_allocObject();
            Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(v41, v43, 0, 0, v32, v33, &v105, 0, 0);
          }
          swift_beginAccess();
          uint64_t v40 = swift_retain();
          MEMORY[0x2456A11F0](v40);
          if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24558E808();
          }
          sub_24558E858();
          sub_24558E7E8();
          swift_endAccess();
          ++v31;
          swift_release();
          if (v31 == sub_24558E388()) {
            goto LABEL_71;
          }
        }
        goto LABEL_128;
      }
      goto LABEL_71;
    }
LABEL_55:
    swift_retain();
    swift_bridgeObjectRelease();
    unint64_t v44 = *v19;
    unint64_t v45 = sub_24558E308();
    if (v44 > 0x7FF)
    {
      if (v45 - 2048 >= 0xFFFFFFFFFFFFF801) {
        goto LABEL_75;
      }
    }
    else if (v45 >= 0x800)
    {
      if (v44) {
        goto LABEL_75;
      }
    }
    else if (v44 != v45)
    {
      goto LABEL_75;
    }
    if (sub_24558E388())
    {
      uint64_t v46 = 0;
      uint64_t v47 = MEMORY[0x263F8EE78];
      while (v46 < sub_24558E388())
      {
        uint64_t v48 = sub_24558E378();
        uint64_t v49 = sub_24558E368();
        uint64_t v51 = v50;
        if (!sub_24558E638())
        {
          swift_bridgeObjectRelease();
          *(void *)&long long v105 = 95;
          *((void *)&v105 + 1) = 0xE100000000000000;
          sub_24558F558();
          sub_24558E668();
          swift_bridgeObjectRelease();
          uint64_t v51 = *((void *)&v105 + 1);
          uint64_t v49 = v105;
        }
        if (sub_2454A6D54(v48))
        {
          type metadata accessor for Schema.Attribute();
          uint64_t v52 = swift_allocObject();
          sub_24556D600(v49, v51, v48);
          swift_beginAccess();
          *(unsigned char *)(v52 + 96) = 1;
        }
        else
        {
          long long v105 = 0u;
          long long v106 = 0u;
          uint64_t v53 = swift_allocObject();
          Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(v49, v51, 0, 0, v47, v48, &v105, 0, 0);
          swift_beginAccess();
          *(unsigned char *)(v53 + 96) = 1;
          swift_beginAccess();
          unint64_t v54 = swift_bridgeObjectRetain();
          sub_24556FFCC(v54);
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        uint64_t v55 = swift_retain();
        MEMORY[0x2456A11F0](v55);
        if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24558E808();
        }
        ++v46;
        sub_24558E858();
        sub_24558E7E8();
        swift_endAccess();
        swift_release();
        if (v46 == sub_24558E388()) {
          goto LABEL_71;
        }
      }
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      *(void *)&long long v105 = 0;
      *((void *)&v105 + 1) = 0xE000000000000000;
      sub_24558EF78();
      sub_24558E668();
      sub_24558E318();
      sub_24558E668();
      swift_bridgeObjectRelease();
      while (1)
      {
        sub_24558F1A8();
        __break(1u);
LABEL_75:
        *(void *)&long long v105 = 0;
        *((void *)&v105 + 1) = 0xE000000000000000;
        sub_24558EF78();
        sub_24558E668();
        sub_24558F908();
        sub_24558E668();
        swift_bridgeObjectRelease();
      }
    }
LABEL_71:
    sub_2454CED84(a7);
    uint64_t v28 = v103;
    goto LABEL_72;
  }
  swift_retain();
  unint64_t v21 = 0;
  if (v20 > 0x7FF) {
    goto LABEL_24;
  }
LABEL_21:
  if (v20 - 513 >= 2)
  {
LABEL_24:
    while (v21)
    {
LABEL_15:
      if (v20 - 513 > 1)
      {
        unint64_t v23 = 0;
      }
      else
      {
        swift_getKeyPath();
        uint64_t v22 = sub_24558EDB8();
        swift_release();
        unint64_t v23 = (*(_DWORD *)(*(unint64_t *)((char *)v19 + v22) + 20) & 0xFFFFFF)
            + (unint64_t)*(unsigned int *)(*(unint64_t *)((char *)v19 + v22) + 24);
      }
      if (v21 >= v23) {
        goto LABEL_126;
      }
      swift_getKeyPath();
      uint64_t v24 = sub_24558EDB8();
      swift_release();
      char v25 = *(long long **)((char *)v19 + v24);
      swift_getKeyPath();
      sub_24558EDB8();
      int v26 = *((_DWORD *)v25 + 4);
      long long v105 = *v25;
      LODWORD(v106) = v26;
      swift_getAtKeyPath();
      swift_release();
      if (*(unsigned char *)sub_24558E2F8()) {
        goto LABEL_129;
      }
      ++v21;
      unint64_t v20 = *v19;
      if (*v19 <= 0x7FF) {
        goto LABEL_21;
      }
    }
  }
  else
  {
    swift_getKeyPath();
    uint64_t v27 = sub_24558EDB8();
    swift_release();
    if (v21 != (*(_DWORD *)(*(unint64_t *)((char *)v19 + v27) + 20) & 0xFFFFFF)
              + (unint64_t)*(unsigned int *)(*(unint64_t *)((char *)v19 + v27) + 24))
    {
      unint64_t v20 = *v19;
      goto LABEL_15;
    }
  }
  *((void *)&v106 + 1) = MEMORY[0x263F8D4F8];
  LOBYTE(v105) = 1;
  uint64_t v28 = v9;
  uint64_t v29 = v9 + 120;
  swift_beginAccess();
  swift_retain();
  sub_24551EA58((uint64_t)&v105, 0x657079546D756E45, 0xE800000000000000);
  swift_endAccess();
  swift_release();
  if (swift_conformsToProtocol2()) {
    uint64_t v30 = (uint64_t)v19;
  }
  else {
    uint64_t v30 = 0;
  }
  if (v30)
  {
    sub_24556FE90(v30, a1, a2, v103);
    swift_bridgeObjectRelease();
    swift_release();
    sub_2454CED84(a7);
    return v28;
  }
  unint64_t v102 = (uint64_t *)v29;
  swift_bridgeObjectRelease();
  unint64_t v57 = 0;
  while (1)
  {
    unint64_t v60 = *v19;
    if (*v19 <= 0x7FF && v60 - 513 < 2)
    {
      swift_getKeyPath();
      uint64_t v61 = sub_24558EDB8();
      swift_release();
      if (v57 == (*(_DWORD *)(*(unint64_t *)((char *)v19 + v61) + 20) & 0xFFFFFF)
                + (unint64_t)*(unsigned int *)(*(unint64_t *)((char *)v19 + v61) + 24))
        break;
      unint64_t v60 = *v19;
      goto LABEL_86;
    }
    if (!v57) {
      break;
    }
LABEL_86:
    if (v60 - 513 > 1)
    {
      unint64_t v63 = 0;
    }
    else
    {
      swift_getKeyPath();
      uint64_t v62 = sub_24558EDB8();
      swift_release();
      unint64_t v63 = (*(_DWORD *)(*(unint64_t *)((char *)v19 + v62) + 20) & 0xFFFFFF)
          + (unint64_t)*(unsigned int *)(*(unint64_t *)((char *)v19 + v62) + 24);
    }
    if (v57 >= v63) {
      goto LABEL_127;
    }
    int64_t v64 = (unint64_t *)sub_24558E328();
    if (v64)
    {
      uint64_t v65 = (uint64_t)v64;
      unint64_t v66 = *v64;
      unint64_t v67 = sub_24558E308();
      if (v66 >= 0x800)
      {
        if (v67 - 2048 >= 0xFFFFFFFFFFFFF801) {
          goto LABEL_108;
        }
        goto LABEL_104;
      }
      if (v67 >= 0x800)
      {
        if (v66) {
          goto LABEL_108;
        }
        goto LABEL_104;
      }
      if (v66 == v67)
      {
LABEL_104:
        uint64_t v78 = sub_24558E338();
        uint64_t v80 = v79;
        long long v105 = 0u;
        long long v106 = 0u;
        uint64_t v81 = swift_allocObject();
        Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(v78, v80, 0, 0, MEMORY[0x263F8EE78], v65, &v105, 0, 0);
        swift_beginAccess();
        *(unsigned char *)(v81 + 96) = 1;
        swift_beginAccess();
        uint64_t v82 = swift_retain();
        MEMORY[0x2456A11F0](v82);
        if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24558E808();
        }
        sub_24558E858();
        sub_24558E7E8();
        swift_endAccess();
LABEL_80:
        swift_release();
        ++v57;
      }
      else
      {
LABEL_108:
        uint64_t v83 = sub_24558E338();
        uint64_t v85 = v84;
        uint64_t v86 = swift_allocObject();
        *(void *)(v86 + 128) = MEMORY[0x263F8EE78];
        sub_24556D600(v83, v85, v65);
        swift_beginAccess();
        *(unsigned char *)(v86 + 96) = 1;
        if (sub_2454A6D54(v65))
        {
          type metadata accessor for Schema.Attribute();
          uint64_t v87 = swift_allocObject();
          sub_24556D600(12383, 0xE200000000000000, v65);
          swift_beginAccess();
          *(unsigned char *)(v87 + 96) = 1;
        }
        else
        {
          long long v105 = 0u;
          long long v106 = 0u;
          uint64_t v88 = swift_allocObject();
          Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(12383, 0xE200000000000000, 0, 0, MEMORY[0x263F8EE78], v65, &v105, 0, 0);
          swift_beginAccess();
          *(unsigned char *)(v88 + 96) = 1;
          swift_beginAccess();
          unint64_t v89 = swift_bridgeObjectRetain();
          sub_24556FFB4(v89);
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        uint64_t v90 = swift_retain();
        MEMORY[0x2456A11F0](v90);
        if (*(void *)((*(void *)(v86 + 128) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v86 + 128) & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
          sub_24558E808();
        sub_24558E858();
        sub_24558E7E8();
        swift_endAccess();
        swift_beginAccess();
        uint64_t v91 = swift_retain();
        MEMORY[0x2456A11F0](v91);
        if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24558E808();
        }
        sub_24558E858();
        sub_24558E7E8();
        swift_endAccess();
        swift_release();
        swift_release();
        uint64_t v28 = v103;
        ++v57;
      }
    }
    else
    {
      uint64_t v68 = sub_24558E338();
      uint64_t v70 = v69;
      type metadata accessor for Schema.Attribute();
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 64) = 0u;
      *(_OWORD *)(v71 + 80) = 0u;
      *(void *)(v71 + 104) = 0;
      *(void *)(v71 + 112) = 0;
      *(void *)(v71 + 120) = MEMORY[0x263F8EE80];
      *(void *)(v71 + 16) = v68;
      *(void *)(v71 + 24) = v70;
      uint64_t v72 = MEMORY[0x263F8D310];
      *(void *)(v71 + 56) = MEMORY[0x263F8D310];
      if (swift_conformsToProtocol2()) {
        uint64_t v73 = v72;
      }
      else {
        uint64_t v73 = 0;
      }
      *(unsigned char *)(v71 + 96) = v73 != 0;
      *(void *)(v71 + 32) = 0;
      *(void *)(v71 + 40) = 0xE000000000000000;
      *(void *)(v71 + 48) = MEMORY[0x263F8EE78];
      swift_beginAccess();
      *(unsigned char *)(v71 + 96) = 1;
      swift_beginAccess();
      uint64_t v74 = swift_retain();
      MEMORY[0x2456A11F0](v74);
      if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24558E808();
      }
      sub_24558E858();
      sub_24558E7E8();
      swift_endAccess();
      uint64_t v75 = *v102;
      if (!*(void *)(*v102 + 16))
      {
        long long v105 = 0u;
        long long v106 = 0u;
LABEL_78:
        sub_2454CED84((uint64_t)&v105);
LABEL_79:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA220);
        uint64_t v58 = swift_allocObject();
        *(_OWORD *)(v58 + 16) = xmmword_245597620;
        swift_retain();
        *(void *)(v58 + 32) = sub_24558E338();
        *(void *)(v58 + 40) = v59;
        *((void *)&v106 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9F58);
        *(void *)&long long v105 = v58;
        swift_beginAccess();
        sub_24551EA58((uint64_t)&v105, 1836412517, 0xE400000000000000);
        swift_endAccess();
        swift_release();
        goto LABEL_80;
      }
      swift_bridgeObjectRetain();
      unint64_t v76 = sub_2454A0B40(1836412517, 0xE400000000000000);
      if (v77)
      {
        sub_2454CE878(*(void *)(v75 + 56) + 32 * v76, (uint64_t)&v105);
      }
      else
      {
        long long v105 = 0u;
        long long v106 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v106 + 1)) {
        goto LABEL_78;
      }
      uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9F58);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_79;
      }
      uint64_t v93 = v104;
      uint64_t v94 = sub_24558E338();
      uint64_t v100 = v95;
      uint64_t v96 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v93 = sub_2454C22EC(0, v104[2] + 1, 1, v104);
      }
      unint64_t v98 = v93[2];
      unint64_t v97 = v93[3];
      if (v98 >= v97 >> 1) {
        uint64_t v93 = sub_2454C22EC((void *)(v97 > 1), v98 + 1, 1, v93);
      }
      v93[2] = v98 + 1;
      BOOL v99 = &v93[2 * v98];
      v99[4] = v96;
      v99[5] = v100;
      *((void *)&v106 + 1) = v92;
      *(void *)&long long v105 = v93;
      swift_beginAccess();
      uint64_t v28 = v103;
      swift_retain();
      sub_24551EA58((uint64_t)&v105, 1836412517, 0xE400000000000000);
      swift_endAccess();
      swift_release();
      swift_release();
      ++v57;
    }
  }
  sub_2454CED84(a7);
LABEL_72:
  swift_release();
  return v28;
}

unint64_t sub_24556FD28()
{
  unint64_t result = qword_268EE3EF0;
  if (!qword_268EE3EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3EF0);
  }
  return result;
}

unint64_t sub_24556FD7C()
{
  unint64_t result = qword_268EE3F08;
  if (!qword_268EE3F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3F08);
  }
  return result;
}

uint64_t sub_24556FDD0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24556FE3C()
{
  unint64_t result = qword_268EE3F20;
  if (!qword_268EE3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3F20);
  }
  return result;
}

uint64_t sub_24556FE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for Schema.Attribute();
  uint64_t v8 = swift_allocObject();
  sub_24556D600(a2, a3, AssociatedTypeWitness);
  swift_beginAccess();
  *(unsigned char *)(v8 + 96) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_retain();
  MEMORY[0x2456A11F0](v9);
  if (*(void *)((*(void *)(a4 + 128) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a4 + 128) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_24558E808();
  sub_24558E858();
  sub_24558E7E8();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_24556FFB4(unint64_t a1)
{
  return sub_24556FFE4(a1, (void (*)(uint64_t))sub_24556FFB4);
}

uint64_t sub_24556FFCC(unint64_t a1)
{
  return sub_24556FFE4(a1, (void (*)(uint64_t))sub_24556FFCC);
}

uint64_t sub_24556FFE4(unint64_t a1, void (*a2)(uint64_t))
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_16:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_24558F1C8();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = 0;
      do
      {
        uint64_t v7 = MEMORY[0x2456A1A40](v6, a1);
        type metadata accessor for Schema.CompositeAttribute();
        if (swift_dynamicCastClass())
        {
          swift_beginAccess();
          uint64_t v8 = swift_bridgeObjectRetain();
          a2(v8);
          swift_bridgeObjectRelease();
        }
        ++v6;
        swift_beginAccess();
        *(unsigned char *)(v7 + 96) = 1;
        swift_unknownObjectRelease();
      }
      while (v4 != v6);
    }
    else
    {
      type metadata accessor for Schema.CompositeAttribute();
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = *(void *)(a1 + 8 * v9 + 32);
        if (swift_dynamicCastClass())
        {
          swift_beginAccess();
          swift_retain();
          uint64_t v11 = swift_bridgeObjectRetain();
          a2(v11);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain();
        }
        ++v9;
        swift_beginAccess();
        *(unsigned char *)(v10 + 96) = 1;
        swift_release();
      }
      while (v4 != v9);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t Schema.CompositeAttribute.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  Schema.CompositeAttribute.init(from:)(a1);
  return v2;
}

uint64_t Schema.CompositeAttribute.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 128) = MEMORY[0x263F8EE78];
  sub_245577318((uint64_t)a1, (uint64_t)v12);
  Schema.Attribute.init(from:)(v12);
  if (!v2)
  {
    uint64_t v11 = v6;
    __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
    sub_24557737C();
    swift_retain();
    sub_24558F878();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F40);
    LOBYTE(v12[0]) = 4;
    sub_2455773D0(&qword_268EE3F48, &qword_26B0DA180);
    sub_24558F3B8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v5);
    swift_release();
    uint64_t v10 = v12[6];
    swift_beginAccess();
    *(void *)(v3 + 128) = v10;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1Tm_7((uint64_t)a1);
  return v3;
}

uint64_t Schema.CompositeAttribute.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_24557737C();
  sub_24558F888();
  swift_beginAccess();
  char v18 = 0;
  swift_bridgeObjectRetain();
  sub_24558F408();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v17 = 1;
    swift_bridgeObjectRetain();
    sub_24558F408();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v16 = *(void *)(v3 + 48);
    char v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3EF8);
    sub_24556FDD0(&qword_268EE3F18, &qword_268EE3EF8, (void (*)(void))sub_24556FE3C);
    sub_24558F468();
    swift_beginAccess();
    char v15 = 5;
    sub_24558F418();
    swift_beginAccess();
    uint64_t v13 = sub_24558F118();
    uint64_t v14 = v10;
    LOBYTE(v12) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3660);
    sub_2455785D4(&qword_268EE3F28, &qword_268EE3660);
    sub_24558F468();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v12 = *(void *)(v3 + 128);
    v11[7] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F40);
    sub_2455773D0(&qword_268EE3F58, &qword_26B0DA168);
    sub_24558F468();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t Schema.CompositeAttribute.debugDescription.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA220);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_245599550;
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_24558E668();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  MEMORY[0x2456A1220](v2, &type metadata for Schema.Attribute.Option);
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  sub_24558F908();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  sub_2454A1140(v0 + 64, (uint64_t)&v13);
  if (v14)
  {
    sub_2454A0BBC(&v13, &v15);
  }
  else
  {
    uint64_t v16 = MEMORY[0x263F8D310];
    *(void *)&long long v15 = 7104878;
    *((void *)&v15 + 1) = 0xE300000000000000;
    sub_2454CED84((uint64_t)&v13);
  }
  sub_24558F0E8();
  __swift_destroy_boxed_opaque_existential_1Tm_7((uint64_t)&v15);
  unint64_t v3 = v18;
  *(void *)(v1 + 32) = v17;
  *(void *)(v1 + 40) = v3;
  *(void *)(v1 + 48) = 0xD000000000000011;
  *(void *)(v1 + 56) = 0x8000000245595700;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v0 + 128);
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    *(void *)&long long v13 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9F58);
    sub_2454F2B14();
    uint64_t v12 = sub_24558E4E8();
    swift_bridgeObjectRelease();
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_24558F1C8();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_6:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = MEMORY[0x2456A1A40](v7, v4);
      }
      else
      {
        uint64_t v8 = *(void *)(v4 + 8 * v7 + 32);
        swift_retain();
      }
      *(void *)&long long v13 = 0;
      *((void *)&v13 + 1) = 0xE000000000000000;
      sub_24558E668();
      uint64_t v17 = v8;
      type metadata accessor for Schema.Attribute();
      sub_24558F0E8();
      long long v9 = v13;
      unint64_t v11 = *(void *)(v1 + 16);
      unint64_t v10 = *(void *)(v1 + 24);
      if (v11 >= v10 >> 1) {
        uint64_t v1 = (uint64_t)sub_2454C22EC((void *)(v10 > 1), v11 + 1, 1, (void *)v1);
      }
      ++v7;
      *(void *)(v1 + 16) = v11 + 1;
      *(_OWORD *)(v1 + 16 * v11 + 32) = v9;
      swift_release();
    }
    while (v5 != v7);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void Schema.CompositeAttribute.__allocating_init(_:originalName:hashModifier:)()
{
}

void Schema.CompositeAttribute.init(_:originalName:hashModifier:)()
{
}

uint64_t sub_245570CD8()
{
  return swift_bridgeObjectRelease();
}

uint64_t Schema.CompositeAttribute.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2454CED84(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Schema.CompositeAttribute.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2454CED84(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_245570D9C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_245570DEC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.name.modify())()
{
  return j_j__swift_endAccess_1_10;
}

uint64_t sub_245570E98()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_245570EE8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.originalName.modify())()
{
  return j_j__swift_endAccess_1_14;
}

uint64_t Schema.Relationship.keypath.getter()
{
  return swift_retain();
}

uint64_t Schema.Relationship.keypath.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*Schema.Relationship.keypath.modify())()
{
  return j_j__swift_endAccess_1_11;
}

uint64_t Schema.Relationship.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Relationship.options.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.options.modify())()
{
  return j_j__swift_endAccess_1_12;
}

uint64_t Schema.Relationship.valueType.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 64);
}

uint64_t Schema.Relationship.valueType.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*Schema.Relationship.valueType.modify())()
{
  return j_j__swift_endAccess_1_13;
}

uint64_t Schema.Relationship.destination.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Relationship.destination.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.destination.modify())()
{
  return j_j__swift_endAccess_1_15;
}

uint64_t Schema.Relationship.deleteRule.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 88);
  return result;
}

uint64_t Schema.Relationship.deleteRule.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 88) = v2;
  return result;
}

uint64_t (*Schema.Relationship.deleteRule.modify())()
{
  return j__swift_endAccess_1;
}

uint64_t Schema.Relationship.inverseName.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Relationship.inverseName.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.inverseName.modify())()
{
  return j_j__swift_endAccess_1_16;
}

uint64_t Schema.Relationship.inverseKeyPath.getter()
{
  return swift_retain();
}

uint64_t Schema.Relationship.inverseKeyPath.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t (*Schema.Relationship.inverseKeyPath.modify())()
{
  return j_j__swift_endAccess_1_17;
}

uint64_t Schema.Relationship.minimumModelCount.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 120);
}

uint64_t Schema.Relationship.minimumModelCount.setter(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 120) = a1;
  *(unsigned char *)(v2 + 128) = a2 & 1;
  return result;
}

uint64_t (*Schema.Relationship.minimumModelCount.modify())()
{
  return j_j__swift_endAccess_1_18;
}

uint64_t Schema.Relationship.maximumModelCount.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 136);
}

uint64_t Schema.Relationship.maximumModelCount.setter(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 136) = a1;
  *(unsigned char *)(v2 + 144) = a2 & 1;
  return result;
}

uint64_t (*Schema.Relationship.maximumModelCount.modify())()
{
  return j_j__swift_endAccess_1_19;
}

uint64_t Schema.Relationship.hashModifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Relationship.hashModifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 152) = a1;
  *(void *)(v2 + 160) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.hashModifier.modify())()
{
  return j_j__swift_endAccess_1_20;
}

uint64_t Schema.Relationship.DeleteRule.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_24558F288();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 4;
  if (v2 < 4) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t Schema.Relationship.DeleteRule.rawValue.getter()
{
  uint64_t result = 0x6E6F697463416F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7966696C6C756ELL;
      break;
    case 2:
      uint64_t result = 0x65646163736163;
      break;
    case 3:
      uint64_t result = 2037278052;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_245571930(unsigned __int8 *a1, char *a2)
{
  return sub_24556C320(*a1, *a2);
}

uint64_t sub_24557193C()
{
  return sub_24558F818();
}

uint64_t sub_245571A10()
{
  sub_24558E628();

  return swift_bridgeObjectRelease();
}

uint64_t sub_245571ACC()
{
  return sub_24558F818();
}

uint64_t sub_245571B9C@<X0>(char *a1@<X8>)
{
  return Schema.Relationship.DeleteRule.init(rawValue:)(a1);
}

void sub_245571BA8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x6E6F697463416F6ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x7966696C6C756ELL;
      goto LABEL_3;
    case 2:
      *a1 = 0x65646163736163;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 2037278052;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_245571C3C()
{
  return sub_24558E798();
}

uint64_t sub_245571C9C()
{
  return sub_24558E788();
}

void static Schema.Relationship.Option.unique.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Schema.Relationship.Option.debugDescription.getter()
{
  if (*v0 == 1) {
    sub_24558E668();
  }
  return 0;
}

uint64_t Schema.Relationship.Option.hash(into:)()
{
  return sub_24558F7F8();
}

BOOL static Schema.Relationship.Option.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_245571D98()
{
  return 1;
}

uint64_t sub_245571DA4()
{
  return sub_24558F7E8();
}

uint64_t sub_245571DD0()
{
  return 0x7571696E5573695FLL;
}

uint64_t sub_245571DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7571696E5573695FLL && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24558F598();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_245571E90()
{
  return 0;
}

void sub_245571E9C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_245571EA8(uint64_t a1)
{
  unint64_t v2 = sub_245577464();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_245571EE4(uint64_t a1)
{
  unint64_t v2 = sub_245577464();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Schema.Relationship.Option.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_245577464();
  sub_24558F888();
  sub_24558F418();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Schema.Relationship.Option.hashValue.getter()
{
  return sub_24558F818();
}

uint64_t Schema.Relationship.Option.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_245577464();
  sub_24558F878();
  if (!v2)
  {
    char v9 = sub_24558F398();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm_7((uint64_t)a1);
}

uint64_t sub_2455721F0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Schema.Relationship.Option.init(from:)(a1, a2);
}

uint64_t sub_245572208(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_245577464();
  sub_24558F888();
  sub_24558F418();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24557233C()
{
  return sub_24558F818();
}

uint64_t sub_245572384()
{
  return sub_24558F7F8();
}

uint64_t sub_2455723B0()
{
  return sub_24558F818();
}

uint64_t sub_2455723F4()
{
  if (*v0 == 1) {
    sub_24558E668();
  }
  return 0;
}

BOOL sub_245572450(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Schema.Relationship.__allocating_init(_:deleteRule:minimumModelCount:maximumModelCount:originalName:inverse:hashModifier:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char v15 = a4 & 1;
  char v16 = a6 & 1;
  swift_allocObject();
  uint64_t v17 = sub_2454889A4(a1, a2, a3, v15, a5, v16, a7, a8, a9, a10, a11);
  swift_release();
  return v17;
}

unint64_t sub_24557251C(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C616E696769726FLL;
      break;
    case 2:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 3:
      unint64_t result = 0x70795465756C6176;
      break;
    case 4:
      unint64_t result = 0x74616E6974736564;
      break;
    case 5:
      unint64_t result = 0x75526574656C6564;
      break;
    case 6:
      unint64_t result = 0x4E65737265766E69;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x69646F4D68736168;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_245572678(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_245572690()
{
  return sub_24558F7E8();
}

unint64_t sub_2455726C0()
{
  return sub_24557251C(*v0);
}

uint64_t sub_2455726C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_245577538(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2455726F0()
{
  return 0;
}

void sub_2455726FC(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_245572708(uint64_t a1)
{
  unint64_t v2 = sub_245578228();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_245572744(uint64_t a1)
{
  unint64_t v2 = sub_245578228();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Schema.Relationship.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  Schema.Relationship.init(from:)(a1);
  return v2;
}

uint64_t Schema.Relationship.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v35 = *v3;
  uint64_t v36 = v2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F78);
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((unsigned char *)v3 + 88) = 1;
  v3[6] = 0;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((unsigned char *)v3 + 128) = 1;
  v3[17] = 0;
  *((unsigned char *)v3 + 144) = 1;
  v3[19] = 0;
  v3[20] = 0;
  *((_WORD *)v3 + 84) = 0;
  uint64_t v7 = a1[3];
  uint64_t v43 = a1;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, v7);
  sub_245578228();
  uint64_t v8 = v36;
  sub_24558F878();
  if (v8)
  {
    swift_release();
    uint64_t v11 = (uint64_t)v43;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    uint64_t v12 = v11;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1Tm_7(v12);
    return (uint64_t)v3;
  }
  uint64_t v36 = v3 + 12;
  uint64_t v32 = v3 + 17;
  LOBYTE(v41) = 0;
  uint64_t v9 = v33;
  v3[2] = sub_24558F388();
  v3[3] = v10;
  LOBYTE(v41) = 1;
  v3[4] = sub_24558F388();
  v3[5] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F88);
  char v40 = 2;
  sub_24556FDD0(&qword_268EE3F90, &qword_268EE3F88, (void (*)(void))sub_24557827C);
  sub_24558F3B8();
  v3[7] = v41;
  LOBYTE(v41) = 3;
  uint64_t v15 = sub_24558F388();
  uint64_t v31 = 0;
  uint64_t v30 = v15;
  uint64_t v16 = sub_24558EF98();
  if (v16)
  {
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v3[8] = v17;
    LOBYTE(v41) = 5;
    sub_2455782D0();
    sub_24558F3B8();
    v29[1] = v3 + 19;
    uint64_t v30 = (uint64_t)(v3 + 8);
    LOBYTE(v17) = v40;
    swift_beginAccess();
    *((unsigned char *)v3 + 88) = v17;
    char v40 = 4;
    v3[9] = sub_24558F388();
    v3[10] = v18;
    char v40 = 6;
    uint64_t v19 = sub_24558F298();
    uint64_t v21 = v20;
    swift_beginAccess();
    v3[12] = v19;
    v3[13] = v21;
    swift_bridgeObjectRelease();
    char v39 = 9;
    uint64_t v22 = sub_24558F298();
    uint64_t v24 = v23;
    swift_beginAccess();
    v3[19] = v22;
    v3[20] = v24;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *((unsigned char *)v3 + 168) = sub_2454C1648(v3[8]);
    char v38 = 7;
    uint64_t v25 = sub_24558F2D8();
    LOBYTE(v24) = v26;
    swift_beginAccess();
    v3[15] = v25;
    *((unsigned char *)v3 + 128) = v24 & 1;
    char v37 = 8;
    uint64_t v27 = sub_24558F2D8();
    LOBYTE(v24) = v28;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v9);
    swift_beginAccess();
    v3[17] = v27;
    *((unsigned char *)v3 + 144) = v24 & 1;
    uint64_t v12 = (uint64_t)v43;
    goto LABEL_4;
  }
  unint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_24558EF78();
  swift_bridgeObjectRelease();
  unint64_t v41 = 0xD000000000000021;
  unint64_t v42 = 0x8000000245595770;
  sub_24558E668();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t Schema.Relationship.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3FA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_245578228();
  sub_24558F888();
  swift_beginAccess();
  char v26 = 0;
  swift_bridgeObjectRetain();
  sub_24558F408();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v25 = 1;
    swift_bridgeObjectRetain();
    sub_24558F408();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v24 = *(void *)(v3 + 56);
    LOBYTE(v22) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3F88);
    sub_24556FDD0(&qword_268EE3FB0, &qword_268EE3F88, (void (*)(void))sub_245578324);
    sub_24558F468();
    swift_beginAccess();
    sub_24558F118();
    if (v10)
    {
      LOBYTE(v22) = 3;
      sub_24558F408();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      char v21 = *(unsigned char *)(v3 + 88);
      char v20 = 5;
      sub_245578378();
      sub_24558F468();
      swift_beginAccess();
      char v20 = 4;
      swift_bridgeObjectRetain();
      sub_24558F408();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      char v19 = 6;
      swift_bridgeObjectRetain();
      sub_24558F3F8();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      char v11 = *(unsigned char *)(v3 + 128);
      uint64_t v17 = *(void *)(v3 + 120);
      char v18 = v11;
      LOBYTE(v15) = 7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3FC8);
      sub_2455785D4(&qword_268EE3FD0, &qword_268EE3FC8);
      sub_24558F468();
      swift_beginAccess();
      char v12 = *(unsigned char *)(v3 + 144);
      uint64_t v15 = *(void *)(v3 + 136);
      char v16 = v12;
      LOBYTE(v14) = 8;
      sub_24558F468();
      swift_beginAccess();
      long long v14 = *(_OWORD *)(v3 + 152);
      v13[15] = 9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3660);
      sub_2455785D4(&qword_268EE3F28, &qword_268EE3660);
      sub_24558F468();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      unint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_24558EF78();
      swift_bridgeObjectRelease();
      unint64_t v22 = 0xD00000000000001FLL;
      unint64_t v23 = 0x80000002455957A0;
      swift_getMetatypeMetadata();
      sub_24558F908();
      sub_24558E668();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24558F1A8();
      __break(1u);
    }
  }
  return result;
}

uint64_t Schema.Relationship.isAttribute.getter()
{
  return 0;
}

uint64_t Schema.Relationship.isTransient.getter()
{
  return 0;
}

uint64_t Schema.Relationship.hash(into:)()
{
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Relationship.debugDescription.getter()
{
  sub_24558EF78();
  sub_24558E668();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x2456A1220](v0, &type metadata for Schema.Relationship.Option);
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  sub_24558F908();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3FD8);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t Schema.Relationship.hashValue.getter()
{
  return sub_24558F818();
}

uint64_t sub_245573860(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2455738B8())()
{
  return j_j__swift_endAccess_1_21;
}

uint64_t sub_245573914()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_245573968(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2455739C0())()
{
  return j_j__swift_endAccess_1_22;
}

uint64_t sub_245573A18(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 64) = a1;
  return result;
}

uint64_t (*sub_245573A5C())()
{
  return j_j__swift_endAccess_1_23;
}

uint64_t sub_245573AB4()
{
  return 0;
}

BOOL sub_245573ABC()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 64);
  if (swift_conformsToProtocol2()) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  return v3 != 0;
}

uint64_t sub_245573B28()
{
  return Schema.Relationship.debugDescription.getter();
}

uint64_t sub_245573B4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = Schema.Relationship.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_245573BA4(void *a1)
{
  return Schema.Relationship.encode(to:)(a1);
}

uint64_t sub_245573BC8()
{
  return sub_24558F818();
}

uint64_t sub_245573C3C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245573CA8()
{
  return sub_24558F818();
}

BOOL sub_245573D18(uint64_t *a1, uint64_t *a2)
{
  return _s9SwiftData6SchemaC12RelationshipC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t Schema.Index.name.getter()
{
  return 0x492E616D65686353;
}

uint64_t Schema.Index.name.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Index.name.modify(uint64_t a1))()
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  return sub_24557A744;
}

uint64_t Schema.Index.originalName.getter()
{
  return 0x492E616D65686353;
}

uint64_t Schema.Index.originalName.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Index.originalName.modify(uint64_t a1))()
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  return sub_245573DF4;
}

uint64_t sub_245573DF4()
{
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Index.valueType.getter()
{
  return sub_2455751A8((uint64_t (*)(void, void))sub_2455774B8);
}

void (*Schema.Index.valueType.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void *)(*(void *)v1 + 88);
  *uint64_t v3 = v4;
  v3[1] = v4;
  v3[2] = v5;
  v3[3] = v5;
  type metadata accessor for Schema.Index.Types();
  v3[4] = sub_24558E8A8();
  return sub_245573EBC;
}

void sub_245573EBC(void **a1)
{
}

uint64_t Schema.Index.isUnique.getter()
{
  return 0;
}

uint64_t static Schema.Index.== infix(_:_:)()
{
  uint64_t v0 = sub_2454C1E4C();
  uint64_t v1 = sub_2454C1E4C();
  char v2 = sub_245574040(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_245573F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unsigned __int8 *)(a1 + 68);
  for (uint64_t i = (unsigned __int8 *)(a2 + 68); ; i += 40)
  {
    uint64_t result = 0;
    if (*(v3 - 4) != *(i - 4)) {
      break;
    }
    if ((*(v3 - 2) ^ *(i - 2))) {
      break;
    }
    if ((*v3 ^ *i)) {
      break;
    }
    if ((*(v3 - 3) ^ *(i - 3))) {
      break;
    }
    if ((*(v3 - 1) ^ *(i - 1))) {
      break;
    }
    int v6 = *(v3 - 36);
    int v7 = *(i - 36);
    if ((v6 ^ v7)) {
      break;
    }
    if ((v6 & v7) == 1)
    {
      uint64_t v8 = *(void *)(v3 - 12);
      uint64_t v9 = *(void *)(i - 12);
      if (v8)
      {
        if (!v9 || (*(void *)(v3 - 20) != *(void *)(i - 20) || v8 != v9) && (sub_24558F598() & 1) == 0) {
          return 0;
        }
      }
      else if (v9)
      {
        return 0;
      }
    }
    v3 += 40;
    if (!--v2) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_245574040(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    uint64_t v5 = *(void **)(a1 + 32);
    int v6 = *(void **)(a2 + 32);
    uint64_t v7 = v5[2];
    if (v7 == v6[2])
    {
      uint64_t v8 = 1;
      while (1)
      {
        if (v7 && v5 != v6)
        {
          BOOL v9 = v5[4] == v6[4] && v5[5] == v6[5];
          if (!v9 && (sub_24558F598() & 1) == 0) {
            return 0;
          }
          if (v7 != 1)
          {
            if ((v5[6] != v6[6] || v5[7] != v6[7]) && (sub_24558F598() & 1) == 0) {
              return 0;
            }
            uint64_t v10 = v7 - 2;
            if (v10) {
              break;
            }
          }
        }
LABEL_18:
        if (v8 == v2) {
          return 1;
        }
        uint64_t result = 0;
        uint64_t v12 = 8 * v8++;
        uint64_t v5 = *(void **)(v3 + v12);
        int v6 = *(void **)(v4 + v12);
        uint64_t v7 = v5[2];
        if (v7 != v6[2]) {
          return result;
        }
      }
      long long v13 = v6 + 9;
      long long v14 = v5 + 9;
      while (1)
      {
        BOOL v15 = *(v14 - 1) == *(v13 - 1) && *v14 == *v13;
        if (!v15 && (sub_24558F598() & 1) == 0) {
          break;
        }
        v13 += 2;
        v14 += 2;
        if (!--v10) {
          goto LABEL_18;
        }
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_245574194(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_24558F598(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    BOOL v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_24558F598() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_24557425C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  BOOL v5 = a1 + 5;
  char v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t Schema.Index.hash(into:)(uint64_t a1)
{
  uint64_t v2 = sub_2454C1E4C();
  sub_245576E04(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t Schema.Index.indices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Index.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;

  swift_allocObject();
  uint64_t v2 = sub_2455783CC(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Schema.Index.debugDescription.getter()
{
  return 0;
}

uint64_t static Schema.Index.CodingKeys.== infix(_:_:)()
{
  return 1;
}

uint64_t Schema.Index.CodingKeys.hash(into:)()
{
  return sub_24558F7E8();
}

uint64_t Schema.Index.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73656369646E69 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24558F598();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void Schema.Index.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Schema.Index.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t Schema.Index.CodingKeys.stringValue.getter()
{
  return 0x73656369646E69;
}

uint64_t sub_2455745C8()
{
  return 1;
}

uint64_t sub_2455745D8()
{
  return 0x73656369646E69;
}

uint64_t sub_2455745F4()
{
  return 0;
}

uint64_t sub_245574604(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_245574658(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t Schema.Index.encode(to:)(void *a1)
{
  return sub_245575778(a1, (void (*)(uint64_t, void, void))type metadata accessor for Schema.Index.CodingKeys, (uint64_t)&protocol conformance descriptor for Schema.Index<A>.CodingKeys, (uint64_t)sub_2454C1E4C);
}

uint64_t Schema.Index.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  Schema.Index.init(from:)(a1);
  return v2;
}

uint64_t Schema.Index.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 88);
  uint64_t v13 = *(void *)(*(void *)v1 + 80);
  type metadata accessor for Schema.Index.CodingKeys();
  swift_getWitnessTable();
  uint64_t v14 = sub_24558F3D8();
  uint64_t v12 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v6 = (char *)&v12 - v5;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  uint64_t v7 = v15;
  sub_24558F878();
  if (v7)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v12;
    uint64_t v8 = v13;
    uint64_t v15 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3FE0);
    sub_245578548(&qword_268EE3FF8, &qword_268EE4000);
    sub_24558F3B8();
    uint64_t v11 = sub_2455749E0(v16, v8, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v14);
    *(void *)(v2 + 16) = v11;
  }
  __swift_destroy_boxed_opaque_existential_1Tm_7((uint64_t)a1);
  return v2;
}

uint64_t sub_2455749E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Schema.Index.Types();
  uint64_t v6 = sub_24558E408();
  uint64_t v22 = v6;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v19 = a1 + 32;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v20; ++i)
    {
      uint64_t v8 = *(void **)(v19 + 8 * i);
      if (!v8[2]) {
        goto LABEL_30;
      }
      uint64_t v10 = v8[4];
      uint64_t v9 = v8[5];
      BOOL v11 = *(void *)aBinary_0 == v10 && unk_26FA30B20 == v9;
      if (!v11 && (sub_24558F598() & 1) == 0)
      {
        BOOL v12 = *(void *)aRTree == v10 && unk_26FA30B30 == v9;
        if (!v12 && (sub_24558F598() & 1) == 0) {
          goto LABEL_30;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2455599C4(0, 1);
      if (!v8[2]) {
        goto LABEL_30;
      }
      sub_24558F028();
      sub_24558E408();
      uint64_t v13 = v8[2];
      if (v13)
      {
        uint64_t v21 = v10;
        swift_bridgeObjectRetain();
        uint64_t v14 = v8 + 5;
        do
        {
          uint64_t v15 = *(v14 - 1);
          uint64_t v16 = *v14;
          swift_bridgeObjectRetain();
          sub_24552C994(v15, v16, a2, a3);
          swift_bridgeObjectRelease();
          swift_dynamicCastClassUnconditional();
          sub_24558E8A8();
          sub_24558E888();
          v14 += 2;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease();
        uint64_t v10 = v21;
      }
      if ((v10 != 0x7972616E6962 || v9 != 0xE600000000000000)
        && (sub_24558F598() & 1) == 0
        && (v10 != 0x656572742D72 || v9 != 0xE600000000000000)
        && (sub_24558F598() & 1) == 0)
      {
        while (1)
        {
          sub_24558EF78();
          swift_bridgeObjectRelease();
          sub_24558E668();
LABEL_30:
          sub_24558F1A8();
          __break(1u);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24558E8A8();
      sub_24558E888();
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = v22;
  }
  else
  {
    uint64_t v17 = v6;
  }
  swift_arrayDestroy();
  return v17;
}

uint64_t Schema.Index.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Schema.Index.hashValue.getter()
{
  sub_24558F7D8();
  uint64_t v0 = sub_2454C1E4C();
  sub_245576E04((uint64_t)v2, v0);
  swift_bridgeObjectRelease();
  return sub_24558F818();
}

uint64_t sub_245574E34()
{
  return 0x492E616D65686353;
}

uint64_t sub_245574E54()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_245574E5C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Schema.Index.name.modify((uint64_t)v2);
  return sub_245574EAC;
}

uint64_t sub_245574EB0()
{
  return 0x492E616D65686353;
}

uint64_t sub_245574ED0()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_245574ED8(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Schema.Index.originalName.modify((uint64_t)v2);
  return sub_245574F28;
}

uint64_t sub_245574F2C()
{
  return sub_2455774B8();
}

uint64_t (*sub_245574F3C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Schema.Index.valueType.modify(v2);
  return sub_245574F98;
}

uint64_t sub_245574F9C()
{
  return 0;
}

uint64_t sub_245574FA4()
{
  return 0;
}

uint64_t sub_245574FAC()
{
  return 0;
}

uint64_t sub_245574FB8()
{
  return Schema.Index.debugDescription.getter();
}

uint64_t sub_245574FDC()
{
  return Schema.Index.hashValue.getter();
}

uint64_t sub_245575000(uint64_t a1)
{
  return Schema.Index.hash(into:)(a1);
}

uint64_t sub_245575024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2455761AC(a1, a2, a3, (void (*)(unsigned char *))Schema.Index.hash(into:));
}

uint64_t sub_24557503C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Schema.Index.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_245575068(void *a1)
{
  return Schema.Index.encode(to:)(a1);
}

uint64_t sub_24557508C()
{
  return static Schema.Index.== infix(_:_:)() & 1;
}

uint64_t Schema.Unique.name.getter()
{
  return 0x552E616D65686353;
}

uint64_t Schema.Unique.name.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Unique.name.modify(uint64_t a1))()
{
  *(_WORD *)(a1 + 14) = -4864;
  return sub_24557A748;
}

uint64_t Schema.Unique.originalName.getter()
{
  return 0x552E616D65686353;
}

uint64_t Schema.Unique.originalName.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Unique.originalName.modify(uint64_t a1))()
{
  *(_WORD *)(a1 + 14) = -4864;
  return sub_24557A74C;
}

uint64_t Schema.Unique.valueType.getter()
{
  return sub_2455751A8((uint64_t (*)(void, void))sub_2455774F4);
}

uint64_t sub_2455751A8(uint64_t (*a1)(void, void))
{
  return a1(*(void *)(*(void *)v1 + 80), *(void *)(*(void *)v1 + 88));
}

uint64_t (*Schema.Unique.valueType.modify(uint64_t *a1))()
{
  *a1 = sub_2455774F4();
  return nullsub_43;
}

uint64_t Schema.Unique.isUnique.getter()
{
  return 1;
}

uint64_t static Schema.Unique.== infix(_:_:)()
{
  return sub_24558E8C8() & 1;
}

uint64_t Schema.Unique.hash(into:)()
{
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Unique.debugDescription.getter()
{
  return 0;
}

uint64_t static Schema.Unique.CodingKeys.== infix(_:_:)()
{
  return 1;
}

uint64_t Schema.Unique.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x69617274736E6F63 && a2 == 0xEB0000000073746ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24558F598();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t _s9SwiftData6SchemaC5IndexC10CodingKeysO9hashValueSivg_0()
{
  return sub_24558F818();
}

uint64_t Schema.Unique.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t Schema.Unique.CodingKeys.stringValue.getter()
{
  return 0x69617274736E6F63;
}

uint64_t sub_2455755B4()
{
  return 1;
}

uint64_t sub_2455755C0()
{
  return sub_24558F818();
}

uint64_t sub_245575608()
{
  return sub_24558F818();
}

uint64_t sub_245575648()
{
  return 0x69617274736E6F63;
}

uint64_t sub_24557566C()
{
  return 0;
}

uint64_t sub_24557567C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2455756D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t Schema.Unique.encode(to:)(void *a1)
{
  return sub_245575778(a1, (void (*)(uint64_t, void, void))type metadata accessor for Schema.Unique.CodingKeys, (uint64_t)&protocol conformance descriptor for Schema.Unique<A>.CodingKeys, (uint64_t)sub_24556CAE0);
}

uint64_t sub_245575778(void *a1, void (*a2)(uint64_t, void, void), uint64_t a3, uint64_t a4)
{
  v13[0] = a4;
  uint64_t v5 = v4;
  a2(255, *(void *)(*(void *)v5 + 80), *(void *)(*(void *)v5 + 88));
  swift_getWitnessTable();
  uint64_t v7 = sub_24558F508();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v13 - v9;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  uint64_t v11 = sub_24558F888();
  void v13[3] = ((uint64_t (*)(uint64_t))v13[0])(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3FE0);
  sub_245578548(&qword_268EE3FE8, &qword_268EE3FF0);
  sub_24558F468();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t Schema.Unique.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  Schema.Unique.init(from:)(a1);
  return v2;
}

uint64_t Schema.Unique.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  type metadata accessor for Schema.Unique.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_24558F3D8();
  uint64_t v12 = *(void *)(v5 - 8);
  uint64_t v13 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v12 - v6;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_24558F878();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3FE0);
    sub_245578548(&qword_268EE3FF8, &qword_268EE4000);
    uint64_t v9 = v13;
    sub_24558F3B8();
    uint64_t v11 = sub_245575C28(v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    *(void *)(v3 + 16) = v11;
  }
  __swift_destroy_boxed_opaque_existential_1Tm_7((uint64_t)a1);
  return v3;
}

uint64_t sub_245575C28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 80);
  sub_24558F028();
  sub_24558E8A8();
  uint64_t result = sub_24558E408();
  uint64_t v14 = result;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v12 = a1 + 32;
    if (*(void *)(v6 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = 1;
      while (1)
      {
        swift_bridgeObjectRetain();
        sub_24558E408();
        uint64_t v8 = *(void *)(v6 + 16);
        if (v8)
        {
          uint64_t v9 = (uint64_t *)(v6 + 40);
          do
          {
            uint64_t v10 = *(v9 - 1);
            uint64_t v11 = *v9;
            swift_bridgeObjectRetain();
            sub_24552C994(v10, v11, v4, *(void *)(v2 + 88));
            swift_bridgeObjectRelease();
            swift_dynamicCastClassUnconditional();
            sub_24558E888();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRelease();
        sub_24558E8A8();
        sub_24558E888();
        if (v7 == v13) {
          break;
        }
        uint64_t v6 = *(void *)(v12 + 8 * v7++);
        if (!*(void *)(v6 + 16)) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      return v14;
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t result = sub_24558F1A8();
      __break(1u);
    }
  }
  return result;
}

uint64_t Schema.Unique.hashValue.getter()
{
  return sub_24558F818();
}

unint64_t sub_245575E64(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x7571696E5573695FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x6F7473626D6F745FLL;
      break;
    case 6:
      unint64_t result = 0x67696C746F70735FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_245575F4C()
{
  return 0x552E616D65686353;
}

uint64_t sub_245575F70()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_245575F78(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Schema.Unique.name.modify((uint64_t)v2);
  return sub_245575FC8;
}

uint64_t sub_245575FCC()
{
  return 0x552E616D65686353;
}

uint64_t sub_245575FF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_245575FF8(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Schema.Unique.originalName.modify((uint64_t)v2);
  return sub_245576048;
}

uint64_t sub_24557604C()
{
  return sub_2455774F4();
}

uint64_t (*sub_24557605C(uint64_t **a1))()
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)Schema.Unique.valueType.modify(v2);
  return sub_2455760B8;
}

void sub_2455760BC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_245576104()
{
  return 0;
}

uint64_t sub_24557610C()
{
  return 0;
}

uint64_t sub_245576114()
{
  return 0;
}

uint64_t sub_245576120()
{
  return 1;
}

uint64_t sub_245576128()
{
  return Schema.Unique.debugDescription.getter();
}

uint64_t sub_24557614C()
{
  return Schema.Unique.hashValue.getter();
}

uint64_t sub_245576170()
{
  return Schema.Unique.hash(into:)();
}

uint64_t sub_245576194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2455761AC(a1, a2, a3, (void (*)(unsigned char *))Schema.Unique.hash(into:));
}

uint64_t sub_2455761AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_24558F7D8();
  a4(v6);
  return sub_24558F818();
}

uint64_t sub_2455761F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Schema.Unique.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_245576220(void *a1)
{
  return Schema.Unique.encode(to:)(a1);
}

uint64_t sub_245576244()
{
  return static Schema.Unique.== infix(_:_:)();
}

uint64_t sub_245576254()
{
  return sub_24558F818();
}

uint64_t sub_2455762A0()
{
  return sub_24558F818();
}

unint64_t sub_2455762E4()
{
  return sub_245575E64(*v0);
}

uint64_t sub_2455762EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_245577F50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245576314()
{
  return 0;
}

void sub_245576320(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_24557632C(uint64_t a1)
{
  unint64_t v2 = sub_24557864C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_245576368(uint64_t a1)
{
  unint64_t v2 = sub_24557864C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Schema.Attribute.Option.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4008);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_24557864C();
  sub_24558F878();
  if (!v2)
  {
    char v29 = 0;
    char v9 = sub_24558F398();
    char v28 = 1;
    uint64_t v10 = sub_24558F298();
    uint64_t v13 = v12;
    uint64_t v22 = v10;
    char v27 = 2;
    swift_bridgeObjectRetain();
    int v21 = sub_24558F398();
    char v26 = 3;
    int v20 = sub_24558F398();
    char v25 = 4;
    int v19 = sub_24558F398();
    char v24 = 5;
    int v18 = sub_24558F398();
    char v23 = 6;
    char v14 = sub_24558F398();
    HIDWORD(v17) = v9 & 1;
    v20 &= 1u;
    v21 &= 1u;
    v19 &= 1u;
    char v15 = v18 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = BYTE4(v17);
    uint64_t v16 = v22;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = v16;
    *(void *)(a2 + 24) = v13;
    *(unsigned char *)(a2 + 32) = v21;
    *(unsigned char *)(a2 + 33) = v20;
    *(unsigned char *)(a2 + 34) = v19;
    *(unsigned char *)(a2 + 35) = v15;
    *(unsigned char *)(a2 + 36) = v14 & 1;
    *(unsigned char *)(a2 + 37) = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm_7((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Attribute.Option.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4018);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v8;
  int v15 = *(unsigned __int8 *)(v1 + 32);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 33);
  void v10[2] = *(unsigned __int8 *)(v1 + 34);
  v10[3] = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 35);
  v10[0] = *(unsigned __int8 *)(v1 + 36);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_24557864C();
  sub_24558F888();
  LOBYTE(v13) = 0;
  sub_24558F418();
  if (!v2)
  {
    uint64_t v13 = v12;
    uint64_t v14 = v11;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3660);
    sub_2455785D4(&qword_268EE3F28, &qword_268EE3660);
    sub_24558F468();
    LOBYTE(v13) = 2;
    sub_24558F418();
    LOBYTE(v13) = 3;
    sub_24558F418();
    LOBYTE(v13) = 4;
    sub_24558F418();
    LOBYTE(v13) = 5;
    sub_24558F418();
    LOBYTE(v13) = 6;
    sub_24558F418();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_245576968@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Schema.Attribute.Option.init(from:)(a1, a2);
}

uint64_t sub_245576980(void *a1)
{
  return Schema.Attribute.Option.encode(to:)(a1);
}

uint64_t Schema.Attribute.Option.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24558F7F8();
  sub_24558F7F8();
  sub_24558F7F8();
  sub_24558F7F8();
  sub_24558F7F8();
  sub_24558F7F8();
  if (!v1) {
    return sub_24558F7F8();
  }
  sub_24558F7F8();
  swift_bridgeObjectRetain();
  sub_24558E628();

  return swift_bridgeObjectRelease();
}

uint64_t Schema.Attribute.Option.hashValue.getter()
{
  return sub_24558F818();
}

uint64_t sub_245576B04()
{
  return sub_24558F818();
}

uint64_t sub_245576B94()
{
  return sub_24558F818();
}

uint64_t Schema.Attribute.Option.debugDescription.getter()
{
  int v1 = *v0;
  int v2 = v0[33];
  int v3 = v0[34];
  int v4 = v0[35];
  int v5 = v0[36];
  int v6 = v0[37];
  if (v0[32] == 1) {
    sub_24558E668();
  }
  if (v2) {
    sub_24558E668();
  }
  if (v1)
  {
    sub_24558EF78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3660);
    sub_24558E5E8();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    swift_bridgeObjectRelease();
    if (!v3)
    {
LABEL_7:
      if (!v4) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
  }
  else if (!v3)
  {
    goto LABEL_7;
  }
  sub_24558E668();
  if (v4) {
LABEL_8:
  }
    sub_24558E668();
LABEL_9:
  if (v5) {
    sub_24558E668();
  }
  if (v6) {
    sub_24558E668();
  }
  return 0;
}

uint64_t sub_245576E04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24558F7E8();
  if (v3)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a2 + 32;
    do
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5);
      uint64_t result = sub_24558F7E8();
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = v7 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_24558E628();
          swift_bridgeObjectRelease();
          v9 += 16;
          --v8;
        }
        while (v8);
        uint64_t result = swift_bridgeObjectRelease();
      }
      ++v5;
    }
    while (v5 != v3);
  }
  return result;
}

BOOL _s9SwiftData6SchemaC12RelationshipC2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(void *)(a2 + 16) || v5 != *(void *)(a2 + 24))
  {
    char v7 = sub_24558F598();
    BOOL result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 56);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11 != *(void *)(v10 + 16)) {
    return 0;
  }
  if (v11 && v9 != v10)
  {
    uint64_t v13 = (unsigned char *)(v9 + 32);
    uint64_t v14 = (unsigned char *)(v10 + 32);
    uint64_t v15 = v11 - 1;
    do
    {
      uint64_t v16 = v15;
      char v17 = *v13 ^ *v14;
      if (v17) {
        break;
      }
      --v15;
      ++v14;
      ++v13;
    }
    while (v16);
    if (v17) {
      return 0;
    }
  }
  swift_beginAccess();
  uint64_t v18 = *(void *)(a1 + 64);
  swift_beginAccess();
  if (v18 != *(void *)(a2 + 64)) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  swift_beginAccess();
  if (v19 != *(void *)(a2 + 72) || v20 != *(void *)(a2 + 80))
  {
    char v21 = sub_24558F598();
    BOOL result = 0;
    if ((v21 & 1) == 0) {
      return result;
    }
  }
  swift_beginAccess();
  unsigned __int8 v22 = *(unsigned char *)(a1 + 88);
  swift_beginAccess();
  if ((sub_24556C320(v22, *(unsigned char *)(a2 + 88)) & 1) == 0) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v24 = *(void *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 104);
  swift_beginAccess();
  uint64_t v25 = *(void *)(a2 + 104);
  if (!v23) {
    return !v25;
  }
  if (!v25) {
    return 0;
  }
  if (v24 == *(void *)(a2 + 96) && v23 == v25) {
    return 1;
  }
  char v26 = sub_24558F598();
  BOOL result = 0;
  if (v26) {
    return 1;
  }
  return result;
}

BOOL _s9SwiftData6SchemaC9AttributeC6OptionV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL result = 0;
  if (a1[32] != a2[32]) {
    return result;
  }
  if ((a1[34] ^ a2[34])) {
    return result;
  }
  if ((a1[36] ^ a2[36])) {
    return result;
  }
  if ((a1[33] ^ a2[33])) {
    return result;
  }
  if ((a1[35] ^ a2[35])) {
    return result;
  }
  int v4 = *a1;
  int v5 = *a2;
  if ((v4 ^ v5)) {
    return result;
  }
  if ((v4 & v5) != 1) {
    return 1;
  }
  uint64_t v6 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a2 + 3);
  if (!v6) {
    return !v7;
  }
  if (!v7) {
    return 0;
  }
  if (*((void *)a1 + 2) == *((void *)a2 + 2) && v6 == v7) {
    return 1;
  }
  char v8 = sub_24558F598();
  BOOL result = 0;
  if (v8) {
    return 1;
  }
  return result;
}

BOOL _s9SwiftData6SchemaC9AttributeC2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  swift_beginAccess();
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  swift_beginAccess();
  BOOL v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = sub_24558F598(), BOOL result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v9 = a1[6];
    swift_beginAccess();
    if (sub_245573F30(v9, a2[6]))
    {
      swift_beginAccess();
      uint64_t v10 = a1[7];
      swift_beginAccess();
      return v10 == a2[7];
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_245577318(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_24557737C()
{
  unint64_t result = qword_268EE3F38;
  if (!qword_268EE3F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3F38);
  }
  return result;
}

uint64_t sub_2455773D0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3F40);
    sub_245485490(a2, (void (*)(void))type metadata accessor for Schema.Attribute);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_245577464()
{
  unint64_t result = qword_268EE3F68;
  if (!qword_268EE3F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3F68);
  }
  return result;
}

uint64_t sub_2455774B8()
{
  return sub_24558E8A8();
}

uint64_t sub_2455774F4()
{
  sub_24558F028();
  sub_24558E8A8();

  return sub_24558E8A8();
}

uint64_t sub_245577538(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xEC000000656D614ELL || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x70795465756C6176 && a2 == 0xED0000656D614E65 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x75526574656C6564 && a2 == 0xEA0000000000656CLL || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4E65737265766E69 && a2 == 0xEB00000000656D61 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002455959B0 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002455959D0 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x69646F4D68736168 && a2 == 0xEC00000072656966)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_2455779BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xEC000000656D614ELL || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x70795465756C6176 && a2 == 0xED0000656D614E65 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6974704F7369 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_245577C7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xEC000000656D614ELL || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x70795465756C6176 && a2 == 0xED0000656D614E65 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69646F4D68736168 && a2 == 0xEC00000072656966 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6974704F7369 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_245577F50(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000245595A10 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000245595A30 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7571696E5573695FLL && a2 == 0xE900000000000065 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000245595A50 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000245595A70 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F7473626D6F745FLL && a2 == 0xEA0000000000656ELL || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x67696C746F70735FLL && a2 == 0xEA00000000007468)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_245578228()
{
  unint64_t result = qword_268EE3F80;
  if (!qword_268EE3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3F80);
  }
  return result;
}

unint64_t sub_24557827C()
{
  unint64_t result = qword_268EE3F98;
  if (!qword_268EE3F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3F98);
  }
  return result;
}

unint64_t sub_2455782D0()
{
  unint64_t result = qword_268EE3FA0;
  if (!qword_268EE3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3FA0);
  }
  return result;
}

unint64_t sub_245578324()
{
  unint64_t result = qword_268EE3FB8;
  if (!qword_268EE3FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3FB8);
  }
  return result;
}

unint64_t sub_245578378()
{
  unint64_t result = qword_268EE3FC0;
  if (!qword_268EE3FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE3FC0);
  }
  return result;
}

uint64_t sub_2455783CC(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for Schema.Index.Types();
  uint64_t v10 = sub_24558E408();
  sub_24558F028();
  uint64_t v4 = sub_24558E8A8();
  if (MEMORY[0x2456A12E0](a1, v4))
  {
    uint64_t v5 = 4;
    do
    {
      uint64_t v6 = v5 - 4;
      char v7 = sub_24558E848();
      sub_24558E7F8();
      if (v7)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v6, 1)) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_24558EFE8();
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v6, 1))
        {
LABEL_9:
          __break(1u);
          break;
        }
      }
      sub_24558E8A8();
      sub_24558E888();
      ++v5;
    }
    while (v8 != MEMORY[0x2456A12E0](a1, v4));
  }
  *(void *)(v2 + 16) = v10;
  return v2;
}

uint64_t type metadata accessor for Schema.Index.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_245578548(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE3FE0);
    sub_2455785D4(a2, &qword_26B0D9F58);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2455785D4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Schema.Unique.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_24557864C()
{
  unint64_t result = qword_268EE4010;
  if (!qword_268EE4010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4010);
  }
  return result;
}

unint64_t sub_2455786A4()
{
  unint64_t result = qword_268EE4020;
  if (!qword_268EE4020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4020);
  }
  return result;
}

unint64_t sub_2455786FC()
{
  unint64_t result = qword_268EE4028;
  if (!qword_268EE4028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4028);
  }
  return result;
}

uint64_t sub_245578750()
{
  return swift_getWitnessTable();
}

uint64_t sub_24557876C()
{
  return swift_getWitnessTable();
}

uint64_t sub_245578788()
{
  return swift_getWitnessTable();
}

uint64_t sub_2455787A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2455787C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2455787DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2455787F8(void *a1)
{
  return sub_2454851D0(a1);
}

uint64_t sub_245578838()
{
  return swift_getWitnessTable();
}

unint64_t sub_245578858()
{
  unint64_t result = qword_268EE4030[0];
  if (!qword_268EE4030[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268EE4030);
  }
  return result;
}

uint64_t sub_2455788AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2455788FC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24557894C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24557899C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return result;
}

uint64_t sub_2455789E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 56) = v2;
  return result;
}

uint64_t sub_245578A28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 64;
  swift_beginAccess();
  return sub_2454A1140(v3, a2);
}

uint64_t sub_245578A7C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 96);
  return result;
}

uint64_t sub_245578AC4(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_245578B08@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 112);
  *a2 = *(void *)(v3 + 104);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void sub_245578B58(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_245578B80()
{
  return 16;
}

__n128 sub_245578B8C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_245578B9C()
{
  return 16;
}

__n128 sub_245578BA8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_245578BB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2455774B8();
  *a1 = result;
  return result;
}

uint64_t sub_245578BE8()
{
  return 16;
}

__n128 sub_245578BF4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_245578C00(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_245578C2C()
{
  return 16;
}

__n128 sub_245578C38(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_245578C48()
{
  return 16;
}

__n128 sub_245578C54(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_245578C60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2455774F4();
  *a1 = result;
  return result;
}

uint64_t sub_245578C94()
{
  return 16;
}

__n128 sub_245578CA0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of SchemaProperty.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SchemaProperty.name.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of SchemaProperty.name.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SchemaProperty.originalName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SchemaProperty.originalName.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of SchemaProperty.originalName.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SchemaProperty.valueType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SchemaProperty.valueType.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of SchemaProperty.valueType.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of SchemaProperty.isAttribute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of SchemaProperty.isRelationship.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of SchemaProperty.isTransient.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of SchemaProperty.isOptional.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of SchemaProperty.isUnique.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t method lookup function for Schema.Attribute(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Schema.Attribute);
}

uint64_t dispatch thunk of Schema.Attribute.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of Schema.Attribute.name.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of Schema.Attribute.name.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of Schema.Attribute.originalName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of Schema.Attribute.originalName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of Schema.Attribute.originalName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of Schema.Attribute.options.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of Schema.Attribute.options.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of Schema.Attribute.options.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of Schema.Attribute.valueType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of Schema.Attribute.valueType.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of Schema.Attribute.valueType.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of Schema.Attribute.defaultValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of Schema.Attribute.defaultValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of Schema.Attribute.defaultValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of Schema.Attribute.isOptional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of Schema.Attribute.isOptional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of Schema.Attribute.isOptional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of Schema.Attribute.hashModifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of Schema.Attribute.hashModifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of Schema.Attribute.hashModifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of Schema.Attribute.__allocating_init(_:originalName:hashModifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t dispatch thunk of Schema.Attribute.__allocating_init(name:originalName:options:valueType:defaultValue:hashModifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t dispatch thunk of Schema.Attribute.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t dispatch thunk of Schema.Attribute.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of Schema.Attribute.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of Schema.Attribute.isAttribute.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of Schema.Attribute.isRelationship.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of Schema.Attribute.isTransient.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of Schema.Attribute.isUnique.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of Schema.Attribute.isTransformable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of Schema.Attribute.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of Schema.Attribute.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t _s9AttributeC6OptionVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s9AttributeC6OptionVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9AttributeC6OptionVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  return a1;
}

__n128 __swift_memcpy38_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 30) = *(void *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s9AttributeC6OptionVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  return a1;
}

uint64_t _s9AttributeC6OptionVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 38)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s9AttributeC6OptionVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 38) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 38) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t method lookup function for Schema.CompositeAttribute(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Schema.CompositeAttribute);
}

uint64_t method lookup function for Schema.Relationship(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Schema.Relationship);
}

uint64_t dispatch thunk of Schema.Relationship.__allocating_init(_:deleteRule:minimumModelCount:maximumModelCount:originalName:inverse:hashModifier:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, void))(v6 + 192))(a1, a2, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of Schema.Relationship.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t _s12RelationshipC10DeleteRuleOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12RelationshipC10DeleteRuleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x245579738);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t _s12RelationshipC6OptionVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12RelationshipC6OptionVwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2455798D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Schema.Relationship.Option()
{
  return &type metadata for Schema.Relationship.Option;
}

uint64_t method lookup function for Schema.Index(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Schema.Index);
}

uint64_t dispatch thunk of Schema.Index.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Schema.Index.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_245579970(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2455799A8(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t sub_245579A00(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245579A3C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_245579A84(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_245579AC8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_245579AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_245579AE4()
{
  return 0;
}

uint64_t method lookup function for Schema.Unique(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Schema.Unique);
}

uint64_t dispatch thunk of Schema.Unique.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of Schema.Unique.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_245579B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_245579B58()
{
  return 0;
}

uint64_t _s9AttributeC6OptionV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9AttributeC6OptionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x245579CC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9AttributeC6OptionV10CodingKeysOMa()
{
  return &_s9AttributeC6OptionV10CodingKeysON;
}

uint64_t _s12RelationshipC10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12RelationshipC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x245579E5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_245579E84(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *_s12RelationshipC10CodingKeysOMa()
{
  return &_s12RelationshipC10CodingKeysON;
}

uint64_t sub_245579EA4(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_245579EF8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x245579F94);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_245579FBC()
{
  return 0;
}

ValueMetadata *_s12RelationshipC6OptionV10CodingKeysOMa()
{
  return &_s12RelationshipC6OptionV10CodingKeysON;
}

ValueMetadata *_s18CompositeAttributeC10CodingKeysOMa()
{
  return &_s18CompositeAttributeC10CodingKeysON;
}

uint64_t _s18CompositeAttributeC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s18CompositeAttributeC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24557A15CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9AttributeC10CodingKeysOMa()
{
  return &_s9AttributeC10CodingKeysON;
}

unint64_t sub_24557A19C()
{
  unint64_t result = qword_268EE4138;
  if (!qword_268EE4138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4138);
  }
  return result;
}

unint64_t sub_24557A1F4()
{
  unint64_t result = qword_268EE4140;
  if (!qword_268EE4140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4140);
  }
  return result;
}

unint64_t sub_24557A24C()
{
  unint64_t result = qword_268EE4148;
  if (!qword_268EE4148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4148);
  }
  return result;
}

unint64_t sub_24557A2A4()
{
  unint64_t result = qword_268EE4150;
  if (!qword_268EE4150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4150);
  }
  return result;
}

unint64_t sub_24557A2FC()
{
  unint64_t result = qword_268EE4158;
  if (!qword_268EE4158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4158);
  }
  return result;
}

unint64_t sub_24557A354()
{
  unint64_t result = qword_268EE4160;
  if (!qword_268EE4160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4160);
  }
  return result;
}

unint64_t sub_24557A3AC()
{
  unint64_t result = qword_268EE4168;
  if (!qword_268EE4168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4168);
  }
  return result;
}

unint64_t sub_24557A404()
{
  unint64_t result = qword_268EE4170;
  if (!qword_268EE4170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4170);
  }
  return result;
}

unint64_t sub_24557A45C()
{
  unint64_t result = qword_268EE4178;
  if (!qword_268EE4178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4178);
  }
  return result;
}

unint64_t sub_24557A4B4()
{
  unint64_t result = qword_268EE4180;
  if (!qword_268EE4180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4180);
  }
  return result;
}

unint64_t sub_24557A50C()
{
  unint64_t result = qword_268EE4188;
  if (!qword_268EE4188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4188);
  }
  return result;
}

unint64_t sub_24557A564()
{
  unint64_t result = qword_268EE4190;
  if (!qword_268EE4190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4190);
  }
  return result;
}

unint64_t sub_24557A5BC()
{
  unint64_t result = qword_268EE4198;
  if (!qword_268EE4198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4198);
  }
  return result;
}

unint64_t sub_24557A614()
{
  unint64_t result = qword_268EE41A0;
  if (!qword_268EE41A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE41A0);
  }
  return result;
}

unint64_t sub_24557A66C()
{
  unint64_t result = qword_268EE41A8;
  if (!qword_268EE41A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE41A8);
  }
  return result;
}

unint64_t sub_24557A6C0()
{
  unint64_t result = qword_268EE41B0;
  if (!qword_268EE41B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE41B0);
  }
  return result;
}

uint64_t sub_24557A7E4()
{
  uint64_t result = getSDSystemVersionSDK_Spring2024();
  qword_268EEACA0 = result;
  return result;
}

uint64_t sub_24557A808()
{
  uint64_t result = getSDSystemVersionSDK_Fall2024();
  qword_268EEACA8 = result;
  return result;
}

uint64_t sub_24557A82C()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3B0 = result;
  return result;
}

uint64_t sub_24557A864()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3A8 = result;
  return result;
}

uint64_t sub_24557A89C()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3E0 = result;
  return result;
}

uint64_t sub_24557A8D4()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3E8 = result;
  return result;
}

uint64_t sub_24557A90C()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3F0 = result;
  return result;
}

uint64_t sub_24557A944()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3D0 = result;
  return result;
}

uint64_t sub_24557A97C()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3B8 = result;
  return result;
}

uint64_t sub_24557A9B4()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3C0 = result;
  return result;
}

uint64_t sub_24557A9EC()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3D8 = result;
  return result;
}

uint64_t sub_24557AA24()
{
  uint64_t result = sub_24558E5A8();
  qword_26B0DD3C8 = result;
  return result;
}

uint64_t sub_24557AA5C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LifecycleNotifications()
{
  return self;
}

uint64_t sub_24557AA90()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C68);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24559C520;
  if (qword_26B0D8C08 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_26B0DD3B0;
  *(void *)(v0 + 32) = qword_26B0DD3B0;
  uint64_t v2 = qword_26B0D8C00;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  unsigned int v4 = (void *)qword_26B0DD3E8;
  *(void *)(v0 + 40) = qword_26B0DD3E8;
  uint64_t v5 = qword_26B0D8BE8;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  BOOL v7 = (void *)qword_26B0DD3D0;
  *(void *)(v0 + 48) = qword_26B0DD3D0;
  uint64_t v8 = qword_26B0D8BD8;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_26B0DD3C0;
  *(void *)(v0 + 56) = qword_26B0DD3C0;
  uint64_t v11 = qword_26B0D8BE0;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_26B0DD3C8;
  *(void *)(v0 + 64) = qword_26B0DD3C8;
  id v14 = v13;
  return v0;
}

uint64_t sub_24557AC18()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C68);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24559C520;
  if (qword_26B0D8C18 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_26B0DD3A8;
  *(void *)(v0 + 32) = qword_26B0DD3A8;
  uint64_t v2 = qword_26B0D8C10;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  unsigned int v4 = (void *)qword_26B0DD3F0;
  *(void *)(v0 + 40) = qword_26B0DD3F0;
  uint64_t v5 = qword_26B0D8BF8;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  BOOL v7 = (void *)qword_26B0DD3E0;
  *(void *)(v0 + 48) = qword_26B0DD3E0;
  uint64_t v8 = qword_26B0D8BD0;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_26B0DD3B8;
  *(void *)(v0 + 56) = qword_26B0DD3B8;
  uint64_t v11 = qword_26B0D8BF0;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_26B0DD3D8;
  *(void *)(v0 + 64) = qword_26B0DD3D8;
  id v14 = v13;
  return v0;
}

uint64_t PersistentIdentifier.entityName.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + *(int *)(type metadata accessor for PersistentIdentifier(0) + 20))
                 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PersistentIdentifier.hash(into:)()
{
  sub_24558E158();
  sub_245488248((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);

  return sub_24558E4D8();
}

uint64_t PersistentIdentifier.storeIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + *(int *)(type metadata accessor for PersistentIdentifier(0) + 20)) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PersistentIdentifier.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2454CFB14(v1, a1);
}

uint64_t sub_24557AEC0()
{
  return 1;
}

uint64_t sub_24557AECC()
{
  return sub_24558F7E8();
}

uint64_t sub_24557AEF8()
{
  return 0x6E656D656C706D69;
}

uint64_t sub_24557AF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E656D656C706D69 && a2 == 0xEE006E6F69746174)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24558F598();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24557AFD8()
{
  return 0;
}

void sub_24557AFE4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24557AFF0(uint64_t a1)
{
  unint64_t v2 = sub_24557D344();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24557B02C(uint64_t a1)
{
  unint64_t v2 = sub_24557D344();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PersistentIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE41B8);
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24557D344();
  sub_24558F878();
  if (!v2)
  {
    uint64_t v10 = v15;
    type metadata accessor for PersistentIdentifierImplementation(0);
    sub_245488248(&qword_268EE41C8, (void (*)(uint64_t))type metadata accessor for PersistentIdentifierImplementation);
    sub_24558F3B8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v4);
    uint64_t v11 = v17;
    *(void *)&v9[*(int *)(v7 + 20)] = v17;
    uint64_t v12 = v11 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
    uint64_t v13 = sub_24558E158();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v12, v13);
    sub_2454A1C18((uint64_t)v9, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t static PersistentIdentifier.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for PersistentIdentifier(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a2 + v4);

  return sub_24557D398(v5, v6);
}

uint64_t PersistentIdentifier.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE41D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24557D344();
  sub_24558F888();
  v9[1] = *(void *)(v2 + *(int *)(type metadata accessor for PersistentIdentifier(0) + 20));
  type metadata accessor for PersistentIdentifierImplementation(0);
  sub_245488248(&qword_268EE41D8, (void (*)(uint64_t))type metadata accessor for PersistentIdentifierImplementation);
  sub_24558F468();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PersistentIdentifier.ID.hash(into:)()
{
  sub_24558E158();
  sub_245488248((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);

  return sub_24558E4D8();
}

uint64_t PersistentIdentifier.ID.hashValue.getter()
{
  return sub_24558F818();
}

uint64_t sub_24557B59C()
{
  return sub_24558F818();
}

uint64_t sub_24557B624()
{
  sub_24558E158();
  sub_245488248((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);

  return sub_24558E4D8();
}

uint64_t sub_24557B6A8()
{
  return sub_24558F818();
}

uint64_t static PersistentIdentifier.identifier<A>(for:entityName:primaryKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  type metadata accessor for GenericPersistentIdentifierImplementation();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24557D9AC(a1, a2, a3, a4, a5);
  *(void *)(a6 + *(int *)(type metadata accessor for PersistentIdentifier(0) + 20)) = v12;
  uint64_t v13 = v12 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  uint64_t v14 = sub_24558E158();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a6, v13, v14);
}

uint64_t PersistentIdentifier.hashValue.getter()
{
  return sub_24558F818();
}

uint64_t sub_24557B8C4()
{
  return sub_24558F818();
}

uint64_t sub_24557B94C()
{
  sub_24558E158();
  sub_245488248((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);

  return sub_24558E4D8();
}

uint64_t sub_24557B9D0@<X0>(uint64_t a1@<X8>)
{
  return sub_2454CFB14(v1, a1);
}

uint64_t sub_24557B9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24557D398(*(void *)(a1 + *(int *)(a3 + 20)), *(void *)(a2 + *(int *)(a3 + 20)));
}

BOOL sub_24557B9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_24557D398(*(void *)(a2 + *(int *)(a3 + 20)), *(void *)(a1 + *(int *)(a3 + 20))) & 1) == 0;
}

BOOL sub_24557BA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_24557D398(*(void *)(a1 + *(int *)(a3 + 20)), *(void *)(a2 + *(int *)(a3 + 20))) & 1) == 0;
}

uint64_t sub_24557BA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24557D398(*(void *)(a2 + *(int *)(a3 + 20)), *(void *)(a1 + *(int *)(a3 + 20)));
}

uint64_t sub_24557BA5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PersistentIdentifier.init(from:)(a1, a2);
}

uint64_t sub_24557BA74(void *a1)
{
  return PersistentIdentifier.encode(to:)(a1);
}

uint64_t sub_24557BA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA100);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v17 = (void *)(v6 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey);
  void *v17 = a3;
  v17[1] = a4;
  *(unsigned char *)(v6 + 32) = 0;
  uint64_t v18 = (void *)(v6 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  *uint64_t v18 = a5;
  v18[1] = a6;
  unint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24558EF78();
  swift_bridgeObjectRelease();
  unint64_t v22 = 0xD000000000000017;
  unint64_t v23 = 0x8000000245596060;
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E138();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_24558E158();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v7 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation, v16, v19);
    return v7;
  }
  return result;
}

BOOL sub_24557BCA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24557BCB8()
{
  return sub_24558F818();
}

uint64_t sub_24557BD00()
{
  return sub_24558F7E8();
}

uint64_t sub_24557BD2C()
{
  return sub_24558F818();
}

unint64_t sub_24557BD70()
{
  unint64_t result = 0x65644965726F7473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x726F706D65547369;
      break;
    case 2:
      unint64_t result = 0x4B7972616D697270;
      break;
    case 3:
      unint64_t result = 0x614E797469746E65;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24557BE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24557D64C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24557BE64()
{
  return 0;
}

void sub_24557BE70(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24557BE7C(uint64_t a1)
{
  unint64_t v2 = sub_24557E330();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24557BEB8(uint64_t a1)
{
  unint64_t v2 = sub_24557E330();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24557BEF4(uint64_t a1)
{
  return sub_24557CAEC(a1, (void (*)(uint64_t))sub_24557BF20);
}

uint64_t sub_24557BF20(void *a1)
{
  uint64_t v3 = sub_24558E158();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4290);
  uint64_t v7 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  char v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_24557E330();
  sub_24558F878();
  if (v1)
  {
    uint64_t v12 = (uint64_t)v28;
    uint64_t v14 = v29;
    type metadata accessor for PersistentIdentifierImplementation(0);
    swift_deallocPartialClassInstance();
    uint64_t v23 = v12;
  }
  else
  {
    uint64_t v25 = v4;
    char v26 = v6;
    char v34 = 0;
    uint64_t v11 = sub_24558F298();
    uint64_t v14 = v29;
    *(void *)(v29 + 16) = v11;
    *(void *)(v14 + 24) = v15;
    char v33 = 1;
    *(unsigned char *)(v14 + 32) = sub_24558F398() & 1;
    char v32 = 2;
    uint64_t v16 = sub_24558F388();
    uint64_t v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey);
    uint64_t *v17 = v16;
    v17[1] = v18;
    char v31 = 3;
    uint64_t v19 = sub_24558F388();
    uint64_t v20 = (uint64_t *)(v14 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
    *uint64_t v20 = v19;
    v20[1] = v21;
    char v30 = 4;
    sub_245488248(&qword_268EE42A0, MEMORY[0x263F06EA8]);
    unint64_t v22 = v26;
    sub_24558F3B8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v14 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation, v22, v3);
    uint64_t v23 = (uint64_t)v28;
  }
  __swift_destroy_boxed_opaque_existential_1(v23);
  return v14;
}

uint64_t sub_24557C328(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE42A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24557E330();
  sub_24558F888();
  v8[15] = 0;
  sub_24558F3F8();
  if (!v1)
  {
    v8[14] = 1;
    sub_24558F418();
    v8[13] = 2;
    sub_24558F408();
    v8[12] = 3;
    sub_24558F408();
    v8[11] = 4;
    sub_24558E158();
    sub_245488248(qword_268EE42B0, MEMORY[0x263F06EA8]);
    sub_24558F468();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24557C56C()
{
  return sub_24558F818();
}

uint64_t sub_24557C604()
{
  return sub_24558E4D8();
}

uint64_t sub_24557C68C()
{
  return sub_24558F818();
}

uint64_t sub_24557C720@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  uint64_t v4 = sub_24558E158();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_24557C798(uint64_t *a1, uint64_t *a2)
{
  return sub_24557D560(*a1, *a2);
}

uint64_t sub_24557C7A4(uint64_t *a1, uint64_t *a2)
{
  return sub_24557D398(*a1, *a2);
}

uint64_t sub_24557C7BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 160))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_24557C7F8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t sub_24557C83C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6972506465707974 && a2 == 0xEF79654B7972616DLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24558F598();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24557C8E8()
{
  return 1;
}

uint64_t sub_24557C8F4()
{
  return sub_24558F818();
}

uint64_t sub_24557C93C()
{
  return sub_24558F818();
}

uint64_t sub_24557C97C()
{
  return 0x6972506465707974;
}

uint64_t sub_24557C9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_24557C83C(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_24557C9D0()
{
  return 0;
}

uint64_t sub_24557C9DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24557E7BC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24557CA18(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24557CA6C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24557CAC0(uint64_t a1)
{
  return sub_24557CAEC(a1, (void (*)(uint64_t))sub_24557CB44);
}

uint64_t sub_24557CAEC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t sub_24557CB44(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 184);
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v29 = (char *)&v26 - v5;
  uint64_t v7 = v6[24];
  uint64_t v8 = v6[25];
  uint64_t v9 = v6[26];
  uint64_t v10 = v6[27];
  uint64_t v11 = v6[28];
  uint64_t v36 = v4;
  uint64_t v37 = v7;
  uint64_t v32 = v8;
  uint64_t v33 = v7;
  uint64_t v38 = v8;
  uint64_t v39 = v9;
  uint64_t v34 = v9;
  uint64_t v30 = v11;
  uint64_t v31 = v10;
  uint64_t v40 = v10;
  uint64_t v41 = v11;
  type metadata accessor for GenericPersistentIdentifierImplementation.CodingKeys();
  swift_getWitnessTable();
  uint64_t v12 = sub_24558F3D8();
  uint64_t v28 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = a1[3];
  unint64_t v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  swift_retain();
  uint64_t v16 = v35;
  sub_24558F878();
  if (v16)
  {
    uint64_t v17 = v34;
    swift_release();
    uint64_t v21 = v32;
    uint64_t v20 = v33;
    uint64_t v23 = v30;
    uint64_t v22 = v31;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    uint64_t v36 = v4;
    uint64_t v37 = v20;
    uint64_t v38 = v21;
    uint64_t v39 = v17;
    uint64_t v40 = v22;
    uint64_t v41 = v23;
    type metadata accessor for GenericPersistentIdentifierImplementation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v18 = v27;
    uint64_t v19 = v29;
    sub_24558F3B8();
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v1 + *(void *)(*(void *)v1 + 232), v19, v4);
    swift_release();
    uint64_t v25 = (uint64_t)v42;
    sub_245577318((uint64_t)v42, (uint64_t)&v36);
    sub_24557BF20(&v36);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v12);
    __swift_destroy_boxed_opaque_existential_1(v25);
  }
  return v2;
}

uint64_t sub_24557CEE0(void *a1)
{
  uint64_t v4 = *(void *)(*(void *)v1 + 184);
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v21 = (char *)&v17 - v5;
  uint64_t v7 = *(void *)(v6 + 208);
  uint64_t v22 = v4;
  long long v23 = *(_OWORD *)(v8 + 192);
  uint64_t v24 = v7;
  long long v19 = *(_OWORD *)(v8 + 216);
  long long v25 = v19;
  type metadata accessor for GenericPersistentIdentifierImplementation.CodingKeys();
  swift_getWitnessTable();
  uint64_t v20 = sub_24558F508();
  uint64_t v9 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t result = sub_24557C328(a1);
  if (!v2)
  {
    uint64_t v18 = v9;
    uint64_t v13 = a1[3];
    uint64_t v17 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    uint64_t v14 = v26;
    sub_24558F888();
    uint64_t v15 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v21, v1 + *(void *)(*(void *)v1 + 232), v4);
    uint64_t v16 = v20;
    sub_24558F468();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v16);
  }
  return result;
}

uint64_t sub_24557D1A0()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 184) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 232));
}

uint64_t *sub_24557D1F8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  uint64_t v3 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 184) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 232));
  return v0;
}

uint64_t sub_24557D2EC()
{
  sub_24557D1F8();

  return swift_deallocClassInstance();
}

unint64_t sub_24557D344()
{
  unint64_t result = qword_268EE41C0;
  if (!qword_268EE41C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE41C0);
  }
  return result;
}

uint64_t sub_24557D398(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  if (v4) {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v6 = 0;
  }
  if (v4) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = 0xE000000000000000;
  }
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  if (v8) {
    uint64_t v10 = *(void *)(a2 + 16);
  }
  else {
    uint64_t v10 = 0;
  }
  if (v8) {
    unint64_t v11 = *(void *)(a2 + 24);
  }
  else {
    unint64_t v11 = 0xE000000000000000;
  }
  if (v6 == v10 && v7 == v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    if (v4) {
      goto LABEL_19;
    }
LABEL_25:
    if (v8) {
      return 0;
    }
    goto LABEL_26;
  }
  uint64_t v13 = 1;
  char v14 = sub_24558F598();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14) {
    return v13;
  }
  if (!v4) {
    goto LABEL_25;
  }
LABEL_19:
  if (!v8) {
    return 0;
  }
  if (v5 == v9 && v4 == v8 || (uint64_t v13 = 0, (sub_24558F598() & 1) != 0))
  {
LABEL_26:
    if (*(void *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) != *(void *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
      || *(void *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) != *(void *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8))
    {
      uint64_t v13 = 1;
      if (sub_24558F598()) {
        return v13;
      }
      uint64_t v13 = 0;
      if ((sub_24558F598() & 1) == 0) {
        return v13;
      }
    }
    if (*(void *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) != *(void *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      || *(void *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) != *(void *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      uint64_t v13 = 1;
      if (sub_24558F598()) {
        return v13;
      }
    }
    return 0;
  }
  return v13;
}

uint64_t type metadata accessor for GenericPersistentIdentifierImplementation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24557D560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v5)
    {
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v4 != v5)
      {
        char v7 = sub_24558F598();
        uint64_t result = 0;
        if ((v7 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v5) {
    return 0;
  }
LABEL_11:
  BOOL v9 = *(void *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(void *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
    && *(void *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(void *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
  if (v9 || (v10 = sub_24558F598(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (*(void *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(void *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(void *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(void *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      return 1;
    }
    else
    {
      return sub_24558F598();
    }
  }
  return result;
}

uint64_t sub_24557D64C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65644965726F7473 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F706D65547369 && a2 == 0xEB00000000797261 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4B7972616D697270 && a2 == 0xEA00000000007965 || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E797469746E65 && a2 == 0xEA0000000000656DLL || (sub_24558F598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000245596080)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24558F598();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24557D8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(*(void *)v5 + 184) - 8) + 16))(v5 + *(void *)(*(void *)v5 + 232), a5, *(void *)(*(void *)v5 + 184));
  uint64_t v11 = sub_24558F558();

  return sub_24557BA8C(a1, a2, v11, v10, a3, a4);
}

uint64_t sub_24557D9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24557D8BC(a1, a2, a3, a4, a5);
}

uint64_t sub_24557DA3C()
{
  return sub_245488248(&qword_268EE41E0, (void (*)(uint64_t))type metadata accessor for PersistentIdentifier.ID);
}

uint64_t sub_24557DA84()
{
  return sub_245488248(qword_268EE41E8, (void (*)(uint64_t))type metadata accessor for PersistentIdentifier.ID);
}

uint64_t sub_24557DACC()
{
  return sub_245488248(&qword_26B0D9AD8, (void (*)(uint64_t))type metadata accessor for PersistentIdentifier);
}

uint64_t assignWithCopy for PersistentIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for PersistentIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24557DC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PersistentIdentifier.ID(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_24557DCDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PersistentIdentifier.ID(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PersistentIdentifier.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558E158();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for PersistentIdentifier.ID(uint64_t a1)
{
  uint64_t v2 = sub_24558E158();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t assignWithCopy for PersistentIdentifier.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PersistentIdentifier.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PersistentIdentifier.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558E158();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_24557DF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558E158();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_24557E000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24558E158();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_24557E070()
{
  return type metadata accessor for PersistentIdentifierImplementation(0);
}

uint64_t sub_24557E07C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24557E118()
{
  return 0;
}

ValueMetadata *type metadata accessor for PersistentIdentifier.CodingKeys()
{
  return &type metadata for PersistentIdentifier.CodingKeys;
}

unint64_t sub_24557E13C()
{
  unint64_t result = qword_268EE4270;
  if (!qword_268EE4270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4270);
  }
  return result;
}

uint64_t sub_24557E190()
{
  return sub_245488248(&qword_268EE4278, (void (*)(uint64_t))type metadata accessor for PersistentIdentifierImplementation);
}

uint64_t sub_24557E1D8()
{
  return sub_245488248((unint64_t *)&qword_26B0DA0F0, MEMORY[0x263F06EA8]);
}

uint64_t sub_24557E220()
{
  return sub_245488248(&qword_268EE4278, (void (*)(uint64_t))type metadata accessor for PersistentIdentifierImplementation);
}

unint64_t sub_24557E26C()
{
  unint64_t result = qword_268EE4280;
  if (!qword_268EE4280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4280);
  }
  return result;
}

unint64_t sub_24557E2C4()
{
  unint64_t result = qword_268EE4288;
  if (!qword_268EE4288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4288);
  }
  return result;
}

uint64_t type metadata accessor for GenericPersistentIdentifierImplementation.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24557E330()
{
  unint64_t result = qword_268EE4298;
  if (!qword_268EE4298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4298);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PersistentIdentifierImplementation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PersistentIdentifierImplementation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24557E4E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_24557E508(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24557E514(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PersistentIdentifierImplementation.CodingKeys()
{
  return &type metadata for PersistentIdentifierImplementation.CodingKeys;
}

uint64_t sub_24557E52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t _s9SwiftData20PersistentIdentifierV10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s9SwiftData20PersistentIdentifierV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24557E628);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24557E650()
{
  return 0;
}

uint64_t sub_24557E660()
{
  return swift_getWitnessTable();
}

unint64_t sub_24557E680()
{
  unint64_t result = qword_268EE4338;
  if (!qword_268EE4338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4338);
  }
  return result;
}

unint64_t sub_24557E6D8()
{
  unint64_t result = qword_268EE4340;
  if (!qword_268EE4340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4340);
  }
  return result;
}

unint64_t sub_24557E730()
{
  unint64_t result = qword_268EE4348;
  if (!qword_268EE4348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4348);
  }
  return result;
}

uint64_t sub_24557E784()
{
  return swift_getWitnessTable();
}

uint64_t sub_24557E7A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24557E7BC()
{
  return 1;
}

double Schema._coreDataMakeManagedObjectModel()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2454BE6A4();
  if (v2)
  {
    uint64_t v3 = v2;
    *(void *)(a1 + 24) = sub_2454C00A0(0, &qword_268EE37A0);
    *(void *)a1 = v3;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id sub_24557E820(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24558E3B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B0DA0E8 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_26B0DA160, sel_lock);
  if (qword_26B0DA158 != -1) {
    swift_once();
  }
  swift_beginAccess();
  int v8 = off_26B0DA150;
  uint64_t v9 = (void *)swift_retain();
  id v10 = sub_24548ADC0(v9, (uint64_t)v8);
  swift_release();
  swift_endAccess();
  if (v10) {
    goto LABEL_8;
  }
  uint64_t v11 = sub_2454BE6A4();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    swift_beginAccess();
    swift_retain();
    id v10 = v12;
    sub_24547E380((uint64_t)v10, v2);
    swift_endAccess();
    swift_release();
LABEL_8:
    objc_msgSend((id)qword_26B0DA160, sel_unlock);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B0D9D20);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_24559AB50;
    *(void *)(v13 + 32) = a1;
    *(void *)(v13 + 40) = v10;
    v22[1] = v13;
    sub_24558E7E8();
    sub_2454C00A0(0, &qword_268EE37A0);
    id v14 = a1;
    id v15 = v10;
    uint64_t v16 = (void *)sub_24558E7B8();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(self, sel_modelByMergingModels_, v16);

    return v17;
  }
  objc_msgSend((id)qword_26B0DA160, sel_unlock);
  sub_24558E3A8();
  long long v19 = sub_24558E398();
  os_log_type_t v20 = sub_24558EB98();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_245478000, v19, v20, "Failed to create an NSManagedObjectModel for this Schema mergedWith another NSManagedObjectModel", v21, 2u);
    MEMORY[0x2456A2BD0](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

double Schema._coreDataManagedObjectModel(mergedWith:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2454CE878(a1, (uint64_t)v8);
  uint64_t v3 = sub_2454C00A0(0, &qword_268EE37A0);
  if (swift_dynamicCast())
  {
    id v4 = sub_24557E820(v7);
    if (v4)
    {
      id v5 = v4;
      *(void *)(a2 + 24) = v3;

      *(void *)a2 = v5;
      return result;
    }
  }
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

double static Schema._coreDataMakeManagedObjectModel(_:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_245580024();
  if (v2)
  {
    uint64_t v3 = v2;
    *(void *)(a1 + 24) = sub_2454C00A0(0, &qword_268EE37A0);
    *(void *)a1 = v3;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double static Schema._coreDataManagedObjectModel(for:mergedWith:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2454CE878(a2, (uint64_t)v10);
  uint64_t v5 = sub_2454C00A0(0, &qword_268EE37A0);
  if (swift_dynamicCast())
  {
    id v6 = sub_2455801B4(a1, v9);
    if (v6)
    {
      id v7 = v6;
      *(void *)(a3 + 24) = v5;

      *(void *)a3 = v7;
      return result;
    }
  }
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

id sub_24557ED40()
{
  swift_beginAccess();
  if (sub_24558E5F8() == 0x7470697263736564 && v1 == 0xEB000000006E6F69) {
    goto LABEL_81;
  }
  char v3 = sub_24558F598();
  swift_bridgeObjectRelease();
  if (v3) {
    goto LABEL_80;
  }
  uint64_t v71 = MEMORY[0x263F8EE78];
  swift_beginAccess();
  unint64_t v4 = *(void *)(v0 + 128);
  uint64_t v63 = v0;
  if (v4 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_24558F1C8();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_8:
      id v6 = (unsigned char *)(v63 + 96);
      unint64_t v65 = v4 & 0xC000000000000001;
      swift_beginAccess();
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if (v65)
        {
          uint64_t v9 = (void *)MEMORY[0x2456A1A40](v7 - 4, v4);
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v9 = *(void **)(v4 + 8 * v7);
          swift_retain();
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        id v11 = objc_msgSend(v9, sel_propertyDescription);
        if (!v11) {
          goto LABEL_79;
        }
        uint64_t v12 = v11;
        self;
        uint64_t v13 = (void *)swift_dynamicCastObjCClass();
        if (!v13)
        {

LABEL_79:
          *(void *)&long long v69 = 0;
          *((void *)&v69 + 1) = 0xE000000000000000;
          sub_24558EF78();
          sub_24558E668();
          *(void *)&long long v67 = v9;
          type metadata accessor for Schema.Attribute();
          sub_24558F0E8();
          while (1)
          {
LABEL_80:
            sub_24558F1A8();
            __break(1u);
LABEL_81:
            swift_bridgeObjectRelease();
          }
        }
        if (*v6 == 1)
        {
          objc_msgSend(v13, sel_setOptional_, 1);
          self;
          uint64_t v14 = swift_dynamicCastObjCClass();
          if (v14)
          {
            id v15 = (void *)v14;
            id v64 = v12;
            id v16 = objc_msgSend(v15, sel_elements);
            sub_2454C00A0(0, &qword_26B0D8D30);
            unint64_t v17 = v4;
            uint64_t v18 = v6;
            uint64_t v19 = v5;
            unint64_t v20 = sub_24558E7C8();

            sub_24557FE64(v20);
            uint64_t v5 = v19;
            id v6 = v18;
            unint64_t v4 = v17;
            swift_bridgeObjectRelease();
          }
        }
        id v21 = v12;
        MEMORY[0x2456A11F0]();
        if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24558E808();
        }
        sub_24558E858();
        sub_24558E7E8();
        swift_release();

        ++v7;
      }
      while (v10 != v5);
    }
  }
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF228]), sel_init);
  swift_bridgeObjectRetain();
  long long v23 = (void *)sub_24558E5A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setName_, v23);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_24558E638();
  swift_bridgeObjectRelease();
  if (v24 >= 1)
  {
    id v25 = v22;
    swift_bridgeObjectRetain();
    uint64_t v26 = (void *)sub_24558E5A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v25, sel_setRenamingIdentifier_, v26);
  }
  swift_beginAccess();
  if (*(void *)(v63 + 112))
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_24558E638();
    swift_bridgeObjectRelease();
    if (v27 >= 1)
    {
      if (*(void *)(v63 + 112))
      {
        id v28 = v22;
        swift_bridgeObjectRetain();
        uint64_t v29 = (void *)sub_24558E5A8();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v30 = v22;
        uint64_t v29 = 0;
      }
      objc_msgSend(v22, sel_setVersionHashModifier_, v29);
    }
  }
  swift_beginAccess();
  objc_msgSend(v22, sel_setOptional_, *(unsigned __int8 *)(v63 + 96));
  uint64_t v31 = (uint64_t *)(v63 + 48);
  swift_beginAccess();
  uint64_t v32 = *(void *)(v63 + 48);
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v34 = 67;
    uint64_t v35 = *(void *)(v32 + 16);
    while ((*(unsigned char *)(v32 + v34) & 1) == 0)
    {
      v34 += 40;
      if (!--v35) {
        goto LABEL_39;
      }
    }
    objc_msgSend(v22, sel_setPreservesValueInHistoryOnDeletion_, 1);
    uint64_t v32 = *v31;
    uint64_t v33 = *(void *)(*v31 + 16);
    if (!v33) {
      goto LABEL_49;
    }
LABEL_39:
    uint64_t v36 = 68;
    uint64_t v37 = v33;
    while ((*(unsigned char *)(v32 + v36) & 1) == 0)
    {
      v36 += 40;
      if (!--v37) {
        goto LABEL_44;
      }
    }
    objc_msgSend(v22, sel_setIndexedBySpotlight_, 1);
    uint64_t v32 = *v31;
    uint64_t v33 = *(void *)(*v31 + 16);
    if (!v33) {
      goto LABEL_49;
    }
LABEL_44:
    uint64_t v38 = (unsigned char *)(v32 + 66);
    while ((*v38 & 1) == 0)
    {
      v38 += 40;
      if (!--v33) {
        goto LABEL_49;
      }
    }
    objc_msgSend(v22, sel_setAllowsCloudEncryption_, 1);
  }
LABEL_49:
  uint64_t v39 = (uint64_t *)(v63 + 120);
  swift_beginAccess();
  uint64_t v40 = *(void *)(v63 + 120);
  if (!*(void *)(v40 + 16))
  {
    long long v69 = 0u;
    long long v70 = 0u;
LABEL_59:
    sub_24549B1C0((uint64_t)&v69, &qword_26B0DA230);
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  unint64_t v41 = sub_2454A0B40(1836412517, 0xE400000000000000);
  if (v42)
  {
    sub_2454CE878(*(void *)(v40 + 56) + 32 * v41, (uint64_t)&v69);
  }
  else
  {
    long long v69 = 0u;
    long long v70 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v70 + 1)) {
    goto LABEL_59;
  }
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9F58);
  if (swift_dynamicCast())
  {
    id v44 = v22;
    id v45 = objc_msgSend(v44, sel_userInfo);
    if (v45)
    {
      uint64_t v46 = v45;
      uint64_t v47 = sub_24558E428();

      *((void *)&v67 + 1) = 0xE400000000000000;
      sub_24558EF28();
      uint64_t v68 = v43;
      sub_2454A0BBC(&v67, v66);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_245505FCC(v66, (uint64_t)&v69, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_2454BA024((uint64_t)&v69);
      if (v47)
      {
        uint64_t v49 = (void *)sub_24558E418();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v49 = 0;
      }
      objc_msgSend(v44, sel_setUserInfo_, v49);
    }
    else
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v44, sel_setUserInfo_, 0);
      swift_bridgeObjectRelease();
    }
  }
LABEL_60:
  uint64_t v50 = *v39;
  if (!*(void *)(*v39 + 16))
  {
    long long v69 = 0u;
    long long v70 = 0u;
LABEL_70:
    sub_24549B1C0((uint64_t)&v69, &qword_26B0DA230);
    goto LABEL_71;
  }
  swift_bridgeObjectRetain();
  unint64_t v51 = sub_2454A0B40(0x657079546D756E45, 0xE800000000000000);
  if (v52)
  {
    sub_2454CE878(*(void *)(v50 + 56) + 32 * v51, (uint64_t)&v69);
  }
  else
  {
    long long v69 = 0u;
    long long v70 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v70 + 1)) {
    goto LABEL_70;
  }
  uint64_t v53 = MEMORY[0x263F8D4F8];
  if (swift_dynamicCast())
  {
    char v54 = v67;
    id v55 = v22;
    id v56 = objc_msgSend(v55, sel_userInfo);
    if (v56)
    {
      unint64_t v57 = v56;
      uint64_t v58 = sub_24558E428();

      *(void *)&long long v67 = 0x657079546D756E45;
      *((void *)&v67 + 1) = 0xE800000000000000;
      sub_24558EF28();
      uint64_t v68 = v53;
      LOBYTE(v67) = v54;
      sub_2454A0BBC(&v67, v66);
      char v59 = swift_isUniquelyReferenced_nonNull_native();
      sub_245505FCC(v66, (uint64_t)&v69, v59);
      swift_bridgeObjectRelease();
      sub_2454BA024((uint64_t)&v69);
      if (v58)
      {
        unint64_t v60 = (void *)sub_24558E418();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v60 = 0;
      }
      objc_msgSend(v55, sel_setUserInfo_, v60);
    }
    else
    {
      objc_msgSend(v55, sel_setUserInfo_, 0);
      swift_bridgeObjectRelease();
    }
  }
LABEL_71:
  sub_2454C00A0(0, &qword_26B0D8D30);
  uint64_t v61 = (void *)sub_24558E7B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setElements_, v61);

  return v22;
}

void sub_24557F7F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7)
{
  uint64_t v31 = a2;
  uint64_t v12 = sub_24558ECE8();
  uint64_t v32 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v31 - v14;
  uint64_t v33 = *(void *)(a7 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v31 - v19;
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || (sub_24558E1B8(), swift_dynamicCastMetatype())
    || (type metadata accessor for Decimal(0), swift_dynamicCastMetatype())
    || swift_dynamicCastMetatype()
    || (sub_24558E1E8(), swift_dynamicCastMetatype())
    || (sub_24558E158(), swift_dynamicCastMetatype())
    || swift_dynamicCastMetatype())
  {
    objc_msgSend(a3, sel_setAttributeType_, 1800, v31);
    sub_24558E5D8();
    id v21 = (void *)sub_24558E5A8();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_setValueTransformerName_, v21);

    *(void *)&long long v35 = a4;
    *((void *)&v35 + 1) = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268EE3530);
    sub_24558E5E8();
    id v22 = (void *)sub_24558E5A8();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_setAttributeValueClassName_, v22);
  }
  else
  {
    swift_beginAccess();
    *a6 = 1;
    objc_msgSend(a3, sel_setAttributeType_, 1000);
    uint64_t v23 = v31 + 64;
    swift_beginAccess();
    sub_2454A1140(v23, (uint64_t)&v35);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA230);
    char v24 = swift_dynamicCast();
    id v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
    if (v24)
    {
      v25(v15, 0, 1, a7);
      uint64_t v26 = v33;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v20, v15, a7);
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v18, v20, a7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8CB0);
      if (swift_dynamicCast())
      {
        sub_24551E948(v34, &v35);
        __swift_project_boxed_opaque_existential_0Tm_0(&v35, v36);
        sub_24558DBF8();
        swift_allocObject();
        sub_24558DBE8();
        uint64_t v27 = sub_24558DBD8();
        uint64_t v29 = v28;
        swift_release();
        *(void *)&v34[0] = v27;
        *((void *)&v34[0] + 1) = v29;
        uint64_t v30 = sub_24558F588();
        sub_245580564((uint64_t)v34);
        objc_msgSend(a3, sel_setDefaultValue_, v30, v31);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v20, a7);
        __swift_destroy_boxed_opaque_existential_0Tm_0((uint64_t)&v35);
      }
      else
      {
        memset(v34, 0, sizeof(v34));
        (*(void (**)(char *, uint64_t))(v33 + 8))(v20, a7);
        sub_24549B1C0((uint64_t)v34, &qword_26B0D8E38);
      }
    }
    else
    {
      v25(v15, 1, 1, a7);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v12);
    }
  }
}

uint64_t sub_24557FE64(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24558F1C8();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_12;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x2456A1A40](i, a1);
    }
    else {
      id v5 = *(id *)(a1 + 8 * i + 32);
    }
    id v6 = v5;
    objc_msgSend(v5, sel_setOptional_, 1);
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      id v9 = v6;
      id v10 = objc_msgSend(v8, sel_elements);
      sub_2454C00A0(0, &qword_26B0D8D30);
      uint64_t v11 = sub_24558E7C8();

      sub_24557FE64(v11);
      swift_bridgeObjectRelease();
    }
  }
LABEL_12:

  return swift_bridgeObjectRelease();
}

void *sub_245580024()
{
  v6[0] = 1;
  type metadata accessor for Schema();
  v6[1] = 0;
  uint64_t v6[2] = 0;
  swift_allocObject();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = (void *)Schema.init(_:version:)(v0, (uint64_t)v6);
  if (qword_26B0DA0E8 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_26B0DA160, sel_lock);
  if (qword_26B0DA158 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = off_26B0DA150;
  char v3 = (void *)swift_retain();
  unint64_t v4 = sub_24548ADC0(v3, (uint64_t)v2);
  swift_release();
  swift_endAccess();
  if (!v4)
  {
    unint64_t v4 = (void *)sub_2454BE6A4();
    if (v4)
    {
      swift_beginAccess();
      swift_retain();
      sub_24547E380((uint64_t)v4, v1);
      swift_endAccess();
      swift_release();
    }
  }
  objc_msgSend((id)qword_26B0DA160, sel_unlock);
  swift_release();
  return v4;
}

id sub_2455801B4(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_24558E3B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v24[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = 1;
  type metadata accessor for Schema();
  v24[1] = 0;
  void v24[2] = 0;
  swift_allocObject();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = (void *)Schema.init(_:version:)(v7, (uint64_t)v24);
  if (qword_26B0DA0E8 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_26B0DA160, sel_lock);
  if (qword_26B0DA158 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v9 = off_26B0DA150;
  id v10 = (void *)swift_retain();
  id v11 = sub_24548ADC0(v10, (uint64_t)v9);
  swift_release();
  swift_endAccess();
  if (v11) {
    goto LABEL_8;
  }
  uint64_t v12 = sub_2454BE6A4();
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    swift_beginAccess();
    swift_retain();
    id v11 = v13;
    sub_24547E380((uint64_t)v11, v8);
    swift_endAccess();
    swift_release();
LABEL_8:
    objc_msgSend((id)qword_26B0DA160, sel_unlock);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B0D9D20);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_24559AB50;
    *(void *)(v14 + 32) = a2;
    *(void *)(v14 + 40) = v11;
    v24[0] = v14;
    sub_24558E7E8();
    sub_2454C00A0(0, &qword_268EE37A0);
    id v15 = a2;
    id v16 = v11;
    uint64_t v17 = (void *)sub_24558E7B8();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(self, sel_modelByMergingModels_, v17);
    swift_release();

    return v18;
  }
  objc_msgSend((id)qword_26B0DA160, sel_unlock);
  sub_24558E3A8();
  unint64_t v20 = sub_24558E398();
  os_log_type_t v21 = sub_24558EB98();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl(&dword_245478000, v20, v21, "Failed to create an NSManagedObjectModel for entityTypes mergedWith another NSManagedObjectModel", v22, 2u);
    MEMORY[0x2456A2BD0](v22, -1, -1);
  }

  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return 0;
}

uint64_t sub_245580564(uint64_t a1)
{
  return a1;
}

uint64_t sub_2455805B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

unint64_t sub_245580600()
{
  unint64_t result = qword_268EE4358[0];
  if (!qword_268EE4358[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268EE4358);
  }
  return result;
}

uint64_t destroy for PendingRelationshipLink(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PendingRelationshipLink(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(void *)(a2 + 32);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PendingRelationshipLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PendingRelationshipLink(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingRelationshipLink(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingRelationshipLink(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingRelationshipLink()
{
  return &type metadata for PendingRelationshipLink;
}

uint64_t sub_245580870()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2455808D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3 + result;
  if (__OFADD__(a3, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  BOOL v5 = __OFADD__(v4, a4);
  uint64_t v6 = v4 + a4;
  if (v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (!a4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a4 != -1 || v6 != 0x8000000000000000) {
    return sub_24558E8F8();
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_24558091C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_245580954()
{
  sub_24558091C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InstanceCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2455809A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_2455809A8()
{
  uint64_t result = sub_24558ECE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24558ECE8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_245580A8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v8 = *(void *)(v7 + 64);
  }
  else {
    size_t v8 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  size_t v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unsigned int v13 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((((((((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v10;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    id v18 = (const void *)(((unint64_t)a2 + v11) & v17);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v17), v18, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, v18, v5);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v11) & v17, 0, 1, v5);
    }
    uint64_t v19 = (void *)(((((unint64_t)a1 + v11) & v17) + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v20 = (void *)(((unint64_t)v18 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    os_log_type_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    id v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    *os_log_type_t v21 = *v22;
    uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v24;
    *(void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_245580D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v5 + 64) + a1;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = (v7 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v8, 1, v6);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(unint64_t, uint64_t))(v11 + 8);
    return v10(v8, v6);
  }
  return result;
}

void *sub_245580EBC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = v9;
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    size_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 56;
    v12(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v11 + 28);
    size_t v9 = *(void *)(v11 + 8);
  }
  if (v8) {
    size_t v13 = v9;
  }
  else {
    size_t v13 = v9 + 1;
  }
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  id v18 = (void *)(((unint64_t)a1 + v17) & ~v16);
  uint64_t v19 = (const void *)(((unint64_t)a2 + v17) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
  {
    int v20 = *(_DWORD *)(v15 + 84);
    size_t v21 = *(void *)(v15 + 64);
    if (v20) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v21 + 1;
    }
    memcpy(v18, v19, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v18, v19, v14);
    char v24 = *(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56);
    uint64_t v23 = v15 + 56;
    v24(v18, 0, 1, v14);
    int v20 = *(_DWORD *)(v23 + 28);
    size_t v21 = *(void *)(v23 + 8);
  }
  if (v20) {
    size_t v25 = v21;
  }
  else {
    size_t v25 = v21 + 1;
  }
  uint64_t v26 = (void *)(((unint64_t)v18 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (void *)(((unint64_t)v19 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v26 = *v27;
  uint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  *(void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_245581110(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  uint64_t v14 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v14;
  }
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v14 + v17;
  uint64_t v19 = (void *)(((unint64_t)a1 + v18) & ~v17);
  int v20 = (void *)(((unint64_t)a2 + v18) & ~v17);
  size_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v22 = v21(v19, 1, v15);
  int v23 = v21(v20, 1, v15);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v19, v20, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
      goto LABEL_25;
    }
    int v24 = *(_DWORD *)(v16 + 84);
    size_t v25 = *(void *)(v16 + 64);
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v19, v20, v15);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
    int v24 = *(_DWORD *)(v16 + 84);
    size_t v25 = *(void *)(v16 + 64);
  }
  if (v24) {
    size_t v26 = v25;
  }
  else {
    size_t v26 = v25 + 1;
  }
  memcpy(v19, v20, v26);
LABEL_25:
  if (*(_DWORD *)(v16 + 84)) {
    uint64_t v27 = *(void *)(v16 + 64);
  }
  else {
    uint64_t v27 = *(void *)(v16 + 64) + 1;
  }
  uint64_t v28 = (void *)(((unint64_t)v19 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)(((unint64_t)v20 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  uint64_t v32 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  *(void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_245581450(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = v9;
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    size_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 56;
    v12(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v11 + 28);
    size_t v9 = *(void *)(v11 + 8);
  }
  if (v8) {
    size_t v13 = v9;
  }
  else {
    size_t v13 = v9 + 1;
  }
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)(((unint64_t)a1 + v17) & ~v16);
  uint64_t v19 = (const void *)(((unint64_t)a2 + v17) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
  {
    int v20 = *(_DWORD *)(v15 + 84);
    size_t v21 = *(void *)(v15 + 64);
    if (v20) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v21 + 1;
    }
    memcpy(v18, v19, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, v14);
    int v24 = *(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56);
    uint64_t v23 = v15 + 56;
    v24(v18, 0, 1, v14);
    int v20 = *(_DWORD *)(v23 + 28);
    size_t v21 = *(void *)(v23 + 8);
  }
  if (v20) {
    size_t v25 = v21;
  }
  else {
    size_t v25 = v21 + 1;
  }
  size_t v26 = (void *)(((unint64_t)v18 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (void *)(((unint64_t)v19 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  *size_t v26 = *v27;
  uint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  *(void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_2455816A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  uint64_t v14 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v14;
  }
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v14 + v17;
  uint64_t v19 = (void *)(((unint64_t)a1 + v18) & ~v17);
  int v20 = (void *)(((unint64_t)a2 + v18) & ~v17);
  size_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v22 = v21(v19, 1, v15);
  int v23 = v21(v20, 1, v15);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v19, v20, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
      goto LABEL_25;
    }
    int v24 = *(_DWORD *)(v16 + 84);
    size_t v25 = *(void *)(v16 + 64);
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v19, v20, v15);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
    int v24 = *(_DWORD *)(v16 + 84);
    size_t v25 = *(void *)(v16 + 64);
  }
  if (v24) {
    size_t v26 = v25;
  }
  else {
    size_t v26 = v25 + 1;
  }
  memcpy(v19, v20, v26);
LABEL_25:
  if (*(_DWORD *)(v16 + 84)) {
    uint64_t v27 = *(void *)(v16 + 64);
  }
  else {
    uint64_t v27 = *(void *)(v16 + 64) + 1;
  }
  uint64_t v28 = (void *)(((unint64_t)v19 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)(((unint64_t)v20 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  uint64_t v32 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  *(void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2455819E4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v6) {
    unsigned int v11 = v6;
  }
  else {
    unsigned int v11 = v10;
  }
  if (v5) {
    uint64_t v12 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v12 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 1;
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  if (v9) {
    uint64_t v14 = 7;
  }
  else {
    uint64_t v14 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = v12 + v13;
  if (v11 < a2)
  {
    unint64_t v16 = ((((((((v14 + *(void *)(*(void *)(v7 - 8) + 64) + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    if ((v16 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v11 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v16);
        if (!*((unsigned char *)a1 + v16)) {
          break;
        }
        goto LABEL_33;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v16);
        if (*(_WORD *)((char *)a1 + v16)) {
          goto LABEL_33;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x245581BFCLL);
      case 4:
        int v20 = *(_DWORD *)((char *)a1 + v16);
        if (!v20) {
          break;
        }
LABEL_33:
        unsigned int v21 = v20 - 1;
        if ((v16 & 0xFFFFFFF8) != 0)
        {
          unsigned int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v11 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (!v11) {
    return 0;
  }
  if (v6 >= v10) {
    unsigned int v23 = (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    unsigned int v23 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(((unint64_t)a1 + v15) & ~v13, v9, v7);
  }
  if (v23 >= 2) {
    return v23 - 1;
  }
  else {
    return 0;
  }
}

void sub_245581C10(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(a4 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12) {
    unsigned int v14 = v12 - 1;
  }
  else {
    unsigned int v14 = 0;
  }
  if (v14 <= v9) {
    unsigned int v15 = v9;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v8) {
    size_t v16 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  }
  else {
    size_t v16 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 1;
  }
  if (v12) {
    size_t v17 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  else {
    size_t v17 = *(void *)(*(void *)(v10 - 8) + 64) + 1;
  }
  size_t v18 = ((((((((v17 + ((v16 + v13) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v15 < a3)
  {
    unsigned int v19 = a3 - v15;
    if (((((((((v17 + ((v16 + v13) & ~v13) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v20 = v19 + 1;
    else {
      unsigned int v20 = 2;
    }
    if (v20 >= 0x10000) {
      int v21 = 4;
    }
    else {
      int v21 = 2;
    }
    if (v20 < 0x100) {
      int v21 = 1;
    }
    if (v20 >= 2) {
      int v6 = v21;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v15)
  {
    if (((((((((v17 + ((v16 + v13) & ~v13) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      int v22 = a2 - v15;
    else {
      int v22 = 1;
    }
    if (((((((((v17 + ((v16 + v13) & ~v13) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      unsigned int v23 = ~v15 + a2;
      bzero(a1, v18);
      *(_DWORD *)a1 = v23;
    }
    switch(v6)
    {
      case 1:
        a1[v18] = v22;
        return;
      case 2:
        *(_WORD *)&a1[v18] = v22;
        return;
      case 3:
        goto LABEL_75;
      case 4:
        *(_DWORD *)&a1[v18] = v22;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 3:
LABEL_75:
      __break(1u);
      JUMPOUT(0x245581FA4);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_42;
    default:
LABEL_42:
      if (a2)
      {
LABEL_43:
        if (v9 >= v14)
        {
          if (v9 >= a2)
          {
            uint64_t v31 = a2 + 1;
            uint64_t v32 = *(void (**)(char *, uint64_t))(v7 + 56);
            v32(a1, v31);
          }
          else
          {
            if (v16 <= 3) {
              int v27 = ~(-1 << (8 * v16));
            }
            else {
              int v27 = -1;
            }
            if (v16)
            {
              int v25 = v27 & (~v9 + a2);
              if (v16 <= 3) {
                int v28 = v16;
              }
              else {
                int v28 = 4;
              }
              bzero(a1, v16);
              switch(v28)
              {
                case 2:
LABEL_71:
                  *(_WORD *)a1 = v25;
                  break;
                case 3:
LABEL_72:
                  *(_WORD *)a1 = v25;
                  a1[2] = BYTE2(v25);
                  break;
                case 4:
LABEL_73:
                  *(_DWORD *)a1 = v25;
                  break;
                default:
LABEL_62:
                  *a1 = v25;
                  break;
              }
            }
          }
        }
        else
        {
          a1 = (char *)((unint64_t)&a1[v16 + v13] & ~v13);
          if (v14 >= a2)
          {
            uint64_t v29 = a2 + 1;
            uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
            v30(a1, v29, v12, v10);
          }
          else
          {
            if (v17 <= 3) {
              int v24 = ~(-1 << (8 * v17));
            }
            else {
              int v24 = -1;
            }
            if (v17)
            {
              int v25 = v24 & (~v14 + a2);
              if (v17 <= 3) {
                int v26 = v17;
              }
              else {
                int v26 = 4;
              }
              bzero(a1, v17);
              switch(v26)
              {
                case 2:
                  goto LABEL_71;
                case 3:
                  goto LABEL_72;
                case 4:
                  goto LABEL_73;
                default:
                  goto LABEL_62;
              }
            }
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for InstanceCache.Slot()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_245582004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_24558200C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_245582054(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_245582074(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

uint64_t type metadata accessor for InstanceCache.DoublyLinkedList()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2455820BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_2455820C4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2455820FC()
{
  return swift_bridgeObjectRelease();
}

void *sub_245582104(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_24558215C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_24558219C(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2455821E4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for RingBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24558223C()
{
  return swift_getWitnessTable();
}

uint64_t sub_245582258(uint64_t a1)
{
  return a1;
}

uint64_t sub_245582288@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_245582258(a1);
  *a2 = result;
  a2[1] = 0;
  a2[2] = v4;
  return result;
}

uint64_t sub_2455822B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E068](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

uint64_t sub_2455822C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E078](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

uint64_t sub_2455822D4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E060](a1, a2, WitnessTable, v5);
}

void *sub_245582344(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_245582864(a1, a2, a3, MEMORY[0x263F8D7A8]);
}

uint64_t sub_24558235C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2455823E0()
{
  swift_getWitnessTable();

  return sub_24558EA08();
}

uint64_t sub_245582464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

void sub_2455824D8(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_2455824E0(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

void (*sub_2455824EC(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_2455825AC(v7, *a2, *v3, v3[1], v3[2], *(void *)(a3 + 16));
  return sub_245582564;
}

void sub_245582564(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_2455825AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(void *a1)
{
  uint64_t v10 = *(void *)(a6 - 8);
  *a1 = a6;
  a1[1] = v10;
  a1[2] = malloc(*(void *)(v10 + 64));
  sub_2455808D4(a2, a3, a4, a5);
  return sub_245582680;
}

void sub_245582680(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_2455826D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v3 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E070](a1, WitnessTable, v3);
}

uint64_t sub_245582740()
{
  return *(void *)(v0 + 16);
}

void sub_245582748(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_245582758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245582CD8(a1, a2, a3, a4, MEMORY[0x263F8D870], MEMORY[0x263F8D170]);
}

uint64_t sub_245582798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245582CD8(a1, a2, a3, a4, MEMORY[0x263F8D1A0], MEMORY[0x263F8D180]);
}

uint64_t sub_2455827DC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E058](a1, a2, WitnessTable, v5);
}

void *sub_24558284C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_245582864(a1, a2, a3, MEMORY[0x263F8D7A0]);
}

void *sub_245582864(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, void))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = a4(&v9, a1, a2, WitnessTable, MEMORY[0x263F8D708]);
  *a1 = v9;
  return result;
}

__n128 sub_2455828DC@<Q0>(uint64_t a1@<X8>)
{
  *(void *)a1 = *(void *)v1;
  __n128 result = *(__n128 *)(v1 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(void *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_2455828F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_245582948()
{
  return 2;
}

uint64_t sub_245582950()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_245582F48();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2455829B0()
{
  return sub_24558E728();
}

uint64_t sub_2455829D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2455829F0()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_2455829FC()
{
  return sub_245582BA4(&qword_268EE4560);
}

unint64_t sub_245582A30()
{
  unint64_t result = qword_268EE4570;
  if (!qword_268EE4570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268EE4570);
  }
  return result;
}

uint64_t sub_245582A84()
{
  return swift_getWitnessTable();
}

uint64_t sub_245582AA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_245582ABC()
{
  return sub_245582BA4(&qword_268EE4578);
}

uint64_t sub_245582AF0()
{
  return swift_getWitnessTable();
}

uint64_t sub_245582B54()
{
  return swift_getWitnessTable();
}

uint64_t sub_245582B70()
{
  return sub_245582BA4(&qword_268EE4580);
}

uint64_t sub_245582BA4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE4568);
    sub_245582A30();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_245582C14()
{
  return swift_getWitnessTable();
}

uint64_t sub_245582C78(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_245582C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245582CD8(a1, a2, a3, a4, MEMORY[0x263F8D1A0], MEMORY[0x263F8D180]);
}

uint64_t sub_245582CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245582CD8(a1, a2, a3, a4, MEMORY[0x263F8D870], MEMORY[0x263F8D170]);
}

uint64_t sub_245582CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  unsigned int v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unsigned int v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  size_t v18 = (char *)&v22 - v17;
  char v19 = sub_24558E4F8();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_245582F4C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_24558EB18();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_24558E4F8();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_24558E4F8();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_245583170()
{
  uint64_t result = type metadata accessor for PersistentIdentifier(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_245583210(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_2455836F8(a1);
  return v2;
}

BOOL sub_245583250(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_245583264()
{
  uint64_t v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 8);
  sub_24558F7D8();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
  sub_24558E158();
  sub_24554DE60();
  sub_24558E4D8();
  sub_24549B280((uint64_t)v3);
  return sub_24558F818();
}

uint64_t sub_245583340()
{
  uint64_t v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
  sub_24558E158();
  sub_24554DE60();
  sub_24558E4D8();
  return sub_24549B280((uint64_t)v3);
}

uint64_t sub_245583410()
{
  uint64_t v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 8);
  sub_24558F7D8();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
  sub_24558E158();
  sub_24554DE60();
  sub_24558E4D8();
  sub_24549B280((uint64_t)v3);
  return sub_24558F818();
}

unint64_t sub_2455834F8()
{
  return 0xD000000000000011;
}

unint64_t sub_24558356C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_24558E448();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA230);
  MEMORY[0x2456A1260](v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t sub_2455836E4@<X0>(uint64_t a1@<X8>)
{
  return sub_24549B2DC(v1 + qword_268EE4588, a1);
}

void *sub_2455836F8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(v4 + 80);
  uint64_t v9 = *(void *)(v4 + 88);
  type metadata accessor for KnownKeysDictionary();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = sub_2454D72F8((uint64_t)v8, v9);
  void v10[2] = v11;
  v10[3] = v12;
  memset(v21, 0, sizeof(v21));
  _DWORD v10[4] = sub_2454A3680((uint64_t)v21, *(void *)(v11 + 16));
  uint64_t v13 = sub_2454A0BCC(v8, v9);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v13 + 64);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v20 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245497E04(v15);
  uint64_t v16 = *(void *)(v20 + 16);
  if (v16)
  {
    char v19 = v7;
    uint64_t v17 = (void *)(v20 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_245583900(v17, (uint64_t)v10, a1, (uint64_t)v8, v9);
      v17 += 5;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease_n();
    uint64_t v7 = v19;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v2[2] = v10;
  swift_retain();
  PersistentModel.persistentModelID.getter((uint64_t)v8, v9, (uint64_t)v7);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_2454A1C18((uint64_t)v7, (uint64_t)v2 + qword_268EE4588);
  return v2;
}

uint64_t sub_245583900(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2454AFE04((uint64_t)a1, (uint64_t)&v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA128);
  type metadata accessor for Schema.Attribute();
  if (swift_dynamicCast())
  {
    uint64_t v8 = v29;
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
    uint64_t v13 = v12;
    sub_24552DF44(v8, a4, a5, (uint64_t)&v27);
    uint64_t v14 = v11;
    uint64_t v15 = v13;
LABEL_3:
    sub_24549D640((uint64_t)&v27, v14, v15);
    return swift_release();
  }
  sub_2454AFE04((uint64_t)a1, (uint64_t)&v27);
  type metadata accessor for Schema.Relationship();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v17 = (void *)v29;
    int v18 = *(unsigned __int8 *)(v29 + 168);
    uint64_t v19 = a1[3];
    uint64_t v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
    uint64_t v23 = v22;
    if (v18 == 1)
    {
      uint64_t v24 = sub_24552EF7C((uint64_t)v17, a4, a5);
      if (v24)
      {
        uint64_t v25 = v24;
        *((void *)&v28 + 1) = swift_getObjectType();
        *(void *)&long long v27 = v25;
      }
      else
      {
        long long v27 = 0u;
        long long v28 = 0u;
      }
      uint64_t v14 = v21;
      uint64_t v15 = v23;
      goto LABEL_3;
    }
    uint64_t v26 = sub_24552F744(v17, a4, a5);
    *((void *)&v28 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C20);
    *(void *)&long long v27 = v26;
    sub_24549D640((uint64_t)&v27, v21, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_245583B10@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!*(void *)(v6 + 16)) {
    goto LABEL_7;
  }
  uint64_t v8 = result;
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_2454A0B40(v8, a2);
  if ((v10 & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  unint64_t v11 = *(void *)(*(void *)(v6 + 56) + 8 * v9);
  swift_bridgeObjectRelease();
  uint64_t result = swift_beginAccess();
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = *(void *)(v5 + 32);
    if (v11 < *(void *)(v12 + 16)) {
      return sub_2454A1140(v12 + 32 * v11 + 32, (uint64_t)a3);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_245583BDC()
{
  swift_release();
  sub_24549B280(v0 + qword_268EE4588);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ModelSnapshot()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_245583C60(uint64_t *a1, uint64_t *a2)
{
  return sub_245583C84(*a1, *a2);
}

BOOL sub_245583C84(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

unint64_t sub_245583C98()
{
  return sub_24558356C();
}

unint64_t sub_245583CBC()
{
  sub_24558E448();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA230);
  MEMORY[0x2456A1260](v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24558E668();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t sub_245583E34()
{
  sub_24558E448();
  strcpy((char *)v1, "KnownKeysMap: ");
  sub_24558E668();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t destroy for KnownKeysDictionary.KnownKeysMap()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s9SwiftData19KnownKeysDictionaryC12KnownKeysMapVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KnownKeysDictionary.KnownKeysMap(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for KnownKeysDictionary.KnownKeysMap(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeBufferWithCopyOfBuffer for AnyModelSnapshot(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for AnyModelSnapshot()
{
  return swift_unknownObjectRelease();
}

void *assignWithCopy for AnyModelSnapshot(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *assignWithTake for AnyModelSnapshot(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t _s9SwiftData19KnownKeysDictionaryC12KnownKeysMapVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2455840E4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyModelSnapshot()
{
  return &type metadata for AnyModelSnapshot;
}

unint64_t sub_245584134()
{
  unint64_t result = qword_268EE4610[0];
  if (!qword_268EE4610[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268EE4610);
  }
  return result;
}

unint64_t sub_245584188()
{
  return sub_245583CBC();
}

uint64_t sub_2455841AC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of BackingData.init(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BackingData.persistentModelID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BackingData.persistentModelID.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of BackingData.persistentModelID.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of BackingData.metadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of BackingData.getValue<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of BackingData.getValue<A, B>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 88))();
}

uint64_t dispatch thunk of BackingData.getValue<A, B>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 96))();
}

uint64_t dispatch thunk of BackingData.getTransformableValue<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of BackingData.setValue<A, B>(forKey:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 144))();
}

uint64_t sub_2455842F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v46 = a3;
  uint64_t v7 = *v3;
  uint64_t v8 = *a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  MEMORY[0x270FA5388](v9 - 8);
  id v45 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D89E8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D89E0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  int v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v44 - v19;
  if (*((unsigned char *)v4 + qword_26B0DD428) != 1)
  {
    uint64_t v29 = v4[2];
    uint64_t v30 = *(void *)(v29 + 24);
    if (!*(void *)(v30 + 16))
    {
LABEL_28:
      swift_retain();
LABEL_30:
      long long v48 = 0u;
      long long v49 = 0u;
      swift_release();
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    swift_retain();
    swift_retain();
    unint64_t v31 = sub_2454CEC48((uint64_t)a1);
    if ((v32 & 1) == 0)
    {
      swift_release();
      goto LABEL_30;
    }
    unint64_t v33 = *(void *)(*(void *)(v30 + 56) + 8 * v31);
    swift_release();
    swift_beginAccess();
    if ((v33 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v34 = *(void *)(v29 + 32);
      if (v33 < *(void *)(v34 + 16))
      {
        sub_2454A37D4(v34 + 32 * v33 + 32, (uint64_t)&v48, &qword_26B0DA230);
        swift_release();
        if (*((void *)&v49 + 1))
        {
          sub_2454A0BBC(&v48, v50);
          uint64_t v35 = *(void *)(*MEMORY[0x263F8EA20] + v8 + 8);
          swift_dynamicCast();
          PersistentModel.persistentModelID.getter(v35, a2, v46);
          return swift_unknownObjectRelease();
        }
        goto LABEL_31;
      }
    }
    __break(1u);
    goto LABEL_26;
  }
  v44[0] = v7;
  v44[1] = v8;
  uint64_t v21 = v4[2];
  uint64_t v22 = *(void *)(v21 + 24);
  uint64_t v23 = *(void *)(v22 + 16);
  swift_retain();
  if (v23)
  {
    uint64_t v24 = swift_retain();
    unint64_t v25 = sub_2454CEC48(v24);
    if (v26)
    {
      unint64_t v27 = *(void *)(*(void *)(v22 + 56) + 8 * v25);
      swift_release();
      swift_beginAccess();
      if ((v27 & 0x8000000000000000) == 0)
      {
        uint64_t v28 = *(void *)(v21 + 32);
        if (v27 < *(void *)(v28 + 16))
        {
          sub_2454A37D4(v28 + 32 * v27 + 32, (uint64_t)v50, &qword_26B0DA230);
          goto LABEL_15;
        }
        goto LABEL_27;
      }
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    swift_release();
  }
  memset(v50, 0, sizeof(v50));
LABEL_15:
  swift_release();
  sub_2454A37D4((uint64_t)v50, (uint64_t)&v48, &qword_26B0DA230);
  if (!*((void *)&v49 + 1))
  {
    sub_2454A5364((uint64_t)&v48, &qword_26B0DA230);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_19:
    sub_2454A5364((uint64_t)v13, &qword_26B0D89E8);
    sub_2454A37D4((uint64_t)v50, (uint64_t)&v48, &qword_26B0DA230);
    if (*((void *)&v49 + 1))
    {
      uint64_t v39 = type metadata accessor for PersistentIdentifier(0);
      uint64_t v40 = (uint64_t)v45;
      int v41 = swift_dynamicCast();
      uint64_t v42 = *(void *)(v39 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v40, v41 ^ 1u, 1, v39);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v39) != 1)
      {
        sub_2454A5364((uint64_t)v50, &qword_26B0DA230);
        uint64_t v38 = v40;
        return sub_2454A1C18(v38, v46);
      }
LABEL_33:
      sub_2454A5364(v40, &qword_26B0D9280);
      *(void *)&long long v48 = 0;
      *((void *)&v48 + 1) = 0xE000000000000000;
      sub_24558EF78();
      sub_24558E668();
      uint64_t v47 = a1;
      sub_24558F8A8();
      sub_24558F568();
      sub_24558E668();
      uint64_t v47 = (void *)v4[2];
      type metadata accessor for KnownKeysDictionary();
      sub_24558F0E8();
      sub_24558E668();
      uint64_t v47 = v4;
      sub_24558F568();
      uint64_t result = sub_24558F1A8();
      __break(1u);
      return result;
    }
LABEL_32:
    sub_2454A5364((uint64_t)&v48, &qword_26B0DA230);
    uint64_t v43 = type metadata accessor for PersistentIdentifier(0);
    uint64_t v40 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v45, 1, 1, v43);
    goto LABEL_33;
  }
  int v37 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, v37 ^ 1u, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    goto LABEL_19;
  }
  sub_2454A5364((uint64_t)v50, &qword_26B0DA230);
  sub_2454A1C18((uint64_t)v13, (uint64_t)v20);
  sub_2454A1C18((uint64_t)v20, (uint64_t)v18);
  swift_unknownObjectRelease();
  uint64_t v38 = (uint64_t)v18;
  return sub_2454A1C18(v38, v46);
}

uint64_t sub_2455849EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a3;
  v27[1] = *v3;
  uint64_t v6 = *(void *)(*MEMORY[0x263F8EA20] + *a1 + 8);
  uint64_t v7 = sub_24558ECE8();
  v27[0] = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v27 - v9;
  uint64_t v11 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v27 - v12;
  uint64_t v14 = v3[2];
  uint64_t v15 = *(void *)(v14 + 24);
  uint64_t v16 = *(void *)(v15 + 16);
  swift_retain();
  if (!v16) {
    goto LABEL_10;
  }
  uint64_t v17 = swift_retain();
  unint64_t v18 = sub_2454CEC48(v17);
  if ((v19 & 1) == 0)
  {
    swift_release();
LABEL_10:
    long long v31 = 0u;
    long long v32 = 0u;
    swift_release();
    goto LABEL_11;
  }
  unint64_t v20 = *(void *)(*(void *)(v15 + 56) + 8 * v18);
  swift_release();
  swift_beginAccess();
  if ((v20 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v22 = *(void *)(v14 + 32);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 16);
  if (v20 >= (unint64_t)v21)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    v21(v10, 1, 1, v6);
    (*(void (**)(char *, uint64_t))(v27[0] + 8))(v10, v7);
    sub_2454CE878((uint64_t)v33, (uint64_t)&v31);
    *(void *)&v29[0] = 0;
    *((void *)&v29[0] + 1) = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v30 = a1;
    sub_24558F8A8();
    sub_24558F568();
    sub_24558E668();
    sub_24558F908();
    sub_24558E668();
    swift_bridgeObjectRelease();
    sub_24558E668();
    sub_24558F0E8();
    sub_24558E668();
    uint64_t v30 = v4;
    sub_24558F568();
    goto LABEL_23;
  }
  sub_2454A37D4(v22 + 32 * v20 + 32, (uint64_t)&v31, &qword_26B0DA230);
  swift_release();
  if (!*((void *)&v32 + 1))
  {
LABEL_11:
    sub_2454A5364((uint64_t)&v31, &qword_26B0DA230);
    return MEMORY[0x263F8EE78];
  }
  sub_2454A0BBC(&v31, v33);
  if (*((unsigned char *)v4 + qword_26B0DD428) != 1)
  {
    sub_2454CE878((uint64_t)v33, (uint64_t)&v31);
    int v26 = swift_dynamicCast();
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    if (v26)
    {
      v21(v10, 0, 1, v6);
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, v6);
      unint64_t v23 = sub_2454CC744(1, v6, v28);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v6);
LABEL_17:
      uint64_t v24 = (char *)v33;
      goto LABEL_18;
    }
    goto LABEL_21;
  }
  sub_2454CE878((uint64_t)v33, (uint64_t)&v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C70);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v33);
    unint64_t v23 = *(void *)&v29[0];
    *(void *)&long long v31 = *(void *)&v29[0];
    sub_2454CD178((long long *)((char *)v29 + 8), (uint64_t)&v31 + 8);
    *(void *)&v29[0] = v23;
    sub_2454CD178((long long *)((char *)&v31 + 8), (uint64_t)v29 + 8);
    uint64_t v24 = (char *)v29 + 8;
LABEL_18:
    __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v24);
    return v23;
  }
  memset(v29, 0, sizeof(v29));
  sub_2454A5364((uint64_t)v29, &qword_26B0D8C78);
  sub_2454CE878((uint64_t)v33, (uint64_t)&v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D92A0);
  if (swift_dynamicCast())
  {
    unint64_t v23 = *(void *)&v29[0];
    goto LABEL_17;
  }
  *(void *)&long long v31 = 0;
  *((void *)&v31 + 1) = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_24558E668();
  sub_24558E668();
  sub_24558F0E8();
  sub_24558E668();
  *(void *)&v29[0] = v4;
  sub_24558F568();
LABEL_23:
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24558502C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_allocObject();
  sub_24558906C(v3, a2);
  return v3;
}

void sub_24558506C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2454CCCCC(a3, a4, (uint64_t *)&v10);
  if (AssociatedTypeWitness)
  {
    sub_2454CD178(&v10, (uint64_t)v13);
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    MEMORY[0x270FA5388](v5);
    (*(void (**)(char *))(v7 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_0Tm_0((uint64_t *)&v10);
    sub_24558E6E8();
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v10, AssociatedTypeWitness);
      sub_24558ED18();
      if (!v9) {
        break;
      }
      a1(v9);
      swift_unknownObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)&v10);
    __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v13);
  }
}

uint64_t sub_24558522C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

void sub_245585298()
{
}

void (*sub_2455852F4())()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  uint64_t v1 = malloc(*(void *)(*(void *)(v0 - 8) + 64));
  uint64_t v2 = type metadata accessor for PersistentIdentifier(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return sub_245585398;
}

void sub_245585398()
{
}

void sub_2455853F4()
{
}

uint64_t sub_245585450()
{
  return swift_allocObject();
}

void sub_245585460()
{
}

void sub_2455854BC()
{
}

void sub_245585518()
{
}

void sub_245585574()
{
}

void sub_2455855D0()
{
}

void sub_24558562C()
{
}

void sub_245585688()
{
}

void sub_2455856E4()
{
}

void sub_245585740()
{
}

void sub_24558579C()
{
}

void sub_2455857F8()
{
}

void sub_245585854()
{
}

uint64_t sub_2455858B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 128))();
  *a1 = result;
  return result;
}

void (*sub_2455858E8(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 112))();
  return sub_245585964;
}

void sub_245585964(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_2455859AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)v3 + 152))(a1, a3);
}

uint64_t sub_2455859F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(**(void **)v5 + 176))(a1, a3, a4, a5);
}

uint64_t sub_245585A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(**(void **)v4 + 200))(a1, a2, a4);
}

uint64_t sub_245585A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(void **)v6 + 216))(a1, a2, a4, a5, a6);
}

void (*sub_245585ADC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280) - 8) + 64);
  v3[4] = malloc(v4);
  uint64_t v5 = malloc(v4);
  v3[5] = v5;
  uint64_t v6 = v1 + qword_26B0DD418;
  swift_beginAccess();
  sub_2454A37D4(v6, (uint64_t)v5, &qword_26B0D9280);
  return sub_245585BAC;
}

void sub_245585BAC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  size_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    sub_2454A37D4(*(void *)(*(void *)a1 + 40), (uint64_t)v3, &qword_26B0D9280);
    sub_24547B11C((uint64_t)v3);
    sub_2454A5364((uint64_t)v4, &qword_26B0D9280);
  }
  else
  {
    sub_24547B11C(*(void *)(*(void *)a1 + 40));
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_245585C44(uint64_t *a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v4 = *a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v57 = (char *)v54 - v9;
  uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v55 = *(void *)(v10 - 8);
  uint64_t v56 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v58 = (uint64_t)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D89E8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D89E0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  char v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v54 - v20;
  if (*(unsigned char *)(v2 + qword_26B0DD428) != 1)
  {
    uint64_t v31 = *(void *)(v2 + 16);
    uint64_t v32 = *(void *)(v31 + 24);
    if (!*(void *)(v32 + 16))
    {
LABEL_28:
      swift_retain();
LABEL_30:
      long long v61 = 0u;
      long long v62 = 0u;
      swift_release();
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    swift_retain();
    swift_retain();
    unint64_t v33 = sub_2454CEC48((uint64_t)a1);
    if ((v34 & 1) == 0)
    {
      swift_release();
      goto LABEL_30;
    }
    unint64_t v35 = *(void *)(*(void *)(v32 + 56) + 8 * v33);
    swift_release();
    swift_beginAccess();
    if ((v35 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v36 = *(void *)(v31 + 32);
      if (v35 < *(void *)(v36 + 16))
      {
        sub_2454A37D4(v36 + 32 * v35 + 32, (uint64_t)&v61, &qword_26B0DA230);
        swift_release();
        if (*((void *)&v62 + 1))
        {
          sub_2454A0BBC(&v61, v63);
          swift_dynamicCast();
          return v60;
        }
        goto LABEL_31;
      }
    }
    __break(1u);
    goto LABEL_26;
  }
  v54[2] = v4;
  uint64_t v22 = *(char **)(*(void *)(v2 + qword_26B0DD420) + 16);
  if (!v22)
  {
LABEL_32:
    *(void *)&v63[0] = 0;
    *((void *)&v63[0] + 1) = 0xE000000000000000;
    sub_24558EF78();
    swift_bridgeObjectRelease();
    *(void *)&v63[0] = 0xD000000000000017;
    *((void *)&v63[0] + 1) = 0x80000002455969A0;
    sub_2454A1CC0((uint64_t)v8);
    sub_24558E5E8();
    sub_24558E668();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v54[1] = v2;
  uint64_t v23 = *(void *)(v2 + 16);
  uint64_t v24 = *(void *)(v23 + 24);
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v8 = v22;
  swift_retain();
  swift_retain();
  if (!v25)
  {
LABEL_15:
    memset(v63, 0, 32);
    goto LABEL_16;
  }
  uint64_t v26 = swift_retain();
  unint64_t v27 = sub_2454CEC48(v26);
  if ((v28 & 1) == 0)
  {
    swift_release();
    goto LABEL_15;
  }
  unint64_t v29 = *(void *)(*(void *)(v24 + 56) + 8 * v27);
  swift_release();
  swift_beginAccess();
  if ((v29 & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v30 = *(void *)(v23 + 32);
  if (v29 >= *(void *)(v30 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_2454A37D4(v30 + 32 * v29 + 32, (uint64_t)v63, &qword_26B0DA230);
LABEL_16:
  swift_release();
  sub_2454A37D4((uint64_t)v63, (uint64_t)&v61, &qword_26B0DA230);
  if (*((void *)&v62 + 1))
  {
    int v38 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, v38 ^ 1u, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      swift_release();
      uint64_t v39 = &v21[*(int *)(v15 + 48)];
      sub_2454A5364((uint64_t)v63, &qword_26B0DA230);
      uint64_t v40 = &v14[*(int *)(v15 + 48)];
      sub_2454A1C18((uint64_t)v14, (uint64_t)v21);
      uint64_t v42 = *(void *)v40;
      uint64_t v41 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = v42;
      *((void *)v39 + 1) = v41;
      uint64_t v43 = &v19[*(int *)(v15 + 48)];
      sub_2454A1C18((uint64_t)v21, (uint64_t)v19);
      *(void *)uint64_t v43 = v42;
      *((void *)v43 + 1) = v41;
      *(void *)&long long v61 = v42;
      *((void *)&v61 + 1) = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
      swift_dynamicCast();
      uint64_t v37 = v60;
      sub_24549B280((uint64_t)v19);
      return v37;
    }
  }
  else
  {
    sub_2454A5364((uint64_t)&v61, &qword_26B0DA230);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_2454A5364((uint64_t)v14, &qword_26B0D89E8);
  sub_2454A37D4((uint64_t)v63, (uint64_t)&v61, &qword_26B0DA230);
  if (*((void *)&v62 + 1))
  {
    uint64_t v45 = v56;
    uint64_t v44 = (uint64_t)v57;
    int v46 = swift_dynamicCast();
    uint64_t v47 = v55;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v44, v46 ^ 1u, 1, v45);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v44, 1, v45) != 1)
    {
      uint64_t v48 = v58;
      sub_2454A1C18(v44, v58);
      *(void *)&long long v61 = sub_2454B38B4(v48);
      *((void *)&v61 + 1) = v49;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
      swift_dynamicCast();
      uint64_t v37 = v60;
      *((void *)&v62 + 1) = v15;
      boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0((uint64_t *)&v61);
      unint64_t v51 = (uint64_t *)((char *)boxed_opaque_existential_0Tm_0 + *(int *)(v15 + 48));
      sub_24549B2DC(v48, (uint64_t)boxed_opaque_existential_0Tm_0);
      uint64_t v52 = v59;
      *unint64_t v51 = v37;
      v51[1] = v52;
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
      sub_2454CEABC((uint64_t)&v61);
      swift_release();
      swift_release();
      swift_release();
      sub_24549B280(v48);
      sub_2454A5364((uint64_t)v63, &qword_26B0DA230);
      return v37;
    }
  }
  else
  {
    sub_2454A5364((uint64_t)&v61, &qword_26B0DA230);
    uint64_t v44 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v57, 1, 1, v56);
  }
  sub_2454A5364(v44, &qword_26B0D9280);
LABEL_35:
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_245586468@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(*MEMORY[0x263F8EA20] + v8 + 8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)&v36 - v15;
  if (*(unsigned char *)(v4 + qword_26B0DD428) != 1) {
    goto LABEL_22;
  }
  uint64_t v37 = a3;
  uint64_t v17 = *(void *)(*(void *)(v4 + qword_26B0DD420) + 16);
  if (!v17)
  {
LABEL_37:
    *(void *)&long long v43 = 0;
    *((void *)&v43 + 1) = 0xE000000000000000;
    sub_24558EF78();
    swift_bridgeObjectRelease();
    *(void *)&long long v43 = 0xD000000000000017;
    *((void *)&v43 + 1) = 0x80000002455969A0;
    sub_2454A1CC0((uint64_t)v12);
    sub_24558E5E8();
    sub_24558E668();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24558F1A8();
    __break(1u);
    return result;
  }
  uint64_t v12 = *(char **)(v4 + 16);
  uint64_t v18 = *((void *)v12 + 3);
  uint64_t v19 = *(void *)(v18 + 16);
  swift_retain();
  swift_retain();
  if (!v19) {
    goto LABEL_9;
  }
  uint64_t v20 = swift_retain();
  unint64_t v21 = sub_2454CEC48(v20);
  if ((v22 & 1) == 0)
  {
    swift_release();
LABEL_9:
    memset(v45, 0, 32);
    goto LABEL_10;
  }
  unint64_t v23 = *(void *)(*(void *)(v18 + 56) + 8 * v21);
  swift_release();
  swift_beginAccess();
  if ((v23 & 0x8000000000000000) != 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v24 = *((void *)v12 + 4);
  if (v23 >= *(void *)(v24 + 16))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  sub_2454A37D4(v24 + 32 * v23 + 32, (uint64_t)v45, &qword_26B0DA230);
LABEL_10:
  swift_release();
  sub_2454A37D4((uint64_t)v45, (uint64_t)v38, &qword_26B0DA230);
  if (!v39)
  {
    sub_2454A5364((uint64_t)v38, &qword_26B0DA230);
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C70);
  if ((swift_dynamicCast() & 1) == 0)
  {
    long long v41 = 0u;
    long long v42 = 0u;
    long long v40 = 0u;
    goto LABEL_16;
  }
  if (!(void)v40)
  {
LABEL_16:
    sub_2454A5364((uint64_t)&v40, &qword_26B0D8C78);
    sub_2454A37D4((uint64_t)v45, (uint64_t)&v43, &qword_26B0DA230);
    if (*((void *)&v44 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D92A0);
      if (swift_dynamicCast())
      {
        uint64_t v26 = v40;
        sub_2454AD66C(v40, v17, v13);
        *((void *)&v44 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8C70);
        unint64_t v27 = (void *)swift_allocObject();
        *(void *)&long long v43 = v27;
        void v27[2] = v26;
        v27[6] = v13;
        v27[7] = a2;
        boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v27 + 3);
        (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 16))(boxed_opaque_existential_0Tm_0, v16, v13);
        swift_retain();
        swift_retain();
        sub_2454CEABC((uint64_t)&v43);
        swift_release();
        swift_release();
        swift_release();
        sub_2454A5364((uint64_t)v45, &qword_26B0DA230);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v37, v16, v13);
      }
      swift_release();
    }
    else
    {
      swift_release();
      sub_2454A5364((uint64_t)&v43, &qword_26B0DA230);
    }
    sub_2454A5364((uint64_t)v45, &qword_26B0DA230);
LABEL_22:
    uint64_t v30 = *(void *)(v4 + 16);
    uint64_t v31 = *(void *)(v30 + 24);
    if (*(void *)(v31 + 16))
    {
      swift_retain();
      swift_retain();
      unint64_t v32 = sub_2454CEC48((uint64_t)a1);
      if (v33)
      {
        unint64_t v34 = *(void *)(*(void *)(v31 + 56) + 8 * v32);
        swift_release();
        swift_beginAccess();
        if ((v34 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          uint64_t v35 = *(void *)(v30 + 32);
          if (v34 < *(void *)(v35 + 16))
          {
            sub_2454A37D4(v35 + 32 * v34 + 32, (uint64_t)&v43, &qword_26B0DA230);
LABEL_30:
            swift_release();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B0DA230);
            return swift_dynamicCast();
          }
        }
        __break(1u);
        goto LABEL_35;
      }
      swift_release();
    }
    else
    {
      swift_retain();
    }
    long long v43 = 0u;
    long long v44 = 0u;
    goto LABEL_30;
  }
  swift_release();
  sub_2454A5364((uint64_t)v45, &qword_26B0DA230);
  uint64_t v25 = v40;
  *(void *)&long long v43 = v40;
  sub_2454CD178((long long *)((char *)&v40 + 8), (uint64_t)&v43 + 8);
  *(void *)&long long v40 = v25;
  sub_2454CD178((long long *)((char *)&v43 + 8), (uint64_t)&v40 + 8);
  swift_bridgeObjectRelease();
  sub_2454CD178((long long *)((char *)&v40 + 8), (uint64_t)v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D8B80);
  return swift_dynamicCast();
}

uint64_t sub_245586A6C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  if (*(unsigned char *)(v3 + qword_26B0DD428) == 1)
  {
    uint64_t v10 = type metadata accessor for PersistentIdentifier(0);
    boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v9);
    uint64_t v7 = *(void *)(*MEMORY[0x263F8EA20] + v4 + 8);
    swift_retain();
    PersistentModel.persistentModelID.getter(v7, a3, (uint64_t)boxed_opaque_existential_0Tm_0);
    swift_retain();
  }
  else
  {
    uint64_t v10 = *(void *)(*MEMORY[0x263F8EA20] + *a1 + 8);
    v9[0] = a2;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
  }
  sub_2454CEABC((uint64_t)v9);
  swift_release();
  return swift_release();
}

uint64_t sub_245586B94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a1;
  if (*(unsigned char *)(v5 + qword_26B0DD428) == 1)
  {
    uint64_t v9 = *(void *)(*MEMORY[0x263F8EA20] + v7 + 8);
    swift_retain();
    unint64_t v10 = sub_2454CC744(0, v9, a5);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D92A0);
    v14[0] = v10;
  }
  else
  {
    uint64_t v15 = *(void *)(*MEMORY[0x263F8EA20] + v7 + 8);
    uint64_t v11 = v15;
    boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v14);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(boxed_opaque_existential_0Tm_0, a2, v11);
    swift_retain();
  }
  swift_retain();
  sub_2454CEABC((uint64_t)v14);
  swift_release();
  return swift_release();
}

uint64_t sub_245586CE0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v51 = a4;
  uint64_t v47 = *a3;
  uint64_t v48 = a3;
  uint64_t v6 = sub_24558E3B8();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v12 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t ObjectType = swift_getObjectType();
  PersistentModel.persistentModelID.getter(ObjectType, v16, (uint64_t)v14);
  int v18 = *(unsigned __int8 *)(*(void *)&v14[*(int *)(v12 + 20)] + 32);
  sub_24549B280((uint64_t)v14);
  if (v18 == 1)
  {
    uint64_t v45 = v15;
    uint64_t v46 = ObjectType;
    if (*a2)
    {
      sub_24558E3A8();
      uint64_t v19 = (uint64_t)v48;
      swift_retain_n();
      swift_unknownObjectRetain_n();
      uint64_t v20 = sub_24558E398();
      os_log_type_t v21 = sub_24558EB98();
      int v22 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v23 = swift_slowAlloc();
        int v43 = v22;
        uint64_t v24 = v23;
        uint64_t v42 = swift_slowAlloc();
        uint64_t v53 = v42;
        *(_DWORD *)uint64_t v24 = 136315394;
        long long v44 = (uint8_t *)v9;
        os_log_t v41 = v20;
        uint64_t ObjectType = v46;
        PersistentModel.persistentModelID.getter(v46, v16, (uint64_t)v14);
        uint64_t v25 = sub_24558E5E8();
        uint64_t v52 = sub_2454F21D4(v25, v26, &v53);
        sub_24558ED28();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2080;
        uint64_t v52 = v19;
        swift_retain();
        uint64_t v27 = sub_24558E5E8();
        uint64_t v52 = sub_2454F21D4(v27, v28, &v53);
        sub_24558ED28();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_log_t v29 = v41;
        _os_log_impl(&dword_245478000, v41, (os_log_type_t)v43, "Illegal attempt to flip a temporary object to a future %s: %s", (uint8_t *)v24, 0x16u);
        uint64_t v30 = v42;
        swift_arrayDestroy();
        MEMORY[0x2456A2BD0](v30, -1, -1);
        MEMORY[0x2456A2BD0](v24, -1, -1);

        (*(void (**)(uint8_t *, uint64_t))(v49 + 8))(v44, v50);
      }
      else
      {

        swift_release_n();
        swift_unknownObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v50);
        uint64_t ObjectType = v46;
      }
    }
    else
    {
      uint64_t v31 = v11;
      sub_24558E3A8();
      uint64_t v32 = (uint64_t)v48;
      swift_retain_n();
      char v33 = sub_24558E398();
      os_log_type_t v34 = sub_24558EB98();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v53 = v36;
        *(_DWORD *)uint64_t v35 = 136315138;
        long long v44 = v35 + 4;
        uint64_t v52 = v32;
        swift_retain();
        uint64_t v37 = sub_24558E5E8();
        uint64_t v52 = sub_2454F21D4(v37, v38, &v53);
        sub_24558ED28();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245478000, v33, v34, "This backing data has retained a temporary object ID beyond the mutations to the context %s", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456A2BD0](v36, -1, -1);
        MEMORY[0x2456A2BD0](v35, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v50);
      uint64_t ObjectType = v46;
    }
  }
  return PersistentModel.persistentModelID.getter(ObjectType, v16, v51);
}

uint64_t sub_24558727C()
{
  swift_release();
  sub_2454A5364(v0 + qword_26B0DD418, &qword_26B0D9280);

  return swift_release();
}

void sub_2455872CC()
{
}

uint64_t sub_245587378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + qword_26B0DD398;
  swift_beginAccess();
  sub_2454A37D4(v6, (uint64_t)v5, &qword_26B0D9280);
  uint64_t v7 = type metadata accessor for PersistentIdentifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_2454A1C18((uint64_t)v5, a1);
  }
  sub_2454A5364((uint64_t)v5, &qword_26B0D9280);
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

void sub_2455874D8()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245587378((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_2455875EC()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245587378((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_245587700()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245587378((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_245587814()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245587378((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_245587928()
{
}

uint64_t sub_245587938@<X0>(uint64_t a1@<X8>)
{
  return sub_2455898A8(&qword_26B0DD398, a1);
}

uint64_t sub_245587944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245589910(a1, a2, a3, &qword_26B0DD398);
}

uint64_t (*sub_245587950())()
{
  return j__swift_endAccess_2;
}

uint64_t sub_2455879B4@<X0>(uint64_t a1@<X8>)
{
  return sub_2454CE878(*v1 + qword_26B0DD3A0, a1);
}

void sub_2455879CC()
{
}

void sub_2455879E4()
{
}

void sub_245587A14()
{
}

void sub_245587A44()
{
}

void sub_245587A5C()
{
}

void sub_245587A74()
{
}

void sub_245587A8C()
{
}

void sub_245587ABC()
{
}

void sub_245587AEC()
{
}

void sub_245587B1C()
{
}

void sub_245587B4C()
{
}

void sub_245587B80()
{
}

void sub_245587BA8()
{
}

void sub_245587C04()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4698);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_24558E668();
  sub_24549B2DC(v0 + qword_26B0DD438, (uint64_t)v6);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v6);
  sub_24558E668();
  uint64_t v7 = *(void *)(*(void *)(v0 + qword_26B0DD440) + 16);
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558F1A8();
  __break(1u);
}

void sub_245587E9C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4698);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_24558E668();
  sub_24549B2DC(v0 + qword_26B0DD438, (uint64_t)v6);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v6);
  sub_24558E668();
  uint64_t v7 = *(void *)(*(void *)(v0 + qword_26B0DD440) + 16);
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558F1A8();
  __break(1u);
}

void sub_245588134()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4698);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_24558E668();
  sub_24549B2DC(v0 + qword_26B0DD438, (uint64_t)v6);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v6);
  sub_24558E668();
  uint64_t v7 = *(void *)(*(void *)(v0 + qword_26B0DD440) + 16);
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558F1A8();
  __break(1u);
}

void sub_2455883CC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4698);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_24558E668();
  sub_24549B2DC(v0 + qword_26B0DD438, (uint64_t)v6);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v6);
  sub_24558E668();
  uint64_t v7 = *(void *)(*(void *)(v0 + qword_26B0DD440) + 16);
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558F1A8();
  __break(1u);
}

void sub_245588664()
{
}

void sub_245588674()
{
}

void (*sub_2455886D0())()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  uint64_t v1 = malloc(*(void *)(*(void *)(v0 - 8) + 64));
  sub_2454ABF2C((uint64_t)v1);
  return sub_245588748;
}

void sub_245588748()
{
}

void sub_2455887A4()
{
}

void sub_2455887BC()
{
}

void sub_2455887EC()
{
}

void sub_24558881C()
{
}

void sub_245588834()
{
}

void sub_24558884C()
{
}

void sub_245588864()
{
}

void sub_245588894()
{
}

void sub_2455888C4()
{
}

void sub_2455888F4()
{
}

void sub_245588924()
{
}

void sub_245588958()
{
}

void sub_245588980()
{
}

void sub_245588A88()
{
}

void sub_245588B90()
{
}

void sub_245588C98()
{
}

void sub_245588DA0()
{
}

void sub_245588EA8()
{
}

void sub_245588FC0()
{
}

uint64_t sub_24558906C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v2 + qword_268EEACB0;
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  sub_24549B2DC(a2, (uint64_t)v6);
  v9((uint64_t)v6, 0, 1, v8);
  swift_beginAccess();
  sub_2454D726C((uint64_t)v6, v7);
  swift_endAccess();
  uint64_t v10 = type metadata accessor for _ModelMetadata();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(unsigned char *)(v11 + 80) = 1;
  uint64_t v12 = v11 + OBJC_IVAR____TtC9SwiftData14_ModelMetadata_observationRegistar;
  uint64_t v13 = sub_24558E278();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_DWORD *)(v11 + 24) |= 0x100000u;
  uint64_t v16 = v10;
  *(void *)&long long v15 = v11;
  sub_24549B280(a2);
  sub_2454A0BBC(&v15, (_OWORD *)(v2 + qword_268EEACB8));
  return v2;
}

uint64_t sub_245589248@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9280);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v2 + qword_268EEACB0;
  swift_beginAccess();
  sub_2454A37D4(v7, (uint64_t)v6, &qword_26B0D9280);
  uint64_t v8 = type metadata accessor for PersistentIdentifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_2454A1C18((uint64_t)v6, a1);
  }
  sub_2454A5364((uint64_t)v6, &qword_26B0D9280);
  v10[1] = 0;
  void v10[2] = 0xE000000000000000;
  sub_24558EF78();
  v10[0] = v2;
  sub_24558F568();
  sub_24558E668();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

void sub_245589410()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_245589524()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_245589638()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558974C()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

uint64_t sub_245589860()
{
  return sub_245481368(&qword_268EEACB0, &qword_268EEACB8);
}

uint64_t type metadata accessor for _InvalidFutureBackingData()
{
  return __swift_instantiateGenericMetadata();
}

void sub_24558988C()
{
}

uint64_t sub_24558989C@<X0>(uint64_t a1@<X8>)
{
  return sub_2455898A8(&qword_268EEACB0, a1);
}

uint64_t sub_2455898A8@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2 + *a1;
  swift_beginAccess();
  return sub_2454A37D4(v4, a2, &qword_26B0D9280);
}

uint64_t sub_245589904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245589910(a1, a2, a3, &qword_268EEACB0);
}

uint64_t sub_245589910(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *v4 + *a4;
  swift_beginAccess();
  sub_2454D726C(a1, v6);
  return swift_endAccess();
}

uint64_t (*sub_24558996C())()
{
  return j_j__swift_endAccess_2;
}

uint64_t sub_2455899CC@<X0>(uint64_t a1@<X8>)
{
  return sub_2454CE878(*v1 + qword_268EEACB8, a1);
}

void sub_2455899E4()
{
}

void sub_2455899FC()
{
}

void sub_245589A2C()
{
}

void sub_245589A5C()
{
}

void sub_245589A74()
{
}

void sub_245589A8C()
{
}

void sub_245589AA4()
{
}

void sub_245589AD0()
{
}

void sub_245589AFC()
{
}

void sub_245589B28()
{
}

void sub_245589B58()
{
}

void sub_245589B8C()
{
}

void sub_245589BB4()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_245589CCC()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245587378((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_245589DE4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4698);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_24558E668();
  sub_24549B2DC(v0 + qword_26B0DD438, (uint64_t)v6);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v6);
  sub_24558E668();
  uint64_t v7 = *(void *)(*(void *)(v0 + qword_26B0DD440) + 16);
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558F1A8();
  __break(1u);
}

void sub_24558A080()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245587378((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558A194()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4698);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_24558E668();
  sub_24549B2DC(v0 + qword_26B0DD438, (uint64_t)v6);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v6);
  sub_24558E668();
  uint64_t v7 = *(void *)(*(void *)(v0 + qword_26B0DD440) + 16);
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558F1A8();
  __break(1u);
}

void sub_24558A42C()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558A540()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558A654()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558A768()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245587378((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558A87C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4698);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_24558E668();
  sub_24549B2DC(v0 + qword_26B0DD438, (uint64_t)v6);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v6);
  sub_24558E668();
  uint64_t v7 = *(void *)(*(void *)(v0 + qword_26B0DD440) + 16);
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558F1A8();
  __break(1u);
}

void sub_24558AB14()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558AC28()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245587378((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558AD40()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4698);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_24558E668();
  sub_24549B2DC(v0 + qword_26B0DD438, (uint64_t)v6);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v6);
  sub_24558E668();
  uint64_t v7 = *(void *)(*(void *)(v0 + qword_26B0DD440) + 16);
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558F1A8();
  __break(1u);
}

void sub_24558AFDC()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558B0F0()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245587378((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

void sub_24558B204()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268EE4698);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24558EF78();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_24558E668();
  sub_24549B2DC(v0 + qword_26B0DD438, (uint64_t)v6);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v6);
  sub_24558E668();
  uint64_t v7 = *(void *)(*(void *)(v0 + qword_26B0DD440) + 16);
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = sub_24558E1E8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_24558E5E8();
  sub_24558E668();
  swift_bridgeObjectRelease();
  sub_24558F1A8();
  __break(1u);
}

void sub_24558B49C()
{
  uint64_t v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  sub_245589248((uint64_t)v2);
  sub_24558F0E8();
  sub_24549B280((uint64_t)v2);
  sub_24558F1A8();
  __break(1u);
}

unint64_t sub_24558B5B0()
{
  unint64_t result = qword_26B0D8D10;
  if (!qword_26B0D8D10)
  {
    type metadata accessor for Schema.Relationship();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D8D10);
  }
  return result;
}

uint64_t sub_24558B608()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm_1(v0 + 24);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24558B65C()
{
  type metadata accessor for PersistentIdentifier(255);
  swift_getTupleTypeMetadata2();
  sub_24558E828();
  sub_24549364C(&qword_26B0D9AD0, (void (*)(uint64_t))type metadata accessor for PersistentIdentifier);

  return sub_24558E458();
}

uint64_t sub_24558B70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  unint64_t v10 = sub_245544930(MEMORY[0x263F8EE78]);
  int64_t v11 = *(void *)(a1 + 16);
  if (a3 >= 1) {
    uint64_t v12 = a3;
  }
  else {
    uint64_t v12 = *(void *)(a1 + 16);
  }
  if (a4) {
    uint64_t v13 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v13 = v12;
  }
  if (v13)
  {
    unint64_t v14 = (void *)v10;
    uint64_t v35 = a5;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_245547E08(0, v11, v13, a1, v13);
    uint64_t v34 = a2;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v15 + 16);
    if (!v16)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *uint64_t v35 = v14;
      v35[1] = v34;
      v35[2] = v13;
      v35[3] = v11;
      return result;
    }
    uint64_t v17 = 0;
    uint64_t v18 = v15 + 32;
    while (1)
    {
      uint64_t v20 = *(void *)(v18 + 8 * v17);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v23 = sub_2455211DC(v17);
      uint64_t v24 = v14[2];
      BOOL v25 = (v22 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25)) {
        break;
      }
      char v27 = v22;
      if (v14[3] >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_245526564();
        }
      }
      else
      {
        sub_245505460(v26, isUniquelyReferenced_nonNull_native);
        unint64_t v28 = sub_2455211DC(v17);
        if ((v27 & 1) != (v29 & 1)) {
          goto LABEL_25;
        }
        unint64_t v23 = v28;
      }
      if (v27)
      {
        uint64_t v19 = v14[7];
        swift_bridgeObjectRelease();
        *(void *)(v19 + 8 * v23) = v20;
      }
      else
      {
        v14[(v23 >> 6) + 8] |= 1 << v23;
        *(void *)(v14[6] + 8 * v23) = v17;
        *(void *)(v14[7] + 8 * v23) = v20;
        uint64_t v30 = v14[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_23;
        }
        uint64_t v14[2] = v32;
      }
      ++v17;
      swift_bridgeObjectRelease();
      if (v16 == v17) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  __break(1u);
LABEL_25:
  uint64_t result = sub_24558F748();
  __break(1u);
  return result;
}

uint64_t FetchResultsCollection.startIndex.getter()
{
  return 0;
}

uint64_t FetchResultsCollection.endIndex.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FetchResultsCollection.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v7 = v2[2];
  if (v7 != 1)
  {
    if (v7)
    {
      if (a1 == 0x8000000000000000 && v7 == -1) {
        goto LABEL_27;
      }
      long long v26 = *((_OWORD *)v2 + 1);
      if (!*(void *)(v6 + 16)) {
        goto LABEL_29;
      }
      unint64_t v11 = sub_2455211DC(a1 / v7);
      if ((v12 & 1) == 0) {
        goto LABEL_29;
      }
      uint64_t v13 = *(void *)(*(void *)(v6 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
      if (!v13) {
        goto LABEL_29;
      }
      unint64_t v14 = a1 % v7;
      if (((a1 % v7) & 0x8000000000000000) == 0)
      {
        if (v14 < *(void *)(v13 + 16))
        {
          uint64_t v27 = v13 + 40 * v14 + 32;
          sub_24558D1E4(v27, (uint64_t)&v31);
          uint64_t v15 = a2;
          uint64_t v17 = *((void *)&v32 + 1);
          uint64_t v16 = v33;
          __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
          uint64_t v18 = *(void *)(v15 + 16);
          char v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(v18, v5, v18, v17, v16);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
          if (v19)
          {
            *(void *)&long long v31 = v6;
            *((void *)&v31 + 1) = v5;
            long long v32 = v26;
            sub_24558BBE8(a1, v15);
          }
          if (v14 < *(void *)(v13 + 16))
          {
            sub_24558D1E4(v27, (uint64_t)&v31);
            swift_bridgeObjectRelease();
            uint64_t v20 = *((void *)&v32 + 1);
            uint64_t v21 = v33;
            __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))(v18, v5, v18, v20, v21);
            char v22 = &v31;
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
          }
          goto LABEL_26;
        }
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (*(void *)(v6 + 16))
  {
    unint64_t v8 = sub_2455211DC(a1);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v6 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
      if (v10)
      {
        if (*(void *)(v10 + 16))
        {
          sub_24558D1E4(v10 + 32, (uint64_t)&v31);
          swift_bridgeObjectRelease();
          goto LABEL_20;
        }
        goto LABEL_28;
      }
    }
  }
  uint64_t v33 = 0;
  long long v31 = 0u;
  long long v32 = 0u;
LABEL_20:
  sub_24558D248((uint64_t)&v31, (uint64_t)v28);
  uint64_t v23 = v29;
  if (v29)
  {
    uint64_t v24 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    (*(void (**)(void, uint64_t, void, uint64_t, uint64_t))(v24 + 16))(*(void *)(a2 + 16), v5, *(void *)(a2 + 16), v23, v24);
    sub_24558D2B0((uint64_t)&v31);
    char v22 = (long long *)v28;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
LABEL_30:
  uint64_t result = sub_24558D2B0((uint64_t)v28);
  __break(1u);
  return result;
}

uint64_t sub_24558BBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](a1);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + 16);
  if (!v9) {
    goto LABEL_19;
  }
  uint64_t v10 = *v6;
  uint64_t v20 = v6[1];
  if (result == 0x8000000000000000 && v9 == -1) {
    goto LABEL_22;
  }
  if (!*(void *)(v10 + 16)) {
    goto LABEL_20;
  }
  uint64_t result = sub_2455211DC(result / v9);
  if ((v11 & 1) == 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  char v12 = *(void **)(*(void *)(v10 + 56) + 8 * result);
  uint64_t v13 = v12[2];
  if (v13)
  {
    unint64_t v14 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v15 = 0;
    for (uint64_t i = 4; ; i += 5)
    {
      if (v12)
      {
        if (v15 >= v12[2])
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
        sub_24558D1E4((uint64_t)&v12[i], (uint64_t)v21);
        sub_2454FE160(v21, (uint64_t)v22);
        uint64_t v17 = v23;
        uint64_t v18 = v24;
        __swift_project_boxed_opaque_existential_1(v22, v23);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 16))(v3, v20, v3, v17, v18);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_2455576E4(v12);
          char v12 = (void *)result;
        }
        if (v15 >= v12[2]) {
          goto LABEL_18;
        }
        __swift_assign_boxed_opaque_existential_1(&v12[i], v22);
        (*v14)(v8, v3);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      }
      if (v13 == ++v15) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24558BDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E068](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

uint64_t sub_24558BE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E078](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

uint64_t sub_24558BE14(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E060](a1, a2, WitnessTable, v5);
}

void *sub_24558BE84(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24558C320(a1, a2, a3, MEMORY[0x263F8D7A8]);
}

uint64_t sub_24558BE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24558BF20()
{
  swift_getWitnessTable();

  return sub_24558EA08();
}

uint64_t sub_24558BFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

void sub_24558C018(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_24558C020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FetchResultsCollection.endIndex.getter();
  *a1 = result;
  return result;
}

void (*sub_24558C048(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_24558C100(v6, *a2, a3);
  return sub_24558C0B8;
}

void sub_24558C0B8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_24558C100(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v5 = *(void *)(a3 + 16);
  *a1 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  a1[1] = v6;
  a1[2] = malloc(*(void *)(v6 + 64));
  FetchResultsCollection.subscript.getter(a2, a3);
  return sub_24558C1B8;
}

void sub_24558C1B8(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_24558C208(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v3 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E070](a1, WitnessTable, v3);
}

void sub_24558C27C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_24558C298(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E058](a1, a2, WitnessTable, v5);
}

void *sub_24558C308(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24558C320(a1, a2, a3, MEMORY[0x263F8D7A0]);
}

void *sub_24558C320(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, void))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = a4(&v9, a1, a2, WitnessTable, MEMORY[0x263F8D708]);
  *a1 = v9;
  return result;
}

__n128 sub_24558C398@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_24558C3A8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_24558C3FC()
{
  return 2;
}

uint64_t sub_24558C404(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E128](a1, WitnessTable);
}

uint64_t sub_24558C45C()
{
  return sub_24558E728();
}

uint64_t sub_24558C480()
{
  uint64_t v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x270FA5388](v1);
  long long v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_dynamicCastMetatype())
  {
    sub_24558DA90(v0, (uint64_t)v3, type metadata accessor for PersistentIdentifier);
    return swift_dynamicCast();
  }
  else
  {
    v5[0] = 0;
    v5[1] = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    sub_24558E668();
    sub_24558E668();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_24558C614()
{
  return sub_24558D934();
}

uint64_t sub_24558C61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    sub_24558C780(v6, a2, v6, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9278);
    return swift_dynamicCast();
  }
  else
  {
    sub_24558EF78();
    sub_24558E668();
    sub_24558E668();
    sub_24558E668();
    uint64_t result = sub_24558F1A8();
    __break(1u);
  }
  return result;
}

uint64_t sub_24558C780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = MEMORY[0x2456A2CA0](v4 + 16);
  if (!v10) {
    goto LABEL_6;
  }
  char v11 = (void *)v10;
  uint64_t v27 = 0;
  char v12 = (void *)swift_allocObject();
  v12[2] = a3;
  void v12[3] = a4;
  void v12[4] = v5;
  v12[5] = a2;
  v12[6] = &v27;
  void v12[7] = v11;
  v12[8] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24558D910;
  *(void *)(v13 + 24) = v12;
  BOOL v25 = sub_24548394C;
  uint64_t v26 = v13;
  aBlocunint64_t k = MEMORY[0x263EF8330];
  unint64_t v22 = 1107296256;
  uint64_t v23 = sub_2454838EC;
  uint64_t v24 = &block_descriptor_4;
  unint64_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  id v15 = v11;
  swift_release();
  objc_msgSend(v15, sel_performBlockAndWait_, v14);
  _Block_release(v14);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    aBlocunint64_t k = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_24558EF78();
    sub_24558E668();
    uint64_t v27 = v5;
    type metadata accessor for CoreDataFetchResultsCollectionElement();
    sub_24558F0E8();
    goto LABEL_8;
  }
  uint64_t v17 = v27;
  if (v27)
  {
    swift_unknownObjectRetain();

    swift_release();
    swift_unknownObjectRelease();
    return v17;
  }
  aBlocunint64_t k = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_24558EF78();
  sub_24558E668();
  id v19 = *(id *)(v5 + 24);
  id v20 = objc_msgSend(v19, sel_description);
  sub_24558E5D8();

  sub_24558E668();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24558CA84(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v72 = a4;
  uint64_t v73 = a5;
  uint64_t v75 = a3;
  uint64_t v78 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B0D9048);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DefaultSnapshot(0);
  uint64_t v74 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v76 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PersistentIdentifier(0);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v64 - v20;
  unint64_t v22 = *(void **)(a1 + 24);
  type metadata accessor for PersistentIdentifierImplementation(0);
  swift_allocObject();
  id v23 = v22;
  uint64_t v24 = a6;
  id v25 = v23;
  uint64_t v26 = sub_24549D420(v25);
  *(void *)&v21[*(int *)(v16 + 28)] = v26;
  uint64_t v27 = v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  uint64_t v28 = sub_24558E158();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v21, v27, v28);

  uint64_t v77 = a7;
  uint64_t v29 = sub_2454871BC((uint64_t)v21);
  if (v29)
  {
    uint64_t v30 = v29;
    sub_24558DAF8((uint64_t)v21, type metadata accessor for PersistentIdentifier);
    *uint64_t v75 = v30;
    return swift_unknownObjectRelease();
  }
  unint64_t v66 = v12;
  long long v67 = v21;
  uint64_t v68 = v19;
  uint64_t v70 = v24;
  uint64_t v31 = *(void *)(a1 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9CD0);
  long long v32 = (void *)swift_allocObject();
  uint64_t v33 = MEMORY[0x263F8EE80];
  v32[2] = MEMORY[0x263F8EE80];
  v32[3] = v33;
  v32[4] = v31;
  v32[5] = 0;
  uint64_t v71 = a1;
  uint64_t v34 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  id v35 = objc_msgSend(v72, sel_objectWithID_, v34);
  uint64_t v36 = sub_2454A0BCC(v73, v77);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D9768);
  unint64_t v38 = (void *)swift_allocObject();
  uint64_t v39 = MEMORY[0x263F8EE78];
  v38[2] = MEMORY[0x263F8EE78];
  swift_retain();
  v38[3] = sub_2454D62F0(v39);
  uint64_t v38[4] = v35;
  id v72 = v35;
  uint64_t v73 = v32;
  void v38[5] = v32;
  _OWORD v38[6] = v36;
  uint64_t v80 = v37;
  unint64_t v81 = sub_24558DA34();
  v79[0] = v38;
  long long v69 = v38;
  swift_retain();
  DefaultSnapshot.init(from:)(v79, v76);
  uint64_t v65 = 0;
  uint64_t v40 = v13;
  uint64_t v41 = v76;
  uint64_t v42 = v76 + *(int *)(v13 + 20);
  uint64_t v43 = (uint64_t)v68;
  sub_24558DA90(v42, (uint64_t)v68, type metadata accessor for PersistentIdentifier);
  uint64_t v44 = (uint64_t)v66;
  sub_24558DA90(v41, (uint64_t)v66, type metadata accessor for DefaultSnapshot);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v44, 0, 1, v40);
  swift_beginAccess();
  sub_2454D2288(v44, v43);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v45 = (void *)sub_2454C5B5C(v42);
  swift_endAccess();

  uint64_t v46 = v70;
  uint64_t v47 = v77;
  uint64_t v48 = type metadata accessor for _KKMDBackingData();
  sub_24558DA90(v42, v43, type metadata accessor for PersistentIdentifier);
  uint64_t v49 = sub_2454D74EC(v46, v43);
  uint64_t v50 = sub_24549364C(&qword_26B0D9C20, (void (*)(uint64_t))type metadata accessor for DefaultSnapshot);
  v79[0] = v46;
  v79[1] = v40;
  v79[2] = v47;
  uint64_t v80 = v50;
  uint64_t v51 = type metadata accessor for BackingDataEncoder();
  uint64_t v80 = v48;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v81 = WitnessTable;
  v79[0] = v49;
  swift_retain();
  uint64_t v53 = v78;
  swift_retain();
  uint64_t v54 = MEMORY[0x263F8EE78];
  unint64_t v55 = sub_2454D62F0(MEMORY[0x263F8EE78]);
  uint64_t v56 = sub_24558B65C();
  uint64_t v57 = sub_2454D6C90(v79, v53, v56, v54, v55);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  uint64_t v80 = v51;
  unint64_t v81 = swift_getWitnessTable();
  v79[0] = v57;
  swift_retain();
  uint64_t v58 = v65;
  DefaultSnapshot.encode(to:)(v79);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  if (!v58)
  {
    _SD_set_faulting_backingdata_tsd(1);
    uint64_t v80 = v48;
    unint64_t v81 = WitnessTable;
    v79[0] = v49;
    uint64_t v59 = v77;
    uint64_t v60 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v77 + 32);
    swift_retain();
    uint64_t v61 = v60(v79, v46, v59);
    sub_2454D84B8(v61, v46, v59);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_24558DAF8(v76, type metadata accessor for DefaultSnapshot);
    sub_24558DAF8((uint64_t)v67, type metadata accessor for PersistentIdentifier);
    *uint64_t v75 = v61;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    uint64_t v62 = v71;
    *(void *)(v71 + 32) = v61;
    *(void *)(v62 + 40) = v59;
    return swift_unknownObjectRelease();
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_24558D144()
{
  swift_unknownObjectWeakDestroy();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_24558D194(uint64_t a1, uint64_t a2)
{
  return sub_24558C61C(a1, a2);
}

uint64_t sub_24558D1B8(uint64_t a1)
{
  return sub_24558D7B0(a1) & 1;
}

uint64_t sub_24558D1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24558D248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_268EE46A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24558D2B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_268EE46A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24558D310()
{
  return swift_getWitnessTable();
}

uint64_t sub_24558D32C()
{
  return sub_24558D4D4(&qword_268EE4580);
}

uint64_t sub_24558D360()
{
  return swift_getWitnessTable();
}

uint64_t sub_24558D3C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24558D3E0()
{
  return sub_24558D4D4(&qword_268EE4578);
}

uint64_t sub_24558D414()
{
  return swift_getWitnessTable();
}

uint64_t sub_24558D478()
{
  return swift_getWitnessTable();
}

uint64_t sub_24558D494()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_24558D4A0()
{
  return sub_24558D4D4(&qword_268EE4560);
}

uint64_t sub_24558D4D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268EE4568);
    sub_245582A30();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24558D544()
{
  return swift_getWitnessTable();
}

uint64_t sub_24558D560()
{
  return swift_getWitnessTable();
}

uint64_t sub_24558D57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24558D584(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_24558D5B8()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_24558D5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_24558D634(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *sub_24558D6A4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t sub_24558D6EC(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24558D734(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FetchResultsCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CoreDataFetchResultsCollectionElement()
{
  return self;
}

uint64_t sub_24558D7B0(uint64_t a1)
{
  if (swift_conformsToProtocol2()) {
    uint64_t v3 = a1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3) {
    return *(void *)(v1 + 32) == 0;
  }
  sub_24558EF78();
  sub_24558E668();
  sub_24558E668();
  sub_24558E668();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

uint64_t sub_24558D8C8()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24558D910()
{
  return sub_24558CA84(*(void *)(v0 + 32), *(void *)(v0 + 40), *(uint64_t **)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24558D924()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24558D934()
{
  type metadata accessor for PersistentIdentifier(0);
  if (swift_dynamicCastMetatype()) {
    return 0;
  }
  sub_24558EF78();
  sub_24558E668();
  sub_24558E668();
  sub_24558E668();
  uint64_t result = sub_24558F1A8();
  __break(1u);
  return result;
}

unint64_t sub_24558DA34()
{
  unint64_t result = qword_26B0D93B8[0];
  if (!qword_26B0D93B8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0D9768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B0D93B8);
  }
  return result;
}

uint64_t sub_24558DA90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24558DAF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24558DB68()
{
  return MEMORY[0x270EEDAA8]();
}

uint64_t sub_24558DB78()
{
  return MEMORY[0x270EEDAB0]();
}

uint64_t sub_24558DB88()
{
  return MEMORY[0x270EEDAB8]();
}

uint64_t sub_24558DB98()
{
  return MEMORY[0x270EEDAC8]();
}

uint64_t sub_24558DBA8()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_24558DBB8()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_24558DBC8()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_24558DBD8()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_24558DBE8()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_24558DBF8()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_24558DC08()
{
  return MEMORY[0x270EEE0C0]();
}

uint64_t sub_24558DC18()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24558DC28()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_24558DC38()
{
  return MEMORY[0x270EEE3B8]();
}

uint64_t sub_24558DC48()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_24558DC58()
{
  return MEMORY[0x270EEE960]();
}

uint64_t sub_24558DC68()
{
  return MEMORY[0x270EEE968]();
}

uint64_t sub_24558DC78()
{
  return MEMORY[0x270EEE970]();
}

uint64_t sub_24558DC88()
{
  return MEMORY[0x270EEE978]();
}

uint64_t sub_24558DC98()
{
  return MEMORY[0x270EEE980]();
}

uint64_t sub_24558DCA8()
{
  return MEMORY[0x270EEE9C0]();
}

uint64_t sub_24558DCB8()
{
  return MEMORY[0x270EEEEC8]();
}

uint64_t sub_24558DCC8()
{
  return MEMORY[0x270EEEED0]();
}

uint64_t sub_24558DCD8()
{
  return MEMORY[0x270EEF218]();
}

uint64_t sub_24558DCE8()
{
  return MEMORY[0x270EEF478]();
}

uint64_t sub_24558DCF8()
{
  return MEMORY[0x270EEF480]();
}

uint64_t sub_24558DD08()
{
  return MEMORY[0x270EEF488]();
}

uint64_t sub_24558DD18()
{
  return MEMORY[0x270EEF490]();
}

uint64_t sub_24558DD28()
{
  return MEMORY[0x270EEF498]();
}

uint64_t sub_24558DD38()
{
  return MEMORY[0x270EEF4A0]();
}

uint64_t sub_24558DD48()
{
  return MEMORY[0x270EEF4B0]();
}

uint64_t sub_24558DD58()
{
  return MEMORY[0x270EEF4B8]();
}

uint64_t sub_24558DD68()
{
  return MEMORY[0x270EEF4C0]();
}

uint64_t sub_24558DD78()
{
  return MEMORY[0x270EEF4C8]();
}

uint64_t sub_24558DD88()
{
  return MEMORY[0x270EEF4D0]();
}

uint64_t sub_24558DD98()
{
  return MEMORY[0x270EEF4D8]();
}

uint64_t sub_24558DDA8()
{
  return MEMORY[0x270EEF4E0]();
}

uint64_t sub_24558DDB8()
{
  return MEMORY[0x270EEF4E8]();
}

uint64_t sub_24558DDC8()
{
  return MEMORY[0x270EEF4F0]();
}

uint64_t sub_24558DDD8()
{
  return MEMORY[0x270EEF508]();
}

uint64_t sub_24558DDE8()
{
  return MEMORY[0x270EEF510]();
}

uint64_t sub_24558DDF8()
{
  return MEMORY[0x270EEF518]();
}

uint64_t sub_24558DE08()
{
  return MEMORY[0x270EEF530]();
}

uint64_t sub_24558DE18()
{
  return MEMORY[0x270EEF538]();
}

uint64_t sub_24558DE28()
{
  return MEMORY[0x270EEF548]();
}

uint64_t sub_24558DE38()
{
  return MEMORY[0x270EEF588]();
}

uint64_t sub_24558DE48()
{
  return MEMORY[0x270EEF590]();
}

uint64_t sub_24558DE58()
{
  return MEMORY[0x270EEF598]();
}

uint64_t sub_24558DE68()
{
  return MEMORY[0x270EEF5B0]();
}

uint64_t sub_24558DE78()
{
  return MEMORY[0x270EEF5B8]();
}

uint64_t sub_24558DE88()
{
  return MEMORY[0x270EEF5F8]();
}

uint64_t sub_24558DE98()
{
  return MEMORY[0x270EEF600]();
}

uint64_t sub_24558DEA8()
{
  return MEMORY[0x270EEF608]();
}

uint64_t sub_24558DEB8()
{
  return MEMORY[0x270EEF610]();
}

uint64_t sub_24558DEC8()
{
  return MEMORY[0x270EEF618]();
}

uint64_t sub_24558DED8()
{
  return MEMORY[0x270EEF620]();
}

uint64_t sub_24558DEE8()
{
  return MEMORY[0x270EEF628]();
}

uint64_t sub_24558DEF8()
{
  return MEMORY[0x270EEF630]();
}

uint64_t sub_24558DF08()
{
  return MEMORY[0x270EEF638]();
}

uint64_t sub_24558DF18()
{
  return MEMORY[0x270EEF640]();
}

uint64_t sub_24558DF28()
{
  return MEMORY[0x270EEF658]();
}

uint64_t sub_24558DF38()
{
  return MEMORY[0x270EEF660]();
}

uint64_t sub_24558DF48()
{
  return MEMORY[0x270EEF6A0]();
}

uint64_t sub_24558DF58()
{
  return MEMORY[0x270EEF6A8]();
}

uint64_t sub_24558DF68()
{
  return MEMORY[0x270EEF6B0]();
}

uint64_t sub_24558DF78()
{
  return MEMORY[0x270EEF6B8]();
}

uint64_t sub_24558DF88()
{
  return MEMORY[0x270EEF6C8]();
}

uint64_t sub_24558DF98()
{
  return MEMORY[0x270EEF6D0]();
}

uint64_t sub_24558DFA8()
{
  return MEMORY[0x270EEF6D8]();
}

uint64_t sub_24558DFB8()
{
  return MEMORY[0x270EEF6E0]();
}

uint64_t sub_24558DFC8()
{
  return MEMORY[0x270EEF6E8]();
}

uint64_t sub_24558DFD8()
{
  return MEMORY[0x270EEF6F0]();
}

uint64_t sub_24558DFE8()
{
  return MEMORY[0x270EEF700]();
}

uint64_t sub_24558DFF8()
{
  return MEMORY[0x270EEF708]();
}

uint64_t sub_24558E008()
{
  return MEMORY[0x270EEF710]();
}

uint64_t sub_24558E018()
{
  return MEMORY[0x270EEF728]();
}

uint64_t sub_24558E028()
{
  return MEMORY[0x270EEF738]();
}

uint64_t sub_24558E038()
{
  return MEMORY[0x270EEF740]();
}

uint64_t sub_24558E048()
{
  return MEMORY[0x270EEF750]();
}

uint64_t sub_24558E058()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_24558E068()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24558E078()
{
  return MEMORY[0x270EEFA08]();
}

uint64_t sub_24558E088()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_24558E098()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_24558E0A8()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_24558E0B8()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_24558E0C8()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_24558E0D8()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24558E0E8()
{
  return MEMORY[0x270EEFD38]();
}

uint64_t sub_24558E0F8()
{
  return MEMORY[0x270EEFDC0]();
}

uint64_t sub_24558E108()
{
  return MEMORY[0x270EEFDF0]();
}

uint64_t sub_24558E118()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_24558E128()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_24558E138()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_24558E148()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_24558E158()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24558E168()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_24558E178()
{
  return MEMORY[0x270EF0020]();
}

uint64_t sub_24558E188()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24558E198()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_24558E1A8()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_24558E1B8()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24558E1C8()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_24558E1D8()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24558E1E8()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24558E1F8()
{
  return MEMORY[0x270EF1748]();
}

uint64_t sub_24558E208()
{
  return MEMORY[0x270EF1750]();
}

uint64_t sub_24558E218()
{
  return MEMORY[0x270EF1758]();
}

uint64_t sub_24558E228()
{
  return MEMORY[0x270EF1760]();
}

uint64_t sub_24558E238()
{
  return MEMORY[0x270EF1778]();
}

uint64_t sub_24558E248()
{
  return MEMORY[0x270EF1788]();
}

uint64_t sub_24558E258()
{
  return MEMORY[0x270FA1220]();
}

uint64_t sub_24558E268()
{
  return MEMORY[0x270FA1228]();
}

uint64_t sub_24558E278()
{
  return MEMORY[0x270FA1250]();
}

uint64_t sub_24558E288()
{
  return MEMORY[0x270FA06B8]();
}

uint64_t sub_24558E298()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_24558E2A8()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_24558E2B8()
{
  return MEMORY[0x270F5BEF8]();
}

uint64_t sub_24558E2C8()
{
  return MEMORY[0x270F5BF10]();
}

uint64_t sub_24558E2D8()
{
  return MEMORY[0x270F5BF30]();
}

uint64_t sub_24558E2E8()
{
  return MEMORY[0x270F5BF40]();
}

uint64_t sub_24558E2F8()
{
  return MEMORY[0x270F5BF68]();
}

uint64_t sub_24558E308()
{
  return MEMORY[0x270F5BFE8]();
}

uint64_t sub_24558E318()
{
  return MEMORY[0x270F59A18]();
}

uint64_t sub_24558E328()
{
  return MEMORY[0x270F59A20]();
}

uint64_t sub_24558E338()
{
  return MEMORY[0x270F59A28]();
}

uint64_t sub_24558E348()
{
  return MEMORY[0x270F59A30]();
}

uint64_t sub_24558E358()
{
  return MEMORY[0x270F59A38]();
}

uint64_t sub_24558E368()
{
  return MEMORY[0x270F59A40]();
}

uint64_t sub_24558E378()
{
  return MEMORY[0x270F59A48]();
}

uint64_t sub_24558E388()
{
  return MEMORY[0x270F59A50]();
}

uint64_t sub_24558E398()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24558E3A8()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24558E3B8()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24558E3C8()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24558E3D8()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24558E3E8()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24558E3F8()
{
  return MEMORY[0x270F9CFB0]();
}

uint64_t sub_24558E408()
{
  return MEMORY[0x270F9CFC0]();
}

uint64_t sub_24558E418()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_24558E428()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_24558E438()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_24558E448()
{
  return MEMORY[0x270F9D0A0]();
}

uint64_t sub_24558E458()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_24558E468()
{
  return MEMORY[0x270F9D0E8]();
}

uint64_t sub_24558E478()
{
  return MEMORY[0x270F9D140]();
}

uint64_t sub_24558E488()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_24558E498()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_24558E4A8()
{
  return MEMORY[0x270F9D210]();
}

uint64_t sub_24558E4B8()
{
  return MEMORY[0x270F9D220]();
}

uint64_t sub_24558E4C8()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24558E4D8()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24558E4E8()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24558E4F8()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_24558E508()
{
  return MEMORY[0x270F9D4A0]();
}

uint64_t sub_24558E518()
{
  return MEMORY[0x270F9D4A8]();
}

uint64_t sub_24558E528()
{
  return MEMORY[0x270F9D4B0]();
}

uint64_t sub_24558E538()
{
  return MEMORY[0x270F9D510]();
}

uint64_t sub_24558E548()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_24558E558()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24558E568()
{
  return MEMORY[0x270EF1978]();
}

uint64_t sub_24558E578()
{
  return MEMORY[0x270EF1988]();
}

uint64_t sub_24558E588()
{
  return MEMORY[0x270EF1990]();
}

uint64_t sub_24558E598()
{
  return MEMORY[0x270EF19A0]();
}

uint64_t sub_24558E5A8()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24558E5B8()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_24558E5C8()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_24558E5D8()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24558E5E8()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24558E5F8()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_24558E608()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_24558E618()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_24558E628()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24558E638()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_24558E648()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_24558E658()
{
  return MEMORY[0x270F9D760]();
}

uint64_t sub_24558E668()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24558E678()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_24558E688()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24558E698()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_24558E6A8()
{
  return MEMORY[0x270F9D880]();
}

uint64_t sub_24558E6B8()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_24558E6C8()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_24558E6D8()
{
  return MEMORY[0x270EF1B38]();
}

uint64_t sub_24558E6E8()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_24558E6F8()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_24558E708()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_24558E718()
{
  return MEMORY[0x270F9D948]();
}

uint64_t sub_24558E728()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_24558E738()
{
  return MEMORY[0x270F9D988]();
}

uint64_t sub_24558E748()
{
  return MEMORY[0x270F9D9B0]();
}

uint64_t sub_24558E758()
{
  return MEMORY[0x270F9D9D0]();
}

uint64_t sub_24558E768()
{
  return MEMORY[0x270F9D9D8]();
}

uint64_t sub_24558E778()
{
  return MEMORY[0x270F9DA18]();
}

uint64_t sub_24558E788()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_24558E798()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_24558E7A8()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_24558E7B8()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24558E7C8()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_24558E7D8()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24558E7E8()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24558E7F8()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_24558E808()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_24558E818()
{
  return MEMORY[0x270F9DBF8]();
}

uint64_t sub_24558E828()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_24558E838()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_24558E848()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_24558E858()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_24558E868()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_24558E878()
{
  return MEMORY[0x270F9DC80]();
}

uint64_t sub_24558E888()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_24558E898()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_24558E8A8()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_24558E8B8()
{
  return MEMORY[0x270F9DCE8]();
}

uint64_t sub_24558E8C8()
{
  return MEMORY[0x270F9DCF8]();
}

uint64_t sub_24558E8D8()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_24558E8E8()
{
  return MEMORY[0x270F9DD10]();
}

uint64_t sub_24558E8F8()
{
  return MEMORY[0x270F9DD28]();
}

uint64_t sub_24558E908()
{
  return MEMORY[0x270EF1BD8]();
}

uint64_t sub_24558E918()
{
  return MEMORY[0x270FA1E38]();
}

uint64_t sub_24558E928()
{
  return MEMORY[0x270FA1E40]();
}

uint64_t sub_24558E938()
{
  return MEMORY[0x270FA1E98]();
}

uint64_t sub_24558E948()
{
  return MEMORY[0x270FA2020]();
}

uint64_t sub_24558E958()
{
  return MEMORY[0x270FA2028]();
}

uint64_t sub_24558E968()
{
  return MEMORY[0x270FA2038]();
}

uint64_t sub_24558E978()
{
  return MEMORY[0x270EF1C18]();
}

uint64_t sub_24558E988()
{
  return MEMORY[0x270F9DDF0]();
}

uint64_t sub_24558E998()
{
  return MEMORY[0x270EF1C48]();
}

uint64_t sub_24558E9A8()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_24558E9B8()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_24558E9C8()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_24558E9D8()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24558E9E8()
{
  return MEMORY[0x270F9DF28]();
}

uint64_t sub_24558E9F8()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_24558EA08()
{
  return MEMORY[0x270F9E050]();
}

uint64_t sub_24558EA68()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_24558EA78()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_24558EA88()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_24558EAB8()
{
  return MEMORY[0x270F9E138]();
}

uint64_t sub_24558EAC8()
{
  return MEMORY[0x270F9E140]();
}

uint64_t sub_24558EAD8()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_24558EAE8()
{
  return MEMORY[0x270F9E1D0]();
}

uint64_t sub_24558EAF8()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_24558EB08()
{
  return MEMORY[0x270F9E2F0]();
}

uint64_t sub_24558EB18()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_24558EB28()
{
  return MEMORY[0x270EF1DD0]();
}

uint64_t sub_24558EB38()
{
  return MEMORY[0x270EF1DD8]();
}

uint64_t sub_24558EB48()
{
  return MEMORY[0x270EF1DE8]();
}

uint64_t sub_24558EB58()
{
  return MEMORY[0x270EF1DF0]();
}

uint64_t sub_24558EB68()
{
  return MEMORY[0x270EF1E20]();
}

uint64_t sub_24558EB78()
{
  return MEMORY[0x270EF1F00]();
}

uint64_t sub_24558EB88()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24558EB98()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24558EBA8()
{
  return MEMORY[0x270EE41E0]();
}

uint64_t sub_24558EBB8()
{
  return MEMORY[0x270EE41E8]();
}

uint64_t sub_24558EBC8()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_24558EBD8()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_24558EBE8()
{
  return MEMORY[0x270EE4200]();
}

uint64_t sub_24558EBF8()
{
  return MEMORY[0x270EE4208]();
}

uint64_t sub_24558EC08()
{
  return MEMORY[0x270EE4210]();
}

uint64_t sub_24558EC18()
{
  return MEMORY[0x270EE4218]();
}

uint64_t sub_24558EC28()
{
  return MEMORY[0x270EE4228]();
}

uint64_t sub_24558EC38()
{
  return MEMORY[0x270EE4230]();
}

uint64_t sub_24558EC48()
{
  return MEMORY[0x270EE4238]();
}

uint64_t sub_24558EC58()
{
  return MEMORY[0x270EE4250]();
}

uint64_t sub_24558EC68()
{
  return MEMORY[0x270EE4258]();
}

uint64_t sub_24558EC78()
{
  return MEMORY[0x270EE4260]();
}

uint64_t sub_24558EC88()
{
  return MEMORY[0x270EE4268]();
}

uint64_t sub_24558EC98()
{
  return MEMORY[0x270EF2060]();
}

uint64_t sub_24558ECA8()
{
  return MEMORY[0x270EF20D8]();
}

uint64_t sub_24558ECB8()
{
  return MEMORY[0x270EF2180]();
}

uint64_t sub_24558ECC8()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_24558ECD8()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_24558ECE8()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24558ECF8()
{
  return MEMORY[0x270F9E4B8]();
}

uint64_t sub_24558ED08()
{
  return MEMORY[0x270F9E508]();
}

uint64_t sub_24558ED18()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_24558ED28()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24558ED38()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24558ED48()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_24558ED58()
{
  return MEMORY[0x270EF2448]();
}

uint64_t sub_24558ED68()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_24558ED78()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_24558ED88()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_24558ED98()
{
  return MEMORY[0x270F9E688]();
}

uint64_t sub_24558EDA8()
{
  return MEMORY[0x270F9E690]();
}

uint64_t sub_24558EDB8()
{
  return MEMORY[0x270F9E698]();
}

uint64_t sub_24558EDC8()
{
  return MEMORY[0x270F9E6A0]();
}

uint64_t sub_24558EDD8()
{
  return MEMORY[0x270F9E6B0]();
}

uint64_t sub_24558EDE8()
{
  return MEMORY[0x270F9E708]();
}

uint64_t sub_24558EE08()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24558EE18()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24558EE28()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_24558EE38()
{
  return MEMORY[0x270F9E810]();
}

uint64_t sub_24558EE48()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_24558EE58()
{
  return MEMORY[0x270F9E820]();
}

uint64_t sub_24558EE68()
{
  return MEMORY[0x270F9E838]();
}

uint64_t sub_24558EE78()
{
  return MEMORY[0x270F9E840]();
}

uint64_t sub_24558EE88()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_24558EE98()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_24558EEA8()
{
  return MEMORY[0x270F9E860]();
}

uint64_t sub_24558EEC8()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_24558EED8()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_24558EEE8()
{
  return MEMORY[0x270F9E888]();
}

uint64_t sub_24558EEF8()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_24558EF08()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_24558EF18()
{
  return MEMORY[0x270F9E8D0]();
}

uint64_t sub_24558EF28()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_24558EF38()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24558EF48()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24558EF58()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_24558EF68()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24558EF78()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24558EF88()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24558EF98()
{
  return MEMORY[0x270F9E9B8]();
}

uint64_t sub_24558EFA8()
{
  return MEMORY[0x270F9E9D0]();
}

uint64_t sub_24558EFB8()
{
  return MEMORY[0x270F9EA10]();
}

uint64_t sub_24558EFC8()
{
  return MEMORY[0x270F9EA18]();
}

uint64_t sub_24558EFD8()
{
  return MEMORY[0x270F9EA30]();
}

uint64_t sub_24558EFE8()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_24558EFF8()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24558F008()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_24558F018()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24558F028()
{
  return MEMORY[0x270F9EB50]();
}

uint64_t sub_24558F038()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_24558F048()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_24558F058()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_24558F068()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_24558F078()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_24558F088()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_24558F098()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_24558F0A8()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_24558F0B8()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_24558F0C8()
{
  return MEMORY[0x270F9ED20]();
}

uint64_t sub_24558F0D8()
{
  return MEMORY[0x270F9ED68]();
}

uint64_t sub_24558F0E8()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24558F0F8()
{
  return MEMORY[0x270F9EDA8]();
}

uint64_t sub_24558F108()
{
  return MEMORY[0x270F9EDB0]();
}

uint64_t sub_24558F118()
{
  return MEMORY[0x270F9EDD8]();
}

uint64_t sub_24558F128()
{
  return MEMORY[0x270F9EDF8]();
}

uint64_t sub_24558F138()
{
  return MEMORY[0x270F9EEE0]();
}

uint64_t sub_24558F148()
{
  return MEMORY[0x270F9EEF8]();
}

uint64_t sub_24558F158()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_24558F168()
{
  return MEMORY[0x270F9EF88]();
}

uint64_t sub_24558F178()
{
  return MEMORY[0x270F9EFB0]();
}

uint64_t sub_24558F188()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_24558F198()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24558F1A8()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24558F1B8()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_24558F1C8()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24558F1D8()
{
  return MEMORY[0x270F9F088]();
}

uint64_t sub_24558F1E8()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24558F1F8()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24558F208()
{
  return MEMORY[0x270F9F0A8]();
}

uint64_t sub_24558F218()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24558F228()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24558F238()
{
  return MEMORY[0x270F9F0C8]();
}

uint64_t sub_24558F248()
{
  return MEMORY[0x270F9F0D0]();
}

uint64_t sub_24558F268()
{
  return MEMORY[0x270F9F1E8]();
}

uint64_t sub_24558F278()
{
  return MEMORY[0x270F9F220]();
}

uint64_t sub_24558F288()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24558F298()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24558F2A8()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_24558F2B8()
{
  return MEMORY[0x270F9F280]();
}

uint64_t sub_24558F2C8()
{
  return MEMORY[0x270F9F288]();
}

uint64_t sub_24558F2D8()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_24558F2E8()
{
  return MEMORY[0x270F9F298]();
}

uint64_t sub_24558F2F8()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_24558F308()
{
  return MEMORY[0x270F9F2A8]();
}

uint64_t sub_24558F318()
{
  return MEMORY[0x270F9F2B0]();
}

uint64_t sub_24558F328()
{
  return MEMORY[0x270F9F2B8]();
}

uint64_t sub_24558F338()
{
  return MEMORY[0x270F9F2C0]();
}

uint64_t sub_24558F348()
{
  return MEMORY[0x270F9F2C8]();
}

uint64_t sub_24558F358()
{
  return MEMORY[0x270F9F2D0]();
}

uint64_t sub_24558F368()
{
  return MEMORY[0x270F9F2D8]();
}

uint64_t sub_24558F378()
{
  return MEMORY[0x270F9F2E0]();
}

uint64_t sub_24558F388()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24558F398()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_24558F3A8()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_24558F3B8()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24558F3C8()
{
  return MEMORY[0x270F9F370]();
}

uint64_t sub_24558F3D8()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_24558F3E8()
{
  return MEMORY[0x270F9F380]();
}

uint64_t sub_24558F3F8()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24558F408()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24558F418()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_24558F428()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_24558F438()
{
  return MEMORY[0x270F9F440]();
}

uint64_t sub_24558F448()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_24558F458()
{
  return MEMORY[0x270F9F450]();
}

uint64_t sub_24558F468()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24558F478()
{
  return MEMORY[0x270F9F460]();
}

uint64_t sub_24558F488()
{
  return MEMORY[0x270F9F468]();
}

uint64_t sub_24558F498()
{
  return MEMORY[0x270F9F470]();
}

uint64_t sub_24558F4A8()
{
  return MEMORY[0x270F9F478]();
}

uint64_t sub_24558F4B8()
{
  return MEMORY[0x270F9F480]();
}

uint64_t sub_24558F4C8()
{
  return MEMORY[0x270F9F488]();
}

uint64_t sub_24558F4D8()
{
  return MEMORY[0x270F9F490]();
}

uint64_t sub_24558F4E8()
{
  return MEMORY[0x270F9F498]();
}

uint64_t sub_24558F4F8()
{
  return MEMORY[0x270F9F4A0]();
}

uint64_t sub_24558F508()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_24558F518()
{
  return MEMORY[0x270F9F4B0]();
}

uint64_t sub_24558F528()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_24558F538()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_24558F548()
{
  return MEMORY[0x270F9F4D0]();
}

uint64_t sub_24558F558()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24558F568()
{
  return MEMORY[0x270F9F770]();
}

uint64_t sub_24558F578()
{
  return MEMORY[0x270F9F778]();
}

uint64_t sub_24558F588()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_24558F598()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24558F5A8()
{
  return MEMORY[0x270F9F7D8]();
}

uint64_t sub_24558F5B8()
{
  return MEMORY[0x270F9F860]();
}

uint64_t sub_24558F5C8()
{
  return MEMORY[0x270F9F868]();
}

uint64_t sub_24558F5D8()
{
  return MEMORY[0x270F9F8F8]();
}

uint64_t sub_24558F5E8()
{
  return MEMORY[0x270F9F900]();
}

uint64_t sub_24558F5F8()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_24558F608()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_24558F618()
{
  return MEMORY[0x270F9F960]();
}

uint64_t sub_24558F628()
{
  return MEMORY[0x270F9F968]();
}

uint64_t sub_24558F638()
{
  return MEMORY[0x270F9F970]();
}

uint64_t sub_24558F648()
{
  return MEMORY[0x270F9F978]();
}

uint64_t sub_24558F658()
{
  return MEMORY[0x270F9F980]();
}

uint64_t sub_24558F668()
{
  return MEMORY[0x270F9F988]();
}

uint64_t sub_24558F678()
{
  return MEMORY[0x270F9F990]();
}

uint64_t sub_24558F688()
{
  return MEMORY[0x270F9F998]();
}

uint64_t sub_24558F698()
{
  return MEMORY[0x270F9F9A0]();
}

uint64_t sub_24558F6A8()
{
  return MEMORY[0x270F9F9A8]();
}

uint64_t sub_24558F6B8()
{
  return MEMORY[0x270F9F9B0]();
}

uint64_t sub_24558F6C8()
{
  return MEMORY[0x270F9F9B8]();
}

uint64_t sub_24558F6D8()
{
  return MEMORY[0x270F9F9D8]();
}

uint64_t sub_24558F6E8()
{
  return MEMORY[0x270F9FA00]();
}

uint64_t sub_24558F6F8()
{
  return MEMORY[0x270F9FA28]();
}

uint64_t sub_24558F708()
{
  return MEMORY[0x270F9FA60]();
}

uint64_t sub_24558F718()
{
  return MEMORY[0x270F9FA68]();
}

uint64_t sub_24558F728()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_24558F738()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24558F748()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24558F758()
{
  return MEMORY[0x270F9FB20]();
}

uint64_t sub_24558F768()
{
  return MEMORY[0x270F9FB28]();
}

uint64_t sub_24558F778()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24558F788()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24558F798()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24558F7A8()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24558F7B8()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_24558F7C8()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_24558F7D8()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24558F7E8()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24558F7F8()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24558F808()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_24558F818()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24558F828()
{
  return MEMORY[0x270F9FCA8]();
}

uint64_t sub_24558F838()
{
  return MEMORY[0x270F9FCB8]();
}

uint64_t sub_24558F848()
{
  return MEMORY[0x270F9FCC0]();
}

uint64_t sub_24558F858()
{
  return MEMORY[0x270F9FCD0]();
}

uint64_t sub_24558F868()
{
  return MEMORY[0x270F9FCD8]();
}

uint64_t sub_24558F878()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24558F888()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24558F898()
{
  return MEMORY[0x270F59A58]();
}

uint64_t sub_24558F8A8()
{
  return MEMORY[0x270F9FDD0]();
}

uint64_t sub_24558F8B8()
{
  return MEMORY[0x270FA0080]();
}

uint64_t sub_24558F8C8()
{
  return MEMORY[0x270FA0090]();
}

uint64_t sub_24558F8D8()
{
  return MEMORY[0x270FA0098]();
}

uint64_t sub_24558F908()
{
  return MEMORY[0x270FA0128]();
}

void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x270EE4E58]();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x270EE4E68]();
}

CFRunLoopObserverRef CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context)
{
  return (CFRunLoopObserverRef)MEMORY[0x270EE4E88](allocator, activities, repeats, order, callout, context);
}

void CFRunLoopObserverInvalidate(CFRunLoopObserverRef observer)
{
}

void CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFRunLoopCurrentIsMain()
{
  return MEMORY[0x270EE56E0]();
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return (void *)MEMORY[0x270ED9320](key);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void *__cdecl dispatch_queue_get_specific(dispatch_queue_t queue, const void *key)
{
  return (void *)MEMORY[0x270ED9480](queue, key);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x270ED9718]();
}

void free(void *a1)
{
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x270ED9D00]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t pthread_key_init_np()
{
  return MEMORY[0x270EDAF28]();
}

int pthread_main_np(void)
{
  return MEMORY[0x270EDAF40]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x270FA0270]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x270FA0290]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getExtendedExistentialTypeMetadata()
{
  return MEMORY[0x270FA0360]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x270FA04B0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_job_run()
{
  return MEMORY[0x270FA2440]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x270FA05D8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x270FA05E0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x270FA0600]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x270FA0608]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x270FA0630]();
}

uint64_t swift_weakCopyAssign()
{
  return MEMORY[0x270FA0638]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x270FA0640]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_weakTakeAssign()
{
  return MEMORY[0x270FA0660]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x270FA0668]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x270EDBD38](xarray);
}

const char *__cdecl xpc_array_get_string(xpc_object_t xarray, size_t index)
{
  return (const char *)MEMORY[0x270EDBD70](xarray, index);
}