void sub_100402508(unsigned __int8 a1@<W0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t *v78;
  unsigned __int8 *v79;
  uint64_t v80;
  unsigned __int8 v81;
  ValueMetadata *v82;
  id v83;
  uint64_t v84;
  id v85;
  uint64_t *v86;
  id v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t *v90;
  id v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  unsigned __int8 *v96;
  unsigned __int8 v97;
  unsigned __int8 *v98;
  unsigned char *v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t *v105;
  uint64_t *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t AssociatedTypeWitness;
  uint64_t *v113;
  id v114;
  unsigned int v115;
  uint64_t v116;

  v115 = a3;
  v113 = (uint64_t *)a4;
  v114 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_10096C890();
  v109 = *(void *)(v5 - 8);
  v110 = v5;
  __chkstk_darwin(v5);
  v111 = (uint64_t)&v108 - v6;
  v7 = swift_getAssociatedTypeWitness();
  v8 = sub_10096C890();
  v108 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v108 - v9;
  v11 = swift_getAssociatedTypeWitness();
  v12 = sub_10096C890();
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v19 = (char *)&v108 - v18;
  switch(a1 >> 6)
  {
    case 1:
      v34 = a1 & 0x3F;
      if ((a1 & 0x3F) != 0)
      {
        v35 = v116;
        v36 = (uint64_t)v113;
        v37 = v114;
        v38 = v115;
        if (v34 == 1)
        {
          v113[3] = (uint64_t)&type metadata for JobWaitCondition;
          *(void *)v36 = [v37 longAtIndex:v38];
        }
        else if ([v114 isNullAtIndex:v115])
        {
          *(_OWORD *)v36 = 0u;
          *(_OWORD *)(v36 + 16) = 0u;
        }
        else
        {
          v42 = sub_10025E9C0(v38);
          if (!v35)
          {
            v43 = v42;
            v44 = type metadata accessor for Continuation();
            v45 = v113;
            v113[3] = v44;
            *v45 = v43;
          }
        }
      }
      else
      {
        v39 = [v114 longAtIndex:v115];
        v40 = &type metadata for Int;
LABEL_16:
        v41 = v113;
        v113[3] = (uint64_t)v40;
        *v41 = (uint64_t)v39;
      }
      break;
    case 2:
      switch(a1)
      {
        case 0x81u:
          v82 = &type metadata for DeletionStatus;
          goto LABEL_49;
        case 0x82u:
          v82 = &type metadata for Fields;
LABEL_49:
          v92 = v113;
          v91 = v114;
          v113[3] = (uint64_t)v82;
          *v92 = (uint64_t)[v91 longAtIndex:v115];
          return;
        case 0x83u:
          v83 = v114;
          v84 = v115;
          if ([v114 isNullAtIndex:v115]) {
            goto LABEL_3;
          }
          v85 = [v83 longAtIndex:v84];
          v86 = v113;
          if ((unint64_t)v85 > 2)
          {
            sub_10017D094();
            swift_allocError();
            *v99 = 0;
            swift_willThrow();
          }
          else
          {
            v113[3] = (uint64_t)&type metadata for MaterializationStatus;
            *(unsigned char *)v86 = (_BYTE)v85;
          }
          return;
        case 0x84u:
          v79 = (unsigned __int8 *)v113;
          v113[3] = (uint64_t)&type metadata for ContentStatus;
          v80 = v116;
          v81 = sub_1003FD34C(v115);
          if (v80) {
            sub_10017D150((uint64_t)v79);
          }
          else {
            *v79 = v81;
          }
          return;
        case 0x85u:
          v93 = v115;
          if ([v114 isNullAtIndex:v115]) {
            goto LABEL_3;
          }
          v94 = v116;
          v95 = sub_1003FD3B8(v93);
          if (!v94)
          {
            v96 = (unsigned __int8 *)v113;
            v113[3] = (uint64_t)&type metadata for DiskImportStatus;
            *v96 = v95;
          }
          return;
        case 0x86u:
          v97 = [v114 BOOLAtIndex:v115];
          v98 = (unsigned __int8 *)v113;
          v113[3] = (uint64_t)&type metadata for Bool;
          *v98 = v97;
          return;
        case 0x87u:
          v87 = v114;
          v88 = v115;
          if ([v114 isNullAtIndex:v115]) {
            goto LABEL_3;
          }
          v89 = (unint64_t)[v87 longLongAtIndex:v88];
          v90 = (unint64_t *)v113;
          if ((v89 & 0x8000000000000000) != 0)
          {
            sub_10096CE10();
            __break(1u);
            JUMPOUT(0x100403074);
          }
          v113[3] = (uint64_t)&type metadata for UInt64;
          *v90 = v89;
          return;
        default:
          v23 = v17;
          v24 = v16;
          v25 = v11;
          v26 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
          v27 = v114;
          v28 = v116;
          Optional<A>.init(rs:at:)(v27, v115, v25, v26, (uint64_t)v19);
          if (v28) {
            return;
          }
          v29 = *(void *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v19, 1, v25) == 1)
          {
            (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v24);
            goto LABEL_35;
          }
          v106 = v113;
          v113[3] = v25;
          v107 = sub_10009C958(v106);
          (*(void (**)(uint64_t *, char *, uint64_t))(v29 + 32))(v107, v19, v25);
          break;
      }
      break;
    case 3:
      switch(a1)
      {
        case 0xC1u:
          v64 = v114;
          v65 = v115;
          if ([v114 isNullAtIndex:v115]) {
            goto LABEL_3;
          }
          v39 = [v64 longLongAtIndex:v65];
          v40 = &type metadata for Int64;
          goto LABEL_16;
        case 0xC2u:
          v50 = v17;
          v51 = v16;
          v52 = v11;
          v53 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
          v54 = v114;
          v55 = v116;
          Optional<A>.init(rs:at:)(v54, v115, v52, v53, (uint64_t)v15);
          if (v55) {
            return;
          }
          v56 = *(void *)(v52 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v15, 1, v52) == 1)
          {
            (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v51);
            goto LABEL_35;
          }
          v102 = v113;
          v113[3] = v52;
          v103 = sub_10009C958(v102);
          (*(void (**)(uint64_t *, char *, uint64_t))(v56 + 32))(v103, v15, v52);
          return;
        case 0xC3u:
          v57 = v114;
          v58 = v115;
          if ([v114 isNullAtIndex:v115]) {
            goto LABEL_3;
          }
          v59 = [v57 stringAtIndex:v58];
          v60 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          v62 = v61;

          v63 = v113;
          v113[3] = (uint64_t)&type metadata for Filename;
          *v63 = v60;
          v63[1] = v62;
          return;
        case 0xC4u:
          v46 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
          v47 = v114;
          v48 = v116;
          Optional<A>.init(rs:at:)(v47, v115, v7, v46, (uint64_t)v10);
          if (v48) {
            return;
          }
          v49 = *(void *)(v7 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v10, 1, v7) == 1)
          {
            (*(void (**)(char *, uint64_t))(v108 + 8))(v10, v8);
            goto LABEL_35;
          }
          v100 = v113;
          v113[3] = v7;
          v101 = sub_10009C958(v100);
          (*(void (**)(uint64_t *, char *, uint64_t))(v49 + 32))(v101, v10, v7);
          return;
        case 0xC5u:
          v66 = AssociatedTypeWitness;
          v67 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
          v68 = v114;
          v69 = v111;
          v70 = v116;
          Optional<A>.init(rs:at:)(v68, v115, v66, v67, v111);
          if (v70) {
            return;
          }
          v71 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v69, 1, v66) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v69, v110);
LABEL_35:
            v72 = (uint64_t)v113;
            *(_OWORD *)v113 = 0u;
            *(_OWORD *)(v72 + 16) = 0u;
          }
          else
          {
            v104 = v113;
            v113[3] = v66;
            v105 = sub_10009C958(v104);
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v71 + 32))(v105, v69, v66);
          }
          return;
        case 0xC6u:
          v73 = v114;
          v74 = v115;
          if (([v73 isNullAtIndex:v115] & 1) == 0)
          {
            v75 = [v73 integerAtIndex:v74];
            if (v75)
            {
              v76 = [self domainVersionWithVersion:v75];

              v77 = sub_100011348(0, (unint64_t *)&qword_100AD0C08);
              v78 = v113;
              v113[3] = v77;
              *v78 = (uint64_t)v76;
              return;
            }
          }

          break;
        default:
          v30 = v114;
          v31 = v115;
          if ([v114 isNullAtIndex:v115]) {
            goto LABEL_3;
          }
          v32 = [v30 unsignedIntAtIndex:v31];
          v33 = (unsigned int *)v113;
          v113[3] = (uint64_t)&type metadata for UInt32;
          *v33 = v32;
          return;
      }
      goto LABEL_3;
    default:
      v20 = v114;
      v21 = v115;
      if ([v114 isNullAtIndex:v115])
      {
LABEL_3:
        v22 = (uint64_t)v113;
        *(_OWORD *)v113 = 0u;
        *(_OWORD *)(v22 + 16) = 0u;
      }
      else
      {
        sub_1003FF2BC(v20, a1, v21, (uint64_t)v113);
      }
      break;
  }
}

void *sub_1004030C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v162 = a5;
  v212 = &_s9SQLFieldsON_0;
  uint64_t v213 = a2;
  unint64_t v163 = sub_10040740C();
  unint64_t v214 = v163;
  uint64_t v215 = a4;
  uint64_t v166 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v164 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  v165 = &v157[-v9];
  unint64_t v10 = sub_1003FF760();
  v212 = &_s9SQLFieldsON;
  uint64_t v213 = a2;
  uint64_t v220 = a2;
  unint64_t v171 = v10;
  unint64_t v214 = v10;
  uint64_t v215 = a4;
  uint64_t v174 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  v172 = &v157[-v11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v188 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = __chkstk_darwin(AssociatedTypeWitness);
  v179 = &v157[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v178 = &v157[-v15];
  v16 = (ValueMetadata *)swift_getAssociatedTypeWitness();
  Description = (void (**)(unsigned char *, uint64_t, uint64_t, ValueMetadata *))v16[-1].Description;
  uint64_t v17 = __chkstk_darwin(v16);
  v177 = &v157[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v185 = &v157[-v19];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  v212 = v16;
  uint64_t v213 = AssociatedTypeWitness;
  uint64_t v176 = AssociatedConformanceWitness;
  unint64_t v214 = AssociatedConformanceWitness;
  uint64_t v215 = v21;
  uint64_t v175 = v21;
  uint64_t v190 = type metadata accessor for FileItemVersion();
  uint64_t v192 = sub_10096C890();
  uint64_t v191 = *(void *)(v192 - 8);
  uint64_t v22 = __chkstk_darwin(v192);
  v167 = &v157[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v194 = &v157[-v24];
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v161 = a3;
  uint64_t v160 = a1;
  uint64_t v170 = swift_getAssociatedConformanceWitness();
  uint64_t v200 = type metadata accessor for ItemStateVersion();
  __chkstk_darwin(v200);
  v169 = &v157[-v26];
  uint64_t v186 = sub_10096C890();
  uint64_t v183 = *(void *)(v186 - 8);
  uint64_t v27 = __chkstk_darwin(v186);
  v180 = &v157[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = __chkstk_darwin(v27);
  v31 = &v157[-v30];
  uint64_t v187 = *(void *)(v25 - 8);
  uint64_t v32 = __chkstk_darwin(v29);
  v182 = &v157[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v32);
  v181 = &v157[-v34];
  v201 = (void (*)(unsigned char *, uint64_t, uint64_t, ValueMetadata *))AssociatedTypeWitness;
  uint64_t v198 = sub_10096C890();
  uint64_t v195 = *(void *)(v198 - 8);
  uint64_t v35 = __chkstk_darwin(v198);
  v184 = &v157[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v37 = __chkstk_darwin(v35);
  v39 = &v157[-v38];
  uint64_t v40 = __chkstk_darwin(v37);
  v168 = &v157[-v41];
  __chkstk_darwin(v40);
  v196 = &v157[-v42];
  uint64_t v43 = sub_10096C890();
  uint64_t v202 = *(void *)(v43 - 8);
  uint64_t v44 = __chkstk_darwin(v43);
  v189 = &v157[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = __chkstk_darwin(v44);
  v48 = &v157[-v47];
  uint64_t v49 = __chkstk_darwin(v46);
  v51 = &v157[-v50];
  __chkstk_darwin(v49);
  v203 = &v157[-v52];
  v197 = v16;
  if (!swift_dynamicCastMetatype())
  {
    LOBYTE(v212) = -60;
    uint64_t v58 = v204;
    result = (void *)sub_1006FCBE4((uint64_t)&v212, v43, v220, v43, a4);
    if (v58) {
      return result;
    }
    uint64_t v193 = a4;
    uint64_t v204 = 0;
    uint64_t v57 = v202;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v202 + 32))(v203, v48, v43);
    v159 = (ValueMetadata *)v43;
    v56 = Description;
LABEL_7:
    uint64_t v59 = (uint64_t)v201;
    if (swift_dynamicCastMetatype())
    {
      LOBYTE(v212) = -62;
      uint64_t v60 = v193;
      uint64_t v61 = v204;
      (*(void (**)(uint64_t, ValueMetadata **, uint64_t, uint64_t, uint64_t))(v193 + 32))(v25, &v212, v25, v220, v193);
      uint64_t v204 = v61;
      if (v61) {
        return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v203, v159);
      }
      uint64_t v193 = v60;
      uint64_t v62 = v187;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v187 + 48))(v31, 1, v25) != 1)
      {
        v91 = v181;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v62 + 32))(v181, v31, v25);
        v92 = v182;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v62 + 16))(v182, v91, v25);
        LOBYTE(v211) = -61;
        uint64_t v93 = v220;
        uint64_t v94 = v62;
        uint64_t v95 = v193;
        sub_100391750(v220, (uint64_t)&type metadata for Filename);
        uint64_t v96 = v204;
        sub_1006FCBE4((uint64_t)&v211, (uint64_t)&type metadata for Filename, v93, (uint64_t)&type metadata for Filename, v95);
        uint64_t v204 = v96;
        uint64_t v97 = v198;
        if (v96)
        {
          v98 = *(void (**)(unsigned char *, uint64_t))(v94 + 8);
          v98(v92, v25);
          v98(v91, v25);
          return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v202 + 8))(v203, v159);
        }
        uint64_t v119 = (uint64_t)v92;
        uint64_t v81 = (uint64_t)v197;
        (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v91, v25);
        ItemStateVersion.init(parentID:filename:)(v119, (uint64_t)v212, v213, v25, (uint64_t)v169);
        v120 = v168;
        uint64_t v59 = (uint64_t)v201;
        int v121 = swift_dynamicCast();
        uint64_t v63 = v188;
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v188 + 56))(v120, v121 ^ 1u, 1, v59);
        uint64_t v64 = v195;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v195 + 32))(v196, v120, v97);
        uint64_t v57 = v202;
LABEL_18:
        v82 = v189;
        v83 = v159;
        (*(void (**)(unsigned char *, unsigned char *, ValueMetadata *))(v57 + 16))(v189, v203, v159);
        if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v56[6])(v82, 1, v81) == 1)
        {
          (*(void (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v82, v83);
          uint64_t v84 = 1;
        }
        else
        {
          v85 = v185;
          v201 = v56[4];
          ((void (*)(unsigned char *, unsigned char *, uint64_t))v201)(v185, v82, v81);
          v86 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v64 + 16);
          v87 = v184;
          uint64_t v88 = v198;
          v86(v184, v196, v198);
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v63 + 48))(v87, 1, v59) == 1)
          {
            ((void (*)(unsigned char *, uint64_t))v56[1])(v85, v81);
            uint64_t v89 = v195;
            (*(void (**)(unsigned char *, uint64_t))(v195 + 8))(v87, v88);
            uint64_t v84 = 1;
            uint64_t v57 = v202;
            uint64_t v90 = v191;
            uint64_t v64 = v89;
LABEL_26:
            v104 = v194;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v194, v84, 1);
            LOBYTE(v211) = 0;
            uint64_t v105 = v204;
            (*(void (**)(ValueMetadata **__return_ptr, void *, uint64_t *, void *, uint64_t))(v193 + 32))(&v212, &type metadata for UInt64, &v211, &type metadata for UInt64, v220);
            uint64_t v106 = v192;
            if (v105)
            {
              (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v104, v192);
              (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v196, v198);
              return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v203, v159);
            }
            uint64_t v204 = 0;
            if (v213)
            {
              uint64_t v107 = 0;
              uint64_t v108 = 0;
              uint64_t v109 = 0;
              uint64_t v110 = 0;
              unint64_t v111 = 0;
              v112 = 0;
              unint64_t v113 = 0xB000000000000000;
              goto LABEL_34;
            }
            uint64_t v114 = v64;
            v115 = v172;
            sub_1006FD068((uint64_t)sub_100408880, 0, v220, (uint64_t)&_s9SQLFieldsON, v193, v171, (uint64_t)v172);
            uint64_t v116 = v174;
            uint64_t WitnessTable = swift_getWitnessTable();
            uint64_t v118 = v204;
            sub_1003FF418(v116, WitnessTable, (uint64_t)v216);
            uint64_t v204 = v118;
            if (!v118)
            {
              uint64_t v107 = v216[0];
              uint64_t v108 = v216[1];
              unint64_t v113 = v216[2];
              uint64_t v109 = v216[3];
              uint64_t v110 = v216[4];
              unint64_t v111 = v217;
              v201 = v218;
              (*(void (**)(unsigned char *, uint64_t))(v173 + 8))(v115, v116);
              v112 = v201;
LABEL_34:
              uint64_t v200 = v108;
              v219[0] = v107;
              v219[1] = v108;
              v219[2] = v113;
              v219[3] = v109;
              v219[4] = v110;
              v219[5] = v111;
              v201 = v112;
              v219[6] = v112;
              LOBYTE(v212) = 0x80;
              uint64_t v122 = v220;
              uint64_t v123 = v107;
              uint64_t v124 = v186;
              unint64_t v125 = v113;
              uint64_t v126 = v193;
              sub_100391750(v220, v186);
              uint64_t v127 = v204;
              sub_1006FCBE4((uint64_t)&v212, v124, v122, v124, v126);
              if (v127)
              {
                (*(void (**)(unsigned char *, uint64_t))(v191 + 8))(v194, v192);
                sub_1000D35D8(v123, v200, v125);
                (*(void (**)(unsigned char *, uint64_t))(v195 + 8))(v196, v198);
                return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v202 + 8))(v203, v159);
              }
              else
              {
                uint64_t v128 = v123;
                Description = (void (**)(unsigned char *, uint64_t, uint64_t, ValueMetadata *))v111;
                LOBYTE(v211) = -127;
                uint64_t v129 = v220;
                sub_100391750(v220, (uint64_t)&type metadata for DeletionStatus);
                sub_1006FCBE4((uint64_t)&v211, (uint64_t)&type metadata for DeletionStatus, v129, (uint64_t)&type metadata for DeletionStatus, v126);
                v130 = v212;
                LOBYTE(v206) = -126;
                uint64_t v131 = v220;
                sub_100391750(v220, (uint64_t)&type metadata for Fields);
                sub_1006FCBE4((uint64_t)&v206, (uint64_t)&type metadata for Fields, v131, (uint64_t)&type metadata for Fields, v193);
                v197 = v130;
                uint64_t v190 = v211;
                LOBYTE(v206) = -125;
                uint64_t v132 = sub_10002B7CC((uint64_t *)&unk_100AD6530);
                uint64_t v133 = v220;
                sub_100391750(v220, v132);
                sub_1006FCBE4((uint64_t)&v206, v132, v133, v132, v193);
                LODWORD(v189) = v210;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v191 + 16))(v167, v194, v192);
                LOBYTE(v206) = -124;
                uint64_t v134 = v220;
                sub_100391750(v220, (uint64_t)&type metadata for ContentStatus);
                uint64_t v135 = v134;
                uint64_t v136 = v193;
                sub_1006FCBE4((uint64_t)&v206, (uint64_t)&type metadata for ContentStatus, v135, (uint64_t)&type metadata for ContentStatus, v193);
                uint64_t v204 = 0;
                LODWORD(v188) = v209;
                LOBYTE(v206) = -123;
                uint64_t v137 = v136;
                uint64_t v138 = sub_10002B7CC((uint64_t *)&unk_100AD4BE0);
                uint64_t v139 = v220;
                sub_100391750(v220, v138);
                uint64_t v140 = v204;
                sub_1006FCBE4((uint64_t)&v206, v138, v139, v138, v137);
                if (v140)
                {
                  sub_1000D35D8(v128, v200, v125);
                  v141 = *(void (**)(unsigned char *, uint64_t))(v191 + 8);
                  uint64_t v142 = v192;
                  v141(v167, v192);
                  (*(void (**)(unsigned char *, uint64_t))(v183 + 8))(v180, v186);
                  v141(v194, v142);
                  (*(void (**)(unsigned char *, uint64_t))(v195 + 8))(v196, v198);
                  return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v202 + 8))(v203, v159);
                }
                else
                {
                  LODWORD(v187) = v208;
                  LOBYTE(v206) = -122;
                  uint64_t v143 = v220;
                  sub_100391750(v220, (uint64_t)&type metadata for Bool);
                  sub_1006FCBE4((uint64_t)&v206, (uint64_t)&type metadata for Bool, v143, (uint64_t)&type metadata for Bool, v137);
                  char v144 = v207;
                  v145 = v165;
                  sub_1006FD068((uint64_t)sub_10040107C, 0, v220, (uint64_t)&_s9SQLFieldsON_0, v193, v163, (uint64_t)v165);
                  uint64_t v146 = v166;
                  uint64_t v147 = swift_getWitnessTable();
                  v185 = (unsigned char *)sub_1007B2C98((uint64_t)v145, v146, v147);
                  v184 = v148;
                  LODWORD(v182) = v149;
                  uint64_t v204 = 0;
                  (*(void (**)(unsigned char *, uint64_t))(v164 + 8))(v165, v166);
                  char v205 = -58;
                  uint64_t v150 = sub_10002B7CC((uint64_t *)&unk_100AD6860);
                  uint64_t v151 = v220;
                  uint64_t v152 = v193;
                  sub_100391750(v220, v150);
                  uint64_t v153 = v204;
                  sub_1006FCBE4((uint64_t)&v205, v150, v151, v150, v152);
                  if (v153)
                  {
                    sub_1000D31F8((uint64_t)v185, (uint64_t)v184, (char)v182);
                    sub_1000D35D8(v128, v200, v125);
                    v154 = *(void (**)(unsigned char *, uint64_t))(v191 + 8);
                    uint64_t v155 = v192;
                    v154(v167, v192);
                    (*(void (**)(unsigned char *, uint64_t))(v183 + 8))(v180, v186);
                    v154(v194, v155);
                    (*(void (**)(unsigned char *, uint64_t))(v195 + 8))(v196, v198);
                    return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v202 + 8))(v203, v159);
                  }
                  else
                  {
                    uint64_t v156 = v206;
                    (*(void (**)(unsigned char *, uint64_t))(v191 + 8))(v194, v192);
                    (*(void (**)(unsigned char *, uint64_t))(v195 + 8))(v196, v198);
                    (*(void (**)(unsigned char *, ValueMetadata *))(v202 + 8))(v203, v159);
                    return (void *)sub_10082C360((uint64_t)v180, (uint64_t)v197, v190, (char)v189, (uint64_t)v167, v188, v187, v144, v162, (uint64_t)v185, (uint64_t)v184, (char)v182, (uint64_t)v219, v156, 0);
                  }
                }
              }
            }
            (*(void (**)(unsigned char *, uint64_t))(v173 + 8))(v115, v116);
            (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v104, v106);
            (*(void (**)(unsigned char *, uint64_t))(v114 + 8))(v196, v198);
            return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v203, v159);
          }
          v99 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v63 + 32);
          v100 = v178;
          v99(v178, v87, v59);
          v101 = v85;
          uint64_t v102 = (uint64_t)v177;
          ((void (*)(unsigned char *, unsigned char *, uint64_t))v201)(v177, v101, v81);
          uint64_t v103 = (uint64_t)v179;
          v99(v179, v100, v59);
          uint64_t v64 = v195;
          sub_1007D03B8(v102, 0, v103, 0, 0, 0, v81, v59, (uint64_t)v194);
          uint64_t v84 = 0;
          uint64_t v57 = v202;
        }
        uint64_t v90 = v191;
        goto LABEL_26;
      }
      (*(void (**)(unsigned char *, uint64_t))(v183 + 8))(v31, v186);
      uint64_t v63 = v188;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v188 + 56))(v196, 1, 1, v59);
      uint64_t v64 = v195;
    }
    else
    {
      LOBYTE(v212) = -59;
      uint64_t v77 = v198;
      uint64_t v78 = v193;
      uint64_t v79 = v204;
      sub_1006FCBE4((uint64_t)&v212, v198, v220, v198, v193);
      uint64_t v204 = v79;
      if (v79) {
        return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v203, v159);
      }
      uint64_t v193 = v78;
      v80 = v39;
      uint64_t v64 = v195;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v195 + 32))(v196, v80, v77);
      uint64_t v63 = v188;
    }
    uint64_t v81 = (uint64_t)v197;
    goto LABEL_18;
  }
  v53 = (ValueMetadata *)v43;
  LOBYTE(v211) = -121;
  uint64_t v54 = v204;
  result = (*(void *(**)(ValueMetadata **__return_ptr, void *, uint64_t *, void *, uint64_t, uint64_t))(a4 + 32))(&v212, &type metadata for UInt64, &v211, &type metadata for UInt64, v220, a4);
  if (v54) {
    return result;
  }
  uint64_t v193 = a4;
  uint64_t v204 = 0;
  if (v213)
  {
    v56 = Description;
    Description[7](v203, 1, 1, v197);
    uint64_t v57 = v202;
    v159 = v53;
    goto LABEL_7;
  }
  v159 = v212;
  LOBYTE(v212) = -64;
  uint64_t v65 = v220;
  uint64_t v66 = v193;
  sub_100391750(v220, (uint64_t)&type metadata for UInt32);
  uint64_t v67 = v204;
  result = (void *)sub_1006FCBE4((uint64_t)&v212, (uint64_t)&type metadata for UInt32, v65, (uint64_t)&type metadata for UInt32, v66);
  if (!v67)
  {
    v68 = v159;
    int v158 = v211;
    LOBYTE(v206) = -63;
    uint64_t v204 = 0;
    uint64_t v69 = sub_10002B7CC((uint64_t *)&unk_100AD6850);
    sub_100391750(v65, v69);
    uint64_t v70 = v204;
    result = (void *)sub_1006FCBE4((uint64_t)&v206, v69, v65, v69, v193);
    if (!v70)
    {
      uint64_t v204 = 0;
      v71 = v212;
      char v72 = v213;
      v212 = v68;
      LODWORD(v213) = v158;
      unint64_t v214 = (unint64_t)v71;
      LOBYTE(v215) = v72;
      uint64_t v73 = (uint64_t)v197;
      int v74 = swift_dynamicCast();
      v56 = Description;
      Description[7](v51, v74 ^ 1u, 1, (ValueMetadata *)v73);
      v75 = *(void (**)(unsigned char *, unsigned char *, ValueMetadata *))(v202 + 32);
      v76 = v51;
      uint64_t v57 = v202;
      v159 = v53;
      v75(v203, v76, v53);
      goto LABEL_7;
    }
  }
  return result;
}

uint64_t sub_100404ED4(unsigned __int8 *a1, void *a2, int *a3)
{
  return sub_10040108C(*a1, a2, a3);
}

void sub_100404EF0(unsigned __int8 *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
}

void *sub_100404F14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1004030C0(*(void *)(a3 + 16), a1, *(void *)(a3 + 24), a2, a4);
}

_UNKNOWN **sub_100404F38@<X0>(void *a1@<X8>)
{
  result = sub_100400C18();
  *a1 = result;
  return result;
}

unint64_t sub_100404F68(unsigned int a1)
{
  switch((a1 >> 4) & 3)
  {
    case 1u:
      LOBYTE(a1) = a1 & 0xCF;
      uint64_t v1 = 6254694;
      goto LABEL_4;
    case 2u:
      uint64_t v7 = 0x696C756465686373;
      BOOL v3 = (a1 & 1) == 0;
      if (a1) {
        v2._countAndFlagsBits = 0x6D617473656D6974;
      }
      else {
        v2._countAndFlagsBits = 0x797469726F697270;
      }
      if (v3) {
        v4 = (void *)0xE800000000000000;
      }
      else {
        v4 = (void *)0xE900000000000070;
      }
      v2._object = v4;
      goto LABEL_12;
    case 3u:
      int v6 = a1;
      unint64_t result = 1684957547;
      switch(v6)
      {
        case '1':
          unint64_t result = 0x6E6964696C6C6F63;
          break;
        case '2':
          unint64_t result = 0x5F73695F6D657469;
          break;
        case '3':
          unint64_t result = 0x6168635F7473616CLL;
          break;
        case '4':
          unint64_t result = 0xD000000000000020;
          break;
        case '5':
          unint64_t result = 0xD000000000000015;
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v1 = 6255462;
LABEL_4:
      uint64_t v7 = v1;
      v2._countAndFlagsBits = sub_1003FF9E0(a1);
LABEL_12:
      sub_10096BDC0(v2);
      swift_bridgeObjectRelease();
      return v7;
  }
}

void sub_100405154(uint64_t a1, unsigned int a2)
{
  unsigned __int8 v2 = a2;
  switch((a2 >> 4) & 3)
  {
    case 1u:
      unsigned __int8 v2 = a2 & 0xCF;
      Swift::UInt v4 = 1;
      goto LABEL_4;
    case 2u:
      sub_10096D4C0(4uLL);
      sub_10096BD50();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      switch((char)a2)
      {
        case '1':
          Swift::UInt v5 = 3;
          break;
        case '2':
          Swift::UInt v5 = 5;
          break;
        case '3':
          Swift::UInt v5 = 6;
          break;
        case '4':
          Swift::UInt v5 = 7;
          break;
        case '5':
          Swift::UInt v5 = 8;
          break;
        default:
          Swift::UInt v5 = 2;
          break;
      }
      sub_10096D4C0(v5);
      break;
    default:
      Swift::UInt v4 = 0;
LABEL_4:
      sub_10096D4C0(v4);
      sub_1003FFDD4(a1, v2);
      break;
  }
}

Swift::Int sub_1004052C0(uint64_t a1, uint64_t a2)
{
  return sub_1004052D8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_100405154);
}

Swift::Int sub_1004052D8(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  uint64_t v5 = *v3;
  sub_10096D4B0();
  a3(v7, v5);
  return sub_10096D500();
}

void sub_100405328(uint64_t a1)
{
  sub_100405154(a1, *v1);
}

Swift::Int sub_100405330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100405348(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_100405154);
}

Swift::Int sub_100405348(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v6 = *v4;
  sub_10096D4B0();
  a4(v8, v6);
  return sub_10096D500();
}

unint64_t sub_100405394()
{
  return sub_100404F68(*v0);
}

uint64_t sub_10040539C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1004081F4(*a1, *a2);
}

void *sub_1004053A8()
{
  uint64_t v0 = sub_1003FE074(0xD00000000000001FLL, 0x80000001009A0DF0, &qword_100AD4ED8, (uint64_t (*)(uint64_t))sub_1004005D8);
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    sub_100445F7C(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = _swiftEmptyArrayStorage[2];
    do
    {
      char v4 = *(unsigned char *)(v0 + v2 + 32);
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v3 + v2 >= v5 >> 1) {
        sub_100445F7C(v5 > 1, v3 + v2 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v3 + v2 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3 + v2++) = v4;
    }
    while (v1 != v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1003FE9BC(&qword_100AD4F08, &qword_100AD4ED8, (uint64_t (*)(uint64_t))sub_1004000C4);
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    v8 = (unsigned __int8 *)(v6 + 32);
    uint64_t v9 = _swiftEmptyArrayStorage;
    do
    {
      unsigned int v11 = *v8++;
      char v10 = v11;
      if (v11 <= 0xC5)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1006A2634(0, v9[2] + 1, 1, v9);
        }
        unint64_t v13 = v9[2];
        unint64_t v12 = v9[3];
        if (v13 >= v12 >> 1) {
          uint64_t v9 = sub_1006A2634((void *)(v12 > 1), v13 + 1, 1, v9);
        }
        v9[2] = v13 + 1;
        *((unsigned char *)v9 + v13 + 32) = v10 | 0x10;
      }
      --v7;
    }
    while (v7);
  }
  else
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  sub_1003FC7A4((uint64_t)v9, (uint64_t (*)(void))sub_1006A2634);
  uint64_t v15 = _swiftEmptyArrayStorage;
  int64_t v16 = _swiftEmptyArrayStorage[2];
  int64_t v17 = v16 + 6;
  if (__OFADD__(v16, 6))
  {
    __break(1u);
LABEL_41:
    uint64_t v15 = sub_1006A2634((void *)(v14 > 1), v16, 1, v15);
    unint64_t v14 = v15[3];
    int64_t v19 = v14 >> 1;
    goto LABEL_24;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native
    || (unint64_t v14 = _swiftEmptyArrayStorage[3], v19 = v14 >> 1, (uint64_t)(v14 >> 1) < v17))
  {
    if (v16 <= v17) {
      int64_t v20 = v16 + 6;
    }
    else {
      int64_t v20 = v16;
    }
    uint64_t v15 = sub_1006A2634(isUniquelyReferenced_nonNull_native, v20, 1, _swiftEmptyArrayStorage);
    unint64_t v14 = v15[3];
    int64_t v19 = v14 >> 1;
  }
  unint64_t v7 = v15[2];
  int64_t v16 = v7 + 1;
  if (v19 <= v7) {
    goto LABEL_41;
  }
LABEL_24:
  v15[2] = v16;
  *((unsigned char *)v15 + v7 + 32) = 48;
  unint64_t v21 = v7 + 2;
  if (v19 < (uint64_t)(v7 + 2))
  {
    uint64_t v15 = sub_1006A2634((void *)(v14 > 1), v7 + 2, 1, v15);
    unint64_t v14 = v15[3];
    int64_t v19 = v14 >> 1;
  }
  v15[2] = v21;
  *((unsigned char *)v15 + v16 + 32) = 49;
  unint64_t v22 = v7 + 3;
  if (v19 < (uint64_t)(v7 + 3))
  {
    uint64_t v15 = sub_1006A2634((void *)(v14 > 1), v7 + 3, 1, v15);
    unint64_t v14 = v15[3];
    int64_t v19 = v14 >> 1;
  }
  v15[2] = v22;
  *((unsigned char *)v15 + v21 + 32) = 50;
  unint64_t v23 = v7 + 4;
  if (v19 < (uint64_t)(v7 + 4))
  {
    uint64_t v15 = sub_1006A2634((void *)(v14 > 1), v7 + 4, 1, v15);
    unint64_t v14 = v15[3];
    int64_t v19 = v14 >> 1;
  }
  v15[2] = v23;
  *((unsigned char *)v15 + v22 + 32) = 51;
  unint64_t v24 = v7 + 5;
  if (v19 < (uint64_t)(v7 + 5))
  {
    uint64_t v15 = sub_1006A2634((void *)(v14 > 1), v7 + 5, 1, v15);
    unint64_t v14 = v15[3];
    int64_t v19 = v14 >> 1;
  }
  v15[2] = v24;
  *((unsigned char *)v15 + v23 + 32) = 52;
  if (v19 < (uint64_t)(v7 + 6)) {
    uint64_t v15 = sub_1006A2634((void *)(v14 > 1), v7 + 6, 1, v15);
  }
  v15[2] = v7 + 6;
  *((unsigned char *)v15 + v24 + 32) = 53;
  uint64_t v32 = v15;
  uint64_t v25 = sub_1003FD824();
  int64_t v26 = (int64_t)v25[2];
  if (v26)
  {
    sub_100445F7C(0, v26, 0);
    uint64_t v27 = 0;
    uint64_t v28 = _swiftEmptyArrayStorage[2];
    do
    {
      char v29 = *((unsigned char *)v25 + v27 + 32);
      unint64_t v30 = _swiftEmptyArrayStorage[3];
      if (v28 + v27 >= v30 >> 1) {
        sub_100445F7C(v30 > 1, v28 + v27 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v28 + v27 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v28 + v27++) = v29 | 0x20;
    }
    while (v26 != v27);
  }
  swift_bridgeObjectRelease();
  sub_1003FC7A4((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(void))sub_1006A2634);
  return v32;
}

uint64_t sub_100405894()
{
  uint64_t v0 = type metadata accessor for ItemReconciliationHalf();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1006FCD24(v0, WitnessTable);
  uint64_t v2 = sub_10002B7CC(&qword_100AD4ED8);
  uint64_t v3 = swift_getWitnessTable();
  uint64_t v5 = sub_1003FC0AC((void (*)(char *, char *))sub_100405B34, 0, v2, (uint64_t)&type metadata for ItemReconciliationSQLFields, (uint64_t)&type metadata for Never, v3, (uint64_t)&protocol witness table for Never, v4);
  swift_bridgeObjectRelease();
  uint64_t v12 = v5;
  uint64_t v6 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v7 = swift_getWitnessTable();
  sub_1006FCD24(v6, v7);
  swift_getWitnessTable();
  sub_10096BF10();
  swift_bridgeObjectRelease();
  sub_10002B7CC(&qword_100AD4EE8);
  swift_getWitnessTable();
  sub_10096C170();
  sub_10096C170();
  sub_1003FD824();
  uint64_t v8 = sub_10002B7CC(&qword_100AD4EF0);
  uint64_t v9 = sub_100025500(&qword_100AD4EF8, &qword_100AD4EF0);
  sub_1003FC0AC((void (*)(char *, char *))sub_100391758, 0, v8, (uint64_t)&type metadata for ItemReconciliationSQLFields, (uint64_t)&type metadata for Never, v9, (uint64_t)&protocol witness table for Never, v10);
  swift_bridgeObjectRelease();
  sub_10096C170();
  return v12;
}

unsigned char *sub_100405B34@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int8 *sub_100405B40@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  unsigned int v2 = *result;
  if (v2 >= 0xC6) {
    char v3 = 56;
  }
  else {
    char v3 = v2 | 0x10;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_100405B5C(uint64_t a1, id a2, int *a3)
{
  uint64_t v6 = a1;
  switch((a1 >> 4) & 3)
  {
    case 1u:
      uint64_t v6 = a1 & 0xFFFFFFCF;
      v3 += a3[13];
      goto LABEL_8;
    case 2u:
      uint64_t v7 = sub_1007B2F2C(a1 & 1, (uint64_t)a2, *(void *)(v3 + a3[16]), *(void *)(v3 + a3[16] + 8));
      if (!v4) {
        return v7;
      }
      return v3;
    case 3u:
      switch((char)a1)
      {
        case '1':
          uint64_t v19 = *(void *)(v3 + a3[15]);
          uint64_t v22 = v19;
          *(void *)&long long v20 = swift_getAssociatedTypeWitness();
          *((void *)&v20 + 1) = swift_getAssociatedTypeWitness();
          *(void *)&long long v21 = swift_getAssociatedConformanceWitness();
          *((void *)&v21 + 1) = swift_getAssociatedConformanceWitness();
          type metadata accessor for ReconciliationID();
          uint64_t v12 = sub_10096C1C0();
          swift_getWitnessTable();
          if (sub_10096C460())
          {
            id v10 = [a2 bindObjectParameter:0];
            goto LABEL_15;
          }
          *(void *)&long long v20 = v19;
          swift_bridgeObjectRetain();
          swift_getWitnessTable();
          uint64_t WitnessTable = swift_getWitnessTable();
          uint64_t v3 = sub_1003AA73C((uint64_t)&v20, v12, WitnessTable);
          swift_bridgeObjectRelease();
          return v3;
        case '2':
          uint64_t v11 = *(int *)(type metadata accessor for ItemReconciliationHalf() + 76);
          goto LABEL_17;
        case '3':
          id v10 = [a2 bindLongParameter:*(void *)(v3 + a3[17])];
          goto LABEL_15;
        case '4':
          id v10 = [a2 bindBooleanParameter:*(unsigned __int8 *)(v3 + a3[18])];
LABEL_15:
          id v13 = v10;
          uint64_t v3 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

          return v3;
        case '5':
          uint64_t v11 = a3[19];
LABEL_17:
          uint64_t v14 = *(void *)(v3 + v11);
          goto LABEL_18;
        default:
          uint64_t v8 = *(char *)(v3 + a3[14]);
          if (v8 == 4)
          {
            long long v20 = 0u;
            long long v21 = 0u;
          }
          else
          {
            uint64_t v14 = qword_100982610[v8];
LABEL_18:
            *((void *)&v21 + 1) = &type metadata for Int;
            *(void *)&long long v20 = v14;
          }
          uint64_t v3 = sub_1003AC444((uint64_t)&v20);
          uint64_t v16 = v15;
          sub_10017D1A4((uint64_t)&v20);
          if (!v16)
          {
            sub_10096CE20();
            __break(1u);
            JUMPOUT(0x100405F38);
          }
          return result;
      }
      return v3;
    default:
LABEL_8:
      uint64_t v9 = (int *)type metadata accessor for ItemReconciliationHalf();
      uint64_t v7 = sub_10040108C(v6, a2, v9);
      if (v4) {
        return v3;
      }
      return v7;
  }
}

void sub_100405F60(unsigned int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v44 = a4;
  id v45 = a2;
  uint64_t v7 = sub_10096CC80();
  __chkstk_darwin(v7);
  id v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a1 >> 4) & 3)
  {
    case 1u:
      unsigned __int8 v13 = a1 & 0xCF;
      uint64_t v12 = (uint64_t)v44;
      id v11 = v45;
      unsigned int v14 = a3;
      goto LABEL_4;
    case 2u:
      uint64_t v15 = v44;
      if (a1)
      {
        v44[3] = &type metadata for NSecTimestamp;
        id v16 = [v45 longAtIndex:a3];
      }
      else
      {
        v44[3] = &type metadata for JobSchedulingPriority;
        id v16 = [v45 unsignedLongAtIndex:a3];
      }
      *uint64_t v15 = v16;
      break;
    case 3u:
      int v17 = a1;
      uint64_t v18 = a3;
      switch(v17)
      {
        case '1':
          uint64_t v41 = v8;
          unsigned int v43 = [v45 isNullAtIndex:a3];
          unsigned int v42 = a3;
          uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
          uint64_t v23 = swift_getAssociatedTypeWitness();
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          uint64_t v25 = swift_getAssociatedConformanceWitness();
          if (v43)
          {
            uint64_t v46 = AssociatedTypeWitness;
            uint64_t v47 = v23;
            uint64_t v48 = AssociatedConformanceWitness;
            uint64_t v49 = v25;
            type metadata accessor for ReconciliationID();
            uint64_t v26 = sub_10096B970();
            uint64_t v27 = sub_10096C1C0();
            uint64_t v28 = v44;
            v44[3] = v27;
            *uint64_t v28 = v26;
          }
          else
          {
            uint64_t v46 = AssociatedTypeWitness;
            uint64_t v47 = v23;
            uint64_t v48 = AssociatedConformanceWitness;
            uint64_t v49 = v25;
            uint64_t v34 = (ValueMetadata *)type metadata accessor for ReconciliationID();
            uint64_t v35 = (ValueMetadata *)sub_10096C1C0();
            uint64_t v36 = (uint64_t)v44;
            v44[3] = v35;
            uint64_t WitnessTable = swift_getWitnessTable();
            swift_getWitnessTable();
            uint64_t v37 = v42;
            sub_1003AA9DC(v35, v42);
            if (v4)
            {
              sub_10017D150(v36);
              uint64_t v46 = v4;
              swift_errorRetain();
              sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
              if (swift_dynamicCast())
              {
                swift_errorRelease();
                sub_10096D230();
                swift_allocObject();
                uint64_t v38 = sub_10096C0D0();
                sub_1003AA9DC(v34, v37);
                uint64_t v40 = v44;
                v44[3] = v35;
                *uint64_t v40 = v38;
                (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v7);
              }
              swift_errorRelease();
            }
          }
          return;
        case '2':
          id v29 = v45;
          if ([v45 isNullAtIndex:v18]) {
            goto LABEL_21;
          }
          id v30 = [v29 longAtIndex:v18];
          v31 = &type metadata for SyncPausedStatus;
          goto LABEL_26;
        case '3':
          id v30 = [v45 longAtIndex:a3];
          v31 = (ValueMetadata *)&type metadata for Int;
          goto LABEL_26;
        case '4':
          unsigned __int8 v19 = [v45 BOOLAtIndex:a3];
          long long v21 = (ValueMetadata *)&type metadata for Bool;
          long long v20 = v44;
          goto LABEL_19;
        case '5':
          id v32 = v45;
          if ([v45 isNullAtIndex:v18]) {
            goto LABEL_21;
          }
          id v30 = [v32 longAtIndex:v18];
          v31 = &type metadata for PolicyContentStatus;
LABEL_26:
          v39 = v44;
          v44[3] = v31;
          void *v39 = v30;
          break;
        default:
          if ([v45 isNullAtIndex:a3])
          {
LABEL_21:
            uint64_t v33 = v44;
            *(_OWORD *)uint64_t v44 = 0u;
            *((_OWORD *)v33 + 1) = 0u;
          }
          else
          {
            unsigned __int8 v19 = sub_1003FD2A4(a3);
            long long v20 = v44;
            if (!v4)
            {
              long long v21 = &type metadata for FileItemKind;
LABEL_19:
              v20[3] = v21;
              *(unsigned char *)long long v20 = v19;
            }
          }
          break;
      }
      break;
    default:
      uint64_t v12 = (uint64_t)v44;
      id v11 = v45;
      unsigned __int8 v13 = a1;
      unsigned int v14 = a3;
LABEL_4:
      sub_100402508(v13, v11, v14, v12);
      break;
  }
}

uint64_t sub_10040652C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v65 = a8;
  v86 = &_s9SQLFieldsON_1;
  uint64_t v87 = a4;
  unint64_t v67 = sub_100392394();
  unint64_t v88 = v67;
  uint64_t v89 = a7;
  uint64_t v69 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v66 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (uint64_t)v63 - v14;
  uint64_t v74 = a3;
  uint64_t v75 = a6;
  uint64_t v15 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v70 = *(void *)(v15 - 8);
  uint64_t v71 = v15;
  __chkstk_darwin(v15);
  uint64_t v76 = (uint64_t)v63 - v16;
  unint64_t v17 = sub_100407140();
  v86 = &type metadata for ItemReconciliationHalfSQLFields;
  uint64_t v87 = a4;
  unint64_t v88 = v17;
  uint64_t v89 = a7;
  uint64_t v18 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v81 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v72 = (uint64_t)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v63 - v21;
  uint64_t v23 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v77 = *(void *)(v23 - 8);
  uint64_t v78 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v63 - v27;
  uint64_t v79 = a4;
  uint64_t v80 = a7;
  uint64_t v73 = v17;
  sub_1006FD068((uint64_t)sub_100405B34, 0, a4, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, a7, v17, (uint64_t)v22);
  uint64_t v29 = a5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v31 = a2;
  uint64_t v32 = a2;
  uint64_t v33 = v18;
  uint64_t v34 = v82;
  sub_1004030C0(v32, v18, v29, WitnessTable, (uint64_t)v28);
  if (v34) {
    return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v22, v18);
  }
  uint64_t v64 = v26;
  v63[1] = v31;
  v63[2] = v29;
  v82 = v28;
  uint64_t v36 = v78;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v81 + 8);
  v37(v22, v33);
  LOBYTE(v85) = 50;
  sub_1006FCBE4((uint64_t)&v85, (uint64_t)&type metadata for SyncPausedStatus, v79, (uint64_t)&type metadata for SyncPausedStatus, v80);
  v63[0] = v37;
  uint64_t v81 = WitnessTable;
  uint64_t v38 = v82;
  *(void *)&v82[*(int *)(v36 + 76)] = v86;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v64, v38, v36);
  uint64_t v39 = v72;
  sub_1006FD068((uint64_t)sub_100406F20, 0, v79, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, v80, v73, v72);
  sub_1004030C0(v74, v33, v75, v81, v76);
  ((void (*)(uint64_t, uint64_t))v63[0])(v39, v33);
  LOBYTE(v86) = 48;
  uint64_t v40 = sub_10002B7CC((uint64_t *)&unk_100AD6840);
  uint64_t v41 = v79;
  uint64_t v42 = v80;
  sub_100391750(v79, v40);
  sub_1006FCBE4((uint64_t)&v86, v40, v41, v40, v42);
  LODWORD(v81) = v90[2];
  LOBYTE(v84) = 49;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v44 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v46 = swift_getAssociatedConformanceWitness();
  v86 = (ValueMetadata *)AssociatedTypeWitness;
  uint64_t v87 = v44;
  unint64_t v88 = AssociatedConformanceWitness;
  uint64_t v89 = v46;
  type metadata accessor for ReconciliationID();
  uint64_t v47 = sub_10096C1C0();
  sub_1006FCBE4((uint64_t)&v84, v47, v79, v47, v80);
  uint64_t v48 = v78;
  uint64_t v49 = v85;
  uint64_t v50 = v68;
  sub_1006FD068((uint64_t)sub_100391758, 0, v79, (uint64_t)&_s9SQLFieldsON_1, v80, v67, v68);
  uint64_t v51 = v69;
  uint64_t v52 = swift_getWitnessTable();
  v53 = sub_1007B28C0(v50, v51, v52);
  uint64_t v55 = v54;
  uint64_t v73 = (uint64_t)v53;
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v50, v51);
  LOBYTE(v84) = 51;
  uint64_t v56 = v79;
  uint64_t v57 = v80;
  sub_100391750(v79, (uint64_t)&type metadata for Int);
  sub_1006FCBE4((uint64_t)&v84, (uint64_t)&type metadata for Int, v56, (uint64_t)&type metadata for Int, v57);
  uint64_t v58 = (uint64_t)v86;
  LOBYTE(v84) = 52;
  uint64_t v59 = v79;
  uint64_t v60 = v80;
  sub_100391750(v79, (uint64_t)&type metadata for Bool);
  sub_1006FCBE4((uint64_t)&v84, (uint64_t)&type metadata for Bool, v59, (uint64_t)&type metadata for Bool, v60);
  LODWORD(v72) = v90[1];
  v90[0] = 53;
  uint64_t v61 = v79;
  uint64_t v62 = v80;
  sub_100391750(v79, (uint64_t)&type metadata for PolicyContentStatus);
  sub_1006FCBE4((uint64_t)v90, (uint64_t)&type metadata for PolicyContentStatus, v61, (uint64_t)&type metadata for PolicyContentStatus, v62);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v82, v48);
  return sub_10082C5D4((uint64_t)v64, v76, v81, v49, v73, v55, v58, v72, v65, v84);
}

unsigned char *sub_100406F20@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result | 0x10;
  return result;
}

uint64_t sub_100406F30(unsigned __int8 *a1, void *a2, int *a3)
{
  return sub_100405B5C(*a1, a2, a3);
}

void sub_100406F4C(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
}

uint64_t sub_100406F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  return sub_10040652C(a1, a4[2], a4[3], a2, a4[4], a4[5], a3, a5);
}

uint64_t sub_100406FA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100405894();
  *a1 = result;
  return result;
}

uint64_t sub_100406FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100407328(a1, a2, a3, (uint64_t (*)(void))sub_100407000, (uint64_t (*)(void))sub_100407054);
}

unint64_t sub_100407000()
{
  unint64_t result = qword_100AD4E48;
  if (!qword_100AD4E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4E48);
  }
  return result;
}

unint64_t sub_100407054()
{
  unint64_t result = qword_100AD4E50;
  if (!qword_100AD4E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4E50);
  }
  return result;
}

unint64_t sub_1004070AC()
{
  unint64_t result = qword_100AD4E58;
  if (!qword_100AD4E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4E58);
  }
  return result;
}

uint64_t sub_100407100(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100407140()
{
  unint64_t result = qword_100AD4E60;
  if (!qword_100AD4E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4E60);
  }
  return result;
}

uint64_t sub_100407194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100407328(a1, a2, a3, (uint64_t (*)(void))sub_1004071C0, (uint64_t (*)(void))sub_100407214);
}

unint64_t sub_1004071C0()
{
  unint64_t result = qword_100AD4E98;
  if (!qword_100AD4E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4E98);
  }
  return result;
}

unint64_t sub_100407214()
{
  unint64_t result = qword_100AD4EA0;
  if (!qword_100AD4EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4EA0);
  }
  return result;
}

unint64_t sub_10040726C()
{
  unint64_t result = qword_100AD4EA8;
  if (!qword_100AD4EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4EA8);
  }
  return result;
}

uint64_t sub_1004072C0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1004072FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100407328(a1, a2, a3, (uint64_t (*)(void))sub_100407364, (uint64_t (*)(void))sub_1004073B8);
}

uint64_t sub_100407328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100407364()
{
  unint64_t result = qword_100AD4EB0;
  if (!qword_100AD4EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4EB0);
  }
  return result;
}

unint64_t sub_1004073B8()
{
  unint64_t result = qword_100AD4EB8;
  if (!qword_100AD4EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4EB8);
  }
  return result;
}

unint64_t sub_10040740C()
{
  unint64_t result = qword_100AD4EC0;
  if (!qword_100AD4EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4EC0);
  }
  return result;
}

void *sub_100407460()
{
  uint64_t v0 = sub_1003FDA1C();
  int64_t v1 = (int64_t)v0[2];
  if (v1)
  {
    sub_100445FCC(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = _swiftEmptyArrayStorage[2];
    do
    {
      char v4 = *((unsigned char *)v0 + v2 + 32);
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v3 + v2 >= v5 >> 1) {
        sub_100445FCC(v5 > 1, v3 + v2 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v3 + v2 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3 + v2++) = v4;
    }
    while (v1 != v2);
  }
  swift_bridgeObjectRelease();
  sub_1003FC7A4((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(void))sub_1006A264C);
  uint64_t v7 = &off_100A6B868;
  int64_t v8 = 3;
  unint64_t v9 = 5;
  if (__OFADD__(3, 2))
  {
    __break(1u);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = sub_1006A264C(isUniquelyReferenced_nonNull_native, 5, 1, &off_100A6B868);
    unint64_t v6 = v7[3];
    int64_t v11 = v6 >> 1;
    unint64_t v9 = v7[2];
    int64_t v8 = v9 + 1;
    if (v6 >> 1 > v9) {
      goto LABEL_8;
    }
  }
  uint64_t v7 = sub_1006A264C((void *)(v6 > 1), v8, 1, v7);
  unint64_t v6 = v7[3];
  int64_t v11 = v6 >> 1;
LABEL_8:
  v7[2] = v8;
  *((unsigned char *)v7 + v9 + 32) = 31;
  int64_t v12 = v9 + 2;
  if (v11 < v12) {
    uint64_t v7 = sub_1006A264C((void *)(v6 > 1), v12, 1, v7);
  }
  v7[2] = v12;
  *((unsigned char *)v7 + v8 + 32) = 32;
  return v7;
}

void *sub_10040765C()
{
  uint64_t v0 = sub_1003FDA1C();
  int64_t v1 = (int64_t)v0[2];
  if (v1)
  {
    sub_100445FCC(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = _swiftEmptyArrayStorage[2];
    do
    {
      char v4 = *((unsigned char *)v0 + v2 + 32);
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v3 + v2 >= v5 >> 1) {
        sub_100445FCC(v5 > 1, v3 + v2 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v3 + v2 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3 + v2++) = v4;
    }
    while (v1 != v2);
  }
  swift_bridgeObjectRelease();
  sub_1003FC7A4((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(void))sub_1006A264C);
  unint64_t v6 = &off_100A6B908;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v6 = sub_1006A264C(0, 4, 1, &off_100A6B908);
  }
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  if (v8 >= v7 >> 1) {
    unint64_t v6 = sub_1006A264C((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  v6[2] = v8 + 1;
  *((unsigned char *)v6 + v8 + 32) = 33;
  sub_100011348(0, (unint64_t *)&unk_100ACD9F0);
  type metadata accessor for VFSItem(0);
  if (swift_dynamicCastMetatype())
  {
    unint64_t v9 = v6;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    unint64_t v11 = v8 + 1;
    unint64_t v9 = _swiftEmptyArrayStorage;
    do
    {
      int v12 = *((unsigned __int8 *)v6 + v10 + 32);
      if ((v12 - 28) < 7)
      {
LABEL_18:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100445FCC(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v15 = _swiftEmptyArrayStorage[2];
        unint64_t v14 = _swiftEmptyArrayStorage[3];
        if (v15 >= v14 >> 1) {
          sub_100445FCC(v14 > 1, v15 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v15 + 1;
        *((unsigned char *)&_swiftEmptyArrayStorage[4] + v15) = v12;
      }
      else
      {
        switch(*((unsigned char *)v6 + v10 + 32))
        {
          case 0x19:
            swift_bridgeObjectRelease();
            break;
          default:
            char v13 = sub_10096D2D0();
            swift_bridgeObjectRelease();
            if ((v13 & 1) == 0) {
              goto LABEL_18;
            }
            break;
        }
      }
      ++v10;
    }
    while (v11 != v10);
    swift_bridgeObjectRelease_n();
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v9 = sub_1006A264C(0, v9[2] + 1, 1, v9);
  }
  unint64_t v17 = v9[2];
  unint64_t v16 = v9[3];
  if (v17 >= v16 >> 1) {
    unint64_t v9 = sub_1006A264C((void *)(v16 > 1), v17 + 1, 1, v9);
  }
  v9[2] = v17 + 1;
  *((unsigned char *)v9 + v17 + 32) = 34;
  return v9;
}

_UNKNOWN **sub_100407CC0()
{
  if (qword_100ACC188 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_100B0B500;
  int64_t v1 = *(void *)(qword_100B0B500 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_10044617C(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = _swiftEmptyArrayStorage[2];
    do
    {
      char v4 = *(unsigned char *)(v0 + v2 + 32);
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v3 + v2 >= v5 >> 1) {
        sub_10044617C(v5 > 1, v3 + v2 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v3 + v2 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3 + v2++) = v4;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  sub_1003FC7A4((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(void))sub_1006A33E8);
  return &off_100A6B8E0;
}

uint64_t sub_100407E0C(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1 >> 6)
  {
    case 1:
      if ((a2 & 0xC0) != 0x40) {
        return 0;
      }
      unint64_t v2 = 0x6574617473;
      int v6 = a2 & 0x3F;
      int v7 = a1 & 0x3F;
      if ((a1 & 0x3F) != 0)
      {
        if (v7 == 1) {
          unint64_t v5 = 0xD000000000000010;
        }
        else {
          unint64_t v5 = 0xD000000000000012;
        }
        if (v7 == 1) {
          unint64_t v3 = 0x80000001009958F0;
        }
        else {
          unint64_t v3 = 0x8000000100995910;
        }
        if ((a2 & 0x3F) != 0) {
          goto LABEL_14;
        }
LABEL_27:
        unint64_t v8 = 0xE500000000000000;
        goto LABEL_62;
      }
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6574617473;
      if ((a2 & 0x3F) == 0) {
        goto LABEL_27;
      }
LABEL_14:
      if (v6 == 1) {
        unint64_t v2 = 0xD000000000000010;
      }
      else {
        unint64_t v2 = 0xD000000000000012;
      }
      if (v6 == 1) {
        unint64_t v8 = 0x80000001009958F0;
      }
      else {
        unint64_t v8 = 0x8000000100995910;
      }
LABEL_62:
      if (v5 == v2 && v3 == v8)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      else
      {
        char v10 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10 & 1;
      }
    case 2:
      switch(a1)
      {
        case 0x81u:
          return a2 == 129;
        case 0x82u:
          return a2 == 130;
        case 0x83u:
          return a2 == 131;
        case 0x84u:
          return a2 == 132;
        case 0x85u:
          return a2 == 133;
        case 0x86u:
          return a2 == 134;
        case 0x87u:
          return a2 == 135;
        default:
          return a2 == 128;
      }
    case 3:
      switch(a1)
      {
        case 0xC1u:
          if (a2 != 193) {
            return 0;
          }
          break;
        case 0xC2u:
          if (a2 != 194) {
            return 0;
          }
          break;
        case 0xC3u:
          if (a2 != 195) {
            return 0;
          }
          break;
        case 0xC4u:
          if (a2 != 196) {
            return 0;
          }
          break;
        case 0xC5u:
          if (a2 != 197) {
            return 0;
          }
          break;
        case 0xC6u:
          if (a2 != 198) {
            return 0;
          }
          break;
        default:
          if (a2 != 192) {
            return 0;
          }
          break;
      }
      return 1;
    default:
      if (a2 > 0x3Fu) {
        return 0;
      }
      unint64_t v2 = 0x64695F656C6966;
      unint64_t v3 = 0xE700000000000000;
      uint64_t v4 = a1;
      unint64_t v5 = 0x64695F656C6966;
      switch(v4)
      {
        case 1:
          unint64_t v5 = 0x6E6F635F74736574;
          unint64_t v3 = 0xEC000000746E6574;
          break;
        case 2:
          unint64_t v3 = 0xE800000000000000;
          unint64_t v5 = 0x6E6F697461636F6CLL;
          break;
        case 3:
          unint64_t v3 = 0xE600000000000000;
          unint64_t v5 = 0x6874676E656CLL;
          break;
        case 4:
          unint64_t v3 = 0xE500000000000000;
          unint64_t v5 = 0x7367616C66;
          break;
        default:
          break;
      }
      unint64_t v8 = 0xE700000000000000;
      switch(a2)
      {
        case 1u:
          unint64_t v2 = 0x6E6F635F74736574;
          unint64_t v8 = 0xEC000000746E6574;
          break;
        case 2u:
          unint64_t v8 = 0xE800000000000000;
          unint64_t v2 = 0x6E6F697461636F6CLL;
          break;
        case 3u:
          unint64_t v8 = 0xE600000000000000;
          unint64_t v2 = 0x6874676E656CLL;
          break;
        case 4u:
          unint64_t v8 = 0xE500000000000000;
          unint64_t v2 = 0x7367616C66;
          break;
        default:
          goto LABEL_62;
      }
      goto LABEL_62;
  }
}

uint64_t sub_1004081F4(unsigned int a1, unsigned __int8 a2)
{
  switch((a1 >> 4) & 3)
  {
    case 1u:
      if ((a2 & 0x30) != 0x10) {
        goto LABEL_38;
      }
      LOBYTE(a1) = a1 & 0xCF;
      a2 &= 0xCFu;
      goto LABEL_6;
    case 2u:
      if ((a2 & 0x30) != 0x20) {
        goto LABEL_38;
      }
      BOOL v3 = (a1 & 1) == 0;
      if (a1) {
        uint64_t v4 = 0x6D617473656D6974;
      }
      else {
        uint64_t v4 = 0x797469726F697270;
      }
      if (v3) {
        unint64_t v5 = 0xE800000000000000;
      }
      else {
        unint64_t v5 = 0xE900000000000070;
      }
      if (a2) {
        uint64_t v6 = 0x6D617473656D6974;
      }
      else {
        uint64_t v6 = 0x797469726F697270;
      }
      if (a2) {
        unint64_t v7 = 0xE900000000000070;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v4 == v6 && v5 == v7)
      {
        swift_bridgeObjectRelease_n();
        uint64_t result = 1;
      }
      else
      {
        char v8 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = v8 & 1;
      }
      break;
    case 3u:
      switch((char)a1)
      {
        case '1':
          if (a2 != 49) {
            goto LABEL_38;
          }
          break;
        case '2':
          if (a2 != 50) {
            goto LABEL_38;
          }
          break;
        case '3':
          if (a2 != 51) {
            goto LABEL_38;
          }
          break;
        case '4':
          if (a2 != 52) {
            goto LABEL_38;
          }
          break;
        case '5':
          if (a2 != 53) {
            goto LABEL_38;
          }
          break;
        default:
          if (a2 != 48) {
            goto LABEL_38;
          }
          break;
      }
      return 1;
    default:
      if ((a2 & 0x30) != 0)
      {
LABEL_38:
        uint64_t result = 0;
      }
      else
      {
LABEL_6:
        uint64_t result = sub_100407E0C(a1, a2);
      }
      break;
  }
  return result;
}

uint64_t sub_1004083D0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100A6B0C8;
  v6._object = a2;
  unint64_t v4 = sub_10096CF30(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_10040841C(uint64_t a1)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v3 = a1;
  }
  *(void *)(v3 + 16) = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for ItemReconciliationHalfSQLFields(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1D) {
    goto LABEL_17;
  }
  if (a2 + 227 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 227) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 227;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 227;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 227;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1C) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ItemReconciliationHalfSQLFields(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 227 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 227) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1C)
  {
    unsigned int v6 = ((a2 - 29) >> 8) + 1;
    void *result = a2 - 29;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004085CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1004085F4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  unsigned int v4 = (v1 & 7 | (8 * (v1 >> 6))) - 14;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return v4;
  }
}

unsigned char *sub_100408618(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_100408628(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    void *result = *result & 7 | ((_BYTE)a2 << 6);
  }
  else {
    void *result = ((a2 - 2) & 7 | (((a2 - 2) >> 3) << 6)) ^ 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemReconciliationHalfSQLFields()
{
  return &type metadata for ItemReconciliationHalfSQLFields;
}

uint64_t getEnumTagSinglePayload for ItemReconciliationSQLFields(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 5) {
    goto LABEL_17;
  }
  if (a2 + 251 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 251) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 251;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 251;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 251;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 4 | (*a1 >> 4) & 3) ^ 7;
  if (v6 >= 4) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ItemReconciliationSQLFields(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 251 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 251) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 4)
  {
    unsigned int v6 = ((a2 - 5) >> 8) + 1;
    void *result = a2 - 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004087E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = (16 * ((3 * a2) & 3)) | 8;
        break;
    }
  }
  return result;
}

uint64_t sub_100408808(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  unsigned int v2 = (v1 >> 4) & 3;
  unsigned int v3 = (v1 & 7 | (8 * (v1 >> 6))) + 3;
  if (v2 == 3) {
    return v3;
  }
  else {
    return v2;
  }
}

unsigned char *sub_10040882C(unsigned char *result)
{
  *result &= 0xCFu;
  return result;
}

unsigned char *sub_10040883C(unsigned char *result, unsigned int a2)
{
  if (a2 < 3) {
    void *result = *result & 0xC7 | (16 * (a2 & 3));
  }
  else {
    void *result = (8 * (a2 - 3)) & 0xC0 | (a2 - 3) & 7 | 0x30;
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemReconciliationSQLFields()
{
  return &type metadata for ItemReconciliationSQLFields;
}

unsigned char *sub_100408884@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100405B34(a1, a2);
}

uint64_t sub_10040889C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10040894C(unint64_t a1, uint64_t a2, void *a3, NSObject *a4, void *a5, uint64_t a6)
{
  uint64_t v789 = a6;
  v794 = a4;
  id v767 = a3;
  uint64_t v755 = a2;
  unint64_t v786 = a1;
  LODWORD(v785) = a1;
  uint64_t v7 = *a5;
  uint64_t v8 = *(void *)(*a5 + 88);
  unint64_t v9 = *(void (**)(void, void, void))(*a5 + 104);
  uint64_t v716 = type metadata accessor for SnapshotItem();
  uint64_t v708 = sub_10096C890();
  uint64_t v707 = *(void *)(v708 - 8);
  uint64_t v10 = __chkstk_darwin(v708);
  v732 = (char *)&v696 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v699 = (char *)&v696 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  Class isa = AssociatedTypeWitness[-1].isa;
  uint64_t v14 = __chkstk_darwin(AssociatedTypeWitness);
  v733 = (char *)&v696 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  v700 = (char *)&v696 - v17;
  __chkstk_darwin(v16);
  v772 = (char **)((char *)&v696 - v18);
  uint64_t v19 = *(unsigned char **)(v7 + 96);
  v780 = a5;
  uint64_t v20 = *(int **)(v7 + 80);
  uint64_t v21 = (int *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  v800 = v21;
  uint64_t v801 = (uint64_t)AssociatedTypeWitness;
  uint64_t v747 = AssociatedConformanceWitness;
  v802 = (unsigned char *)AssociatedConformanceWitness;
  uint64_t v803 = v23;
  uint64_t v778 = type metadata accessor for ReconciliationID();
  uint64_t v698 = sub_10096C890();
  uint64_t v697 = *(void *)(v698 - 8);
  __chkstk_darwin(v698);
  v703 = (char *)&v696 - v24;
  uint64_t v25 = type metadata accessor for SnapshotItem();
  uint64_t v728 = sub_10096C890();
  uint64_t v711 = *(void *)(v728 - 8);
  uint64_t v26 = __chkstk_darwin(v728);
  v715 = (char *)&v696 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  v701 = (char *)&v696 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v730 = (char *)&v696 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v710 = (char *)&v696 - v33;
  uint64_t v740 = v25;
  uint64_t v737 = *(void *)(v25 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  v704 = (char *)&v696 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  v696 = (char *)&v696 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  v717 = (char *)&v696 - v39;
  __chkstk_darwin(v38);
  v702 = (char *)&v696 - v40;
  v800 = v20;
  uint64_t v801 = v8;
  v802 = v19;
  uint64_t v803 = (uint64_t)v9;
  uint64_t v727 = type metadata accessor for TestingOperation();
  uint64_t v726 = *(void *)(v727 - 8);
  __chkstk_darwin(v727);
  v725 = (char *)&v696 - v41;
  uint64_t v757 = sub_10096B480();
  uint64_t v758 = *(void *)(v757 - 8);
  uint64_t v42 = __chkstk_darwin(v757);
  v754 = (char *)&v696 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  v720 = (char *)&v696 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v736 = (char *)&v696 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v753 = (char *)&v696 - v49;
  __chkstk_darwin(v48);
  v718 = (char *)&v696 - v50;
  v800 = v20;
  uint64_t v801 = v8;
  v802 = v19;
  uint64_t v803 = (uint64_t)v9;
  uint64_t v777 = type metadata accessor for ReconciliationMutation();
  uint64_t v782 = *(void *)(v777 - 8);
  uint64_t v51 = __chkstk_darwin(v777);
  v713 = (char *)&v696 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v776 = (char *)&v696 - v53;
  os_log_t v773 = AssociatedTypeWitness;
  uint64_t v766 = sub_10096C890();
  uint64_t v765 = *(void *)(v766 - 8);
  uint64_t v54 = __chkstk_darwin(v766);
  v741 = (char *)&v696 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __chkstk_darwin(v54);
  v706 = (char *)&v696 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  v764 = (char *)&v696 - v59;
  __chkstk_darwin(v58);
  v709 = (char *)&v696 - v60;
  v800 = v20;
  uint64_t v801 = v8;
  v792 = v9;
  TupleTypeMetadata2 = v8;
  v802 = v19;
  uint64_t v803 = (uint64_t)v9;
  uint64_t v61 = type metadata accessor for ItemReconciliation();
  uint64_t v781 = *(void *)(v61 - 8);
  uint64_t v62 = __chkstk_darwin(v61);
  v763 = (void (*)(uint64_t, uint64_t))((char *)&v696 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = __chkstk_darwin(v62);
  v705 = (char *)&v696 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  v762 = (char *)&v696 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  v746 = (char *)&v696 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  v722 = (char *)&v696 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  v719 = (char *)&v696 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  v735 = (char *)&v696 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  v761 = (char *)&v696 - v77;
  uint64_t v78 = __chkstk_darwin(v76);
  v759 = (char *)&v696 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  v744 = (char *)&v696 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  uint64_t v714 = (uint64_t)&v696 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  v748 = (char *)&v696 - v85;
  uint64_t v86 = __chkstk_darwin(v84);
  v712 = (char *)&v696 - v87;
  __chkstk_darwin(v86);
  v739 = (char *)&v696 - v88;
  uint64_t v790 = v89;
  uint64_t v742 = sub_10096C890();
  uint64_t v743 = *(void *)(v742 - 8);
  uint64_t v90 = __chkstk_darwin(v742);
  uint64_t v729 = (uint64_t)&v696 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __chkstk_darwin(v90);
  v721 = (char *)&v696 - v93;
  uint64_t v94 = __chkstk_darwin(v92);
  v731 = (char *)&v696 - v95;
  uint64_t v96 = __chkstk_darwin(v94);
  uint64_t v724 = (uint64_t)&v696 - v97;
  __chkstk_darwin(v96);
  v749 = (char *)&v696 - v98;
  uint64_t v99 = sub_10096C890();
  uint64_t v787 = *(void *)(v99 - 8);
  uint64_t v788 = v99;
  uint64_t v100 = __chkstk_darwin(v99);
  uint64_t v102 = (char *)&v696 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __chkstk_darwin(v100);
  uint64_t v105 = (char *)&v696 - v104;
  uint64_t v106 = __chkstk_darwin(v103);
  v750 = (char *)&v696 - v107;
  uint64_t v108 = __chkstk_darwin(v106);
  uint64_t v110 = (char *)&v696 - v109;
  uint64_t v111 = __chkstk_darwin(v108);
  unint64_t v113 = (char *)&v696 - v112;
  uint64_t v114 = __chkstk_darwin(v111);
  uint64_t v116 = (char *)&v696 - v115;
  uint64_t v117 = __chkstk_darwin(v114);
  v738 = (char *)&v696 - v118;
  uint64_t v119 = __chkstk_darwin(v117);
  v751 = (char *)&v696 - v120;
  uint64_t v121 = __chkstk_darwin(v119);
  uint64_t v123 = (char *)&v696 - v122;
  v807 = (char *)v21;
  v795 = (char *)*((void *)v21 - 1);
  uint64_t v124 = __chkstk_darwin(v121);
  v760 = (char *)&v696 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __chkstk_darwin(v124);
  v775 = (char *)&v696 - v127;
  uint64_t v128 = __chkstk_darwin(v126);
  v734 = (char *)&v696 - v129;
  uint64_t v130 = __chkstk_darwin(v128);
  v769 = ((char *)&v696 - v131);
  uint64_t v132 = __chkstk_darwin(v130);
  v756 = (char *)&v696 - v133;
  uint64_t v134 = __chkstk_darwin(v132);
  v768 = ((char *)&v696 - v135);
  uint64_t v136 = __chkstk_darwin(v134);
  uint64_t v138 = (char *)&v696 - v137;
  uint64_t v139 = __chkstk_darwin(v136);
  v779 = (char *)&v696 - v140;
  uint64_t v141 = __chkstk_darwin(v139);
  v745 = (char *)&v696 - v142;
  uint64_t v143 = __chkstk_darwin(v141);
  v752 = (char *)&v696 - v144;
  uint64_t v145 = __chkstk_darwin(v143);
  v723 = (char *)&v696 - v146;
  __chkstk_darwin(v145);
  v770 = (uint8_t *)&v696 - v147;
  v784 = v20;
  v783 = v19;
  v148 = v794;
  v771 = (int *)type metadata accessor for ItemReconciliationHalf();
  if (*((unsigned char *)&v148->isa + v771[14]) == 6) {
    unint64_t v149 = 4096;
  }
  else {
    unint64_t v149 = 69632;
  }
  if (v785 > 0x17)
  {
LABEL_252:
    int v695 = 0;
    uint64_t v694 = 394;
    sub_10096CE20();
    __break(1u);
    JUMPOUT(0x10040ED84);
  }
  switch((char)v786)
  {
    case 1:
      unint64_t v786 = v149;
      (*(void (**)(char *, NSObject *, uint64_t))(v787 + 16))(v113, v148, v788);
      v169 = (void (**)(NSObject *, char *, char *))v795;
      uint64_t v170 = v807;
      if ((*((unsigned int (**)(char *, uint64_t, char *))v795 + 6))(v113, 1, v807) == 1) {
        goto LABEL_243;
      }
      unint64_t v171 = v768;
      v169[4](v768, v113, v170);
      uint64_t v172 = v790;
      uint64_t v173 = (char *)v148 + *(int *)(v790 + 52);
      uint64_t v175 = v792;
      uint64_t v174 = TupleTypeMetadata2;
      uint64_t v176 = (void *)type metadata accessor for ItemReconciliationHalf();
      uint64_t v177 = *(void *)&v173[*((int *)v176 + 19)];
      v178 = v148;
      uint64_t v179 = v781;
      v180 = *(int **)(v781 + 16);
      v181 = v761;
      uint64_t v787 = v781 + 16;
      v785 = v180;
      ((void (*)(char *, NSObject *, uint64_t))v180)(v761, v178, v172);
      if ((v177 & 4) != 0)
      {
        uint64_t v221 = *(void *)&v181[*(int *)(v172 + 52) + *((int *)v176 + 19)] >> 3;
        uint64_t v788 = *(void *)(v179 + 8);
        ((void (*)(char *, uint64_t))v788)(v181, v172);
        unint64_t v786 = v786 & 0xFFFFFF7FFFFFFFFFLL | ((unint64_t)(v221 & 1) << 39);
      }
      else
      {
        uint64_t v788 = *(void *)(v179 + 8);
        ((void (*)(char *, uint64_t))v788)(v181, v172);
      }
      v222 = (char *)v780[4];
      uint64_t v223 = v791;
      v224 = (char *)(*(uint64_t (**))(*(void *)v222 + 296))(v171);
      if (v223) {
        goto LABEL_29;
      }
      v779 = v222;
      uint64_t v791 = 0;
      if (v225)
      {
        id v272 = (id)fpfs_current_or_default_log();
        v273 = v754;
        sub_10096B490();
        v274 = v746;
        uint64_t v275 = v790;
        v276 = (void (*)(char *, char *, uint64_t))v785;
        ((void (*)(char *, NSObject *, uint64_t))v785)(v746, v794, v790);
        v792 = (void (*)(void, void, void))*((void *)v795 + 2);
        v792(v756, v171, v807);
        v277 = sub_10096B470();
        os_log_type_t v278 = sub_10096C5B0();
        v794 = v277;
        LODWORD(TupleTypeMetadata2) = v278;
        if (os_log_type_enabled(v277, v278))
        {
          uint64_t v279 = swift_slowAlloc();
          v280 = v276;
          v281 = (void (*)(char *, uint64_t))v788;
          uint64_t v282 = v279;
          uint64_t v789 = swift_slowAlloc();
          v800 = (int *)v789;
          *(_DWORD *)uint64_t v282 = 136446466;
          unint64_t v786 = v282 + 4;
          v283 = v748;
          v280(v748, v274, v275);
          v281(v274, v275);
          uint64_t v284 = sub_10082F470(v275);
          unint64_t v286 = v285;
          v281(v283, v275);
          uint64_t v796 = sub_100719D44(v284, v286, (uint64_t *)&v800);
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v282 + 12) = 2082;
          uint64_t v790 = v282 + 14;
          v287 = v745;
          v288 = v756;
          v289 = v807;
          v792(v745, v756, v807);
          v290 = (void (*)(char *, char *))*((void *)v795 + 1);
          v290(v288, v289);
          uint64_t v291 = sub_10096D220();
          unint64_t v293 = v292;
          v290(v287, v289);
          uint64_t v796 = sub_100719D44(v291, v293, (uint64_t *)&v800);
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          v294 = v794;
          _os_log_impl((void *)&_mh_execute_header, v794, (os_log_type_t)TupleTypeMetadata2, "🚔  cannot propagate update for %{public}s: snapshot version not found for %{public}s", (uint8_t *)v282, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v758 + 8))(v754, v757);
          return ((uint64_t (*)(NSObject *, char *))v290)(v768, v289);
        }
        else
        {
          v335 = (void (*)(char *, char *))*((void *)v795 + 1);
          v336 = v807;
          v335(v756, v807);
          ((void (*)(char *, uint64_t))v788)(v274, v275);

          (*(void (**)(char *, uint64_t))(v758 + 8))(v273, v757);
          return ((uint64_t (*)(NSObject *, char *))v335)(v171, v336);
        }
      }
      uint64_t v206 = v224;
      if ((v755 & 0x10) != 0)
      {
        v775 = v224;
        if (v173[*((int *)v176 + 11)] == 1)
        {
          v318 = v794;
          uint64_t v319 = 2;
          if ((*((unsigned char *)&v794->isa + v771[10]) & 8) != 0) {
            uint64_t v319 = 134217730;
          }
          uint64_t v320 = v319 | v786;
        }
        else
        {
          uint64_t v358 = (*(uint64_t (**))(*(void *)v780[3] + 304))(v171);
          uint64_t v791 = 0;
          uint64_t v320 = v786 | 0x8000001;
          if ((v359 & 1) == 0)
          {
            if ((v358 & ~v320) != 0) {
              uint64_t v360 = v358;
            }
            else {
              uint64_t v360 = 0;
            }
            v320 |= v360;
          }
          v318 = v794;
        }
        v361 = v735;
        if (v173[*((int *)v176 + 14)] == 6) {
          uint64_t v362 = v320;
        }
        else {
          uint64_t v362 = v320 | 0x20000;
        }
        v800 = v784;
        uint64_t v801 = v174;
        v802 = v783;
        uint64_t v803 = (uint64_t)v175;
        type metadata accessor for Propagation.UpdateItem();
        uint64_t v363 = v790;
        v364 = (uint64_t *)((char *)v318 + *(int *)(v790 + 64));
        uint64_t v365 = *v364;
        uint64_t v366 = v364[1];
        id v367 = v767;
        id v368 = v767;
        v369 = sub_10042BB6C((uint64_t)v768, (uint64_t)v775, 16, v367, v365, v366, v362);
        BOOL v370 = sub_1005152D8();
        ((void (*)(char *, NSObject *, uint64_t))v785)(v361, v318, v363);
        if (v370)
        {
          unint64_t v371 = *(void *)&v361[v771[17] + 16];
          ((void (*)(char *, uint64_t))v788)(v361, v363);
          uint64_t v372 = v789;
          uint64_t v373 = (uint64_t)v776;
          if (v371 >> 60 != 11) {
            goto LABEL_109;
          }
        }
        else
        {
          ((void (*)(char *, uint64_t))v788)(v361, v363);
          uint64_t v372 = v789;
          uint64_t v373 = (uint64_t)v776;
        }
        sub_10058364C(1);
LABEL_109:
        v800 = v784;
        uint64_t v801 = TupleTypeMetadata2;
        v802 = v783;
        uint64_t v803 = (uint64_t)v175;
        type metadata accessor for JobResult();
        sub_1004D7588(v372, (uint64_t)v369);
        uint64_t v788 = type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        v794 = v369;
        uint64_t v380 = v373 + *(int *)(TupleTypeMetadata2 + 48);
        v792 = (void (*)(void, void, void))*((void *)v795 + 2);
        v381 = v807;
        v792(v373, v768, v807);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v380 = 0;
        *(void *)(v380 + 8) = 0;
        *(unsigned char *)(v380 + 16) = 2;
        swift_storeEnumTagMultiPayload();
        uint64_t v382 = v777;
        swift_storeEnumTagMultiPayload();
        sub_100591758(v372, v373);
        uint64_t v790 = *(void *)(v782 + 8);
        ((void (*)(uint64_t, uint64_t))v790)(v373, v382);
        v383 = (void *)(v373 + *(int *)(TupleTypeMetadata2 + 48));
        uint64_t v384 = (uint64_t)v768;
        v792(v373, v768, v381);
        swift_storeEnumTagMultiPayload();
        void *v383 = 65560;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_100591758(v789, v373);
        swift_release();
        ((void (*)(uint64_t, uint64_t))v790)(v373, v382);
        v333 = (uint64_t (*)(uint8_t *, char *))*((void *)v795 + 1);
        v334 = (uint8_t *)v384;
LABEL_230:
        v457 = v381;
        return v333(v334, v457);
      }
      if ((v755 & 0x10000000000) != 0)
      {
        v232 = v730;
        (*(void (**)(NSObject *, uint64_t))(*(void *)v779 + 240))(v171, 1);
        v775 = v206;
        uint64_t v791 = 0;
        uint64_t v356 = v737;
        uint64_t v357 = v740;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v737 + 48))(v232, 1, v740) == 1)
        {
          (*(void (**)(char *, uint64_t))(v711 + 8))(v232, v728);
        }
        else
        {
          v537 = v232;
          v232 = v717;
          (*(void (**)(char *, char *, uint64_t))(v356 + 32))(v717, v537, v357);
          uint64_t WitnessTable = swift_getWitnessTable();
          char v539 = FileItem.kind.getter(v357, WitnessTable);
          uint64_t v540 = *((char *)&v794->isa + *(int *)(v790 + 56));
          if (v540 == 4 || qword_1009828E8[v539] != qword_1009828E8[v540])
          {
            v800 = v784;
            uint64_t v801 = v174;
            v802 = v783;
            uint64_t v803 = (uint64_t)v175;
            type metadata accessor for JobResult();
            uint64_t v544 = *(int *)(swift_getTupleTypeMetadata2() + 48);
            v545 = *((void *)v795 + 2);
            uint64_t v790 = (uint64_t)(v795 + 16);
            v794 = v545;
            v546 = v171;
            uint64_t v547 = (uint64_t)v776;
            v548 = (int *)v807;
            ((void (*)(char *, NSObject *, char *))v545)(v776, v546, v807);
            swift_storeEnumTagMultiPayload();
            *(unsigned char *)(v547 + v544) = FileItem.kind.getter(v740, WitnessTable);
            uint64_t v549 = v777;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v789, v547);
            uint64_t v550 = (*(uint64_t (**)(uint64_t, uint64_t))(v782 + 8))(v547, v549);
            __chkstk_darwin(v550);
            qmemcpy(&v696 - 10, " item destinationItemID baseVersion fields version domainVersion ", 65);
            BYTE1(v694) = 0;
            v800 = v548;
            uint64_t v801 = v728;
            v802 = (unsigned char *)v766;
            uint64_t v551 = v174;
            v552 = (int *)swift_getAssociatedTypeWitness();
            uint64_t v553 = swift_getAssociatedTypeWitness();
            uint64_t v554 = swift_getAssociatedConformanceWitness();
            uint64_t v789 = v554;
            uint64_t v555 = swift_getAssociatedConformanceWitness();
            uint64_t v796 = (uint64_t)v552;
            uint64_t v797 = v553;
            v798 = v554;
            uint64_t v799 = v555;
            type metadata accessor for FileItemVersion();
            uint64_t v803 = sub_10096C890();
            v804 = &type metadata for Fields;
            v805 = &type metadata for UInt;
            uint64_t v806 = sub_100033BE8((uint64_t *)&unk_100AD6860);
            TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
            v557 = v725;
            v558 = &v725[TupleTypeMetadata[12]];
            v559 = &v725[TupleTypeMetadata[16]];
            v560 = &v725[TupleTypeMetadata[20]];
            uint64_t v561 = TupleTypeMetadata[24];
            uint64_t v787 = TupleTypeMetadata[28];
            uint64_t v788 = v561;
            unint64_t v786 = TupleTypeMetadata[32];
            ((void (*)(char *, NSObject *, int *))v794)(v725, v768, v548);
            uint64_t v562 = v737;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v737 + 56))(v558, 1, 1, v740);
            (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v559, 1, 1, v773);
            v800 = v552;
            uint64_t v801 = v553;
            v802 = (unsigned char *)v789;
            uint64_t v803 = v555;
            uint64_t v563 = type metadata accessor for FileItemVersion();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v563 - 8) + 56))(v560, 1, 1, v563);
            *(void *)&v557[v788] = v755;
            *(void *)&v557[v787] = v775;
            id v564 = v767;
            *(void *)&v557[v786] = v767;
            v800 = v784;
            uint64_t v801 = v551;
            v802 = v783;
            uint64_t v803 = (uint64_t)v792;
            type metadata accessor for DirectionalTestingOperation();
            swift_storeEnumTagMultiPayload();
            uint64_t v565 = v727;
            swift_storeEnumTagMultiPayload();
            v566 = *(void (**)(char *, void))(*v780 + 488);
            id v567 = v564;
            v566(v557, 0);
            (*(void (**)(char *, uint64_t))(v726 + 8))(v557, v565);
            (*(void (**)(char *, uint64_t))(v562 + 8))(v717, v740);
LABEL_190:
            v333 = (uint64_t (*)(uint8_t *, char *))*((void *)v795 + 1);
            v334 = (uint8_t *)v768;
LABEL_132:
            v457 = v807;
            return v333(v334, v457);
          }
          (*(void (**)(char *, uint64_t))(v737 + 8))(v717, v740);
        }
        v396 = (int *)v780[5];
        BOOL v541 = sub_1005152D8();
        uint64_t v206 = v775;
        if (!v541)
        {
          uint64_t v262 = v755;
          goto LABEL_49;
        }
        int v542 = *((unsigned __int8 *)&v794->isa + *(int *)(v790 + 56));
        if (v542 != 2)
        {
          uint64_t v262 = v755;
          if (v542 != 4) {
            goto LABEL_49;
          }
          __break(1u);
          goto LABEL_173;
        }
        uint64_t v626 = v765;
        v627 = v706;
        uint64_t v628 = v766;
        (*(void (**)(char *, char *, uint64_t))(v765 + 16))(v706, v173, v766);
        if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v627, 1, v773) == 1)
        {
          (*(void (**)(char *, uint64_t))(v626 + 8))(v627, v628);
          uint64_t v262 = v755;
LABEL_240:
          uint64_t v206 = v775;
          goto LABEL_49;
        }
        Class v629 = isa;
        v630 = v700;
        v631 = v627;
        os_log_t v632 = v773;
        (*((void (**)(char *, char *, os_log_t))isa + 4))(v700, v631, v773);
        v633 = v699;
        uint64_t v634 = v791;
        (*(void (**)(char *, uint64_t))(*(void *)v396 + 240))(v630, 1);
        if (v634)
        {
          (*((void (**)(char *, os_log_t))v629 + 1))(v630, v632);
LABEL_29:
          v226 = (uint64_t (*)(NSObject *, char *))*((void *)v795 + 1);
          v227 = v171;
          return v226(v227, v807);
        }
        uint64_t v672 = v788;
        uint64_t v791 = 0;
        uint64_t v673 = v716;
        uint64_t v674 = *(void *)(v716 - 8);
        int v675 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v674 + 48))(v633, 1, v716);
        uint64_t v788 = v672;
        if (v675 == 1)
        {
          (*(void (**)(char *, uint64_t))(v707 + 8))(v633, v708);
        }
        else
        {
          uint64_t v692 = swift_getWitnessTable();
          char v693 = FileItem.isDataless.getter(v673, v692);
          (*(void (**)(char *, uint64_t))(v674 + 8))(v633, v673);
          if (v693)
          {
            uint64_t v262 = v755 | 8;
            (*((void (**)(char *, os_log_t))isa + 1))(v700, v773);
LABEL_239:
            uint64_t v175 = v792;
            uint64_t v174 = TupleTypeMetadata2;
            goto LABEL_240;
          }
        }
        (*((void (**)(char *, os_log_t))isa + 1))(v700, v773);
        uint64_t v262 = v755;
        goto LABEL_239;
      }
      uint64_t v262 = v755;
LABEL_49:
      uint64_t v263 = v780[5];
      BOOL v264 = sub_1005152D8();
      v265 = v736;
      v775 = v206;
      uint64_t v765 = v263;
      if (v264)
      {
        if ((v262 & 0x4000) != 0 && *((unsigned char *)&v794->isa + v771[13])) {
          v262 &= ~0x4000uLL;
        }
        v266 = v783;
LABEL_150:
        v800 = v784;
        uint64_t v801 = v174;
        v802 = v266;
        uint64_t v803 = (uint64_t)v175;
        v499 = (uint8_t *)type metadata accessor for JobResult();
        v500 = (uint8_t *)type metadata accessor for ReconciliationSideMutation();
        uint64_t v501 = swift_getTupleTypeMetadata2();
        uint64_t v502 = (uint64_t)v776;
        v503 = &v776[*(int *)(v501 + 48)];
        v504 = v795 + 16;
        uint64_t v505 = (uint64_t)v768;
        v772 = (char **)*((void *)v795 + 2);
        ((void (*)(char *, NSObject *, char *))v772)(v776, v768, v807);
        swift_storeEnumTagMultiPayload();
        *(void *)v503 = v755;
        v769 = v500;
        swift_storeEnumTagMultiPayload();
        uint64_t v506 = v777;
        swift_storeEnumTagMultiPayload();
        v770 = v499;
        sub_100591758(v789, v502);
        uint64_t v507 = v782 + 8;
        v508 = *(void (**)(uint64_t, uint64_t))(v782 + 8);
        v508(v502, v506);
        uint64_t v782 = v507;
        if (v262)
        {
          v764 = v504;
          if ((v262 & 8) == 0) {
            goto LABEL_157;
          }
          int v509 = *((unsigned __int8 *)&v794->isa + *(int *)(v790 + 56));
          if (v509 == 1) {
            goto LABEL_157;
          }
          if (v509 != 4)
          {
            uint64_t v510 = v786;
            if (*(unint64_t *)((char *)&v794[2].isa + v771[17]) >> 60 != 11) {
              uint64_t v510 = v786 | 0x8000000;
            }
            unint64_t v786 = v510;
LABEL_157:
            v800 = v784;
            uint64_t v801 = TupleTypeMetadata2;
            v802 = v783;
            uint64_t v803 = (uint64_t)v792;
            type metadata accessor for Propagation.UpdateItem();
            uint64_t v511 = v790;
            v512 = v794;
            v513 = (uint64_t *)((char *)v794 + *(int *)(v790 + 64));
            uint64_t v514 = *v513;
            uint64_t v515 = v513[1];
            id v516 = v767;
            id v517 = v767;
            uint64_t v518 = sub_10042BB6C((uint64_t)v768, (uint64_t)v775, v262, v516, v514, v515, v786);
            BOOL v519 = sub_1005152D8();
            v520 = v722;
            ((void (*)(char *, NSObject *, uint64_t))v785)(v722, v512, v511);
            v763 = v508;
            if (v519)
            {
              unint64_t v521 = *(void *)&v520[v771[17] + 16];
              ((void (*)(char *, uint64_t))v788)(v520, v511);
              v522 = (uint64_t (**)(uint64_t, char *))v795;
              if (v521 >> 60 != 11) {
                goto LABEL_165;
              }
            }
            else
            {
              ((void (*)(char *, uint64_t))v788)(v520, v511);
              v522 = (uint64_t (**)(uint64_t, char *))v795;
            }
            sub_10058364C(1);
LABEL_165:
            uint64_t v530 = v789;
            sub_1004D7588(v789, v518);
            uint64_t v531 = *(int *)(v501 + 48);
            uint64_t v532 = (uint64_t)v776;
            v533 = &v776[v531];
            uint64_t v534 = (uint64_t)v768;
            v535 = v807;
            ((void (*)(char *, NSObject *, char *))v772)(v776, v768, v807);
            swift_storeEnumTagMultiPayload();
            *(void *)v533 = 0;
            *((void *)v533 + 1) = 0;
            v533[16] = 2;
            swift_storeEnumTagMultiPayload();
            uint64_t v536 = v777;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v530, v532);
            swift_release();
            v763(v532, v536);
            return v522[1](v534, v535);
          }
          goto LABEL_250;
        }
        v523 = v715;
        uint64_t v524 = v791;
        (*(void (**)(uint64_t, uint64_t))(*(void *)v779 + 240))(v505, 1);
        unint64_t v171 = v505;
        if (!v524)
        {
          uint64_t v791 = 0;
          uint64_t v525 = v737;
          uint64_t v526 = v740;
          int v527 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v737 + 48))(v523, 1, v740);
          v764 = v504;
          if (v527 == 1)
          {
            uint64_t v528 = v728;
            uint64_t v529 = (*(uint64_t (**)(char *, uint64_t))(v711 + 8))(v523, v728);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v525 + 32))(v704, v523, v526);
            uint64_t v592 = (uint64_t)v776;
            v593 = &v776[*(int *)(v501 + 48)];
            v763 = v508;
            ((void (*)(char *, NSObject *, char *))v772)(v776, v171, v807);
            swift_storeEnumTagMultiPayload();
            v594 = (int *)swift_getAssociatedTypeWitness();
            uint64_t v595 = swift_getAssociatedTypeWitness();
            uint64_t v596 = swift_getAssociatedConformanceWitness();
            uint64_t v597 = swift_getAssociatedConformanceWitness();
            v800 = v594;
            uint64_t v801 = v595;
            v802 = (unsigned char *)v596;
            uint64_t v803 = v597;
            uint64_t v598 = type metadata accessor for FileItemVersion();
            TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
            uint64_t v600 = *(int *)(TupleTypeMetadata3 + 48);
            uint64_t v601 = *(int *)(TupleTypeMetadata3 + 64);
            uint64_t v602 = v740;
            v603 = v704;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v598 - 8) + 16))(v593, &v704[*(int *)(v740 + 40)], v598);
            v593[v600] = 1;
            v593[v601] = 1;
            swift_storeEnumTagMultiPayload();
            uint64_t v604 = v777;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v789, v592);
            v763(v592, v604);
            uint64_t v529 = (*(uint64_t (**)(char *, uint64_t))(v525 + 8))(v603, v602);
            uint64_t v528 = v728;
          }
          __chkstk_darwin(v529);
          qmemcpy(&v696 - 10, " item destinationItemID baseVersion fields version domainVersion ", 65);
          BYTE1(v694) = 0;
          v800 = (int *)v807;
          uint64_t v801 = v528;
          v802 = (unsigned char *)v766;
          v606 = v792;
          uint64_t v605 = TupleTypeMetadata2;
          v607 = (int *)swift_getAssociatedTypeWitness();
          uint64_t v608 = swift_getAssociatedTypeWitness();
          v609 = swift_getAssociatedConformanceWitness();
          v794 = v609;
          uint64_t v610 = swift_getAssociatedConformanceWitness();
          uint64_t v796 = (uint64_t)v607;
          uint64_t v797 = v608;
          v798 = v609;
          uint64_t v799 = v610;
          type metadata accessor for FileItemVersion();
          uint64_t v803 = sub_10096C890();
          v804 = &type metadata for Fields;
          v805 = &type metadata for UInt;
          uint64_t v806 = sub_100033BE8((uint64_t *)&unk_100AD6860);
          v611 = (int *)swift_getTupleTypeMetadata();
          v612 = v725;
          v613 = &v725[v611[12]];
          v614 = &v725[v611[16]];
          v615 = &v725[v611[20]];
          uint64_t v616 = v611[24];
          uint64_t v789 = v611[28];
          uint64_t v790 = v616;
          uint64_t v788 = v611[32];
          ((void (*)(char *, NSObject *, char *))v772)(v725, v768, v807);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v737 + 56))(v613, 1, 1, v740);
          (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v614, 1, 1, v773);
          v800 = v607;
          uint64_t v801 = v608;
          v802 = v794;
          uint64_t v803 = v610;
          uint64_t v617 = type metadata accessor for FileItemVersion();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v617 - 8) + 56))(v615, 1, 1, v617);
          *(void *)&v612[v790] = v755;
          *(void *)&v612[v789] = v775;
          id v618 = v767;
          *(void *)&v612[v788] = v767;
          v800 = v784;
          uint64_t v801 = v605;
          v802 = v783;
          uint64_t v803 = (uint64_t)v606;
          type metadata accessor for DirectionalTestingOperation();
          swift_storeEnumTagMultiPayload();
          uint64_t v619 = v727;
          swift_storeEnumTagMultiPayload();
          v620 = *(void (**)(char *, void))(*v780 + 488);
          id v621 = v618;
          v620(v612, 0);
          (*(void (**)(char *, uint64_t))(v726 + 8))(v612, v619);
          goto LABEL_190;
        }
        goto LABEL_29;
      }
      if (qword_100ACC108 != -1) {
        swift_once();
      }
      if ((qword_100B0B2E8 & v755) != 0)
      {
        id v385 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        v386 = sub_10096B470();
        os_log_type_t v387 = sub_10096C5C0();
        if (os_log_type_enabled(v386, v387))
        {
          v388 = (uint8_t *)swift_slowAlloc();
          v389 = (int *)swift_slowAlloc();
          v772 = (char **)v262;
          v800 = v389;
          *(_DWORD *)v388 = 136446210;
          v770 = v388 + 4;
          uint64_t v390 = sub_1006096B0(qword_100B0B2E8 & v755);
          uint64_t v796 = sub_100719D44(v390, v391, (uint64_t *)&v800);
          uint64_t v174 = TupleTypeMetadata2;
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v386, v387, "☢️  file providers don't support setting the bit: %{public}s", v388, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v262 = (uint64_t)v772;
          (*(void (**)(char *, uint64_t))(v758 + 8))(v736, v757);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v758 + 8))(v265, v757);
        }
        BOOL v480 = (qword_100B0B2E8 & v262) == 0;
        uint64_t v175 = v792;
        uint64_t v458 = v262;
        v459 = v720;
        v460 = v719;
        if (!v480) {
          v458 &= ~qword_100B0B2E8;
        }
      }
      else
      {
        uint64_t v458 = v262;
        v459 = v720;
        v460 = v719;
      }
      uint64_t v481 = v458;
      if ((v458 & 8) == 0) {
        goto LABEL_149;
      }
      int v482 = *((unsigned __int8 *)&v794->isa + *(int *)(v790 + 56));
      if (v482 == 1) {
        goto LABEL_149;
      }
      if (v482 == 4)
      {
LABEL_251:
        __break(1u);
        goto LABEL_252;
      }
      if (*(unint64_t *)((char *)&v794[2].isa + v771[17]) >> 60 != 11
        || (v173[*((int *)v176 + 13)] | 4) != 4)
      {
LABEL_149:
        v266 = v783;
        uint64_t v262 = v458;
        goto LABEL_150;
      }
      id v483 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      v484 = v460;
      uint64_t v485 = v790;
      v486 = v459;
      v487 = v460;
      v488 = (void (*)(char *, char *, uint64_t))v785;
      ((void (*)(char *, NSObject *, uint64_t))v785)(v484, v794, v790);
      v489 = (uint8_t *)sub_10096B470();
      os_log_type_t v490 = sub_10096C5B0();
      if (os_log_type_enabled((os_log_t)v489, v490))
      {
        v491 = (uint8_t *)swift_slowAlloc();
        v772 = (char **)swift_slowAlloc();
        v800 = (int *)v772;
        v769 = v489;
        v770 = v491;
        *(_DWORD *)v491 = 136315138;
        v764 = (char *)(v491 + 4);
        v492 = v748;
        v488(v748, v487, v485);
        v493 = v487;
        v494 = (void (*)(char *, uint64_t))v788;
        ((void (*)(char *, uint64_t))v788)(v493, v485);
        uint64_t v495 = sub_10082F470(v485);
        unint64_t v497 = v496;
        v494(v492, v485);
        uint64_t v796 = sub_100719D44(v495, v497, (uint64_t *)&v800);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        v498 = (uint8_t *)v769;
        _os_log_impl((void *)&_mh_execute_header, v769, v490, "☢️  trying to propagate content from a dataless item %s", v770, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v174 = TupleTypeMetadata2;
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v758 + 8))(v720, v757);
      }
      else
      {
        ((void (*)(char *, uint64_t))v788)(v487, v485);

        (*(void (**)(char *, uint64_t))(v758 + 8))(v486, v757);
      }
      v635 = v807;
      uint64_t v636 = v737;
      v637 = v701;
      uint64_t v638 = (uint64_t)v768;
      uint64_t v639 = v791;
      (*(void (**)(NSObject *, uint64_t))(*(void *)v779 + 240))(v768, 1);
      uint64_t v175 = v792;
      if (!v639)
      {
        uint64_t v791 = 0;
        uint64_t v262 = v481 & 0xFFFFFFFFFFFFFFF7;
        uint64_t v671 = v740;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v636 + 48))(v637, 1, v740) == 1)
        {
          (*(void (**)(char *, uint64_t))(v711 + 8))(v637, v728);
          v266 = v783;
        }
        else
        {
          v676 = *(void (**)(char *, char *, uint64_t))(v636 + 32);
          v772 = (char **)(v481 & 0xFFFFFFFFFFFFFFF7);
          v677 = v696;
          v676(v696, v637, v671);
          v800 = v784;
          uint64_t v801 = v174;
          v266 = v783;
          v802 = v783;
          uint64_t v803 = (uint64_t)v175;
          v770 = (uint8_t *)type metadata accessor for JobResult();
          v769 = type metadata accessor for ReconciliationSideMutation();
          uint64_t v678 = swift_getTupleTypeMetadata2();
          uint64_t v679 = (uint64_t)v776;
          v680 = &v776[*(int *)(v678 + 48)];
          (*((void (**)(char *, uint64_t, char *))v795 + 2))(v776, v638, v807);
          swift_storeEnumTagMultiPayload();
          v681 = (int *)swift_getAssociatedTypeWitness();
          uint64_t v682 = swift_getAssociatedTypeWitness();
          uint64_t v683 = swift_getAssociatedConformanceWitness();
          uint64_t v684 = swift_getAssociatedConformanceWitness();
          v800 = v681;
          uint64_t v801 = v682;
          v802 = (unsigned char *)v683;
          uint64_t v803 = v684;
          uint64_t v685 = type metadata accessor for FileItemVersion();
          uint64_t v686 = swift_getTupleTypeMetadata3();
          uint64_t v687 = *(int *)(v686 + 48);
          uint64_t v688 = *(int *)(v686 + 64);
          uint64_t v689 = v740;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v685 - 8) + 16))(v680, &v677[*(int *)(v740 + 40)], v685);
          v680[v687] = 1;
          v680[v688] = 0;
          uint64_t v175 = v792;
          uint64_t v174 = TupleTypeMetadata2;
          swift_storeEnumTagMultiPayload();
          uint64_t v690 = v777;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v789, v679);
          (*(void (**)(uint64_t, uint64_t))(v782 + 8))(v679, v690);
          v691 = v677;
          uint64_t v262 = (uint64_t)v772;
          (*(void (**)(char *, uint64_t))(v737 + 8))(v691, v689);
        }
        goto LABEL_150;
      }
      return (*((uint64_t (**)(uint64_t, char *))v795 + 1))(v638, v635);
    case 2:
      (*(void (**)(char *, NSObject *, uint64_t))(v787 + 16))(v116, v148, v788);
      v182 = (void (**)(char *, char *, char *))v795;
      uint64_t v183 = v807;
      if ((*((unsigned int (**)(char *, uint64_t, char *))v795 + 6))(v116, 1, v807) == 1) {
        goto LABEL_244;
      }
      v182[4](v779, v116, v183);
      uint64_t v184 = v790;
      v185 = v764;
      (*(void (**)(char *, char *, uint64_t))(v765 + 16))(v764, (char *)v148 + *(int *)(v790 + 52), v766);
      Class v186 = isa;
      os_log_t v187 = v773;
      int v188 = (*((uint64_t (**)(char *, uint64_t, os_log_t))isa + 6))(v185, 1, v773);
      v189 = v792;
      uint64_t v190 = v771;
      if (v188 == 1) {
        goto LABEL_245;
      }
      (*((void (**)(char **, char *, os_log_t))v186 + 4))(v772, v185, v187);
      uint64_t v191 = *(uint64_t *)((char *)&v148->isa + v190[9]);
      uint64_t v192 = v781;
      uint64_t v193 = v759;
      (*(void (**)(char *, NSObject *, uint64_t))(v781 + 16))(v759, v148, v184);
      if ((v191 & 0x10) != 0)
      {
        uint64_t v194 = 4096;
        if ((v193[v190[9]] & 1) == 0) {
          uint64_t v194 = 0x2000000;
        }
      }
      else
      {
        uint64_t v194 = 4096;
      }
      uint64_t v787 = v194;
      (*(void (**)(char *, uint64_t))(v192 + 8))(v193, v184);
      uint64_t v788 = (uint64_t)v182[2];
      ((void (*)(char *, char *, char *))v788)(v138, v779, v807);
      v243 = (uint64_t *)((char *)v148 + *(int *)(v184 + 64));
      uint64_t v245 = *v243;
      uint64_t v244 = v243[1];
      v246 = v784;
      uint64_t v247 = TupleTypeMetadata2;
      v800 = v784;
      uint64_t v801 = TupleTypeMetadata2;
      v248 = v783;
      v802 = v783;
      uint64_t v803 = (uint64_t)v189;
      uint64_t v249 = type metadata accessor for JobResult();
      v800 = v246;
      uint64_t v801 = v247;
      v802 = v248;
      uint64_t v803 = (uint64_t)v189;
      type metadata accessor for Propagation.DeleteItem();
      swift_allocObject();
      id v250 = v767;
      id v251 = v767;
      uint64_t v252 = sub_10042B440((uint64_t)v138, v250, v245, v244, v787);
      v794 = *((void *)v795 + 1);
      v795 += 8;
      v253 = v807;
      ((void (*)(char *, char *))v794)(v138, v807);
      uint64_t v790 = v249;
      sub_1004D7588(v789, v252);
      swift_release();
      TupleTypeMetadata2 = type metadata accessor for ReconciliationSideMutation();
      uint64_t v254 = swift_getTupleTypeMetadata2();
      uint64_t v255 = (uint64_t)v776;
      v256 = &v776[*(int *)(v254 + 48)];
      ((void (*)(char *, char *, char *))v788)(v776, v779, v253);
      swift_storeEnumTagMultiPayload();
      *(void *)v256 = 0;
      *((void *)v256 + 1) = 0;
      v256[16] = 2;
      swift_storeEnumTagMultiPayload();
      uint64_t v257 = v777;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v789, v255);
      v258 = *(void (**)(uint64_t, uint64_t))(v782 + 8);
      v258(v255, v257);
      Class v259 = isa;
      v260 = v772;
      os_log_t v261 = v773;
      (*((void (**)(uint64_t, char **, os_log_t))isa + 2))(v255, v772, v773);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_100591758(v789, v255);
      v258(v255, v257);
      (*((void (**)(char **, os_log_t))v259 + 1))(v260, v261);
      return ((uint64_t (*)(char *, char *))v794)(v779, v807);
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      goto LABEL_252;
    case 6:
      unint64_t v786 = v149;
      (*(void (**)(char *, NSObject *, uint64_t))(v787 + 16))(v105, v148, v788);
      v159 = (void (**)(char *, char *, char *))v795;
      uint64_t v160 = v807;
      if ((*((unsigned int (**)(char *, uint64_t, char *))v795 + 6))(v105, 1, v807) == 1) {
        goto LABEL_242;
      }
      v159[4](v775, v105, v160);
      BOOL v161 = sub_1005152D8();
      uint64_t v162 = v792;
      uint64_t v163 = TupleTypeMetadata2;
      uint64_t v164 = v781;
      v165 = (char *)v763;
      if (v161) {
        goto LABEL_71;
      }
      uint64_t v166 = v790;
      v167 = (char *)v148 + *(int *)(v790 + 52);
      int v168 = v167[*(int *)(type metadata accessor for ItemReconciliationHalf() + 44)];
      if (v168 == 3)
      {
        (*(void (**)(char *, NSObject *, uint64_t))(v164 + 16))(v165, v148, v166);
      }
      else
      {
        (*(void (**)(char *, NSObject *, uint64_t))(v164 + 16))(v165, v148, v166);
        if (!v168)
        {
          (*(void (**)(char *, uint64_t))(v164 + 8))(v165, v166);
          uint64_t v162 = v792;
          goto LABEL_70;
        }
      }
      int v269 = v165[v771[13]];
      (*(void (**)(char *, uint64_t))(v164 + 8))(v165, v166);
      uint64_t v162 = v792;
      if (v269 != 3) {
        goto LABEL_71;
      }
LABEL_70:
      v786 |= 1uLL;
LABEL_71:
      v800 = v784;
      uint64_t v801 = v163;
      v802 = v783;
      uint64_t v803 = (uint64_t)v162;
      uint64_t v321 = type metadata accessor for JobResult();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v322 = swift_getTupleTypeMetadata2();
      uint64_t v323 = (uint64_t)v776;
      v324 = &v776[*(int *)(v322 + 48)];
      v325 = v159[2];
      v325(v776, v775, v807);
      swift_storeEnumTagMultiPayload();
      char *v324 = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v326 = v777;
      swift_storeEnumTagMultiPayload();
      uint64_t v788 = v321;
      sub_100591758(v789, v323);
      v327 = v792;
      uint64_t v328 = v782 + 8;
      v329 = *(void (**)(uint64_t, uint64_t))(v782 + 8);
      v329(v323, v326);
      if ((v786 & 0x10000) != 0)
      {
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v782 = v328;
        v330 = (unsigned char *)(v323 + *(int *)(swift_getTupleTypeMetadata2() + 48));
        v325((char *)v323, v775, v807);
        swift_storeEnumTagMultiPayload();
        unsigned char *v330 = 3;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_100591758(v789, v323);
        v329(v323, v326);
      }
      v800 = v784;
      uint64_t v801 = TupleTypeMetadata2;
      v802 = v783;
      uint64_t v803 = (uint64_t)v327;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      v331 = (uint8_t *)v775;
      sub_1008AA760((uint64_t)v775, *(uint64_t *)((char *)&v794->isa + *(int *)(v790 + 64)), *(uint64_t *)((char *)&v794[1].isa + *(int *)(v790 + 64)), v786);
      uint64_t v332 = sub_100610C68(0x2000);
      swift_retain();
      swift_release();
      sub_1004D4360(v789, v332);
      swift_release();
      v333 = (uint64_t (*)(uint8_t *, char *))*((void *)v795 + 1);
      v334 = v331;
      goto LABEL_132;
    case 12:
      (*(void (**)(char *, NSObject *, uint64_t))(v787 + 16))(v102, v148, v788);
      char v207 = (void (**)(char *, char *, char *))v795;
      unsigned __int8 v208 = v807;
      if ((*((unsigned int (**)(char *, uint64_t, char *))v795 + 6))(v102, 1, v807) == 1) {
        goto LABEL_247;
      }
      uint64_t v209 = (uint64_t)v760;
      v207[4](v760, v102, v208);
      BOOL v210 = sub_100827AAC(v790);
      uint64_t v211 = 32;
      v212 = v784;
      v800 = v784;
      uint64_t v801 = TupleTypeMetadata2;
      if (v210) {
        uint64_t v211 = 128;
      }
      uint64_t v788 = v211 | v149;
      uint64_t v213 = v783;
      v802 = v783;
      uint64_t v803 = (uint64_t)v792;
      type metadata accessor for JobResult();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v214 = swift_getTupleTypeMetadata2();
      uint64_t v215 = v208;
      uint64_t v216 = (uint64_t)v776;
      unsigned __int8 v217 = &v776[*(int *)(v214 + 48)];
      v207[2](v776, (char *)v209, v215);
      swift_storeEnumTagMultiPayload();
      *(void *)unsigned __int8 v217 = 0;
      *((void *)v217 + 1) = 0;
      v217[16] = 2;
      swift_storeEnumTagMultiPayload();
      uint64_t v218 = v777;
      swift_storeEnumTagMultiPayload();
      uint64_t v219 = v789;
      sub_100591758(v789, v216);
      (*(void (**)(uint64_t, uint64_t))(v782 + 8))(v216, v218);
      v800 = v212;
      uint64_t v801 = TupleTypeMetadata2;
      v802 = v213;
      uint64_t v803 = (uint64_t)v792;
      type metadata accessor for Ingestion.DeleteRejectedItemInTree();
      uint64_t v220 = sub_1008AAA34(v209, *(uint64_t *)((char *)&v794->isa + *(int *)(v790 + 64)), *(uint64_t *)((char *)&v794[1].isa + *(int *)(v790 + 64)), v788);
      sub_1004D4360(v219, v220);
      swift_release();
      return ((uint64_t (*)(uint64_t, char *))v207[1])(v209, v807);
    case 23:
      unint64_t v786 = v149;
      (*(void (**)(char *, NSObject *, uint64_t))(v787 + 16))(v110, v148, v788);
      uint64_t v195 = v795;
      v196 = v807;
      v775 = (char *)*((void *)v795 + 6);
      if (((unsigned int (*)(char *, uint64_t, char *))v775)(v110, 1, v807) == 1) {
        goto LABEL_246;
      }
      v197 = v148;
      uint64_t v198 = v769;
      v772 = (char **)*((void *)v195 + 4);
      ((void (*)(NSObject *, char *, char *))v772)(v769, v110, v196);
      uint64_t v199 = v790;
      uint64_t v200 = (char *)v197 + *(int *)(v790 + 52);
      uint64_t v201 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v202 = *(int *)(v201 + 76);
      v779 = v200;
      uint64_t v203 = *(void *)&v200[v202];
      uint64_t v204 = v781;
      char v205 = v762;
      (*(void (**)(char *, NSObject *, uint64_t))(v781 + 16))(v762, v197, v199);
      v785 = (int *)v201;
      if ((v203 & 4) != 0)
      {
        uint64_t v228 = v199;
        uint64_t v229 = *(void *)&v205[*(int *)(v199 + 52) + *(int *)(v201 + 76)] >> 3;
        uint64_t v206 = *(char **)(v204 + 8);
        ((void (*)(char *, uint64_t))v206)(v205, v228);
        unint64_t v786 = v786 & 0xFFFFFF7FFFFFFFFFLL | ((unint64_t)(v229 & 1) << 39);
      }
      else
      {
        uint64_t v206 = *(char **)(v204 + 8);
        ((void (*)(char *, uint64_t))v206)(v205, v199);
      }
      uint64_t v176 = v780;
      uint64_t v230 = v780[4];
      BOOL v231 = sub_1005152D8();
      v232 = v807;
      if (v231)
      {
        uint64_t v233 = v791;
        uint64_t v175 = v792;
        unint64_t v171 = v794;
        uint64_t v173 = v795;
        uint64_t v174 = TupleTypeMetadata2;
        v234 = v779;
LABEL_34:
        int v235 = v234[v785[11]];
        uint64_t v791 = v233;
        if (v235 || *((unsigned char *)&v171->isa + v771[13]) != 2) {
          goto LABEL_129;
        }
        uint64_t v236 = v765;
        v237 = v741;
        uint64_t v238 = v766;
        (*(void (**)(char *, char *, uint64_t))(v765 + 16))(v741, v234, v766);
        Class v239 = isa;
        os_log_t v240 = v773;
        if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v237, 1, v773) == 1)
        {
          (*(void (**)(char *, uint64_t))(v236 + 8))(v237, v238);
          goto LABEL_128;
        }
        v351 = v733;
        (*((void (**)(char *, char *, os_log_t))v239 + 4))(v733, v237, v240);
        v352 = *(void (**)(char *, uint64_t))(*(void *)v176[5] + 240);
        v353 = v732;
        uint64_t v354 = v791;
        v352(v351, 1);
        if (!v354)
        {
          uint64_t v791 = 0;
          uint64_t v392 = v716;
          uint64_t v393 = *(void *)(v716 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v393 + 48))(v353, 1, v716) == 1)
          {
            (*(void (**)(char *, uint64_t))(v707 + 8))(v353, v708);
            Class v394 = isa;
            os_log_t v395 = v773;
          }
          else
          {
            uint64_t v443 = swift_getWitnessTable();
            char v444 = FileItem.isDataless.getter(v392, v443);
            (*(void (**)(char *, uint64_t))(v393 + 8))(v353, v392);
            Class v394 = isa;
            os_log_t v395 = v773;
            if ((v444 & 1) == 0)
            {
              v800 = v784;
              uint64_t v801 = v174;
              uint64_t v581 = (uint64_t)v175;
              v802 = v783;
              uint64_t v803 = (uint64_t)v175;
              type metadata accessor for JobResult();
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v582 = swift_getTupleTypeMetadata2();
              uint64_t v583 = (uint64_t)v776;
              v584 = &v776[*(int *)(v582 + 48)];
              v585 = (void (*)(char *, NSObject *, char *))*((void *)v795 + 2);
              v586 = v769;
              v585(v776, v769, v807);
              swift_storeEnumTagMultiPayload();
              uint64_t v587 = *(int *)(v790 + 64);
              *(_WORD *)v584 = 768;
              *(_OWORD *)(v584 + 8) = *(_OWORD *)((char *)&v794->isa + v587);
              swift_storeEnumTagMultiPayload();
              uint64_t v588 = v777;
              swift_storeEnumTagMultiPayload();
              sub_100591758(v789, v583);
              (*(void (**)(uint64_t, uint64_t))(v782 + 8))(v583, v588);
              if ((*((unsigned char *)&v794->isa + v771[10]) & 8) == 0)
              {
                v589 = v725;
                v590 = v807;
                v585(v725, v586, v807);
                v800 = v784;
                uint64_t v801 = TupleTypeMetadata2;
                v802 = v783;
                uint64_t v803 = v581;
                type metadata accessor for DirectionalTestingOperation();
                swift_storeEnumTagMultiPayload();
                uint64_t v591 = v727;
                swift_storeEnumTagMultiPayload();
                (*(void (**)(char *, void))(*v780 + 488))(v589, 0);
                (*(void (**)(char *, uint64_t))(v726 + 8))(v589, v591);
                (*((void (**)(char *, os_log_t))isa + 1))(v733, v773);
                return (*((uint64_t (**)(NSObject *, char *))v795 + 1))(v586, v590);
              }
              (*((void (**)(char *, os_log_t))isa + 1))(v733, v773);
              uint64_t v175 = (void (*)(void, void, void))v581;
              uint64_t v174 = TupleTypeMetadata2;
              goto LABEL_128;
            }
          }
          (*((void (**)(char *, os_log_t))v394 + 1))(v351, v395);
LABEL_128:
          uint64_t v173 = v795;
LABEL_129:
          v800 = v784;
          uint64_t v801 = v174;
          v802 = v783;
          uint64_t v803 = (uint64_t)v175;
          uint64_t v445 = type metadata accessor for JobResult();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v446 = swift_getTupleTypeMetadata2();
          uint64_t v447 = (uint64_t)v776;
          v448 = &v776[*(int *)(v446 + 48)];
          v449 = (uint8_t *)v769;
          uint64_t v787 = *((void *)v173 + 2);
          ((void (*)(char *, NSObject *, char *))v787)(v776, v769, v807);
          swift_storeEnumTagMultiPayload();
          char *v448 = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v450 = v777;
          swift_storeEnumTagMultiPayload();
          uint64_t v451 = v789;
          uint64_t v788 = v445;
          sub_100591758(v789, v447);
          v452 = v792;
          uint64_t v453 = v782 + 8;
          v454 = *(void (**)(uint64_t, uint64_t))(v782 + 8);
          v454(v447, v450);
          if ((v786 & 0x10000) != 0)
          {
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v782 = v453;
            v455 = (unsigned char *)(v447 + *(int *)(swift_getTupleTypeMetadata2() + 48));
            ((void (*)(uint64_t, uint8_t *, char *))v787)(v447, v449, v807);
            swift_storeEnumTagMultiPayload();
            unsigned char *v455 = 3;
            v452 = v792;
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            sub_100591758(v451, v447);
            v454(v447, v450);
          }
          v800 = v784;
          uint64_t v801 = TupleTypeMetadata2;
          v802 = v783;
          uint64_t v803 = (uint64_t)v452;
          type metadata accessor for Ingestion.FetchContent();
          uint64_t v456 = sub_1008AA5E8((uint64_t)v449, *(uint64_t *)((char *)&v794->isa + *(int *)(v790 + 64)), *(uint64_t *)((char *)&v794[1].isa + *(int *)(v790 + 64)), v786);
          sub_1004D4360(v451, v456);
          swift_release();
          v333 = (uint64_t (*)(uint8_t *, char *))*((void *)v795 + 1);
          v334 = v449;
          goto LABEL_132;
        }
        (*((void (**)(char *, os_log_t))v239 + 1))(v351, v240);
        v226 = (uint64_t (*)(NSObject *, char *))*((void *)v795 + 1);
        v355 = &v801;
LABEL_182:
        v227 = *(v355 - 32);
        return v226(v227, v807);
      }
      int v241 = *((unsigned __int8 *)&v794->isa + *(int *)(v790 + 56));
      if (v241 == 2)
      {
        v270 = v750;
        uint64_t v271 = v791;
        (*(void (**))(*(void *)v230 + 280))(v198);
        if (v271) {
          return (*((uint64_t (**)(NSObject *, char *))v795 + 1))(v198, v232);
        }
        uint64_t v791 = 0;
        if (((unsigned int (*)(char *, uint64_t, char *))v775)(v270, 1, v232) == 1)
        {
          (*(void (**)(char *, uint64_t))(v787 + 8))(v270, v788);
          unint64_t v171 = v794;
          uint64_t v173 = v795;
          uint64_t v175 = v792;
          uint64_t v174 = TupleTypeMetadata2;
        }
        else
        {
          uint64_t v374 = (uint64_t)v734;
          ((void (*)(char *, char *, char *))v772)(v734, v270, v232);
          uint64_t v375 = v729;
          uint64_t v376 = v791;
          sub_1000DEDD8(v374, v729);
          uint64_t v174 = TupleTypeMetadata2;
          if (v376)
          {
            v377 = (void (*)(uint64_t, char *))*((void *)v795 + 1);
            v377(v374, v232);
            return ((uint64_t (*)(NSObject *, char *))v377)(v769, v232);
          }
          v396 = (int *)v790;
          int v397 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v781 + 48))(v375, 1, v790);
          uint64_t v398 = v375;
          unint64_t v171 = v794;
          uint64_t v173 = v795;
          uint64_t v175 = v792;
          uint64_t v791 = 0;
          if (v397 != 1)
          {
LABEL_173:
            v543 = v705;
            (*(void (**)(char *, uint64_t, int *))(v781 + 32))(v705, v398, v396);
            if (!v543[v396[13] + v785[11]]) {
              v786 |= 1uLL;
            }
            ((void (*)(char *, int *))v206)(v543, v396);
            (*((void (**)(char *, char *))v173 + 1))(v734, v232);
            goto LABEL_78;
          }
          uint64_t v399 = v398;
          (*((void (**)(char *, char *))v795 + 1))(v734, v232);
          (*(void (**)(uint64_t, uint64_t))(v743 + 8))(v399, v742);
        }
LABEL_78:
        uint64_t v198 = v769;
        v234 = v779;
LABEL_79:
        uint64_t v340 = v791;
        uint64_t v341 = (*(uint64_t (**))(*(void *)v176[3] + 304))(v198);
        v343 = v198;
        uint64_t v233 = v340;
        if (v340) {
          return (*((uint64_t (**)(NSObject *, char *))v173 + 1))(v343, v232);
        }
        if ((v342 & 1) == 0)
        {
          if ((v341 & ~v786) != 0) {
            uint64_t v344 = v341;
          }
          else {
            uint64_t v344 = 0;
          }
          v786 |= v344;
        }
        goto LABEL_34;
      }
      if (v241 != 4)
      {
        v234 = v779;
        int v242 = v779[v785[11]];
        unint64_t v171 = v794;
        uint64_t v173 = v795;
        uint64_t v175 = v792;
        uint64_t v174 = TupleTypeMetadata2;
        if (v242 != 3) {
          v786 |= v242 == 0;
        }
        goto LABEL_79;
      }
      goto LABEL_248;
    default:
      unint64_t v786 = v149;
      v785 = *(int **)(v787 + 16);
      v775 = (char *)(v787 + 16);
      ((void (*)(char *, NSObject *, uint64_t))v785)(v123, v148, v788);
      uint64_t v150 = v795;
      uint64_t v151 = v807;
      v779 = (char *)*((void *)v795 + 6);
      if (((unsigned int (*)(char *, uint64_t, char *))v779)(v123, 1, v807) == 1)
      {
        __break(1u);
LABEL_242:
        __break(1u);
LABEL_243:
        __break(1u);
LABEL_244:
        __break(1u);
LABEL_245:
        __break(1u);
LABEL_246:
        __break(1u);
LABEL_247:
        __break(1u);
LABEL_248:
        __break(1u);
      }
      else
      {
        uint64_t v152 = (void (*)(uint8_t *, char *, char *))*((void *)v150 + 4);
        uint64_t v153 = v770;
        v152(v770, v123, v151);
        uint64_t v154 = v780[4];
        uint64_t v155 = v791;
        uint64_t v156 = (char **)(*(uint64_t (**)(uint8_t *))(*(void *)v154 + 296))(v153);
        if (v155) {
          return (*((uint64_t (**)(uint8_t *, char *))v150 + 1))(v153, v151);
        }
        uint64_t v791 = 0;
        if (v157)
        {
          id v295 = (id)fpfs_current_or_default_log();
          v296 = v753;
          sub_10096B490();
          uint64_t v297 = v781;
          v298 = *(void (**)(char *, NSObject *, uint64_t))(v781 + 16);
          v299 = v744;
          uint64_t v300 = v790;
          v298(v744, v794, v790);
          v301 = v752;
          v792 = (void (*)(void, void, void))*((void *)v795 + 2);
          v792(v752, v770, v807);
          v302 = sub_10096B470();
          os_log_type_t v303 = sub_10096C5B0();
          v794 = v302;
          LODWORD(TupleTypeMetadata2) = v303;
          if (os_log_type_enabled(v302, v303))
          {
            uint64_t v304 = swift_slowAlloc();
            uint64_t v789 = swift_slowAlloc();
            v800 = (int *)v789;
            *(_DWORD *)uint64_t v304 = 136446466;
            uint64_t v788 = v304 + 4;
            v305 = v748;
            v298(v748, v299, v300);
            v306 = *(void (**)(char *, uint64_t))(v297 + 8);
            v306(v299, v300);
            uint64_t v307 = sub_10082F470(v300);
            unint64_t v309 = v308;
            v306(v305, v300);
            uint64_t v796 = sub_100719D44(v307, v309, (uint64_t *)&v800);
            sub_10096C8C0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v304 + 12) = 2082;
            uint64_t v790 = v304 + 14;
            v310 = v745;
            v311 = v752;
            v312 = v807;
            v792(v745, v752, v807);
            v313 = (void (*)(char *, char *))*((void *)v795 + 1);
            v313(v311, v312);
            uint64_t v314 = sub_10096D220();
            unint64_t v316 = v315;
            v313(v310, v312);
            uint64_t v796 = sub_100719D44(v314, v316, (uint64_t *)&v800);
            sub_10096C8C0();
            swift_bridgeObjectRelease();
            v317 = v794;
            _os_log_impl((void *)&_mh_execute_header, v794, (os_log_type_t)TupleTypeMetadata2, "🚔  cannot propagate creation for %{public}s: snapshot version not found for %{public}s", (uint8_t *)v304, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v758 + 8))(v753, v757);
            return ((uint64_t (*)(uint8_t *, char *))v313)(v770, v312);
          }
          else
          {
            v337 = (void (*)(char *, char *))*((void *)v795 + 1);
            v338 = v301;
            v339 = v807;
            v337(v338, v807);
            (*(void (**)(char *, uint64_t))(v297 + 8))(v299, v300);

            (*(void (**)(char *, uint64_t))(v758 + 8))(v296, v757);
            return ((uint64_t (*)(uint8_t *, char *))v337)(v770, v339);
          }
        }
        v267 = (void (*)(char *, char *, char *))v152;
        v772 = v156;
        v268 = v751;
        (*(void (**)(uint8_t *))(*(void *)v154 + 280))(v770);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v781 + 56))(v749, 1, 1, v790);
        v345 = v738;
        v346 = v268;
        uint64_t v347 = v788;
        ((void (*)(char *, char *, uint64_t))v785)(v738, v346, v788);
        v348 = v807;
        if (((unsigned int (*)(char *, uint64_t, char *))v779)(v345, 1, v807) == 1)
        {
          uint64_t v791 = 0;
          (*(void (**)(char *, uint64_t))(v787 + 8))(v345, v347);
          v349 = v780;
          v350 = v739;
        }
        else
        {
          uint64_t v378 = (uint64_t)v723;
          v267(v723, v345, v348);
          v349 = v780;
          uint64_t v379 = v724;
          sub_1000DEDD8(v378, v724);
          v350 = v739;
          uint64_t v791 = 0;
          (*((void (**)(uint64_t, char *))v795 + 1))(v378, v348);
          uint64_t v400 = v743;
          v401 = v749;
          uint64_t v402 = v742;
          (*(void (**)(char *, uint64_t))(v743 + 8))(v749, v742);
          (*(void (**)(char *, uint64_t, uint64_t))(v400 + 32))(v401, v379, v402);
        }
        v403 = (int *)v349[5];
        BOOL v404 = sub_1005152D8();
        v405 = *(void (**)(char *, char *, uint64_t))(v743 + 16);
        uint64_t v406 = v790;
        Class v407 = isa;
        v408 = v731;
        v785 = v403;
        if (v404)
        {
          uint64_t v409 = v742;
          v405(v731, v749, v742);
          uint64_t v410 = v781;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v781 + 48))(v408, 1, v406) == 1)
          {
            (*(void (**)(char *, uint64_t))(v743 + 8))(v408, v409);
LABEL_124:
            v800 = v784;
            uint64_t v801 = TupleTypeMetadata2;
            v802 = v783;
            uint64_t v803 = (uint64_t)v792;
            uint64_t v417 = type metadata accessor for JobResult();
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v418 = swift_getTupleTypeMetadata2();
            uint64_t v419 = (uint64_t)v776;
            v420 = &v776[*(int *)(v418 + 48)];
            v421 = (int *)*((void *)v795 + 2);
            v422 = (int *)v807;
            unint64_t v786 = (unint64_t)(v795 + 16);
            v785 = v421;
            ((void (*)(char *, uint8_t *, char *))v421)(v776, v770, v807);
            swift_storeEnumTagMultiPayload();
            uint64_t v423 = v790;
            v424 = (char *)*(int *)(v790 + 64);
            *(void *)v420 = 2;
            v425 = v794;
            v775 = v424;
            *(_OWORD *)(v420 + 8) = *(_OWORD *)&v424[(void)v794];
            swift_storeEnumTagMultiPayload();
            uint64_t v426 = v777;
            swift_storeEnumTagMultiPayload();
            v779 = (char *)v417;
            sub_100591758(v789, v419);
            v427 = *(objc_class **)(v782 + 8);
            v782 += 8;
            Class isa = v427;
            ((void (*)(uint64_t, uint64_t))v427)(v419, v426);
            id v428 = (id)fpfs_current_or_default_log();
            v429 = v718;
            sub_10096B490();
            uint64_t v430 = v781;
            v431 = *(void (**)(char *, NSObject *, uint64_t))(v781 + 16);
            v432 = v712;
            v431(v712, v425, v423);
            v433 = sub_10096B470();
            os_log_type_t v434 = sub_10096C5B0();
            if (os_log_type_enabled(v433, v434))
            {
              os_log_t v773 = v433;
              v435 = (uint8_t *)swift_slowAlloc();
              v771 = (int *)swift_slowAlloc();
              v800 = v771;
              v769 = v435;
              *(_DWORD *)v435 = 136446210;
              v768 = (v435 + 4);
              v436 = v748;
              v431(v748, v432, v423);
              v437 = *(void (**)(char *, uint64_t))(v430 + 8);
              v437(v432, v423);
              uint64_t v438 = sub_10082F470(v423);
              unint64_t v440 = v439;
              v437(v436, v423);
              uint64_t v796 = sub_100719D44(v438, v440, (uint64_t *)&v800);
              v422 = (int *)v807;
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              os_log_t v441 = v773;
              _os_log_impl((void *)&_mh_execute_header, v773, v434, "🚔  cannot propagate creation for %{public}s: parent folder is not reconciled", (uint8_t *)v769, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              uint64_t v442 = TupleTypeMetadata2;
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v758 + 8))(v718, v757);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v430 + 8))(v432, v423);

              (*(void (**)(char *, uint64_t))(v758 + 8))(v429, v757);
              uint64_t v442 = TupleTypeMetadata2;
            }
            v461 = v794;
            v462 = (char *)v794 + *(int *)(v423 + 52);
            v463 = v792;
            uint64_t v464 = type metadata accessor for ItemReconciliationHalf();
            if (v462[*(int *)(v464 + 44)] == 2)
            {
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v465 = swift_getTupleTypeMetadata2();
              uint64_t v466 = (uint64_t)v776;
              v467 = &v776[*(int *)(v465 + 48)];
              ((void (*)(char *, uint8_t *, int *))v785)(v776, v770, v422);
              swift_storeEnumTagMultiPayload();
              *(_WORD *)v467 = 770;
              *(_OWORD *)(v467 + 8) = *(_OWORD *)&v775[(void)v461];
              swift_storeEnumTagMultiPayload();
              uint64_t v468 = v777;
              swift_storeEnumTagMultiPayload();
              sub_100591758(v789, v466);
              uint64_t v464 = ((uint64_t (*)(uint64_t, uint64_t))isa)(v466, v468);
            }
            __chkstk_darwin(v464);
            strcpy((char *)&v696 - 48, " item version domainVersion ");
            v800 = v422;
            uint64_t v801 = v728;
            v802 = &type metadata for UInt;
            uint64_t v803 = sub_100033BE8((uint64_t *)&unk_100AD6860);
            v469 = (int *)swift_getTupleTypeMetadata();
            v470 = v725;
            v471 = &v725[v469[12]];
            uint64_t v472 = v469[16];
            uint64_t v473 = v469[20];
            v474 = v422;
            v475 = v770;
            ((void (*)(char *, uint8_t *, int *))v785)(v725, v770, v474);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v737 + 56))(v471, 1, 1, v740);
            *(void *)&v470[v472] = v772;
            id v476 = v767;
            *(void *)&v470[v473] = v767;
            v800 = v784;
            uint64_t v801 = v442;
            v802 = v783;
            uint64_t v803 = (uint64_t)v463;
            type metadata accessor for DirectionalTestingOperation();
            swift_storeEnumTagMultiPayload();
            uint64_t v477 = v727;
            swift_storeEnumTagMultiPayload();
            v478 = *(void (**)(char *, void))(*v780 + 488);
            id v479 = v476;
            v478(v470, 0);
            (*(void (**)(char *, uint64_t))(v726 + 8))(v470, v477);
            (*(void (**)(char *, uint64_t))(v743 + 8))(v749, v742);
            (*(void (**)(char *, uint64_t))(v787 + 8))(v751, v788);
            return (*((uint64_t (**)(uint8_t *, int *))v795 + 1))(v475, v474);
          }
          (*(void (**)(char *, char *, uint64_t))(v410 + 32))(v350, v408, v406);
          v411 = &v350[*(int *)(v406 + 52)];
          uint64_t v412 = v765;
          v413 = *(void (**)(char *))(v765 + 16);
          v414 = v709;
          v779 = v411;
          uint64_t v415 = v766;
          v413(v709);
          int v416 = (*((uint64_t (**)(char *, uint64_t, os_log_t))v407 + 6))(v414, 1, v773);
          (*(void (**)(char *, uint64_t))(v412 + 8))(v414, v415);
          if (v416 == 1)
          {
            (*(void (**)(char *, uint64_t))(v410 + 8))(v739, v790);
            goto LABEL_124;
          }
          v786 |= v779[*(int *)(type metadata accessor for ItemReconciliationHalf() + 44)] == 0;
          uint64_t v406 = v790;
          (*(void (**)(char *, uint64_t))(v410 + 8))(v739, v790);
        }
        v568 = v721;
        uint64_t v569 = v742;
        v405(v721, v749, v742);
        uint64_t v570 = v781;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v781 + 48))(v568, 1, v406) == 1)
        {
          (*(void (**)(char *, uint64_t))(v743 + 8))(v568, v569);
          uint64_t v572 = v791;
          v571 = v792;
          v573 = v783;
          uint64_t v574 = TupleTypeMetadata2;
        }
        else
        {
          uint64_t v575 = v714;
          (*(void (**)(uint64_t, char *, uint64_t))(v570 + 32))(v714, v568, v406);
          v576 = v710;
          uint64_t v577 = v791;
          (*(void (**)(uint8_t *, uint64_t))(*(void *)v154 + 240))(v770, 1);
          uint64_t v572 = v577;
          v578 = v792;
          if (v577)
          {
            (*(void (**)(uint64_t, uint64_t))(v570 + 8))(v575, v406);
            (*(void (**)(char *, uint64_t))(v743 + 8))(v749, v569);
            (*(void (**)(char *, uint64_t))(v787 + 8))(v751, v788);
            v226 = (uint64_t (*)(NSObject *, char *))*((void *)v795 + 1);
            v355 = (uint64_t *)&v802;
            goto LABEL_182;
          }
          uint64_t v579 = v737;
          uint64_t v580 = v740;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v737 + 48))(v576, 1, v740) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v781 + 8))(v714, v790);
            (*(void (**)(char *, uint64_t))(v711 + 8))(v576, v728);
          }
          else
          {
            uint64_t v622 = (uint64_t)v702;
            (*(void (**)(char *, char *, uint64_t))(v579 + 32))(v702, v576, v580);
            v800 = v784;
            uint64_t v801 = TupleTypeMetadata2;
            v802 = v783;
            uint64_t v803 = (uint64_t)v578;
            type metadata accessor for ReconciliationTable();
            v623 = v703;
            uint64_t v624 = v714;
            char v625 = sub_1000F7010(v703, v794, v622, v714, v780);
            char v640 = v625;
            (*(void (**)(char *, uint64_t))(v697 + 8))(v623, v698);
            swift_bridgeObjectRelease();
            uint64_t v641 = v786;
            if (v640) {
              uint64_t v641 = v786 | 0x40000000000;
            }
            unint64_t v786 = v641;
            (*(void (**)(uint64_t, uint64_t))(v579 + 8))(v622, v580);
            (*(void (**)(uint64_t, uint64_t))(v781 + 8))(v624, v790);
          }
          v573 = v783;
          uint64_t v574 = TupleTypeMetadata2;
          v571 = v578;
        }
        unint64_t v642 = (v786 >> 21) & 1;
        if ((*(uint64_t *)((unsigned char *)&v794->isa + v771[10]) & 0x80000000000) == 0) {
          LODWORD(v642) = 1;
        }
        if (v642) {
          unint64_t v643 = v786;
        }
        else {
          unint64_t v643 = v786 | 0x200000;
        }
        uint64_t v644 = (v643 >> 9) & 1;
        if ((*(uint64_t *)((unsigned char *)&v794->isa + v771[10]) & 0x8000) == 0) {
          LODWORD(v644) = 1;
        }
        if (v644) {
          unint64_t v645 = v643;
        }
        else {
          unint64_t v645 = v643 | 0x200;
        }
        int v646 = *((unsigned __int8 *)&v794->isa + *(int *)(v790 + 56));
        v647 = v784;
        uint64_t v648 = (uint64_t)v776;
        if (v646 == 1)
        {
LABEL_220:
          uint64_t v791 = v572;
          BOOL v650 = sub_1005152D8();
          if (v646 != 2 && v650)
          {
            v800 = v647;
            uint64_t v801 = v574;
            v802 = v573;
            uint64_t v803 = (uint64_t)v571;
            type metadata accessor for JobResult();
            type metadata accessor for ReconciliationSideMutation();
            v651 = (unsigned char *)(v648 + *(int *)(swift_getTupleTypeMetadata2() + 48));
            (*((void (**)(uint64_t, uint8_t *, char *))v795 + 2))(v648, v770, v807);
            swift_storeEnumTagMultiPayload();
            unsigned char *v651 = 0;
            v571 = v792;
            uint64_t v574 = TupleTypeMetadata2;
            swift_storeEnumTagMultiPayload();
            uint64_t v652 = v777;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v789, v648);
            (*(void (**)(uint64_t, uint64_t))(v782 + 8))(v648, v652);
          }
          v800 = v647;
          uint64_t v801 = v574;
          v802 = v573;
          uint64_t v803 = (uint64_t)v571;
          type metadata accessor for Propagation.CreateItem();
          v653 = (uint64_t *)((char *)v794 + *(int *)(v790 + 64));
          uint64_t v654 = *v653;
          uint64_t v655 = v653[1];
          id v656 = v767;
          id v657 = v767;
          uint64_t v658 = sub_10042B3C4((uint64_t)v770, (uint64_t)v772, v656, v654, v655, v645);
          if (!sub_1005152D8()) {
            sub_10058364C(1);
          }
          v800 = v647;
          uint64_t v801 = TupleTypeMetadata2;
          v802 = v573;
          uint64_t v803 = (uint64_t)v792;
          type metadata accessor for JobResult();
          uint64_t v659 = v789;
          sub_1004D7588(v789, v658);
          v660 = type metadata accessor for ReconciliationSideMutation();
          uint64_t v661 = swift_getTupleTypeMetadata2();
          v792 = (void (*)(void, void, void))v658;
          TupleTypeMetadata2 = v661;
          uint64_t v662 = v648 + *(int *)(v661 + 48);
          uint64_t v663 = v648;
          v664 = (void (*)(uint64_t, uint8_t *, char *))*((void *)v795 + 2);
          v665 = v770;
          v664(v663, v770, v807);
          swift_storeEnumTagMultiPayload();
          *(void *)uint64_t v662 = 0;
          *(void *)(v662 + 8) = 0;
          *(unsigned char *)(v662 + 16) = 2;
          v794 = v660;
          swift_storeEnumTagMultiPayload();
          uint64_t v666 = v777;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v659, v663);
          v667 = *(void (**)(uint64_t, uint64_t))(v782 + 8);
          v667(v663, v666);
          uint64_t v668 = (uint64_t)v713;
          v669 = v665;
          v381 = v807;
          v664((uint64_t)v713, v669, v807);
          swift_storeEnumTagMultiPayload();
          if (qword_100ACC0F0 != -1) {
            swift_once();
          }
          uint64_t v670 = static Fields.all;
          if ((static Fields.all & ~v755) == 0) {
            uint64_t v670 = 0;
          }
          *(void *)(v668 + *(int *)(TupleTypeMetadata2 + 48)) = v670 | v755;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_100591758(v789, v668);
          swift_release();
          v667(v668, v666);
          (*(void (**)(char *, uint64_t))(v743 + 8))(v749, v742);
          (*(void (**)(char *, uint64_t))(v787 + 8))(v751, v788);
          v333 = (uint64_t (*)(uint8_t *, char *))*((void *)v795 + 1);
          v334 = v770;
          goto LABEL_230;
        }
        if (v646 != 4)
        {
          uint64_t v649 = (v645 >> 27) & 1;
          if (*(unint64_t *)((char *)&v794[2].isa + v771[17]) >> 60 == 11) {
            LODWORD(v649) = 1;
          }
          if (!v649) {
            v645 |= 0x8000000uLL;
          }
          goto LABEL_220;
        }
      }
      __break(1u);
LABEL_250:
      __break(1u);
      goto LABEL_251;
  }
}

void sub_10040EDE8()
{
}

uint64_t sub_10040EE44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = v2;
  uint64_t v6 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, &v1[*(void *)(v5 + 576)], AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + v6) = sub_1007B24CC();
  uint64_t v7 = type metadata accessor for ThrottlingKey();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
}

uint64_t sub_10040F050()
{
  uint64_t v1 = type metadata accessor for JobLockRule();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = v11 - v3 + 22;
  swift_beginAccess();
  sub_1003B32B0((uint64_t)(v0 + 7), (uint64_t)v11);
  uint64_t v5 = v0[15];
  uint64_t v6 = (char *)v0 + *(void *)(*v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v4, v6, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_1001E3E98((uint64_t)v11, v5, (uint64_t)v4);
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1003B3318((uint64_t)v11);
  return v8;
}

void sub_10040F230()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  uint64_t v3 = *(void **)(v0 + *(void *)(*(void *)v0 + 584));
}

uint64_t sub_10040F300()
{
  uint64_t v0 = sub_10061056C();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);

  return v0;
}

uint64_t sub_10040F3D8()
{
  return sub_100428DF4(sub_10040F300);
}

uint64_t type metadata accessor for Propagation.PropagationJob()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10040F408()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t result = sub_10096C890();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_10096C890();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ItemState();
      uint64_t result = sub_10096C890();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
        swift_getTupleTypeMetadata2();
        uint64_t result = sub_10096C890();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_10040F74C()
{
  return sub_10096BCE0();
}

uint64_t sub_10040F790(uint64_t a1)
{
  __chkstk_darwin(a1);
  unint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v2);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v2, 1, TupleTypeMetadata2) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v2, AssociatedTypeWitness);
    return 0;
  }
  return v6;
}

unint64_t sub_10040F914(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B7CC(&qword_100ACE1E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(inited + 40) = v7;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  uint64_t v8 = sub_10096BCC0();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v9;
  return sub_10004621C(inited);
}

uint64_t sub_10040FA30()
{
  return sub_10040F74C();
}

uint64_t sub_10040FA48(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Error<>._domain.getter(a1, WitnessTable);
}

uint64_t sub_10040FA9C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Error<>._code.getter(a1, WitnessTable);
}

void *sub_10040FAF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!sub_1005152D8())
  {
    sub_10002C548((uint64_t)v10);
LABEL_7:
    uint64_t v8 = v10;
    goto LABEL_8;
  }
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t))(**(void **)(a1 + 40) + 264))(v11, a2);
  if (v3) {
    return result;
  }
  sub_10001AE98((uint64_t)v11, (uint64_t)v10, &qword_100AD0EA0);
  sub_10001AE98((uint64_t)v11, (uint64_t)v12, &qword_100AD0EA0);
  if sub_1000DBD64((uint64_t)v12) == 1 || (v12[33]) {
    goto LABEL_7;
  }
  sub_10012F1D0(v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
  sub_10002C548((uint64_t)v9);
  uint64_t v8 = v9;
LABEL_8:
  sub_10001AE98((uint64_t)v8, (uint64_t)v13, &qword_100AD0EA0);
  return (void *)sub_10001AE98((uint64_t)v13, a3, &qword_100AD0EA0);
}

uint64_t sub_10040FC2C()
{
  return 0x692D657461657263;
}

uint64_t sub_10040FC4C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 656);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 4;
  }
  else {
    return *(unsigned __int8 *)(v1 + *(int *)(v2 + 40));
  }
}

uint64_t sub_10040FD78()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 656);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 40);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_10040FEB4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 656);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_10040FFF8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 656);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_10041013C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 656);
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ItemState();
  uint64_t v6 = 1;
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
    uint64_t v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v6, 1, AssociatedTypeWitness);
}

uint64_t sub_1004102CC()
{
  sub_10096CBD0(34);
  v7._countAndFlagsBits = 0x74616761706F7270;
  v7._object = (void *)0xEC0000003C3A6465;
  sub_10096BDC0(v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D270();
  v8._countAndFlagsBits = 0x3A726576626420;
  v8._object = (void *)0xE700000000000000;
  sub_10096BDC0(v8);
  v9._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x3A7265766D6F6420;
  v10._object = (void *)0xE800000000000000;
  sub_10096BDC0(v10);
  uint64_t v1 = *(void **)(v0 + *(void *)(*(void *)v0 + 584));
  if (v1)
  {
    id v2 = [v1 description];
    uint64_t v3 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = (void *)0xE500000000000000;
    uint64_t v3 = 0x3E6C696E3CLL;
  }
  v11._countAndFlagsBits = v3;
  v11._object = v5;
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 62;
  v12._object = (void *)0xE100000000000000;
  sub_10096BDC0(v12);
  return 0;
}

uint64_t sub_1004104E4()
{
  if ((*(unsigned char *)(v0 + 139) & 8) != 0) {
    return 2;
  }
  else {
    return 4;
  }
}

int *sub_100410500(uint64_t a1, uint64_t a2)
{
  uint64_t v188 = a2;
  uint64_t v146 = a1;
  uint64_t v3 = (char *)*v2;
  uint64_t v4 = *(void *)(*v2 + 608);
  uint64_t v182 = *(void *)(*v2 + 624);
  uint64_t v152 = type metadata accessor for JobLockRule();
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v150 = (char *)v132 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  uint64_t v184 = v7;
  uint64_t v185 = v8;
  uint64_t v186 = AssociatedConformanceWitness;
  uint64_t v187 = v10;
  uint64_t v11 = type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v138 = sub_10096C890();
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v136 = (char *)v132 - v12;
  uint64_t v142 = sub_10096C890();
  uint64_t v140 = *(void *)(v142 - 8);
  uint64_t v13 = __chkstk_darwin(v142);
  uint64_t v141 = (char *)v132 - v14;
  uint64_t v143 = v11;
  uint64_t v139 = *(void *)(v11 - 8);
  __chkstk_darwin(v13);
  uint64_t v134 = (char *)v132 - v15;
  uint64_t v149 = sub_10096C890();
  uint64_t v153 = *(void *)(v149 - 8);
  uint64_t v16 = __chkstk_darwin(v149);
  v148 = (char *)v132 - v17;
  uint64_t v154 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v16);
  uint64_t v145 = (char *)v132 - v18;
  v180 = v3;
  uint64_t v183 = v2;
  uint64_t v19 = *((void *)v3 + 77);
  uint64_t v20 = *((void *)v3 + 75);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v162 = type metadata accessor for ItemState();
  uint64_t v161 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  uint64_t v174 = (int *)((char *)v132 - v22);
  uint64_t v23 = v182;
  swift_getAssociatedConformanceWitness();
  uint64_t v158 = AssociatedTypeWitness;
  uint64_t v24 = type metadata accessor for ItemState();
  uint64_t v156 = sub_10096C890();
  uint64_t v155 = *(void *)(v156 - 8);
  uint64_t v25 = __chkstk_darwin(v156);
  uint64_t v147 = (char *)v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v173 = (uint64_t)v132 - v28;
  uint64_t v157 = v24;
  uint64_t v160 = *(void *)(v24 - 8);
  __chkstk_darwin(v27);
  v159 = (char *)v132 - v29;
  uint64_t v172 = v21;
  uint64_t v171 = sub_10096C890();
  uint64_t v170 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (char *)v132 - v30;
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  uint64_t v184 = v31;
  uint64_t v185 = v32;
  uint64_t v186 = v33;
  uint64_t v187 = v34;
  uint64_t v165 = type metadata accessor for FileItemVersion();
  uint64_t v168 = sub_10096C890();
  uint64_t v167 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v166 = (char *)v132 - v35;
  uint64_t v36 = type metadata accessor for SnapshotItem();
  uint64_t v164 = sub_10096C890();
  uint64_t v163 = *(void *)(v164 - 8);
  uint64_t v37 = __chkstk_darwin(v164);
  v178 = (char *)v132 - v38;
  uint64_t v176 = *(void *)(v36 - 8);
  __chkstk_darwin(v37);
  uint64_t v175 = (char *)v132 - v39;
  uint64_t v184 = v20;
  uint64_t v185 = v4;
  uint64_t v144 = v4;
  uint64_t v186 = v19;
  uint64_t v187 = v23;
  uint64_t v40 = type metadata accessor for ItemReconciliation();
  uint64_t v41 = (int *)sub_10096C890();
  uint64_t v177 = *((void *)v41 - 1);
  uint64_t v42 = __chkstk_darwin(v41);
  uint64_t v44 = (char *)v132 - v43;
  uint64_t v179 = *(void *)(v40 - 8);
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)v132 - v45;
  uint64_t v47 = *(void *)(v188 + 16);
  uint64_t v48 = v181;
  uint64_t v49 = (uint64_t)v183 + *((void *)v180 + 72);
  sub_1000DF200(v49, (uint64_t)v44);
  if (!v48)
  {
    v132[0] = v47;
    v132[1] = v20;
    v180 = v46;
    uint64_t v133 = v36;
    uint64_t v181 = 0;
    uint64_t v50 = v179;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48))(v44, 1, v40) == 1)
    {
      uint64_t v51 = *(void (**)(char *, int *))(v177 + 8);
      uint64_t v52 = v44;
      uint64_t v53 = v41;
LABEL_4:
      v51(v52, v53);
      return 0;
    }
    uint64_t v55 = v180;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v180, v44, v40);
    uint64_t v56 = v183;
    uint64_t v57 = v178;
    uint64_t v58 = v181;
    (*(void (**)(uint64_t, void))(**(void **)(v188 + 40) + 248))(v49, *(void *)((char *)v56 + *(void *)(*v56 + 632)));
    uint64_t v181 = v58;
    if (v58)
    {
LABEL_7:
      (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v40);
      return v41;
    }
    uint64_t v59 = v176;
    uint64_t v60 = v133;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v57, 1, v133) == 1)
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v40);
      uint64_t v51 = *(void (**)(char *, int *))(v163 + 8);
      uint64_t v52 = v57;
      uint64_t v61 = &v189;
LABEL_10:
      uint64_t v53 = (int *)*(v61 - 32);
      goto LABEL_4;
    }
    uint64_t v177 = v40;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v175, v57, v60);
    uint64_t v62 = (uint64_t *)&v55[*(int *)(type metadata accessor for ItemReconciliationHalf() + 68)];
    uint64_t v63 = *v62;
    uint64_t v64 = v62[1];
    unint64_t v65 = v62[2];
    uint64_t v66 = v62[3];
    uint64_t v67 = v62[4];
    uint64_t v68 = v62[5];
    uint64_t v69 = v62[6];
    uint64_t v70 = (void *)((char *)v56 + *(void *)(*v56 + 664));
    uint64_t v71 = v59;
    uint64_t v72 = *v70;
    uint64_t v73 = v70[1];
    unint64_t v74 = v70[2];
    *uint64_t v70 = v63;
    v70[1] = v64;
    v70[2] = v65;
    v70[3] = v66;
    v70[4] = v67;
    v70[5] = v68;
    v70[6] = v69;
    sub_10009C650(v63, v64, v65);
    unint64_t v75 = v74;
    uint64_t v76 = v175;
    uint64_t v77 = v133;
    sub_1000D35D8(v72, v73, v75);
    uint64_t v78 = v165;
    uint64_t v79 = *(void *)(v165 - 8);
    uint64_t v80 = v166;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v166, &v76[*(int *)(v77 + 40)], v165);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v80, 0, 1, v78);
    uint64_t v81 = (char *)v56 + *(void *)(*v56 + 640);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v167 + 40))(v81, v80, v168);
    swift_endAccess();
    uint64_t v82 = v172;
    uint64_t v83 = *(void *)(v172 - 8);
    uint64_t v84 = v169;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v169, &v76[*(int *)(v77 + 36)], v172);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v82);
    uint64_t v85 = (char *)v56 + *(void *)(*v56 + 648);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v170 + 40))(v85, v84, v171);
    swift_endAccess();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v41 = v174;
    sub_100619010(v77, WitnessTable, (uint64_t)v174);
    uint64_t v87 = v173;
    uint64_t v88 = v181;
    sub_1000E5ECC((uint64_t)v41, v173);
    uint64_t v181 = v88;
    if (v88)
    {
      (*(void (**)(int *, uint64_t))(v161 + 8))(v41, v162);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v76, v77);
LABEL_13:
      uint64_t v40 = v177;
      uint64_t v50 = v179;
      uint64_t v55 = v180;
      goto LABEL_7;
    }
    (*(void (**)(int *, uint64_t))(v161 + 8))(v41, v162);
    uint64_t v89 = v160;
    uint64_t v90 = v157;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48))(v87, 1, v157) == 1)
    {
      (*(void (**)(char *, uint64_t))(v176 + 8))(v76, v77);
      (*(void (**)(char *, uint64_t))(v179 + 8))(v180, v177);
      uint64_t v51 = *(void (**)(char *, int *))(v155 + 8);
      uint64_t v52 = (char *)v87;
      uint64_t v61 = &v185;
      goto LABEL_10;
    }
    uint64_t v91 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v159, v87, v90);
    uint64_t v92 = *(void *)(v188 + 32);
    BOOL v93 = sub_1005152D8();
    uint64_t v94 = &v91[*(int *)(v90 + 40)];
    if (v93)
    {
      int v95 = *v94;
      uint64_t v96 = type metadata accessor for ItemMetadata();
      uint64_t v41 = (int *)v96;
      v94[*(int *)(v96 + 80)] = v95 != 2;
      uint64_t v97 = v154;
      uint64_t v98 = v153;
      if (v95 != 2) {
        v94[*(int *)(v96 + 84)] = 0;
      }
      if (v94[*(int *)(v96 + 84)])
      {
        uint64_t v99 = v159;
        uint64_t v100 = v181;
        uint64_t v101 = (*(uint64_t (**)(char *))(*(void *)v92 + 520))(v159);
        uint64_t v181 = v100;
        if (v100)
        {
          (*(void (**)(char *, uint64_t))(v89 + 8))(v99, v90);
          (*(void (**)(char *, uint64_t))(v176 + 8))(v175, v133);
          goto LABEL_13;
        }
        *(void *)&v94[v41[19]] = v101;
        uint64_t v102 = v99;
      }
      else
      {
        uint64_t v102 = v159;
      }
    }
    else
    {
      uint64_t v41 = (int *)type metadata accessor for ItemMetadata();
      v94[v41[20]] = 0;
      uint64_t v97 = v154;
      uint64_t v102 = v159;
      uint64_t v98 = v153;
    }
    uint64_t v103 = v180;
    uint64_t v104 = &v102[*(int *)(v90 + 40)];
    type metadata accessor for ItemMetadata();
    v104[v41[18]] = 0;
    uint64_t v105 = v147;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v147, v102, v90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v105, 0, 1, v90);
    uint64_t v106 = (char *)v56 + *(void *)(*v56 + 656);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v155 + 40))(v106, v105, v156);
    swift_endAccess();
    uint64_t v107 = &v103[*(int *)(v177 + 52)];
    uint64_t v108 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
    uint64_t v109 = v98;
    uint64_t v110 = v148;
    uint64_t v111 = v149;
    v108(v148, v107, v149);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v110, 1, v158) == 1)
    {
      (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
    }
    else
    {
      uint64_t v188 = *(void *)(v97 + 32);
      ((void (*)(char *, char *, uint64_t))v188)(v145, v110, v158);
      uint64_t v112 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v113 = v140;
      uint64_t v114 = v141;
      uint64_t v115 = v142;
      (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v141, &v107[*(int *)(v112 + 48)], v142);
      uint64_t v116 = v139;
      uint64_t v117 = v143;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v114, 1, v143) == 1)
      {
        (*(void (**)(char *, uint64_t))(v97 + 8))(v145, v158);
        (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v115);
      }
      else
      {
        uint64_t v118 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
        uint64_t v119 = v134;
        v118(v134, v114, v117);
        uint64_t v120 = TupleTypeMetadata2;
        uint64_t v121 = v136;
        uint64_t v122 = v117;
        uint64_t v123 = &v136[*(int *)(TupleTypeMetadata2 + 48)];
        ((void (*)(char *, char *, uint64_t))v188)(v136, v145, v158);
        uint64_t v124 = v122;
        uint64_t v90 = v157;
        v118(v123, v119, v124);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v121, 0, 1, v120);
        uint64_t v125 = (char *)v56 + *(void *)(*v56 + 672);
        swift_beginAccess();
        uint64_t v126 = v121;
        uint64_t v97 = v154;
        (*(void (**)(char *, char *, uint64_t))(v137 + 40))(v125, v126, v138);
        swift_endAccess();
      }
      uint64_t v89 = v160;
      uint64_t v102 = v159;
    }
    uint64_t v127 = v133;
    uint64_t v128 = v175;
    swift_beginAccess();
    sub_1003B32B0((uint64_t)(v56 + 7), (uint64_t)&v184);
    uint64_t v129 = v56[15];
    uint64_t v130 = (uint64_t)v150;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v150, v102, v158);
    uint64_t v131 = v152;
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = (int *)sub_1001E3E98((uint64_t)&v184, v129, v130);
    (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v130, v131);
    sub_1003B3318((uint64_t)&v184);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v102, v90);
    (*(void (**)(char *, uint64_t))(v176 + 8))(v128, v127);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v180, v177);
  }
  return v41;
}

uint64_t sub_100411AB8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void (*a7)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a8)
{
  uint64_t v143 = a8;
  uint64_t v144 = a7;
  uint64_t v159 = a6;
  uint64_t v166 = a5;
  id v176 = a4;
  uint64_t v154 = a3;
  uint64_t v156 = a2;
  uint64_t v163 = a1;
  uint64_t v9 = *v8;
  uint64_t v10 = *(void *)(*v8 + 624);
  uint64_t v11 = *(void *)(*v8 + 608);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v152 = type metadata accessor for ItemState();
  uint64_t v13 = sub_10096C890();
  __chkstk_darwin(v13 - 8);
  uint64_t v172 = (uint64_t)&v132 - v14;
  uint64_t v15 = *(void *)(v9 + 616);
  uint64_t v167 = v8;
  uint64_t v16 = *(void *)(v9 + 600);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  v173[0] = v17;
  v173[1] = v18;
  uint64_t v174 = v19;
  uint64_t v175 = v20;
  uint64_t v155 = type metadata accessor for FileItemVersion();
  uint64_t v21 = sub_10096C890();
  __chkstk_darwin(v21 - 8);
  uint64_t v171 = (uint64_t)&v132 - v22;
  v173[0] = v11;
  v173[1] = v16;
  uint64_t v174 = v10;
  uint64_t v175 = v15;
  uint64_t v147 = v15;
  uint64_t v23 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v158 = v23[-1].i64[1];
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v157 = (char *)&v132 - v25;
  uint64_t v139 = *(void *)(v11 - 8);
  __chkstk_darwin(v24);
  uint64_t v138 = (char *)&v132 - v26;
  uint64_t v27 = type metadata accessor for SnapshotItem();
  uint64_t v165 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v140 = (uint64_t)&v132 - v29;
  uint64_t v145 = AssociatedTypeWitness;
  uint64_t v146 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v132 - v30;
  uint64_t v151 = v11;
  uint64_t v153 = v10;
  uint64_t v32 = type metadata accessor for ItemPropagationResult();
  uint64_t v149 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  v148 = (char *)&v132 - v33;
  uint64_t v150 = v34;
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v35 = sub_10096D510();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (uint64_t *)((char *)&v132 - v37);
  uint64_t v164 = v27;
  uint64_t v170 = sub_10096C890();
  uint64_t v169 = *(void *)(v170 - 8);
  uint64_t v39 = __chkstk_darwin(v176);
  uint64_t v160 = (char *)&v132 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (void *)__chkstk_darwin(v39);
  uint64_t v168 = (char *)&v132 - v42;
  uint64_t v161 = v23;
  uint64_t v141 = v31;
  if (v41)
  {
    strcpy((char *)v173, " domver:");
    BYTE1(v173[1]) = 0;
    WORD1(v173[1]) = 0;
    HIDWORD(v173[1]) = -402653184;
    id v43 = [v41 description];
    uint64_t v44 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v46 = v45;

    v177._countAndFlagsBits = v44;
    v177._object = v46;
    sub_10096BDC0(v177);
    swift_bridgeObjectRelease();
    uint64_t v48 = v173[0];
    uint64_t v47 = (void *)v173[1];
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v47 = (void *)0xE000000000000000;
  }
  uint64_t v49 = v167;
  (*(void (**)(uint64_t *, void (*)(uint64_t), uint64_t))(v36 + 16))(v38, v163, v35);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = *v38;
    v173[0] = 0;
    v173[1] = 0xE000000000000000;
    swift_errorRetain();
    v178._countAndFlagsBits = 0x747365757165723CLL;
    v178._object = (void *)0xEB000000003A6465;
    sub_10096BDC0(v178);
    uint64_t v51 = v152;
    swift_getWitnessTable();
    uint64_t v52 = v156;
    sub_10096D270();
    v179._countAndFlagsBits = 62;
    v179._object = (void *)0xE100000000000000;
    sub_10096BDC0(v179);
    uint64_t v53 = v173[1];
    uint64_t v151 = v173[0];
    uint64_t v54 = v168;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56))(v168, 1, 1, v164);
    swift_errorRelease();
    goto LABEL_6;
  }
  uint64_t v55 = v149;
  uint64_t v56 = v150;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v149 + 48))(v38, 1, v150) == 1)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v57 = swift_getAssociatedConformanceWitness();
    uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 64);
    uint64_t v59 = swift_checkMetadataState();
    if (v58(v59, v57))
    {
      swift_bridgeObjectRelease();
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t v50 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      uint64_t v54 = v168;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56))(v168, 1, 1, v164);
      uint64_t v151 = 0;
      uint64_t v53 = 0;
      LODWORD(v163) = 0;
      uint64_t v153 = 0;
      uint64_t v52 = v156;
      uint64_t v51 = v152;
      goto LABEL_20;
    }
    v173[0] = 0;
    v173[1] = 0xE000000000000000;
    sub_10096CBD0(27);
    v180._object = (void *)0x80000001009A11A0;
    v180._countAndFlagsBits = 0xD000000000000016;
    sub_10096BDC0(v180);
    uint64_t v76 = v48;
    uint64_t v51 = v152;
    swift_getWitnessTable();
    uint64_t v52 = v156;
    sub_10096D270();
    v181._countAndFlagsBits = v76;
    v181._object = v47;
    sub_10096BDC0(v181);
    swift_bridgeObjectRelease();
    v182._countAndFlagsBits = 62;
    v182._object = (void *)0xE100000000000000;
    sub_10096BDC0(v182);
    uint64_t v53 = v173[1];
    uint64_t v151 = v173[0];
    uint64_t v54 = v168;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56))(v168, 1, 1, v164);
    uint64_t v50 = 0;
LABEL_6:
    LODWORD(v163) = 0;
    uint64_t v153 = 0;
LABEL_20:
    uint64_t v86 = v154;
    uint64_t v87 = v155;
    goto LABEL_21;
  }
  uint64_t v133 = v48;
  uint64_t v135 = v47;
  (*(void (**)(char *, uint64_t *, uint64_t))(v55 + 32))(v148, v38, v56);
  uint64_t v60 = (uint64_t)v49 + *(void *)(*v49 + 576);
  swift_getAssociatedTypeWitness();
  uint64_t v61 = swift_getAssociatedConformanceWitness();
  uint64_t v62 = *(uint64_t (**)(uint64_t, uint64_t))(v61 + 64);
  uint64_t v63 = swift_checkMetadataState();
  uint64_t v147 = v60;
  uint64_t v136 = v63;
  uint64_t v137 = v61;
  uint64_t v134 = v62;
  int v64 = v62(v63, v61) & 1;
  uint64_t v65 = v153 + 64;
  uint64_t v66 = v141;
  uint64_t v163 = *(void (**)(uint64_t))(v153 + 64);
  v163(v151);
  uint64_t v67 = AssociatedConformanceWitness;
  uint64_t v68 = v145;
  LODWORD(v60) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v145, AssociatedConformanceWitness) & 1;
  uint64_t v69 = *(void (**)(char *, uint64_t))(v146 + 8);
  v69(v66, v68);
  if (v64 != v60)
  {
    uint64_t AssociatedConformanceWitness = v65;
    swift_bridgeObjectRelease();
    uint64_t v70 = v151;
    uint64_t v71 = v153;
    uint64_t v72 = type metadata accessor for FileTreeError();
    swift_getWitnessTable();
    uint64_t v50 = swift_allocError();
    uint64_t v74 = v73;
    char v75 = v134(v136, v137);
    uint64_t v141 = (char *)v72;
    if (v75)
    {
      sub_10085378C();
LABEL_17:
      uint64_t v82 = 0;
LABEL_19:
      uint64_t v49 = v167;
      uint64_t v83 = v168;
      uint64_t v51 = v152;
      uint64_t v84 = v149;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v146 + 56))(v74, v82, 1, v145);
      sub_10096C890();
      swift_getTupleTypeMetadata2();
      uint64_t v85 = v148;
      ((void (*)(uint64_t, uint64_t))v163)(v70, v71);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56))(v83, 1, 1, v164);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v150);
      uint64_t v151 = 0;
      uint64_t v53 = 0;
      LODWORD(v163) = 0;
      uint64_t v153 = 0;
      uint64_t v54 = v83;
      uint64_t v52 = v156;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  uint64_t v134 = *(uint64_t (**)(uint64_t, uint64_t))(v137 + 72);
  int v77 = ((uint64_t (*)(uint64_t))v134)(v136) & 1;
  ((void (*)(uint64_t, uint64_t))v163)(v151, v153);
  int v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 72))(v68, v67) & 1;
  v69(v66, v68);
  if (v77 != v78)
  {
    uint64_t AssociatedConformanceWitness = v65;
    swift_bridgeObjectRelease();
    uint64_t v70 = v151;
    uint64_t v71 = v153;
    uint64_t v79 = type metadata accessor for FileTreeError();
    swift_getWitnessTable();
    uint64_t v50 = swift_allocError();
    uint64_t v74 = v80;
    char v81 = v134(v136, v137);
    uint64_t v141 = (char *)v79;
    if (v81)
    {
      sub_1008537D0();
      goto LABEL_17;
    }
LABEL_18:
    uint64_t v82 = 1;
    goto LABEL_19;
  }
  uint64_t v51 = v152;
  uint64_t v52 = v156;
  uint64_t v107 = *(char *)(v156 + *(int *)(v152 + 40));
  uint64_t v108 = v148;
  char v109 = FileItem.kind.getter(v151, v153);
  uint64_t v87 = v155;
  uint64_t v110 = v108;
  if (qword_1009828E8[v107] == qword_1009828E8[v109]) {
    goto LABEL_29;
  }
  if (v107 != 3)
  {
    if ((_BYTE)v107 || v109 != 3) {
      goto LABEL_41;
    }
LABEL_29:
    uint64_t v111 = (uint64_t)v138;
    uint64_t v112 = v151;
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v138, v110, v151);
    uint64_t v113 = v140;
    SnapshotItem.init(_:)(v111, v112, v153, v140);
    uint64_t v115 = v164;
    uint64_t v114 = v165;
    uint64_t v54 = v168;
    (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v168, v113, v164);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v54, 0, 1, v115);
    uint64_t v116 = v110;
    uint64_t v117 = *(void *)&v110[*(int *)(v150 + 36)];
    LODWORD(v163) = v116[*(int *)(v150 + 40)];
    v173[0] = 0;
    v173[1] = 0xE000000000000000;
    v183._countAndFlagsBits = 0x3A6C61757463613CLL;
    v183._object = (void *)0xE800000000000000;
    sub_10096BDC0(v183);
    swift_getWitnessTable();
    sub_10096D270();
    v184._countAndFlagsBits = 32;
    v184._object = (void *)0xE100000000000000;
    sub_10096BDC0(v184);
    uint64_t v119 = v173[0];
    uint64_t v118 = v173[1];
    v173[0] = 0;
    v173[1] = 0xE000000000000000;
    v185._countAndFlagsBits = 0x6574736575716572;
    v185._object = (void *)0xEA00000000003A64;
    sub_10096BDC0(v185);
    swift_getWitnessTable();
    sub_10096D270();
    v186._countAndFlagsBits = 32;
    v186._object = (void *)0xE100000000000000;
    sub_10096BDC0(v186);
    uint64_t v120 = v173[0];
    uint64_t v121 = (void *)v173[1];
    v173[0] = v119;
    v173[1] = v118;
    swift_bridgeObjectRetain();
    v187._countAndFlagsBits = v120;
    v187._object = v121;
    sub_10096BDC0(v187);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v123 = v173[0];
    uint64_t v122 = v173[1];
    v173[0] = 0;
    v173[1] = 0xE000000000000000;
    sub_10096CBD0(16);
    swift_bridgeObjectRelease();
    strcpy((char *)v173, "stillPending:");
    HIWORD(v173[1]) = -4864;
    uint64_t v153 = v117;
    v188._countAndFlagsBits = sub_1006096B0(v117);
    sub_10096BDC0(v188);
    swift_bridgeObjectRelease();
    v189._countAndFlagsBits = 32;
    v189._object = (void *)0xE100000000000000;
    sub_10096BDC0(v189);
    uint64_t v124 = v173[0];
    uint64_t v125 = (void *)v173[1];
    v173[0] = v123;
    v173[1] = v122;
    swift_bridgeObjectRetain();
    v190._countAndFlagsBits = v124;
    v190._object = v125;
    sub_10096BDC0(v190);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v127 = v173[0];
    uint64_t v126 = v173[1];
    v173[0] = 0;
    v173[1] = 0xE000000000000000;
    sub_10096CBD0(17);
    swift_bridgeObjectRelease();
    strcpy((char *)v173, "shouldFetch:");
    BYTE5(v173[1]) = 0;
    HIWORD(v173[1]) = -5120;
    if (v163) {
      v128._countAndFlagsBits = 1702195828;
    }
    else {
      v128._countAndFlagsBits = 0x65736C6166;
    }
    if (v163) {
      uint64_t v129 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v129 = (void *)0xE500000000000000;
    }
    v128._object = v129;
    sub_10096BDC0(v128);
    swift_bridgeObjectRelease();
    v191._countAndFlagsBits = v133;
    v191._object = v135;
    sub_10096BDC0(v191);
    swift_bridgeObjectRelease();
    v192._countAndFlagsBits = 62;
    v192._object = (void *)0xE100000000000000;
    sub_10096BDC0(v192);
    uint64_t v130 = v173[0];
    uint64_t v131 = (void *)v173[1];
    v173[0] = v127;
    v173[1] = v126;
    swift_bridgeObjectRetain();
    v193._countAndFlagsBits = v130;
    v193._object = v131;
    sub_10096BDC0(v193);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v53 = v173[1];
    uint64_t v151 = v173[0];
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v140, v164);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v148, v150);
    uint64_t v50 = 0;
    goto LABEL_42;
  }
  if (!v109) {
    goto LABEL_29;
  }
LABEL_41:
  swift_bridgeObjectRelease();
  type metadata accessor for FileTreeError();
  swift_getWitnessTable();
  uint64_t v50 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56))(v168, 1, 1, v164);
  (*(void (**)(char *, uint64_t))(v149 + 8))(v108, v150);
  uint64_t v151 = 0;
  uint64_t v53 = 0;
  LODWORD(v163) = 0;
  uint64_t v153 = 0;
LABEL_42:
  uint64_t v49 = v167;
  uint64_t v86 = v154;
LABEL_21:
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v89 = v171;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16))(v171, v86, v87);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v88 + 56))(v89, 0, 1, v87);
  uint64_t v90 = *(uint64_t *)((char *)v49 + *(void *)(*v49 + 632));
  uint64_t v91 = v49;
  uint64_t v92 = *(void *)(v51 - 8);
  uint64_t v93 = v172;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16))(v172, v52, v51);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56))(v93, 0, 1, v51);
  uint64_t v94 = v160;
  (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v160, v54, v170);
  if (v50)
  {
    int v95 = *(void **)((char *)v91 + *(void *)(*v91 + 584));
    swift_errorRetain();
    id v96 = v95;
  }
  else
  {
    int v95 = 0;
  }
  uint64_t v97 = v157;
  uint64_t v98 = v159;
  uint64_t v99 = (uint64_t)v176;
  id v100 = v176;
  uint64_t v101 = (uint64_t *)swift_retain();
  sub_1003B4A90(v101, v171, v90, 0, v172, v94, v153, (int)v163, v97, v99, v50, (uint64_t)v95);
  uint64_t v103 = v161;
  uint64_t v102 = v162;
  uint64_t v104 = sub_1003D25F0(v166, v98, v161);
  if (v102)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, int8x16_t *))(v158 + 8))(v97, v103);
  }
  else
  {
    uint64_t v105 = v104;
    (*(void (**)(char *, int8x16_t *))(v158 + 8))(v97, v103);
    v144(0, v151, v53, v105);
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v168, v170);
}

uint64_t sub_1004130A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v51 = a8;
  uint64_t v44 = a7;
  uint64_t v45 = a5;
  uint64_t v47 = (void *)a6;
  uint64_t v48 = a4;
  uint64_t v43 = a3;
  uint64_t v49 = a2;
  uint64_t v46 = a1;
  uint64_t v9 = *(void **)v8;
  uint64_t v42 = *(void *)(*(void *)v8 + 616);
  uint64_t v41 = v9[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v55 = swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for FileItemVersion();
  uint64_t v36 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v37 = (char *)&v35 - v13;
  uint64_t v50 = v8;
  uint64_t v15 = v9[78];
  uint64_t v38 = v9[76];
  uint64_t v39 = v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = type metadata accessor for ItemState();
  uint64_t v16 = *(void *)(v35 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v35);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = v48;
  uint64_t v40 = *(void *)(*(void *)(v48 + 32) + 16);
  (*(void (**)(char *, uint64_t))(v16 + 16))((char *)&v35 - v18, v49);
  uint64_t v21 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v43, v10);
  unint64_t v22 = (*(unsigned __int8 *)(v16 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v23 = (v17 + *(unsigned __int8 *)(v21 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v24 = (v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = v38;
  *((void *)v26 + 2) = v41;
  *((void *)v26 + 3) = v27;
  uint64_t v28 = v39;
  *((void *)v26 + 4) = v42;
  *((void *)v26 + 5) = v28;
  uint64_t v29 = v44;
  *((void *)v26 + 6) = v20;
  *((void *)v26 + 7) = v29;
  uint64_t v30 = v50;
  *((void *)v26 + 8) = v51;
  *((void *)v26 + 9) = v30;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v26[v22], v19, v35);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v26[v23], v37, v36);
  uint64_t v31 = v46;
  *(void *)&v26[v24] = v45;
  sub_10001AE98((uint64_t)v31, (uint64_t)&v26[v25], (uint64_t *)&unk_100ACF710);
  uint64_t v32 = v47;
  sub_10001AE98((uint64_t)v47, (uint64_t)&v26[(v25 + 63) & 0xFFFFFFFFFFFFFFF8], &qword_100AD0EA0);
  uint64_t v33 = *(void (**)(void *, uint64_t, void *, uint64_t (*)(uint64_t, char), char *))(*(void *)v40 + 592);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100245AD4(v31, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
  sub_10012F1D0(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
  v33(v31, v49, v32, sub_1004318B0, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_100413544(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v57 = a7;
  unint64_t v58 = a8;
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  LODWORD(v62) = a2;
  uint64_t v63 = a1;
  uint64_t v59 = a6;
  uint64_t v60 = a9;
  uint64_t v12 = *(void *)a3;
  uint64_t v13 = *(void *)(*(void *)a3 + 104);
  uint64_t v14 = *(void *)(*(void *)a3 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v69 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for FileItemVersion();
  uint64_t v55 = *(void *)(v15 - 8);
  uint64_t v56 = v15;
  uint64_t v16 = *(void *)(v55 + 64);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v19 = *(void *)(v12 + 96);
  uint64_t v61 = a3;
  uint64_t v20 = *(void *)(v12 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v21 = type metadata accessor for ItemState();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  __chkstk_darwin(v21);
  unint64_t v25 = (char *)&v51 - v24;
  if (v62)
  {
    uint64_t v37 = swift_allocObject();
    uint64_t v62 = v37;
    uint64_t v38 = v65;
    *(void *)(v37 + 16) = v64;
    *(void *)(v37 + 24) = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v57, v21);
    uint64_t v57 = v21;
    uint64_t v39 = v55;
    uint64_t v40 = *(void (**)(char *, unint64_t, uint64_t))(v55 + 16);
    uint64_t v54 = v18;
    v40(v18, v58, v56);
    unint64_t v41 = (*(unsigned __int8 *)(v22 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    unint64_t v42 = (v23 + *(unsigned __int8 *)(v39 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    unint64_t v58 = (v16 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = (v58 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = (char *)swift_allocObject();
    *((void *)v43 + 2) = v14;
    *((void *)v43 + 3) = v20;
    *((void *)v43 + 4) = v13;
    *((void *)v43 + 5) = v19;
    uint64_t v44 = v63;
    *((void *)v43 + 6) = v59;
    *((void *)v43 + 7) = v44;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v43[v41], v25, v57);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v43[v42], v54, v56);
    uint64_t v45 = v60;
    *(void *)&v43[v58] = v61;
    *(void *)&v43[v53] = v45;
    uint64_t v46 = (uint64_t *)&v43[v52];
    uint64_t v47 = v65;
    *uint64_t v46 = v64;
    v46[1] = v47;
    sub_1000D5B30(v44, 1);
    swift_retain();
    uint64_t v48 = v44;
    sub_1000D5B30(v44, 1);
    uint64_t v49 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10035F220((uint64_t)"stageCreation(capturedContent:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 102, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v62, (uint64_t)sub_100430BD4, (uint64_t)v43, v49, (uint64_t)&type metadata for String);
    sub_10042EAB4(v48, 1, (uint64_t (*)(void))&_swift_release);
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v27 = v57;
    uint64_t v26 = v58;
    uint64_t v28 = v60;
    uint64_t v29 = v61;
    BOOL v30 = sub_1005152D8();
    uint64_t v32 = v64;
    uint64_t v31 = v65;
    if (v30)
    {
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      *(void *)(v33 + 24) = v31;
      uint64_t v34 = (void *)swift_allocObject();
      v34[2] = v32;
      v34[3] = v31;
      uint64_t v35 = v63;
      v34[4] = v63;
      sub_1000D5B30(v35, 0);
      swift_retain();
      sub_1000D5B30(v35, 0);
      uint64_t v36 = type metadata accessor for Continuation();
      swift_retain();
      sub_10035F220((uint64_t)"stageCreation(capturedContent:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 102, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v33, (uint64_t)sub_10042EADC, (uint64_t)v34, v36, (uint64_t)&type metadata for String);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v35 = v63;
      swift_retain();
      sub_100413B78(a10, v35, v27, v26, v29, v28, a11, v32, v31);
    }
    return sub_10042EAB4(v35, 0, (uint64_t (*)(void))&_swift_release);
  }
}

uint64_t sub_100413B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v69 = a8;
  uint64_t v70 = a6;
  uint64_t v72 = a1;
  uint64_t v73 = a7;
  uint64_t v78 = a3;
  uint64_t v79 = a5;
  uint64_t v68 = a4;
  uint64_t v71 = a2;
  uint64_t v11 = (void *)*v9;
  uint64_t v67 = *(void *)(*v9 + 616);
  uint64_t v66 = v11[75];
  uint64_t v77 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v81 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v83 = swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for FileItemVersion();
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v64 = v12;
  uint64_t v65 = *(void *)(v63 + 64);
  __chkstk_darwin(v12);
  uint64_t v76 = (char *)&v51 - v13;
  uint64_t v14 = v11[78];
  uint64_t v15 = v11[76];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = type metadata accessor for ItemState();
  uint64_t v74 = *(void *)(v16 - 8);
  uint64_t v75 = v16;
  uint64_t v59 = *(void *)(v74 + 64);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v51 - v17;
  unint64_t v52 = (char *)&v51 - v17;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v58 = v14;
  uint64_t v20 = v15;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v56 = v20;
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v19;
  uint64_t v81 = v21;
  uint64_t AssociatedConformanceWitness = v22;
  uint64_t v83 = v23;
  type metadata accessor for FileItemVersion();
  swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_10096C890();
  uint64_t v61 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v62 = v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v51 - v26;
  uint64_t v57 = (char *)&v51 - v26;
  uint64_t v28 = v10[17];
  uint64_t v29 = 34;
  if ((v28 & 0x210000) == 0) {
    uint64_t v29 = 32;
  }
  if ((v28 & 0x200) != 0) {
    uint64_t v30 = v29;
  }
  else {
    uint64_t v30 = 2 * ((v28 & 0x210000) != 0);
  }
  uint64_t v54 = v30;
  unint64_t v53 = *(void **)(*(void *)(v79 + 32) + 16);
  uint64_t v60 = (char *)v10 + v11[72];
  uint64_t v31 = (char *)v10 + v11[84];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v31, v24);
  uint64_t v55 = *(void *)((char *)v10 + *(void *)(*v10 + 584));
  uint64_t v32 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v18, v78, v75);
  uint64_t v33 = v63;
  uint64_t v34 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v76, v68, v64);
  unint64_t v35 = (*(unsigned __int8 *)(v32 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v36 = (v59 + *(unsigned __int8 *)(v33 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v37 = (v65 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = (char *)swift_allocObject();
  uint64_t v40 = v67;
  uint64_t v41 = v56;
  *((void *)v39 + 2) = v66;
  *((void *)v39 + 3) = v41;
  uint64_t v42 = v58;
  *((void *)v39 + 4) = v40;
  *((void *)v39 + 5) = v42;
  uint64_t v43 = v69;
  *((void *)v39 + 6) = v79;
  *((void *)v39 + 7) = v43;
  *((void *)v39 + 8) = v77;
  *((void *)v39 + 9) = v10;
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v39[v35], v52, v75);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v39[v36], v76, v34);
  *(void *)&v39[v37] = v70;
  uint64_t v44 = v54;
  *(void *)&v39[v38] = v54;
  uint64_t v76 = (char *)(*v53 + 616);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), char *, uint64_t, uint64_t))v76;
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t v47 = swift_getAssociatedConformanceWitness();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v50 = v46;
  uint64_t v48 = v57;
  v45(v78, v71, v72, v60, v57, v55, v44, v73, sub_1004301C4, v39, v50, v47);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v48, v61);
}

uint64_t sub_100414280(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v74 = a6;
  uint64_t v75 = a7;
  uint64_t v76 = a5;
  uint64_t v86 = a4;
  unint64_t v71 = a3;
  unint64_t v69 = a2;
  uint64_t v77 = a1;
  uint64_t v8 = *(void **)v7;
  uint64_t v9 = *(void *)(*(void *)v7 + 616);
  uint64_t v10 = *(void *)(*(void *)v7 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v89 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v91 = swift_getAssociatedConformanceWitness();
  uint64_t v85 = type metadata accessor for FileItemVersion();
  uint64_t v70 = *(void *)(v85 - 8);
  uint64_t v67 = *(void *)(v70 + 64);
  __chkstk_darwin(v85);
  uint64_t v84 = (char *)&v57 - v11;
  uint64_t v80 = v8;
  uint64_t v12 = v8[78];
  uint64_t v13 = v8[76];
  uint64_t v14 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v83 = type metadata accessor for ItemState();
  uint64_t v65 = *(void *)(v83 - 8);
  uint64_t v62 = *(void *)(v65 + 64);
  __chkstk_darwin(v83);
  uint64_t v82 = (char *)&v57 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v68 = v12;
  uint64_t v66 = v13;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v16;
  uint64_t v89 = v17;
  uint64_t AssociatedConformanceWitness = v18;
  uint64_t v91 = v19;
  uint64_t v60 = type metadata accessor for FileItemVersion();
  uint64_t v64 = sub_10096C890();
  uint64_t v63 = *(void *)(v64 - 8);
  uint64_t v20 = __chkstk_darwin(v64);
  uint64_t v81 = (char *)&v57 - v21;
  uint64_t v87 = v14;
  uint64_t v79 = *(void **)(v14 - 8);
  uint64_t v22 = v79[8];
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v78 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v57 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v57 - v27;
  uint64_t v29 = *(void **)(*(void *)(v86 + 32) + 16);
  uint64_t v61 = v7;
  swift_getAssociatedTypeWitness();
  uint64_t v72 = v10;
  uint64_t v73 = v9;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 64);
  swift_retain();
  uint64_t v32 = swift_checkMetadataState();
  char v33 = v31(v32, v30);
  uint64_t v34 = *v29;
  uint64_t v80 = v29;
  if (v33) {
    (*(void (**)(void))(v34 + 96))();
  }
  else {
    (*(void (**)(void))(v34 + 104))();
  }
  unint64_t v35 = v79;
  unint64_t v36 = (void (*)(char *, char *, uint64_t))v79[2];
  uint64_t v58 = v26;
  unint64_t v37 = v28;
  uint64_t v59 = v28;
  uint64_t v38 = v87;
  v36(v26, v28, v87);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v81, 1, 1);
  uint64_t v39 = v61;
  uint64_t v60 = *(void *)(v39 + *(void *)(*(void *)v39 + 584));
  v36(v78, v37, v38);
  uint64_t v40 = v65;
  (*(void (**)(char *, unint64_t, uint64_t))(v65 + 16))(v82, v69, v83);
  uint64_t v41 = v70;
  (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v84, v71, v85);
  unint64_t v42 = (*((unsigned __int8 *)v35 + 80) + 72) & ~(unint64_t)*((unsigned __int8 *)v35 + 80);
  unint64_t v69 = (v22 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (*(unsigned __int8 *)(v40 + 80) + v69 + 8) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v44 = (v62 + *(unsigned __int8 *)(v41 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  unint64_t v71 = (v67 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = (char *)swift_allocObject();
  uint64_t v46 = v66;
  *((void *)v45 + 2) = v72;
  *((void *)v45 + 3) = v46;
  uint64_t v47 = v68;
  *((void *)v45 + 4) = v73;
  *((void *)v45 + 5) = v47;
  uint64_t v48 = v87;
  uint64_t v49 = v74;
  uint64_t v50 = v75;
  *((void *)v45 + 6) = v86;
  *((void *)v45 + 7) = v49;
  *((void *)v45 + 8) = v50;
  ((void (*)(char *, char *, uint64_t))v35[4])(&v45[v42], v78, v48);
  *(void *)&v45[v69] = v39;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v45[v43], v82, v83);
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v45[v44], v84, v85);
  *(void *)&v45[v71] = v76;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t, uint64_t, void, uint64_t (*)(uint64_t), char *))(*v80 + 504);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v52 = v58;
  unint64_t v53 = v81;
  v51(v58, v81, v60, v77, 0, sub_10042F198, v45);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v53, v64);
  uint64_t v54 = (void (*)(char *, uint64_t))v79[1];
  uint64_t v55 = v87;
  v54(v52, v87);
  return ((uint64_t (*)(char *, uint64_t))v54)(v59, v55);
}

uint64_t sub_100414B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v65 = a8;
  uint64_t v66 = a6;
  uint64_t v60 = a5;
  uint64_t v61 = a7;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v59 = a1;
  uint64_t v67 = a9;
  uint64_t v9 = *(void **)a2;
  uint64_t v64 = *(void *)(*(void *)a2 + 104);
  uint64_t v62 = v9[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v78 = swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for FileItemVersion();
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  uint64_t v58 = *(void *)(v71 + 64);
  __chkstk_darwin(v11);
  uint64_t v70 = (char *)&v48 - v12;
  uint64_t v63 = a2;
  uint64_t v13 = v9[10];
  uint64_t v14 = v9[12];
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v56 = v14;
  uint64_t v55 = v13;
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = type metadata accessor for ItemState();
  uint64_t v68 = *(void *)(v16 - 8);
  uint64_t v69 = v16;
  uint64_t v17 = *(void *)(v68 + 64);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v54 = (char *)&v48 - v19;
  uint64_t v52 = v15;
  uint64_t v21 = *(void *)(v15 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  __chkstk_darwin(v18);
  uint64_t v24 = (char *)&v48 - v23;
  unint64_t v53 = (char *)&v48 - v23;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v25 = sub_10096D510();
  uint64_t v50 = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 64);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v48 - v28;
  uint64_t v51 = (char *)&v48 - v28;
  uint64_t v30 = swift_allocObject();
  uint64_t v57 = v30;
  uint64_t v31 = v74;
  *(void *)(v30 + 16) = v73;
  *(void *)(v30 + 24) = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v29, v59, v25);
  uint64_t v49 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v60, v15);
  uint64_t v32 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v20, v61, v69);
  uint64_t v33 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v65, v72);
  unint64_t v34 = (*(unsigned __int8 *)(v26 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v35 = (v27 + *(unsigned __int8 *)(v21 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v36 = (v22 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (*(unsigned __int8 *)(v32 + 80) + v36 + 8) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v38 = (v17 + *(unsigned __int8 *)(v33 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v39 = (v58 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = (char *)swift_allocObject();
  uint64_t v42 = v55;
  *((void *)v41 + 2) = v62;
  *((void *)v41 + 3) = v42;
  uint64_t v43 = v56;
  *((void *)v41 + 4) = v64;
  *((void *)v41 + 5) = v43;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v41[v34], v51, v50);
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v41[v35], v53, v52);
  *(void *)&v41[v36] = v66;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v41[v37], v54, v69);
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v41[v38], v70, v72);
  *(void *)&v41[v39] = v63;
  *(void *)&v41[v40] = v67;
  unint64_t v44 = &v41[(v40 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v45 = v74;
  *(void *)unint64_t v44 = v73;
  *((void *)v44 + 1) = v45;
  uint64_t v46 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"lookup(continuation:requestedState:otherVersion:on:result:completion:)", 70, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v57, (uint64_t)sub_10042FA28, (uint64_t)v41, v46, (uint64_t)&type metadata for String);
  swift_release();
  return swift_release();
}

uint64_t sub_1004151B0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, int8x16_t *), uint64_t a9)
{
  uint64_t v65 = a8;
  uint64_t v61 = a6;
  uint64_t v62 = a7;
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  uint64_t v52 = a2;
  uint64_t v66 = a1;
  uint64_t v64 = a9;
  uint64_t v10 = *a3;
  uint64_t v11 = *(void *)(*a3 + 608);
  uint64_t v12 = sub_10096C890();
  uint64_t v53 = *(void *)(v12 - 8);
  uint64_t v54 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v50 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v51 = (char *)&v47 - v15;
  uint64_t v63 = a3;
  uint64_t v16 = *(void *)(v10 + 624);
  uint64_t v49 = type metadata accessor for ItemPropagationResult();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v60 = sub_10096D510();
  uint64_t v57 = *(void *)(v60 - 8);
  uint64_t v17 = __chkstk_darwin(v60);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v55 = (void (*)(uint64_t))((char *)&v47 - v21);
  __chkstk_darwin(v20);
  uint64_t v48 = (void (*)(uint64_t))((char *)&v47 - v22);
  uint64_t v23 = sub_10096A630();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v16;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  uint64_t v27 = sub_10096D510();
  __chkstk_darwin(v27);
  uint64_t v29 = (uint64_t *)((char *)&v47 - v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)&v47 - v28, v66, v27);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = *v29;
    swift_errorRetain();
    sub_10096A500();
    sub_10042FD38();
    char v32 = sub_10096AA60();
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    if ((v32 & 1) != 0
      && (swift_getAssociatedTypeWitness(),
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(),
          unint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72),
          uint64_t v35 = swift_checkMetadataState(),
          (v34(v35, AssociatedConformanceWitness) & 1) != 0))
    {
      swift_errorRelease();
      unint64_t v36 = v48;
      (*(void (**)(void (*)(uint64_t), uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 1, 1);
      uint64_t v37 = v60;
      swift_storeEnumTagMultiPayload();
      sub_100411AB8(v36, v58, v59, 0, v61, v62, v65, v64);
      return (*(uint64_t (**)(void (*)(uint64_t), uint64_t))(v57 + 8))(v36, v37);
    }
    else
    {
      unint64_t v40 = v55;
      *(void *)uint64_t v55 = v31;
      uint64_t v41 = v60;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      sub_100411AB8(v40, v58, v59, 0, v61, v62, v65, v64);
      (*(void (**)(void (*)(uint64_t), uint64_t))(v57 + 8))(v40, v41);
      return swift_errorRelease();
    }
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = swift_retain();
    v65(v39, 0, 0, 0);
    return swift_release_n();
  }
  else
  {
    uint64_t v43 = v53;
    uint64_t v42 = v54;
    unint64_t v44 = v51;
    (*(void (**)(char *, uint64_t *, uint64_t))(v53 + 32))(v51, v29, v54);
    uint64_t v45 = (uint64_t)v50;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v50, v44, v42);
    sub_10044F148(v45, 0, 0, v11, v19);
    uint64_t v46 = v60;
    swift_storeEnumTagMultiPayload();
    sub_100411AB8((void (*)(uint64_t))v19, v58, v59, 0, v61, v62, v65, v64);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v19, v46);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v44, v42);
  }
}

uint64_t sub_100415824(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, uint64_t a8, char a9)
{
  unint64_t v122 = a7;
  uint64_t v123 = a8;
  uint64_t v117 = a1;
  unint64_t v118 = a6;
  uint64_t v128 = a5;
  uint64_t v129 = a3;
  uint64_t v130 = a4;
  uint64_t v10 = *a2;
  uint64_t v11 = *(void *)(*a2 + 96);
  uint64_t v12 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v132 = swift_getAssociatedTypeWitness();
  uint64_t v133 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v135 = swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v110 = sub_10096C890();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v107 = (char *)&v101 - v13;
  type metadata accessor for ItemPropagationResult();
  uint64_t v14 = sub_10096C890();
  uint64_t v114 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v119 = (uint64_t)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = v16;
  __chkstk_darwin(v15);
  uint64_t v113 = (char *)&v101 - v17;
  uint64_t v18 = *(void *)(v10 + 104);
  uint64_t v124 = a2;
  uint64_t v19 = *(void *)(v10 + 88);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t v132 = v20;
  uint64_t v133 = v21;
  uint64_t AssociatedConformanceWitness = v22;
  uint64_t v135 = v23;
  uint64_t v131 = type metadata accessor for FileItemVersion();
  uint64_t v116 = *(void *)(v131 - 8);
  uint64_t v24 = *(void *)(v116 + 64);
  __chkstk_darwin(v131);
  uint64_t v26 = (char *)&v101 - v25;
  uint64_t v120 = v11;
  uint64_t v121 = v12;
  swift_getAssociatedConformanceWitness();
  uint64_t v27 = type metadata accessor for ItemState();
  uint64_t v112 = *(void *)(v27 - 8);
  uint64_t v28 = *(void *)(v112 + 64);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v101 - v29;
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  uint64_t v115 = v14;
  uint64_t v31 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v32 = sub_10096D510();
  __chkstk_darwin(v32);
  unint64_t v34 = (uint64_t *)((char *)&v101 - v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))((char *)&v101 - v33, v117, v32);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t AssociatedTypeWitness = v27;
  uint64_t v127 = v26;
  uint64_t v125 = v30;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v37 = *v34;
    uint64_t v38 = swift_allocObject();
    uint64_t v119 = v38;
    uint64_t v39 = v130;
    *(void *)(v38 + 16) = v129;
    *(void *)(v38 + 24) = v39;
    unint64_t v40 = v30;
    uint64_t v41 = v18;
    uint64_t v42 = v112;
    (*(void (**)(char *, unint64_t, uint64_t))(v112 + 16))(v40, v118, v27);
    uint64_t v43 = v116;
    (*(void (**)(char *, unint64_t, uint64_t))(v116 + 16))(v26, v122, v131);
    unint64_t v44 = (*(unsigned __int8 *)(v42 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    unint64_t v45 = (v28 + *(unsigned __int8 *)(v43 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v122 = (v24 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v46 = (v122 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = (char *)swift_allocObject();
    uint64_t v48 = v121;
    *((void *)v47 + 2) = v19;
    *((void *)v47 + 3) = v48;
    uint64_t v49 = v120;
    *((void *)v47 + 4) = v41;
    *((void *)v47 + 5) = v49;
    *((void *)v47 + 6) = v128;
    *((void *)v47 + 7) = v37;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v47[v44], v125, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v47[v45], v127, v131);
    uint64_t v50 = v123;
    *(void *)&v47[v122] = v124;
    *(void *)&v47[v46] = v50;
    uint64_t v51 = &v47[(v46 + 15) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v52 = v130;
    *(void *)uint64_t v51 = v129;
    *((void *)v51 + 1) = v52;
    swift_retain_n();
    swift_retain();
    swift_errorRetain();
    uint64_t v53 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    sub_10035F220((uint64_t)"create(capturedContent:stagedContext:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 109, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v119, (uint64_t)sub_100430BD4, (uint64_t)v47, v53, (uint64_t)&type metadata for String);
    swift_errorRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v105 = v24;
    uint64_t v55 = v112;
    uint64_t v106 = v19;
    uint64_t v117 = v18;
    unint64_t v56 = v118;
    uint64_t v104 = *(void **)((char *)v34 + *(int *)(v31 + 48));
    uint64_t v57 = v114;
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 32);
    uint64_t v59 = v113;
    uint64_t v60 = v115;
    uint64_t v103 = v114 + 32;
    uint64_t v102 = v58;
    v58(v113, (uint64_t)v34, v115);
    if ((a9 & 0x20) == 0) {
      goto LABEL_7;
    }
    uint64_t v61 = v59;
    uint64_t v62 = v128 + *(void *)(*(void *)v128 + 672);
    swift_beginAccess();
    uint64_t v63 = v108;
    uint64_t v64 = v107;
    uint64_t v65 = v110;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v62, v110);
    LODWORD(v62) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v64, 1);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
    BOOL v66 = v62 == 1;
    uint64_t v59 = v61;
    if (v66)
    {
      TupleTypeMetadata2 = *(void *)(v124[5] + 16);
      uint64_t v67 = v128;
      uint64_t v110 = v67 + *(void *)(*(void *)v67 + 576);
      uint64_t v68 = v57;
      (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v119, v59, v60);
      uint64_t v69 = v55;
      (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v125, v56, AssociatedTypeWitness);
      uint64_t v70 = v116;
      (*(void (**)(char *, unint64_t, uint64_t))(v116 + 16))(v127, v122, v131);
      unint64_t v71 = (*(unsigned __int8 *)(v68 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      unint64_t v72 = (v111 + *(unsigned __int8 *)(v55 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      unint64_t v73 = (v28 + *(unsigned __int8 *)(v70 + 80) + v72) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      unint64_t v122 = (v105 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v118 = (v122 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v74 = (char *)swift_allocObject();
      uint64_t v75 = v121;
      *((void *)v74 + 2) = v106;
      *((void *)v74 + 3) = v75;
      uint64_t v76 = v119;
      uint64_t v77 = v120;
      *((void *)v74 + 4) = v117;
      *((void *)v74 + 5) = v77;
      *((void *)v74 + 6) = v124;
      *((void *)v74 + 7) = v67;
      uint64_t v78 = v130;
      *((void *)v74 + 8) = v129;
      *((void *)v74 + 9) = v78;
      v102(&v74[v71], v76, v60);
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v74[v72], v125, AssociatedTypeWitness);
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(&v74[v73], v127, v131);
      uint64_t v79 = v104;
      uint64_t v80 = v123;
      *(void *)&v74[v122] = v104;
      *(void *)&v74[v118] = v80;
      uint64_t v81 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))(*(void *)TupleTypeMetadata2
                                                                                    + 656);
      id v82 = v79;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v81(v110, sub_100430958, v74);
    }
    else
    {
LABEL_7:
      uint64_t v83 = swift_allocObject();
      uint64_t v110 = v83;
      uint64_t v84 = v130;
      *(void *)(v83 + 16) = v129;
      *(void *)(v83 + 24) = v84;
      (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v119, v59, v60);
      (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v125, v56, AssociatedTypeWitness);
      uint64_t v85 = v116;
      (*(void (**)(char *, unint64_t, uint64_t))(v116 + 16))(v127, v122, v131);
      unint64_t v86 = (*(unsigned __int8 *)(v57 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      unint64_t v87 = (v111 + *(unsigned __int8 *)(v55 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      unint64_t v88 = (v28 + *(unsigned __int8 *)(v85 + 80) + v87) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
      unint64_t v122 = (v105 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v89 = (v122 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v90 = (v89 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v91 = (char *)swift_allocObject();
      uint64_t v92 = v121;
      *((void *)v91 + 2) = v106;
      *((void *)v91 + 3) = v92;
      uint64_t v93 = v119;
      uint64_t v94 = v120;
      *((void *)v91 + 4) = v117;
      *((void *)v91 + 5) = v94;
      *((void *)v91 + 6) = v128;
      v102(&v91[v86], v93, v60);
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v91[v87], v125, AssociatedTypeWitness);
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(&v91[v88], v127, v131);
      int v95 = v104;
      *(void *)&v91[v122] = v104;
      *(void *)&v91[v89] = v124;
      *(void *)&v91[v90] = v123;
      id v96 = &v91[(v90 + 15) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v97 = v130;
      *(void *)id v96 = v129;
      *((void *)v96 + 1) = v97;
      uint64_t v98 = type metadata accessor for Continuation();
      swift_retain_n();
      uint64_t v99 = v128;
      swift_retain_n();
      swift_retain();
      swift_retain();
      id v100 = v95;
      sub_10035F220((uint64_t)"create(capturedContent:stagedContext:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 109, 2u, (uint64_t)sub_10042BE40, v99, (uint64_t)sub_1003B377C, v110, (uint64_t)sub_100430408, (uint64_t)v91, v98, (uint64_t)&type metadata for String);

      swift_release();
    }
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v113, v115);
  }
}

uint64_t sub_1004165E0(uint64_t a1, void (*a2)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a8)
{
  uint64_t v18 = a7;
  uint64_t v19 = a8;
  type metadata accessor for ItemPropagationResult();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v13 = sub_10096D510();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void (*)(uint64_t))((char *)&v18 - v15);
  *(void (**)(void, uint64_t, uint64_t, int8x16_t *))((char *)&v18 - v15) = a2;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_100411AB8(v16, a3, a4, 0, a5, a6, v18, v19);
  return (*(uint64_t (**)(void (*)(uint64_t), uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_10041677C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v60 = a8;
  uint64_t v61 = a3;
  uint64_t v58 = a7;
  uint64_t v55 = a6;
  uint64_t v67 = a5;
  uint64_t v65 = a4;
  uint64_t v62 = a9;
  uint64_t v63 = a10;
  uint64_t v10 = *(void **)a2;
  uint64_t v59 = *(void *)(*(void *)a2 + 104);
  uint64_t v57 = v10[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v69 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v71 = swift_getAssociatedConformanceWitness();
  uint64_t v64 = type metadata accessor for FileItemVersion();
  uint64_t v66 = *(void *)(v64 - 8);
  uint64_t v53 = *(void *)(v66 + 64);
  __chkstk_darwin(v64);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v51 = (char *)&v45 - v12;
  uint64_t v56 = a2;
  uint64_t v14 = v10[10];
  uint64_t v15 = v10[12];
  swift_getAssociatedTypeWitness();
  uint64_t v52 = v14;
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = type metadata accessor for ItemState();
  uint64_t v49 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v50 = (char *)&v45 - v19;
  type metadata accessor for ItemPropagationResult();
  uint64_t v21 = sub_10096C890();
  uint64_t v47 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v45 - v24;
  uint64_t v48 = (char *)&v45 - v24;
  uint64_t v26 = swift_allocObject();
  uint64_t v54 = v26;
  uint64_t v27 = v67;
  *(void *)(v26 + 16) = v65;
  *(void *)(v26 + 24) = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v55, v21);
  uint64_t v46 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v58, v16);
  uint64_t v28 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v13, v60, v64);
  unint64_t v29 = (*(unsigned __int8 *)(v22 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v30 = (v23 + *(unsigned __int8 *)(v17 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v31 = (v18 + *(unsigned __int8 *)(v28 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v32 = (v53 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = (char *)swift_allocObject();
  uint64_t v36 = v52;
  *((void *)v35 + 2) = v57;
  *((void *)v35 + 3) = v36;
  *((void *)v35 + 4) = v59;
  *((void *)v35 + 5) = v15;
  uint64_t v37 = v61;
  *((void *)v35 + 6) = v61;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v35[v29], v48, v47);
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v35[v30], v50, v49);
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v35[v31], v51, v64);
  uint64_t v39 = v62;
  uint64_t v38 = v63;
  *(void *)&v35[v32] = v62;
  *(void *)&v35[v33] = v56;
  *(void *)&v35[v34] = v38;
  unint64_t v40 = &v35[(v34 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v41 = v67;
  *(void *)unint64_t v40 = v65;
  *((void *)v40 + 1) = v41;
  uint64_t v42 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  id v43 = v39;
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"create(capturedContent:stagedContext:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 109, 2u, (uint64_t)sub_10042BE40, v37, (uint64_t)sub_1003B377C, v54, (uint64_t)sub_100430408, (uint64_t)v35, v42, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100416D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, void (*a8)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a9)
{
  uint64_t v20 = a7;
  uint64_t v21 = a8;
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  type metadata accessor for ItemPropagationResult();
  uint64_t v12 = sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v13 = sub_10096D510();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void (*)(uint64_t))((char *)&v18 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))((char *)&v18 - v15, a2, v12);
  swift_storeEnumTagMultiPayload();
  sub_100411AB8(v16, a3, a4, v18, v19, v20, v21, a9);
  return (*(uint64_t (**)(void (*)(uint64_t), uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100416F00(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v111 = a4;
  uint64_t v112 = a5;
  uint64_t v113 = a3;
  uint64_t v114 = a2;
  unint64_t v118 = (void *)a1;
  uint64_t v7 = (void *)*v5;
  uint64_t v8 = *(uint64_t **)(*v5 + 624);
  uint64_t v9 = *(void *)(*v5 + 608);
  swift_getAssociatedTypeWitness();
  uint64_t v102 = v9;
  uint64_t v103 = v8;
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for ItemState();
  uint64_t v11 = sub_10096C890();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v100 = v11;
  __chkstk_darwin(v11);
  uint64_t v110 = (char *)&v96 - v12;
  uint64_t v13 = v7[77];
  uint64_t v14 = v7[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v104 = v13;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v120 = AssociatedTypeWitness;
  uint64_t v121 = v16;
  uint64_t v122 = AssociatedConformanceWitness;
  uint64_t v123 = v18;
  uint64_t v19 = type metadata accessor for FileItemVersion();
  uint64_t v108 = sub_10096C890();
  uint64_t v20 = *(void *)(v108 - 8);
  uint64_t v21 = __chkstk_darwin(v108);
  uint64_t v23 = (char *)&v96 - v22;
  uint64_t v107 = v10;
  uint64_t v117 = *(void *)(v10 - 8);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v97 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  unint64_t v105 = (unint64_t)&v96 - v27;
  uint64_t v28 = *(void *)(v19 - 8);
  uint64_t v29 = __chkstk_darwin(v26);
  char v109 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  unint64_t v32 = (char *)&v96 - v31;
  uint64_t v98 = *(uint64_t **)(v118[4] + 16);
  sub_10001AE98((uint64_t)v6 + v7[83], (uint64_t)v124, (uint64_t *)&unk_100ACF710);
  unint64_t v33 = (char *)v6 + *(void *)(*v6 + 640);
  swift_beginAccess();
  uint64_t v34 = v20;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v36 = v33;
  uint64_t v37 = v19;
  uint64_t v38 = v28;
  uint64_t v39 = v108;
  v35(v23, v36, v108);
  LODWORD(v106) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v23, 1, v37);
  uint64_t v115 = v37;
  uint64_t v116 = v28;
  unint64_t v101 = (unint64_t)v32;
  if (v106 == 1)
  {
    sub_100245AD4(v124, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v39);
    uint64_t v120 = v14;
    uint64_t v121 = v102;
    uint64_t v122 = v104;
    uint64_t v123 = (uint64_t)v103;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v40 = swift_allocError();
    uint64_t v42 = v41;
    uint64_t v43 = swift_getAssociatedTypeWitness();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v45 = (void *)(v42 + *(int *)(TupleTypeMetadata2 + 48));
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v42, (char *)v6 + *(void *)(*v6 + 576), v43);
    *uint64_t v45 = 0xD000000000000019;
    v45[1] = 0x80000001009A1240;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v42, 0, 1, TupleTypeMetadata2);
    swift_willThrow();
    LODWORD(v110) = 0;
    uint64_t v46 = v112;
    goto LABEL_6;
  }
  uint64_t v108 = v14;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v48 = v109;
  v47(v109, v23, v37);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v48, v37);
  uint64_t v49 = (char *)v6 + *(void *)(*v6 + 656);
  swift_beginAccess();
  uint64_t v50 = v99;
  uint64_t v51 = v110;
  uint64_t v52 = v49;
  uint64_t v53 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v110, v52, v100);
  uint64_t v54 = v117;
  uint64_t v55 = v107;
  int v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48))(v51, 1, v107);
  uint64_t v46 = v112;
  if (v56 != 1)
  {
    uint64_t v61 = v97;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v97, v110, v55);
    (*(void (**)(unint64_t, char *, uint64_t))(v54 + 16))(v105, v61, v55);
    uint64_t v62 = *(void *)(*v6 + 576);
    uint64_t v103 = v6;
    uint64_t v63 = (uint64_t)v6 + v62;
    sub_100245AD4(v124, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
    sub_10040FAF0((uint64_t)v118, v63, (uint64_t)v119);
    uint64_t v77 = *(uint64_t (**)(unint64_t, uint64_t))(v54 + 8);
    uint64_t v117 = v54 + 8;
    uint64_t v106 = v77;
    v77((unint64_t)v61, v55);
    uint64_t v78 = *(char **)(v38 + 8);
    uint64_t v116 = v38 + 8;
    uint64_t v110 = v78;
    ((void (*)(char *, uint64_t))v78)(v109, v37);
    sub_10001AE98((uint64_t)v119, (uint64_t)&v120, &qword_100AD0EA0);
    int v79 = sub_1000DBD64((uint64_t)&v120);
    if (v79 == 1)
    {
      uint64_t v80 = *(int *)(v55 + 40);
      uint64_t v81 = (void *)(v105 + v80 + *(int *)(type metadata accessor for ItemMetadata() + 148));
      swift_bridgeObjectRelease();
      *uint64_t v81 = 0;
      v81[1] = 0;
    }
    uint64_t v82 = v55;
    swift_getAssociatedTypeWitness();
    uint64_t v83 = swift_getAssociatedConformanceWitness();
    uint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t))(v83 + 64);
    sub_10012F1D0(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
    uint64_t v85 = swift_checkMetadataState();
    if (v84(v85, v83) & 1) != 0 || ((*(uint64_t (**)(uint64_t, uint64_t))(v83 + 72))(v85, v83))
    {
      sub_10012F1D0(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      unint64_t v86 = v105;
      unint64_t v87 = v101;
      sub_100414280(v114, v105, v101, (uint64_t)v118, v113, (uint64_t)v111, v46);
      sub_100245AD4(v124, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
    }
    else
    {
      uint64_t v91 = v111;
      if (v114)
      {
        type metadata accessor for StagedContext();
        uint64_t v92 = swift_dynamicCastClass();
        uint64_t v93 = v113;
        if (!v92) {
          sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/Propagation.swift", 106, 2, 892);
        }
        uint64_t v94 = v92;
        uint64_t v88 = v82;
        swift_retain();
        uint64_t v95 = v94;
        unint64_t v86 = v105;
        unint64_t v89 = v101;
        sub_100413B78((uint64_t)v124, v95, v105, v101, (uint64_t)v118, v93, (uint64_t)v119, (uint64_t)v91, v46);
        sub_100245AD4(v124, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
        swift_release();
        sub_10012F1D0(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
        goto LABEL_21;
      }
      unint64_t v86 = v105;
      unint64_t v87 = v101;
      sub_1004130A0(v124, v105, v101, (uint64_t)v118, v113, (uint64_t)v119, (uint64_t)v111, v46);
      sub_100245AD4(v124, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
      sub_10012F1D0(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
    }
    uint64_t v88 = v82;
    unint64_t v89 = v87;
LABEL_21:
    uint64_t v90 = v115;
    sub_10012F1D0(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
    ((void (*)(unint64_t, uint64_t))v110)(v89, v90);
    return v106(v86, v88);
  }
  sub_100245AD4(v124, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v110, v53);
  uint64_t v120 = v108;
  uint64_t v121 = v102;
  uint64_t v122 = v104;
  uint64_t v123 = (uint64_t)v103;
  type metadata accessor for Propagation.PropagationError();
  uint64_t v57 = v38;
  swift_getWitnessTable();
  uint64_t v40 = swift_allocError();
  uint64_t v59 = v58;
  swift_getAssociatedTypeWitness();
  uint64_t v60 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v109, v37);
  LODWORD(v110) = 0;
LABEL_6:
  uint64_t v64 = (void *)swift_allocObject();
  uint64_t v65 = (void (*)(void, void, void, int8x16_t *))v111;
  v64[2] = v6;
  v64[3] = v65;
  uint64_t v66 = (uint64_t)v118;
  v64[4] = v46;
  v64[5] = v66;
  uint64_t v67 = v113;
  uint64_t v68 = v114;
  v64[6] = v113;
  if (v68 && (type metadata accessor for StagedContext(), (uint64_t v69 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v70 = v69;
    uint64_t v71 = (void *)swift_allocObject();
    v71[2] = v118;
    v71[3] = v65;
    v71[4] = v46;
    v71[5] = sub_10042C2A4;
    v71[6] = v64;
    v71[7] = v40;
    uint64_t v72 = *v98;
    uint64_t v111 = *(void (**)(void, void, void))(*v98 + 608);
    uint64_t v112 = v72 + 608;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_errorRetain();
    v111(v70, sub_10042EC6C, v71);
    uint64_t v73 = v115;
    sub_100245AD4(v124, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
    swift_release();
    swift_errorRelease();
    swift_release();
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v75 = v118;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1004224B8(v40, v6, v65, v46, v75, v67);
    sub_100245AD4(v124, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
    swift_release();
    uint64_t result = swift_errorRelease();
    uint64_t v73 = v115;
  }
  uint64_t v76 = v116;
  if (v110) {
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t))(v117 + 8))(v105, v107);
  }
  if (v106 != 1) {
    return (*(uint64_t (**)(unint64_t, uint64_t))(v76 + 8))(v101, v73);
  }
  return result;
}

id sub_100417D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getAssociatedTypeWitness();
  type metadata accessor for SnapshotItem();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v5 = a1 + TupleTypeMetadata[12];
  uint64_t v6 = TupleTypeMetadata[16];
  uint64_t v7 = TupleTypeMetadata[20];
  uint64_t v8 = (uint64_t)v1 + *(void *)(v3 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v8, AssociatedTypeWitness);
  uint64_t v10 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = *v1;
  *(void *)(a1 + v6) = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 632));
  id v14 = *(id *)((char *)v1 + *(void *)(v11 + 584));
  *(void *)(a1 + v7) = v14;
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 0, 1, v12);

  return v14;
}

uint64_t sub_10041805C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 640);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v2 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v6 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_1000D35D8(*(void *)(v0 + *(void *)(*(void *)v0 + 664)), *(void *)(v0 + *(void *)(*(void *)v0 + 664) + 8), *(void *)(v0 + *(void *)(*(void *)v0 + 664) + 16));
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 672);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_10096C890();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_100418418()
{
  uint64_t v0 = sub_10040F300();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 640);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v2 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v6 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_1000D35D8(*(void *)(v0 + *(void *)(*(void *)v0 + 664)), *(void *)(v0 + *(void *)(*(void *)v0 + 664) + 8), *(void *)(v0 + *(void *)(*(void *)v0 + 664) + 16));
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 672);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return v0;
}

uint64_t sub_1004187E0()
{
  return sub_100428DF4(sub_100418418);
}

uint64_t type metadata accessor for Propagation.CreateItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100418810()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_10096C890();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
    uint64_t result = sub_10096C890();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ItemState();
      uint64_t result = sub_10096C890();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
        uint64_t result = sub_10096C890();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_100418B34()
{
  return 0x692D657461647075;
}

uint64_t sub_100418B54()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 664);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 4;
  }
  else {
    return *(unsigned __int8 *)(v1 + *(int *)(v2 + 40));
  }
}

uint64_t sub_100418C80()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 664);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 40);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_100418DBC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 664);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_100418F00()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 664);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_100419044@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 664);
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ItemState();
  uint64_t v6 = 1;
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
    uint64_t v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v6, 1, AssociatedTypeWitness);
}

uint64_t sub_1004191D4()
{
  uint64_t v1 = v0;
  sub_10096CBD0(24);
  v8._countAndFlagsBits = 0x74616761706F7270;
  v8._object = (void *)0xEC0000003C3A6465;
  sub_10096BDC0(v8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D270();
  v9._countAndFlagsBits = 0x3A726576626420;
  v9._object = (void *)0xE700000000000000;
  sub_10096BDC0(v9);
  v10._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 32;
  v11._object = (void *)0xE100000000000000;
  sub_10096BDC0(v11);
  sub_10096CBD0(19);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(v1 + *(void *)(*(void *)v1 + 584));
  if (v2)
  {
    id v3 = [v2 description];
    uint64_t v4 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = (void *)0xE500000000000000;
    uint64_t v4 = 0x3E6C696E3CLL;
  }
  v12._countAndFlagsBits = v4;
  v12._object = v6;
  sub_10096BDC0(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x3A7366666964203ELL;
  v13._object = (void *)0xE800000000000000;
  sub_10096BDC0(v13);
  v14._countAndFlagsBits = sub_1006096B0(*(void *)(v1 + *(void *)(*(void *)v1 + 640)));
  sub_10096BDC0(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = 0x3A7265766D6F64;
  v15._object = (void *)0xE700000000000000;
  sub_10096BDC0(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void (*sub_100419488(uint64_t a1, void *a2))(void, void)
{
  uint64_t v347 = a2;
  uint64_t v306 = a1;
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 608);
  uint64_t v5 = *(void *)(*(void *)v2 + 624);
  uint64_t v305 = type metadata accessor for JobLockRule();
  uint64_t v302 = *(void *)(v305 - 8);
  __chkstk_darwin(v305);
  uint64_t v304 = (char *)&v284 - v6;
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v8 = sub_10096C890();
  uint64_t v294 = *(void *)(v8 - 8);
  uint64_t v295 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v298 = v7;
  v299 = (char *)&v284 - v10;
  uint64_t v297 = *(void *)(v7 - 8);
  __chkstk_darwin(v9);
  unint64_t v293 = (char *)&v284 - v11;
  uint64_t v345 = v3;
  v348 = v2;
  uint64_t v12 = *(void *)(v3 + 616);
  uint64_t v13 = *(void *)(v3 + 600);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = type metadata accessor for ItemState();
  uint64_t v322 = *(void *)(v14 - 8);
  uint64_t v323 = (void (*)(void, void))v14;
  __chkstk_darwin(v14);
  uint64_t v321 = (uint64_t *)((char *)&v284 - v15);
  uint64_t v349 = v4;
  uint64_t v16 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v17 = type metadata accessor for ItemState();
  uint64_t v307 = sub_10096C890();
  uint64_t v309 = *(void *)(v307 - 8);
  uint64_t v18 = __chkstk_darwin(v307);
  os_log_type_t v303 = (char *)&v284 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v320 = (uint64_t)&v284 - v21;
  uint64_t v310 = v17;
  uint64_t v311 = *(void *)(v17 - 8);
  __chkstk_darwin(v20);
  unint64_t v308 = (char *)&v284 - v22;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  uint64_t v351 = v23;
  uint64_t v352 = v24;
  uint64_t v353 = AssociatedConformanceWitness;
  uint64_t v354 = v26;
  uint64_t v317 = type metadata accessor for FileItemVersion();
  uint64_t v27 = sub_10096C890();
  uint64_t v318 = *(void *)(v27 - 8);
  uint64_t v319 = v27;
  __chkstk_darwin(v27);
  unint64_t v316 = (char *)&v284 - v28;
  uint64_t v29 = type metadata accessor for SnapshotItem();
  uint64_t v30 = sub_10096C890();
  uint64_t v314 = *(void *)(v30 - 8);
  unint64_t v315 = (void (*)(void, void))v30;
  uint64_t v31 = __chkstk_darwin(v30);
  v329 = (char *)&v284 - v32;
  uint64_t v327 = v29;
  uint64_t v328 = *(void *)(v29 - 8);
  __chkstk_darwin(v31);
  uint64_t v326 = (char *)&v284 - v33;
  uint64_t v34 = v349;
  uint64_t v35 = swift_getAssociatedTypeWitness();
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  uint64_t v351 = v35;
  uint64_t v352 = v36;
  uint64_t v353 = v37;
  uint64_t v354 = v38;
  uint64_t v39 = type metadata accessor for FileItemVersion();
  uint64_t v40 = sub_10096C890();
  uint64_t v334 = *(void *)(v40 - 8);
  v335 = (char *)v40;
  uint64_t v41 = __chkstk_darwin(v40);
  v313 = (char *)&v284 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  v331 = (char *)&v284 - v44;
  uint64_t v333 = v39;
  uint64_t v336 = *(void *)(v39 - 8);
  __chkstk_darwin(v43);
  v330 = (char *)&v284 - v45;
  uint64_t v46 = AssociatedTypeWitness;
  uint64_t v47 = sub_10096C890();
  uint64_t v340 = *(void *)(v47 - 8);
  uint64_t v341 = v47;
  uint64_t v48 = __chkstk_darwin(v47);
  uint64_t v300 = (char *)&v284 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  v312 = (char *)&v284 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  char v342 = (char *)&v284 - v53;
  uint64_t v343 = *(void *)(v46 - 8);
  uint64_t v54 = __chkstk_darwin(v52);
  v296 = (char *)&v284 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __chkstk_darwin(v54);
  v301 = (char *)&v284 - v57;
  __chkstk_darwin(v56);
  v337 = (char *)&v284 - v58;
  uint64_t v324 = v13;
  uint64_t v325 = v12;
  uint64_t v351 = v13;
  uint64_t v352 = v34;
  uint64_t v353 = v12;
  uint64_t v332 = v16;
  uint64_t v354 = v16;
  uint64_t v59 = type metadata accessor for ItemReconciliation();
  uint64_t v60 = sub_10096C890();
  uint64_t v338 = *(void *)(v60 - 8);
  uint64_t v339 = v60;
  uint64_t v61 = __chkstk_darwin(v60);
  uint64_t v63 = (char *)&v284 - v62;
  uint64_t v344 = *(void *)(v59 - 8);
  uint64_t v64 = __chkstk_darwin(v61);
  uint64_t v66 = (char *)&v284 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v64);
  uint64_t v69 = (char *)&v284 - v68;
  uint64_t v70 = __chkstk_darwin(v67);
  uint64_t v72 = (char *)&v284 - v71;
  __chkstk_darwin(v70);
  uint64_t v74 = (char *)&v284 - v73;
  uint64_t v75 = (void (*)(void, void))v347[2];
  uint64_t v76 = v346;
  uint64_t v77 = (uint64_t)&v348[*(void *)(v345 + 576)];
  sub_1000DF200(v77, (uint64_t)v63);
  if (!v76)
  {
    uint64_t v345 = v77;
    uint64_t v346 = 0;
    uint64_t v78 = v342;
    v290 = v66;
    uint64_t v291 = v75;
    v289 = v69;
    unint64_t v292 = v74;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v344 + 48))(v63, 1, v59) == 1)
    {
      (*(void (**)(char *, uint64_t))(v338 + 8))(v63, v339);
      return 0;
    }
    uint64_t v338 = (uint64_t)v72;
    uint64_t v79 = v344;
    uint64_t v80 = v292;
    (*(void (**)(void))(v344 + 32))();
    uint64_t v82 = v340;
    uint64_t v81 = v341;
    uint64_t v83 = *(void (**)(char *))(v340 + 16);
    uint64_t v84 = v78;
    uint64_t v339 = (uint64_t)&v80[*(int *)(v59 + 52)];
    v83(v78);
    uint64_t v85 = v343 + 48;
    unint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v343 + 48);
    if (v86(v84, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v59);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v81);
      return 0;
    }
    unint64_t v87 = (char *)v59;
    unint64_t v286 = v86;
    uint64_t v287 = v85;
    uint64_t v88 = v343 + 32;
    unint64_t v89 = v337;
    unint64_t v285 = *(void (**)(char *, char *, uint64_t))(v343 + 32);
    v285(v337, v84, AssociatedTypeWitness);
    uint64_t v288 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v91 = v334;
    uint64_t v90 = v335;
    uint64_t v92 = v331;
    (*(void (**)(char *, uint64_t, char *))(v334 + 16))(v331, v339 + *(int *)(v288 + 48), v335);
    uint64_t v93 = v336;
    uint64_t v94 = v333;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v336 + 48))(v92, 1, v333) == 1)
    {
      (*(void (**)(char *, uint64_t))(v343 + 8))(v89, AssociatedTypeWitness);
      (*(void (**)(char *, char *))(v344 + 8))(v292, v87);
      (*(void (**)(char *, char *))(v91 + 8))(v92, v90);
      return 0;
    }
    uint64_t v96 = v343;
    uint64_t v284 = v88;
    char v342 = v87;
    uint64_t v97 = v330;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v330, v92, v94);
    uint64_t v75 = (void (*)(void, void))v347[5];
    uint64_t v98 = v329;
    uint64_t v99 = v346;
    (*(void (**)(uint64_t, void))(*(void *)v75 + 248))(v345, *(void *)&v348[*(void *)(*(void *)v348 + 632)]);
    uint64_t v346 = v99;
    if (v99)
    {
      (*(void (**)(char *, uint64_t))(v93 + 8))(v97, v94);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v337, AssociatedTypeWitness);
LABEL_12:
      (*(void (**)(char *, char *))(v344 + 8))(v292, v342);
      return v75;
    }
    uint64_t v101 = v327;
    uint64_t v100 = v328;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v328 + 48))(v98, 1, v327) == 1)
    {
      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v94);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v337, AssociatedTypeWitness);
      (*(void (**)(char *, char *))(v344 + 8))(v292, v342);
      (*(void (**)(char *, void))(v314 + 8))(v98, v315);
      return 0;
    }
    unint64_t v315 = v75;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v326, v98, v101);
    uint64_t v102 = *(char **)(v96 + 16);
    uint64_t v103 = v312;
    uint64_t v104 = AssociatedTypeWitness;
    v331 = (char *)(v96 + 16);
    v329 = v102;
    ((void (*)(char *, char *, uint64_t))v102)(v312, v337, AssociatedTypeWitness);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v103, 0, 1, v104);
    unint64_t v105 = v348;
    uint64_t v106 = &v348[*(void *)(*(void *)v348 + 648)];
    swift_beginAccess();
    (*(void (**)(unsigned char *, char *, uint64_t))(v340 + 40))(v106, v103, v341);
    swift_endAccess();
    uint64_t v107 = v336;
    uint64_t v108 = v313;
    (*(void (**)(char *, char *, uint64_t))(v336 + 16))(v313, v330, v94);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v108, 0, 1, v94);
    char v109 = &v105[*(void *)(*(void *)v105 + 680)];
    swift_beginAccess();
    (*(void (**)(unsigned char *, char *, char *))(v334 + 40))(v109, v108, v335);
    swift_endAccess();
    uint64_t v334 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v110 = (uint64_t *)&v292[*(int *)(v334 + 68)];
    uint64_t v111 = *v110;
    uint64_t v112 = v110[1];
    unint64_t v113 = v110[2];
    uint64_t v114 = v110[3];
    uint64_t v115 = v110[4];
    uint64_t v116 = v110[5];
    uint64_t v117 = v110[6];
    unint64_t v118 = (uint64_t *)&v105[*(void *)(*(void *)v105 + 672)];
    uint64_t v119 = *v118;
    uint64_t v120 = v118[1];
    unint64_t v121 = v118[2];
    uint64_t v345 = v118[3];
    uint64_t v122 = v326;
    v335 = (char *)v118[5];
    *unint64_t v118 = v111;
    v118[1] = v112;
    v118[2] = v113;
    v118[3] = v114;
    v118[4] = v115;
    v118[5] = v116;
    v118[6] = v117;
    sub_10009C650(v111, v112, v113);
    uint64_t v123 = v105;
    sub_1000D35D8(v119, v120, v121);
    uint64_t v125 = v316;
    uint64_t v124 = v317;
    uint64_t v126 = *(void *)(v317 - 8);
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v316, &v122[*(int *)(v101 + 40)], v317);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v125, 0, 1, v124);
    uint64_t v127 = &v105[*(void *)(*(void *)v105 + 656)];
    swift_beginAccess();
    (*(void (**)(unsigned char *, char *, uint64_t))(v318 + 40))(v127, v125, v319);
    swift_endAccess();
    uint64_t v128 = v343;
    uint64_t v129 = *(void *)(*(void *)v105 + 688);
    v105[v129] = 0;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v131 = (void (*)(void, void, void))v321;
    sub_100619010(v101, WitnessTable, (uint64_t)v321);
    uint64_t v132 = v320;
    uint64_t v75 = v291;
    uint64_t v133 = v346;
    sub_1000E5ECC((uint64_t)v131, v320);
    uint64_t v346 = v133;
    if (v133)
    {
      (*(void (**)(void (*)(void, void, void), void))(v322 + 8))(v131, v323);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v122, v101);
      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v337, AssociatedTypeWitness);
      goto LABEL_12;
    }
    uint64_t v345 = v129;
    (*(void (**)(void (*)(void, void, void), void))(v322 + 8))(v131, v323);
    uint64_t v135 = v310;
    uint64_t v134 = v311;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v311 + 48))(v132, 1, v310) == 1)
    {
      (*(void (**)(char *, uint64_t))(v328 + 8))(v122, v327);
      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
      (*(void (**)(char *, uint64_t))(v343 + 8))(v337, AssociatedTypeWitness);
      (*(void (**)(char *, char *))(v344 + 8))(v292, v342);
      (*(void (**)(uint64_t, uint64_t))(v309 + 8))(v132, v307);
      return 0;
    }
    uint64_t v136 = v308;
    (*(void (**)(char *, uint64_t, uint64_t))(v134 + 32))(v308, v132, v135);
    uint64_t v323 = (void (*)(void, void))v347[4];
    BOOL v137 = sub_1005152D8();
    uint64_t v138 = *(int *)(v135 + 40);
    uint64_t v139 = &v136[v138];
    if (!v137)
    {
      v139[*(int *)(type metadata accessor for ItemMetadata() + 80)] = 0;
      uint64_t v146 = v307;
      uint64_t v147 = v309;
      goto LABEL_96;
    }
    v335 = &v136[v138];
    int v140 = *v139;
    uint64_t v141 = v344;
    uint64_t v142 = v344 + 16;
    uint64_t v143 = v338;
    uint64_t v144 = v342;
    uint64_t v321 = *(void **)(v344 + 16);
    ((void (*)(uint64_t, char *, char *))v321)(v338, v292, v342);
    if (v140 == 2)
    {
      uint64_t v322 = *(void *)(v141 + 8);
      ((void (*)(uint64_t, char *))v322)(v143, v144);
      BOOL v145 = 0;
    }
    else
    {
      char v148 = *(unsigned char *)(v143 + *(int *)(v334 + 52));
      uint64_t v322 = *(void *)(v141 + 8);
      ((void (*)(uint64_t, char *))v322)(v143, v144);
      BOOL v145 = (v148 & 0xFB) == 0;
    }
    uint64_t v338 = type metadata accessor for ItemMetadata();
    uint64_t v149 = *(int *)(v338 + 80);
    uint64_t v150 = v335;
    v335[v149] = v145;
    uint64_t v151 = *(void *)((char *)v123 + *(void *)(*v123 + 640));
    uint64_t v152 = v330;
    uint64_t v153 = (void (*)(char *, char *, char *))v321;
    if ((v151 & 0x10) != 0)
    {
      uint64_t v154 = v123[17];
      if (v154)
      {
        v150[v149] = 0;
        goto LABEL_30;
      }
      if ((v154 & 2) != 0)
      {
        uint64_t v319 = v142;
        uint64_t v320 = v151;
        v150[v149] = 1;
        uint64_t v175 = (void (*)(void, void))v347[3];
        uint64_t v176 = v349;
        uint64_t v351 = v349;
        uint64_t v177 = v324;
        uint64_t v178 = v325;
        uint64_t v352 = v324;
        uint64_t v179 = v332;
        uint64_t v353 = v332;
        uint64_t v354 = v325;
        uint64_t v347 = (void *)type metadata accessor for ItemJob();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
        swift_allocObject();
        uint64_t v181 = sub_10096C0D0();
        uint64_t v351 = v176;
        uint64_t v352 = v177;
        uint64_t v353 = v179;
        uint64_t v354 = v178;
        uint64_t *v182 = type metadata accessor for Materialization.EvictItem();
        uint64_t v183 = sub_1003FC080(v181);
        uint64_t v75 = v175;
        uint64_t v184 = v346;
        uint64_t v185 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v175 + 272))(v337, v183);
        uint64_t v346 = v184;
        if (v184) {
          goto LABEL_62;
        }
        uint64_t v200 = v185;
        swift_bridgeObjectRelease();
        uint64_t v351 = v200;
        sub_10096C1C0();
        swift_getWitnessTable();
        char v201 = sub_10096C460();
        swift_bridgeObjectRelease();
        if ((v201 & 1) == 0)
        {
          uint64_t v123 = v348;
          v348[v345] = 1;
          goto LABEL_69;
        }
LABEL_65:
        uint64_t v123 = v348;
LABEL_69:
        uint64_t v147 = v309;
        uint64_t v157 = v339;
        uint64_t v158 = v288;
        uint64_t v151 = v320;
        uint64_t v153 = (void (*)(char *, char *, char *))v321;
LABEL_35:
        uint64_t v159 = v342;
        uint64_t v161 = v289;
        uint64_t v160 = v290;
        if ((*(unsigned char *)(v157 + *(int *)(v158 + 36)) & 0x10) != 0)
        {
          v335[*(int *)(v338 + 84)] = 0;
          uint64_t v162 = v292;
          v153(v161, v292, v159);
          uint64_t v320 = v151;
          if ((v151 & 0x100000000000) != 0)
          {
            uint64_t v167 = v159;
            int v168 = v161[*((int *)v159 + 14)];
            ((void (*)(char *, char *))v322)(v161, v167);
            if (v168 == 1) {
              v335[*(int *)(v338 + 60)] = 1;
            }
            uint64_t v159 = v342;
            ((void (*)(char *, char *, char *))v321)(v160, v292, v342);
            uint64_t v151 = v320;
            goto LABEL_45;
          }
          ((void (*)(char *, char *))v322)(v161, v159);
          ((void (*)(char *, char *, char *))v321)(v160, v162, v159);
          uint64_t v151 = v320;
        }
        else
        {
          v153(v290, v292, v342);
          if ((v151 & 0x100000000000) != 0)
          {
LABEL_45:
            uint64_t v169 = v159;
            int v170 = v160[*((int *)v159 + 14)];
            ((void (*)(char *, char *))v322)(v160, v169);
            if (v170 == 1)
            {
              uint64_t v171 = *(int *)(v338 + 60);
              if ((v335[v171] & 1) == 0)
              {
                uint64_t v172 = v151;
                uint64_t v75 = v323;
                uint64_t v173 = v346;
                (*(void (**)(char *, uint64_t))(*(void *)v323 + 240))(v337, 1);
                uint64_t v346 = v173;
                if (v173)
                {
                  (*(void (**)(char *, uint64_t))(v311 + 8))(v308, v310);
                  (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                  (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                  (*(void (**)(char *, uint64_t))(v343 + 8))(v337, AssociatedTypeWitness);
                  ((void (*)(char *, char *))v322)(v292, v342);
                  return v75;
                }
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v297 + 48))(v299, 1, v298) == 1)
                {
                  (*(void (**)(char *, uint64_t))(v294 + 8))(v299, v295);
                }
                else
                {
                  uint64_t v203 = v297;
                  uint64_t v202 = v298;
                  uint64_t v204 = v293;
                  (*(void (**)(char *, char *, uint64_t))(v297 + 32))(v293, v299, v298);
                  int v205 = v204[*(int *)(v202 + 48) + *(int *)(v338 + 72)];
                  (*(void (**)(char *, uint64_t))(v203 + 8))(v204, v202);
                  if (v205 == 1)
                  {
                    uint64_t v206 = v335;
                    v335[*(int *)(v338 + 72)] = 1;
                    v206[v171] = 1;
                  }
                }
                uint64_t v123 = v348;
                uint64_t v147 = v309;
                uint64_t v151 = v172;
              }
            }
            if (!fpfs_supports_pkg_dataless_escape_prevention()
              || (uint64_t v207 = *(int *)(v338 + 60), (v335[v207] & 1) != 0))
            {
              uint64_t v163 = AssociatedTypeWitness;
              uint64_t v135 = v310;
              uint64_t v164 = (void (*)(char *, char *, uint64_t))v329;
              uint64_t v165 = v301;
              uint64_t v166 = v334;
              goto LABEL_76;
            }
            if (v335[*(int *)(v338 + 108)] == 1) {
              v335[v207] = 1;
            }
            uint64_t v163 = AssociatedTypeWitness;
            uint64_t v147 = v309;
            uint64_t v135 = v310;
            uint64_t v123 = v348;
LABEL_41:
            uint64_t v164 = (void (*)(char *, char *, uint64_t))v329;
            uint64_t v165 = v301;
            uint64_t v166 = v334;
LABEL_76:
            if ((v151 & 0x10010) == 0 || (uint64_t v208 = *(int *)(v338 + 84), !v335[v208]))
            {
              uint64_t v215 = v335;
              goto LABEL_84;
            }
            uint64_t v320 = v151;
            uint64_t v209 = v323;
            uint64_t v210 = *(void *)&v292[*(int *)(v166 + 36)];
            v164(v165, v337, v163);
            if ((v210 & 0x10) != 0)
            {
              (*(void (**)(char *, uint64_t))(v343 + 8))(v165, AssociatedTypeWitness);
              uint64_t v215 = v335;
              LODWORD(v151) = v320;
            }
            else
            {
              uint64_t v211 = v346;
              char v212 = (*(uint64_t (**)(char *))(*(void *)v209 + 464))(v165);
              uint64_t v346 = v211;
              if (v211)
              {
                uint64_t v75 = *(void (**)(void, void))(v343 + 8);
                uint64_t v213 = v165;
                uint64_t v214 = AssociatedTypeWitness;
                v75(v213, AssociatedTypeWitness);
                (*(void (**)(char *, uint64_t))(v311 + 8))(v308, v135);
                (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                v75(v337, v214);
                goto LABEL_90;
              }
              char v267 = v212;
              (*(void (**)(char *, uint64_t))(v343 + 8))(v165, AssociatedTypeWitness);
              uint64_t v215 = v335;
              LODWORD(v151) = v320;
              if ((v267 & 1) == 0)
              {
LABEL_84:
                if ((v151 & 0x10000) == 0)
                {
                  uint64_t v146 = v307;
                  uint64_t v136 = v308;
                  goto LABEL_96;
                }
                uint64_t v136 = v308;
                if (v215[*(int *)(v338 + 84)])
                {
                  uint64_t v216 = v346;
                  uint64_t v217 = (*(uint64_t (**)(char *))(*(void *)v323 + 520))(v308);
                  uint64_t v346 = v216;
                  uint64_t v218 = v336;
                  if (v216)
                  {
                    (*(void (**)(char *, uint64_t))(v311 + 8))(v136, v135);
                    (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                    uint64_t v219 = *(void (**)(char *, uint64_t))(v218 + 8);
                    uint64_t v75 = (void (*)(void, void))(v218 + 8);
                    v219(v330, v333);
                    goto LABEL_89;
                  }
                  *(void *)&v215[*(int *)(v338 + 76)] = v217;
                  uint64_t v146 = v307;
                }
                else
                {
                  uint64_t v146 = v307;
                }
LABEL_96:
                uint64_t v220 = v303;
                uint64_t v221 = v311;
                v222 = v136;
                (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v303, v136, v135);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v221 + 56))(v220, 0, 1, v135);
                uint64_t v223 = v220;
                v224 = (char *)v123 + *(void *)(*v123 + 664);
                swift_beginAccess();
                (*(void (**)(char *, char *, uint64_t))(v147 + 40))(v224, v223, v146);
                swift_endAccess();
                uint64_t v225 = *(void *)((char *)v123 + *(void *)(*v123 + 640));
                v226 = v123;
                uint64_t v227 = (uint64_t)v304;
                if (v225 == 16)
                {
                  uint64_t v228 = v222;
                  if ((v226[136] & 2) != 0)
                  {
                    swift_beginAccess();
                    sub_1003B32B0((uint64_t)(v226 + 56), (uint64_t)&v351);
                    uint64_t v349 = *((void *)v226 + 15);
                    sub_10096D230();
                    uint64_t v229 = *(void *)(v302 + 72);
                    swift_allocObject();
                    v348 = (unsigned char *)sub_10096C0D0();
                    uint64_t v231 = v230;
                    v232 = v337;
                    uint64_t v233 = AssociatedTypeWitness;
                    v234 = (void (*)(uint64_t, char *, uint64_t))v329;
                    ((void (*)(uint64_t, char *, uint64_t))v329)(v230, v337, AssociatedTypeWitness);
                    swift_storeEnumTagMultiPayload();
                    uint64_t v235 = v231 + v229;
                    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
                    uint64_t v237 = v235 + *(int *)(TupleTypeMetadata3 + 48);
                    uint64_t v238 = v311;
                    uint64_t v239 = v235 + *(int *)(TupleTypeMetadata3 + 64);
                    v234(v235, v232, v233);
                    uint64_t v240 = v237;
                    int v241 = v308;
                    v234(v240, v308, v233);
                    uint64_t v242 = v239;
                    v243 = v241;
                    v234(v242, v241, v233);
                    swift_storeEnumTagMultiPayload();
                    sub_1003FC080((uint64_t)v348);
                    uint64_t v75 = (void (*)(void, void))sub_1001E2584();
                    swift_bridgeObjectRelease();
                    sub_1003B3318((uint64_t)&v351);
                    (*(void (**)(char *, uint64_t))(v238 + 8))(v243, v310);
                    (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                    (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                    (*(void (**)(char *, uint64_t))(v343 + 8))(v232, v233);
                    goto LABEL_12;
                  }
                }
                else
                {
                  uint64_t v228 = v222;
                  if ((v225 & 8) != 0 && v222[*(int *)(v135 + 40)] == 2)
                  {
                    uint64_t v244 = v348;
                    swift_beginAccess();
                    sub_1003B32B0((uint64_t)(v244 + 56), (uint64_t)&v351);
                    uint64_t v245 = *((void *)v244 + 15);
                    uint64_t v246 = AssociatedTypeWitness;
                    ((void (*)(uint64_t, char *, uint64_t))v329)(v227, v222, AssociatedTypeWitness);
                    uint64_t v247 = v305;
                    swift_storeEnumTagMultiPayload();
                    uint64_t v75 = (void (*)(void, void))sub_1001E3E98((uint64_t)&v351, v245, v227);
                    (*(void (**)(uint64_t, uint64_t))(v302 + 8))(v227, v247);
                    sub_1003B3318((uint64_t)&v351);
                    (*(void (**)(char *, uint64_t))(v311 + 8))(v222, v135);
                    (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                    (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                    (*(void (**)(char *, uint64_t))(v343 + 8))(v337, v246);
                    goto LABEL_12;
                  }
                  v226 = v348;
                  if ((v225 & 2) != 0)
                  {
                    uint64_t v75 = v323;
                    uint64_t v254 = v300;
                    uint64_t v255 = v337;
                    uint64_t v256 = v346;
                    (*(void (**)(char *))(*(void *)v323 + 280))(v337);
                    uint64_t v346 = v256;
                    if (v256)
                    {
                      (*(void (**)(char *, uint64_t))(v311 + 8))(v222, v135);
                      (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                      (*(void (**)(char *, uint64_t))(v343 + 8))(v255, AssociatedTypeWitness);
                    }
                    else if (v286(v254, 1, AssociatedTypeWitness) == 1)
                    {
                      (*(void (**)(char *, uint64_t))(v340 + 8))(v300, v341);
                      uint64_t v257 = v348;
                      swift_beginAccess();
                      sub_1003B32B0((uint64_t)(v257 + 56), (uint64_t)&v351);
                      uint64_t v349 = *((void *)v257 + 15);
                      uint64_t v258 = AssociatedTypeWitness;
                      uint64_t v259 = swift_getTupleTypeMetadata3();
                      uint64_t v260 = (uint64_t)v304;
                      os_log_t v261 = &v304[*(int *)(v259 + 48)];
                      uint64_t v262 = &v304[*(int *)(v259 + 64)];
                      uint64_t v263 = v337;
                      BOOL v264 = (void (*)(char *, char *, uint64_t))v329;
                      ((void (*)(char *, char *, uint64_t))v329)(v304, v337, v258);
                      v265 = v308;
                      v264(v261, v308, v258);
                      v264(v262, v265, v258);
                      uint64_t v266 = v305;
                      swift_storeEnumTagMultiPayload();
                      uint64_t v75 = (void (*)(void, void))sub_1001E3E98((uint64_t)&v351, v349, v260);
                      (*(void (**)(uint64_t, uint64_t))(v302 + 8))(v260, v266);
                      sub_1003B3318((uint64_t)&v351);
                      (*(void (**)(char *, uint64_t))(v311 + 8))(v265, v310);
                      (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                      (*(void (**)(char *, uint64_t))(v343 + 8))(v263, v258);
                    }
                    else
                    {
                      v268 = v296;
                      uint64_t v269 = AssociatedTypeWitness;
                      v285(v296, v300, AssociatedTypeWitness);
                      v270 = v348;
                      swift_beginAccess();
                      sub_1003B32B0((uint64_t)(v270 + 56), (uint64_t)&v351);
                      uint64_t v349 = *((void *)v270 + 15);
                      uint64_t v271 = swift_getTupleTypeMetadata3();
                      uint64_t v272 = (uint64_t)v304;
                      v273 = &v304[*(int *)(v271 + 48)];
                      v274 = &v304[*(int *)(v271 + 64)];
                      uint64_t v275 = (void (*)(char *, char *, uint64_t))v329;
                      ((void (*)(char *, char *, uint64_t))v329)(v304, v337, v269);
                      v275(v273, v268, v269);
                      v276 = v308;
                      v275(v274, v308, v269);
                      uint64_t v277 = v305;
                      swift_storeEnumTagMultiPayload();
                      uint64_t v75 = (void (*)(void, void))sub_1001E3E98((uint64_t)&v351, v349, v272);
                      (*(void (**)(uint64_t, uint64_t))(v302 + 8))(v272, v277);
                      sub_1003B3318((uint64_t)&v351);
                      os_log_type_t v278 = *(void (**)(char *, uint64_t))(v343 + 8);
                      v278(v268, v269);
                      (*(void (**)(char *, uint64_t))(v311 + 8))(v276, v310);
                      (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                      v278(v337, v269);
                    }
                    goto LABEL_12;
                  }
                }
                swift_beginAccess();
                sub_1003B32B0((uint64_t)(v226 + 56), (uint64_t)&v351);
                uint64_t v349 = *((void *)v226 + 15);
                uint64_t v248 = AssociatedTypeWitness;
                uint64_t v249 = swift_getTupleTypeMetadata3();
                uint64_t v250 = v227 + *(int *)(v249 + 48);
                uint64_t v251 = v302;
                uint64_t v252 = v305;
                v348 = (unsigned char *)(v227 + *(int *)(v249 + 64));
                v253 = (void (*)(uint64_t, char *, uint64_t))v329;
                ((void (*)(uint64_t, char *, uint64_t))v329)(v227, v337, v248);
                v253(v250, v228, v248);
                v253((uint64_t)v348, v228, v248);
                swift_storeEnumTagMultiPayload();
                uint64_t v75 = (void (*)(void, void))sub_1001E3E98((uint64_t)&v351, v349, v227);
                (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v227, v252);
                sub_1003B3318((uint64_t)&v351);
                (*(void (**)(char *, uint64_t))(v311 + 8))(v228, v310);
                (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                (*(void (**)(char *, uint64_t))(v343 + 8))(v337, v248);
                goto LABEL_12;
              }
            }
            v215[v208] = 0;
            goto LABEL_84;
          }
        }
        ((void (*)(char *, char *))v322)(v160, v159);
        fpfs_supports_pkg_dataless_escape_prevention();
        uint64_t v163 = AssociatedTypeWitness;
        uint64_t v135 = v310;
        goto LABEL_41;
      }
    }
    if (v145) {
      goto LABEL_34;
    }
LABEL_30:
    if ((v151 & 0x10010) == 0)
    {
      v150[*(int *)(v338 + 84)] = 1;
LABEL_34:
      uint64_t v147 = v309;
      uint64_t v157 = v339;
      uint64_t v158 = v288;
      goto LABEL_35;
    }
    uint64_t v75 = v315;
    uint64_t v155 = v326;
    uint64_t v156 = v346;
    (*(void (**)(void *__return_ptr, char *))(*(void *)v315 + 264))(v355, v326);
    uint64_t v346 = v156;
    if (v156)
    {
      (*(void (**)(char *, uint64_t))(v311 + 8))(v308, v310);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v155, v327);
      (*(void (**)(char *, uint64_t))(v336 + 8))(v152, v333);
LABEL_89:
      (*(void (**)(char *, uint64_t))(v343 + 8))(v337, AssociatedTypeWitness);
      goto LABEL_90;
    }
    uint64_t v319 = v142;
    uint64_t v320 = v151;
    sub_10001AE98((uint64_t)v355, (uint64_t)v356, &qword_100AD0EA0);
    if (sub_1000DBD64((uint64_t)v356) == 1)
    {
      char v174 = 6;
    }
    else
    {
      long long v370 = v356[12];
      long long v371 = v356[13];
      long long v372 = v356[14];
      uint64_t v373 = v357;
      long long v366 = v356[8];
      long long v367 = v356[9];
      long long v368 = v356[10];
      long long v369 = v356[11];
      long long v362 = v356[4];
      long long v363 = v356[5];
      long long v364 = v356[6];
      long long v365 = v356[7];
      long long v358 = v356[0];
      long long v359 = v356[1];
      long long v360 = v356[2];
      long long v361 = v356[3];
      char v186 = (*(uint64_t (**)(void))(*v347 + 520))();
      char v174 = sub_1006A0A80(v186 & 1, v150);
      sub_10012F1D0(v355, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      if (v174 == 5) {
        goto LABEL_58;
      }
    }
    uint64_t v75 = v323;
    uint64_t v187 = v346;
    char v188 = (*(uint64_t (**)(char *, void))(*(void *)v323 + 304))(v337, 0);
    uint64_t v346 = v187;
    if (v187)
    {
LABEL_63:
      (*(void (**)(char *, uint64_t))(v311 + 8))(v308, v310);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
      (*(void (**)(char *, uint64_t))(v343 + 8))(v337, AssociatedTypeWitness);
LABEL_90:
      ((void (*)(char *, char *))v322)(v292, v342);
      return v75;
    }
    if ((v188 & 1) == 0)
    {
      if ((v348[140] & 0x44) != 0)
      {
        char v174 = 3;
      }
      else if (v174 == 6)
      {
LABEL_60:
        if ((v320 & 0x10) != 0)
        {
          Swift::String v189 = (void (*)(void, void))v347[3];
          uint64_t v190 = v349;
          uint64_t v351 = v349;
          uint64_t v192 = v324;
          uint64_t v191 = v325;
          uint64_t v352 = v324;
          uint64_t v193 = v332;
          uint64_t v353 = v332;
          uint64_t v354 = v325;
          uint64_t v347 = (void *)type metadata accessor for ItemJob();
          uint64_t v194 = swift_getMetatypeMetadata();
          sub_1006F0030(v194, v194);
          swift_allocObject();
          uint64_t v195 = sub_10096C0D0();
          uint64_t v351 = v190;
          uint64_t v352 = v192;
          uint64_t v353 = v193;
          uint64_t v354 = v191;
          uint64_t *v196 = type metadata accessor for Materialization.MaterializeItem();
          uint64_t v197 = sub_1003FC080(v195);
          uint64_t v75 = v189;
          uint64_t v198 = v346;
          uint64_t v199 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v189 + 272))(v337, v197);
          uint64_t v346 = v198;
          if (v198)
          {
LABEL_62:
            swift_bridgeObjectRelease();
            goto LABEL_63;
          }
          uint64_t v279 = v199;
          swift_bridgeObjectRelease();
          uint64_t v350 = v279;
          sub_10096C1C0();
          swift_getWitnessTable();
          sub_10096C450();
          swift_bridgeObjectRelease();
          if (v351)
          {
            int v280 = *(unsigned __int8 *)(v351 + 112);
            if (v280 == 3 || v280 == 4 && !(*(void *)(v351 + 96) & 0xFFFFFFFFFFFFFFFELL | *(void *)(v351 + 104)))
            {
              swift_release();
            }
            else
            {
              uint64_t v281 = *(void *)(v351 + 136);
              swift_release();
              if ((v281 & 0x800000) != 0)
              {
                uint64_t v282 = *(int *)(v338 + 84);
                unsigned int v283 = v335[v282];
                if (v283 == 1)
                {
                  LOBYTE(v283) = 4;
                }
                else if (v335[v282] && v283 <= 4)
                {
                  LOBYTE(v283) = 4;
                }
                v335[v282] = v283;
              }
            }
          }
        }
        goto LABEL_65;
      }
LABEL_59:
      v335[*(int *)(v338 + 84)] = v174;
      goto LABEL_60;
    }
LABEL_58:
    char v174 = 5;
    goto LABEL_59;
  }
  return v75;
}

void sub_10041BEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v75 = (void *)a8;
  uint64_t v87 = a7;
  uint64_t v84 = a6;
  uint64_t v90 = a5;
  uint64_t v71 = a4;
  uint64_t v88 = a1;
  uint64_t v89 = a3;
  uint64_t v74 = (void *)a2;
  uint64_t v12 = *v10;
  uint64_t v13 = *(void *)(*v10 + 624);
  uint64_t v14 = *(void *)(*v10 + 608);
  uint64_t v73 = a10;
  uint64_t v72 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v92 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v94 = swift_getAssociatedConformanceWitness();
  uint64_t v86 = type metadata accessor for FileItemVersion();
  uint64_t v82 = *(void *)(v86 - 8);
  uint64_t v70 = *(void *)(v82 + 64);
  __chkstk_darwin(v86);
  uint64_t v85 = (char *)&v58 - v15;
  uint64_t v66 = v12;
  uint64_t v16 = *(void *)(v12 + 616);
  uint64_t v17 = *(void *)(v12 + 600);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v18;
  uint64_t v92 = v19;
  uint64_t AssociatedConformanceWitness = v20;
  uint64_t v94 = v21;
  uint64_t v83 = type metadata accessor for FileItemVersion();
  uint64_t v79 = *(void *)(v83 - 8);
  uint64_t v67 = *(void *)(v79 + 64);
  __chkstk_darwin(v83);
  uint64_t v81 = (char *)&v58 - v22;
  uint64_t v69 = v13;
  uint64_t v68 = v14;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  uint64_t v80 = type metadata accessor for ItemState();
  uint64_t v77 = *(void *)(v80 - 8);
  uint64_t v63 = *(void *)(v77 + 64);
  uint64_t v25 = __chkstk_darwin(v80);
  uint64_t v78 = (char *)&v58 - v26;
  uint64_t v27 = v23;
  uint64_t v76 = *(void *)(v23 - 8);
  uint64_t v60 = *(void *)(v76 + 64);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v58 - v28;
  uint64_t v59 = (char *)&v58 - v28;
  uint64_t v62 = v16;
  uint64_t v61 = v17;
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v27;
  uint64_t v92 = v30;
  uint64_t v32 = v27;
  uint64_t v58 = v27;
  uint64_t AssociatedConformanceWitness = v24;
  uint64_t v94 = v31;
  uint64_t v33 = type metadata accessor for ReconciliationID();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v58 - v35;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))((char *)&v58 - v35, (char *)v10 + *(void *)(v66 + 576), v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = v84;
  uint64_t v66 = (*(uint64_t (**)(char *))(*(void *)v84 + 480))(v36);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
  uint64_t v65 = (v10[17] >> 33) & 0x40;
  uint64_t v38 = *(void *)(*(void *)(v37 + 32) + 16);
  uint64_t v64 = *(void *)((char *)v11 + *(void *)(*v11 + 640));
  uint64_t v39 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v29, v88, v32);
  uint64_t v40 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v78, v89, v80);
  uint64_t v41 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v81, v71, v83);
  uint64_t v42 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v85, v90, v86);
  unint64_t v43 = (*(unsigned __int8 *)(v39 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v44 = (v60 + *(unsigned __int8 *)(v40 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v45 = (v63 + *(unsigned __int8 *)(v41 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  unint64_t v46 = (v67 + *(unsigned __int8 *)(v42 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  unint64_t v47 = (v70 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = (char *)swift_allocObject();
  uint64_t v49 = v68;
  *((void *)v48 + 2) = v61;
  *((void *)v48 + 3) = v49;
  uint64_t v50 = v69;
  *((void *)v48 + 4) = v62;
  *((void *)v48 + 5) = v50;
  uint64_t v51 = v72;
  *((void *)v48 + 6) = v37;
  *((void *)v48 + 7) = v51;
  *((void *)v48 + 8) = v73;
  *((void *)v48 + 9) = v11;
  *((void *)v48 + 10) = v87;
  uint64_t v52 = v74;
  sub_10001AE98((uint64_t)v74, (uint64_t)(v48 + 88), (uint64_t *)&unk_100ACF710);
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(&v48[v43], v59, v58);
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v48[v44], v78, v80);
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v48[v45], v81, v83);
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(&v48[v46], v85, v86);
  uint64_t v53 = (uint64_t)&v48[v47];
  uint64_t v54 = v75;
  sub_10001AE98((uint64_t)v75, v53, &qword_100AD0EA0);
  uint64_t v55 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t (*)(uint64_t, char), char *))(*(void *)v38 + 600);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100245AD4(v52, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
  sub_10012F1D0(v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
  uint64_t v56 = v52;
  uint64_t v57 = (void *)v66;
  v55(v88, v56, v89, v64, v90, v66, v54, v65, sub_10042E750, v48);
  swift_release();
  swift_release();
}

uint64_t sub_10041C7D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13)
{
  if (a2)
  {
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a4;
    *(void *)(v23 + 24) = a5;
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = a6;
    v24[3] = a1;
    v24[4] = a4;
    v24[5] = a5;
    v24[6] = a3;
    v24[7] = a7;
    char v25 = 1;
    sub_1000D5B30(a1, 1);
    swift_retain();
    sub_1000D5B30(a1, 1);
    uint64_t v26 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10035F220((uint64_t)"stageUpdate(itemID:capturedContent:requestedState:otherVersion:baseVersion:on:result:nonSyncableAttributes:completion:)", 119, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v23, (uint64_t)sub_10042EB4C, (uint64_t)v24, v26, (uint64_t)&type metadata for String);
    swift_release();
    swift_release();
  }
  else
  {
    sub_10001AE98((uint64_t)a8, (uint64_t)v28, (uint64_t *)&unk_100ACF710);
    if (v29 >> 60 == 11 || !sub_1005152D8())
    {
      swift_retain();
      sub_10041CF6C(a9, a8, a1, a10, a11, a12, a3, a7, a13, a4, a5);
    }
    else
    {
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = a4;
      *(void *)(v20 + 24) = a5;
      uint64_t v21 = (void *)swift_allocObject();
      v21[2] = a4;
      v21[3] = a5;
      v21[4] = a1;
      sub_1000D5B30(a1, 0);
      swift_retain();
      sub_1000D5B30(a1, 0);
      uint64_t v22 = type metadata accessor for Continuation();
      swift_retain();
      sub_10035F220((uint64_t)"stageUpdate(itemID:capturedContent:requestedState:otherVersion:baseVersion:on:result:nonSyncableAttributes:completion:)", 119, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v20, (uint64_t)sub_10042EADC, (uint64_t)v21, v22, (uint64_t)&type metadata for String);
      swift_release();
      swift_release();
    }
    char v25 = 0;
  }
  return sub_10042EAB4(a1, v25, (uint64_t (*)(void))&_swift_release);
}

uint64_t sub_10041CAE0(uint64_t *a1, uint64_t a2, void (*a3)(void, void, void, int8x16_t *), uint64_t a4, void *a5, uint64_t a6)
{
  unint64_t v45 = a5;
  uint64_t v46 = a6;
  uint64_t v37 = a4;
  uint64_t v38 = a3;
  uint64_t v44 = a2;
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(*a1 + 608);
  uint64_t v9 = *(void *)(*a1 + 624);
  uint64_t v43 = type metadata accessor for SnapshotItem();
  uint64_t v10 = sub_10096C890();
  __chkstk_darwin(v10 - 8);
  uint64_t v42 = (char *)&v37 - v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v41 = type metadata accessor for ItemState();
  uint64_t v12 = sub_10096C890();
  __chkstk_darwin(v12 - 8);
  uint64_t v39 = (char *)&v37 - v13;
  uint64_t v14 = *(void *)(v7 + 616);
  uint64_t v15 = *(void *)(v7 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v47 = AssociatedTypeWitness;
  uint64_t v48 = v17;
  uint64_t v49 = AssociatedConformanceWitness;
  uint64_t v50 = v19;
  uint64_t v20 = type metadata accessor for FileItemVersion();
  uint64_t v21 = sub_10096C890();
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v37 - v22;
  uint64_t v47 = v8;
  uint64_t v48 = v15;
  uint64_t v49 = v9;
  uint64_t v50 = v14;
  uint64_t v24 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v40 = v24[-1].i64[1];
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v37 - v25;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23, 1, 1, v20);
  uint64_t v27 = *(uint64_t *)((char *)a1 + *(void *)(*a1 + 632));
  uint64_t v28 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 1, 1);
  unint64_t v29 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1);
  uint64_t v30 = *(void **)((char *)a1 + *(void *)(*a1 + 584));
  uint64_t v31 = v44;
  swift_errorRetain();
  id v32 = v30;
  uint64_t v33 = (uint64_t *)swift_retain();
  sub_1003B4A90(v33, (uint64_t)v23, v27, 0, v28, v29, 0, 0, v26, 0, v31, (uint64_t)v30);
  uint64_t v34 = v51;
  uint64_t v35 = sub_1003D25F0(v45, v46, v24);
  if (!v34)
  {
    v38(0, 0, 0, v35);
    swift_errorRelease();
  }
  return (*(uint64_t (**)(char *, int8x16_t *))(v40 + 8))(v26, v24);
}

uint64_t sub_10041CF6C(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v79 = a7;
  uint64_t v80 = a1;
  unint64_t v64 = a4;
  unint64_t v65 = a6;
  unint64_t v67 = a5;
  uint64_t v69 = a3;
  uint64_t v70 = a2;
  uint64_t v73 = a11;
  uint64_t v74 = a8;
  uint64_t v12 = *v11;
  uint64_t v13 = *(void *)(*v11 + 616);
  uint64_t v14 = *(void *)(*v11 + 600);
  uint64_t v71 = (void *)a9;
  uint64_t v72 = a10;
  uint64_t v68 = v13;
  uint64_t v66 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v84 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for FileItemVersion();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v76 = v15;
  uint64_t v77 = v16;
  uint64_t v63 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  uint64_t v75 = (char *)&v54 - v17;
  uint64_t v78 = v11;
  uint64_t v18 = *(void *)(v12 + 608);
  uint64_t v19 = *(void *)(v12 + 624);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v20;
  uint64_t v82 = v21;
  uint64_t AssociatedConformanceWitness = v22;
  uint64_t v84 = v23;
  uint64_t v24 = type metadata accessor for FileItemVersion();
  uint64_t v58 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v60 = *(void *)(v25 + 64);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v54 - v26;
  uint64_t v59 = (char *)&v54 - v26;
  uint64_t v62 = v19;
  uint64_t v61 = v18;
  uint64_t v28 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v29 = type metadata accessor for ItemState();
  uint64_t v56 = v29;
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(void *)(v30 + 64);
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v54 - v33;
  uint64_t v57 = (char *)&v54 - v33;
  uint64_t v35 = *(void *)(v28 - 8);
  uint64_t v36 = *(void *)(v35 + 64);
  __chkstk_darwin(v32);
  uint64_t v55 = (char *)&v54 - v37;
  (*(void (**)(void))(v35 + 16))();
  (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v34, v64, v29);
  uint64_t v54 = v25;
  (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v27, v65, v24);
  uint64_t v38 = v77;
  (*(void (**)(char *, unint64_t, uint64_t))(v77 + 16))(v75, v67, v76);
  unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v40 = (v36 + *(unsigned __int8 *)(v30 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v41 = (v31 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (*(unsigned __int8 *)(v25 + 80) + v42 + 56) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v60 = (v60 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v60 + 255) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (*(unsigned __int8 *)(v38 + 80) + v65 + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v67 = (v63 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = (char *)swift_allocObject();
  uint64_t v45 = v61;
  *((void *)v44 + 2) = v66;
  *((void *)v44 + 3) = v45;
  uint64_t v46 = v62;
  *((void *)v44 + 4) = v68;
  *((void *)v44 + 5) = v46;
  uint64_t v47 = v79;
  *((void *)v44 + 6) = v78;
  *((void *)v44 + 7) = v47;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v44[v39], v55, v28);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v44[v40], v57, v56);
  uint64_t v48 = v70;
  *(void *)&v44[v41] = v69;
  sub_10001AE98((uint64_t)v48, (uint64_t)&v44[v42], (uint64_t *)&unk_100ACF710);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v44[v43], v59, v58);
  uint64_t v49 = v71;
  sub_10001AE98((uint64_t)v71, (uint64_t)&v44[v60], &qword_100AD0EA0);
  uint64_t v50 = &v44[v65];
  uint64_t v51 = v73;
  *(void *)uint64_t v50 = v72;
  *((void *)v50 + 1) = v51;
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v44[v64], v75, v76);
  *(void *)&v44[v67] = v74;
  swift_retain();
  uint64_t v52 = v79;
  swift_retain();
  swift_retain();
  sub_100245AD4(v48, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
  sub_10012F1D0(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
  swift_retain();
  swift_retain();
  sub_10041D7F0(v80, v52, (uint64_t (*)(void *, void))sub_10042C9FC, (uint64_t)v44);
  return swift_release();
}

uint64_t sub_10041D690(char a1)
{
  *(void *)(v1 + 16) = 0;
  swift_release();
  if ((*(unsigned char *)(v1 + 136) & 2) == 0
    || (uint64_t v3 = v1 + *(void *)(*(void *)v1 + 664),
        swift_beginAccess(),
        swift_getAssociatedTypeWitness(),
        swift_getAssociatedConformanceWitness(),
        uint64_t v4 = type metadata accessor for ItemState(),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
    || *(unsigned char *)(v3 + *(int *)(v4 + 40)) != 1)
  {
    a1 = sub_100610458(a1 & 1);
  }
  return a1 & 1;
}

uint64_t sub_10041D7F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *, void), uint64_t a4)
{
  uint64_t v23 = a1;
  uint64_t v24 = (void *)*v4;
  uint64_t v25 = a2;
  uint64_t v7 = v24[78];
  uint64_t v8 = v24[76];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v13 = (char *)&v22 - v12;
  if ((*((unsigned char *)v4 + v24[80] + 6) & 4) == 0 || sub_1005152D8()) {
    return a3(_swiftEmptyArrayStorage, 0);
  }
  uint64_t v15 = swift_allocObject();
  uint64_t v22 = v15;
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v23, AssociatedTypeWitness);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (char *)swift_allocObject();
  uint64_t v19 = v24;
  *((void *)v18 + 2) = v24[75];
  *((void *)v18 + 3) = v8;
  *((void *)v18 + 4) = v19[77];
  *((void *)v18 + 5) = v7;
  *((void *)v18 + 6) = v25;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v18[v16], v13, AssociatedTypeWitness);
  uint64_t v20 = &v18[v17];
  *(void *)uint64_t v20 = a3;
  *((void *)v20 + 1) = a4;
  swift_retain_n();
  swift_retain();
  uint64_t v21 = sub_10002B7CC(&qword_100ACB5B8);
  sub_10035B1C8((uint64_t)"getListOfUpdatedConflicts(itemID:on:completion:)", 48, 2, (uint64_t)sub_10021E33C, v22, (uint64_t)sub_10042CEA4, (uint64_t)v18, v21);
  swift_release();
  return swift_release();
}

void *sub_10041DA9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *, void), uint64_t a4)
{
  uint64_t v74 = a4;
  uint64_t v73 = a3;
  uint64_t v6 = *(void *)(*(void *)a1 + 96);
  uint64_t v64 = *(void *)(*(void *)a1 + 80);
  uint64_t v65 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v67 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v71 = (char *)&v59 - v8;
  uint64_t v9 = sub_10096B480();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  __chkstk_darwin(v9);
  uint64_t v68 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_10096C890();
  uint64_t v72 = *(uint8_t **)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v59 - v14;
  uint64_t v16 = *(void *)(v11 - 8);
  __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v59 - v17;
  uint64_t v19 = v75;
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t))(**(void **)(a1 + 32) + 264))(v78, a2);
  if (!v19)
  {
    uint64_t v60 = v12;
    uint64_t v61 = v18;
    uint64_t v75 = a2;
    uint64_t v62 = v16;
    uint64_t v63 = v11;
    sub_10001AE98((uint64_t)v78, (uint64_t)v79, &qword_100AD0EA0);
    if (sub_1000DBD64((uint64_t)v79) == 1) {
      return (void *)v73(_swiftEmptyArrayStorage, 0);
    }
    uint64_t v21 = v80;
    uint64_t v22 = v73;
    if (!v80)
    {
      sub_10012F1D0(v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      return (void *)v22(_swiftEmptyArrayStorage, 0);
    }
    uint64_t v23 = *(void (**)(uint64_t))(**(void **)(a1 + 16) + 160);
    swift_bridgeObjectRetain();
    uint64_t v24 = v15;
    uint64_t v25 = v75;
    v23(v75);
    uint64_t v27 = v62;
    uint64_t v26 = v63;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v24, 1, v63) == 1)
    {
      swift_bridgeObjectRelease();
      sub_10012F1D0(v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      (*((void (**)(char *, uint64_t))v72 + 1))(v24, v60);
      return (void *)v22(_swiftEmptyArrayStorage, 0);
    }
    uint64_t v59 = 0;
    uint64_t v60 = v21;
    uint64_t v28 = v61;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v61, v24, v26);
    if (fpfs_supports_partial_conflicts_resolution())
    {
      uint64_t v29 = *(void **)(*(void *)(a1 + 40) + 16);
      uint64_t v30 = v29[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
      swift_beginAccess();
      uint64_t v31 = *(unsigned int *)(v30 + 8);
      uint64_t v32 = (void *)swift_allocObject();
      v32[2] = a1;
      v32[3] = v22;
      v32[4] = v74;
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t (*)(uint64_t, char), void *))(*v29 + 560);
      swift_retain();
      swift_retain();
      swift_retain();
      v33(v28, v31, v60, sub_10042CF58, v32);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_10012F1D0(v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v63);
    }
    else
    {
      unint64_t v76 = (unint64_t)_swiftEmptyArrayStorage;
      id v34 = (id)fpfs_current_or_default_log();
      uint64_t v35 = v68;
      sub_10096B490();
      uint64_t v36 = v25;
      uint64_t v37 = v66;
      uint64_t v38 = v67;
      unint64_t v39 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v71, v36, v67);
      unint64_t v40 = sub_10096B470();
      os_log_type_t v41 = sub_10096C5A0();
      if (os_log_type_enabled(v40, v41))
      {
        unint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        uint64_t v81 = v75;
        *(_DWORD *)unint64_t v42 = 136315138;
        uint64_t v72 = v42 + 4;
        swift_getAssociatedConformanceWitness();
        uint64_t v43 = sub_10096D220();
        uint64_t v77 = sub_100719D44(v43, v44, &v81);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v71, v38);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "⚔️  marking all loseres as resolved for %s", v42, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
      }

      (*(void (**)(char *, uint64_t))(v69 + 8))(v35, v70);
      uint64_t v45 = *(char **)(v60 + 16);
      if (v45)
      {
        uint64_t v46 = (uint64_t *)(v60 + 48);
        do
        {
          uint64_t v71 = v45;
          uint64_t v47 = *(v46 - 2);
          unint64_t v48 = *(v46 - 1);
          uint64_t v50 = *v46;
          uint64_t v49 = v46[1];
          unint64_t v52 = v46[2];
          uint64_t v51 = v46[3];
          uint64_t v53 = v46[5];
          uint64_t v68 = (char *)v46[4];
          sub_10001EBB0(v47, v48);
          uint64_t v69 = v50;
          swift_bridgeObjectRetain();
          sub_10001EBB0(v49, v52);
          swift_bridgeObjectRetain();
          uint64_t v70 = v51;
          swift_bridgeObjectRetain();
          sub_10001EBB0(v47, v48);
          sub_10001EBB0(v49, v52);
          swift_bridgeObjectRetain();
          v54.super.Class isa = sub_10096AF20().super.isa;
          uint64_t v72 = (uint8_t *)v52;
          v55.super.Class isa = sub_10096AF20().super.isa;
          uint64_t v75 = v49;
          if (v53)
          {
            NSString v56 = sub_10096BC00();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v56 = 0;
          }
          id v57 = [objc_allocWithZone((Class)NSFileProviderItemVersion) initWithContentVersion:v54.super.isa metadataVersion:v55.super.isa lastEditorDeviceName:v56];
          sub_10001E9C0(v75, (unint64_t)v72);
          sub_10001E9C0(v47, v48);

          [v57 setConflictResolved:1];
          id v58 = v57;
          sub_10096C070();
          if (*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_10096C0F0();
          }
          v46 += 8;
          sub_10096C150();
          sub_10096C0C0();

          sub_10001E9C0(v47, v48);
          swift_bridgeObjectRelease();
          sub_10001E9C0(v75, (unint64_t)v72);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v45 = v71 - 1;
        }
        while (v71 != (char *)1);
      }
      swift_bridgeObjectRelease();
      v73((void *)v76, 0);
      swift_bridgeObjectRelease();
      sub_10012F1D0(v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v61, v63);
    }
  }
  return result;
}

uint64_t sub_10041E450(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  a2 &= 1u;
  *(unsigned char *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a4;
  *(void *)(v10 + 40) = a5;
  swift_retain_n();
  sub_100359040(a1, a2);
  uint64_t v11 = sub_10002B7CC(&qword_100ACB5B8);
  sub_10035B468((uint64_t)"getListOfUpdatedConflicts(itemID:on:completion:)", 48, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_10021E33C, v9, (uint64_t)sub_10042CFC0, v10, v11);
  swift_release();

  return swift_release();
}

uint64_t sub_10041E580(uint64_t a1, char a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v9 = sub_10096B480();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v27 = a4;
    swift_errorRetain();
    id v14 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_errorRetain();
    uint64_t v15 = sub_10096B470();
    os_log_type_t v16 = sub_10096C5B0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v25 = v4;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v19 = swift_slowAlloc();
      os_log_t v26 = v15;
      uint64_t v20 = (void *)v19;
      uint64_t v24 = a3;
      *(_DWORD *)uint64_t v18 = 138412290;
      v23[1] = v18 + 4;
      swift_getErrorValue();
      id v21 = Error.prettyDescription.getter(v29);
      id v28 = v21;
      a3 = v24;
      sub_10096C8C0();
      *uint64_t v20 = v21;
      sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
      _os_log_impl((void *)&_mh_execute_header, v26, v16, "⚔️  Failed updateConflictList: %@", v18, 0xCu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      uint64_t v15 = v26;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_errorRetain();
    a3(a1, 1);
    sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
    return sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
  }
  else
  {
    if (a1) {
      uint64_t v13 = (void *)a1;
    }
    else {
      uint64_t v13 = _swiftEmptyArrayStorage;
    }
    return ((uint64_t (*)(void *, void))a3)(v13, 0);
  }
}

uint64_t sub_10041E868(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v76 = a7;
  uint64_t v77 = a8;
  uint64_t v81 = a5;
  uint64_t v82 = a6;
  uint64_t v80 = a4;
  LODWORD(v62) = a2;
  uint64_t v63 = a1;
  uint64_t v75 = a14;
  uint64_t v64 = a13;
  uint64_t v73 = a12;
  uint64_t v69 = a11;
  uint64_t v65 = (void *)*a3;
  uint64_t v15 = v65[77];
  uint64_t v16 = v65[75];
  uint64_t v72 = a10;
  uint64_t v74 = a9;
  uint64_t v70 = v16;
  uint64_t v71 = v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v86 = swift_getAssociatedConformanceWitness();
  uint64_t v79 = type metadata accessor for FileItemVersion();
  uint64_t v17 = *(void *)(v79 - 8);
  uint64_t v67 = *(void *)(v17 + 64);
  __chkstk_darwin(v79);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = v65[78];
  uint64_t v21 = v65[76];
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v68 = v20;
  uint64_t v66 = v21;
  swift_getAssociatedConformanceWitness();
  uint64_t v23 = type metadata accessor for ItemState();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = __chkstk_darwin(v23);
  id v28 = (char *)&v56 - v27;
  uint64_t v29 = *(void *)(v22 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v31 = __chkstk_darwin(v26);
  uint64_t v32 = v65;
  id v34 = (char *)&v56 - v33;
  uint64_t v35 = a3[17];
  uint64_t v78 = v19;
  if ((v35 & 0x200000) != 0 || (*((unsigned char *)a3 + v65[80] + 5) & 8) != 0)
  {
    uint64_t v36 = v31;
    uint64_t v37 = v22;
    uint64_t v38 = v17;
    if ((v35 & 0x8000000000) != 0) {
      uint64_t v42 = 66;
    }
    else {
      uint64_t v42 = 2;
    }
    uint64_t v39 = v64;
    uint64_t v40 = v63;
    char v41 = v62;
  }
  else
  {
    uint64_t v36 = v31;
    uint64_t v37 = v22;
    uint64_t v38 = v17;
    uint64_t v39 = v64;
    uint64_t v40 = v63;
    char v41 = v62;
    if ((v35 & 0x8000000000) != 0) {
      uint64_t v42 = 64;
    }
    else {
      uint64_t v42 = 0;
    }
  }
  if (v41) {
    uint64_t v40 = 0;
  }
  uint64_t v64 = v40;
  if (*((unsigned char *)a3 + v65[86])) {
    v42 |= 0x80uLL;
  }
  uint64_t v65 = (void *)v42;
  uint64_t v43 = v80;
  uint64_t v61 = *(void *)(*(void *)(v80 + 32) + 16);
  uint64_t v62 = *(void *)((char *)a3 + v32[80]);
  uint64_t v63 = *(void *)((char *)a3 + v32[73]);
  unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  id v58 = v34;
  uint64_t v57 = v37;
  v44(v34, v81, v37);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v60 = v28;
  uint64_t v59 = v36;
  v45(v28, v82, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v78, v39, v79);
  unint64_t v46 = (*(unsigned __int8 *)(v29 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v47 = (v30 + *(unsigned __int8 *)(v24 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v48 = (v25 + *(unsigned __int8 *)(v38 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v49 = (v67 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = (char *)swift_allocObject();
  uint64_t v51 = v66;
  *((void *)v50 + 2) = v70;
  *((void *)v50 + 3) = v51;
  uint64_t v52 = v68;
  *((void *)v50 + 4) = v71;
  *((void *)v50 + 5) = v52;
  *((void *)v50 + 6) = v43;
  *((void *)v50 + 7) = a3;
  uint64_t v53 = v73;
  *((void *)v50 + 8) = v69;
  *((void *)v50 + 9) = v53;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v50[v46], v58, v57);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v50[v47], v60, v59);
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v50[v48], v78, v79);
  *(void *)&v50[v49] = v75;
  NSData v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t (*)(uint64_t), char *))(*(void *)v61 + 624);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v54(v81, v82, v62, v76, v77, v74, v63, v65, v72, v64, sub_10042D47C, v50);
  swift_release();
  return swift_release();
}

uint64_t sub_10041EEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v64 = a8;
  uint64_t v60 = a6;
  uint64_t v61 = a7;
  uint64_t v73 = a4;
  uint64_t v74 = a5;
  uint64_t v59 = a1;
  uint64_t v66 = a3;
  uint64_t v67 = a9;
  uint64_t v9 = *(void **)a2;
  uint64_t v63 = *(void *)(*(void *)a2 + 104);
  uint64_t v62 = v9[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v78 = swift_getAssociatedConformanceWitness();
  uint64_t v72 = type metadata accessor for FileItemVersion();
  uint64_t v70 = *(void *)(v72 - 8);
  uint64_t v58 = *(void *)(v70 + 64);
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v48 - v11;
  uint64_t v65 = a2;
  uint64_t v12 = v9[12];
  uint64_t v13 = v9[10];
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v56 = v12;
  uint64_t v55 = v13;
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for ItemState();
  uint64_t v53 = v15;
  uint64_t v69 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v69 + 64);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v48 - v18;
  NSData v54 = (char *)&v48 - v18;
  uint64_t v51 = v14;
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v20 = *(void *)(v68 + 64);
  __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v48 - v21;
  uint64_t v52 = (char *)&v48 - v21;
  type metadata accessor for ItemPropagationResult();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v23 = sub_10096D510();
  uint64_t v49 = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v48 - v26;
  uint64_t v50 = (char *)&v48 - v26;
  uint64_t v28 = swift_allocObject();
  uint64_t v57 = v28;
  uint64_t v29 = v74;
  *(void *)(v28 + 16) = v73;
  *(void *)(v28 + 24) = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v59, v23);
  uint64_t v30 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v22, v60, v14);
  uint64_t v31 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v19, v61, v15);
  uint64_t v32 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v71, v64, v72);
  unint64_t v33 = (*(unsigned __int8 *)(v24 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v34 = (v25 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (*(unsigned __int8 *)(v30 + 80) + v34 + 8) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v36 = (v20 + *(unsigned __int8 *)(v31 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v37 = (v16 + *(unsigned __int8 *)(v32 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v38 = (v58 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = (char *)swift_allocObject();
  uint64_t v41 = v55;
  *((void *)v40 + 2) = v62;
  *((void *)v40 + 3) = v41;
  uint64_t v42 = v56;
  *((void *)v40 + 4) = v63;
  *((void *)v40 + 5) = v42;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v40[v33], v50, v49);
  uint64_t v43 = v66;
  *(void *)&v40[v34] = v66;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v40[v35], v52, v51);
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v40[v36], v54, v53);
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(&v40[v37], v71, v72);
  unint64_t v44 = &v40[v38];
  uint64_t v45 = v74;
  *(void *)unint64_t v44 = v73;
  *((void *)v44 + 1) = v45;
  *(void *)&v40[v39] = v65;
  *(void *)&v40[(v39 + 15) & 0xFFFFFFFFFFFFFFF8] = v67;
  uint64_t v46 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"update(itemID:capturedContent:stagedContext:requestedState:otherVersion:baseVersion:on:result:nonSyncableAttributes:completion:)", 128, 2u, (uint64_t)sub_10042D6D0, v43, (uint64_t)sub_1003B377C, v57, (uint64_t)sub_10042DD14, (uint64_t)v40, v46, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10041F5C8(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v171 = a8;
  uint64_t v156 = a7;
  uint64_t v157 = (void (*)(void, uint64_t, uint64_t, int8x16_t *))a6;
  uint64_t v165 = a5;
  uint64_t v179 = a4;
  uint64_t v154 = a3;
  Swift::String v189 = a1;
  uint64_t v10 = *a2;
  uint64_t v11 = *(void *)(*a2 + 624);
  uint64_t v12 = *(void *)(*a2 + 608);
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v174 = type metadata accessor for ItemState();
  uint64_t v14 = sub_10096C890();
  __chkstk_darwin(v14 - 8);
  uint64_t v187 = (uint64_t)&v150 - v15;
  uint64_t v16 = *(void *)(v10 + 616);
  char v188 = a2;
  uint64_t v17 = *(void *)(v10 + 600);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  v190[0] = v18;
  v190[1] = v19;
  uint64_t v191 = v20;
  uint64_t v192 = v21;
  uint64_t v164 = type metadata accessor for FileItemVersion();
  uint64_t v22 = sub_10096C890();
  __chkstk_darwin(v22 - 8);
  uint64_t v186 = (uint64_t)&v150 - v23;
  v190[0] = v12;
  v190[1] = v17;
  v161._countAndFlagsBits = v17;
  uint64_t v191 = v11;
  uint64_t v192 = v16;
  uint64_t v155 = v16;
  int v170 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v167 = v170[-1].i64[1];
  uint64_t v24 = __chkstk_darwin(v170);
  uint64_t v169 = (char *)&v150 - v25;
  uint64_t v160 = *(void *)(v12 - 8);
  __chkstk_darwin(v24);
  uint64_t v159 = (char *)&v150 - v26;
  uint64_t v27 = type metadata accessor for SnapshotItem();
  uint64_t v162 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v166 = (uint64_t)&v150 - v28;
  uint64_t v163 = v29;
  uint64_t v30 = sub_10096C890();
  uint64_t v183 = *(void *)(v30 - 8);
  uint64_t v184 = v30;
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v185 = (char *)&v150 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v193 = (char *)&v150 - v34;
  v161._object = AssociatedTypeWitness;
  uint64_t v35 = *((void *)AssociatedTypeWitness - 1);
  __chkstk_darwin(v33);
  unint64_t v37 = (char *)&v150 - v36;
  uint64_t v178 = v12;
  uint64_t v173 = v11;
  uint64_t v38 = type metadata accessor for ItemPropagationResult();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v177 = (char *)&v150 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v150 - v42;
  Swift::String v180 = v44;
  uint64_t v45 = sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v47 = sub_10096D510();
  uint64_t v48 = __chkstk_darwin(v47);
  uint64_t v50 = (uint64_t *)((char *)&v150 - v49);
  uint64_t v182 = v45;
  uint64_t v181 = *(void *)(v45 - 8);
  uint64_t v51 = __chkstk_darwin(v48);
  int v168 = (char *)&v150 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  NSData v54 = (char *)&v150 - v53;
  (*(void (**)(uint64_t *, char *, uint64_t))(v55 + 16))(v50, v189, v47);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  Swift::String v189 = v54;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t AssociatedConformanceWitness = *v50;
    uint64_t v57 = v180;
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v39 + 56))(v54, 1, 1, v180);
    v161._countAndFlagsBits = 0;
    uint64_t v58 = 0;
    v161._object = (void *)0xE000000000000000;
    uint64_t v60 = v181;
    uint64_t v59 = v182;
    uint64_t v61 = v39;
    goto LABEL_20;
  }
  uint64_t v153 = v35;
  uint64_t v62 = *(void **)((char *)v50 + *(int *)(TupleTypeMetadata2 + 48));
  uint64_t v61 = v39;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v39 + 48))(v50, 1, v180) != 1)
  {
    uint64_t v64 = *(void (**)(char *, uint64_t *, int *))(v39 + 32);
    uint64_t v65 = v43;
    uint64_t v66 = v43;
    uint64_t v67 = v180;
    v64(v66, v50, v180);
    uint64_t v68 = *(void (**)(char *, char *, int *))(v61 + 16);
    uint64_t v69 = v62;
    uint64_t v176 = v62;
    uint64_t v70 = v189;
    v68(v189, v65, v67);
    (*(void (**)(char *, void, uint64_t, int *))(v61 + 56))(v70, 0, 1, v67);
    uint64_t v71 = v173;
    uint64_t v72 = v173 + 64;
    uint64_t v73 = *(void (**)(void, void))(v173 + 64);
    id v151 = v69;
    uint64_t v74 = v37;
    uint64_t v152 = v65;
    uint64_t v75 = v71;
    uint64_t v150 = v72;
    uint64_t v76 = v73;
    v73(v178, v75);
    object = v161._object;
    LODWORD(v73) = FileItemID.kind.getter((uint64_t)v161._object, AssociatedConformanceWitness);
    uint64_t v78 = v153;
    (*(void (**)(char *, void *))(v153 + 8))(v74, object);
    uint64_t v158 = v61;
    uint64_t v79 = swift_getAssociatedTypeWitness();
    uint64_t v80 = swift_getAssociatedConformanceWitness();
    unsigned __int8 v81 = FileItemID.kind.getter(v79, v80);
    uint64_t v63 = v176;
    if (v73 != v81)
    {
      uint64_t v85 = v178;
      uint64_t v86 = v173;
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t AssociatedConformanceWitness = swift_allocError();
      uint64_t v88 = v87;
      sub_10096C890();
      swift_getTupleTypeMetadata2();
      (*(void (**)(uint64_t, uint64_t, void *))(v78 + 16))(v88, v154, object);
      (*(void (**)(uint64_t, void, uint64_t, void *))(v78 + 56))(v88, 0, 1, object);
      uint64_t v89 = v152;
      v76(v85, v86);
      swift_storeEnumTagMultiPayload();

      uint64_t v61 = v158;
      uint64_t v57 = v180;
      (*(void (**)(char *, int *))(v158 + 8))(v89, v180);
      uint64_t v60 = v181;
      uint64_t v59 = v182;
      if (v63) {
        goto LABEL_11;
      }
LABEL_18:
      v161._countAndFlagsBits = 0;
      uint64_t v58 = 0;
      uint64_t v96 = (void *)0xE000000000000000;
      goto LABEL_19;
    }
    uint64_t v82 = v152;
    char v83 = FileItem.kind.getter(v178, v173);
    uint64_t v57 = v180;
    uint64_t v60 = v181;
    uint64_t v59 = v182;
    uint64_t v61 = v158;
    id v84 = v151;
    if (qword_1009828E8[v83] == qword_1009828E8[*(char *)(v179 + *(int *)(v174 + 40))]) {
      goto LABEL_8;
    }
    if (v83 == 3)
    {
      if (*(unsigned char *)(v179 + *(int *)(v174 + 40))) {
        goto LABEL_17;
      }
    }
    else if (v83 || *(unsigned char *)(v179 + *(int *)(v174 + 40)) != 3)
    {
LABEL_17:
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t AssociatedConformanceWitness = swift_allocError();
      swift_storeEnumTagMultiPayload();

      (*(void (**)(char *, int *))(v61 + 8))(v82, v57);
      if (v63) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
LABEL_8:
    (*(void (**)(char *, int *))(v158 + 8))(v82, v180);

    uint64_t AssociatedConformanceWitness = 0;
    if (!v63) {
      goto LABEL_18;
    }
    goto LABEL_11;
  }
  uint64_t v57 = v180;
  (*(void (**)(char *, uint64_t, uint64_t, int *))(v39 + 56))(v189, 1, 1, v180);
  uint64_t AssociatedConformanceWitness = 0;
  uint64_t v60 = v181;
  uint64_t v59 = v182;
  uint64_t v63 = v62;
  if (!v62) {
    goto LABEL_18;
  }
LABEL_11:
  strcpy((char *)v190, " domver:");
  BYTE1(v190[1]) = 0;
  WORD1(v190[1]) = 0;
  HIDWORD(v190[1]) = -402653184;
  uint64_t v58 = v63;
  id v90 = [v63 description];
  uint64_t v91 = v61;
  uint64_t v92 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v93 = v57;
  uint64_t v95 = v94;

  v194._countAndFlagsBits = v92;
  uint64_t v61 = v91;
  v194._object = v95;
  sub_10096BDC0(v194);
  uint64_t v57 = v93;
  swift_bridgeObjectRelease();
  v161._countAndFlagsBits = v190[0];
  uint64_t v96 = (void *)v190[1];
LABEL_19:
  v161._object = v96;
LABEL_20:
  uint64_t v97 = v178;
  uint64_t v98 = v168;
  (*(void (**)(void))(v60 + 16))();
  uint64_t v99 = *(uint64_t (**)(char *, uint64_t, int *))(v61 + 48);
  unsigned int v100 = v99(v98, 1, v57);
  uint64_t v176 = v58;
  Swift::String v180 = (int *)v99;
  if (v100 == 1)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v98, v59);
    if (AssociatedConformanceWitness)
    {
      swift_bridgeObjectRelease();
      v190[0] = 0;
      v190[1] = 0xE000000000000000;
      v195._countAndFlagsBits = 0x747365757165723CLL;
      v195._object = (void *)0xEB000000003A6465;
      sub_10096BDC0(v195);
      uint64_t v101 = v174;
      swift_getWitnessTable();
      uint64_t v102 = v179;
      sub_10096D270();
    }
    else
    {
      v190[0] = 0;
      v190[1] = 0xE000000000000000;
      sub_10096CBD0(27);
      v206._object = (void *)0x80000001009A11A0;
      v206._countAndFlagsBits = 0xD000000000000016;
      sub_10096BDC0(v206);
      uint64_t v101 = v174;
      swift_getWitnessTable();
      uint64_t v102 = v179;
      sub_10096D270();
      sub_10096BDC0(v161);
      swift_bridgeObjectRelease();
    }
    v207._countAndFlagsBits = 62;
    v207._object = (void *)0xE100000000000000;
    sub_10096BDC0(v207);
    uint64_t v173 = v190[0];
    uint64_t v178 = v190[1];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v162 + 56))(v193, 1, 1, v163);
    uint64_t v127 = v165;
    uint64_t v112 = v57;
  }
  else
  {
    uint64_t v103 = v177;
    (*(void (**)(char *, char *, int *))(v61 + 32))(v177, v98, v57);
    uint64_t v104 = (uint64_t)v159;
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v159, v103, v97);
    uint64_t v105 = v166;
    SnapshotItem.init(_:)(v104, v97, v173, v166);
    int v168 = (char *)(v61 + 48);
    uint64_t v106 = v162;
    uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v162 + 16);
    uint64_t v108 = v193;
    uint64_t v158 = v61;
    uint64_t v109 = v163;
    v107(v193, v105, v163);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v108, 0, 1, v109);
    v190[0] = 0;
    v190[1] = 0xE000000000000000;
    v196._countAndFlagsBits = 0x3A6C61757463613CLL;
    v196._object = (void *)0xE800000000000000;
    sub_10096BDC0(v196);
    swift_getWitnessTable();
    sub_10096D270();
    v197._countAndFlagsBits = 32;
    v197._object = (void *)0xE100000000000000;
    sub_10096BDC0(v197);
    uint64_t v111 = v190[0];
    uint64_t v110 = v190[1];
    v190[0] = 0;
    v190[1] = 0xE000000000000000;
    v198._countAndFlagsBits = 0x6574736575716572;
    v198._object = (void *)0xEA00000000003A64;
    sub_10096BDC0(v198);
    uint64_t v112 = v57;
    uint64_t v113 = v174;
    swift_getWitnessTable();
    sub_10096D270();
    v199._countAndFlagsBits = 32;
    v199._object = (void *)0xE100000000000000;
    sub_10096BDC0(v199);
    uint64_t v114 = v190[0];
    uint64_t v115 = (void *)v190[1];
    v190[0] = v111;
    v190[1] = v110;
    swift_bridgeObjectRetain();
    v200._countAndFlagsBits = v114;
    v200._object = v115;
    sub_10096BDC0(v200);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v117 = v190[0];
    uint64_t v116 = v190[1];
    v190[0] = 0;
    v190[1] = 0xE000000000000000;
    sub_10096CBD0(16);
    swift_bridgeObjectRelease();
    strcpy((char *)v190, "stillPending:");
    HIWORD(v190[1]) = -4864;
    unint64_t v118 = v177;
    v201._countAndFlagsBits = sub_1006096B0(*(void *)&v177[v112[9]]);
    sub_10096BDC0(v201);
    swift_bridgeObjectRelease();
    v202._countAndFlagsBits = 32;
    v202._object = (void *)0xE100000000000000;
    sub_10096BDC0(v202);
    uint64_t v119 = v190[0];
    uint64_t v120 = (void *)v190[1];
    v190[0] = v117;
    v190[1] = v116;
    swift_bridgeObjectRetain();
    v203._countAndFlagsBits = v119;
    v203._object = v120;
    sub_10096BDC0(v203);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v122 = v190[0];
    uint64_t v121 = v190[1];
    v190[0] = 0;
    v190[1] = 0xE000000000000000;
    sub_10096CBD0(17);
    swift_bridgeObjectRelease();
    strcpy((char *)v190, "shouldFetch:");
    BYTE5(v190[1]) = 0;
    HIWORD(v190[1]) = -5120;
    if (v118[v112[10]]) {
      v123._countAndFlagsBits = 1702195828;
    }
    else {
      v123._countAndFlagsBits = 0x65736C6166;
    }
    if (v118[v112[10]]) {
      uint64_t v124 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v124 = (void *)0xE500000000000000;
    }
    v123._object = v124;
    sub_10096BDC0(v123);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v161);
    swift_bridgeObjectRelease();
    v204._countAndFlagsBits = 62;
    v204._object = (void *)0xE100000000000000;
    sub_10096BDC0(v204);
    uint64_t v125 = v190[0];
    uint64_t v126 = (void *)v190[1];
    v190[0] = v122;
    v190[1] = v121;
    uint64_t v101 = v113;
    uint64_t v102 = v179;
    swift_bridgeObjectRetain();
    v205._countAndFlagsBits = v125;
    v205._object = v126;
    sub_10096BDC0(v205);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v173 = v190[0];
    uint64_t v178 = v190[1];
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v166, v109);
    (*(void (**)(char *, int *))(v158 + 8))(v177, v112);
    uint64_t v127 = v165;
  }
  uint64_t v128 = v164;
  uint64_t v129 = v188;
  uint64_t v130 = *(void *)(v164 - 8);
  uint64_t v131 = v186;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v186, v127, v164);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v130 + 56))(v131, 0, 1, v128);
  uint64_t v132 = *(uint64_t *)((char *)v129 + *(void *)(*v129 + 632));
  uint64_t v133 = *(void *)(v101 - 8);
  uint64_t v134 = v187;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 16))(v187, v102, v101);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v133 + 56))(v134, 0, 1, v101);
  (*(void (**)(char *, char *, uint64_t))(v183 + 16))(v185, v193, v184);
  uint64_t v135 = v189;
  if (((unsigned int (*)(char *, uint64_t, int *))v180)(v189, 1, v112))
  {
    uint64_t v136 = 0;
    int v137 = 0;
    uint64_t v138 = AssociatedConformanceWitness;
    uint64_t v139 = v176;
    if (AssociatedConformanceWitness)
    {
LABEL_34:
      int v140 = *(void **)((char *)v188 + *(void *)(*v188 + 584));
      swift_errorRetain();
      id v141 = v140;
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v136 = *(void *)&v135[v112[9]];
    int v137 = v135[v112[10]];
    uint64_t v138 = AssociatedConformanceWitness;
    uint64_t v139 = v176;
    if (AssociatedConformanceWitness) {
      goto LABEL_34;
    }
  }
  int v140 = 0;
LABEL_37:
  id v142 = v139;
  uint64_t v143 = (uint64_t *)swift_retain();
  uint64_t v144 = v136;
  BOOL v145 = v169;
  sub_1003B4A90(v143, v186, v132, 0, v187, v185, v144, v137, v169, (uint64_t)v139, v138, (uint64_t)v140);
  uint64_t v146 = v170;
  uint64_t v147 = v172;
  char v148 = sub_1003D25F0(v171, a9, v170);
  if (!v147)
  {
    v157(0, v173, v178, v148);
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  swift_errorRelease();

  (*(void (**)(char *, int8x16_t *))(v167 + 8))(v145, v146);
  (*(void (**)(char *, uint64_t))(v183 + 8))(v193, v184);
  return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v189, v182);
}

uint64_t sub_100420AA8(uint64_t a1, void (**a2)(void, void, void), uint64_t a3, void (*a4)(void, void, void, int8x16_t *), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v179 = a4;
  uint64_t v180 = a5;
  uint64_t v181 = a2;
  uint64_t v192 = (void *)a1;
  uint64_t v7 = (void *)*v5;
  uint64_t v186 = a3;
  uint64_t v187 = v7;
  uint64_t v9 = (void (*)(void, void))v7[75];
  uint64_t v10 = (void (*)(char *, uint64_t))v7[78];
  uint64_t v11 = (void (*)(void, void))v7[77];
  Swift::String v197 = (void (*)(void, void))v7[76];
  uint64_t v8 = v197;
  Swift::String v198 = v9;
  uint64_t v199 = (uint64_t)v10;
  Swift::String v200 = v11;
  uint64_t v155 = type metadata accessor for ItemReconciliation();
  uint64_t v12 = sub_10096C890();
  uint64_t v156 = *(void *)(v12 - 8);
  uint64_t v157 = v12;
  __chkstk_darwin(v12);
  uint64_t v158 = (char *)&v155 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v190 = type metadata accessor for ItemState();
  uint64_t v14 = sub_10096C890();
  uint64_t v161 = *(void *)(v14 - 8);
  uint64_t v162 = v14;
  __chkstk_darwin(v14);
  uint64_t v160 = (char *)&v155 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v177 = v10;
  uint64_t v178 = v8;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  Swift::String v197 = (void (*)(void, void))v16;
  Swift::String v198 = (void (*)(void, void))v17;
  uint64_t v199 = AssociatedConformanceWitness;
  Swift::String v200 = (void (*)(void, void))v19;
  uint64_t v20 = type metadata accessor for FileItemVersion();
  uint64_t v21 = sub_10096C890();
  uint64_t v164 = *(void *)(v21 - 8);
  uint64_t v165 = v21;
  __chkstk_darwin(v21);
  uint64_t v163 = (char *)&v155 - v22;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v176 = (uint64_t)v11;
  uint64_t v182 = v9;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  Swift::String v197 = (void (*)(void, void))v23;
  Swift::String v198 = (void (*)(void, void))v24;
  uint64_t v199 = v25;
  Swift::String v200 = (void (*)(void, void))v26;
  uint64_t v27 = type metadata accessor for FileItemVersion();
  uint64_t v28 = sub_10096C890();
  int v168 = *(void **)(v28 - 8);
  uint64_t v169 = (char *)v28;
  __chkstk_darwin(v28);
  uint64_t v167 = (char *)&v155 - v29;
  uint64_t v30 = AssociatedTypeWitness;
  uint64_t v31 = sub_10096C890();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v155 - v34;
  uint64_t v174 = v20;
  uint64_t v175 = *(void *)(v20 - 8);
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v166 = (char *)&v155 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v172 = (char *)&v155 - v39;
  uint64_t v173 = *(void *)(v190 - 8);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v159 = (char *)&v155 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  unint64_t v170 = (unint64_t)&v155 - v43;
  uint64_t v189 = v27;
  uint64_t v193 = *(void *)(v27 - 8);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v171 = (char *)&v155 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  unint64_t v184 = (unint64_t)&v155 - v47;
  uint64_t v48 = *(void *)(v30 - 8);
  uint64_t v49 = __chkstk_darwin(v46);
  uint64_t v51 = (char *)&v155 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v49);
  uint64_t v183 = (char *)&v155 - v53;
  __chkstk_darwin(v52);
  uint64_t v185 = (uint64_t)&v155 - v54;
  uint64_t v55 = *(void **)(v192[4] + 16);
  sub_10001AE98((uint64_t)v6 + v187[84], (uint64_t)v201, (uint64_t *)&unk_100ACF710);
  uint64_t v56 = *(void *)(*v6 + 648);
  uint64_t v191 = v6;
  uint64_t v57 = (char *)v6 + v56;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v35, v57, v31);
  int v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v35, 1, v30);
  uint64_t v187 = (void *)v48;
  char v188 = v55;
  if (v58 != 1)
  {
    uint64_t v66 = v178;
    uint64_t v67 = v182;
    uint64_t v68 = AssociatedTypeWitness;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v183, v35, AssociatedTypeWitness);
    uint64_t v69 = (char *)v191 + *(void *)(*v191 + 656);
    swift_beginAccess();
    uint64_t v71 = v167;
    uint64_t v70 = v168;
    uint64_t v72 = v69;
    uint64_t v73 = v169;
    ((void (*)(char *, char *, char *))v168[2])(v167, v72, v169);
    uint64_t v74 = v189;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v71, 1, v189) == 1)
    {
      swift_retain();
      sub_100245AD4(v201, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
      ((void (*)(char *, char *))v70[1])(v71, v73);
      Swift::String v197 = v67;
      Swift::String v198 = v66;
      uint64_t v199 = v176;
      Swift::String v200 = (void (*)(void, void))v177;
      type metadata accessor for Propagation.PropagationError();
      swift_getWitnessTable();
      uint64_t v75 = (void (*)(void, void))swift_allocError();
      uint64_t v77 = v76;
      uint64_t v78 = swift_getAssociatedTypeWitness();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v80 = (void *)(v77 + *(int *)(TupleTypeMetadata2 + 48));
      uint64_t v65 = v191;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v77, (char *)v65 + *(void *)(*v65 + 576), v78);
      void *v80 = 0xD000000000000011;
      v80[1] = 0x80000001009A1040;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v77, 0, 1, TupleTypeMetadata2);
      uint64_t v178 = v75;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v183, v68);
      goto LABEL_5;
    }
    uint64_t v169 = v51;
    (*(void (**)(char *, char *, uint64_t))(v193 + 32))(v171, v71, v74);
    unsigned int v100 = v191;
    uint64_t v101 = (char *)v191 + *(void *)(*v191 + 680);
    swift_beginAccess();
    uint64_t v103 = v163;
    uint64_t v102 = v164;
    uint64_t v104 = v101;
    uint64_t v105 = v165;
    (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v163, v104, v165);
    uint64_t v106 = v74;
    uint64_t v107 = v103;
    uint64_t v109 = v174;
    uint64_t v108 = v175;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48))(v107, 1, v174) == 1)
    {
      swift_retain();
      sub_100245AD4(v201, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v105);
      Swift::String v197 = v67;
      Swift::String v198 = v66;
      uint64_t v199 = v176;
      Swift::String v200 = (void (*)(void, void))v177;
      type metadata accessor for Propagation.PropagationError();
      swift_getWitnessTable();
      uint64_t v110 = (void (*)(void, void))swift_allocError();
      uint64_t v112 = v111;
      uint64_t v113 = v106;
      char v83 = v100;
      uint64_t v114 = swift_getAssociatedTypeWitness();
      uint64_t v115 = swift_getTupleTypeMetadata2();
      uint64_t v116 = (void *)(v112 + *(int *)(v115 + 48));
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v112, (char *)v83 + *(void *)(*v83 + 576), v114);
      *uint64_t v116 = 0xD000000000000011;
      v116[1] = 0x80000001009A0FE0;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v112, 0, 1, v115);
      uint64_t v178 = v110;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v193 + 8))(v171, v113);
      ((void (*)(char *, uint64_t))v187[1])(v183, AssociatedTypeWitness);
      LODWORD(v182) = 0;
      LODWORD(v183) = 0;
      uint64_t v82 = v180;
      unsigned __int8 v81 = v181;
      goto LABEL_6;
    }
    uint64_t v117 = v166;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v166, v107, v109);
    uint64_t v167 = (char *)v187[2];
    int v168 = v187 + 2;
    ((void (*)(uint64_t, char *, uint64_t))v167)(v185, v183, AssociatedTypeWitness);
    (*(void (**)(unint64_t, char *, uint64_t))(v193 + 16))(v184, v171, v106);
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v172, v117, v109);
    unint64_t v118 = (char *)v100 + *(void *)(*v100 + 664);
    swift_beginAccess();
    uint64_t v120 = v160;
    uint64_t v119 = v161;
    uint64_t v121 = v162;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v160, v118, v162);
    uint64_t v122 = v173;
    uint64_t v123 = v190;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v120, 1, v190) == 1)
    {
      swift_retain();
      sub_100245AD4(v201, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v121);
      Swift::String v197 = v182;
      Swift::String v198 = v66;
      uint64_t v199 = v176;
      Swift::String v200 = (void (*)(void, void))v177;
      type metadata accessor for Propagation.PropagationError();
      swift_getWitnessTable();
      uint64_t v124 = (void (*)(void, void))swift_allocError();
      uint64_t v126 = v125;
      swift_getAssociatedTypeWitness();
      uint64_t v127 = swift_getTupleTypeMetadata2();
      uint64_t v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56);
      LODWORD(v182) = 1;
      v128(v126, 1, 1, v127);
      uint64_t v178 = v124;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v166, v109);
      (*(void (**)(char *, uint64_t))(v193 + 8))(v171, v189);
      ((void (*)(char *, uint64_t))v187[1])(v183, AssociatedTypeWitness);
      LODWORD(v183) = 0;
      uint64_t v82 = v180;
      unsigned __int8 v81 = v181;
      char v83 = v191;
      goto LABEL_6;
    }
    uint64_t v129 = AssociatedTypeWitness;
    uint64_t v130 = v189;
    uint64_t v131 = v159;
    (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v159, v120, v123);
    (*(void (**)(unint64_t, char *, uint64_t))(v122 + 16))(v170, v131, v123);
    uint64_t v132 = (uint64_t)v191 + *(void *)(*v191 + 576);
    swift_retain();
    sub_100245AD4(v201, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
    sub_10040FAF0((uint64_t)v192, v132, (uint64_t)v196);
    uint64_t v133 = *(void (**)(char *, uint64_t))(v122 + 8);
    uint64_t v134 = v131;
    uint64_t v135 = v123;
    uint64_t v173 = v122 + 8;
    v133(v134, v123);
    uint64_t v136 = *(void (**)(void, void))(v175 + 8);
    v175 += 8;
    uint64_t v178 = v136;
    v136(v166, v109);
    int v137 = *(void (**)(void, void))(v193 + 8);
    v193 += 8;
    uint64_t v182 = v137;
    v137(v171, v130);
    uint64_t v138 = (char *)v187[1];
    uint64_t v139 = v183;
    uint64_t v140 = v129;
    ++v187;
    uint64_t v183 = v138;
    ((void (*)(char *, uint64_t))v138)(v139, v129);
    sub_10001AE98((uint64_t)v196, (uint64_t)&v197, &qword_100AD0EA0);
    if (sub_1000DBD64((uint64_t)&v197) == 1)
    {
      uint64_t v141 = *(int *)(v135 + 40);
      id v142 = (void *)(v170 + v141 + *(int *)(type metadata accessor for ItemMetadata() + 148));
      swift_bridgeObjectRelease();
      *id v142 = 0;
      v142[1] = 0;
    }
    uint64_t v143 = (uint64_t)v192;
    unint64_t v144 = (unint64_t)v172;
    uint64_t v145 = (uint64_t)v158;
    if (v181)
    {
      uint64_t v177 = v133;
      type metadata accessor for StagedContext();
      uint64_t v146 = swift_dynamicCastClass();
      if (!v146) {
        goto LABEL_37;
      }
      uint64_t v147 = v146;
      sub_10012F1D0(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
      swift_retain();
      sub_1000DEDD8(v185, v145);
      int v151 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v155 - 8) + 48))(v145, 1);
      if (v151 == 1)
      {
        sub_10012F1D0(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v145, v157);
        ((void (*)(char *, uint64_t, uint64_t))v167)(v169, v185, v140);
        type metadata accessor for NSFileProviderItemIdentifier(0);
        if (swift_dynamicCast()) {
          uint64_t v152 = v195;
        }
        else {
          uint64_t v152 = 0;
        }
        uint64_t v153 = (int8x16_t *)(id)FPItemNotFoundError();

        if (v153)
        {
          swift_willThrow();
          unint64_t v154 = v170;
          swift_errorRetain();
          v179(0, 0, 0, v153);
          swift_release();
          sub_100245AD4(v201, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
          swift_release();
          swift_errorRelease();
          swift_errorRelease();
          sub_10012F1D0(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
          v178(v144, v174);
          v182(v184, v130);
          ((void (*)(uint64_t, uint64_t))v183)(v185, AssociatedTypeWitness);
          return ((uint64_t (*)(unint64_t, uint64_t))v177)(v154, v190);
        }
        sub_10012F1D0(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
        __break(1u);
LABEL_37:
        sub_10012F1D0(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
        sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/Propagation.swift", 106, 2, 1435);
      }
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v145, v157);
      unint64_t v148 = v184;
      uint64_t v149 = v185;
      unint64_t v150 = v170;
      sub_10041CF6C(v185, v201, v147, v170, v184, v144, (uint64_t)v192, v186, (uint64_t)v196, (uint64_t)v179, v180);
      swift_release();
      uint64_t v135 = v190;
      uint64_t v133 = v177;
    }
    else
    {
      sub_10012F1D0(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
      unint64_t v148 = v184;
      uint64_t v149 = v185;
      unint64_t v150 = v170;
      sub_10041BEB8(v185, (uint64_t)v201, v170, v184, v144, v143, v186, (uint64_t)v196, (uint64_t)v179, v180);
    }
    sub_100245AD4(v201, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
    swift_release();
    sub_10012F1D0(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
    sub_10012F1D0(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
    v178(v144, v174);
    v182(v148, v130);
    ((void (*)(uint64_t, uint64_t))v183)(v149, v140);
    return ((uint64_t (*)(unint64_t, uint64_t))v133)(v150, v135);
  }
  swift_retain();
  sub_100245AD4(v201, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
  Swift::String v197 = v182;
  Swift::String v198 = v178;
  uint64_t v199 = v176;
  Swift::String v200 = (void (*)(void, void))v177;
  type metadata accessor for Propagation.PropagationError();
  swift_getWitnessTable();
  uint64_t v59 = (void (*)(void, void))swift_allocError();
  uint64_t v61 = v60;
  uint64_t v62 = swift_getAssociatedTypeWitness();
  uint64_t v63 = swift_getTupleTypeMetadata2();
  uint64_t v64 = (void *)(v61 + *(int *)(v63 + 48));
  uint64_t v65 = v191;
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v61, (char *)v65 + *(void *)(*v65 + 576), v62);
  *uint64_t v64 = 0xD000000000000010;
  v64[1] = 0x80000001009A0360;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v61, 0, 1, v63);
  uint64_t v178 = v59;
  swift_willThrow();
LABEL_5:
  LODWORD(v182) = 0;
  LODWORD(v183) = 0;
  uint64_t v82 = v180;
  unsigned __int8 v81 = v181;
  char v83 = v65;
LABEL_6:
  id v84 = (void *)swift_allocObject();
  uint64_t v85 = v179;
  v84[2] = v83;
  v84[3] = v85;
  uint64_t v86 = v192;
  v84[4] = v82;
  v84[5] = v86;
  uint64_t v87 = v186;
  v84[6] = v186;
  if (v81 && (type metadata accessor for StagedContext(), (uint64_t v88 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v89 = v88;
    id v90 = (void *)swift_allocObject();
    v90[2] = v86;
    unsigned char v90[3] = v85;
    v90[4] = v82;
    v90[5] = sub_10042C2A4;
    uint64_t v91 = v178;
    v90[6] = v84;
    v90[7] = v91;
    uint64_t v181 = (void (**)(void, void, void))(*v188 + 608);
    uint64_t v92 = (void (*)(uint64_t, uint64_t (*)(), void *))*v181;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_errorRetain();
    v92(v89, sub_10042C2AC, v90);
    uint64_t v93 = v189;
    sub_100245AD4(v201, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_release();
    swift_release();
    uint64_t v94 = v193;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1004224B8((uint64_t)v178, v83, v85, v82, v86, v87);
    sub_100245AD4(v201, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
    swift_release();
    swift_release();
    swift_errorRelease();
    uint64_t v94 = v193;
    uint64_t v93 = v189;
  }
  uint64_t v95 = v187;
  uint64_t v96 = v185;
  uint64_t v97 = AssociatedTypeWitness;
  int v98 = (int)v182;
  if (!v182)
  {
    if (!v183) {
      goto LABEL_12;
    }
LABEL_15:
    (*(void (**)(unint64_t, uint64_t))(v173 + 8))(v170, v190);
    uint64_t result = v184;
    if (!v98) {
      return result;
    }
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v175 + 8))(v172, v174);
  if (v183) {
    goto LABEL_15;
  }
LABEL_12:
  uint64_t result = v184;
  if (!v98) {
    return result;
  }
LABEL_16:
  (*(void (**)(uint64_t, uint64_t))(v94 + 8))(result, v93);
  return ((uint64_t (*)(uint64_t, uint64_t))v95[1])(v96, v97);
}

uint64_t sub_1004224B8(uint64_t a1, uint64_t *a2, void (*a3)(void, void, void, int8x16_t *), uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  uint64_t v45 = a4;
  uint64_t v46 = a3;
  uint64_t v42 = a1;
  uint64_t v7 = *a2;
  uint64_t v8 = *(void *)(*a2 + 608);
  uint64_t v9 = *(void *)(*a2 + 624);
  uint64_t v41 = type metadata accessor for SnapshotItem();
  uint64_t v10 = sub_10096C890();
  __chkstk_darwin(v10 - 8);
  uint64_t v40 = (char *)&v38 - v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  uint64_t v13 = sub_10096C890();
  __chkstk_darwin(v13 - 8);
  uint64_t v39 = (char *)&v38 - v14;
  uint64_t v15 = *(void *)(v7 + 616);
  uint64_t v16 = *(void *)(v7 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v47 = AssociatedTypeWitness;
  uint64_t v48 = v18;
  uint64_t v49 = AssociatedConformanceWitness;
  uint64_t v50 = v20;
  uint64_t v21 = type metadata accessor for FileItemVersion();
  uint64_t v22 = sub_10096C890();
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v38 - v23;
  uint64_t v47 = v8;
  uint64_t v48 = v16;
  uint64_t v49 = v9;
  uint64_t v50 = v15;
  uint64_t v25 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v26 = v25[-1].i64[1];
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v38 - v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v24, 1, 1, v21);
  uint64_t v29 = *(uint64_t *)((char *)a2 + *(void *)(*a2 + 632));
  uint64_t v30 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v39, 1, 1, v12);
  uint64_t v31 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1);
  uint64_t v32 = *(void **)((char *)a2 + *(void *)(*a2 + 584));
  uint64_t v33 = v42;
  swift_errorRetain();
  id v34 = v32;
  uint64_t v35 = (uint64_t *)swift_retain();
  sub_1003B4A90(v35, (uint64_t)v24, v29, 0, v30, v31, 0, 0, v28, 0, v33, (uint64_t)v32);
  uint64_t v36 = sub_1003D25F0(v43, v44, v25);
  v46(0, 0, 0, v36);
  swift_errorRelease();
  return (*(uint64_t (**)(char *, int8x16_t *))(v26 + 8))(v28, v25);
}

uint64_t sub_100422968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  swift_retain();
  swift_retain();
  swift_errorRetain();
  uint64_t v17 = type metadata accessor for Continuation();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, a9, v15, a10, (uint64_t)v16, v17, (uint64_t)&type metadata for String);
  swift_release();

  return swift_release();
}

uint64_t sub_100422A88@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_100422AA0(a1, a2);
}

uint64_t sub_100422AA0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = *(void *)(*(void *)v2 + 624);
  v29[1] = *(void *)(*(void *)v2 + 608);
  v29[2] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_10096C890();
  v29[0] = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v29 - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)v29 - v11;
  if (sub_1005152D8() && (*(unsigned char *)(v2 + *(void *)(*(void *)v2 + 640)) & 0x10) != 0)
  {
    uint64_t v18 = v35;
    uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 152))(v2 + *(void *)(*(void *)v2 + 576));
    if (!v18)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v29[0] + 8))(v9, v6);
        uint64_t v19 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v21 = swift_getAssociatedConformanceWitness();
        uint64_t v31 = AssociatedTypeWitness;
        uint64_t v32 = v19;
        uint64_t v33 = AssociatedConformanceWitness;
        uint64_t v34 = v21;
        uint64_t v22 = type metadata accessor for ReconciliationID();
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v30, 1, 1, v22);
      }
      else
      {
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v23(v12, v9, AssociatedTypeWitness);
        uint64_t v24 = v30;
        v23(v30, v12, AssociatedTypeWitness);
        uint64_t v25 = swift_getAssociatedTypeWitness();
        uint64_t v26 = swift_getAssociatedConformanceWitness();
        uint64_t v27 = swift_getAssociatedConformanceWitness();
        uint64_t v31 = AssociatedTypeWitness;
        uint64_t v32 = v25;
        uint64_t v33 = v26;
        uint64_t v34 = v27;
        uint64_t v28 = type metadata accessor for ReconciliationID();
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v24, 0, 1, v28);
      }
    }
  }
  else
  {
    uint64_t v13 = swift_getAssociatedTypeWitness();
    uint64_t v14 = swift_getAssociatedConformanceWitness();
    uint64_t v15 = swift_getAssociatedConformanceWitness();
    uint64_t v31 = AssociatedTypeWitness;
    uint64_t v32 = v13;
    uint64_t v33 = v14;
    uint64_t v34 = v15;
    uint64_t v16 = type metadata accessor for ReconciliationID();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v30, 1, 1, v16);
  }
  return result;
}

id sub_100422F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getAssociatedTypeWitness();
  type metadata accessor for SnapshotItem();
  sub_10096C890();
  swift_getAssociatedTypeWitness();
  sub_10096C890();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v5 = a1 + TupleTypeMetadata[12];
  uint64_t v15 = a1 + TupleTypeMetadata[16];
  uint64_t v16 = a1 + TupleTypeMetadata[20];
  uint64_t v17 = TupleTypeMetadata[24];
  uint64_t v18 = TupleTypeMetadata[28];
  uint64_t v19 = TupleTypeMetadata[32];
  uint64_t v6 = (uint64_t)v1 + *(void *)(v3 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v6, AssociatedTypeWitness);
  uint64_t v8 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v15, 1, 1, v9);
  uint64_t v10 = (uint64_t)v1 + *(void *)(*v1 + 680);
  swift_beginAccess();
  type metadata accessor for FileItemVersion();
  uint64_t v11 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v16, v10, v11);
  uint64_t v12 = *v1;
  *(void *)(a1 + v17) = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 640));
  *(void *)(a1 + v18) = *(uint64_t *)((char *)v1 + *(void *)(v12 + 632));
  id v20 = *(id *)((char *)v1 + *(void *)(v12 + 584));
  *(void *)(a1 + v19) = v20;
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);

  return v20;
}

uint64_t sub_1004234EC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v9 = v0 + *(void *)(*(void *)v0 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v3 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v9, v3);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 664);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v5 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1000D35D8(*(void *)(v0 + *(void *)(*(void *)v0 + 672)), *(void *)(v0 + *(void *)(*(void *)v0 + 672) + 8), *(void *)(v0 + *(void *)(*(void *)v0 + 672) + 16));
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 680);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v7 = sub_10096C890();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_100423878()
{
  uint64_t v0 = sub_10040F300();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v9 = v0 + *(void *)(*(void *)v0 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v3 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v9, v3);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 664);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v5 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1000D35D8(*(void *)(v0 + *(void *)(*(void *)v0 + 672)), *(void *)(v0 + *(void *)(*(void *)v0 + 672) + 8), *(void *)(v0 + *(void *)(*(void *)v0 + 672) + 16));
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 680);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v7 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v0;
}

uint64_t sub_100423C10()
{
  return sub_100428DF4(sub_100423878);
}

uint64_t type metadata accessor for Propagation.UpdateItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100423C40()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_10096C890();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
    uint64_t result = sub_10096C890();
    if (v2 <= 0x3F)
    {
      type metadata accessor for SnapshotItem();
      uint64_t result = sub_10096C890();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_100423E4C()
{
  return 0x692D6574656C6564;
}

uint64_t sub_100423E6C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for SnapshotItem();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = (char *)v0 + *(void *)(v1 + 680);
  swift_beginAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2)) {
    return 4;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = FileItem.kind.getter(v2, WitnessTable);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_100424004()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 680);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 48);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_1004240EC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 680);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 48);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_1004241DC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 680);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 48);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_1004242CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 680);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v7 = v3 + *(int *)(v4 + 36);
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, v7, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
}

uint64_t sub_10042449C()
{
  return 0;
}

uint64_t sub_100424578(uint64_t a1, void **a2)
{
  Swift::String v198 = a2;
  uint64_t v3 = v2;
  uint64_t v161 = a1;
  uint64_t v4 = *v2;
  uint64_t v5 = *((void *)*v2 + 76);
  uint64_t v6 = (void (*)(char *, char *, uint64_t))*((void *)*v2 + 78);
  uint64_t v171 = type metadata accessor for SnapshotItem();
  uint64_t v170 = sub_10096C890();
  uint64_t v169 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  uint64_t v173 = (char *)&v142 - v7;
  uint64_t v175 = type metadata accessor for JobLockRule();
  __chkstk_darwin(v175);
  uint64_t v174 = (char *)&v142 - v8;
  Swift::String v196 = v4;
  uint64_t v9 = *((void *)v4 + 75);
  uint64_t v10 = *((void *)v4 + 77);
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v158 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v154 = (char *)&v142 - v12;
  uint64_t v159 = v13;
  uint64_t v157 = sub_10096C890();
  uint64_t v156 = *(void *)(v157 - 8);
  uint64_t v14 = __chkstk_darwin(v157);
  uint64_t v155 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v162 = (char *)&v142 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v180 = sub_10096C890();
  uint64_t v164 = *(void *)(v180 - 8);
  uint64_t v18 = __chkstk_darwin(v180);
  uint64_t v163 = (char *)&v142 - v19;
  uint64_t v172 = AssociatedTypeWitness;
  uint64_t v165 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v18);
  uint64_t v160 = (char *)&v142 - v20;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v183 = sub_10096C890();
  uint64_t v182 = *(void *)(v183 - 8);
  uint64_t v22 = __chkstk_darwin(v183);
  uint64_t v167 = (char *)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v166 = (char *)&v142 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v177 = (char *)&v142 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v181 = (char *)&v142 - v29;
  uint64_t v186 = v21;
  uint64_t v185 = *(void *)(v21 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  int v168 = (char *)&v142 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  unint64_t v184 = (char *)&v142 - v32;
  uint64_t v33 = swift_getAssociatedTypeWitness();
  uint64_t v34 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v36 = swift_getAssociatedConformanceWitness();
  uint64_t v199 = v33;
  uint64_t v200 = v34;
  uint64_t v201 = AssociatedConformanceWitness;
  uint64_t v202 = v36;
  uint64_t v37 = type metadata accessor for FileItemVersion();
  uint64_t v38 = sub_10096C890();
  uint64_t v191 = *(void *)(v38 - 8);
  uint64_t v192 = v38;
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v176 = (char *)&v142 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v187 = (char *)&v142 - v42;
  uint64_t v190 = v37;
  uint64_t v189 = *(void *)(v37 - 8);
  __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v142 - v43;
  uint64_t v179 = v9;
  uint64_t v199 = v9;
  uint64_t v200 = v5;
  uint64_t v194 = v5;
  uint64_t v178 = v10;
  uint64_t v201 = v10;
  uint64_t v202 = (uint64_t)v6;
  char v188 = v6;
  uint64_t v45 = type metadata accessor for ItemReconciliation();
  uint64_t v46 = sub_10096C890();
  uint64_t v193 = *(unsigned __int8 **)(v46 - 8);
  uint64_t v47 = __chkstk_darwin(v46);
  uint64_t v49 = (char *)&v142 - v48;
  uint64_t v195 = *(void *)(v45 - 8);
  uint64_t v50 = __chkstk_darwin(v47);
  uint64_t v52 = (char *)&v142 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v54 = (char *)&v142 - v53;
  uint64_t v55 = v197;
  uint64_t v56 = (uint64_t)v3 + *((void *)v196 + 72);
  sub_1000DF200(v56, (uint64_t)v49);
  if (!v55)
  {
    uint64_t v57 = v193;
    uint64_t v153 = (uint64_t (*)(char *, uint64_t, uint64_t))v46;
    int v151 = v3;
    uint64_t v150 = v56;
    Swift::String v196 = v54;
    uint64_t v152 = v44;
    uint64_t v197 = 0;
    uint64_t v58 = v195;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v49, 1, v45) == 1)
    {
      (*((void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))v57 + 1))(v49, v153);
      return 0;
    }
    uint64_t v193 = (unsigned __int8 *)v52;
    uint64_t v59 = v196;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v196, v49, v45);
    uint64_t v60 = &v59[*(int *)(v45 + 52)];
    uint64_t v61 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v63 = v191;
    uint64_t v62 = v192;
    uint64_t v64 = v187;
    (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v187, &v60[*(int *)(v61 + 48)], v192);
    uint64_t v65 = v189;
    uint64_t v66 = v190;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v64, 1, v190) == 1)
    {
      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v45);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v62);
      return 0;
    }
    uint64_t v194 = v45;
    uint64_t v67 = v152;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v152, v64, v66);
    uint64_t v68 = v182;
    uint64_t v69 = v182 + 16;
    uint64_t v70 = v181;
    uint64_t v71 = v60;
    uint64_t v72 = v183;
    char v188 = *(void (**)(char *, char *, uint64_t))(v182 + 16);
    v188(v181, v71, v183);
    uint64_t v73 = (void *)v185;
    uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v185 + 48);
    uint64_t v75 = v186;
    uint64_t v187 = (char *)(v185 + 48);
    uint64_t v153 = v74;
    if (v74(v70, 1, v186) == 1)
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v66);
      (*(void (**)(char *, uint64_t))(v195 + 8))(v196, v194);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v72);
      return 0;
    }
    uint64_t v148 = v69;
    uint64_t v77 = (void (*)(char *, char *, uint64_t))v73[4];
    uint64_t v78 = v72;
    uint64_t v79 = v65;
    uint64_t v80 = v184;
    unint64_t v144 = v73 + 4;
    uint64_t v143 = v77;
    v77(v184, v70, v75);
    unsigned __int8 v81 = (void (*)(char *, char *, uint64_t))v73[2];
    uint64_t v82 = v177;
    uint64_t v181 = (char *)(v73 + 2);
    uint64_t v149 = v81;
    v81(v177, v80, v75);
    char v83 = v73 + 7;
    id v84 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v73[7];
    LOBYTE(v73) = 1;
    uint64_t v147 = v83;
    uint64_t v146 = v84;
    v84(v82, 0, 1, v75);
    uint64_t v85 = v151;
    uint64_t v86 = (uint64_t)v151 + *((void *)*v151 + 79);
    swift_beginAccess();
    uint64_t v87 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 40);
    uint64_t v177 = (char *)(v68 + 40);
    uint64_t v145 = v87;
    v87(v86, v82, v78);
    swift_endAccess();
    uint64_t v88 = v176;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v176, v152, v66);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v88, 0, 1, v66);
    uint64_t v89 = v85;
    uint64_t v90 = (uint64_t)v85 + *((void *)*v85 + 81);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v191 + 40))(v90, v88, v192);
    swift_endAccess();
    uint64_t v91 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v92 = *(int *)(v91 + 36);
    uint64_t v93 = *(void *)&v196[v92];
    uint64_t v95 = v193;
    uint64_t v94 = v194;
    (*(void (**)(unsigned __int8 *))(v195 + 16))(v193);
    if ((v93 & 2) == 0) {
      LODWORD(v73) = (v95[*(int *)(v91 + 36)] >> 4) & 1;
    }
    uint64_t v96 = v95;
    uint64_t v97 = *(unsigned __int8 **)(v195 + 8);
    v195 += 8;
    uint64_t v98 = ((uint64_t (*)(unsigned __int8 *, uint64_t))v97)(v96, v94);
    uint64_t v99 = v85;
    uint64_t v46 = *((void *)*v85 + 83);
    *((unsigned char *)v85 + v46) = (_BYTE)v73;
    if ((((uint64_t (*)(uint64_t))(*v198)[19])(v98) & 0x4000) == 0)
    {
      char v100 = 0;
      uint64_t v101 = v186;
      uint64_t v102 = v198;
LABEL_18:
      uint64_t v103 = v150;
      goto LABEL_19;
    }
    uint64_t v101 = v186;
    uint64_t v102 = v198;
    if ((v196[v92] & 0x10) != 0)
    {
      char v100 = 1;
      goto LABEL_18;
    }
    if (v89[17] == (char *)0x2000000)
    {
      char v100 = 1;
      uint64_t v103 = v150;
LABEL_19:
      *((unsigned char *)v99 + *((void *)*v99 + 84)) = v100 & 1;
      uint64_t v104 = v197;
      uint64_t v105 = (*(uint64_t (**)(uint64_t))(*v102[5] + 296))(v103);
      if (v104)
      {
        (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v101);
        (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
        ((void (*)(char *, uint64_t))v97)(v196, v194);
        return v46;
      }
      uint64_t v107 = (uint64_t)v99 + *((void *)*v99 + 82);
      *(void *)uint64_t v107 = v105;
      *(unsigned char *)(v107 + 8) = v106 & 1;
      uint64_t v203 = sub_10096C110();
      if (*((unsigned char *)v99 + v46))
      {
        v149(v174, v184, v101);
        swift_storeEnumTagMultiPayload();
        sub_10096C1C0();
        sub_10096C180();
      }
      uint64_t v108 = v173;
      (*(void (**)(char *, uint64_t))(*v198[4] + 240))(v184, 1);
      uint64_t v197 = 0;
      uint64_t v193 = v97;
      uint64_t v109 = (uint64_t)v99 + *((void *)*v99 + 85);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v169 + 40))(v109, v108, v170);
      swift_endAccess();
      uint64_t v110 = v171;
      uint64_t v111 = 1;
      int v112 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 48))(v109, 1, v171);
      uint64_t v113 = v166;
      if (!v112)
      {
        v149(v166, (char *)(v109 + *(int *)(v110 + 36)), v101);
        uint64_t v111 = 0;
      }
      v146(v113, v111, 1, v101);
      uint64_t v114 = (char *)v99 + *((void *)*v99 + 80);
      swift_beginAccess();
      uint64_t v115 = v183;
      v145((uint64_t)v114, v113, v183);
      swift_endAccess();
      uint64_t v116 = v167;
      v188(v167, v114, v115);
      int v117 = v153(v116, 1, v101);
      unint64_t v118 = v168;
      if (v117 != 1)
      {
        v143(v168, v116, v101);
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v124 = &v174[*(int *)(TupleTypeMetadata3 + 48)];
        uint64_t v125 = &v174[*(int *)(TupleTypeMetadata3 + 64)];
        uint64_t v126 = v149;
        v149(v174, v184, v101);
        v126(v124, v118, v101);
        v126(v125, v118, v101);
        swift_storeEnumTagMultiPayload();
        sub_10096C1C0();
        sub_10096C180();
        swift_beginAccess();
        sub_1003B32B0((uint64_t)(v99 + 7), (uint64_t)&v199);
        uint64_t v46 = sub_1001E2584();
        swift_bridgeObjectRelease();
        sub_1003B3318((uint64_t)&v199);
        uint64_t v127 = *(void (**)(char *, uint64_t))(v185 + 8);
        v127(v118, v101);
        v127(v184, v101);
        (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
        ((void (*)(char *, uint64_t))v193)(v196, v194);
        return v46;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v101);
      (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
      ((void (*)(char *, uint64_t))v193)(v196, v194);
      (*(void (**)(char *, uint64_t))(v182 + 8))(v116, v115);
      return 0;
    }
    uint64_t v119 = v164;
    uint64_t v120 = v163;
    (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v163, v196, v180);
    uint64_t v121 = v165;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v120, 1, v172) == 1)
    {
      uint64_t v193 = v97;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v180);
    }
    else
    {
      uint64_t v128 = v160;
      uint64_t v129 = v120;
      uint64_t v130 = v172;
      (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v160, v129, v172);
      uint64_t v131 = v197;
      (*(void (**)(char *, uint64_t))(*v102[5] + 240))(v128, 1);
      uint64_t v197 = v131;
      if (v131)
      {
        (*(void (**)(char *, uint64_t))(v121 + 8))(v128, v130);
        (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v101);
        (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
        ((void (*)(char *, uint64_t))v97)(v196, v94);
        return v46;
      }
      uint64_t v193 = v97;
      (*(void (**)(char *, uint64_t))(v121 + 8))(v128, v130);
      uint64_t v132 = v156;
      uint64_t v133 = v155;
      uint64_t v134 = v157;
      (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v155, v162, v157);
      uint64_t v135 = v158;
      uint64_t v136 = v159;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v133, 1, v159) != 1)
      {
        int v137 = v154;
        (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v154, v133, v136);
        uint64_t v138 = v135;
        uint64_t v139 = &v137[*(int *)(v136 + 48)];
        uint64_t v140 = type metadata accessor for ItemMetadata();
        uint64_t v103 = v150;
        if (v139[*(int *)(v140 + 64)] == 1)
        {
          char v141 = v139[*(int *)(v140 + 60)];
          (*(void (**)(char *, uint64_t))(v138 + 8))(v154, v159);
          if (v141)
          {
            char v100 = 1;
            uint64_t v102 = v198;
LABEL_35:
            uint64_t v97 = v193;
            goto LABEL_19;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v138 + 8))(v154, v159);
        }
        uint64_t v102 = v198;
LABEL_30:
        uint64_t v122 = v197;
        char v100 = (*(uint64_t (**)(uint64_t))(*v102[5] + 464))(v103);
        uint64_t v197 = v122;
        if (v122)
        {
          (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v101);
          (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
          ((void (*)(char *, uint64_t))v193)(v196, v94);
          return v46;
        }
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v132 + 8))(v133, v134);
      uint64_t v102 = v198;
    }
    uint64_t v103 = v150;
    goto LABEL_30;
  }
  return v46;
}

uint64_t sub_100425D20(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, int8x16_t *), uint64_t a5)
{
  uint64_t v142 = a4;
  uint64_t v143 = a5;
  uint64_t v141 = a3;
  uint64_t v147 = a1;
  uint64_t v6 = (uint64_t *)*v5;
  uint64_t v7 = *(void *)(*v5 + 608);
  uint64_t v8 = *(void *)(*v5 + 624);
  uint64_t v137 = type metadata accessor for SnapshotItem();
  uint64_t v9 = sub_10096C890();
  __chkstk_darwin(v9 - 8);
  uint64_t v138 = (char *)&v116 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v135 = type metadata accessor for ItemState();
  uint64_t v11 = sub_10096C890();
  __chkstk_darwin(v11 - 8);
  uint64_t v136 = (char *)&v116 - v12;
  uint64_t v146 = v6;
  uint64_t v13 = v6[77];
  uint64_t v14 = (char *)v6[75];
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v148 = v15;
  uint64_t v149 = v16;
  uint64_t v150 = AssociatedConformanceWitness;
  uint64_t v151 = v18;
  uint64_t v130 = type metadata accessor for FileItemVersion();
  uint64_t v19 = sub_10096C890();
  __chkstk_darwin(v19 - 8);
  uint64_t v131 = (char *)&v116 - v20;
  uint64_t v148 = v7;
  uint64_t v149 = (uint64_t)v14;
  uint64_t v150 = v8;
  uint64_t v151 = v13;
  uint64_t v144 = v13;
  uint64_t v134 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v133 = v134[-1].i64[1];
  __chkstk_darwin(v134);
  uint64_t v132 = (char *)&v116 - v21;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v148 = v22;
  uint64_t v149 = v23;
  uint64_t v150 = v24;
  uint64_t v151 = v25;
  uint64_t v26 = type metadata accessor for FileItemVersion();
  uint64_t v126 = sub_10096C890();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v139 = (char *)&v116 - v27;
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v29 = sub_10096C890();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v116 - v32;
  uint64_t v128 = v26;
  uint64_t v129 = *(void *)(v26 - 8);
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v124 = (char *)&v116 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v127 = (char *)&v116 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v123 = (char *)&v116 - v39;
  uint64_t v40 = v28;
  uint64_t v41 = *(void *)(v28 - 8);
  uint64_t v42 = *(void *)(v41 + 64);
  uint64_t v43 = __chkstk_darwin(v38);
  uint64_t v120 = (char *)&v116 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v43);
  uint64_t v122 = (char *)&v116 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v140 = (char *)&v116 - v47;
  __chkstk_darwin(v46);
  uint64_t v121 = (char *)&v116 - v48;
  uint64_t v117 = *(void *)(v147[4] + 16);
  uint64_t v49 = v146[79];
  uint64_t v146 = v5;
  uint64_t v50 = (char *)v5 + v49;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v33, v50, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v33, 1, v40) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
    uint64_t v148 = (uint64_t)v14;
    uint64_t v149 = v7;
    uint64_t v150 = v144;
    uint64_t v151 = v8;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v51 = swift_allocError();
    uint64_t v53 = v52;
    uint64_t v54 = swift_getAssociatedTypeWitness();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v56 = (void *)(v53 + *(int *)(TupleTypeMetadata2 + 48));
    uint64_t v57 = v146;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v53, (char *)v57 + *(void *)(*v57 + 576), v54);
    *uint64_t v56 = 0xD000000000000010;
    v56[1] = 0x80000001009A0360;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v53, 0, 1, TupleTypeMetadata2);
    swift_willThrow();
  }
  else
  {
    uint64_t v118 = v7;
    uint64_t v58 = v144;
    uint64_t v116 = *(void (**)(void))(v41 + 32);
    ((void (*)(char *, char *, uint64_t))v116)(v140, v33, v40);
    uint64_t v59 = *(void *)(*v146 + 648);
    uint64_t v119 = v41;
    uint64_t v60 = (char *)v146 + v59;
    swift_beginAccess();
    uint64_t v61 = v125;
    uint64_t v62 = v139;
    uint64_t v63 = v126;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v139, v60, v126);
    uint64_t v64 = v129;
    uint64_t v65 = v128;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v62, 1, v128) == 1)
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v139, v63);
      uint64_t v148 = (uint64_t)v14;
      uint64_t v149 = v118;
      uint64_t v150 = v58;
      uint64_t v151 = v8;
      type metadata accessor for Propagation.PropagationError();
      swift_getWitnessTable();
      uint64_t v51 = swift_allocError();
      uint64_t v67 = v66;
      uint64_t v68 = swift_getAssociatedTypeWitness();
      uint64_t v69 = swift_getTupleTypeMetadata2();
      uint64_t v70 = (void *)(v67 + *(int *)(v69 + 48));
      uint64_t v57 = v146;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v67, (char *)v57 + *(void *)(*v57 + 576), v68);
      *uint64_t v70 = 0xD000000000000011;
      v70[1] = 0x80000001009A0FE0;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v67, 0, 1, v69);
      swift_willThrow();
    }
    else
    {
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
      v71(v127, v139, v65);
      int v72 = *((unsigned __int8 *)v146 + *(void *)(*v146 + 664));
      if (v72 == 2)
      {
        uint64_t v148 = (uint64_t)v14;
        uint64_t v149 = v118;
        uint64_t v150 = v58;
        uint64_t v151 = v8;
        type metadata accessor for Propagation.PropagationError();
        swift_getWitnessTable();
        uint64_t v51 = swift_allocError();
        uint64_t v73 = v65;
        uint64_t v75 = v74;
        uint64_t v76 = swift_getAssociatedTypeWitness();
        uint64_t v77 = swift_getTupleTypeMetadata2();
        uint64_t v78 = (void *)(v75 + *(int *)(v77 + 48));
        uint64_t v57 = v146;
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v75, (char *)v57 + *(void *)(*v57 + 576), v76);
        *uint64_t v78 = 0xD000000000000016;
        v78[1] = 0x80000001009A1000;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v75, 0, 1, v77);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v127, v73);
      }
      else
      {
        if (*((unsigned char *)v146 + *(void *)(*v146 + 672)) != 2)
        {
          LODWORD(v139) = v72 & 1;
          uint64_t v138 = v14;
          uint64_t v96 = v121;
          uint64_t v97 = AssociatedTypeWitness;
          v116();
          uint64_t v98 = v123;
          v71(v123, v127, v65);
          uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
          char v100 = v96;
          v99(v122, v96, v97);
          (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v124, v98, v65);
          uint64_t v101 = v146;
          uint64_t v140 = *(char **)((char *)v101 + *(void *)(*v101 + 584));
          v99(v120, v100, v97);
          uint64_t v102 = v119;
          unint64_t v103 = (*(unsigned __int8 *)(v119 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
          uint64_t v104 = (void *)swift_allocObject();
          uint64_t v105 = v118;
          v104[2] = v138;
          v104[3] = v105;
          uint64_t v106 = v143;
          v104[4] = v144;
          v104[5] = v8;
          v104[6] = v147;
          v104[7] = v101;
          v104[8] = v142;
          v104[9] = v106;
          ((void (*)(char *, char *, uint64_t))v116)((char *)v104 + v103, v120, v97);
          *(void *)((char *)v104 + ((v42 + v103 + 7) & 0xFFFFFFFFFFFFFFF8)) = v141;
          uint64_t v107 = *(void (**)(char *, void, char *, char *, uint64_t (*)(uint64_t), void *))(*(void *)v117 + 632);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v108 = v122;
          uint64_t v109 = v124;
          v107(v122, v139, v124, v140, sub_10042BD84, v104);
          swift_release();
          uint64_t v110 = *(void (**)(char *, uint64_t))(v129 + 8);
          uint64_t v111 = v109;
          uint64_t v112 = v128;
          v110(v111, v128);
          uint64_t v113 = *(void (**)(char *, uint64_t))(v102 + 8);
          uint64_t v114 = AssociatedTypeWitness;
          v113(v108, AssociatedTypeWitness);
          v110(v123, v112);
          return ((uint64_t (*)(char *, uint64_t))v113)(v121, v114);
        }
        uint64_t v148 = (uint64_t)v14;
        uint64_t v149 = v118;
        uint64_t v150 = v58;
        uint64_t v151 = v8;
        type metadata accessor for Propagation.PropagationError();
        swift_getWitnessTable();
        uint64_t v51 = swift_allocError();
        uint64_t v79 = v65;
        uint64_t v81 = v80;
        uint64_t v82 = swift_getAssociatedTypeWitness();
        uint64_t v83 = swift_getTupleTypeMetadata2();
        id v84 = (void *)(v81 + *(int *)(v83 + 48));
        uint64_t v57 = v146;
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v81, (char *)v57 + *(void *)(*v57 + 576), v82);
        *id v84 = 0xD000000000000011;
        v84[1] = 0x80000001009A1020;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v81, 0, 1, v83);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v129 + 8))(v127, v79);
      }
    }
    (*(void (**)(char *, uint64_t))(v119 + 8))(v140, AssociatedTypeWitness);
  }
  uint64_t v85 = (uint64_t)v131;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v131, 1, 1);
  uint64_t v86 = (char *)v57 + *(void *)(*v57 + 656);
  uint64_t v87 = *(void *)v86;
  int v88 = v86[8];
  uint64_t v89 = (uint64_t)v136;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v136, 1, 1);
  uint64_t v90 = v138;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v138, 1, 1);
  uint64_t v91 = *(void **)((char *)v57 + *(void *)(*v57 + 584));
  swift_retain();
  swift_errorRetain();
  id v92 = v91;
  uint64_t v93 = v132;
  sub_1003B4A90(v57, v85, v87, v88, v89, v90, 0, 0, v132, 0, v51, (uint64_t)v91);
  uint64_t v94 = v134;
  uint64_t v95 = sub_1003D25F0(v147, v141, v134);
  (*(void (**)(char *, int8x16_t *))(v133 + 8))(v93, v94);
  v142(0, 0, 0, v95);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_100427028(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a3;
  uint64_t v50 = a7;
  uint64_t v44 = a6;
  uint64_t v40 = a5;
  uint64_t v41 = a4;
  uint64_t v42 = a1;
  uint64_t v46 = (void *)*a2;
  uint64_t v47 = a2;
  uint64_t v48 = v46[12];
  uint64_t v43 = v46[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v39 = (char *)&v35 - v12;
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v14 = sub_10096D510();
  uint64_t v37 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v36 = (char *)&v35 - v17;
  uint64_t v19 = swift_allocObject();
  uint64_t v45 = v19;
  *(void *)(v19 + 16) = a4;
  *(void *)(v19 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v42, v14);
  uint64_t v20 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v44, AssociatedTypeWitness);
  unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v22 = (v16 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + v22 + 8) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = v47;
  uint64_t v28 = v46;
  *((void *)v26 + 2) = v46[11];
  *((void *)v26 + 3) = v43;
  *((void *)v26 + 4) = v28[13];
  *((void *)v26 + 5) = v48;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v26[v21], v36, v37);
  *(void *)&v26[v22] = v27;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v26[v23], v39, v38);
  uint64_t v29 = &v26[v24];
  uint64_t v30 = v40;
  *(void *)uint64_t v29 = v41;
  *((void *)v29 + 1) = v30;
  uint64_t v31 = v49;
  uint64_t v32 = v50;
  *(void *)&v26[v25] = v49;
  *(void *)&v26[(v25 + 15) & 0xFFFFFFFFFFFFFFF8] = v32;
  uint64_t v33 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_10042BE40, v31, (uint64_t)sub_1003B377C, v45, (uint64_t)sub_10042C104, (uint64_t)v26, v33, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100427440(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, unint64_t, int8x16_t *), uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v130 = a6;
  uint64_t v131 = a7;
  uint64_t v114 = a5;
  uint64_t v115 = a4;
  uint64_t v122 = a3;
  uint64_t v139 = a1;
  uint64_t v8 = *a2;
  uint64_t v9 = *(void **)(*a2 + 96);
  uint64_t v10 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v111[1] = swift_getAssociatedConformanceWitness();
  uint64_t v129 = type metadata accessor for ItemState();
  uint64_t v12 = sub_10096C890();
  __chkstk_darwin(v12 - 8);
  uint64_t v141 = (uint64_t)v111 - v13;
  uint64_t v14 = *(void *)(v8 + 104);
  uint64_t v134 = a2;
  unint64_t v15 = *(void *)(v8 + 88);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v143 = v16;
  unint64_t v144 = v17;
  uint64_t v145 = AssociatedConformanceWitness;
  uint64_t v146 = v19;
  uint64_t v124 = type metadata accessor for FileItemVersion();
  uint64_t v20 = sub_10096C890();
  __chkstk_darwin(v20 - 8);
  uint64_t v140 = (uint64_t)v111 - v21;
  uint64_t v143 = v10;
  unint64_t v144 = v15;
  uint64_t v145 = (uint64_t)v9;
  uint64_t v146 = v14;
  uint64_t v126 = type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v128 = (char *)v111 - v22;
  uint64_t v23 = type metadata accessor for SnapshotItem();
  unint64_t v136 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v116 = (char *)v111 - v25;
  uint64_t v113 = AssociatedTypeWitness;
  uint64_t v112 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v120 = (char *)v111 - v27;
  uint64_t v133 = *(void *)(v10 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v119 = (char *)v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)v111 - v30;
  uint64_t v123 = v9;
  uint64_t v32 = type metadata accessor for FileTreeError();
  uint64_t v117 = *(void (***)(char *, uint64_t))(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v118 = (char *)v111 - v33;
  uint64_t v121 = v10;
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v35 = sub_10096D510();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (void *)((char *)v111 - v37);
  uint64_t v137 = (void (*)(void, void, void))v23;
  uint64_t v142 = sub_10096C890();
  uint64_t v138 = *(void *)(v142 - 8);
  uint64_t v39 = __chkstk_darwin(v142);
  uint64_t v127 = (char *)v111 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v132 = (char *)v111 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v45 = (char *)v111 - v44;
  __chkstk_darwin(v43);
  uint64_t v147 = (uint64_t)v111 - v46;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v36 + 16))(v38, v139, v35);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = v117;
    uint64_t v143 = *v38;
    uint64_t v48 = v143;
    swift_errorRetain();
    uint64_t v49 = v118;
    int v50 = swift_dynamicCast();
    uint64_t v51 = v142;
    uint64_t v52 = v132;
    uint64_t v139 = v48;
    if (v50)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v54 = v135;
      if (EnumCaseMultiPayload == 9)
      {
LABEL_6:
        uint64_t v55 = v134;
        v47[1](v49, v32);
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(*(void *)v55[4] + 240))(v122, 1);
        if (v54) {
          return swift_errorRelease();
        }
        uint64_t v135 = 0;
        uint64_t v108 = v147;
        uint64_t v109 = v45;
        uint64_t v64 = v138;
        (*(void (**)(uint64_t, char *, uint64_t))(v138 + 32))(v147, v109, v51);
        uint64_t v81 = v108;
        uint64_t v133 = 0;
        uint64_t v123 = 0;
        uint64_t v69 = (void *)0xE000000000000000;
        uint64_t v122 = v139;
        uint64_t v139 = 0;
        uint64_t v80 = v124;
        goto LABEL_17;
      }
      if (EnumCaseMultiPayload == 3)
      {
        sub_100033BE8(&qword_100AD7360);
        uint64_t v32 = v113;
        swift_getTupleTypeMetadata2();
        swift_errorRelease();
        uint64_t v47 = v112;
        goto LABEL_6;
      }
      v47[1](v49, v32);
      uint64_t v48 = v139;
    }
    swift_errorRelease();
    unint64_t v83 = v136;
    uint64_t v82 = v137;
    uint64_t v84 = v147;
    (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(void, void, void)))(v136 + 56))(v147, 1, 1, v137);
    swift_errorRetain();
    uint64_t v81 = v84;
    uint64_t v133 = 0;
    uint64_t v123 = 0;
    uint64_t v69 = (void *)0xE000000000000000;
    uint64_t v122 = v48;
    uint64_t v80 = v124;
    uint64_t v64 = v138;
    goto LABEL_20;
  }
  id v57 = v119;
  uint64_t v58 = v120;
  uint64_t v59 = v31;
  uint64_t v118 = (char *)v32;
  uint64_t v60 = v123;
  uint64_t v61 = *(void **)((char *)v38 + *(int *)(TupleTypeMetadata2 + 48));
  uint64_t v62 = v121;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v133 + 48))(v38, 1, v121) != 1)
  {
    uint64_t v70 = v133;
    (*(void (**)(char *, uint64_t *, uint64_t))(v133 + 32))(v59, v38, v62);
    (*(void (**)(id, char *, uint64_t))(v70 + 16))(v57, v59, v62);
    uint64_t v71 = v147;
    SnapshotItem.init(_:)((uint64_t)v57, v62, (uint64_t)v60, v147);
    (*(void (**)(uint64_t, void, uint64_t, void (*)(void, void, void)))(v136 + 56))(v71, 0, 1, v137);
    int v72 = (void (**)(char *, uint64_t))v60[8];
    uint64_t v119 = v61;
    uint64_t v117 = v72;
    ((void (*)(uint64_t, void *))v72)(v62, v60);
    uint64_t v73 = v113;
    LOBYTE(v71) = sub_10096BBE0();
    uint64_t v74 = v112;
    v112[1](v58, v73);
    if (v71)
    {
      (*(void (**)(char *, uint64_t))(v133 + 8))(v59, v62);

      uint64_t v63 = 0;
    }
    else
    {
      swift_getWitnessTable();
      uint64_t v139 = swift_allocError();
      uint64_t v75 = v61;
      uint64_t v76 = v73;
      uint64_t v78 = v77;
      sub_10096C890();
      swift_getTupleTypeMetadata2();
      ((void (*)(uint64_t, uint64_t, uint64_t))v74[2])(v78, v122, v76);
      uint64_t v79 = v76;
      uint64_t v61 = v75;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v74[7])(v78, 0, 1, v79);
      ((void (*)(uint64_t, void *))v117)(v62, v123);
      uint64_t v63 = v139;
      swift_storeEnumTagMultiPayload();

      (*(void (**)(char *, uint64_t))(v133 + 8))(v59, v62);
    }
    uint64_t v64 = v138;
    uint64_t v52 = v132;
    swift_errorRetain();
    uint64_t v139 = v63;
    if (v61) {
      goto LABEL_10;
    }
LABEL_15:
    uint64_t v133 = 0;
    uint64_t v123 = 0;
    uint64_t v69 = (void *)0xE000000000000000;
    uint64_t v122 = v63;
    goto LABEL_16;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(void, void, void)))(v136 + 56))(v147, 1, 1, v137);
  uint64_t v63 = 0;
  uint64_t v64 = v138;
  uint64_t v52 = v132;
  uint64_t v139 = 0;
  if (!v61) {
    goto LABEL_15;
  }
LABEL_10:
  uint64_t v143 = 0x3A7265766D6F6420;
  unint64_t v144 = 0xE800000000000000;
  uint64_t v123 = v61;
  id v65 = [v61 description];
  uint64_t v66 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v68 = v67;

  v148._countAndFlagsBits = v66;
  v148._object = v68;
  sub_10096BDC0(v148);
  swift_bridgeObjectRelease();
  uint64_t v69 = (void *)v144;
  uint64_t v133 = v143;
  uint64_t v122 = v63;
LABEL_16:
  uint64_t v80 = v124;
  uint64_t v81 = v147;
LABEL_17:
  unint64_t v83 = v136;
  uint64_t v82 = v137;
LABEL_20:
  uint64_t v85 = v142;
  uint64_t v137 = *(void (**)(void, void, void))(v64 + 16);
  v137(v52, v81, v142);
  if ((*(unsigned int (**)(char *, uint64_t, void))(v83 + 48))(v52, 1, v82) == 1)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v85);
    uint64_t v143 = 0x3A6C61757463613CLL;
    unint64_t v144 = 0xEB000000006C696ELL;
    v149._countAndFlagsBits = v133;
    v149._object = v69;
    sub_10096BDC0(v149);
    swift_bridgeObjectRelease();
    v150._countAndFlagsBits = 62;
    v150._object = (void *)0xE100000000000000;
    sub_10096BDC0(v150);
    uint64_t v86 = v143;
    unint64_t v87 = v144;
  }
  else
  {
    int v88 = v52;
    uint64_t v89 = v116;
    (*(void (**)(char *, char *, void))(v83 + 32))(v116, v88, v82);
    uint64_t v143 = 0;
    unint64_t v144 = 0xE000000000000000;
    v151._countAndFlagsBits = 0x3A6C61757463613CLL;
    v151._object = (void *)0xE800000000000000;
    sub_10096BDC0(v151);
    swift_getWitnessTable();
    sub_10096D270();
    v152._countAndFlagsBits = v133;
    v152._object = v69;
    sub_10096BDC0(v152);
    swift_bridgeObjectRelease();
    v153._countAndFlagsBits = 8254;
    v153._object = (void *)0xE200000000000000;
    sub_10096BDC0(v153);
    uint64_t v86 = v143;
    unint64_t v87 = v144;
    (*(void (**)(char *, void (*)(void, void, void)))(v83 + 8))(v89, v82);
  }
  uint64_t v90 = v127;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v140, 1, 1, v80);
  uint64_t v91 = v130;
  id v92 = (char *)v91 + *(void *)(*v91 + 656);
  uint64_t v93 = *(void *)v92;
  int v94 = v92[8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v141, 1, 1);
  v137(v90, v147, v85);
  uint64_t v95 = v139;
  unint64_t v136 = v87;
  if (v139)
  {
    uint64_t v96 = *(void **)((char *)v91 + *(void *)(*v91 + 584));
    swift_errorRetain();
    id v97 = v96;
  }
  else
  {
    uint64_t v96 = 0;
  }
  uint64_t v98 = (int8x16_t *)v126;
  swift_retain();
  uint64_t v99 = (uint64_t)v123;
  char v100 = v123;
  uint64_t v101 = v91;
  id v102 = v100;
  uint64_t v110 = v95;
  unint64_t v103 = v128;
  sub_1003B4A90(v101, v140, v93, v94, v141, v90, 0, 0, v128, v99, v110, (uint64_t)v96);
  uint64_t v104 = v135;
  uint64_t v105 = sub_1003D25F0(v134, v131, v98);
  if (v104)
  {
    swift_bridgeObjectRelease();

    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(char *, int8x16_t *))(v125 + 8))(v103, v98);
  }
  else
  {
    uint64_t v106 = v105;
    (*(void (**)(char *, int8x16_t *))(v125 + 8))(v103, v98);
    if (!v106)
    {
      uint64_t v107 = (int8x16_t *)v122;
      swift_errorRetain();
      uint64_t v106 = v107;
    }
    v115(0, v86, v136, v106);
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v138 + 8))(v147, v142);
}

id sub_100428490@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_10096C890();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD7510);
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v5 = v3;
  uint64_t v6 = a1 + TupleTypeMetadata[12];
  uint64_t v16 = a1 + TupleTypeMetadata[16];
  uint64_t v17 = TupleTypeMetadata[20];
  uint64_t v18 = TupleTypeMetadata[24];
  uint64_t v7 = (uint64_t)v1 + *(void *)(v5 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v7, AssociatedTypeWitness);
  uint64_t v9 = (uint64_t)v1 + *(void *)(*v1 + 632);
  swift_beginAccess();
  uint64_t v10 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v6, v9, v10);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 648);
  swift_beginAccess();
  type metadata accessor for FileItemVersion();
  uint64_t v12 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v16, v11, v12);
  uint64_t v13 = *v1;
  *(unsigned char *)(a1 + v17) = *((unsigned char *)v1 + *(void *)(*v1 + 664));
  id v19 = *(id *)((char *)v1 + *(void *)(v13 + 584));
  *(void *)(a1 + v18) = v19;
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 0, 1, v14);

  return v19;
}

uint64_t sub_100428928()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(void *)(*(void *)v0 + 640), v2);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v5 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 680);
  type metadata accessor for SnapshotItem();
  uint64_t v7 = sub_10096C890();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_100428B7C()
{
  uint64_t v0 = sub_10040F300();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(void *)(*(void *)v0 + 640), v2);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v5 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 680);
  type metadata accessor for SnapshotItem();
  uint64_t v7 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v0;
}

uint64_t sub_100428DDC()
{
  return sub_100428DF4(sub_100428B7C);
}

uint64_t sub_100428DF4(uint64_t (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Propagation.DeleteItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100428E64()
{
  return 0x6E6F6974656C6564;
}

void sub_100428E88(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, id), uint64_t a5)
{
  uint64_t v110 = a3;
  uint64_t v120 = a2;
  uint64_t v9 = *v5;
  uint64_t v10 = *(void *)(*v5 + 608);
  uint64_t v11 = *(void *)(*v5 + 624);
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v105 = sub_10096C890();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v107 = (char *)&v87 - v13;
  unint64_t v14 = *(void *)(v9 + 600);
  uint64_t v121 = v5;
  uint64_t v15 = *(void *)(v9 + 616);
  uint64_t v129 = v10;
  unint64_t v130 = v14;
  uint64_t v131 = v11;
  uint64_t v132 = v15;
  uint64_t v109 = type metadata accessor for ReconciliationMutation();
  uint64_t v113 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v108 = (char *)&v87 - v16;
  uint64_t v114 = v10;
  uint64_t v115 = v11;
  uint64_t v129 = v10;
  unint64_t v130 = v14;
  unint64_t v116 = v14;
  uint64_t v131 = v11;
  uint64_t v132 = v15;
  uint64_t v119 = v15;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  uint64_t v122 = sub_10096C890();
  uint64_t v112 = *(void (***)(uint64_t, uint64_t))(v122 - 8);
  uint64_t v18 = __chkstk_darwin(v122);
  uint64_t v123 = (char *)&v87 - v19;
  uint64_t v126 = v17;
  uint64_t v111 = *(void (***)(char *, uint64_t))(v17 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v124 = (char *)&v87 - v21;
  uint64_t v118 = *(void *)(v12 - 8);
  uint64_t v22 = *(void *)(v118 + 64);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v106 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v87 - v25;
  __chkstk_darwin(v24);
  uint64_t v127 = (char *)&v87 - v27;
  uint64_t v28 = sub_10096B480();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v87 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*a1 + 152))(v30) & 0x4000) == 0)
  {
    id v33 = (id)FPNotSupportedError();
    a4(0, 0, 0, v33);

    return;
  }
  uint64_t v117 = a5;
  uint64_t v125 = a4;
  uint64_t v34 = a1[4];
  if (sub_1005152D8())
  {
    id v35 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v36 = sub_10096B470();
    os_log_type_t v37 = sub_10096C5B0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "DeletionAcked triggered on FS snapshot", v38, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
    id v39 = (id)FPNotSupportedError();
    v125(0, 0, 0, v39);

    return;
  }
  uint64_t v40 = (char *)v121 + *(void *)(*v121 + 576);
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v34 + 472))(v40, v120);
  uint64_t v95 = v42;
  uint64_t v43 = v125;
  uint64_t v44 = v41;
  uint64_t v94 = v34;
  uint64_t v99 = a1;
  uint64_t v92 = (uint64_t)v40;
  uint64_t v93 = sub_10096C160();
  uint64_t v120 = v44;
  if (!sub_10096C1A0())
  {
LABEL_25:
    uint64_t v98 = 0;
LABEL_26:
    swift_bridgeObjectRelease();
    if (!v95)
    {
      uint64_t v66 = v92;
      (*(void (**)(uint64_t, uint64_t))(*(void *)v94 + 240))(v92, 1);
      uint64_t v67 = v118;
      uint64_t v68 = v107;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v107, 1, v12) == 1)
      {
        (*(void (**)(char *, uint64_t))(v104 + 8))(v68, v105);
      }
      else
      {
        uint64_t v69 = v106;
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v106, v68, v12);
        uint64_t WitnessTable = swift_getWitnessTable();
        if (FileItem.kind.getter(v12, WitnessTable) == 1)
        {
          uint64_t v72 = v114;
          uint64_t v71 = v115;
          uint64_t v129 = v114;
          unint64_t v130 = v116;
          unint64_t v73 = v116;
          uint64_t v131 = v115;
          uint64_t v132 = v119;
          uint64_t v74 = v119;
          uint64_t v127 = (char *)type metadata accessor for JobResult();
          uint64_t v129 = v72;
          unint64_t v130 = v73;
          uint64_t v131 = v71;
          uint64_t v132 = v74;
          type metadata accessor for Ingestion.ReSnapshotChildren();
          uint64_t v75 = v121;
          uint64_t v76 = sub_1008AA684(v66, v121[15], v121[16], v121[17]);
          sub_1004D4360(v110, v76);
          swift_release();
          uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
          uint64_t v78 = swift_getAssociatedTypeWitness();
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          uint64_t v80 = swift_getAssociatedConformanceWitness();
          uint64_t v129 = AssociatedTypeWitness;
          unint64_t v130 = v78;
          uint64_t v131 = AssociatedConformanceWitness;
          uint64_t v132 = v80;
          uint64_t v43 = v125;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          uint64_t v82 = (uint64_t)v108;
          unint64_t v83 = &v108[*(int *)(TupleTypeMetadata2 + 48)];
          uint64_t v84 = v92;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v108, v92, AssociatedTypeWitness);
          swift_storeEnumTagMultiPayload();
          char *v83 = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v85 = v109;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v110, v82);
          (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v82, v85);
          uint64_t v129 = v72;
          unint64_t v130 = v116;
          uint64_t v131 = v115;
          uint64_t v132 = v119;
          type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
          sub_1003A9380(v84, v75[15], v75[16], v75[17]);
          uint64_t v86 = sub_10058364C(8);
          swift_retain();
          swift_release();
          sub_1004D4360(v110, v86);
          swift_release();
          (*(void (**)(char *, uint64_t))(v118 + 8))(v106, v12);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v12);
        }
      }
    }
    uint64_t v129 = 0;
    unint64_t v130 = 0xE000000000000000;
    uint64_t v65 = v95;
    swift_retain();
    sub_10096CBD0(19);
    swift_bridgeObjectRelease();
    uint64_t v129 = 0x3A656C6174733CLL;
    unint64_t v130 = 0xE700000000000000;
    uint64_t v128 = v98;
    v133._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v133);
    swift_bridgeObjectRelease();
    v134._countAndFlagsBits = 0x3A6C61746F7420;
    v134._object = (void *)0xE700000000000000;
    sub_10096BDC0(v134);
    uint64_t v128 = v93;
    v135._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v135);
    swift_bridgeObjectRelease();
    v136._countAndFlagsBits = 62;
    v136._object = (void *)0xE100000000000000;
    sub_10096BDC0(v136);
    v43(v65, v129, v130, 0);
    swift_release_n();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v45 = 0;
  uint64_t v98 = 0;
  uint64_t v102 = v99[2];
  uint64_t v46 = v118;
  unint64_t v103 = (void (**)(char *, uint64_t *, uint64_t))(v118 + 16);
  uint64_t v101 = (void (**)(char *, char *, uint64_t))(v118 + 32);
  char v100 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 6);
  id v97 = (void (**)(char *, uint64_t, uint64_t))(v111 + 4);
  uint64_t v96 = v111 + 1;
  uint64_t v111 = (void (**)(char *, uint64_t))(v118 + 8);
  uint64_t v91 = (void (**)(uint64_t, uint64_t))(v113 + 8);
  ++v112;
  uint64_t v47 = (uint64_t)v123;
  uint64_t v48 = v120;
  while (1)
  {
    BOOL v50 = sub_10096C130();
    sub_10096C0E0();
    if (v50)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v127, v48+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v45, v12);
      uint64_t v43 = (void (*)(uint64_t, uint64_t, unint64_t, id))(v45 + 1);
      if (__OFADD__(v45, 1)) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v64 = sub_10096CC20();
      if (v22 != 8) {
        goto LABEL_34;
      }
      uint64_t v129 = v64;
      (*v103)(v127, &v129, v12);
      swift_unknownObjectRelease();
      uint64_t v43 = (void (*)(uint64_t, uint64_t, unint64_t, id))(v45 + 1);
      if (__OFADD__(v45, 1))
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    (*v101)(v26, v127, v12);
    sub_1000DEDD8((uint64_t)v26, v47);
    uint64_t v51 = v126;
    if ((*v100)(v47, 1, v126) == 1)
    {
      (*v111)(v26, v12);
      (*v112)(v47, v122);
      goto LABEL_10;
    }
    uint64_t v52 = v47;
    uint64_t v53 = (uint64_t)v124;
    (*v97)(v124, v52, v51);
    if (sub_10086F3CC(v53, v99)) {
      break;
    }
    (*v96)(v124, v51);
    (*v111)(v26, v12);
    uint64_t v47 = (uint64_t)v123;
LABEL_10:
    uint64_t v48 = v120;
    ++v45;
    BOOL v49 = v43 == (void (*)(uint64_t, uint64_t, unint64_t, id))sub_10096C1A0();
    uint64_t v43 = v125;
    if (v49) {
      goto LABEL_26;
    }
  }
  BOOL v54 = __OFADD__(v98++, 1);
  uint64_t v47 = (uint64_t)v123;
  if (!v54)
  {
    uint64_t v55 = swift_getWitnessTable();
    if (FileItem.kind.getter(v12, v55) == 1
      && ((*(uint64_t (**)(char *, uint64_t))(*(void *)v94 + 368))(v26, 1) & 1) == 0)
    {
      uint64_t v129 = v114;
      unint64_t v130 = v116;
      uint64_t v131 = v115;
      uint64_t v132 = v119;
      uint64_t v90 = type metadata accessor for JobResult();
      uint64_t v56 = swift_getAssociatedTypeWitness();
      uint64_t v88 = swift_getAssociatedTypeWitness();
      uint64_t v89 = v56;
      uint64_t v87 = swift_getAssociatedConformanceWitness();
      unint64_t v57 = v88;
      uint64_t v58 = swift_getAssociatedConformanceWitness();
      uint64_t v129 = v56;
      unint64_t v130 = v57;
      uint64_t v131 = v87;
      uint64_t v132 = v58;
      uint64_t v88 = type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v59 = swift_getTupleTypeMetadata2();
      uint64_t v60 = (uint64_t)v108;
      uint64_t v61 = &v108[*(int *)(v59 + 48)];
      (*(void (**)(char *, char *))(*(void *)(v89 - 8) + 16))(v108, v26);
      swift_storeEnumTagMultiPayload();
      *(_OWORD *)uint64_t v61 = *(_OWORD *)(v121 + 15);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = v109;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v110, v60);
      uint64_t v63 = v62;
      uint64_t v46 = v118;
      (*v91)(v60, v63);
    }
    (*v96)(v124, v126);
    (*v111)(v26, v12);
    goto LABEL_10;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t type metadata accessor for Propagation.DeletionAcked()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10042A000(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a2;
  uint64_t v6 = *(void *)(*a2 + 96);
  uint64_t v7 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_10096C890();
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v73 - v10;
  uint64_t v88 = sub_10096B480();
  uint64_t v84 = *(void (***)(char *, uint64_t))(v88 - 8);
  uint64_t v11 = __chkstk_darwin(v88);
  uint64_t v91 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = AssociatedTypeWitness;
  unint64_t v83 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v92 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v85 = (char *)&v73 - v15;
  uint64_t v16 = *(void *)(v4 + 88);
  uint64_t v17 = *(void *)(v4 + 104);
  uint64_t v94 = v7;
  uint64_t v95 = v6;
  uint64_t v98 = v7;
  uint64_t v99 = v16;
  uint64_t v100 = v6;
  uint64_t v101 = v17;
  uint64_t v18 = type metadata accessor for ItemReconciliation();
  uint64_t v19 = sub_10096C890();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v73 - v22;
  uint64_t v90 = v18;
  uint64_t v89 = *(void *)(v18 - 8);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v86 = (char *)&v73 - v25;
  if (((*(uint64_t (**)(uint64_t))(v5 + 152))(v24) & 0x4000) == 0) {
    goto LABEL_2;
  }
  uint64_t v27 = v96;
  sub_1000DEDD8(a1, (uint64_t)v23);
  uint64_t v96 = v27;
  if (v27) {
    return v26 & 1;
  }
  uint64_t MetatypeMetadata = a1;
  uint64_t v30 = v89;
  uint64_t v29 = v90;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v23, 1, v90) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
LABEL_2:
    char v26 = 0;
    return v26 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v86, v23, v29);
  uint64_t v31 = v83 + 2;
  uint64_t v32 = v85;
  ((void (*)(char *, uint64_t, uint64_t))v83[2])(v85, MetatypeMetadata, v87);
  uint64_t v33 = 1;
  uint64_t v102 = 1;
  uint64_t v34 = (void *)a2[3];
  uint64_t v36 = v94;
  uint64_t v35 = v95;
  uint64_t v98 = v94;
  uint64_t v99 = v16;
  uint64_t v100 = v95;
  uint64_t v101 = v17;
  uint64_t v76 = type metadata accessor for ItemJob();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  uint64_t v98 = v16;
  uint64_t v99 = v36;
  uint64_t v100 = v17;
  uint64_t v101 = v35;
  uint64_t v37 = v87;
  uint64_t v79 = type metadata accessor for Propagation.DeletionAcked();
  uint64_t v38 = *v34;
  unint64_t v83 = v34;
  uint64_t v78 = v38 + 272;
  uint64_t v77 = *(uint64_t (**)(char *, uint64_t))(v38 + 272);
  swift_beginAccess();
  uint64_t v74 = v84 + 1;
  uint64_t v75 = (unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 4);
  id v39 = (void (**)(char *, char *, uint64_t))(v31 + 2);
  uint64_t v84 = (void (**)(char *, uint64_t))(v31 - 1);
  *(void *)&long long v40 = 134217984;
  long long v73 = v40;
  uint64_t v41 = v96;
  while (1)
  {
    if (__ROR8__(0x1CAC083126E978D5 * v33 + 0x10624DD2F1A9FB8, 3) <= 0x4189374BC6A7EEuLL)
    {
      id v42 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      uint64_t v43 = sub_10096B470();
      os_log_type_t v44 = sub_10096C5B0();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = v73;
        *(void *)(v45 + 4) = v102;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "wasDeletionAcked: too many iterations %ld, is there a cycle in the tree?", (uint8_t *)v45, 0xCu);
        swift_slowDealloc();
      }

      (*v74)(v91, v88);
    }
    sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
    swift_allocObject();
    uint64_t v46 = sub_10096C0D0();
    *uint64_t v47 = v79;
    uint64_t v48 = sub_1003FC080(v46);
    uint64_t v49 = v77(v32, v48);
    if (v41)
    {
      uint64_t v96 = v41;
      swift_bridgeObjectRelease();
      (*v84)(v32, v37);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v90);
      return v26 & 1;
    }
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    uint64_t v97 = v50;
    sub_10096C1C0();
    swift_getWitnessTable();
    if ((sub_10096C460() & 1) == 0) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v51 = v93;
    (*(void (**)(char *))(*(void *)a2[4] + 280))(v32);
    if ((*v75)(v51, 1, v37) == 1)
    {
      (*v84)(v32, v37);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v90);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v51, v82);
      goto LABEL_42;
    }
    uint64_t v52 = *v39;
    uint64_t v53 = v92;
    (*v39)(v92, v51, v37);
    swift_getAssociatedConformanceWitness();
    char v54 = sub_10096BBE0();
    uint64_t v55 = v32;
    uint64_t v56 = *v84;
    (*v84)(v55, v37);
    if (v54)
    {
      v56(v53, v37);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v90);
      goto LABEL_42;
    }
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v52)(v55, v53, v37);
    uint64_t v33 = v102 + 1;
    if (__OFADD__(v102, 1)) {
      goto LABEL_54;
    }
    uint64_t v32 = v55;
    ++v102;
  }
  if (!sub_10096C1A0())
  {
    swift_bridgeObjectRelease();
    uint64_t v59 = v89;
    uint64_t v61 = v90;
LABEL_41:
    (*v84)(v32, v37);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v86, v61);
LABEL_42:
    char v26 = 0;
    return v26 & 1;
  }
  uint64_t v57 = *(void *)&v86[*(int *)(v90 + 64) + 8];
  if (sub_10096C130())
  {
    uint64_t v58 = 0;
    uint64_t v59 = v89;
    while (1)
    {
      uint64_t result = sub_10096C0E0();
      uint64_t v60 = v58 + 1;
      if (__OFADD__(v58, 1)) {
        goto LABEL_55;
      }
      if (*(void *)(*(void *)(v50 + 8 * v58 + 32) + 128) >= v57) {
        goto LABEL_43;
      }
      ++v58;
      if (v60 == sub_10096C1A0()) {
        goto LABEL_40;
      }
    }
  }
  if (sub_10096C130())
  {
    uint64_t v62 = 0;
    uint64_t v59 = v89;
    while (1)
    {
      uint64_t result = sub_10096C0E0();
      uint64_t v63 = v62 + 1;
      if (__OFADD__(v62, 1)) {
        goto LABEL_56;
      }
      if (*(void *)(*(void *)(v50 + 8 * v62 + 32) + 128) >= v57) {
        goto LABEL_43;
      }
      ++v62;
      if (v63 == sub_10096C1A0()) {
        goto LABEL_40;
      }
    }
  }
  BOOL v64 = sub_10096C130();
  uint64_t v59 = v89;
  if (v64)
  {
    uint64_t v65 = 0;
    while (1)
    {
      uint64_t result = sub_10096C0E0();
      uint64_t v66 = v65 + 1;
      if (__OFADD__(v65, 1)) {
        goto LABEL_57;
      }
      if (*(void *)(*(void *)(v50 + 8 * v65 + 32) + 128) >= v57)
      {
LABEL_43:
        swift_retain();
        goto LABEL_44;
      }
      ++v65;
      if (v66 == sub_10096C1A0()) {
        goto LABEL_40;
      }
    }
  }
  uint64_t v67 = 4;
  while (2)
  {
    uint64_t v68 = v67 - 4;
    BOOL v69 = sub_10096C130();
    sub_10096C0E0();
    if (v69)
    {
      uint64_t v70 = *(void *)(v50 + 8 * v67);
      uint64_t result = swift_retain();
      BOOL v71 = __OFADD__(v68, 1);
      uint64_t v72 = v67 - 3;
      if (v71) {
        break;
      }
      goto LABEL_48;
    }
    uint64_t result = sub_10096CC20();
    uint64_t v70 = result;
    BOOL v71 = __OFADD__(v68, 1);
    uint64_t v72 = v67 - 3;
    if (!v71)
    {
LABEL_48:
      if (*(void *)(v70 + 128) >= v57)
      {
LABEL_44:
        swift_bridgeObjectRelease();
        (*v84)(v85, v87);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v86, v90);
        char v26 = 1;
        return v26 & 1;
      }
      swift_release();
      ++v67;
      if (v72 == sub_10096C1A0())
      {
LABEL_40:
        swift_bridgeObjectRelease();
        uint64_t v37 = v87;
        uint64_t v61 = v90;
        uint64_t v32 = v85;
        goto LABEL_41;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_10042ABA8()
{
  return 0x752D6C65636E6163;
}

uint64_t sub_10042ABCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v10 = v5 + *(void *)(*(void *)v5 + 576);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), void *))(*(void *)v9 + 760);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v10, sub_10042BBF4, v11);
  swift_release();

  return swift_release();
}

uint64_t sub_10042ACD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  swift_retain_n();
  swift_errorRetain();
  uint64_t v9 = type metadata accessor for Continuation();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003A946C, v7, (uint64_t)sub_10042BC18, (uint64_t)v8, v9, (uint64_t)&type metadata for String);
  swift_release();

  return swift_release();
}

uint64_t sub_10042ADF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1003A9384(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v5;
}

uint64_t type metadata accessor for Propagation.CancelUpdate()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for Propagation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10042AEAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = v5 + *(void *)(*(void *)v5 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v11, a1, AssociatedTypeWitness);
  *(void *)(v5 + *(void *)(*(void *)v5 + 584)) = a2;
  id v13 = a2;
  uint64_t v14 = sub_100610514(a3, a4, a5);
  swift_retain();

  uint64_t v15 = *(void *)(v14 + 96);
  uint64_t v16 = *(void *)(v14 + 104);
  *(void *)(v14 + 96) = 0;
  *(void *)(v14 + 104) = 0;
  char v17 = *(unsigned char *)(v14 + 112);
  *(unsigned char *)(v14 + 112) = 0;
  sub_1000D31F8(v15, v16, v17);
  swift_release();
  return v14;
}

uint64_t sub_10042AFE0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6 + *(void *)(*(void *)v6 + 640);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = v6 + *(void *)(*(void *)v6 + 648);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);
  uint64_t v11 = v6 + *(void *)(*(void *)v6 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = v6 + *(void *)(*(void *)v6 + 664);
  *(void *)uint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 16) = 0xB000000000000000;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  uint64_t v14 = v6 + *(void *)(*(void *)v6 + 672);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v14, 1, 1, TupleTypeMetadata2);
  *(void *)(v6 + *(void *)(*(void *)v6 + 632)) = a2;
  return sub_10042AEAC(a1, a3, a4, a5, a6);
}

uint64_t sub_10042B3C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10042AFE0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10042B440(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = v5 + *(void *)(*(void *)v5 + 632);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  v10(v8, 1, 1, AssociatedTypeWitness);
  v10(v5 + *(void *)(*(void *)v5 + 640), 1, 1, AssociatedTypeWitness);
  uint64_t v11 = v5 + *(void *)(*(void *)v5 + 648);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = v5 + *(void *)(*(void *)v5 + 656);
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  *(unsigned char *)(v5 + *(void *)(*(void *)v5 + 664)) = 2;
  *(unsigned char *)(v5 + *(void *)(*(void *)v5 + 672)) = 2;
  uint64_t v14 = v5 + *(void *)(*(void *)v5 + 680);
  uint64_t v15 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  return sub_10042AEAC(a1, a2, a3, a4, a5);
}

uint64_t sub_10042B714(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10042B440(a1, a2, a3, a4, a5);
}

uint64_t sub_10042B780(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7 + *(void *)(*(void *)v7 + 648);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v8, 1, 1, AssociatedTypeWitness);
  uint64_t v17 = v7 + *(void *)(*(void *)v7 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v17, 1, 1, v10);
  uint64_t v11 = v7 + *(void *)(*(void *)v7 + 664);
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = v7 + *(void *)(*(void *)v7 + 672);
  *(void *)uint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 16) = 0xB000000000000000;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  uint64_t v14 = v7 + *(void *)(*(void *)v7 + 680);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)(v7 + *(void *)(*(void *)v7 + 632)) = a2;
  *(void *)(v7 + *(void *)(*(void *)v7 + 640)) = a3;
  *(unsigned char *)(v7 + *(void *)(*(void *)v7 + 688)) = 0;
  return sub_10042AEAC(a1, a4, a5, a6, a7);
}

uint64_t sub_10042BB6C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10042B780(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10042BBF4(uint64_t a1)
{
  return sub_10042ACD8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10042BC00()
{
  return sub_10043219C((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10042BC18()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 16))(0, 0, 0, *(void *)(v0 + 32));
}

uint64_t type metadata accessor for Propagation.PropagationError()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10042BC74()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10042BD84(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (void *)v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = v1[9];
  uint64_t v9 = *(void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100427028(a1, v5, v6, v7, v8, (uint64_t)v1 + v4, v9);
}

uint64_t sub_10042BE40()
{
  return sub_100610458(1);
}

uint64_t sub_10042BE48()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v3 = *(void *)(sub_10096D510() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = *(void *)(v3 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v7 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v4, 1, v1)) {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v4, v1);
    }
  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((((v9 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6), AssociatedTypeWitness);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10042C104()
{
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v1 = *(void *)(sub_10096D510() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100427440(v0 + v2, *(void **)(v0 + v3), v0 + v5, *(void (**)(void, uint64_t, unint64_t, int8x16_t *))(v0 + v6), *(void *)(v0 + v6 + 8), *(uint64_t **)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10042C2AC()
{
  return sub_10042ECA8((uint64_t)&unk_100A89680, (uint64_t)&unk_100A896A8, (uint64_t)sub_1003B377C, (uint64_t)sub_10042EB88);
}

uint64_t sub_10042C2E8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v28 = AssociatedTypeWitness;
  unint64_t v29 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = v29 + *(void *)(v2 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v26 = (v3 + *(unsigned __int8 *)(*(void *)v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  unint64_t v5 = (((*(void *)(*(void *)v4 + 64) + v26 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v33 = v6;
  uint64_t v34 = v7;
  unint64_t v31 = v5;
  uint64_t v32 = type metadata accessor for FileItemVersion();
  uint64_t v35 = *(unsigned __int8 *)(*(void *)(v32 - 8) + 80);
  uint64_t v30 = (v5 + v35 + 56) & ~v35;
  uint64_t v27 = *(void *)(*(void *)(v32 - 8) + 64) + v30;
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  swift_release();
  swift_release();
  uint64_t v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v0 + v29, v28);
  v10(v0 + v26, v28);
  swift_bridgeObjectRelease();
  unint64_t v11 = v0 + v26 + v4[12];
  uint64_t v12 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v13 = v11 + v12[7];
  uint64_t v14 = sub_10096B0E0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(unint64_t, uint64_t))(v15 + 8);
  v16(v13, v14);
  v16(v11 + v12[8], v14);
  swift_bridgeObjectRelease();
  unint64_t v17 = v11 + v12[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v14)) {
    v16(v17, v14);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t *)(v11 + v12[33]);
  unint64_t v19 = v18[1];
  if (v19 >> 60 != 15) {
    sub_10001E9C0(*v18, v19);
  }
  unint64_t v20 = (v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v21 = *(void *)(v0 + v31 + 16);
  if (v21 >> 60 != 11 && v21 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v0 + v31 + 8), v21);
  }
  (*(void (**)(uint64_t))(*(void *)(v33 - 8) + 8))(v0 + v30);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v34 - 8) + 8))(v0 + v30 + *(int *)(v32 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v0 + v20;
  if (*(void *)(v0 + v20 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v23 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v24 = v0 + ((((v20 + 255) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9);
  (*(void (**)(uint64_t))(*(void *)(v36 - 8) + 8))(v24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v37 - 8) + 8))(v24 + *(int *)(v8 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10042C9FC(uint64_t a1, char a2)
{
  int v16 = a2 & 1;
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v4 = v15 + *(void *)(v3 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v14 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v13 = (*(void *)(v5 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v7 = (((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 255) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_10041E868(a1, v16, *(void **)(v2 + 48), *(void *)(v2 + 56), v2 + v15, v2 + v14, *(void *)(v2 + v13), v2 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8), v2 + v7, v2 + v8, *(void *)(v2 + v9), *(void *)(v2 + v9 + 8), v2 + v11, *(void *)(v2 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10042CDA0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();

  return swift_deallocObject();
}

void *sub_10042CEA4()
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10041DA9C(*(void *)(v0 + 48), v0 + v2, *(uint64_t (**)(void *, void))(v0 + v3), *(void *)(v0 + v3 + 8));
}

uint64_t sub_10042CF58(uint64_t a1, char a2)
{
  return sub_10041E450(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_10042CF68()
{
  sub_10042EAB4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), (uint64_t (*)(void))&_swift_bridgeObjectRelease);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10042CFC0()
{
  return sub_10041E580(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(void, void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10042CFE4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = v19 + *(void *)(v2 + 64);
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v23 = (v3 + *(unsigned __int8 *)(*(void *)v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v20 = *(void *)(*(void *)v4 + 64);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  unint64_t v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v19, AssociatedTypeWitness);
  v7(v0 + v23, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v8 = v0 + v23 + v4[12];
  unint64_t v9 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v10 = v8 + v9[7];
  uint64_t v11 = sub_10096B0E0();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = *(void (**)(unint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  unint64_t v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11)) {
    v13(v14, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v15 = (uint64_t *)(v8 + v9[33]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_10001E9C0(*v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v0 + ((v23 + v20 + v6) & ~v6);
  (*(void (**)(uint64_t))(*(void *)(v21 - 8) + 8))(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v22 - 8) + 8))(v17 + *(int *)(v5 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10042D47C(uint64_t a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_10041EEDC(a1, v1[6], v1[7], v1[8], v1[9], (uint64_t)v1 + v3, (uint64_t)v1 + v6, (uint64_t)v1 + v9, *(uint64_t *)((char *)v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10042D6D0()
{
  return sub_10041D690(1);
}

uint64_t sub_10042D6D8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v24 = type metadata accessor for ItemPropagationResult();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v23 = TupleTypeMetadata2;
  uint64_t v3 = sub_10096D510();
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v25 = (v32 + 48) & ~v32;
  unint64_t v4 = (*(void *)(*(void *)(v3 - 8) + 64) + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v26 = type metadata accessor for ItemState();
  uint64_t v29 = *(unsigned __int8 *)(*(void *)(v26 - 8) + 80);
  unint64_t v33 = (v7 + v8 + v29) & ~v29;
  uint64_t v28 = *(void *)(*(void *)(v26 - 8) + 64);
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for FileItemVersion();
  uint64_t v27 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v10 = v0 + v25;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v10, 1)) {
      (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v10);
    }
  }
  swift_release();
  uint64_t v11 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v11(v0 + v7, AssociatedTypeWitness);
  v11(v0 + v33, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v12 = v0 + v33 + *(int *)(v26 + 40);
  unint64_t v13 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v14 = v12 + v13[7];
  uint64_t v15 = sub_10096B0E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(unint64_t, uint64_t))(v16 + 8);
  v17(v14, v15);
  v17(v12 + v13[8], v15);
  swift_bridgeObjectRelease();
  unint64_t v18 = v12 + v13[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15)) {
    v17(v18, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v19 = (uint64_t *)(v12 + v13[33]);
  unint64_t v20 = v19[1];
  if (v20 >> 60 != 15) {
    sub_10001E9C0(*v19, v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v0 + ((v33 + v28 + v27) & ~v27);
  (*(void (**)(uint64_t))(*(void *)(v30 - 8) + 8))(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v31 - 8) + 8))(v21 + *(int *)(v9 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10042DD14()
{
  type metadata accessor for ItemPropagationResult();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v1 = *(void *)(sub_10096D510() - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v2 = (*(void *)(v1 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v2;
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (v2 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v13 = v4;
  uint64_t v5 = *(void *)(v3 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10041F5C8((char *)(v0 + v15), *(uint64_t **)(v0 + v14), v0 + v13, v0 + v7, v0 + v10, *(void (**)(void, uint64_t, uint64_t, int8x16_t *))(v0 + v11), *(void *)(v0 + v11 + 8), *(void **)(v0 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10042E058()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v25 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v2 = v27 + *(void *)(v25 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v30 = AssociatedTypeWitness;
  uint64_t v28 = type metadata accessor for ItemState();
  uint64_t v39 = *(unsigned __int8 *)(*(void *)(v28 - 8) + 80);
  uint64_t v38 = *(void *)(*(void *)(v28 - 8) + 64);
  uint64_t v3 = swift_getAssociatedTypeWitness();
  uint64_t v4 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v3;
  uint64_t v36 = v4;
  uint64_t v33 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v33 - 8) + 80);
  unint64_t v26 = (v2 + v39) & ~v39;
  unint64_t v6 = (v26 + v38 + v5) & ~v5;
  uint64_t v7 = *(void *)(*(void *)(v33 - 8) + 64);
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v34 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  unint64_t v31 = v6;
  uint64_t v37 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v29 = (v6 + v7 + v37) & ~v37;
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64) + v29;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v10 = *(void *)(v0 + 104);
  if (v10 >> 60 != 15 && (v10 & 0xF000000000000000) != 0xB000000000000000) {
    sub_10001E9C0(*(void *)(v0 + 96), v10);
  }
  uint64_t v24 = v9 + 7;
  unint64_t v11 = *(void (**)(unint64_t, uint64_t))(v25 + 8);
  v11(v0 + v27, v30);
  v11(v0 + v26, v30);
  swift_bridgeObjectRelease();
  unint64_t v12 = v0 + v26 + *(int *)(v28 + 40);
  unint64_t v13 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v14 = v12 + v13[7];
  uint64_t v15 = sub_10096B0E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(unint64_t, uint64_t))(v16 + 8);
  v17(v14, v15);
  v17(v12 + v13[8], v15);
  swift_bridgeObjectRelease();
  unint64_t v18 = v12 + v13[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15)) {
    v17(v18, v15);
  }
  unint64_t v19 = v24 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v20 = (uint64_t *)(v12 + v13[33]);
  unint64_t v21 = v20[1];
  if (v21 >> 60 != 15) {
    sub_10001E9C0(*v20, v21);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v35 - 8) + 8))(v0 + v31);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v36 - 8) + 8))(v0 + v31 + *(int *)(v33 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v32 - 8) + 8))(v0 + v29);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v34 - 8) + 8))(v0 + v29 + *(int *)(v8 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v0 + v19;
  if (*(void *)(v0 + v19 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v22 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_10042E750(uint64_t a1, char a2)
{
  char v15 = a2 & 1;
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v4 = v14 + *(void *)(v3 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v13 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v8 = (v13 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_10041C7D8(a1, v15, v2[6], v2[7], v2[8], v2[9], v2[10], v2 + 11, (uint64_t)v2 + v14, (unint64_t)v2 + v13, (unint64_t)v2 + v8, (unint64_t)v2 + v11, (uint64_t)v2 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_10042EAB4(uint64_t a1, char a2, uint64_t (*a3)(void))
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return a3();
  }
}

uint64_t sub_10042EAC4()
{
  return sub_10043219C((void (*)(void))&_swift_release);
}

uint64_t sub_10042EADC()
{
  return sub_100431AE8();
}

uint64_t sub_10042EAF4()
{
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10042EB4C()
{
  return sub_10041CAE0(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void, void, void, int8x16_t *))(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10042EB70()
{
  return sub_10043219C((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10042EB88()
{
  return sub_1004321EC();
}

uint64_t sub_10042EBA4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10042EBF4(uint64_t a1)
{
  return sub_1004224B8(a1, *(uint64_t **)(v1 + 16), *(void (**)(void, void, void, int8x16_t *))(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10042EC1C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_10042EC6C()
{
  return sub_10042ECA8((uint64_t)&unk_100A899A0, (uint64_t)&unk_100A899C8, (uint64_t)sub_1003B377C, (uint64_t)sub_10042EB88);
}

uint64_t sub_10042ECA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100422968(v4[2], v4[3], v4[4], v4[5], v4[6], v4[7], a1, a2, a3, a4);
}

uint64_t sub_10042ECE8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v18 = (*(void *)(v2 + 64) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v23 = (v18 + *(unsigned __int8 *)(*(void *)v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v20 = *(void *)(*(void *)v3 + 64);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v6(v0 + v19, AssociatedTypeWitness);
  swift_release();
  v6(v0 + v23, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v23 + v3[12];
  unint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_10001E9C0(*v14, v15);
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = v0 + ((v23 + v20 + v5) & ~v5);
  (*(void (**)(uint64_t))(*(void *)(v21 - 8) + 8))(v16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v22 - 8) + 8))(v16 + *(int *)(v4 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10042F198(uint64_t a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = (*(void *)(v2 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_100414B18(a1, v1[6], v1[7], v1[8], (uint64_t)v1 + v10, *(uint64_t *)((char *)v1 + v3), (uint64_t)v1 + v5, (uint64_t)v1 + v8, *(uint64_t *)((char *)v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10042F400()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v2 = sub_10096D510();
  uint64_t v30 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v24 = (((v30 + 48) & ~v30) + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for ItemState();
  uint64_t v28 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v31 = (v6 + v28 + 8) & ~v28;
  uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t v29 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  uint64_t v9 = v0 + ((v30 + 48) & ~v30);
  uint64_t v25 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
LABEL_5:
    unint64_t v10 = v24;
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    goto LABEL_5;
  }
  uint64_t v23 = *(void *)(v1 - 8);
  unint64_t v10 = v24;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v9, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v9, v1);
  }
LABEL_6:
  uint64_t v11 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v11(v0 + v10, AssociatedTypeWitness);
  swift_release();
  v11(v0 + v31, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v12 = v0 + v31 + *(int *)(v7 + 40);
  unint64_t v13 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v14 = v12 + v13[7];
  uint64_t v15 = sub_10096B0E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v17(v14, v15);
  v17(v12 + v13[8], v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = v12 + v13[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15)) {
    v17(v18, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v19 = (uint64_t *)(v12 + v13[33]);
  unint64_t v20 = v19[1];
  if (v20 >> 60 != 15) {
    sub_10001E9C0(*v19, v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v0 + ((v31 + v26 + v25) & ~v25);
  (*(void (**)(uint64_t))(*(void *)(v27 - 8) + 8))(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v29 - 8) + 8))(v21 + *(int *)(v8 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10042FA28()
{
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v1 = *(void *)(sub_10096D510() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v15 = v2;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v14 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v5 = (*(void *)(v4 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = v5;
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1004151B0(v0 + v15, v0 + v14, *(uint64_t **)(v0 + v13), v0 + v7, v0 + v10, *(void **)(v0 + v11), *(void *)(v0 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t, uint64_t, uint64_t, int8x16_t *))(v0+ ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

unint64_t sub_10042FD38()
{
  unint64_t result = qword_100ACF7F0;
  if (!qword_100ACF7F0)
  {
    sub_10096A630();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ACF7F0);
  }
  return result;
}

uint64_t sub_10042FD90()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v17 = *(void *)(*(void *)v2 + 64);
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  unint64_t v18 = v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v3 + v2[12];
  unint64_t v7 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v8 = v6 + v7[7];
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  unint64_t v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
    v11(v12, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = (uint64_t *)(v6 + v7[33]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_10001E9C0(*v13, v14);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v0 + ((v18 + v17 + v5) & ~v5);
  (*(void (**)(uint64_t))(*(void *)(v19 - 8) + 8))(v15);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v20 - 8) + 8))(v15 + *(int *)(v4 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1004301C4(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100415824(a1, *(uint64_t **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), v1 + v4, v1 + v7, *(void *)(v1 + v8), *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1004303CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100430408()
{
  return sub_100431140();
}

uint64_t sub_100430420()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v21 = type metadata accessor for ItemPropagationResult();
  uint64_t v2 = *(void *)(sub_10096C890() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = v20 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ItemState();
  uint64_t v25 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v28 = (v3 + v25) & ~v25;
  uint64_t v24 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for FileItemVersion();
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v22 = *(void *)(*(void *)(v6 - 8) + 64);
  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v0 + v20, 1)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v20, v1);
  }
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v28, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v28 + *(int *)(v5 + 40);
  unint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_10001E9C0(*v14, v15);
  }
  unint64_t v16 = (v28 + v24 + v23) & ~v23;
  unint64_t v17 = (v22 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v18 = v0 + v16;
  (*(void (**)(uint64_t))(*(void *)(v26 - 8) + 8))(v18);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v27 - 8) + 8))(v18 + *(int *)(v6 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100430958(uint64_t a1)
{
  type metadata accessor for ItemPropagationResult();
  uint64_t v2 = *(void *)(sub_10096C890() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10041677C(a1, v1[6], v1[7], v1[8], v1[9], (uint64_t)v1 + v3, (uint64_t)v1 + v6, (uint64_t)v1 + v9, *(void **)((char *)v1 + v10), *(uint64_t *)((char *)v1 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100430BD4()
{
  return sub_100431F7C();
}

uint64_t sub_100430BF0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v21 = type metadata accessor for ItemPropagationResult();
  uint64_t v2 = *(void *)(sub_10096C890() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = v20 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ItemState();
  uint64_t v25 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v28 = (v3 + v25) & ~v25;
  uint64_t v24 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for FileItemVersion();
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v22 = *(void *)(*(void *)(v6 - 8) + 64);
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v0 + v20, 1)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v20, v1);
  }
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v28, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v28 + *(int *)(v5 + 40);
  uint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_10001E9C0(*v14, v15);
  }
  unint64_t v16 = (v28 + v24 + v23) & ~v23;
  unint64_t v17 = (v22 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v18 = v0 + v16;
  (*(void (**)(uint64_t))(*(void *)(v26 - 8) + 8))(v18);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v27 - 8) + 8))(v18 + *(int *)(v6 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100431140()
{
  type metadata accessor for ItemPropagationResult();
  uint64_t v1 = *(void *)(sub_10096C890() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v2 = v11 + *(void *)(v1 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v4 = (v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_100416D40(*(void *)(v0 + 48), v0 + v11, v0 + v4, v0 + v7, *(void **)(v0 + v8), *(void **)(v0 + v9), *(void *)(v0 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, uint64_t, uint64_t, int8x16_t *))(v0+ ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1004313CC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v24 = *(void *)(*(void *)v2 + 64);
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  unint64_t v21 = (v3 + v24 + v5) & ~v5;
  unint64_t v6 = (((*(void *)(*(void *)(v4 - 8) + 64) + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v3 + v2[12];
  unint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_10001E9C0(*v14, v15);
  }
  unint64_t v16 = (v6 + 63) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v22 - 8) + 8))(v0 + v21);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v23 - 8) + 8))(v0 + v21 + *(int *)(v4 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v17 = *(void *)(v0 + v6 + 16);
  if (v17 >> 60 != 11 && v17 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v0 + v6 + 8), v17);
  }
  uint64_t v19 = v0 + v16;
  if (*(void *)(v0 + v16 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v19 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1004318B0(uint64_t a1, char a2)
{
  int v3 = a2 & 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100413544(a1, v3, v2[6], v2[7], v2[8], v2[9], (uint64_t)v2 + v5, (unint64_t)v2 + v8, *(uint64_t *)((char *)v2 + v9), (uint64_t)v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8), (uint64_t)v2 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100431AD0()
{
  return sub_10043219C((void (*)(void))&_swift_release);
}

uint64_t sub_100431AE8()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 16))(*(void *)(v0 + 32), 0, 0, 0);
}

uint64_t sub_100431B30()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v17 = *(void *)(*(void *)v2 + 64);
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_release();
  swift_errorRelease();
  unint64_t v18 = v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v3 + v2[12];
  uint64_t v7 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v8 = v6 + v7[7];
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  unint64_t v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
    v11(v12, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = (uint64_t *)(v6 + v7[33]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_10001E9C0(*v13, v14);
  }
  unint64_t v15 = (v18 + v17 + v5) & ~v5;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v19 - 8) + 8))(v0 + v15);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v20 - 8) + 8))(v0 + v15 + *(int *)(v4 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100431F7C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1004165E0(*(void *)(v0 + 48), *(void (**)(void, uint64_t, uint64_t, int8x16_t *))(v0 + 56), v0 + v2, v0 + v5, *(void **)(v0 + v6), *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, uint64_t, uint64_t, int8x16_t *))(v0+ ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100432184()
{
  return sub_10043219C((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10043219C(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_1004321EC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_100432224()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1004322D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) == 0 && ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x18)
  {
    uint64_t v10 = AssociatedTypeWitness;
    if (*(_DWORD *)(v5 + 84) < 0x7FFFFFFFu)
    {
      unint64_t v11 = *(void *)((((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v11 >= 0xFFFFFFFF) {
        LODWORD(v11) = -1;
      }
      if (v11 != -1) {
        goto LABEL_9;
      }
    }
    else if ((*(unsigned int (**)(uint64_t *))(v5 + 48))(a2))
    {
LABEL_9:
      memcpy(a1, a2, ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      return a1;
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v10);
    unint64_t v12 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v13 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  swift_retain();
  return a1;
}

uint64_t sub_100432464(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v3 + 84) >= 0x7FFFFFFFu)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 48))(a1);
    if (result) {
      return result;
    }
    goto LABEL_7;
  }
  unint64_t v5 = *(void *)(((a1 + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v5 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  uint64_t result = (v5 + 1);
  if (v5 == -1)
  {
LABEL_7:
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100432594(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84) < 0x7FFFFFFFu)
  {
    unint64_t v7 = *(void *)((((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v7 >= 0xFFFFFFFF) {
      LODWORD(v7) = -1;
    }
    if (v7 != -1) {
      goto LABEL_3;
    }
LABEL_7:
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v8 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v9 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRetain();
    return a1;
  }
  if (!(*(unsigned int (**)(const void *))(v5 + 48))(a2)) {
    goto LABEL_7;
  }
LABEL_3:
  memcpy(a1, a2, ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
  return a1;
}

void *sub_1004326EC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 >= 0x7FFFFFFF)
  {
    unint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
    int v9 = v8(a1, v6, AssociatedTypeWitness);
    int v10 = v8(a2, v6, AssociatedTypeWitness);
    if (v9) {
      goto LABEL_3;
    }
LABEL_8:
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      unint64_t v14 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v15 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  unint64_t v13 = *(void *)((((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v10 = v13 + 1;
  if (*(void *)((((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL) {
    goto LABEL_8;
  }
LABEL_3:
  if (v10)
  {
LABEL_10:
    memcpy(a1, a2, ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  unint64_t v11 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100432918(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84) < 0x7FFFFFFFu)
  {
    unint64_t v7 = *(void *)((((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v7 >= 0xFFFFFFFF) {
      LODWORD(v7) = -1;
    }
    if (v7 != -1) {
      goto LABEL_3;
    }
LABEL_7:
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    *(_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    return a1;
  }
  if (!(*(unsigned int (**)(const void *))(v5 + 48))(a2)) {
    goto LABEL_7;
  }
LABEL_3:
  memcpy(a1, a2, ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
  return a1;
}

void *sub_100432A64(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 >= 0x7FFFFFFF)
  {
    unint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
    int v9 = v8(a1, v6, AssociatedTypeWitness);
    int v10 = v8(a2, v6, AssociatedTypeWitness);
    if (v9) {
      goto LABEL_3;
    }
LABEL_8:
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      unint64_t v12 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v13 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v12 = *v13;
      v12[1] = v13[1];
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  unint64_t v11 = *(void *)((((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  int v10 = v11 + 1;
  if (*(void *)((((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL) {
    goto LABEL_8;
  }
LABEL_3:
  if (v10)
  {
LABEL_10:
    memcpy(a1, a2, ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100432C7C(int *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 - 1 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    unsigned int v11 = a2 - v7 + 2;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100432E24);
      case 4:
        int v14 = *(int *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_21:
        unsigned int v16 = v14 - 1;
        if (v10)
        {
          unsigned int v16 = 0;
          int v17 = *a1;
        }
        else
        {
          int v17 = 0;
        }
        return (v17 | v16) + v7;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v19 = *(void *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v19 >= 0xFFFFFFFF) {
      LODWORD(v19) = -1;
    }
    unsigned int v18 = v19 + 1;
  }
  else
  {
    unsigned int v18 = (*(uint64_t (**)(int *))(v5 + 48))(a1);
  }
  if (v18 >= 2) {
    return v18 - 1;
  }
  else {
    return 0;
  }
}

void sub_100432E38(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v10 = v9 - 1;
  size_t v11 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v12 = a3 - v9 + 2;
  if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0) {
    unsigned int v12 = 2;
  }
  if (v12 >= 0x10000) {
    int v13 = 4;
  }
  else {
    int v13 = 2;
  }
  if (v12 < 0x100) {
    int v13 = 1;
  }
  if (v12 >= 2) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = 0;
  }
  if (v10 < a3) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v10 < a2)
  {
    unsigned int v16 = a2 - v9;
    if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v17 = v16 + 1;
    }
    else {
      int v17 = 1;
    }
    if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      bzero(a1, v11);
      *a1 = v16;
    }
    switch(v15)
    {
      case 1:
        *((unsigned char *)a1 + v11) = v17;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v11) = v17;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(unsigned int *)((char *)a1 + v11) = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      *((unsigned char *)a1 + v11) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)((char *)a1 + v11) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x100433074);
    case 4:
      *(unsigned int *)((char *)a1 + v11) = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (a2 + 1 <= v9)
        {
          if (a2 != -1)
          {
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v20 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
              if (((a2 + 1) & 0x80000000) != 0)
              {
                *uint64_t v20 = a2 - 0x7FFFFFFF;
                v20[1] = 0;
              }
              else
              {
                v20[1] = a2;
              }
            }
            else
            {
              unint64_t v19 = *(void (**)(unsigned int *))(v6 + 56);
              v19(a1);
            }
          }
        }
        else if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
        {
          unsigned int v18 = a2 - v9;
          bzero(a1, ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
          *a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_10043309C(uint64_t a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v2 + 84) < 0x7FFFFFFFu)
  {
    unint64_t v5 = *(void *)(((a1 + *(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v5 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 48);
    return v3(a1);
  }
}

void sub_100433170(_DWORD *a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v7 >= a2)
  {
    if (a2)
    {
      if (v6 < 0x7FFFFFFF)
      {
        unsigned int v12 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((a2 & 0x80000000) != 0)
        {
          *unsigned int v12 = a2 ^ 0x80000000;
          v12[1] = 0;
        }
        else
        {
          v12[1] = (a2 - 1);
        }
      }
      else
      {
        size_t v11 = *(void (**)(_DWORD *, uint64_t))(v5 + 56);
        v11(a1, a2);
      }
    }
  }
  else
  {
    int v9 = (v8 + 7) & 0xFFFFFFF8;
    if (v9 != -16)
    {
      int v10 = ~v7 + a2;
      bzero(a1, (v9 + 16));
      *a1 = v10;
    }
  }
}

uint64_t sub_1004332A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1004332FC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (!v1) {
    return (uint64_t)v2;
  }
  uint64_t v3 = a1;
  uint64_t v35 = _swiftEmptyArrayStorage;
  sub_10044628C(0, v1, 0);
  uint64_t result = sub_1007D7728(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v24 = v3 + 80;
  int v25 = v5;
  uint64_t v26 = v3 + 64;
  uint64_t v27 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_26;
    }
    sub_100017368(*(void *)(v3 + 48) + 40 * v6, (uint64_t)v33);
    uint64_t v12 = *(void *)(*(void *)(v3 + 56) + 8 * v6);
    uint64_t v34 = v12;
    sub_100017368((uint64_t)v33, (uint64_t)v31);
    *((void *)&v32 + 1) = v12;
    v29[0] = v31[0];
    v29[1] = v31[1];
    long long v30 = v32;
    swift_errorRetain();
    swift_errorRetain();
    sub_10002B770((uint64_t)v33, &qword_100AD5480);
    uint64_t v13 = *((void *)&v30 + 1);
    uint64_t v14 = sub_10096CB00();
    uint64_t v28 = v15;
    swift_errorRetain();
    sub_10002B770((uint64_t)v29, &qword_100AD5480);
    uint64_t v2 = v35;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10044628C(0, v2[2] + 1, 1);
      uint64_t v2 = v35;
    }
    unint64_t v17 = v2[2];
    unint64_t v16 = v2[3];
    if (v17 >= v16 >> 1)
    {
      uint64_t result = sub_10044628C(v16 > 1, v17 + 1, 1);
      uint64_t v2 = v35;
    }
    v2[2] = v17 + 1;
    unsigned int v18 = &v2[3 * v17];
    uint64_t v3 = v27;
    v18[4] = v14;
    v18[5] = v28;
    v18[6] = v13;
    int64_t v9 = 1 << *(unsigned char *)(v27 + 32);
    if (v6 >= v9) {
      goto LABEL_27;
    }
    uint64_t v8 = v26;
    uint64_t v19 = *(void *)(v26 + 8 * v11);
    if ((v19 & (1 << v6)) == 0) {
      goto LABEL_28;
    }
    int v5 = v25;
    if (*(_DWORD *)(v27 + 36) != v25) {
      goto LABEL_29;
    }
    unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      int64_t v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v1;
    }
    else
    {
      unint64_t v21 = v11 + 1;
      unint64_t v22 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v1;
      if (v11 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v26 + 8 * v21);
        if (v23)
        {
LABEL_22:
          int64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v11++);
            if (v23)
            {
              unint64_t v21 = v11 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1004335B0(uint64_t a1, void (*a2)(char *, void *), NSString *a3, unint64_t a4, void (*a5)(NSURL *, uint64_t), uint64_t a6, unint64_t a7, NSObject *a8, uint64_t a9, unint64_t a10, char a11, unsigned __int8 a12, void (*a13)(uint64_t), uint64_t a14)
{
  Swift::String v148 = a8;
  unint64_t v154 = a7;
  uint64_t v155 = a6;
  Swift::String v152 = a5;
  Swift::String v153 = a2;
  uint64_t v161 = a14;
  uint64_t v160 = a13;
  uint64_t v158 = sub_10002B7CC(&qword_100AD0CD0);
  __chkstk_darwin(v158);
  uint64_t v159 = (uint64_t *)((char *)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v19 - 8);
  uint64_t v147 = (uint64_t)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10096AE50();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v157 = (Class *)((char *)&v143.super.isa - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v145 = (char *)&v143 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v144 = (char *)&v143 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v143._baseURL = (NSURL *)((char *)&v143 - v30);
  uint64_t v31 = __chkstk_darwin(v29);
  Swift::String v151 = (char *)&v143 - v32;
  __chkstk_darwin(v31);
  uint64_t v164 = (char *)&v143 - v33;
  uint64_t v34 = sub_10096B480();
  Class v165 = *(Class *)(v34 - 8);
  uint64_t v166 = (void *)v34;
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v162 = (char *)&v143 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  v143._reserved = (char *)&v143 - v38;
  __chkstk_darwin(v37);
  long long v40 = (char *)&v143 - v39;
  uint64_t v41 = *(void **)(v14 + 16);
  sub_10096AD20(&v143);
  uint64_t v43 = v42;
  *(void *)&long long v170 = 0;
  id v44 = [v41 permanentStorageForItemAtURL:v42 allocateIfNone:1 error:&v170];

  uint64_t v45 = (void *)v170;
  uint64_t v163 = v21;
  if (v44)
  {
    id v156 = v44;
    uint64_t v150 = v22;
    HIDWORD(v143._clients) = a12;
    sub_10002B7CC(&qword_100ACE1E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100982910;
    *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 40) = v47;
    id v48 = v45;
    uint64_t v49 = sub_10096ACF0();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v49;
    *(void *)(inited + 56) = v50;
    *(void *)(inited + 80) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 88) = v51;
    *(void *)(inited + 120) = &type metadata for String;
    v143._urlString = a3;
    *(void *)(inited + 96) = a3;
    *(void *)(inited + 104) = a4;
    *(void *)(inited + 128) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 136) = v52;
    unint64_t v149 = a4;
    swift_bridgeObjectRetain();
    uint64_t v146 = a1;
    uint64_t v53 = sub_10096ACF0();
    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = v53;
    *(void *)(inited + 152) = v54;
    *(void *)(inited + 176) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 184) = v55;
    *(void *)(inited + 216) = &type metadata for Bool;
    *(unsigned char *)(inited + 192) = 1;
    *(void *)(inited + 224) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 232) = v56;
    *(void *)(inited + 264) = sub_10002B7CC(&qword_100AD3030);
    *(void *)(inited + 240) = v153;
    *(void *)(inited + 272) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 280) = v57;
    *(void *)(inited + 312) = &type metadata for String;
    uint64_t v58 = v155;
    *(void *)(inited + 288) = v152;
    *(void *)(inited + 296) = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v59 = sub_10004621C(inited);
    if (a11)
    {
      uint64_t v60 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v62 = v61;
      uint64_t v172 = &type metadata for UInt64;
      *(void *)&long long v170 = 9;
      sub_100042A48(&v170, v169);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v167 = v59;
      sub_10037BFD0(v169, v60, v62, isUniquelyReferenced_nonNull_native);
      unint64_t v59 = v167;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (BYTE4(v143._clients))
    {
      uint64_t v64 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v66 = v65;
      uint64_t v172 = &type metadata for UInt64;
      *(void *)&long long v170 = 1;
      sub_100042A48(&v170, v169);
      char v67 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v167 = v59;
      sub_10037BFD0(v169, v64, v66, v67);
      uint64_t v155 = v167;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v155 = v59;
    }
    id v70 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    unint64_t v71 = v149;
    swift_bridgeObjectRetain_n();
    uint64_t v72 = sub_10096B470();
    os_log_type_t v73 = sub_10096C590();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v170 = swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&v169[0] = sub_100719D44((uint64_t)v143._urlString, v71, (uint64_t *)&v170);
      sub_10096C8C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "⚔️  Putting remote version %s into Genstore...", v74, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    Swift::String v153 = (void (*)(char *, void *))*((void *)v165 + 1);
    v153(v40, v166);
    uint64_t v21 = v163;
    uint64_t v22 = v150;
    sub_10096AD20(v75);
    uint64_t v77 = v76;
    uint64_t v78 = swift_bridgeObjectRetain();
    sub_1008D37C0(v78);
    swift_bridgeObjectRelease();
    Class isa = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    *(void *)&long long v170 = 0;
    id v80 = v156;
    id v81 = [v156 prepareAdditionCreationWithItemAtURL:v77 byMoving:1 creationInfo:isa error:&v170];

    uint64_t v82 = (void *)v170;
    a1 = v146;
    if (v81)
    {
      sub_10096ADD0();
      id v83 = v82;

      uint64_t v84 = v147;
      sub_10016A248((uint64_t)v148, v147);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v84, 1, v21) == 1)
      {
        sub_10002B770(v84, &qword_100ACA8C0);
LABEL_23:
        uint64_t v110 = v164;
        sub_10096AD20(v85);
        uint64_t v166 = v111;
        sub_1008D37C0(v155);
        swift_bridgeObjectRelease();
        Class v165 = sub_10096B9A0().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v112 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
        uint64_t v113 = v144;
        v112(v144, a1, v21);
        uint64_t v114 = v145;
        v112(v145, (uint64_t)v110, v21);
        uint64_t v115 = *(unsigned __int8 *)(v22 + 80);
        uint64_t v116 = (v115 + 32) & ~v115;
        uint64_t v117 = (v23 + v115 + v116) & ~v115;
        uint64_t v118 = swift_allocObject();
        uint64_t v119 = v161;
        *(void *)(v118 + 16) = v160;
        *(void *)(v118 + 24) = v119;
        uint64_t v120 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
        v120(v118 + v116, v113, v21);
        v120(v118 + v117, v114, v21);
        uint64_t v173 = sub_100436DE4;
        uint64_t v174 = v118;
        *(void *)&long long v170 = _NSConcreteStackBlock;
        *((void *)&v170 + 1) = 1107296256;
        uint64_t v171 = sub_100237A4C;
        uint64_t v172 = &unk_100A89AA0;
        uint64_t v121 = _Block_copy(&v170);
        swift_retain();
        swift_release();
        id v122 = v156;
        Class v124 = v165;
        uint64_t v123 = v166;
        [v156 createAdditionStagedAtURL:v166 creationInfo:v165 completionHandler:v121];
        _Block_release(v121);

        return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v164, v21);
      }
      unint64_t v154 = a10;
      uint64_t v87 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v151, v84, v21);
      id v88 = (id)fpfs_current_or_default_log();
      reserved = (char *)v143._reserved;
      sub_10096B490();
      baseURL = v143._baseURL;
      (*(void (**)(NSURL *, char *, uint64_t))(v22 + 16))(v143._baseURL, v87, v21);
      unint64_t v91 = v149;
      swift_bridgeObjectRetain_n();
      uint64_t v92 = sub_10096B470();
      uint64_t v93 = v21;
      os_log_type_t v94 = sub_10096C590();
      Swift::String v148 = v92;
      if (os_log_type_enabled(v92, v94))
      {
        uint64_t v95 = swift_slowAlloc();
        uint64_t v147 = swift_slowAlloc();
        *(void *)&long long v170 = v147;
        *(_DWORD *)uint64_t v95 = 136315394;
        Swift::String v152 = (void (*)(NSURL *, uint64_t))(v95 + 4);
        sub_100436DE8((unint64_t *)&qword_100ACCBB0, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v96 = sub_10096D220();
        *(void *)&v169[0] = sub_100719D44(v96, v97, (uint64_t *)&v170);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        uint64_t v98 = baseURL;
        uint64_t v99 = v163;
        Swift::String v152 = *(void (**)(NSURL *, uint64_t))(v22 + 8);
        v152(v98, v163);
        *(_WORD *)(v95 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&v169[0] = sub_100719D44((uint64_t)v143._urlString, v91, (uint64_t *)&v170);
        sub_10096C8C0();
        swift_bridgeObjectRelease_n();
        uint64_t v100 = v148;
        _os_log_impl((void *)&_mh_execute_header, v148, v94, "⚔️  associate thumnail %s for loser %s", (uint8_t *)v95, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        a1 = v146;
        swift_slowDealloc();

        v153((char *)v143._reserved, v166);
        uint64_t v21 = v99;
      }
      else
      {
        Swift::String v152 = *(void (**)(NSURL *, uint64_t))(v22 + 8);
        v152(baseURL, v93);

        swift_bridgeObjectRelease_n();
        v153(reserved, v166);
        uint64_t v21 = v93;
      }
      sub_10096AD20(v101);
      unint64_t v103 = v102;
      sub_10096AD20(v104);
      uint64_t v106 = v105;
      if (v154 >> 60 == 15) {
        Class v107 = 0;
      }
      else {
        Class v107 = sub_10096AF20().super.isa;
      }
      uint64_t v22 = v150;
      *(void *)&long long v170 = 0;
      unsigned int v108 = objc_msgSend(v103, "fp_associateThumbnailToVersionAtURL:thumbnailMetadata:error:", v106, v107, &v170);

      if (v108)
      {
        id v109 = (id)v170;
        v152((NSURL *)v151, v21);
        goto LABEL_23;
      }
      id v126 = (id)v170;
      swift_bridgeObjectRelease();
      uint64_t v69 = sub_10096ABF0();

      swift_willThrow();
      uint64_t v127 = (void (*)(char *, uint64_t))v152;
      v152((NSURL *)v151, v21);
      v127(v164, v21);
    }
    else
    {
      id v86 = (id)v170;
      swift_bridgeObjectRelease();
      uint64_t v69 = sub_10096ABF0();

      swift_willThrow();
    }
  }
  else
  {
    id v68 = (id)v170;
    uint64_t v69 = sub_10096ABF0();

    swift_willThrow();
  }
  uint64_t v128 = v157;
  id v129 = (id)fpfs_current_or_default_log();
  unint64_t v130 = v162;
  sub_10096B490();
  (*(void (**)(void *, uint64_t, uint64_t))(v22 + 16))(v128, a1, v21);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v131 = sub_10096B470();
  os_log_type_t v132 = sub_10096C5B0();
  if (os_log_type_enabled(v131, v132))
  {
    uint64_t v133 = swift_slowAlloc();
    uint64_t v157 = (void *)swift_slowAlloc();
    uint64_t v164 = (char *)swift_slowAlloc();
    *(void *)&long long v170 = v164;
    *(_DWORD *)uint64_t v133 = 136446466;
    id v156 = (id)(v133 + 4);
    sub_10096AD20((NSURL *)(v133 + 4));
    Swift::String v135 = v134;
    uint64_t v136 = v22;
    id v137 = objc_msgSend(v134, "fp_shortDescription");

    uint64_t v138 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unint64_t v140 = v139;

    *(void *)&v169[0] = sub_100719D44(v138, v140, (uint64_t *)&v170);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v136 + 8))(v128, v163);
    *(_WORD *)(v133 + 12) = 2112;
    swift_getErrorValue();
    id v141 = Error.prettyDescription.getter(v168);
    *(void *)&v169[0] = v141;
    sub_10096C8C0();
    *uint64_t v157 = v141;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v131, v132, "failed to add version to %{public}s: %@", (uint8_t *)v133, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, void *))v165 + 1))(v162, v166);
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v128, v21);
    swift_errorRelease();
    swift_errorRelease();

    (*((void (**)(char *, void *))v165 + 1))(v130, v166);
  }
  uint64_t v142 = (uint64_t)v159;
  uint64_t *v159 = v69;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  v160(v142);
  swift_errorRelease();
  return sub_10002B770(v142, &qword_100AD0CD0);
}

uint64_t sub_100434660(void *a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v59 = a6;
  uint64_t v60 = a5;
  uint64_t v62 = a4;
  uint64_t v63 = a3;
  uint64_t v61 = a1;
  uint64_t v7 = sub_10096A7B0();
  uint64_t v57 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096AE50();
  uint64_t v58 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10096B480();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10002B7CC(&qword_100AD0CD0);
  uint64_t v21 = __chkstk_darwin(v20);
  __chkstk_darwin(v21);
  uint64_t v25 = (uint64_t *)((char *)&v51 - v24);
  if (a2)
  {
    *uint64_t v25 = a2;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
LABEL_3:
    v63(v25);
    return sub_10002B770((uint64_t)v25, &qword_100AD0CD0);
  }
  uint64_t v51 = v16;
  uint64_t v52 = v17;
  uint64_t v53 = v9;
  uint64_t v54 = v12;
  uint64_t v55 = v15;
  uint64_t v56 = v22;
  uint64_t v26 = v61;
  if (!v61)
  {
    id v45 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v46 = sub_10096B470();
    os_log_type_t v47 = sub_10096C590();
    if (os_log_type_enabled(v46, v47))
    {
      id v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "⚔️  no addition was created", v48, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v19, v51);
    int v64 = 22;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_100436DE8((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    uint64_t v49 = v53;
    sub_10096ABD0();
    uint64_t v50 = sub_10096A790();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v49, v7);
    *uint64_t v25 = v50;
    swift_storeEnumTagMultiPayload();
    goto LABEL_3;
  }
  uint64_t v27 = v23;
  uint64_t v28 = self;
  id v29 = v26;
  sub_10096AD20(v30);
  uint64_t v32 = v31;
  id v33 = [v29 nameSpace];
  id v34 = [v29 name];
  objc_msgSend(v28, "__itemAtURL:didGainVersionWithClientID:name:purposeID:", v32, v33, v34, 0);

  uint64_t v35 = v58;
  uint64_t v25 = v27;
  uint64_t v36 = v10;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v58 + 16))(v27, v59, v10);
  id v37 = [v29 url];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = v54;
    sub_10096ADD0();

    long long v40 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v41 = v55;
    v40(v55, v39, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v41, 0, 1, v36);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v41, 1, v36);
    uint64_t v43 = v63;
    if (result != 1)
    {
      uint64_t v44 = sub_10002B7CC(&qword_100AD0CD8);
      v40((char *)v27 + *(int *)(v44 + 48), v41, v36);
      swift_storeEnumTagMultiPayload();
      v43(v27);

      return sub_10002B770((uint64_t)v25, &qword_100AD0CD0);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v55, 1, 1, v10);
  }
  __break(1u);
  return result;
}

uint64_t sub_100434C2C(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t))
{
  if (a1) {
    unint64_t v8 = a1;
  }
  else {
    unint64_t v8 = sub_100095DC8((uint64_t)_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1004332FC(v8);
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 16))
  {
    sub_10002B7CC(&qword_100ACCC60);
    uint64_t v10 = (void *)sub_10096CEA0();
  }
  else
  {
    uint64_t v10 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v24 = v10;
  uint64_t v11 = (void *)swift_bridgeObjectRetain();
  sub_10043529C(v11, 1, &v24);
  swift_bridgeObjectRelease();
  uint64_t v23 = v24;
  if (!(a3 >> 62))
  {
    uint64_t v12 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    a5(v23, a2);
    return swift_release();
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10096CE70();
  if (!v12) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v13 = 4;
  while (1)
  {
    if ((a3 & 0xC000000000000001) != 0) {
      id v14 = (id)sub_10096CC30();
    }
    else {
      id v14 = *(id *)(a3 + 8 * v13);
    }
    uint64_t v15 = v14;
    uint64_t v16 = v13 - 3;
    if (__OFADD__(v13 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    id v17 = [v14 nameSpace];
    if (!v17) {
      break;
    }
    uint64_t v18 = v17;
    uint64_t v19 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v21 = v20;

    sub_1004366FC(v15, v19, v21);
    swift_bridgeObjectRelease();
    ++v13;
    if (v16 == v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_100434E44(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v5 = *(void **)(v3 + 16);
  sub_10096AD20(__stack_chk_guard);
  uint64_t v7 = v6;
  id v12 = 0;
  id v8 = [v5 permanentStorageForItemAtURL:v6 allocateIfNone:0 error:&v12];

  if (v8)
  {
    id v9 = v12;
    a3 = sub_100436B94(v8);
  }
  else
  {
    id v10 = v12;
    sub_10096ABF0();

    swift_willThrow();
  }
  return a3;
}

id sub_100434F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + 16);
  id v10 = 0;
  id v5 = [v4 permanentStorageForItemWithDocID:a1 deviceID:a2 allocateIfNone:0 error:&v10];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = v10;
    id v8 = (id)sub_100436B94(v6);
  }
  else
  {
    id v8 = v10;
    sub_10096ABF0();

    swift_willThrow();
  }
  return v8;
}

void sub_10043502C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = *(void **)(v5 + 16);
  v19[0] = 0;
  id v10 = [v9 permanentStorageForItemWithDocID:a1 deviceID:a2 allocateIfNone:0 error:v19];
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = v19[0];
    Class isa = sub_10096C080().super.isa;
    v19[4] = a4;
    v19[5] = a5;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = (id)1107296256;
    v19[2] = sub_1000072D0;
    v19[3] = &unk_100A89A50;
    id v14 = _Block_copy(v19);
    swift_retain();
    swift_release();
    [v11 removeAllAdditionsForNamespaces:isa completionHandler:v14];
    _Block_release(v14);
  }
  else
  {
    id v15 = v19[0];
    uint64_t v16 = sub_10096ABF0();

    swift_willThrow();
    swift_errorRetain();
    LODWORD(v19[0]) = sub_10096A710();
    sub_100045CB4();
    LOBYTE(v15) = sub_10096AA60();
    swift_errorRelease();
    if (v15)
    {
      swift_errorRelease();
      ((void (*)(void))a4)(0);
    }
    else
    {
      id v17 = (void *)sub_10096ABE0();
      unsigned __int8 v18 = objc_msgSend(v17, "fp_isGSInvalidStorageError");

      if (v18)
      {
        ((void (*)(void))a4)(0);
      }
      else
      {
        swift_errorRetain();
        ((void (*)(uint64_t))a4)(v16);
        swift_errorRelease();
      }
      swift_errorRelease();
    }
  }
}

uint64_t GSRemoteVersionsManager.deinit()
{
  return v0;
}

uint64_t type metadata accessor for GSRemoteVersionsManager()
{
  return self;
}

uint64_t sub_10043529C(void *a1, char a2, void *a3)
{
  if (!a1[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v41 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[6];
  swift_bridgeObjectRetain();
  id v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  unint64_t v11 = sub_10000DDD0(v7, v6);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_10091F628();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v20 = (uint64_t *)(v19[6] + 16 * v11);
    *uint64_t v20 = v7;
    v20[1] = v6;
    *(void *)(v19[7] + 8 * v11) = v8;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v19[2] = v23;
    uint64_t v24 = v41 - 1;
    if (v41 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (i = a1 + 9; ; i += 3)
    {
      uint64_t v27 = *(i - 2);
      uint64_t v26 = *(i - 1);
      uint64_t v28 = *i;
      id v29 = (void *)*a3;
      swift_bridgeObjectRetain();
      swift_errorRetain();
      unint64_t v30 = sub_10000DDD0(v27, v26);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v22 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v22) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_100379178(v34, 1);
        unint64_t v30 = sub_10000DDD0(v27, v26);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      id v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
      *uint64_t v38 = v27;
      v38[1] = v26;
      *(void *)(v37[7] + 8 * v30) = v28;
      uint64_t v39 = v37[2];
      BOOL v22 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v22) {
        goto LABEL_24;
      }
      v37[2] = v40;
      if (!--v24) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100379178(v14, a2 & 1);
  unint64_t v16 = sub_10000DDD0(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_10096D3C0();
  __break(1u);
LABEL_26:
  sub_10096CBD0(30);
  v42._object = (void *)0x8000000100996AD0;
  v42._countAndFlagsBits = 0xD00000000000001BLL;
  sub_10096BDC0(v42);
  sub_10096CDF0();
  v43._countAndFlagsBits = 39;
  v43._object = (void *)0xE100000000000000;
  sub_10096BDC0(v43);
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_100435634(uint64_t a1, void (*a2)(char *, void *), uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, char a11, char a12, uint64_t a13, void (*a14)(uint64_t, uint64_t, id, uint64_t), uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v153 = a8;
  uint64_t v157 = a2;
  uint64_t v158 = a7;
  uint64_t v160 = a6;
  uint64_t v156 = a5;
  uint64_t v170 = a3;
  uint64_t v162 = sub_10002B7CC(&qword_100AD0CD0);
  __chkstk_darwin(v162);
  uint64_t v163 = (uint64_t *)((char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v20 - 8);
  uint64_t v152 = (uint64_t)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_10096AE50();
  uint64_t v172 = *(void **)(v174 - 8);
  uint64_t v22 = v172[8];
  uint64_t v23 = __chkstk_darwin(v174);
  uint64_t v161 = (char *)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v23);
  Swift::String v151 = (char *)&v147 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v150 = (char *)&v147 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v159 = (unint64_t)&v147 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v155 = (char *)&v147 - v31;
  __chkstk_darwin(v30);
  uint64_t v173 = (char *)&v147 - v32;
  uint64_t v33 = sub_10096B480();
  Class v175 = *(Class *)(v33 - 8);
  uint64_t v176 = (void *)v33;
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v171 = (char *)&v147 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  unint64_t v149 = (char *)&v147 - v37;
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v147 - v38;
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v164 = a14;
  uint64_t v165 = a15;
  v40[2] = a14;
  v40[3] = a15;
  uint64_t v41 = a1;
  uint64_t v166 = a16;
  v40[4] = a16;
  v40[5] = a17;
  uint64_t v168 = v40;
  Swift::String v42 = *(void **)(a13 + 16);
  swift_retain();
  uint64_t v167 = a17;
  swift_bridgeObjectRetain();
  sub_10096AD20(v43);
  id v45 = v44;
  *(void *)&long long v180 = 0;
  id v46 = [v42 permanentStorageForItemAtURL:v44 allocateIfNone:1 error:&v180];

  os_log_type_t v47 = (void *)v180;
  id v169 = v46;
  if (v46)
  {
    sub_10002B7CC(&qword_100ACE1E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100982910;
    *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 40) = v49;
    id v50 = v47;
    uint64_t v51 = sub_10096ACF0();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v51;
    *(void *)(inited + 56) = v52;
    *(void *)(inited + 80) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 88) = v53;
    *(void *)(inited + 120) = &type metadata for String;
    *(void *)(inited + 96) = v170;
    *(void *)(inited + 104) = a4;
    *(void *)(inited + 128) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 136) = v54;
    unint64_t v154 = a4;
    swift_bridgeObjectRetain();
    uint64_t v148 = a1;
    uint64_t v55 = sub_10096ACF0();
    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = v55;
    *(void *)(inited + 152) = v56;
    *(void *)(inited + 176) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 184) = v57;
    *(void *)(inited + 216) = &type metadata for Bool;
    *(unsigned char *)(inited + 192) = 1;
    *(void *)(inited + 224) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 232) = v58;
    *(void *)(inited + 264) = sub_10002B7CC(&qword_100AD3030);
    *(void *)(inited + 240) = v157;
    *(void *)(inited + 272) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 280) = v59;
    *(void *)(inited + 312) = &type metadata for String;
    uint64_t v60 = v160;
    *(void *)(inited + 288) = v156;
    *(void *)(inited + 296) = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v61 = sub_10004621C(inited);
    if (a11)
    {
      uint64_t v62 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v64 = v63;
      uint64_t v182 = &type metadata for UInt64;
      *(void *)&long long v180 = 9;
      sub_100042A48(&v180, v179);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v177 = v61;
      sub_10037BFD0(v179, v62, v64, isUniquelyReferenced_nonNull_native);
      unint64_t v61 = v177;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a12)
    {
      uint64_t v66 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v68 = v67;
      uint64_t v182 = &type metadata for UInt64;
      *(void *)&long long v180 = 1;
      sub_100042A48(&v180, v179);
      char v69 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v177 = v61;
      sub_10037BFD0(v179, v66, v68, v69);
      uint64_t v160 = v177;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v160 = v61;
    }
    id v74 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    unint64_t v75 = v154;
    swift_bridgeObjectRetain_n();
    uint64_t v76 = sub_10096B470();
    os_log_type_t v77 = sub_10096C590();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v180 = swift_slowAlloc();
      *(_DWORD *)uint64_t v78 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&v179[0] = sub_100719D44(v170, v75, (uint64_t *)&v180);
      sub_10096C8C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "⚔️  Putting remote version %s into Genstore...", v78, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v157 = (void (*)(char *, void *))*((void *)v175 + 1);
    v157(v39, v176);
    os_log_type_t v73 = v172;
    unint64_t v79 = v159;
    sub_10096AD20(v80);
    uint64_t v82 = v81;
    uint64_t v83 = swift_bridgeObjectRetain();
    sub_1008D37C0(v83);
    swift_bridgeObjectRelease();
    Class isa = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    *(void *)&long long v180 = 0;
    id v85 = v169;
    id v86 = [v169 prepareAdditionCreationWithItemAtURL:v82 byMoving:1 creationInfo:isa error:&v180];

    uint64_t v87 = (void *)v180;
    uint64_t v72 = v174;
    if (v86)
    {
      sub_10096ADD0();
      id v88 = v87;

      uint64_t v89 = v152;
      sub_10016A248(v153, v152);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v73[6])(v89, 1, v72) == 1)
      {
        sub_10002B770(v89, &qword_100ACA8C0);
        uint64_t v41 = v148;
LABEL_23:
        uint64_t v115 = v173;
        sub_10096AD20(v90);
        uint64_t v176 = v116;
        sub_1008D37C0(v160);
        swift_bridgeObjectRelease();
        Class v175 = sub_10096B9A0().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v117 = (void (*)(char *, uint64_t, uint64_t))v73[2];
        uint64_t v118 = v150;
        v117(v150, v41, v72);
        uint64_t v119 = v151;
        v117(v151, (uint64_t)v115, v72);
        uint64_t v120 = *((unsigned __int8 *)v73 + 80);
        uint64_t v121 = (v120 + 32) & ~v120;
        uint64_t v122 = (v22 + v120 + v121) & ~v120;
        uint64_t v123 = swift_allocObject();
        Class v124 = v168;
        *(void *)(v123 + 16) = sub_100436E70;
        *(void *)(v123 + 24) = v124;
        uint64_t v125 = v73;
        id v126 = (void (*)(uint64_t, char *, uint64_t))v73[4];
        v126(v123 + v121, v118, v72);
        v126(v123 + v122, v119, v72);
        uint64_t v183 = sub_100436DE4;
        uint64_t v184 = v123;
        *(void *)&long long v180 = _NSConcreteStackBlock;
        *((void *)&v180 + 1) = 1107296256;
        uint64_t v181 = sub_100237A4C;
        uint64_t v182 = &unk_100A89B18;
        uint64_t v127 = _Block_copy(&v180);
        swift_retain();
        swift_release();
        id v128 = v169;
        Class v130 = v175;
        id v129 = v176;
        [v169 createAdditionStagedAtURL:v176 creationInfo:v175 completionHandler:v127];
        _Block_release(v127);

        ((void (*)(char *, uint64_t))v125[1])(v173, v72);
        return swift_release();
      }
      unint64_t v159 = (unint64_t)a10;
      uint64_t v92 = v155;
      ((void (*)(char *, uint64_t, uint64_t))v73[4])(v155, v89, v72);
      id v93 = (id)fpfs_current_or_default_log();
      os_log_type_t v94 = v149;
      sub_10096B490();
      ((void (*)(unint64_t, char *, uint64_t))v73[2])(v79, v92, v72);
      unint64_t v95 = v154;
      swift_bridgeObjectRetain_n();
      uint64_t v96 = sub_10096B470();
      uint64_t v97 = v72;
      os_log_type_t v98 = sub_10096C590();
      if (os_log_type_enabled(v96, v98))
      {
        uint64_t v99 = swift_slowAlloc();
        uint64_t v158 = swift_slowAlloc();
        *(void *)&long long v180 = v158;
        *(_DWORD *)uint64_t v99 = 136315394;
        uint64_t v156 = v99 + 4;
        sub_100436DE8((unint64_t *)&qword_100ACCBB0, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v100 = sub_10096D220();
        *(void *)&v179[0] = sub_100719D44(v100, v101, (uint64_t *)&v180);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        unint64_t v102 = v79;
        unint64_t v103 = (void (*)(unint64_t, uint64_t))v172[1];
        v103(v102, v97);
        *(_WORD *)(v99 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&v179[0] = sub_100719D44(v170, v95, (uint64_t *)&v180);
        sub_10096C8C0();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v96, v98, "⚔️  associate thumnail %s for loser %s", (uint8_t *)v99, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        os_log_type_t v73 = v172;
        swift_slowDealloc();

        uint64_t v104 = v149;
      }
      else
      {
        unint64_t v105 = v79;
        unint64_t v103 = (void (*)(unint64_t, uint64_t))v73[1];
        v103(v105, v97);

        swift_bridgeObjectRelease_n();
        uint64_t v104 = v94;
      }
      v157(v104, v176);
      uint64_t v72 = v97;
      sub_10096AD20(v106);
      unsigned int v108 = v107;
      sub_10096AD20(v109);
      uint64_t v111 = v110;
      uint64_t v41 = v148;
      if (v159 >> 60 == 15) {
        Class v112 = 0;
      }
      else {
        Class v112 = sub_10096AF20().super.isa;
      }
      *(void *)&long long v180 = 0;
      unsigned int v113 = objc_msgSend(v108, "fp_associateThumbnailToVersionAtURL:thumbnailMetadata:error:", v111, v112, &v180);

      if (v113)
      {
        id v114 = (id)v180;
        v103((unint64_t)v155, v72);
        goto LABEL_23;
      }
      id v131 = (id)v180;
      swift_bridgeObjectRelease();
      uint64_t v71 = sub_10096ABF0();

      swift_willThrow();
      v103((unint64_t)v155, v72);
      v103((unint64_t)v173, v72);
    }
    else
    {
      id v91 = (id)v180;
      swift_bridgeObjectRelease();
      uint64_t v71 = sub_10096ABF0();

      swift_willThrow();
      uint64_t v41 = v148;
    }
  }
  else
  {
    id v70 = (id)v180;
    uint64_t v71 = sub_10096ABF0();

    swift_willThrow();
    uint64_t v72 = v174;
    os_log_type_t v73 = v172;
  }
  id v132 = (id)fpfs_current_or_default_log();
  uint64_t v133 = v171;
  sub_10096B490();
  Swift::String v134 = v161;
  ((void (*)(char *, uint64_t, uint64_t))v73[2])(v161, v41, v72);
  swift_errorRetain();
  swift_errorRetain();
  Swift::String v135 = sub_10096B470();
  os_log_type_t v136 = sub_10096C5B0();
  if (os_log_type_enabled(v135, v136))
  {
    uint64_t v137 = swift_slowAlloc();
    uint64_t v172 = (void *)swift_slowAlloc();
    uint64_t v173 = (char *)swift_slowAlloc();
    *(void *)&long long v180 = v173;
    *(_DWORD *)uint64_t v137 = 136446466;
    uint64_t v170 = v137 + 4;
    sub_10096AD20((NSURL *)(v137 + 4));
    unint64_t v139 = v138;
    id v140 = objc_msgSend(v138, "fp_shortDescription");

    uint64_t v141 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unint64_t v143 = v142;

    *(void *)&v179[0] = sub_100719D44(v141, v143, (uint64_t *)&v180);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v73[1])(v134, v174);
    *(_WORD *)(v137 + 12) = 2112;
    swift_getErrorValue();
    id v144 = Error.prettyDescription.getter(v178);
    *(void *)&v179[0] = v144;
    sub_10096C8C0();
    void *v172 = v144;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v135, v136, "failed to add version to %{public}s: %@", (uint8_t *)v137, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, void *))v175 + 1))(v171, v176);
  }
  else
  {
    ((void (*)(char *, uint64_t))v73[1])(v134, v72);
    swift_errorRelease();
    swift_errorRelease();

    (*((void (**)(char *, void *))v175 + 1))(v133, v176);
  }
  uint64_t v145 = (uint64_t)v163;
  *uint64_t v163 = v71;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_10030C428(v145, v164, v165, v166, v167);
  swift_errorRelease();
  sub_10002B770(v145, &qword_100AD0CD0);
  return swift_release();
}

void sub_1004366FC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096AE50();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  BOOL v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v15 = (char *)&v35 - v14;
  if (_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() == a2 && v16 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      goto LABEL_15;
    }
  }
  id v19 = [a1 storage];
  if (!v19)
  {
LABEL_23:
    __break(1u);
    return;
  }
  id v20 = [v19 documentURL];
  swift_unknownObjectRelease();
  if (v20)
  {
    sub_10096ADD0();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    {
      uint64_t v22 = 0;
    }
    else
    {
      sub_10096AD20(v21);
      uint64_t v22 = v23;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v15, 1, 1, v6);
    uint64_t v22 = 0;
  }
  uint64_t v24 = self;
  id v25 = [a1 nameSpace];
  id v26 = [a1 name];
  objc_msgSend(v24, "__itemAtURL:didResolveConflictVersionWithClientID:name:purposeID:", v22, v25, v26, 0);

LABEL_15:
  id v27 = [a1 storage];
  if (!v27)
  {
    __break(1u);
    goto LABEL_23;
  }
  id v28 = [v27 documentURL];
  swift_unknownObjectRelease();
  if (v28)
  {
    sub_10096ADD0();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
    {
      uint64_t v30 = 0;
    }
    else
    {
      sub_10096AD20(v29);
      uint64_t v30 = v31;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
    uint64_t v30 = 0;
  }
  uint64_t v32 = self;
  id v33 = [a1 nameSpace];
  id v34 = [a1 name];
  objc_msgSend(v32, "__itemAtURL:didLoseVersionWithClientID:name:purposeID:", v30, v33, v34, 0);
}

unint64_t sub_100436B94(void *a1)
{
  unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
  NSString v2 = sub_10096BC00();
  id v3 = [a1 enumeratorForAdditionsInNameSpace:v2 withOptions:0 withoutOptions:0 ordering:0];

  if (v3)
  {
    while (1)
    {
      if (objc_msgSend(v3, "nextObject", v6, v7))
      {
        sub_10096C9D0();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v6 = 0u;
        long long v7 = 0u;
      }
      sub_100436D38((uint64_t)&v6, (uint64_t)&v8);
      if (!*((void *)&v9 + 1)) {
        break;
      }
      sub_100042A48(&v8, v10);
      sub_1001FAC78((uint64_t)v10, (uint64_t)&v8);
      sub_100436DA0();
      if (swift_dynamicCast())
      {
        id v4 = (id)v6;
        sub_10096C070();
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10096C0F0();
        }
        sub_10096C150();
        sub_10096C0C0();
      }
      sub_1000268E0((uint64_t)v10);
    }
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_10002B770((uint64_t)&v8, (uint64_t *)&unk_100ACE0F0);
  return v11;
}

uint64_t sub_100436D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACE0F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100436DA0()
{
  unint64_t result = qword_100AD0DD0;
  if (!qword_100AD0DD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100AD0DD0);
  }
  return result;
}

uint64_t sub_100436DE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100436E30()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100436E70(uint64_t a1)
{
  return sub_10030C428(a1, *(void (**)(uint64_t, uint64_t, id, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100436E80()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  uint64_t v6 = v0 + v4;
  long long v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, v1);
  v7(v0 + v5, v1);

  return swift_deallocObject();
}

uint64_t sub_100436F74(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_10096AE50() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  long long v8 = *(void (**)(uint64_t *))(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = v2 + ((*(void *)(v5 + 64) + v6 + v7) & ~v6);

  return sub_100434660(a1, a2, v8, v9, v2 + v7, v10);
}

uint64_t sub_100437034()
{
  uint64_t v2 = sub_10096A630();
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10096A650();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  uint64_t v35 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096B480();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  __chkstk_darwin(v6);
  long long v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10096AE50();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v18 = (char *)v32 - v17;
  id v19 = objc_msgSend(self, "fp_supportDirectory");
  uint64_t v39 = v0;
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  id v20 = v19;
  v32[1] = v1;
  sub_10096ADD0();

  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v21(v11, v16, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:
    sub_100083498((uint64_t)v11);
    id v24 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    id v25 = sub_10096B470();
    os_log_type_t v26 = sub_10096C5B0();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Error initializing GlobalResource, cannot resolve fp_suportDirectory", v27, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
    sub_10096A5C0();
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_10010DA14();
    id v28 = v35;
    uint64_t v29 = v38;
    sub_10096ABD0();
    sub_10096A4D0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v29);
    swift_willThrow();
    goto LABEL_9;
  }
  v21(v18, v11, v12);
  sub_10096AE10();
  sub_10096BCF0();
  int v22 = fpfs_lp_openat();
  swift_release();
  if (v22 < 0)
  {
    int v31 = sub_10096B4D0();
    sub_1005970E0(v31, 1, 0, 0xAu);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
LABEL_9:
    uint64_t v23 = v39;
    type metadata accessor for GlobalResourceStore();
    swift_deallocPartialClassInstance();
    return v23;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  uint64_t v23 = v39;
  *(_DWORD *)(v39 + 16) = v22;
  return v23;
}

uint64_t sub_100437558(Swift::String a1)
{
  uint64_t v4 = *(unsigned int *)(v1 + 16);
  *(void *)&long long v8 = 0x656372756F736572;
  *((void *)&v8 + 1) = 0xEA00000000002F73;
  sub_10096BDC0(a1);
  long long v5 = v8;
  long long v8 = xmmword_100982960;
  swift_bridgeObjectRetain();
  uint64_t result = sub_10084B0EC(v4, v5, *((uint64_t *)&v5 + 1), 0x200000, 0, 0, (uint64_t)&v8, (uint64_t)sub_1009523B4, 0);
  if (v2)
  {
    sub_10037C394(v8, *((unint64_t *)&v8 + 1));
    swift_bridgeObjectRelease();
    swift_errorRetain();
    LODWORD(v8) = sub_10096A710();
    sub_100045CB4();
    char v7 = sub_10096AA60();
    swift_errorRelease();
    if (v7)
    {
      swift_errorRelease();
      return 0;
    }
    return v3;
  }
  if (*((void *)&v8 + 1) >> 60 != 11)
  {
    uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004376A4()
{
  sub_100595FB8(*(unsigned int *)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlobalResourceStore()
{
  return self;
}

char *sub_100437700()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)&unk_100A8F418;
  }
  else {
    return (char *)&type metadata for () + 8;
  }
}

uint64_t sub_100437728(Swift::String a1, uint64_t a2, uint64_t a3)
{
  return sub_100952BF4(a1, a2, a3, *(unsigned int *)(*(void *)v3 + 16));
}

uint64_t sub_100437748(Swift::String a1)
{
  return sub_100437558(a1);
}

uint64_t sub_10043776C(Swift::String a1)
{
  return sub_10095317C(a1);
}

uint64_t sub_10043778C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1004377EC()
{
  swift_release();

  return v0;
}

uint64_t sub_100437814()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncEngine()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10043786C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 112);
}

uint64_t sub_100437874(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_10043787C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(a4 + 16) == 1)
  {
    uint64_t v8 = *(void *)(a5 + 24);
    BOOL v9 = __OFSUB__(v8, 1);
    uint64_t v10 = v8 - 1;
    if (v9) {
      __break(1u);
    }
    else {
      *(void *)(a5 + 24) = v10;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JobSchedulingOrder()
{
  return &type metadata for JobSchedulingOrder;
}

uint64_t sub_100437904(unint64_t a1)
{
  if (a1 >> 61 >= 5) {
    return 1;
  }
  else {
    return a1 >> 61;
  }
}

BOOL sub_100437914(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t sub_100437928(unint64_t a1)
{
  if ((a1 & 0x1FFFFFFFFFFFFFFFLL) != 0)
  {
    unint64_t v1 = a1 >> 61;
    v2._countAndFlagsBits = 0x746C7561666564;
    uint64_t v3 = (void *)0xE700000000000000;
    switch(v1)
    {
      case 0uLL:
        v2._countAndFlagsBits = 0x756F72676B636162;
        uint64_t v3 = (void *)0xEA0000000000646ELL;
        break;
      case 1uLL:
        goto LABEL_7;
      case 2uLL:
        break;
      case 3uLL:
        v2._countAndFlagsBits = 0x74696E4972657375;
        uint64_t v3 = (void *)0xED00006465746169;
        break;
      case 4uLL:
        v2._countAndFlagsBits = 0x65746E4972657375;
        uint64_t v3 = (void *)0xEF65766974636172;
        break;
      default:
        uint64_t v3 = (void *)0xE700000000000000;
LABEL_7:
        v2._countAndFlagsBits = 0x7974696C697475;
        break;
    }
    v2._object = v3;
    sub_10096BDC0(v2);
    swift_bridgeObjectRelease();
    v6._countAndFlagsBits = 46;
    v6._object = (void *)0xE100000000000000;
    sub_10096BDC0(v6);
    v7._countAndFlagsBits = sub_10096C2B0();
    sub_10096BDC0(v7);
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    unint64_t v4 = a1 >> 61;
    uint64_t result = 0x756F72676B636162;
    switch(v4)
    {
      case 0uLL:
        return result;
      case 2uLL:
        uint64_t result = 0x746C7561666564;
        break;
      case 3uLL:
        uint64_t result = 0x74696E4972657375;
        break;
      case 4uLL:
        uint64_t result = 0x65746E4972657375;
        break;
      default:
        uint64_t result = 0x7974696C697475;
        break;
    }
  }
  return result;
}

BOOL sub_100437B54(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_100437B68(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_100437B7C(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_100437B90(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_100437BA4()
{
  return sub_100437928(*v0);
}

BOOL sub_100437BAC(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_100437BC4(void *a1, void *a2)
{
  if (*a2 < *a1) {
    return 1;
  }
  return *a1 == *a2 && a1[1] < a2[1];
}

BOOL sub_100437BF4(void *a1, void *a2)
{
  if (*a1 < *a2) {
    return 0;
  }
  return *a2 != *a1 || a2[1] >= a1[1];
}

BOOL sub_100437C24(void *a1, void *a2)
{
  if (*a2 < *a1) {
    return 0;
  }
  return *a1 != *a2 || a1[1] >= a2[1];
}

BOOL sub_100437C54(void *a1, void *a2)
{
  if (*a1 < *a2) {
    return 1;
  }
  return *a2 == *a1 && a2[1] < a1[1];
}

uint64_t sub_100437C84()
{
  uint64_t v2 = sub_100437928(*v0);
  v3._countAndFlagsBits = 35;
  v3._object = (void *)0xE100000000000000;
  sub_10096BDC0(v3);
  v4._countAndFlagsBits = sub_10096C2B0();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_100437D04()
{
  unint64_t result = qword_100AD5608;
  if (!qword_100AD5608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5608);
  }
  return result;
}

uint64_t sub_100437D5C()
{
  uint64_t v0 = sub_10096B0E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096B0D0();
  sub_10096B080();
  double v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v7 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18) {
    return 0x2000000000000000;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100437E84()
{
  uint64_t v0 = sub_10096B0E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096B0D0();
  sub_10096B080();
  double v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v7 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18) {
    return 0;
  }
LABEL_7:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for JobSchedulingPriority()
{
  return &type metadata for JobSchedulingPriority;
}

unint64_t sub_100437FC0()
{
  unint64_t result = qword_100AD5610;
  if (!qword_100AD5610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5610);
  }
  return result;
}

uint64_t sub_100438014()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_100438044()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = 10;
  v4._object = (void *)0xE100000000000000;
  sub_10096BDC0(v4);
  id v2 = sub_10096BC00();
  swift_bridgeObjectRelease();
  [v1 put:v2];
}

id sub_1004380C8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  id v12 = *(id *)v5;
  uint64_t v13 = *(void *)(v5 + 8);
  uint64_t v14 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = a1;
  v16._object = a2;
  sub_10096BDC0(v16);
  a5[3] = a3;
  a5[4] = a4;
  *a5 = v12;
  a5[1] = v13;
  a5[2] = v14;

  return v12;
}

uint64_t sub_100438158@<X0>(void *a1@<X0>, void *a2@<X1>, void **a3@<X8>)
{
  Swift::String v4 = *v3;
  *a3 = *v3;
  a3[1] = a1;
  a3[3] = &type metadata for SubFPCTLTermDumper;
  a3[4] = &off_100A89D60;
  a3[2] = a2;
  id v5 = v4;

  return swift_bridgeObjectRetain();
}

uint64_t destroy for SubFPCTLTermDumper(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s9libfssync18SubFPCTLTermDumperVwCP_0(void *a1, uint64_t a2)
{
  Swift::String v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubFPCTLTermDumper(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SubFPCTLTermDumper(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubFPCTLTermDumper(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubFPCTLTermDumper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubFPCTLTermDumper()
{
  return &type metadata for SubFPCTLTermDumper;
}

uint64_t static VFSFileTree.lookupItem(at:lookupScope:lookupCache:pkgItemsLookupPolicy:options:openOptions:)@<X0>(uint64_t a1@<X2>, unsigned int a2@<W7>, uint64_t a3@<X8>)
{
  sub_100438524(a2);
  sub_10096BCF0();
  uint64_t v5 = fpfs_lp_openat();
  swift_release();
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = sub_10096B4D0();
    sub_1005970E0(v6, 1, 0, 0xAu);
    swift_willThrow();
  }
  else
  {
    sub_100438EE8(a1, a3);
    if (!v10) {
      return sub_100595FB8(v5);
    }
    sub_100595FB8(v5);
  }
  swift_errorRetain();
  sub_10096A710();
  sub_100045CB4();
  char v7 = sub_10096AA60();
  uint64_t result = swift_errorRelease();
  if (v7)
  {
    uint64_t v9 = type metadata accessor for VFSItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a3, 1, 1, v9);
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100438524(unsigned int a1)
{
  if (a1) {
    unsigned int v1 = a1;
  }
  else {
    unsigned int v1 = 0x8000;
  }
  return v1 | ~(v1 >> 13) & 0x100 | 4;
}

uint64_t sub_100438544@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, __int16 a7)
{
  uint64_t v95 = a4;
  uint64_t v98 = a5;
  LODWORD(v7) = a3;
  LODWORD(v97) = a1;
  uint64_t v91 = a6;
  uint64_t v9 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v90 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B480();
  uint64_t v88 = *(void *)(v11 - 8);
  uint64_t v89 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v87 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v82 - v14;
  uint64_t v16 = sub_10002B7CC(&qword_100AD0280);
  __chkstk_darwin(v16 - 8);
  char v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v94 = (uint64_t)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v92 = (uint64_t)&v82 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v93 = (uint64_t)&v82 - v26;
  __chkstk_darwin(v25);
  id v28 = (unsigned __int8 *)&v82 - v27;
  long long v29 = *(_OWORD *)(a2 + 216);
  v106[10] = *(_OWORD *)(a2 + 200);
  v106[11] = v29;
  long long v30 = *(_OWORD *)(a2 + 248);
  v106[12] = *(_OWORD *)(a2 + 232);
  v106[13] = v30;
  long long v31 = *(_OWORD *)(a2 + 152);
  v106[6] = *(_OWORD *)(a2 + 136);
  v106[7] = v31;
  long long v32 = *(_OWORD *)(a2 + 184);
  v106[8] = *(_OWORD *)(a2 + 168);
  v106[9] = v32;
  long long v33 = *(_OWORD *)(a2 + 88);
  v106[2] = *(_OWORD *)(a2 + 72);
  v106[3] = v33;
  long long v34 = *(_OWORD *)(a2 + 120);
  v106[4] = *(_OWORD *)(a2 + 104);
  v106[5] = v34;
  long long v35 = *(_OWORD *)(a2 + 56);
  v106[0] = *(_OWORD *)(a2 + 40);
  v106[1] = v35;
  sub_10001956C((int *)v106, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19) == 1)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  sub_1000113EC((uint64_t)v18, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v36 = *(void *)a2;
  v28[v19[17]] = v7;
  Class v107 = v28;
  uint64_t v37 = *v28;
  int v99 = 1;
  uint64_t v38 = v36;
  switch(v37)
  {
    case 1:
      if ((a7 & 0x80) != 0) {
        v107[v19[18]] = 0;
      }
      int v99 = 1;
      uint64_t v38 = v36;
      goto LABEL_27;
    case 2:
      goto LABEL_27;
    default:
      uint64_t v38 = *(unsigned int *)(a2 + 16);
      LODWORD(v7) = *(_DWORD *)(a2 + 256);
      if (v38)
      {
        if (v7 <= 0xB)
        {
          if (((1 << v7) & 0x371) != 0 || *(_DWORD *)(a2 + 40) == 3 || *(_DWORD *)(a2 + 144) <= 1u)
          {
            int v99 = 0;
            if (!fpfs_supports_pkg_dataless_escape_prevention()) {
              goto LABEL_27;
            }
            goto LABEL_20;
          }
LABEL_15:
          int v99 = 1;
          uint64_t v38 = v36;
          if (!fpfs_supports_pkg_dataless_escape_prevention())
          {
LABEL_27:
            uint64_t v51 = v19[16];
            if (v107[v51] == 1
              && ((sub_100942660(v36, *(void *)(v98 + 32)) & 1) != 0
               || (*(unsigned char *)(v98 + 48) & 1) == 0 && v36 == *(void *)(v98 + 40)))
            {
              id v52 = (id)fpfs_current_or_default_log();
              uint64_t v53 = v87;
              sub_10096B490();
              uint64_t v54 = sub_10096B470();
              os_log_type_t v55 = sub_10096C5D0();
              if (os_log_type_enabled(v54, v55))
              {
                uint64_t v56 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v56 = 0;
                _os_log_impl((void *)&_mh_execute_header, v54, v55, "don't ignore the root of the domain", v56, 2u);
                swift_slowDealloc();
              }

              (*(void (**)(char *, uint64_t))(v88 + 8))(v53, v89);
              v107[v51] = 0;
            }
            uint64_t v89 = *(void *)a2;
            uint64_t v57 = *(unsigned int *)(a2 + 20);
            uint64_t v58 = *(void *)(a2 + 24);
            uint64_t v97 = v38;
            if (v58)
            {
              v104[0] = sub_10096BDE0();
              v104[1] = v59;
              uint64_t v102 = 58;
              unint64_t v103 = 0xE100000000000000;
              uint64_t v100 = 47;
              unint64_t v101 = 0xE100000000000000;
              sub_10001F9C0();
              sub_10096C910();
              swift_bridgeObjectRelease();
            }
            uint64_t v60 = v95;
            uint64_t v61 = (uint64_t)v107;
            uint64_t v62 = v93;
            sub_1000D37D0((uint64_t)v107, v93, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
            uint64_t v63 = v92;
            sub_1000D37D0(v62, v92, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
            uint64_t v92 = sub_100018CB0(v89, v57, v63);
            LODWORD(v89) = v64;
            uint64_t v88 = v65;
            char v67 = v66;
            swift_bridgeObjectRelease();
            sub_100018EB4(v62, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
            if (v99)
            {
              unsigned int v68 = *(_DWORD *)(a2 + 16);
              LODWORD(v95) = v68 == 0;
            }
            else
            {
              LODWORD(v95) = 0;
              unsigned int v68 = v97;
            }
            uint64_t v7 = v94;
            uint64_t v69 = *(void *)(a2 + 8);
            uint64_t v70 = sub_10096ACF0();
            uint64_t v93 = v71;
            uint64_t v94 = v70;
            sub_1000D37D0(v61, v7, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
            Swift::UInt64 v72 = *(unsigned int *)(a2 + 208);
            if ((v72 & 0x80000000) == 0)
            {
              LODWORD(v87) = v67 & 1;
              uint64_t v73 = v69;
              int v74 = *(_DWORD *)(a2 + 256);
              uint64_t v75 = sub_10096AE50();
              uint64_t v76 = v60;
              uint64_t v77 = *(void *)(v75 - 8);
              uint64_t v78 = (uint64_t)v90;
              (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v90, v76, v75);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v75);
              sub_10002C548((uint64_t)v104);
              sub_10001AE98((uint64_t)v104, (uint64_t)v105, &qword_100AD0EA0);
              uint64_t v79 = swift_retain();
              LOBYTE(v102) = v95;
              sub_1000182FC(v97, v99, v73, 1, v92, v89, v88, (int)v87, v91, v94, v93, v7, v72, v74, v78, v68 | ((unint64_t)v95 << 32), v79, (uint64_t)v105);
              return sub_100018EB4((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
            }
            __break(1u);
            goto LABEL_44;
          }
LABEL_20:
          if (v107[v19[27]] == 1)
          {
            uint64_t v41 = v19[15];
            if ((v107[v41] & 1) == 0)
            {
              id v42 = (id)fpfs_current_or_default_log();
              sub_10096B490();
              Swift::String v43 = sub_10096B470();
              os_log_type_t v44 = sub_10096C5D0();
              int v45 = v44;
              if (os_log_type_enabled(v43, v44))
              {
                uint64_t v46 = swift_slowAlloc();
                int v84 = v45;
                os_log_type_t v47 = (uint8_t *)v46;
                uint64_t v85 = swift_slowAlloc();
                v104[0] = v85;
                id v86 = v47;
                *(_DWORD *)os_log_type_t v47 = 136315138;
                uint64_t v82 = v47 + 4;
                os_log_t v83 = v43;
                uint64_t v48 = VFSItemID.parseableString.getter(v38, v99);
                uint64_t v102 = sub_100719D44(v48, v49, v104);
                sub_10096C8C0();
                swift_bridgeObjectRelease();
                os_log_t v50 = v83;
                _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v84, "marking package %s as sync root", v86, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
              }
              (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v89);
              if ((fpfs_fset_syncroot() & 0x80000000) != 0)
              {
                int v81 = sub_10096B4D0();
                sub_1005970E0(v81, 1, 0, 4u);
                swift_willThrow();
                return sub_100018EB4((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
              }
              v107[v41] = 1;
            }
          }
          goto LABEL_27;
        }
LABEL_45:
        type metadata accessor for fpfs_tempfile_pattern_t(0);
        LODWORD(v104[0]) = v7;
        sub_10096D380();
        __break(1u);
        JUMPOUT(0x100438ED8);
      }
      if ((v7 - 1) >= 0xB)
      {
        if (v7) {
          goto LABEL_45;
        }
      }
      else if ((a7 & 0x400) == 0)
      {
        goto LABEL_15;
      }
      uint64_t v39 = v96;
      unsigned int v40 = sub_100596094();
      if (!v39)
      {
        uint64_t v96 = 0;
        int v99 = 0;
        uint64_t v38 = v40;
        if (!fpfs_supports_pkg_dataless_escape_prevention()) {
          goto LABEL_27;
        }
        goto LABEL_20;
      }
      return sub_100018EB4((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  }
}

uint64_t sub_100438EE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  char v5 = __chkstk_darwin(*(unsigned __int8 *)(a1 + 68));
  uint64_t v22 = v2;
  int v23 = v6;
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  char v27 = v10;
  uint64_t v28 = v11;
  uint64_t v29 = v12;
  char v30 = v13;
  uint64_t v31 = v14;
  uint64_t v32 = v15;
  int v33 = v16;
  char v34 = v5;
  uint64_t result = sub_10094A1CC(v17, (uint64_t)sub_10043F564, (uint64_t)&v21, a2);
  if (v3)
  {
    swift_errorRetain();
    LODWORD(v32) = sub_10096A690();
    sub_100045CB4();
    char v19 = sub_10096AA60();
    uint64_t result = swift_errorRelease();
    if (v19)
    {
      swift_errorRelease();
      uint64_t v20 = type metadata accessor for VFSItem(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 1, 1, v20);
    }
  }
  return result;
}

uint64_t static VFSFileTree.lookupItem(by:lookupScope:lookupCache:pkgItemsLookupPolicy:options:)@<X0>(unsigned __int8 a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v26[6] = *(_DWORD *)(a3 + 16);
  v26[7] = 2129920;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  v33[0] = *a2;
  v33[1] = v7;
  int v9 = *((_DWORD *)a2 + 4);
  int v10 = *((_DWORD *)a2 + 5);
  int v34 = v9;
  int v35 = v10;
  sub_10001AE98((uint64_t)(a2 + 3), (uint64_t)v38, &qword_100ADF5E0);
  uint64_t v11 = sub_10001AE98((uint64_t)v38, (uint64_t)v39, &qword_100ADF5E0);
  if (v39[1])
  {
    uint64_t v12 = __chkstk_darwin(v11);
    if ((v14 & 0x1000000000000000) != 0 || !(v14 & 0x2000000000000000 | v13 & 0x1000000000000000))
    {
      uint64_t result = sub_10096CBC0();
      if (v4) {
        return result;
      }
      uint64_t v20 = v26[1];
    }
    else
    {
      __chkstk_darwin(v12);
      if ((v16 & 0x2000000000000000) != 0)
      {
        uint64_t v27 = v15;
        uint64_t v28 = v16 & 0xFFFFFFFFFFFFFFLL;
        uint64_t result = (uint64_t)sub_100441DDC((uint64_t)&v27, (uint64_t)v33, (void *(*)(uint64_t *__return_ptr, uint64_t))sub_10021E510, v26);
        if (v4) {
          return result;
        }
        uint64_t v20 = v26[0];
      }
      else
      {
        if ((v15 & 0x1000000000000000) != 0)
        {
          uint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v17 = sub_10096CC90();
        }
        uint64_t result = (uint64_t)sub_100441D24(v17, v18, (void *(*)(uint64_t *__return_ptr))sub_10021E984);
        if (v4) {
          return result;
        }
        uint64_t v20 = result;
      }
    }
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v27 = v8;
    uint64_t v28 = v7;
    int v29 = v9;
    int v30 = v10;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v21 = fpfs_openfdbyhandle();
    if ((v21 & 0x80000000) != 0)
    {
      int v22 = sub_10096B4D0();
      sub_1005970E0(v22, 0, 0, 0xAu);
      return swift_willThrow();
    }
    uint64_t v20 = v21;
  }
  if (a1 - 1 >= 2 && v9)
  {
    uint64_t v23 = a4;
    uint64_t v24 = a3;
  }
  else
  {
    uint64_t v23 = a4;
    uint64_t v24 = a3;
  }
  sub_100438EE8(v24, v23);
  return sub_100595FB8(v20);
}

uint64_t static VFSFileTree.lookupItem(by:lookupScope:lookupCache:pkgItemsLookupPolicy:options:expectedItemID:recursionControl:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = fpfs_openfdbyhandle();
  if ((v4 & 0x80000000) != 0)
  {
    int v6 = sub_10096B4D0();
    sub_1005970E0(v6, 0, 0, 0xAu);
    swift_willThrow();
  }
  else
  {
    uint64_t v5 = v4;
    sub_100438EE8(a1, a2);
    if (!v10) {
      return sub_100595FB8(v5);
    }
    sub_100595FB8(v5);
  }
  swift_errorRetain();
  sub_10096A710();
  sub_100045CB4();
  char v7 = sub_10096AA60();
  uint64_t result = swift_errorRelease();
  if (v7)
  {
    uint64_t v9 = type metadata accessor for VFSItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1004395D0@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)(uint64_t, uint64_t)@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, NSObject *a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v231 = a4;
  uint64_t v220 = a7;
  int v221 = a8;
  uint64_t v222 = a6;
  os_log_t v230 = a3;
  unsigned int v218 = a1;
  uint64_t v226 = a9;
  uint64_t v15 = sub_10096B480();
  uint64_t v210 = *(void *)(v15 - 8);
  uint64_t v211 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v208 = (char *)v181 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v214 = (char *)v181 - v18;
  uint64_t v217 = sub_10096A7B0();
  *(void *)&long long v209 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v216 = (char *)v181 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10002B7CC(&qword_100AD0F28);
  __chkstk_darwin(v20 - 8);
  int v22 = (char *)v181 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_10096AE50();
  uint64_t v23 = *(void *)(v233 - 8);
  uint64_t v24 = __chkstk_darwin(v233);
  uint64_t v225 = (char *)v181 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v228 = (char *)v181 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v223 = (char *)v181 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)v181 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  int v35 = (char *)v181 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)v181 - v37;
  __chkstk_darwin(v36);
  unsigned int v40 = (char *)v181 - v39;
  uint64_t v219 = a2;
  sub_10096ACC0();
  uint64_t v224 = a5;
  sub_10084663C(*(void *)(a5 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs), v22);
  uint64_t v41 = sub_10002B7CC((uint64_t *)&unk_100AD0F30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v22, 1, v41) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v40, v233);
    sub_10002B770((uint64_t)v22, &qword_100AD0F28);
    uint64_t v42 = type metadata accessor for VFSItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v226, 1, 1, v42);
  }
  uint64_t v229 = a13;
  os_log_type_t v44 = v38;
  LODWORD(v231) = a12;
  os_log_t v230 = a11;
  uint64_t v227 = a10;
  int v45 = &v22[*(int *)(v41 + 48)];
  os_log_type_t v47 = *(void (***)(char *, char *, uint64_t))v45;
  __darwin_ino64_t v46 = *((void *)v45 + 1);
  uint64_t v215 = v47;
  __darwin_ino64_t v212 = v46;
  uint64_t v48 = v233;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v38, v22, v233);
  unint64_t v49 = *(void (**)(void))(v23 + 16);
  Swift::String v207 = v40;
  ((void (*)(char *, char *, uint64_t))v49)(v35, v40, v48);
  uint64_t v213 = v44;
  ((void (*)(char *, char *, uint64_t))v49)(v32, v44, v48);
  if ((_BYTE)v231 != 0xFF)
  {
    sub_10043ADD8(v218, v219, (uint64_t)v35, (uint64_t)v32, v224, v222, v226, v220, v221, v227, (unint64_t)v230, v231, v229);
    swift_bridgeObjectRelease();
    os_log_t v50 = *(void (**)(char *, uint64_t))(v23 + 8);
    uint64_t v51 = v233;
    v50(v32, v233);
    v50(v35, v51);
    id v52 = v213;
LABEL_7:
    v50(v52, v51);
    return ((uint64_t (*)(char *, uint64_t))v50)(v207, v51);
  }
  uint64_t v53 = v215;
  Swift::String v206 = v49;
  uint64_t v203 = v23;
  if (v221 == 1)
  {
    sub_10043ADD8(v218, v219, (uint64_t)v35, (uint64_t)v32, v224, v222, v226, v220, 1, v227, (unint64_t)v230, 0xFFu, v229);
    uint64_t v54 = v213;
    swift_bridgeObjectRelease();
    os_log_t v50 = *(void (**)(char *, uint64_t))(v203 + 8);
    uint64_t v51 = v233;
    v50(v32, v233);
    v50(v35, v51);
    id v52 = v54;
    goto LABEL_7;
  }
  uint64_t v205 = v23 + 16;
  uint64_t v201 = v35;
  uint64_t v202 = v32;
  os_log_type_t v55 = v213;
  uint64_t v56 = v227;
  uint64_t v57 = v229;
  if (!v222)
  {
    uint64_t v142 = (uint64_t)v201;
    uint64_t v143 = (uint64_t)v202;
    sub_10043ADD8(v218, v219, (uint64_t)v201, (uint64_t)v202, v224, 0, v226, v220, v221, v227, (unint64_t)v230, 0xFFu, v229);
    swift_bridgeObjectRelease();
    id v144 = *(void (**)(uint64_t, uint64_t))(v203 + 8);
    uint64_t v145 = v233;
    v144(v143, v233);
    v144(v142, v145);
    v144((uint64_t)v55, v145);
    return ((uint64_t (*)(char *, uint64_t))v144)(v207, v145);
  }
  uint64_t v58 = v223;
  ((void (*)(char *, char *, uint64_t))v206)(v223, v213, v233);
  *(void *)&v236.dev_t st_dev = v53;
  v236.__darwin_ino64_t st_ino = v212;
  uint64_t v237 = 47;
  unint64_t v238 = 0xE100000000000000;
  sub_10001F9C0();
  swift_unknownObjectRetain();
  uint64_t v59 = sub_10096C8E0();
  uint64_t v60 = *(void *)(v59 + 16);
  os_log_t v61 = v230;
  uint64_t v196 = v59;
  if (!v60)
  {
LABEL_58:
    swift_bridgeObjectRelease();
    uint64_t v138 = (uint64_t)v201;
    uint64_t v139 = (uint64_t)v202;
    sub_10043ADD8(v218, v219, (uint64_t)v201, (uint64_t)v202, v224, v222, v226, v220, v221, v56, (unint64_t)v61, 0xFFu, v57);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    id v140 = *(void (**)(uint64_t, uint64_t))(v203 + 8);
    uint64_t v141 = v233;
    v140(v139, v233);
    v140(v138, v141);
    v140((uint64_t)v213, v141);
    v140((uint64_t)v207, v141);
    return ((uint64_t (*)(char *, uint64_t))v140)(v58, v141);
  }
  uint64_t v62 = v59;
  uint64_t v231 = v60;
  swift_beginAccess();
  uint64_t v215 = (void (**)(char *, char *, uint64_t))(v203 + 40);
  Swift::String v204 = (void (**)(char *, uint64_t))(v203 + 8);
  p_st_atimespec = &v236.st_atimespec;
  uint64_t v192 = (void (**)(char *, uint64_t))(v210 + 8);
  uint64_t v193 = v220 + 1;
  uint64_t v191 = &v235;
  char v188 = (char *)&v234 + 4;
  uint64_t v199 = (void (**)(char *, uint64_t))(v209 + 8);
  NSErrorUserInfoKey v200 = NSUnderlyingErrorKey;
  uint64_t v63 = v62 + 40;
  long long v209 = xmmword_10097B210;
  long long v198 = xmmword_100973BB0;
  long long v194 = xmmword_100982CB0;
  long long v187 = 0x8200502uLL;
  uint64_t v186 = (char *)&type metadata for Any + 8;
  long long v184 = xmmword_100982CA0;
  while (1)
  {
    swift_bridgeObjectRetain();
    int v64 = v228;
    sub_10096AD50();
    (*v215)(v58, v64, v233);
    NSString v65 = sub_10096BC00();
    char v66 = v58;
    id v67 = [v65 pathExtension];

    uint64_t v68 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unint64_t v70 = v69;

    swift_bridgeObjectRelease();
    uint64_t v71 = HIBYTE(v70) & 0xF;
    if ((v70 & 0x2000000000000000) == 0) {
      uint64_t v71 = v68 & 0xFFFFFFFFFFFFLL;
    }
    if (!v71)
    {
      swift_bridgeObjectRelease();
      uint64_t v58 = v66;
      uint64_t v56 = v227;
      uint64_t v57 = v229;
      goto LABEL_51;
    }
    Swift::UInt64 v72 = v225;
    v206();
    sub_10096AE10();
    sub_100438524(0x108000u);
    sub_10096BCF0();
    int v73 = fpfs_lp_openat();
    swift_release();
    if (v73 < 0)
    {
      int v81 = sub_10096B4D0();
      uint64_t v56 = v227;
      uint64_t v57 = v229;
      if (!v81 || (uint64_t v82 = sub_10096B4A0(), (v82 & 0x100000000) != 0))
      {
        sub_100358858();
        swift_allocError();
        *(_OWORD *)uint64_t v87 = v209;
        *(unsigned char *)(v87 + 16) = 10;
      }
      else
      {
        v236.dev_t st_dev = v82;
        sub_10002B7CC(&qword_100ACE1E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v198;
        *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        *(void *)(inited + 40) = v84;
        *(void *)(inited + 72) = &type metadata for VFSFileError;
        *(_OWORD *)(inited + 48) = v209;
        *(unsigned char *)(inited + 64) = 10;
        sub_10004621C(inited);
        sub_10002DB6C((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        id v86 = v216;
        uint64_t v85 = v217;
        sub_10096ABD0();
        sub_10096A790();
        (*v199)(v86, v85);
      }
      uint64_t v58 = v223;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*v204)(v225, v233);
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    int v74 = *v204;
    (*v204)(v72, v233);
    uint64_t v75 = *(unsigned int *)(v224 + 64);
    v236.dev_t st_dev = 0;
    sub_10096BCF0();
    LODWORD(v210) = v73;
    int is_package_root2 = fpfs_pkg_is_package_root2();
    swift_release();
    uint64_t v56 = v227;
    uint64_t v57 = v229;
    if (is_package_root2 < 0)
    {
      if (!sub_10096B4D0() || (uint64_t v88 = sub_10096B4A0(), (v88 & 0x100000000) != 0))
      {
        sub_100358858();
        swift_allocError();
        *(void *)uint64_t v93 = v75;
        *(void *)(v93 + 8) = 0;
        *(unsigned char *)(v93 + 16) = 9;
      }
      else
      {
        LODWORD(v234) = v88;
        sub_10002B7CC(&qword_100ACE1E0);
        uint64_t v89 = swift_initStackObject();
        *(_OWORD *)(v89 + 16) = v198;
        *(void *)(v89 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        *(void *)(v89 + 40) = v90;
        *(void *)(v89 + 72) = &type metadata for VFSFileError;
        *(void *)(v89 + 48) = v75;
        *(void *)(v89 + 56) = 0;
        *(unsigned char *)(v89 + 64) = 9;
        sub_10004621C(v89);
        sub_10002DB6C((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        uint64_t v92 = v216;
        uint64_t v91 = v217;
        sub_10096ABD0();
        sub_10096A790();
        (*v199)(v92, v91);
      }
      uint64_t v58 = v223;
      swift_willThrow();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      sub_100595FB8(v210);
LABEL_31:
      uint64_t v232 = 0;
      goto LABEL_51;
    }
    swift_bridgeObjectRelease();
    dev_t st_dev = v236.st_dev;
    if ((v236.st_dev & 4) != 0) {
      goto LABEL_50;
    }
    memset(&v236, 0, 28);
    uint64_t v78 = p_st_atimespec;
    timespec *p_st_atimespec = 0u;
    v78[1] = 0u;
    v78[2] = 0u;
    v78[3] = 0u;
    v78[4] = 0u;
    v78[5] = 0u;
    v78[6] = 0u;
    int v79 = fstat(v210, &v236);
    uint64_t v80 = (uint64_t)v202;
    os_log_t v61 = v230;
    if (v79 < 0)
    {
      if (!sub_10096B4D0() || (uint64_t v94 = sub_10096B4A0(), (v94 & 0x100000000) != 0))
      {
        sub_100358858();
        swift_allocError();
        *(_OWORD *)uint64_t v125 = v194;
        *(unsigned char *)(v125 + 16) = 10;
      }
      else
      {
        LODWORD(v234) = v94;
        sub_10002B7CC(&qword_100ACE1E0);
        uint64_t v95 = swift_initStackObject();
        *(_OWORD *)(v95 + 16) = v198;
        *(void *)(v95 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        *(void *)(v95 + 40) = v96;
        *(void *)(v95 + 72) = &type metadata for VFSFileError;
        *(_OWORD *)(v95 + 48) = v194;
        *(unsigned char *)(v95 + 64) = 10;
        sub_10004621C(v95);
        sub_10002DB6C((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        uint64_t v98 = v216;
        uint64_t v97 = v217;
        sub_10096ABD0();
        sub_10096A790();
        int v99 = v98;
        os_log_t v61 = v230;
        (*v199)(v99, v97);
      }
      uint64_t v58 = v223;
LABEL_41:
      swift_willThrow();
      swift_errorRelease();
      sub_100595FB8(v210);
      uint64_t v232 = 0;
      goto LABEL_52;
    }
    if ((v236.st_flags & 0x40) != 0) {
      break;
    }
    sub_100595FB8(v210);
    uint64_t v58 = v223;
LABEL_52:
    v63 += 16;
    if (!--v231) {
      goto LABEL_58;
    }
  }
  __darwin_ino64_t st_ino = v236.st_ino;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v102 = v232;
  uint64_t v103 = v220[1](st_ino, ObjectType);
  uint64_t v105 = (uint64_t)v201;
  uint64_t v232 = v102;
  if (v102)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v146 = v233;
    v74((char *)v80, v233);
    v74((char *)v105, v146);
    v74(v213, v146);
    v74(v207, v146);
    sub_100595FB8(v210);
    return ((uint64_t (*)(char *, uint64_t))v74)(v223, v146);
  }
  __darwin_ino64_t v189 = st_ino;
  int v195 = v104;
  uint64_t v185 = v103;
  id v106 = (id)fpfs_current_or_default_log();
  Class v107 = v214;
  sub_10096B490();
  unsigned int v108 = sub_10096B470();
  int v109 = sub_10096C5A0();
  if (os_log_type_enabled(v108, (os_log_type_t)v109))
  {
    int v182 = v109;
    os_log_t v183 = v108;
    uint64_t v110 = swift_slowAlloc();
    uint64_t v190 = v74;
    uint64_t v111 = v110;
    uint64_t v112 = swift_slowAlloc();
    *(void *)&v236.dev_t st_dev = v112;
    *(_DWORD *)uint64_t v111 = v187;
    v181[0] = v111 + 4;
    v181[1] = v112;
    unsigned int v113 = v228;
    ((void (*)(char *, char *, uint64_t))v206)(v228, v223, v233);
    sub_10096AD20(v114);
    uint64_t v116 = v115;
    id v117 = objc_msgSend(v115, "fp_shortDescription");

    uint64_t v118 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unint64_t v120 = v119;

    v190(v113, v233);
    uint64_t v234 = sub_100719D44(v118, v120, (uint64_t *)&v236.st_dev);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v111 + 12) = 2048;
    uint64_t v234 = v189;
    sub_10096C8C0();
    *(_WORD *)(v111 + 22) = 1024;
    LODWORD(v234) = st_dev;
    sub_10096C8C0();
    *(_WORD *)(v111 + 28) = 2080;
    if ((_BYTE)v195 == 0xFF)
    {
      unint64_t v123 = 0xE600000000000000;
      os_log_type_t v124 = v182;
      uint64_t v121 = 0x29656E6F6E28;
    }
    else
    {
      uint64_t v121 = VFSItemID.parseableString.getter(v185, v195);
      unint64_t v123 = v122;
      os_log_type_t v124 = v182;
    }
    uint64_t v234 = sub_100719D44(v121, v123, (uint64_t *)&v236.st_dev);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v111 + 38) = 2080;
    uint64_t v234 = sub_100719D44(0x29656E6F6E28, 0xE600000000000000, (uint64_t *)&v236.st_dev);
    sub_10096C8C0();
    os_log_t v127 = v183;
    _os_log_impl((void *)&_mh_execute_header, v183, v124, "📦 x-validated query for %s ino:%llu status:%x snapshotID:%s expected:%s", (uint8_t *)v111, 0x30u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v126 = *v192;
    (*v192)(v214, v211);
    uint64_t v57 = v229;
    int v74 = v190;
  }
  else
  {

    id v126 = *v192;
    (*v192)(v107, v211);
  }
  if (v195 > 1u)
  {
    if (v195 != 255)
    {
      uint64_t v190 = v74;
      goto LABEL_65;
    }
LABEL_50:
    sub_100595FB8(v210);
    uint64_t v58 = v223;
LABEL_51:
    os_log_t v61 = v230;
    goto LABEL_52;
  }
  if (v195 == 1)
  {
    uint64_t v128 = v210;
    int v129 = fpfs_pkg_demote();
    uint64_t v58 = v223;
    if ((v129 & 0x80000000) == 0)
    {
      sub_100595FB8(v128);
      goto LABEL_51;
    }
    int v130 = sub_10096B4D0();
    os_log_t v61 = v230;
    if (!v130 || (uint64_t v131 = sub_10096B4A0(), (v131 & 0x100000000) != 0))
    {
      sub_100358858();
      swift_allocError();
      *(_OWORD *)uint64_t v137 = v184;
      *(unsigned char *)(v137 + 16) = 10;
    }
    else
    {
      v236.dev_t st_dev = v131;
      sub_10002B7CC(&qword_100ACE1E0);
      uint64_t v132 = swift_initStackObject();
      *(_OWORD *)(v132 + 16) = v198;
      *(void *)(v132 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      *(void *)(v132 + 40) = v133;
      *(void *)(v132 + 72) = &type metadata for VFSFileError;
      *(_OWORD *)(v132 + 48) = v184;
      *(unsigned char *)(v132 + 64) = 10;
      sub_10004621C(v132);
      sub_10002DB6C((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      Swift::String v135 = v216;
      uint64_t v134 = v217;
      sub_10096ABD0();
      sub_10096A790();
      os_log_type_t v136 = v135;
      os_log_t v61 = v230;
      (*v199)(v136, v134);
    }
    goto LABEL_41;
  }
  uint64_t v190 = v74;
  if ((st_dev & 0xA) != 0)
  {
LABEL_65:
    uint64_t v148 = v223;
    unint64_t v149 = v208;
    goto LABEL_66;
  }
  int v147 = fpfs_pkg_promote();
  uint64_t v148 = v223;
  unint64_t v149 = v208;
  if (v147 < 0)
  {
    int v150 = sub_10096B4D0();
    sub_1005970E0(v150, 26, 0, 0xAu);
    swift_willThrow();
    swift_errorRelease();
    uint64_t v232 = 0;
  }
LABEL_66:
  swift_bridgeObjectRelease();
  id v151 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v152 = sub_10096B470();
  os_log_type_t v153 = sub_10096C5A0();
  int v154 = v153;
  if (os_log_type_enabled(v152, v153))
  {
    uint64_t v155 = swift_slowAlloc();
    os_log_t v230 = v152;
    uint64_t v156 = v155;
    uint64_t v231 = swift_slowAlloc();
    *(void *)&v236.dev_t st_dev = v231;
    *(_DWORD *)uint64_t v156 = 136315394;
    LODWORD(v225) = v154;
    uint64_t v157 = v228;
    uint64_t v158 = v233;
    ((void (*)(char *, char *, uint64_t))v206)(v228, v148, v233);
    sub_10096AD20(v159);
    uint64_t v161 = v160;
    id v162 = objc_msgSend(v160, "fp_shortDescription");

    uint64_t v163 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unint64_t v165 = v164;

    uint64_t v166 = v158;
    uint64_t v57 = v229;
    v190(v157, v166);
    uint64_t v234 = sub_100719D44(v163, v165, (uint64_t *)&v236.st_dev);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v156 + 12) = 2080;
    uint64_t v167 = v185;
    unsigned __int8 v168 = v195;
    uint64_t v169 = VFSItemID.parseableString.getter(v185, v195);
    uint64_t v234 = sub_100719D44(v169, v170, (uint64_t *)&v236.st_dev);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    os_log_t v171 = v230;
    _os_log_impl((void *)&_mh_execute_header, v230, (os_log_type_t)v225, "📦 x-validated result for %s returned:%s", (uint8_t *)v156, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v126(v208, v211);
    uint64_t v172 = v213;
  }
  else
  {

    v126(v149, v211);
    uint64_t v172 = v213;
    uint64_t v167 = v185;
    unsigned __int8 v168 = v195;
  }
  unsigned __int8 v180 = v168;
  unint64_t v179 = v167;
  uint64_t v173 = v210;
  uint64_t v174 = (uint64_t)v201;
  uint64_t v175 = (uint64_t)v202;
  sub_10043ADD8(v210, v219, (uint64_t)v201, (uint64_t)v202, v224, v222, v226, v220, v221, v227, v179, v180, v57);
  uint64_t v176 = v207;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v177 = v233;
  uint64_t v178 = v190;
  v190((char *)v175, v233);
  v178((char *)v174, v177);
  v178(v172, v177);
  v178(v176, v177);
  sub_100595FB8(v173);
  return ((uint64_t (*)(char *, uint64_t))v178)(v223, v177);
}

uint64_t sub_10043ADD8@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t (**a8)(uint64_t, uint64_t), char a9, uint64_t a10, unint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v387 = a6;
  BOOL v404 = (unsigned char *)a5;
  v405 = (uint8_t *)a3;
  os_log_t v395 = (uint64_t *)a4;
  uint64_t v400 = a7;
  v401 = (uint64_t *)a2;
  unsigned int v391 = a1;
  LODWORD(v399) = a12;
  unint64_t v396 = a11;
  uint64_t v13 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v13 - 8);
  long long v360 = (char *)&v350 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v386 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v386);
  uint64_t v359 = (uint64_t)&v350 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10096B480();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v402 = v16;
  uint64_t v403 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v377 = (char *)&v350 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v392 = (char *)&v350 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (uint8_t *)&v350 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v374 = (char *)&v350 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v382 = (char *)&v350 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  long long v367 = (char *)&v350 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  long long v362 = (char *)&v350 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  long long v372 = (char *)&v350 - v34;
  __chkstk_darwin(v33);
  uint64_t v378 = (char *)&v350 - v35;
  uint64_t v36 = type metadata accessor for VFSItem(0);
  uint64_t v389 = *(void *)(v36 - 8);
  uint64_t v390 = (int *)v36;
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v376 = (uint64_t)&v350 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v375 = (uint64_t)&v350 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v368 = (uint64_t)&v350 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v371 = (uint64_t)&v350 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v370 = (uint64_t)&v350 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v381 = (uint64_t)&v350 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v380 = (uint64_t)&v350 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  long long v366 = (char *)&v350 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v363 = (uint64_t)&v350 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v361 = (uint64_t)&v350 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v357 = (uint64_t)&v350 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v358 = (uint64_t)&v350 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v356 = (uint64_t)&v350 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v365 = (uint64_t)&v350 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v364 = (uint64_t)&v350 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v398 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v350 - v68);
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v369 = (uint64_t)&v350 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  int v73 = (char *)&v350 - v72;
  uint64_t v74 = __chkstk_darwin(v71);
  uint64_t v384 = (char *)&v350 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v373 = (uint64_t)&v350 - v77;
  __chkstk_darwin(v76);
  uint64_t v379 = (uint64_t)&v350 - v78;
  uint64_t v79 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v80 = __chkstk_darwin(v79 - 8);
  uint64_t v383 = (uint64_t)&v350 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v80);
  uint64_t v388 = (uint64_t)&v350 - v82;
  uint64_t v83 = sub_10096AE50();
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v85 = __chkstk_darwin(v83);
  uint64_t v87 = (char *)&v350 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v85);
  Swift::UInt64 v393 = (Swift::UInt64)&v350 - v88;
  id v89 = [self defaultStore];
  signed int v90 = [v89 maxLookupDepth];

  uint64_t v385 = a13;
  if (v90 <= a13)
  {
    id v98 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    (*(void (**)(char *, uint8_t *, uint64_t))(v84 + 16))(v87, v405, v83);
    int v99 = sub_10096B470();
    os_log_type_t v100 = sub_10096C5C0();
    if (os_log_type_enabled(v99, v100))
    {
      v405 = v24;
      uint64_t v101 = v84;
      uint64_t v102 = swift_slowAlloc();
      BOOL v404 = (unsigned char *)swift_slowAlloc();
      uint64_t v410 = (uint64_t)v404;
      *(_DWORD *)uint64_t v102 = 136315394;
      uint64_t v394 = v83;
      v401 = (uint64_t *)(v102 + 4);
      sub_10096AD20((NSURL *)(v102 + 4));
      int v104 = v103;
      id v105 = objc_msgSend(v103, "fp_shortDescription");

      uint64_t v106 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v108 = v107;

      uint64_t v409 = sub_100719D44(v106, v108, &v410);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v87, v394);
      *(_WORD *)(v102 + 12) = 2080;
      if ((_BYTE)v399 == 0xFF)
      {
        unint64_t v111 = 0xE700000000000000;
        uint64_t v109 = 0x296665646E7528;
      }
      else
      {
        uint64_t v109 = VFSItemID.parseableString.getter(v396, (char)v399);
        unint64_t v111 = v110;
      }
      uint64_t v112 = (uint64_t)v405;
      uint64_t v409 = sub_100719D44(v109, v111, &v410);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "Max recursion reached while resolving %s known as %s", (uint8_t *)v102, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v403 + 8))(v112, v402);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v84 + 8))(v87, v83);

      (*(void (**)(uint8_t *, uint64_t))(v403 + 8))(v24, v402);
    }
    sub_10043EE78((uint64_t)&v410);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    swift_allocError();
    sub_10001AE98((uint64_t)&v410, v113, (uint64_t *)&unk_100ACD9A0);
    return swift_willThrow();
  }
  uint64_t v355 = v84;
  uint64_t v394 = v83;
  unint64_t v91 = 0;
  uint64_t v92 = *v401;
  int v93 = 255;
  uint64_t v94 = (uint64_t)v401;
  if ((a10 & 0x800) != 0)
  {
    uint64_t v95 = (uint64_t)v404;
    uint64_t v96 = v397;
    uint64_t v97 = v400;
    goto LABEL_20;
  }
  uint64_t v95 = (uint64_t)v404;
  uint64_t v96 = v397;
  uint64_t v97 = v400;
  if ((_BYTE)v399 == 0xFF) {
    goto LABEL_20;
  }
  unint64_t v91 = v396;
  int v93 = (int)v399;
  if (v399 < 2u) {
    goto LABEL_20;
  }
  if (v396)
  {
    if ((v404[48] & 1) != 0 || v92 == *((void *)v404 + 5))
    {
      unint64_t v91 = 1;
LABEL_19:
      int v93 = (int)v399;
      goto LABEL_20;
    }
    goto LABEL_245;
  }
  unint64_t v91 = 0;
  uint64_t v115 = *((void *)v404 + 3);
  if (!v115) {
    goto LABEL_19;
  }
  int v93 = (int)v399;
  if (v92 != v115)
  {
LABEL_245:
    sub_10096CE20();
    __break(1u);
    goto LABEL_246;
  }
LABEL_20:
  int v351 = v93;
  id v350 = (id)v91;
  uint64_t v116 = *(void *)(v95 + 24);
  uint64_t v353 = a10;
  uint64_t v354 = v73;
  if (v92 == v116 || (*(unsigned char *)(v95 + 48) & 1) == 0 && v92 == *(void *)(v95 + 40)) {
    goto LABEL_24;
  }
  __int16 v117 = *((_WORD *)v401 + 22);
  char v118 = *((unsigned char *)v401 + 46);
  __int16 v119 = *((_WORD *)v401 + 24);
  char v120 = *((unsigned char *)v401 + 136);
  int v121 = *((_DWORD *)v401 + 36);
  uint64_t v122 = v401[25];
  uint64_t v123 = v401[27];
  int v124 = *((_DWORD *)v401 + 64);
  char v125 = v401[28] & 1;
  char v126 = *((unsigned char *)v401 + 225) & 1;
  LODWORD(v410) = *((_DWORD *)v401 + 10);
  BYTE6(v410) = v118;
  WORD2(v410) = v117;
  LOWORD(v411[0]) = v119;
  long long v127 = *(_OWORD *)(v401 + 9);
  *(_OWORD *)&v411[1] = *(_OWORD *)(v401 + 7);
  *(_OWORD *)&v411[3] = v127;
  long long v128 = *(_OWORD *)(v401 + 13);
  long long v412 = *(_OWORD *)(v401 + 11);
  long long v413 = v128;
  long long v414 = *(_OWORD *)(v401 + 15);
  char v415 = v120;
  int v416 = v121;
  long long v129 = *(_OWORD *)(v401 + 21);
  long long v417 = *(_OWORD *)(v401 + 19);
  long long v418 = v129;
  long long v419 = *(_OWORD *)(v401 + 23);
  uint64_t v420 = v122;
  uint64_t v421 = v401[26];
  uint64_t v422 = v123;
  char v423 = v125;
  char v424 = v126;
  long long v425 = *(_OWORD *)(v401 + 29);
  uint64_t v426 = v401[31];
  int v427 = v124;
  uint64_t v130 = sub_10002DCEC((uint64_t)&v410);
  if (v130)
  {
LABEL_24:
    int v131 = 2;
    goto LABEL_25;
  }
  uint64_t v150 = *(void *)(v94 + 8);
  if ((a10 & 2) == 0)
  {
    uint64_t v151 = *(void *)(v94 + 8);
    int v131 = 2;
    if ((a10 & 1) == 0) {
      goto LABEL_72;
    }
    goto LABEL_25;
  }
  uint64_t v177 = *(void **)(v95 + 32);
  uint64_t v178 = v177[2];
  uint64_t v179 = *(void *)(v94 + 8);
  while (1)
  {
    if (v178)
    {
      if (v177[4] == v179) {
        goto LABEL_70;
      }
      if (v178 != 1)
      {
        if (v177[5] == v179) {
          goto LABEL_70;
        }
        if (v178 != 2)
        {
          uint64_t v180 = 6;
          while (1)
          {
            uint64_t v181 = v180 - 3;
            if (__OFADD__(v180 - 4, 1)) {
              break;
            }
            if (v177[v180] == v179) {
              goto LABEL_70;
            }
            ++v180;
            if (v181 == v178) {
              goto LABEL_62;
            }
          }
          __break(1u);
          goto LABEL_207;
        }
      }
    }
LABEL_62:
    if ((*(unsigned char *)(v95 + 48) & 1) == 0 && v179 == *(void *)(v95 + 40))
    {
LABEL_70:
      uint64_t v151 = v150;
      int v131 = 0;
      goto LABEL_71;
    }
    uint64_t v410 = v179;
    memset(v411, 0, 32);
    uint64_t v182 = fpfs_openfdbyhandle();
    if ((v182 & 0x80000000) != 0)
    {
LABEL_111:
      int v235 = sub_10096B4D0();
      sub_1005970E0(v235, 0, 0, 0xAu);
      return swift_willThrow();
    }
    uint64_t v94 = v182;
    LOBYTE(v410) = 0;
    if ((fpfs_get_is_ignore_root() & 0x80000000) != 0)
    {
LABEL_112:
      int v236 = sub_10096B4D0();
      uint64_t v237 = 6;
      goto LABEL_119;
    }
    if (v410 == 1) {
      break;
    }
    uint64_t v410 = 0;
    if ((fpfs_fget_parent_id() & 0x80000000) != 0)
    {
LABEL_118:
      int v236 = sub_10096B4D0();
      uint64_t v237 = 5;
LABEL_119:
      sub_1005970E0(v236, v237, 0, 0xAu);
      swift_willThrow();
      return sub_100595FB8(v94);
    }
    uint64_t v183 = v410;
    uint64_t v130 = close(v94);
    BOOL v163 = v183 == v179;
    uint64_t v179 = v183;
    uint64_t v95 = (uint64_t)v404;
    if (v163) {
      goto LABEL_70;
    }
  }
  uint64_t v151 = v150;
  sub_100595FB8(v94);
  int v131 = 1;
LABEL_71:
  uint64_t v96 = v397;
  uint64_t v97 = v400;
  uint64_t v94 = (uint64_t)v401;
  if (a10)
  {
LABEL_25:
    LODWORD(v352) = v131;
    Swift::UInt64 v132 = v393;
    sub_100847F30(v393);
    sub_10096AD20(v133);
    uint64_t v134 = v95;
    os_log_type_t v136 = v135;
    (*(void (**)(Swift::UInt64, uint64_t))(v355 + 8))(v132, v394);
    sub_10096AD20((NSURL *)OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL);
    uint64_t v138 = v137;
    id v139 = objc_msgSend(v136, "fp_relativePathWithRealpath:", v137);

    if (v139)
    {

      uint64_t v140 = sub_100700E9C(1);
      uint64_t v141 = v134;
      uint64_t v142 = (uint64_t)v398;
      if (v96)
      {
        id v143 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        swift_errorRetain();
        id v144 = sub_10096B470();
        os_log_type_t v145 = sub_10096C5A0();
        if (os_log_type_enabled(v144, v145))
        {
          uint64_t v146 = (uint8_t *)swift_slowAlloc();
          int v147 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v146 = 138543362;
          swift_getErrorValue();
          id v148 = Error.prettyDescription.getter(v406);
          uint64_t v410 = (uint64_t)v148;
          uint64_t v142 = (uint64_t)v398;
          sub_10096C8C0();
          *int v147 = v148;
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v144, v145, "can't resolve the trash folder after receiving an fsevent in the trash: %{public}@", v146, 0xCu);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          uint64_t v141 = (uint64_t)v404;
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v149 = (uint64_t)v395;
        uint64_t v140 = (*(uint64_t (**)(char *, uint64_t))(v403 + 8))(v392, v402);
        uint64_t v96 = 0;
      }
      else
      {
        uint64_t v149 = (uint64_t)v395;
      }
    }
    else
    {
      uint64_t v141 = v134;
      uint64_t v149 = (uint64_t)v395;
      uint64_t v142 = (uint64_t)v398;
    }
    uint64_t v409 = 0;
    char v408 = 0;
    __chkstk_darwin(v140);
    uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10043EEAC);
    if (v96) {
      return result;
    }
    if ((v408 & 1) == 0)
    {
LABEL_40:
      uint64_t v398 = a8;
      sub_100438544(v391, (uint64_t)v401, (int)v352, (uint64_t)v405, v141, (uint64_t)v354, v353);
      if (v351 > 1u) {
        goto LABEL_123;
      }
      Swift::UInt64 v152 = *(void *)v354;
      int v153 = v354[8];
      if (v354[8])
      {
        if (v153 == 1)
        {
          if (!(_BYTE)v351)
          {
            int v154 = v390;
            uint64_t v155 = (uint64_t)v354;
            uint64_t v156 = &v354[v390[14]];
            uint64_t v157 = (uint64_t)v350;
            if ((v156[4] & 1) == 0 && *(_DWORD *)v156 == v350)
            {
              int v158 = v354[v390[7]];
              uint64_t v159 = v364;
              sub_1000D37D0((uint64_t)v354, v364, type metadata accessor for VFSItem);
              if (v158)
              {
                int v160 = *(unsigned __int8 *)(v159 + v154[7]);
                sub_100018EB4(v159, type metadata accessor for VFSItem);
                uint64_t v161 = v155;
                uint64_t v162 = v365;
                sub_1000D37D0(v161, v365, type metadata accessor for VFSItem);
                BOOL v163 = v160 == 1;
                uint64_t v164 = (uint64_t)v366;
                if (!v163)
                {
                  unsigned int v165 = *(unsigned __int8 *)(v162 + v154[7]);
                  sub_100018EB4(v162, type metadata accessor for VFSItem);
                  if (v165 < 3)
                  {
                    id v166 = (id)fpfs_current_or_default_log();
                    sub_10096B490();
                    uint64_t v167 = (uint64_t)v354;
                    uint64_t v168 = v356;
                    sub_1000D37D0((uint64_t)v354, v356, type metadata accessor for VFSItem);
                    uint64_t v169 = v358;
                    sub_1000D37D0(v168, v358, type metadata accessor for VFSItem);
                    sub_100018EB4(v168, type metadata accessor for VFSItem);
                    uint64_t v170 = v357;
                    sub_1000D37D0(v167, v357, type metadata accessor for VFSItem);
                    uint64_t v171 = v361;
                    sub_1000D37D0(v170, v361, type metadata accessor for VFSItem);
                    sub_100018EB4(v170, type metadata accessor for VFSItem);
                    uint64_t v94 = sub_10096B470();
                    LOBYTE(v172) = sub_10096C5A0();
                    if (os_log_type_enabled((os_log_t)v94, (os_log_type_t)v172))
                    {
                      uint64_t v397 = 0;
                      uint64_t v95 = swift_slowAlloc();
                      uint64_t v410 = swift_slowAlloc();
                      *(_DWORD *)uint64_t v95 = 136446722;
                      uint64_t v173 = VFSItemID.parseableString.getter(*(void *)v169, *(unsigned char *)(v169 + 8));
                      uint64_t v407 = sub_100719D44(v173, v174, &v410);
                      sub_10096C8C0();
                      swift_bridgeObjectRelease();
                      sub_100018EB4(v169, type metadata accessor for VFSItem);
                      *(_WORD *)(v95 + 12) = 2082;
                      unint64_t v175 = 0xE300000000000000;
                      uint64_t v176 = 6516580;
                      switch(*(unsigned char *)(v171 + v390[7]))
                      {
                        case 1:
                          uint64_t v176 = 7498084;
                          break;
                        case 2:
                          goto LABEL_240;
                        case 3:
                          unint64_t v175 = 0xE500000000000000;
                          uint64_t v176 = 0x7361696C61;
                          break;
                        default:
                          goto LABEL_242;
                      }
                      goto LABEL_242;
                    }

                    sub_100018EB4(v171, type metadata accessor for VFSItem);
                    sub_100018EB4(v169, type metadata accessor for VFSItem);
                    (*(void (**)(char *, uint64_t))(v403 + 8))(v362, v402);
                    sub_100018EB4(v167, type metadata accessor for VFSItem);
LABEL_243:
                    unint64_t v293 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v389 + 56);
                    uint64_t v294 = v400;
                    return v293(v294, 1, 1, v390);
                  }
                  goto LABEL_193;
                }
              }
              else
              {
                sub_100018EB4(v159, type metadata accessor for VFSItem);
                uint64_t v295 = v155;
                uint64_t v162 = v365;
                sub_1000D37D0(v295, v365, type metadata accessor for VFSItem);
                uint64_t v164 = (uint64_t)v366;
              }
              sub_100018EB4(v162, type metadata accessor for VFSItem);
LABEL_193:
              id v296 = (id)fpfs_current_or_default_log();
              uint64_t v297 = v367;
              sub_10096B490();
              uint64_t v298 = v363;
              sub_1000D37D0((uint64_t)v354, v363, type metadata accessor for VFSItem);
              sub_1000D37D0(v298, v164, type metadata accessor for VFSItem);
              sub_100018EB4(v298, type metadata accessor for VFSItem);
              v299 = sub_10096B470();
              os_log_type_t v300 = sub_10096C5A0();
              int v301 = v300;
              if (os_log_type_enabled(v299, v300))
              {
                uint64_t v302 = swift_slowAlloc();
                LODWORD(v405) = v301;
                uint64_t v303 = v164;
                uint64_t v304 = v302;
                uint64_t v410 = swift_slowAlloc();
                *(_DWORD *)uint64_t v304 = 136446466;
                uint64_t v305 = VFSItemID.parseableString.getter(*(void *)v303, *(unsigned char *)(v303 + 8));
                uint64_t v397 = 0;
                uint64_t v407 = sub_100719D44(v305, v306, &v410);
                sub_10096C8C0();
                swift_bridgeObjectRelease();
                sub_100018EB4(v303, type metadata accessor for VFSItem);
                *(_WORD *)(v304 + 12) = 2082;
                uint64_t v307 = VFSItemID.parseableString.getter((uint64_t)v350, 0);
                uint64_t v407 = sub_100719D44(v307, v308, &v410);
                sub_10096C8C0();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v299, (os_log_type_t)v405, "📦 x-validation found %{public}s while expecting %{public}s: promoting item", (uint8_t *)v304, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v403 + 8))(v367, v402);
              }
              else
              {
                sub_100018EB4(v164, type metadata accessor for VFSItem);

                (*(void (**)(char *, uint64_t))(v403 + 8))(v297, v402);
              }
              uint64_t v309 = (uint64_t)v395;
              uint64_t v310 = v391;
              if ((fpfs_pkg_promote() & 0x80000000) == 0)
              {
                sub_1007016A8(v309);
                sub_100438EE8(v310);
                uint64_t v311 = (uint64_t)v354;
LABEL_209:
                sub_100018EB4(v311, type metadata accessor for VFSItem);
                return swift_release();
              }
              int v281 = sub_10096B4D0();
              uint64_t v282 = 26;
              goto LABEL_204;
            }
LABEL_121:
            uint64_t v410 = v157;
            LOBYTE(v411[0]) = v351;
            v411[1] = v152;
            LOBYTE(v411[2]) = v153;
            sub_10043F2CC((uint64_t)&v410);
            sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
            sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
            swift_allocError();
            sub_10001AE98((uint64_t)&v410, v241, (uint64_t *)&unk_100ACD9A0);
            swift_willThrow();
            return sub_100018EB4(v155, type metadata accessor for VFSItem);
          }
          if (v351 == 1) {
            goto LABEL_123;
          }
        }
        else if (v152)
        {
          id v222 = (id)fpfs_current_or_default_log();
          uint64_t v223 = v382;
          sub_10096B490();
          uint64_t v224 = (uint64_t)v354;
          uint64_t v225 = v380;
          sub_1000D37D0((uint64_t)v354, v380, type metadata accessor for VFSItem);
          uint64_t v226 = v381;
          sub_1000D37D0(v225, v381, type metadata accessor for VFSItem);
          sub_100018EB4(v225, type metadata accessor for VFSItem);
          uint64_t v227 = sub_10096B470();
          os_log_type_t v228 = sub_10096C5A0();
          if (os_log_type_enabled(v227, v228))
          {
            uint64_t v229 = (uint8_t *)swift_slowAlloc();
            uint64_t v410 = swift_slowAlloc();
            *(_DWORD *)uint64_t v229 = 136446210;
            v405 = v229 + 4;
            uint64_t v230 = VFSItemID.parseableString.getter(*(void *)v226, *(unsigned char *)(v226 + 8));
            uint64_t v407 = sub_100719D44(v230, v231, &v410);
            sub_10096C8C0();
            swift_bridgeObjectRelease();
            sub_100018EB4(v226, type metadata accessor for VFSItem);
            _os_log_impl((void *)&_mh_execute_header, v227, v228, "item %{public}s became the trash", v229, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v403 + 8))(v382, v402);
            uint64_t v232 = (uint64_t)v354;
          }
          else
          {

            sub_100018EB4(v226, type metadata accessor for VFSItem);
            (*(void (**)(char *, uint64_t))(v403 + 8))(v223, v402);
            uint64_t v232 = v224;
          }
          sub_100018EB4(v232, type metadata accessor for VFSItem);
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v389 + 56))(v400, 1, 1, v390);
        }
LABEL_246:
        sub_1007165E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/tree/VFSFileTree+Lookup.swift", 135, 2, 200);
      }
      if (!(_BYTE)v351)
      {
LABEL_123:
        uint64_t v242 = &v354[v390[7]];
        uint64_t v243 = v400;
        if (*v242 != 1
          || v354[8] >= 2u && !*(void *)v354
          || !fpfs_filename_contains_ext())
        {
          goto LABEL_141;
        }
        int v244 = fpfs_pkg_demote();
        if ((v244 & 0x80000000) == 0)
        {
          if (v244)
          {
            id v245 = (id)fpfs_current_or_default_log();
            uint64_t v246 = v374;
            sub_10096B490();
            uint64_t v247 = v370;
            sub_1000D37D0((uint64_t)v354, v370, type metadata accessor for VFSItem);
            uint64_t v248 = v371;
            sub_1000D37D0(v247, v371, type metadata accessor for VFSItem);
            sub_100018EB4(v247, type metadata accessor for VFSItem);
            uint64_t v249 = sub_10096B470();
            os_log_type_t v250 = sub_10096C5A0();
            if (os_log_type_enabled(v249, v250))
            {
              uint64_t v397 = 0;
              uint64_t v251 = (uint8_t *)swift_slowAlloc();
              v405 = (uint8_t *)swift_slowAlloc();
              uint64_t v410 = (uint64_t)v405;
              *(_DWORD *)uint64_t v251 = 136446210;
              uint64_t v252 = VFSItemID.parseableString.getter(*(void *)v248, *(unsigned char *)(v248 + 8));
              uint64_t v407 = sub_100719D44(v252, v253, &v410);
              uint64_t v96 = v397;
              uint64_t v243 = v400;
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              sub_100018EB4(v248, type metadata accessor for VFSItem);
              _os_log_impl((void *)&_mh_execute_header, v249, v250, "📦 x-validation found %{public}s on folder with extension: demoting item", v251, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v403 + 8))(v374, v402);
            }
            else
            {
              sub_100018EB4(v248, type metadata accessor for VFSItem);

              (*(void (**)(char *, uint64_t))(v403 + 8))(v246, v402);
            }
          }
LABEL_141:
          if (v404[48])
          {
            uint64_t v254 = v390;
          }
          else
          {
            uint64_t v254 = v390;
            if (v354[8] == 1 && *((void *)v404 + 5) == *(void *)v354)
            {
              sub_100700E9C(1);
              if (v96) {
                return sub_100018EB4((uint64_t)v354, type metadata accessor for VFSItem);
              }
            }
          }
          uint64_t v255 = &v242[*(int *)(v386 + 144)];
          if ((v255[4] & 1) != 0 || *(_DWORD *)v255 < 2u || !v387)
          {
LABEL_161:
            sub_1000113EC((uint64_t)v354, v243, type metadata accessor for VFSItem);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v389 + 56))(v243, 0, 1, v254);
          }
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v257 = (uint64_t *)&v354[v254[9]];
          uint64_t v258 = *v257;
          uint64_t v259 = (uint8_t *)*((void *)v354 + 2);
          int v260 = v354[24];
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease_n();
          v405 = (uint8_t *)v398[2](v258, ObjectType);
          if (v96) {
            goto LABEL_150;
          }
          uint64_t v274 = v263;
          uint64_t v399 = v257;
          if (!v263)
          {
            swift_unknownObjectRelease();
            goto LABEL_172;
          }
          uint64_t v275 = v261;
          uint64_t v276 = v262;
          v401 = (uint64_t *)v262;
          if ((_BYTE)v261)
          {
            if (v261 == 1)
            {
              if (v260 != 1 || v405 != v259)
              {
LABEL_216:
                uint64_t v321 = v368;
                sub_1000D37D0((uint64_t)v354, v368, type metadata accessor for VFSItem);
                sub_100018EB4(v321, type metadata accessor for VFSItem);
LABEL_232:
                uint64_t v334 = v399;
                uint64_t v335 = *v399;
                BOOL v336 = sub_10043EED0((uint64_t)v405, (char)v275, (uint64_t)v401, v274, (uint64_t)v404, *v399);
                if (v96)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v264 = v96;
                  v265 = v377;
                  uint64_t v254 = v390;
LABEL_151:
                  id v266 = (id)fpfs_current_or_default_log();
                  sub_10096B490();
                  uint64_t v267 = v375;
                  sub_1000D37D0((uint64_t)v354, v375, type metadata accessor for VFSItem);
                  uint64_t v268 = v376;
                  sub_1000D37D0(v267, v376, type metadata accessor for VFSItem);
                  sub_100018EB4(v267, type metadata accessor for VFSItem);
                  uint64_t v269 = sub_10096B470();
                  os_log_type_t v270 = sub_10096C5A0();
                  if (os_log_type_enabled(v269, v270))
                  {
                    uint64_t v397 = 0;
                    uint64_t v271 = (uint8_t *)swift_slowAlloc();
                    uint64_t v410 = swift_slowAlloc();
                    v405 = (uint8_t *)v264;
                    *(_DWORD *)uint64_t v271 = 136446210;
                    uint64_t v272 = VFSItemID.parseableString.getter(*(void *)v268, *(unsigned char *)(v268 + 8));
                    uint64_t v407 = sub_100719D44(v272, v273, &v410);
                    sub_10096C8C0();
                    swift_bridgeObjectRelease();
                    sub_100018EB4(v268, type metadata accessor for VFSItem);
                    _os_log_impl((void *)&_mh_execute_header, v269, v270, "couldn't access hardlink for item %{public}s", v271, 0xCu);
                    swift_arrayDestroy();
                    uint64_t v254 = v390;
                    swift_slowDealloc();
                    swift_slowDealloc();
                    swift_errorRelease();
                    swift_unknownObjectRelease();

                    (*(void (**)(char *, uint64_t))(v403 + 8))(v377, v402);
                  }
                  else
                  {
                    swift_unknownObjectRelease();
                    sub_100018EB4(v268, type metadata accessor for VFSItem);
                    swift_errorRelease();

                    (*(void (**)(char *, uint64_t))(v403 + 8))(v265, v402);
                  }
                  goto LABEL_160;
                }
                if (v336)
                {
                  uint64_t v397 = 0;
                  v337 = v390;
                  uint64_t v338 = (uint64_t)v354;
                  Swift::UInt64 v393 = *(void *)v354;
                  LODWORD(v396) = *((_DWORD *)v334 + 2);
                  os_log_t v395 = (uint64_t *)v334[2];
                  LODWORD(v399) = *((unsigned __int8 *)v334 + 24);
                  LODWORD(v392) = v354[8];
                  swift_bridgeObjectRelease_n();
                  uint64_t v398 = v275;
                  uint64_t v339 = v359;
                  sub_1000D37D0((uint64_t)v242, v359, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
                  uint64_t v340 = v337[10];
                  uint64_t v341 = (unsigned int *)(v338 + v337[11]);
                  uint64_t v342 = *v341;
                  LOBYTE(v337) = *((unsigned char *)v341 + 4);
                  LODWORD(v338) = *(_DWORD *)(v338 + v340);
                  uint64_t v343 = (uint64_t)v360;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v355 + 56))(v360, 1, 1, v394);
                  sub_10002C548((uint64_t)&v410);
                  sub_10001AE98((uint64_t)&v410, (uint64_t)v428, &qword_100AD0EA0);
                  uint64_t v344 = swift_retain();
                  LOBYTE(v407) = 1;
                  uint64_t v349 = v274;
                  uint64_t v345 = v400;
                  uint64_t v346 = v397;
                  sub_1000182FC(v393, (int)v392, (uint64_t)v405, (int)v398, v335, v396, (uint64_t)v395, (int)v399, v400, (uint64_t)v401, v349, v339, v342 | ((unint64_t)v337 << 32), v338, v343, 0x100000000, v344, (uint64_t)v428);
                  uint64_t v96 = v346;
                  if (!v346)
                  {
                    sub_100018EB4((uint64_t)v354, type metadata accessor for VFSItem);
                    swift_unknownObjectRelease();
                    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v389 + 56))(v345, 0, 1, v390);
                  }
LABEL_150:
                  uint64_t v264 = v96;
                  uint64_t v254 = v390;
                  v265 = v377;
                  goto LABEL_151;
                }
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
LABEL_172:
                uint64_t v243 = v400;
                uint64_t v254 = v390;
                goto LABEL_161;
              }
            }
            else if (v405)
            {
              if (v260 != 2 || v259 != (uint8_t *)1) {
                goto LABEL_216;
              }
            }
            else if (v260 != 2 || v259)
            {
              goto LABEL_216;
            }
          }
          else if (v260 || v405 != v259)
          {
            goto LABEL_216;
          }
          uint64_t v397 = 0;
          uint64_t v398 = v261;
          uint64_t v315 = v368;
          sub_1000D37D0((uint64_t)v354, v368, type metadata accessor for VFSItem);
          uint64_t v316 = *(void *)(v315 + 32);
          unint64_t v317 = *(void *)(v315 + 40);
          swift_bridgeObjectRetain();
          uint64_t v318 = sub_10002C020(v276, v274);
          uint64_t v320 = v319;
          swift_bridgeObjectRelease();
          if (v320)
          {
            if (v318 == 12565487 && v320 == 0xA300000000000000)
            {
              swift_bridgeObjectRelease();
LABEL_218:
              swift_bridgeObjectRetain();
              uint64_t v323 = (uint64_t)v401;
              unint64_t v324 = sub_10096BD70();
              unint64_t v396 = sub_1000364D0(v324, v323, v274);
              swift_bridgeObjectRelease();
              os_log_t v395 = (uint64_t *)sub_10096BD10();
              unint64_t v396 = v325;
              swift_bridgeObjectRelease();
              goto LABEL_220;
            }
            char v322 = sub_10096D2D0();
            swift_bridgeObjectRelease();
            if (v322) {
              goto LABEL_218;
            }
          }
          swift_bridgeObjectRetain();
          os_log_t v395 = v401;
          unint64_t v396 = v274;
LABEL_220:
          swift_bridgeObjectRetain();
          uint64_t v326 = sub_10002C020(v316, v317);
          uint64_t v328 = v327;
          swift_bridgeObjectRelease();
          if (v328)
          {
            if (v326 == 12565487 && v328 == 0xA300000000000000)
            {
              swift_bridgeObjectRelease();
LABEL_225:
              swift_bridgeObjectRetain();
              unint64_t v330 = sub_10096BD70();
              sub_1000364D0(v330, v316, v317);
              swift_bridgeObjectRelease();
              uint64_t v331 = sub_10096BD10();
              unint64_t v317 = v332;
              swift_bridgeObjectRelease();
LABEL_227:
              uint64_t v254 = v390;
              uint64_t v275 = v398;
              if (v395 == (uint64_t *)v331 && v396 == v317)
              {
                swift_bridgeObjectRelease_n();
                sub_100018EB4(v315, type metadata accessor for VFSItem);
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
              }
              else
              {
                char v333 = sub_10096D2D0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_100018EB4(v315, type metadata accessor for VFSItem);
                uint64_t v96 = v397;
                if ((v333 & 1) == 0) {
                  goto LABEL_232;
                }
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
              }
LABEL_160:
              uint64_t v243 = v400;
              goto LABEL_161;
            }
            char v329 = sub_10096D2D0();
            swift_bridgeObjectRelease();
            if (v329) {
              goto LABEL_225;
            }
          }
          swift_bridgeObjectRetain();
          uint64_t v331 = v316;
          goto LABEL_227;
        }
        goto LABEL_170;
      }
      if (v351 != 1) {
        goto LABEL_246;
      }
      uint64_t v210 = v390;
      uint64_t v155 = (uint64_t)v354;
      uint64_t v157 = (uint64_t)v350;
      if (v350 != *(id *)&v354[v390[9]]) {
        goto LABEL_121;
      }
      id v211 = (id)fpfs_current_or_default_log();
      __darwin_ino64_t v212 = v372;
      sub_10096B490();
      uint64_t v213 = v155;
      uint64_t v214 = v369;
      sub_1000D37D0(v213, v369, type metadata accessor for VFSItem);
      sub_1000D37D0(v214, v142, type metadata accessor for VFSItem);
      sub_100018EB4(v214, type metadata accessor for VFSItem);
      uint64_t v215 = sub_10096B470();
      os_log_type_t v216 = sub_10096C5A0();
      if (os_log_type_enabled(v215, v216))
      {
        uint64_t v217 = swift_slowAlloc();
        v405 = (uint8_t *)swift_slowAlloc();
        uint64_t v410 = (uint64_t)v405;
        *(_DWORD *)uint64_t v217 = 136446466;
        uint64_t v218 = VFSItemID.parseableString.getter(*(void *)v142, *(unsigned char *)(v142 + 8));
        uint64_t v397 = 0;
        uint64_t v407 = sub_100719D44(v218, v219, &v410);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        sub_100018EB4(v142, type metadata accessor for VFSItem);
        *(_WORD *)(v217 + 12) = 2082;
        uint64_t v220 = VFSItemID.parseableString.getter((uint64_t)v350, 1);
        uint64_t v407 = sub_100719D44(v220, v221, &v410);
        uint64_t v210 = v390;
        sub_10096C8C0();
        uint64_t v96 = v397;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v215, v216, "📦 x-validation found %{public}s while expecting %{public}s: demoting item", (uint8_t *)v217, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v403 + 8))(v372, v402);
      }
      else
      {
        sub_100018EB4(v142, type metadata accessor for VFSItem);

        (*(void (**)(char *, uint64_t))(v403 + 8))(v212, v402);
      }
      int v277 = fpfs_untrack_document();
      uint64_t v278 = (uint64_t)v395;
      if (v277 < 0)
      {
        int v281 = sub_10096B4D0();
        uint64_t v282 = 15;
        goto LABEL_204;
      }
      if ((v354[8] < 2u || *(void *)v354) && (fpfs_pkg_demote() & 0x80000000) != 0)
      {
LABEL_170:
        int v281 = sub_10096B4D0();
        uint64_t v282 = 27;
LABEL_204:
        sub_1005970E0(v281, v282, 0, 0xAu);
        swift_willThrow();
        return sub_100018EB4((uint64_t)v354, type metadata accessor for VFSItem);
      }
      sub_1007016A8(v278);
      uint64_t v410 = (uint64_t)v350;
      memset(v411, 0, 32);
      uint64_t v279 = fpfs_openfdbyhandle();
      if ((v279 & 0x80000000) != 0)
      {
        int v312 = sub_10096B4D0();
        sub_1005970E0(v312, 0, 0, 0xAu);
        swift_willThrow();
        goto LABEL_199;
      }
      uint64_t v280 = v279;
      sub_100438EE8(v279);
      uint64_t v130 = v280;
      if (v96)
      {
        sub_100595FB8(v280);
LABEL_199:
        uint64_t v313 = (uint64_t)v354;
        swift_errorRetain();
        LODWORD(v410) = sub_10096A710();
        sub_100045CB4();
        char v314 = sub_10096AA60();
        swift_errorRelease();
        if (v314)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v389 + 56))(v400, 1, 1, v210);
          swift_errorRelease();
LABEL_208:
          uint64_t v311 = v313;
          goto LABEL_209;
        }
        sub_100018EB4(v313, type metadata accessor for VFSItem);
        return swift_release();
      }
LABEL_207:
      sub_100595FB8(v130);
      uint64_t v313 = (uint64_t)v354;
      goto LABEL_208;
    }
    if (a9)
    {
      if (a9 != 1) {
        goto LABEL_243;
      }
      goto LABEL_40;
    }
    uint64_t v203 = v409;
    sub_1007016A8(v149);
    uint64_t v410 = v203;
    memset(v411, 0, 32);
    uint64_t v204 = fpfs_openfdbyhandle();
    if ((v204 & 0x80000000) != 0)
    {
      int v208 = sub_10096B4D0();
      sub_1005970E0(v208, 0, 0, 0xAu);
      swift_willThrow();
      uint64_t v206 = v400;
      Swift::String v207 = v390;
      swift_errorRetain();
      LODWORD(v410) = sub_10096A710();
      sub_100045CB4();
      char v209 = sub_10096AA60();
      swift_errorRelease();
      if ((v209 & 1) == 0) {
        return swift_release();
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v389 + 56))(v388, 1, 1, v207);
      swift_errorRelease();
    }
    else
    {
      uint64_t v205 = v204;
      sub_100438EE8(v204);
      uint64_t v206 = v400;
      Swift::String v207 = v390;
      sub_100595FB8(v205);
    }
    swift_release();
    uint64_t v233 = (uint64_t)v384;
    if ((_BYTE)v351 == 0xFF) {
      return sub_10001AE98(v388, v206, &qword_100ACB910);
    }
    uint64_t v234 = v383;
    sub_10002B70C(v388, v383, &qword_100ACB910);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v389 + 48))(v234, 1, v207) == 1)
    {
      sub_10002B770(v234, &qword_100ACB910);
      return sub_10001AE98(v388, v206, &qword_100ACB910);
    }
    uint64_t v238 = v379;
    sub_1000113EC(v234, v379, type metadata accessor for VFSItem);
    id v239 = *(id *)v238;
    if (*(unsigned char *)(v238 + 8))
    {
      uint64_t v240 = v378;
      if (*(unsigned char *)(v238 + 8) == 1)
      {
        if (v351 != 1 || v239 != v350)
        {
LABEL_176:
          id v284 = (id)fpfs_current_or_default_log();
          sub_10096B490();
          uint64_t v285 = v373;
          sub_1000D37D0(v238, v373, type metadata accessor for VFSItem);
          sub_1000D37D0(v285, v233, type metadata accessor for VFSItem);
          sub_100018EB4(v285, type metadata accessor for VFSItem);
          unint64_t v286 = sub_10096B470();
          os_log_type_t v287 = sub_10096C5B0();
          if (os_log_type_enabled(v286, v287))
          {
            uint64_t v288 = swift_slowAlloc();
            v405 = (uint8_t *)swift_slowAlloc();
            uint64_t v410 = (uint64_t)v405;
            *(_DWORD *)uint64_t v288 = 136446466;
            uint64_t v289 = VFSItemID.parseableString.getter((uint64_t)v350, v351);
            uint64_t v407 = sub_100719D44(v289, v290, &v410);
            sub_10096C8C0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v288 + 12) = 2082;
            uint64_t v291 = VFSItemID.parseableString.getter(*(void *)v233, *(unsigned char *)(v233 + 8));
            uint64_t v407 = sub_100719D44(v291, v292, &v410);
            sub_10096C8C0();
            uint64_t v206 = v400;
            swift_bridgeObjectRelease();
            sub_100018EB4(v233, type metadata accessor for VFSItem);
            _os_log_impl((void *)&_mh_execute_header, v286, v287, "(pkg item) expected %{public}s, but received %{public}s", (uint8_t *)v288, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v403 + 8))(v378, v402);
            uint64_t v283 = v379;
          }
          else
          {

            sub_100018EB4(v233, type metadata accessor for VFSItem);
            (*(void (**)(char *, uint64_t))(v403 + 8))(v240, v402);
            uint64_t v283 = v238;
          }
          goto LABEL_179;
        }
      }
      else if (v239)
      {
        if (v351 != 2 || v350 != (id)1) {
          goto LABEL_176;
        }
      }
      else if (v351 != 2 || v350)
      {
        goto LABEL_176;
      }
    }
    else
    {
      uint64_t v240 = v378;
      if ((_BYTE)v351 || v239 != v350) {
        goto LABEL_176;
      }
    }
    uint64_t v283 = v238;
LABEL_179:
    sub_100018EB4(v283, type metadata accessor for VFSItem);
    return sub_10001AE98(v388, v206, &qword_100ACB910);
  }
LABEL_72:
  __int16 v184 = *(_WORD *)(v94 + 44);
  char v185 = *(unsigned char *)(v94 + 46);
  __int16 v186 = *(_WORD *)(v94 + 48);
  char v187 = *(unsigned char *)(v94 + 136);
  int v188 = *(_DWORD *)(v94 + 144);
  uint64_t v189 = *(void *)(v94 + 200);
  uint64_t v190 = *(void *)(v94 + 216);
  int v191 = *(_DWORD *)(v94 + 256);
  char v192 = *(unsigned char *)(v94 + 224) & 1;
  char v193 = *(unsigned char *)(v94 + 225) & 1;
  LODWORD(v410) = *(_DWORD *)(v94 + 40);
  BYTE6(v410) = v185;
  WORD2(v410) = v184;
  LOWORD(v411[0]) = v186;
  long long v194 = *(_OWORD *)(v94 + 72);
  *(_OWORD *)&v411[1] = *(_OWORD *)(v94 + 56);
  *(_OWORD *)&v411[3] = v194;
  long long v195 = *(_OWORD *)(v94 + 104);
  long long v412 = *(_OWORD *)(v94 + 88);
  long long v413 = v195;
  long long v414 = *(_OWORD *)(v94 + 120);
  char v415 = v187;
  int v416 = v188;
  long long v196 = *(_OWORD *)(v94 + 168);
  long long v417 = *(_OWORD *)(v94 + 152);
  long long v418 = v196;
  long long v419 = *(_OWORD *)(v94 + 184);
  uint64_t v420 = v189;
  uint64_t v421 = *(void *)(v94 + 208);
  uint64_t v422 = v190;
  char v423 = v192;
  char v424 = v193;
  long long v425 = *(_OWORD *)(v94 + 232);
  uint64_t v426 = *(void *)(v94 + 248);
  int v427 = v191;
  if ((sub_10002DCF8((uint64_t)&v410) & 1) != 0 || !v131) {
    goto LABEL_25;
  }
  if (v131 == 2)
  {
    uint64_t v172 = *(void **)(v95 + 32);
    uint64_t v197 = v172[2];
    uint64_t v352 = v411;
    while (1)
    {
      if (v197)
      {
        if (v172[4] == v151) {
          goto LABEL_24;
        }
        if (v197 != 1)
        {
          if (v172[5] == v151) {
            goto LABEL_24;
          }
          if (v197 != 2) {
            break;
          }
        }
      }
LABEL_85:
      if ((*(unsigned char *)(v95 + 48) & 1) == 0 && v151 == *(void *)(v95 + 40)) {
        goto LABEL_24;
      }
      uint64_t v410 = v151;
      NSErrorUserInfoKey v200 = v352;
      *uint64_t v352 = 0u;
      v200[1] = 0u;
      uint64_t v201 = fpfs_openfdbyhandle();
      if ((v201 & 0x80000000) != 0) {
        goto LABEL_111;
      }
      uint64_t v94 = v201;
      LOBYTE(v410) = 0;
      if ((fpfs_get_is_ignore_root() & 0x80000000) != 0) {
        goto LABEL_112;
      }
      if (v410 == 1)
      {
        sub_100595FB8(v94);
        uint64_t v97 = v400;
        goto LABEL_183;
      }
      uint64_t v410 = 0;
      if ((fpfs_fget_parent_id() & 0x80000000) != 0) {
        goto LABEL_118;
      }
      uint64_t v202 = v410;
      close(v94);
      BOOL v163 = v202 == v151;
      uint64_t v151 = v202;
      uint64_t v95 = (uint64_t)v404;
      if (v163) {
        goto LABEL_25;
      }
    }
    uint64_t v198 = 6;
    while (1)
    {
      uint64_t v199 = v198 - 3;
      if (__OFADD__(v198 - 4, 1)) {
        break;
      }
      if (v172[v198] == v151) {
        goto LABEL_24;
      }
      ++v198;
      if (v199 == v197) {
        goto LABEL_85;
      }
    }
    __break(1u);
LABEL_240:
    unint64_t v175 = 0xE700000000000000;
    uint64_t v176 = 0x6B6E696C6D7973;
LABEL_242:
    uint64_t v407 = sub_100719D44(v176, v175, &v410);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_100018EB4(v361, type metadata accessor for VFSItem);
    *(_WORD *)(v95 + 22) = 2082;
    uint64_t v347 = VFSItemID.parseableString.getter((uint64_t)v350, 0);
    uint64_t v407 = sub_100719D44(v347, v348, &v410);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v94, (os_log_type_t)v172, "📦 x-validation found %{public}s of non-doc-tracked type %{public}s while expecting %{public}s: failing docID lookup", (uint8_t *)v95, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v403 + 8))(v362, v402);
    sub_100018EB4((uint64_t)v354, type metadata accessor for VFSItem);
    goto LABEL_243;
  }
LABEL_183:
  unint64_t v293 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v389 + 56);
  uint64_t v294 = v97;
  return v293(v294, 1, 1, v390);
}

uint64_t sub_10043DECC@<X0>(_DWORD *a1@<X8>)
{
  sub_10096AE10();
  sub_10096AE10();
  sub_10096BCF0();
  swift_bridgeObjectRelease();
  sub_10096BCF0();
  swift_bridgeObjectRelease();
  int is_package_item = fpfs_pkg_is_package_item();
  swift_release();
  uint64_t result = swift_release();
  *a1 = is_package_item;
  return result;
}

uint64_t sub_10043DFB0@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t (**a7)(uint64_t, uint64_t)@<X7>, uint64_t a8@<X8>, unsigned __int8 a9, uint64_t a10, NSObject *a11, unsigned __int8 a12, uint64_t a13)
{
  return sub_1004395D0(a4, a1, a2, a3, a5, a6, a7, a9, a8, a10, a11, a12, a13);
}

uint64_t sub_10043E018(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v71 = a7;
  uint64_t v72 = (uint64_t *)a3;
  uint64_t v68 = a5;
  uint64_t v69 = a6;
  uint64_t v73 = a4;
  int v67 = a2;
  uint64_t v66 = a1;
  uint64_t v8 = sub_10096B710();
  uint64_t v77 = *(void *)(v8 - 8);
  uint64_t v78 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v74 = (char **)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v75 = (uint64_t *)((char *)&v59 - v11);
  uint64_t v80 = sub_10096B820();
  uint64_t v76 = *(void *)(v80 - 8);
  uint64_t v12 = __chkstk_darwin(v80);
  uint64_t v59 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v79 = (char *)&v59 - v14;
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  __chkstk_darwin(v15 - 8);
  uint64_t v61 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10096B760();
  uint64_t v17 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v62 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10096B7D0();
  uint64_t v64 = *(void *)(v19 - 8);
  uint64_t v65 = v19;
  __chkstk_darwin(v19);
  uint64_t v63 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10096C6E0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000258DC();
  uint64_t v70 = v7;
  uint64_t v25 = *(void **)(v7 + 216);
  uint64_t v81 = _swiftEmptyArrayStorage;
  sub_10002DB6C((unint64_t *)&qword_100ACF610, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  id v26 = v25;
  sub_10002B7CC((uint64_t *)&unk_100ACB020);
  sub_100025500((unint64_t *)&qword_100ACF620, (uint64_t *)&unk_100ACB020);
  sub_10096CA60();
  uint64_t v27 = sub_10096C6F0();

  uint64_t v28 = v24;
  uint64_t v29 = v60;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
  uint64_t v30 = (uint64_t)v61;
  qos_class_self();
  sub_10096B740();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v30, 1, v29) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v17 + 104))(v62, enum case for DispatchQoS.QoSClass.utility(_:), v29);
    sub_10002B770(v30, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v62, v30, v29);
  }
  swift_getObjectType();
  uint64_t v31 = (uint64_t)v63;
  sub_10096B7B0();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v66;
  *(void *)(v32 + 16) = v70;
  *(void *)(v32 + 24) = v33;
  *(unsigned char *)(v32 + 32) = v67;
  uint64_t v34 = v72;
  sub_10001AE98((uint64_t)v72, v32 + 40, (uint64_t *)&unk_100AD6BC0);
  uint64_t v35 = v73;
  uint64_t v36 = v68;
  *(void *)(v32 + 136) = v73;
  *(void *)(v32 + 144) = v36;
  uint64_t v37 = v69;
  *(void *)(v32 + 152) = v27;
  *(void *)(v32 + 160) = v37;
  *(void *)(v32 + 168) = v71;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_10043F38C(v34);
  swift_retain();
  sub_1006B7CE4(0, v31, (uint64_t)sub_10043F350, v32);
  swift_release();
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v31, v65);
  if (v35)
  {
    uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)v35 + 88))(v38);
    uint64_t v42 = v39;
    if (!v41)
    {
      uint64_t v49 = v59;
      sub_10096B800();
      uint64_t v50 = v75;
      *uint64_t v75 = v42;
      uint64_t v52 = v77;
      uint64_t v51 = v78;
      uint64_t v53 = *(void (**)(uint64_t *, void, uint64_t))(v77 + 104);
      v53(v50, enum case for DispatchTimeInterval.nanoseconds(_:), v78);
      sub_10096B840();
      uint64_t v77 = *(void *)(v52 + 8);
      ((void (*)(uint64_t *, uint64_t))v77)(v50, v51);
      uint64_t v54 = *(void (**)(char *, uint64_t))(v76 + 8);
      v54(v49, v80);
      v53(v50, enum case for DispatchTimeInterval.never(_:), v51);
      uint64_t v55 = v74;
      sub_1000418D4(v74);
      uint64_t v56 = v79;
      sub_10096C7D0();
      uint64_t v57 = (void (*)(uint64_t *, uint64_t))v77;
      ((void (*)(void *, uint64_t))v77)(v55, v51);
      v57(v50, v51);
      v54(v56, v80);
      goto LABEL_9;
    }
    sub_10017DCB0(v39, v40, v41);
  }
  uint64_t v43 = v79;
  sub_10096B800();
  uint64_t v44 = v75;
  sub_100041860((uint64_t)v75);
  uint64_t v45 = v74;
  sub_1000418D4(v74);
  sub_10096C7D0();
  uint64_t v46 = *(void (**)(uint64_t *, uint64_t))(v77 + 8);
  uint64_t v47 = v45;
  uint64_t v48 = v78;
  v46(v47, v78);
  v46(v44, v48);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v80);
LABEL_9:
  sub_10096C750();
  return swift_unknownObjectRelease();
}

uint64_t sub_10043E7E8(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v29 = a5;
  uint64_t v16 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = a8;
  *(void *)(v19 + 32) = a9;
  *(void *)(v19 + 40) = a1;
  *(void *)(v19 + 48) = a2;
  *(unsigned char *)(v19 + 56) = a3;
  sub_10001AE98((uint64_t)a4, v19 + 64, (uint64_t *)&unk_100AD6BC0);
  *(void *)(v19 + 160) = a6;
  uint64_t v20 = (void *)(a1 + qword_100B0B640);
  uint64_t result = swift_beginAccess();
  if (*v20 == -1)
  {
    __break(1u);
  }
  else
  {
    ++*v20;
    v27[1] = a7;
    v27[2] = a9;
    uint64_t v22 = *(void *)(a1 + 224);
    id v28 = *(id *)(a1 + 216);
    uint64_t v23 = sub_10096B7D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v18, 1, 1, v23);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v29;
    *(void *)(v24 + 24) = a1;
    *(void *)(v24 + 32) = a2;
    *(unsigned char *)(v24 + 40) = a3;
    sub_10001AE98((uint64_t)a4, v24 + 48, (uint64_t *)&unk_100AD6BC0);
    *(void *)(v24 + 144) = sub_10043F450;
    *(void *)(v24 + 152) = v19;
    *(void *)(v24 + 160) = a6;
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = sub_10043F450;
    v25[3] = v19;
    v25[4] = v22;
    swift_retain();
    sub_10043F38C(a4);
    swift_retain_n();
    swift_retain();
    sub_10043F38C(a4);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    id v26 = v28;
    sub_1003946CC(v26, (uint64_t)v18, (void (*)())sub_10043F558, v25, (uint64_t)sub_10043F4FC, v24);

    swift_release();
    swift_release();
    sub_10002B770((uint64_t)v18, (uint64_t *)&unk_100ACF600);
    return swift_release();
  }
  return result;
}

uint64_t sub_10043EA94(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v27 = a8;
  uint64_t v28 = a5;
  unsigned int v26 = a7;
  uint64_t v25 = a6;
  uint64_t v12 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_10002B7CC(&qword_100AD5650);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getObjectType();
  sub_10096C720();
  sub_10002B70C(a1, (uint64_t)v20, &qword_100AD5650);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v17 = *v20;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    a3(v17);
    swift_errorRelease();
    uint64_t v21 = (uint64_t *)&unk_100ACEC90;
    uint64_t v22 = (uint64_t)v17;
  }
  else
  {
    sub_10002B7CC(&qword_100AD5658);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = *v20;
      swift_retain();
      sub_10043E018(v25, v26, v27, v23, a9, a3, a4);
      return swift_release_n();
    }
    sub_10001AE98((uint64_t)v20, (uint64_t)v14, &qword_100ACB910);
    sub_10002B70C((uint64_t)v14, (uint64_t)v17, &qword_100ACB910);
    swift_storeEnumTagMultiPayload();
    a3(v17);
    sub_10002B770((uint64_t)v17, (uint64_t *)&unk_100ACEC90);
    uint64_t v22 = (uint64_t)v14;
    uint64_t v21 = &qword_100ACB910;
  }
  return sub_10002B770(v22, v21);
}

unint64_t sub_10043ED20()
{
  unint64_t result = qword_100AD5620;
  if (!qword_100AD5620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5620);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PackageInternalLookupPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10043EE40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PackageInternalLookupPolicy()
{
  return &type metadata for PackageInternalLookupPolicy;
}

double sub_10043EE78(uint64_t a1)
{
  *(void *)a1 = 8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_10043EEAC@<X0>(_DWORD *a1@<X8>)
{
  return sub_10043DECC(a1);
}

BOOL sub_10043EED0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v11 = a1;
  if (a2 != 1)
  {
    if (a2 == 2)
    {
      if (!a1) {
        goto LABEL_5;
      }
      uint64_t v11 = *(unsigned __int8 *)(a5 + 48);
      if ((v11 & 1) == 0) {
        goto LABEL_5;
      }
      __break(1u);
    }
    sub_1007165A0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/tree/VFSFileTree+Lookup.swift", 135, 2, 580, v11, 0);
  }
LABEL_5:
  uint64_t v12 = __chkstk_darwin(a1);
  uint64_t v29 = 0;
  __darwin_time_t v30 = 0;
  *(void *)&long long v27 = 0;
  *((void *)&v27 + 1) = v13;
  uint64_t v28 = 0;
  uint64_t v14 = __chkstk_darwin(v12);
  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_10096CBC0();
    if (v7)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = v25;
  }
  else
  {
    __chkstk_darwin(v14);
    if ((a4 & 0x2000000000000000) != 0)
    {
      v24[0] = a3;
      v24[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v29 = v24;
      *(_OWORD *)&v26.dev_t st_dev = v27;
      *(void *)&v26.st_uid = v28;
      *(void *)&v26.st_rdev = v24;
      v26.st_atimespec.tv_sec = v30;
      swift_bridgeObjectRetain();
      uint64_t v18 = fpfs_openfdbyhandle();
      if ((v18 & 0x80000000) != 0)
      {
        int v22 = sub_10096B4D0();
        sub_1005970E0(v22, 0, 0, 0xAu);
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        return 0;
      }
      uint64_t v19 = v18;
      unsigned int v25 = v18;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        uint64_t v15 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v16 = a3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v15 = sub_10096CC90();
        uint64_t v16 = v23;
      }
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_100441D24(v15, v16, (void *(*)(uint64_t *__return_ptr))sub_10043F5C4);
      if (v7) {
        goto LABEL_11;
      }
      uint64_t v19 = (uint64_t)v17;
      unsigned int v25 = v17;
      swift_bridgeObjectRelease();
    }
  }
  memset(&v26, 0, 28);
  memset(&v26.st_atimespec, 0, 112);
  if (fstat(v19, &v26) < 0)
  {
    int v21 = sub_10096B4D0();
    sub_1005970E0(v21, 4, 0, 0xAu);
    swift_willThrow();
    sub_100595FB8(v19);
    swift_errorRelease();
    return 0;
  }
  else
  {
    sub_100595FB8(v19);
    return v26.st_ino == a6;
  }
}

uint64_t sub_10043F2CC(uint64_t result)
{
  *(unsigned char *)(result + 120) = 4;
  return result;
}

uint64_t sub_10043F2D8()
{
  swift_release();
  if (*(void *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10043F350()
{
  return sub_10043E7E8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), (uint64_t *)(v0 + 40), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168));
}

uint64_t *sub_10043F38C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10043F3E0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_10043F450(uint64_t a1)
{
  return sub_10043EA94(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), v1 + 64, *(void *)(v1 + 160));
}

uint64_t sub_10043F48C()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10043F4FC()
{
  return sub_1008E4C34(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), v0 + 48, *(void (**)(char *))(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160));
}

uint64_t sub_10043F518()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10043F558()
{
  return sub_1008D50E0(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10043F564@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1004395D0(*(_DWORD *)(v4 + 24), a1, a2, a3, *(void *)(v4 + 32), *(void *)(v4 + 40), *(uint64_t (***)(uint64_t, uint64_t))(v4 + 48), *(unsigned __int8 *)(v4 + 56), a4, *(void *)(v4 + 64), *(NSObject **)(v4 + 72), *(unsigned char *)(v4 + 80), v6);
}

void *sub_10043F5C4@<X0>(_DWORD *a1@<X8>)
{
  return sub_10021E984(a1);
}

uint64_t sub_10043F5DC@<X0>(_DWORD *a1@<X8>)
{
  return sub_10021E510(a1);
}

void *sub_10043F5F4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_10021E964(a1, a2);
}

uint64_t fpfs_open_s<A>(_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return fpfs_openat_s<A>(_:_:_:_:_:_:)(-2, a1, a2, a3, a4, a5, a6, a7, a9, a8);
}

uint64_t fpfs_openbyid_ext_s<A>(_:_:_:_:_:)@<X0>(uint64_t *a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v52 = a6;
  int v51 = a4;
  uint64_t v53 = a7;
  v55[5] = a2;
  v55[6] = a3;
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v62 = *a1;
  uint64_t v63 = v10;
  int v13 = *((_DWORD *)a1 + 4);
  int v12 = *((_DWORD *)a1 + 5);
  int v64 = v13;
  int v65 = v12;
  sub_10001AE98((uint64_t)(a1 + 3), (uint64_t)v68, &qword_100ADF5E0);
  uint64_t v14 = sub_10001AE98((uint64_t)v68, (uint64_t)v70, &qword_100ADF5E0);
  if (v70[1])
  {
    int v50 = a3;
    int v48 = v13;
    uint64_t v49 = v10;
    uint64_t v15 = __chkstk_darwin(v14);
    if ((v17 & 0x1000000000000000) != 0 || !(v17 & 0x2000000000000000 | v16 & 0x1000000000000000))
    {
      sub_10096CBC0();
      uint64_t v24 = a5;
      if (v7)
      {
        int v20 = v12;
        uint64_t v46 = 0;
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v47 = v11;
      __chkstk_darwin(v15);
      int v20 = v12;
      if ((v19 & 0x2000000000000000) != 0)
      {
        uint64_t v56 = v18;
        uint64_t v57 = v19 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v66 = &v56;
        sub_10021E510(v55);
        if (v7)
        {
          uint64_t v46 = 0;
          uint64_t v24 = a5;
          uint64_t v11 = v47;
          int v20 = v12;
          goto LABEL_14;
        }
        unsigned int v54 = v55[0];
      }
      else
      {
        if ((v18 & 0x1000000000000000) != 0)
        {
          uint64_t v21 = (v19 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v22 = v18 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v21 = sub_10096CC90();
        }
        unsigned int v23 = sub_100441D24(v21, v22, (void *(*)(uint64_t *__return_ptr))sub_100441E84);
        if (v7)
        {
          uint64_t v46 = 0;
          uint64_t v24 = a5;
          uint64_t v11 = v47;
          goto LABEL_14;
        }
        unsigned int v54 = v23;
      }
      uint64_t v24 = a5;
    }
    uint64_t v26 = v54;
    goto LABEL_31;
  }
  uint64_t v66 = 0;
  uint64_t v56 = v11;
  uint64_t v57 = v10;
  int v58 = v13;
  int v59 = v12;
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t v25 = fpfs_openfdbyhandle();
  if ((v25 & 0x80000000) == 0)
  {
    uint64_t v26 = v25;
    a5(v25);
    return sub_100595FB8(v26);
  }
  int v50 = a3;
  int v48 = v13;
  uint64_t v49 = v10;
  int v27 = sub_10096B4D0();
  sub_1005970E0(v27, 0, 0, 0xAu);
  swift_willThrow();
  uint64_t v46 = 0;
  uint64_t v24 = a5;
  int v20 = v12;
LABEL_14:
  swift_errorRetain();
  LODWORD(v62) = sub_10096A6F0();
  sub_100045CB4();
  char v28 = sub_10096AA60();
  uint64_t result = swift_errorRelease();
  if ((v28 & 1) != 0 && (v50 & 3) != 0 && (v51 & 2) != 0)
  {
    uint64_t v30 = swift_errorRelease();
    uint64_t v53 = &v46;
    __chkstk_darwin(v30);
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    uint64_t v31 = v49;
    uint64_t v62 = v11;
    uint64_t v63 = v49;
    int v32 = v48;
    int v64 = v48;
    int v65 = v20;
    uint64_t v33 = sub_10001AE98((uint64_t)v68, (uint64_t)v69, &qword_100ADF5E0);
    if (!v69[1])
    {
      uint64_t v56 = v11;
      uint64_t v57 = v31;
      int v58 = v32;
      int v59 = v20;
      uint64_t v60 = 0;
      uint64_t v61 = 0;
      uint64_t v42 = fpfs_openfdbyhandle();
      if ((v42 & 0x80000000) != 0)
      {
        int v44 = sub_10096B4D0();
        sub_1005970E0(v44, 0, 0, 0xAu);
        return swift_willThrow();
      }
      uint64_t v26 = v42;
      goto LABEL_31;
    }
    uint64_t v34 = __chkstk_darwin(v33);
    if ((v36 & 0x1000000000000000) != 0 || !(v36 & 0x2000000000000000 | v35 & 0x1000000000000000))
    {
      uint64_t v45 = v46;
      uint64_t result = sub_10096CBC0();
      if (!v45)
      {
        uint64_t v26 = v54;
        goto LABEL_31;
      }
    }
    else
    {
      __chkstk_darwin(v34);
      if ((v38 & 0x2000000000000000) != 0)
      {
        uint64_t v56 = v37;
        uint64_t v57 = v38 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v66 = &v56;
        uint64_t v43 = v46;
        uint64_t result = sub_10043F5DC(v55);
        if (!v43)
        {
          uint64_t v26 = v55[0];
          goto LABEL_31;
        }
      }
      else
      {
        if ((v37 & 0x1000000000000000) != 0)
        {
          uint64_t v39 = (v38 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v40 = v37 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v39 = sub_10096CC90();
        }
        uint64_t v41 = v46;
        uint64_t result = (uint64_t)sub_100441D24(v39, v40, (void *(*)(uint64_t *__return_ptr))sub_100441E84);
        if (!v41)
        {
          uint64_t v26 = result;
LABEL_31:
          v24(v26);
          return sub_100595FB8(v26);
        }
      }
    }
  }
  return result;
}

uint64_t fpfs_openat_s<A>(_:_:_:_:_:_:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v29 = a7;
  uint64_t v30 = a8;
  int v27 = a5;
  int v28 = a6;
  int v26 = a4;
  uint64_t v25 = a9;
  uint64_t v13 = sub_10096C890();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v24 - v18;
  uint64_t v20 = *(void *)(a10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))((char *)&v24 - v18, 1, 1, a10);
  uint64_t v31 = a10;
  int v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  int v35 = v26;
  int v36 = v27;
  int v37 = v28;
  uint64_t v38 = v19;
  uint64_t v39 = v29;
  uint64_t v40 = v30;
  uint64_t v21 = v41;
  sub_100440A20((void (*)(unsigned int *__return_ptr, uint64_t *))sub_100441E9C);
  if (v21) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  uint64_t v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, a10);
  if (result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v22, v17, a10);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_10043FF38(uint64_t *a1, int a2)
{
  v21[5] = a2;
  v21[6] = 2129920;
  int v32 = 0;
  uint64_t v33 = 0;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v28 = *a1;
  uint64_t v29 = v4;
  int v5 = *((_DWORD *)a1 + 4);
  int v6 = *((_DWORD *)a1 + 5);
  int v30 = v5;
  int v31 = v6;
  sub_10001AE98((uint64_t)(a1 + 3), (uint64_t)v34, &qword_100ADF5E0);
  uint64_t v7 = sub_10001AE98((uint64_t)v34, (uint64_t)v35, &qword_100ADF5E0);
  if (!v35[1])
  {
    uint64_t v22 = v3;
    uint64_t v23 = v4;
    int v24 = v5;
    int v25 = v6;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v15 = fpfs_openfdbyhandle();
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t i = v15;
      goto LABEL_16;
    }
    int v17 = sub_10096B4D0();
    sub_1005970E0(v17, 0, 0, 0xAu);
    swift_willThrow();
    goto LABEL_14;
  }
  uint64_t v8 = __chkstk_darwin(v7);
  if ((v10 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v9 & 0x1000000000000000)) {
    goto LABEL_23;
  }
  __chkstk_darwin(v8);
  if ((v12 & 0x2000000000000000) == 0)
  {
    if ((v11 & 0x1000000000000000) != 0)
    {
      uint64_t v13 = (v12 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v13 = sub_10096CC90();
    }
    uint64_t v15 = (uint64_t)sub_100441D24(v13, v14, (void *(*)(uint64_t *__return_ptr))sub_100441E84);
    if (!v2)
    {
      uint64_t i = v15;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  uint64_t v22 = v11;
  uint64_t v23 = v12 & 0xFFFFFFFFFFFFFFLL;
  int v32 = &v22;
  uint64_t v15 = sub_10043F5DC(v21);
  if (v2)
  {
LABEL_14:
    swift_errorRetain();
    LODWORD(v28) = sub_10096A6F0();
    sub_100045CB4();
    sub_10096AA60();
    return swift_errorRelease();
  }
  for (uint64_t i = v21[0]; ; uint64_t i = v20)
  {
LABEL_16:
    uint64_t v19 = __chkstk_darwin(v15);
    uint64_t v28 = 0;
    LOBYTE(v22) = 1;
    __chkstk_darwin(v19);
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100441FD8);
    if (v2)
    {
      swift_errorRelease();
      return sub_100595FB8(i);
    }
    if (v28) {
      break;
    }
    if ((v22 & 1) == 0) {
      return sub_100595FB8(i);
    }
    __break(1u);
LABEL_23:
    uint64_t v15 = sub_10096CBC0();
    if (v2) {
      goto LABEL_14;
    }
  }
  swift_willThrow();
  return sub_100595FB8(i);
}

void *sub_100440314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  void *result;
  void v11[2];
  uint64_t v12;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    uint64_t result = (void *)sub_10096CBC0();
    if (!v4) {
      return (void *)HIDWORD(v12);
    }
  }
  else
  {
    __chkstk_darwin(a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v11[0] = v5;
      v11[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      uint64_t result = v7(&v12, v11);
      if (!v4) {
        return (void *)v12;
      }
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_10096CC90();
      }
      return sub_100441D24(v8, v9, (void *(*)(uint64_t *__return_ptr))sub_100441E84);
    }
  }
  return result;
}

void sub_100440428(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void (*v8)(long long *__return_ptr, void *);
  uint64_t v9;
  long long v10;
  long long v11;
  uint64_t v12;
  long long v13;
  void v14[2];
  long long v15;
  unsigned char v16[24];
  _OWORD v17[2];
  uint64_t v18;

  if ((a3 & 0x1000000000000000) != 0 || !(a3 & 0x2000000000000000 | a2 & 0x1000000000000000))
  {
    sub_10096CBC0();
    if (!v4) {
      goto LABEL_11;
    }
  }
  else
  {
    __chkstk_darwin(a1);
    if ((v7 & 0x2000000000000000) != 0)
    {
      v14[0] = v6;
      v14[1] = v7 & 0xFFFFFFFFFFFFFFLL;
      v8(&v11, v14);
      if (v4) {
        return;
      }
      uint64_t v15 = v11;
      *(void *)uint64_t v16 = v12;
      *(_OWORD *)&v16[8] = v13;
      goto LABEL_11;
    }
    if ((v6 & 0x1000000000000000) == 0) {
      sub_10096CC90();
    }
    sub_100441D80((void (*)(void))sub_100441F08, (uint64_t)v17);
    if (!v4)
    {
      uint64_t v15 = v17[0];
      *(_OWORD *)uint64_t v16 = v17[1];
      *(void *)&v16[16] = v18;
LABEL_11:
      uint64_t v9 = *(void *)v16;
      uint64_t v10 = *(_OWORD *)&v16[8];
      *(_OWORD *)a4 = v15;
      *(void *)(a4 + 16) = v9;
      *(_OWORD *)(a4 + 24) = v10;
    }
  }
}

uint64_t sub_100440580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, _DWORD *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = a3;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a6;
  v8[3] = a2;
  v8[4] = a4;
  v8[5] = a5;
  v8[6] = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100442190;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_10002BAEC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100A89FF0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  int v11 = fpfs_openat();
  swift_release();
  _Block_release(v10);
  swift_release();
  *uint64_t v15 = v11;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10044073C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = a2;
  uint64_t v18 = a5;
  uint64_t v9 = sub_10096A7B0();
  v16[1] = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  uint64_t v11 = sub_10096C890();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v16 - v13;
  a3(a1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))(v14, 0, 1, a6);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v17, v14, v11);
  return 0;
}

uint64_t sub_100440A20(void (*a1)(unsigned int *__return_ptr, uint64_t *))
{
  uint64_t v3 = sub_10096A7B0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12[-2] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  a1(&v13, &v14);
  if (v1) {
    return swift_errorRelease();
  }
  if (v14) {
    return swift_willThrow();
  }
  uint64_t result = v13;
  if ((v13 & 0x80000000) != 0)
  {
    uint64_t v8 = sub_10096B4D0();
    if (!v8)
    {
      __chkstk_darwin(v8);
      *(&v11 - 2) = (uint64_t)&v13;
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_100442178, (uint64_t)(&v11 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v12);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_10044211C();
      swift_allocError();
      sub_10001AE98((uint64_t)v12, v9, (uint64_t *)&unk_100ACD9A0);
LABEL_15:
      swift_willThrow();
      return swift_errorRelease();
    }
    if (sub_10096B4D0() != 9939394)
    {
      sub_10096B4D0();
      uint64_t v10 = sub_10096B4A0();
      if ((v10 & 0x100000000) != 0) {
        v12[0] = 22;
      }
      else {
        v12[0] = v10;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_100034080();
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      goto LABEL_15;
    }
    objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
    return swift_willThrow();
  }
  return result;
}

uint64_t fpfs_fopendir_s<A>(_:_:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1);
  uint64_t result = sub_100440A20((void (*)(unsigned int *__return_ptr, uint64_t *))sub_100441EE0);
  if (v2)
  {
    uint64_t v5 = sub_10096C890();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  return result;
}

uint64_t sub_100440DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _DWORD *a6@<X8>)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100441F6C;
  *(void *)(v13 + 24) = v12;
  v17[4] = sub_100441F8C;
  v17[5] = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1004411E0;
  v17[3] = &unk_100A89F00;
  uint64_t v14 = _Block_copy(v17);
  swift_retain();
  swift_release();
  int v15 = fpfs_fopendir();
  _Block_release(v14);
  swift_release();
  *a6 = v15;
  LOBYTE(a6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100440F34(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a2;
  uint64_t v16 = a5;
  uint64_t v7 = sub_10096A7B0();
  v14[1] = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = sub_10096C890();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v14 - v11;
  a3(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v15, v12, v9);
  return 0;
}

uint64_t sub_1004411E0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

void sub_10044120C(int a1@<W0>, uint64_t *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v32 = a4;
  uint64_t v31 = a5;
  uint64_t v9 = sub_10096A7B0();
  uint64_t v30 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10096B480();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a2;
  if (*a2)
  {
LABEL_2:
    uint64_t v35 = v17;
    int v36 = 0;
    uint64_t v18 = fpfs_supports_long_paths();
    uint64_t v19 = 1025;
    if (v18) {
      uint64_t v19 = 0;
    }
    uint64_t v34 = v19;
    __chkstk_darwin(v18);
    *((_DWORD *)&v29 - 8) = a3;
    *(&v29 - 3) = (uint64_t)&v35;
    *(&v29 - 2) = (uint64_t)&v36;
    *(&v29 - 1) = (uint64_t)&v34;
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1004421F4);
    unsigned int v20 = v36;
    if (!v5)
    {
      if (!v36)
      {
        id v25 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v26 = sub_10096B470();
        os_log_type_t v27 = sub_10096C5C0();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "fpfs_fetch_url_for_handle: unexpected nil buffer", v28, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
        int v33 = 83;
        sub_100042898((uint64_t)&_swiftEmptyArrayStorage);
        sub_100034080();
        sub_10096ABD0();
        sub_10096A790();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
        swift_willThrow();
        uint64_t v23 = (char *)v36;
        goto LABEL_8;
      }
      id v21 = [self defaultManager];
      id v22 = [v21 stringWithFileSystemRepresentation:v20 length:strlen(v20)];

      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096ACC0();
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = (char *)v20;
LABEL_8:
    free(v23);
    return;
  }
  int v36 = 0;
  uint64_t v37 = 0;
  int v39 = 0;
  uint64_t v38 = 0;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  __chkstk_darwin(v14);
  *((_DWORD *)&v29 - 4) = a1;
  *(&v29 - 1) = v24;
  sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10025BCF0);
  if (!v5)
  {
    uint64_t v17 = v37;
    goto LABEL_2;
  }
}

uint64_t sub_100441650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void aBlock[6] = a1;
  int v19 = a2;
  char v20 = BYTE4(a2) & 1;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = a8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100442090;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_10002BF50;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BF58;
  aBlock[3] = &unk_100A89F78;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v15 = fpfs_fgetfileattrs();
  _Block_release(v14);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return v15;
}

uint64_t sub_10044180C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v3 = a3;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v14 = a3;
      sub_10001EBB0(a1, a2);
      if (!sub_10096A880())
      {
        sub_10096A890();
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x100441B20);
      }
      if (__OFSUB__((int)a1, sub_10096A8A0()))
      {
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
      }
      sub_10096A890();
      sub_10096BCF0();
      int v6 = fpfs_fsetxattr();
      swift_release();
      uint64_t result = sub_10001E9C0(a1, a2);
LABEL_14:
      uint64_t v3 = v14;
LABEL_15:
      *uint64_t v3 = v6;
      return result;
    case 2uLL:
      uint64_t v14 = a3;
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      uint64_t v9 = sub_10096A880();
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = sub_10096A8A0();
        if (__OFSUB__(v8, v11)) {
          goto LABEL_19;
        }
        uint64_t v12 = v10 + v8 - v11;
      }
      else
      {
        uint64_t v12 = 0;
      }
      if (__OFSUB__(v13, v8)) {
        goto LABEL_17;
      }
      sub_10096A890();
      if (v12)
      {
        sub_10096BCF0();
        int v6 = fpfs_fsetxattr();
        swift_release();
        swift_release();
        uint64_t result = swift_release();
        goto LABEL_14;
      }
      goto LABEL_21;
    default:
      sub_10096BCF0();
      int v6 = fpfs_fsetxattr();
      uint64_t result = swift_release();
      goto LABEL_15;
  }
}

uint64_t sub_100441B30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (*(_DWORD *)(result + 20) == *(_DWORD *)(a4 + 20))
  {
    uint64_t v5 = result;
    if (*(void *)result == *(void *)a4)
    {
      __int16 v7 = *(_WORD *)(result + 44);
      char v8 = *(unsigned char *)(result + 46);
      __int16 v9 = *(_WORD *)(result + 48);
      char v10 = *(unsigned char *)(result + 136);
      int v11 = *(_DWORD *)(result + 144);
      uint64_t v12 = *(void *)(result + 200);
      uint64_t v13 = *(void *)(result + 216);
      uint64_t v14 = *(void *)(result + 232);
      uint64_t v15 = *(void *)(result + 240);
      int v16 = *(_DWORD *)(result + 256);
      char v17 = *(unsigned char *)(v5 + 224) & 1;
      char v18 = *(unsigned char *)(v5 + 225) & 1;
      int v23 = *(_DWORD *)(v5 + 40);
      char v25 = v8;
      __int16 v24 = v7;
      __int16 v26 = v9;
      long long v19 = *(_OWORD *)(v5 + 72);
      long long v27 = *(_OWORD *)(v5 + 56);
      long long v28 = v19;
      long long v20 = *(_OWORD *)(v5 + 104);
      long long v29 = *(_OWORD *)(v5 + 88);
      long long v30 = v20;
      long long v31 = *(_OWORD *)(v5 + 120);
      char v32 = v10;
      int v33 = v11;
      long long v21 = *(_OWORD *)(v5 + 168);
      long long v34 = *(_OWORD *)(v5 + 152);
      long long v35 = v21;
      long long v36 = *(_OWORD *)(v5 + 184);
      uint64_t v37 = v12;
      uint64_t v38 = *(void *)(v5 + 208);
      uint64_t v39 = v13;
      char v40 = v17;
      char v41 = v18;
      uint64_t v42 = v14;
      uint64_t v43 = v15;
      uint64_t v44 = *(void *)(v5 + 248);
      int v45 = v16;
      uint64_t result = sub_1004420D8((uint64_t)&v23);
      if (result)
      {
        uint64_t result = _s9libfssync15EvictionUrgencyO11onDiskValueACs6UInt64V_tcfC_0(v15);
        if (a5)
        {
          if (!(_BYTE)result) {
            return result;
          }
          if (result == 1)
          {
            if (a5 < 4u)
            {
              uint64_t v22 = 2048;
LABEL_15:
              *(void *)(v5 + 240) = v22;
              __chkstk_darwin(result);
              return sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1004420E4);
            }
          }
          else if (result > a5)
          {
            a5 = result;
          }
          if (a5 == result) {
            return result;
          }
          uint64_t v22 = qword_100982D60[(char)a5 - 2];
          goto LABEL_15;
        }
        if (!(_BYTE)result) {
          return result;
        }
        uint64_t v22 = 0;
        goto LABEL_15;
      }
    }
  }
  return result;
}

void *sub_100441D24(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    uint64_t result = a3(&v5);
    if (!v3) {
      return (void *)v5;
    }
  }
  else
  {
    uint64_t result = ((void *(*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&v5 + 4), 0, 0);
    if (!v3) {
      return (void *)HIDWORD(v5);
    }
  }
  return result;
}

double sub_100441D80@<D0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  a1();
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
    *(_OWORD *)(a2 + 24) = v7;
  }
  return result;
}

void *sub_100441DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *(*a3)(uint64_t *__return_ptr, uint64_t)@<X2>, _DWORD *a4@<X8>)
{
  *(void *)(a2 + 24) = a1;
  double result = a3(&v7, a2);
  if (!v4) {
    *a4 = v7;
  }
  return result;
}

void *sub_100441E28@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, _DWORD *a2@<X8>)
{
  double result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_100441E6C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100442030(a1, a2);
}

void *sub_100441E84@<X0>(_DWORD *a1@<X8>)
{
  return sub_1004421B0(a1);
}

uint64_t sub_100441E9C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100440580(a1, v2[8], a2, v2[9], v2[10], v2[2]);
}

uint64_t sub_100441EE0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100440DAC(a1, v2[4], v2[5], v2[6], v2[2], a2);
}

double sub_100441F08@<D0>(uint64_t a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v6);
  if (!v2)
  {
    double result = v7;
    long long v5 = v8;
    *(_OWORD *)a1 = v6;
    *(double *)(a1 + 16) = result;
    *(_OWORD *)(a1 + 24) = v5;
  }
  return result;
}

uint64_t sub_100441F5C()
{
  return swift_deallocObject();
}

uint64_t sub_100441F6C(uint64_t a1)
{
  return sub_100440F34(a1, *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100441F7C()
{
  return swift_deallocObject();
}

uint64_t sub_100441F8C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100441FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100441B30(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
}

uint64_t sub_100441FD8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v4 = &_mh_execute_header;
  if (!*(unsigned char *)(v1 + 28)) {
    uint64_t v4 = 0;
  }
  uint64_t result = sub_100441650(*(void *)(v1 + 16), (unint64_t)v4 | *(unsigned int *)(v1 + 24), *(unsigned int *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
  if (!v2) {
    *a1 = result;
  }
  return result;
}

void *sub_100442030@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  void *(*v6)(uint64_t *__return_ptr, uint64_t);
  void *result;
  uint64_t v8;

  uint64_t v5 = *(void *)(v2 + 16);
  long long v6 = *(void *(**)(uint64_t *__return_ptr, uint64_t))(v2 + 24);
  *(void *)(v5 + 24) = a1;
  uint64_t result = v6(&v8, v5);
  if (!v3) {
    *a2 = v8;
  }
  return result;
}

uint64_t sub_100442080()
{
  return swift_deallocObject();
}

uint64_t sub_100442090(uint64_t a1)
{
  return sub_10064E674(a1, *(unsigned char **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v1 + 24), *(void *)(v1 + 32), a1, *(void **)(v1 + 40));
}

uint64_t sub_1004420C8()
{
  return swift_deallocObject();
}

uint64_t sub_1004420D8(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 4) >> 5) & 1;
}

uint64_t sub_1004420E4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = fpfs_set_evictable();
  *a1 = result;
  return result;
}

unint64_t sub_10044211C()
{
  unint64_t result = qword_100AD5640;
  if (!qword_100AD5640)
  {
    sub_100033BE8((uint64_t *)&unk_100ACD9A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5640);
  }
  return result;
}

uint64_t sub_100442178()
{
  return sub_100852060();
}

uint64_t sub_100442180()
{
  return swift_deallocObject();
}

uint64_t sub_100442190(uint64_t a1)
{
  return sub_10044073C(a1, *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16));
}

uint64_t sub_1004421A0()
{
  return swift_deallocObject();
}

void *sub_1004421B0@<X0>(_DWORD *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1004421F4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = fpfs_fsgetpath();
  *a1 = result;
  return result;
}

NSFileProviderItemIdentifier sub_100442244(uint64_t a1, char a2, char a3)
{
  if (a2 == 2 && a1 == 0)
  {
    if (a3)
    {
      uint64_t v4 = &NSFileProviderRootContainerItemIdentifier;
      goto LABEL_11;
    }
LABEL_14:
    v9._countAndFlagsBits = VFSItemID.parseableString.getter(a1, a2);
    sub_10096BDC0(v9);
    swift_bridgeObjectRelease();
    NSString v7 = sub_10096BC00();
    swift_bridgeObjectRelease();
    return (NSFileProviderItemIdentifier)v7;
  }
  if (a2 != 2 || a1 != 1 || (a3 & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v4 = &NSFileProviderTrashContainerItemIdentifier;
LABEL_11:
  NSFileProviderItemIdentifier v5 = *v4;

  return v5;
}

id FPItem.id.getter()
{
  id v1 = [v0 itemID];
  id v2 = [v1 identifier];

  return v2;
}

void FPItem.version.getter(uint64_t *a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = &selRef_stringWithFormat_;
  id v5 = [v1 itemVersion];
  if (v5)
  {
    long long v6 = v5;
    id v7 = [v5 contentVersion];

    uint64_t v8 = sub_10096AF60();
    unint64_t v51 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v51 = 0xC000000000000000;
  }
  id v10 = [v2 itemVersion];
  if (v10)
  {
    int v11 = v10;
    id v12 = [v10 equivalentContentVersions];

    uint64_t v13 = sub_10096C0A0();
    int64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      int v48 = v2;
      uint64_t v49 = v8;
      sub_100445EC4(0, v14, 0);
      uint64_t v15 = _swiftEmptyArrayStorage;
      int v16 = (unint64_t *)(v13 + 40);
      do
      {
        uint64_t v17 = *(v16 - 1);
        unint64_t v18 = *v16;
        sub_10001EBB0(v17, *v16);
        unint64_t v20 = _swiftEmptyArrayStorage[2];
        unint64_t v19 = _swiftEmptyArrayStorage[3];
        if (v20 >= v19 >> 1) {
          sub_100445EC4(v19 > 1, v20 + 1, 1);
        }
        v16 += 2;
        _swiftEmptyArrayStorage[2] = v20 + 1;
        long long v21 = &_swiftEmptyArrayStorage[2 * v20];
        v21[4] = v17;
        v21[5] = v18;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      id v2 = v48;
      uint64_t v8 = v49;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = _swiftEmptyArrayStorage;
    }
    uint64_t v4 = &selRef_stringWithFormat_;
  }
  else
  {
    uint64_t v15 = 0;
  }
  id v22 = [v2 itemVersion];
  if (v22)
  {
    int v23 = v22;
    id v24 = [v22 metadataVersion];

    uint64_t v25 = sub_10096AF60();
    unint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    unint64_t v27 = 0xC000000000000000;
  }
  id v28 = [v2 itemVersion];
  if (v28)
  {
    long long v29 = v28;
    unint64_t v46 = v27;
    uint64_t v47 = v25;
    id v30 = [v28 equivalentMetadataVersions];

    uint64_t v31 = sub_10096C0A0();
    int64_t v32 = *(void *)(v31 + 16);
    if (v32)
    {
      uint64_t v50 = v8;
      int v45 = a1;
      sub_100445EC4(0, v32, 0);
      int v33 = _swiftEmptyArrayStorage;
      long long v34 = (unint64_t *)(v31 + 40);
      do
      {
        uint64_t v36 = *(v34 - 1);
        unint64_t v35 = *v34;
        sub_10001EBB0(v36, *v34);
        unint64_t v38 = _swiftEmptyArrayStorage[2];
        unint64_t v37 = _swiftEmptyArrayStorage[3];
        if (v38 >= v37 >> 1) {
          sub_100445EC4(v37 > 1, v38 + 1, 1);
        }
        v34 += 2;
        _swiftEmptyArrayStorage[2] = v38 + 1;
        uint64_t v39 = &_swiftEmptyArrayStorage[2 * v38];
        v39[4] = v36;
        v39[5] = v35;
        --v32;
      }
      while (v32);
      swift_bridgeObjectRelease();
      a1 = v45;
      uint64_t v8 = v50;
      uint64_t v4 = &selRef_stringWithFormat_;
    }
    else
    {
      swift_bridgeObjectRelease();
      int v33 = _swiftEmptyArrayStorage;
    }
    unint64_t v27 = v46;
    uint64_t v25 = v47;
  }
  else
  {
    int v33 = 0;
  }
  id v40 = [v2 v4[259]];
  char v41 = v40;
  if (!v40) {
    goto LABEL_31;
  }
  id v42 = [v40 lastEditorDeviceName];

  if (!v42)
  {
    char v41 = 0;
LABEL_31:
    uint64_t v44 = 0;
    goto LABEL_32;
  }
  char v41 = (void *)_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v44 = v43;

LABEL_32:
  *a1 = v8;
  a1[1] = v51;
  a1[2] = (uint64_t)v15;
  a1[3] = v25;
  a1[4] = v27;
  a1[5] = (uint64_t)v33;
  a1[6] = (uint64_t)v41;
  a1[7] = v44;
}

uint64_t FPItem.name.getter()
{
  id v1 = [v0 filename];
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  sub_10001F9C0();
  uint64_t v2 = sub_10096C910();
  swift_bridgeObjectRelease();
  return v2;
}

NSFileProviderItemIdentifier FPItem.parentID.getter()
{
  id v1 = [v0 itemID];
  id v2 = [v1 identifier];

  uint64_t v3 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v5 = v4;
  if (v3 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v5 == v6)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v8 = sub_10096D2D0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_11:
    id v10 = [v0 itemID];
    id v11 = [v10 identifier];
LABEL_12:
    id v12 = v11;

    return (NSFileProviderItemIdentifier)v12;
  }
  if (![v0 isTrashed])
  {
    id v10 = [v0 parentItemID];
    id v11 = [v10 identifier];
    goto LABEL_12;
  }

  return NSFileProviderTrashContainerItemIdentifier;
}

uint64_t FPItem.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v118 = a1;
  uint64_t v3 = sub_10096B480();
  *(void *)&v111[4] = *(void *)(v3 - 8);
  uint64_t v112 = v3;
  __chkstk_darwin(v3);
  id v114 = &v110[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v125 = sub_10096B0E0();
  uint64_t v5 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v116 = &v110[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v123 = &v110[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = &v110[-v11];
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v122 = &v110[-v14];
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = &v110[-v16];
  uint64_t v18 = __chkstk_darwin(v15);
  __int16 v119 = &v110[-v19];
  __chkstk_darwin(v18);
  long long v21 = &v110[-v20];
  uint64_t v127 = sub_10096B370();
  uint64_t v22 = *(void *)(v127 - 8);
  uint64_t v23 = __chkstk_darwin(v127);
  uint64_t v25 = &v110[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  unint64_t v27 = &v110[-v26];
  Class isa = (Class)[v1 documentSize];
  if (!isa)
  {
    sub_100011348(0, (unint64_t *)&qword_100ACB6E0);
    Class isa = sub_10096C810(0).super.super.isa;
  }
  uint64_t v113 = v25;
  uint64_t v120 = v5;
  uint64_t v117 = sub_10096D450();

  int v29 = fpfs_supports_vfs_ignore_permissions_iopolicy();
  int v121 = v12;
  int v124 = v21;
  uint64_t v115 = v22;
  if (v29) {
    unsigned int v30 = ([v1 fileSystemFlags] << 7) & 0x100;
  }
  else {
    unsigned int v30 = 292;
  }
  int v31 = (32 * [v1 fileSystemFlags]) & 0x80;
  unsigned int v126 = v31 & 0xFFFFFFBF | (([v1 fileSystemFlags] & 1) << 6) | v30;
  id v32 = [v1 itemID];
  id v33 = [v32 identifier];

  uint64_t v34 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v36 = v35;
  if (v34 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v36 == v37)
  {
LABEL_8:

    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v38 = sub_10096D2D0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v38 & 1) == 0)
  {
    id v39 = [v2 itemID];
    id v33 = [v39 identifier];

    uint64_t v40 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v42 = v41;
    if (v40 != _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() || v42 != v43)
    {
      char v44 = sub_10096D2D0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v44 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
    goto LABEL_8;
  }
LABEL_13:
  if (!v126) {
    unsigned int v126 = v30 | 0x1C0;
  }
LABEL_15:
  if ([v2 isPackage])
  {
    LODWORD(v127) = 0;
    uint64_t v45 = v120;
  }
  else
  {
    unsigned __int8 v46 = [v2 isFolder];
    uint64_t v45 = v120;
    if (v46)
    {
      LODWORD(v127) = 1;
    }
    else
    {
      id v47 = [v2 contentType];
      sub_10096B2D0();

      int v48 = v113;
      sub_10096B2A0();
      LOBYTE(v47) = sub_10096B330();
      uint64_t v49 = *(void (**)(NSObject *, uint64_t))(v115 + 8);
      uint64_t v50 = v127;
      v49(v48, v127);
      v49(v27, v50);
      if (v47)
      {
        int v51 = 2;
      }
      else
      {
        id v52 = [v2 contentType];
        sub_10096B2D0();

        sub_10096B340();
        LOBYTE(v52) = sub_10096B330();
        v49(v48, v50);
        v49(v27, v50);
        if (v52) {
          int v51 = 3;
        }
        else {
          int v51 = 0;
        }
      }
      LODWORD(v127) = v51;
    }
  }
  unsigned __int8 v53 = [v2 isPackage];
  uint64_t v54 = v125;
  if (((v53 & 1) != 0 || [v2 isFolder])
    && (id v55 = [v2 childItemCount], v55, !v55))
  {
    int v59 = 0;
    unsigned int v58 = 65533;
  }
  else
  {
    id v56 = [v2 childItemCount];
    if (v56)
    {
      uint64_t v57 = v56;
      unsigned int v58 = [v56 unsignedIntValue];

      int v59 = 0;
    }
    else
    {
      unsigned int v58 = 0;
      int v59 = 1;
    }
  }
  uint64_t v60 = (uint64_t)v124;
  uint64_t v61 = (uint64_t)v119;
  id v62 = [v2 creationDate];
  if (v62)
  {
    uint64_t v63 = v62;
    sub_10096B0A0();

    int v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
    uint64_t v65 = v61;
    uint64_t v66 = 0;
  }
  else
  {
    int v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
    uint64_t v65 = v61;
    uint64_t v66 = 1;
  }
  uint64_t v67 = v64;
  v64(v65, v66, 1, v54);
  sub_10001AE98(v61, v60, (uint64_t *)&unk_100ACB5E0);
  sub_10002B70C(v60, (uint64_t)v17, (uint64_t *)&unk_100ACB5E0);
  int v68 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v45 + 48))(v17, 1, v54);
  LODWORD(v119) = v58;
  LODWORD(v115) = v59;
  if (v68 == 1)
  {
    sub_10002B770((uint64_t)v17, (uint64_t *)&unk_100ACB5E0);
    goto LABEL_44;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 32))(v116, v17, v54);
  sub_10096B080();
  if ((~*(void *)&v69 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_75;
  }
  if (v69 <= -9.22337204e18)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (v69 >= 9.22337204e18)
  {
LABEL_76:
    __break(1u);
    JUMPOUT(0x100443760);
  }
  if (fpfs_is_busy_date())
  {
    id v70 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    id v71 = v2;
    uint64_t v72 = sub_10096B470();
    os_log_type_t v73 = sub_10096C5A0();
    uint64_t v113 = v72;
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 138543362;
      id v128 = v71;
      id v76 = v71;
      uint64_t v45 = v120;
      uint64_t v60 = (uint64_t)v124;
      sub_10096C8C0();
      *uint64_t v75 = v71;

      _os_log_impl((void *)&_mh_execute_header, v113, v73, "🏗 Dropping busy date for remotely provided file %{public}@", v74, 0xCu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      uint64_t v54 = v125;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v77 = v123;

    (*(void (**)(unsigned char *, uint64_t))(*(void *)&v111[4] + 8))(v114, v112);
    (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v116, v54);
    sub_10002B770(v60, (uint64_t *)&unk_100ACB5E0);
    v67(v60, 1, 1, v54);
    goto LABEL_47;
  }
  (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v116, v54);
LABEL_44:
  uint64_t v77 = v123;
LABEL_47:
  id v78 = [v2 extendedAttributes];
  if (v78
    && (uint64_t v79 = v78,
        uint64_t v80 = sub_10096B9C0(),
        v79,
        uint64_t v81 = *(void *)(v80 + 16),
        swift_bridgeObjectRelease(),
        v81)
    && (id v82 = [v2 extendedAttributes]) != 0)
  {
    uint64_t v83 = v82;
    uint64_t v116 = (unsigned char *)sub_10096B9C0();
  }
  else
  {
    uint64_t v116 = 0;
  }
  uint64_t v84 = 0;
  int v85 = 0;
  switch((int)v127)
  {
    case 1:
      int v85 = 1;
      goto LABEL_54;
    case 2:
      goto LABEL_60;
    default:
LABEL_54:
      id v86 = [v2 tags];
      if (v86)
      {
        uint64_t v87 = v86;
        sub_100011348(0, &qword_100ACB6E8);
        unint64_t v88 = sub_10096C0A0();
      }
      else
      {
        unint64_t v88 = 0;
      }
      uint64_t v84 = _s9libfssync4TagsVyACSgSaySo5FPTagCGSgcfC_0(v88);
      if (v85)
      {
        uint64_t v120 = v84;
        id v89 = [v2 favoriteRank];
        if (v89)
        {
          signed int v90 = v89;
          id v114 = [v89 unsignedLongLongValue];

          uint64_t v113 = 0;
          LODWORD(v112) = 0;
          *(void *)unint64_t v111 = 0x100000001;
          goto LABEL_65;
        }
        uint64_t v113 = 0;
        id v114 = 0;
        *(void *)unint64_t v111 = 0x100000001;
      }
      else
      {
LABEL_60:
        uint64_t v120 = v84;
        if ([v2 typeAndCreator])
        {
          uint64_t v113 = [v2 typeAndCreator];
          id v114 = 0;
          *(void *)unint64_t v111 = 0;
        }
        else
        {
          uint64_t v113 = 0;
          id v114 = 0;
          *(void *)unint64_t v111 = 0x100000000;
        }
      }
      LODWORD(v112) = 1;
LABEL_65:
      uint64_t v91 = (uint64_t)v121;
      sub_10002B70C(v60, (uint64_t)v122, (uint64_t *)&unk_100ACB5E0);
      id v92 = [v2 contentModificationDate];
      if (v92)
      {
        int v93 = v92;
        sub_10096B0A0();

        uint64_t v94 = 0;
      }
      else
      {
        uint64_t v94 = 1;
      }
      uint64_t v95 = 1;
      v67(v91, v94, 1, v54);
      unsigned __int8 v96 = [v2 capabilities];
      unsigned __int8 v97 = [v2 fileSystemFlags];
      unsigned __int8 v98 = [v2 fileSystemFlags];
      id v99 = [v2 lastUsedDate];
      if (v99)
      {
        os_log_type_t v100 = v99;
        sub_10096B0A0();

        uint64_t v95 = 0;
      }
      v67((uint64_t)v77, v95, 1, v125);
      unsigned __int8 v101 = sub_100445850(v127);
      unsigned __int8 v102 = [v2 isContentZoneRoot];
      char v103 = [v2 isPackage];
      id v104 = [v2 collaborationIdentifier];
      if (v104)
      {
        id v105 = v104;
        uint64_t v106 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        unint64_t v108 = v107;
      }
      else
      {
        uint64_t v106 = 0;
        unint64_t v108 = 0;
      }
      char v130 = v115;
      char v129 = 1;
      ItemMetadata.init(kind:size:physicalSize:childItemCount:posixPermissions:creationDate:contentModificationDate:isLocked:isHidden:isPathExtensionHidden:lastUsedDate:tags:favoriteRank:extendedAttributes:quarantineBlob:closestSyncRoot:evictionUrgency:isSyncRoot:isIgnoreRoot:isDetachedRoot:isPinned:isInPinnedFolder:isDataless:isPackage:hasBundleBit:beforeBounceFilename:osType:linkCount:isResurrected:collaborationIdentifier:isSyncPaused:isSyncResumingWithDropLocalChanges:evictionReason:)(v127, v117, 0, 0, v119 | ((unint64_t)v115 << 32), v126, (uint64_t)v122, (uint64_t)v121, v118, (v96 & 0xE) == 0, (v97 & 8) != 0, (v98 & 0x10) != 0, (uint64_t)v123, v120, (uint64_t)v114, v112, (uint64_t)v116, 0, 0xF000000000000000,
        0,
        v101,
        v111[0] & v102,
        0,
        0,
        0,
        0,
        0,
        v103,
        2,
        0,
        0,
        (uint64_t)v113,
        v111[4],
        0x100000000uLL,
        0,
        v106,
        v108,
        0,
        0,
        0);
      return sub_10002B770((uint64_t)v124, (uint64_t *)&unk_100ACB5E0);
  }
}

id sub_100443770(uint64_t a1, void *a2, char a3)
{
  uint64_t v37 = a2;
  uint64_t v5 = sub_10002B7CC(&qword_100ACF708);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)a1;
  int v9 = *(unsigned __int8 *)(a1 + 8);
  NSFileProviderItemIdentifier v10 = sub_100442244(*(void *)a1, *(unsigned char *)(a1 + 8), a3);
  if (v9 == 2 && v8 == 0) {
    id v12 = NSFileProviderRootContainerItemIdentifier;
  }
  else {
    id v12 = 0;
  }
  uint64_t v13 = *(void *)(a1 + 16);
  int v14 = *(unsigned __int8 *)(a1 + 24);
  char v38 = v12;
  NSFileProviderItemIdentifier v15 = sub_100442244(v13, v14, a3 & 1);
  NSFileProviderItemIdentifier v16 = v10;
  if (v14 == 2 && v13 == 0) {
    uint64_t v18 = NSFileProviderRootContainerItemIdentifier;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v20 = *(void *)(a1 + 32);
  uint64_t v19 = *(void *)(a1 + 40);
  uint64_t v21 = (uint64_t)&v7[*(int *)(v5 + 40)];
  uint64_t v22 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28));
  sub_10010DA98((uint64_t)v22, v21);
  *(void *)uint64_t v7 = v15;
  *((void *)v7 + 1) = v20;
  *((void *)v7 + 2) = v19;
  uint64_t v23 = qword_100ACC100;
  uint64_t v36 = v15;
  uint64_t v24 = v18;
  swift_bridgeObjectRetain();
  if (v23 != -1) {
    swift_once();
  }
  NSFileProviderItemIdentifier v25 = v16;
  uint64_t v26 = v37;
  id v27 = sub_100448354(v16, v37, (id *)v7, qword_100B0B2E0, 0);
  sub_10002B770((uint64_t)v7, &qword_100ACF708);
  id v28 = v38;
  [v27 setFormerIdentifier:v38];

  [v27 setParentFormerIdentifier:v24];
  int v29 = *v22;
  [v27 isExcludedFromSync];
  int v30 = *((unsigned __int16 *)v22 + 5);
  unsigned int v31 = [v26 supportsSyncingTrash];
  if ((NSFileProviderItemCapabilitiesAllowsTagging & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v32 = NSFileProviderItemCapabilitiesAllowsTagging | 0x2CLL;
    if (v29 == 1)
    {
      id v33 = v36;
      if ((~v30 & 0x140) != 0)
      {
LABEL_24:
        if ((v30 & 0x80) == 0) {
          goto LABEL_26;
        }
        goto LABEL_25;
      }
    }
    else
    {
      id v33 = v36;
      if ((v30 & 0x100) == 0) {
        goto LABEL_24;
      }
    }
LABEL_23:
    v32 |= 1uLL;
    goto LABEL_24;
  }
  if (v29 == 1)
  {
    id v33 = v36;
    if ((~v30 & 0x140) == 0)
    {
LABEL_21:
      uint64_t v32 = 44;
      goto LABEL_23;
    }
  }
  else
  {
    id v33 = v36;
    if ((v30 & 0x100) != 0) {
      goto LABEL_21;
    }
  }
  uint64_t v32 = 44;
  if ((v30 & 0x80) == 0)
  {
    if ((v31 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_25:
  v32 |= 2uLL;
LABEL_26:
  if (v31) {
LABEL_27:
  }
    v32 |= 0x10uLL;
LABEL_28:
  [v27 setCapabilities:v32];

  return v27;
}

id sub_100443A5C(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = sub_10002B7CC(&qword_100ACF708);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  int v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSFileProviderItemIdentifier v10 = sub_100442244(*(void *)a1, *(unsigned char *)(a1 + 8), a3);
  NSFileProviderItemIdentifier v11 = sub_100442244(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24), a3);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = (uint64_t)&v9[*(int *)(v7 + 48)];
  NSFileProviderItemIdentifier v15 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28));
  sub_10010DA98((uint64_t)v15, v14);
  *(void *)int v9 = v11;
  *((void *)v9 + 1) = v12;
  *((void *)v9 + 2) = v13;
  uint64_t v16 = qword_100ACC100;
  uint64_t v17 = v11;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  id v18 = sub_100448354(v10, a2, (id *)v9, qword_100B0B2E0, 0);
  sub_10002B770((uint64_t)v9, &qword_100ACF708);
  [v18 setFormerIdentifier:0];
  [v18 setParentFormerIdentifier:0];
  int v19 = *v15;
  [v18 isExcludedFromSync];
  int v20 = *((unsigned __int16 *)v15 + 5);
  unsigned int v21 = [a2 supportsSyncingTrash];
  if ((NSFileProviderItemCapabilitiesAllowsTagging & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v22 = NSFileProviderItemCapabilitiesAllowsTagging | 0x2CLL;
    if (v19 == 1)
    {
      if ((~v20 & 0x140) != 0)
      {
LABEL_12:
        if ((v20 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v20 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v22 |= 1uLL;
    goto LABEL_12;
  }
  if (v19 == 1)
  {
    if ((~v20 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v22 = 44;
      goto LABEL_11;
    }
  }
  else if ((v20 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  uint64_t v22 = 44;
  if ((v20 & 0x80) == 0)
  {
    if ((v21 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v22 |= 2uLL;
LABEL_14:
  if (v21) {
LABEL_15:
  }
    v22 |= 0x10uLL;
LABEL_16:
  [v18 setCapabilities:v22];

  return v18;
}

id sub_100443CC0(uint64_t a1, void *a2, char a3)
{
  return sub_100443CD8(a1, a2, a3);
}

id sub_100443CD8(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = sub_10002B7CC(&qword_100ACF708);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  int v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSFileProviderItemIdentifier v10 = sub_100442244(*(void *)a1, *(unsigned char *)(a1 + 8), a3);
  NSFileProviderItemIdentifier v11 = sub_100442244(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24), a3);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 136);
  uint64_t v14 = (uint64_t)&v9[*(int *)(v7 + 48)];
  NSFileProviderItemIdentifier v15 = (unsigned __int8 *)(a1 + *(int *)(sub_10002B7CC(&qword_100ACCB10) + 48));
  sub_10010DA98((uint64_t)v15, v14);
  *(void *)int v9 = v11;
  *((void *)v9 + 1) = v12;
  *((void *)v9 + 2) = v13;
  uint64_t v16 = qword_100ACC100;
  uint64_t v17 = v11;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  id v18 = sub_100448354(v10, a2, (id *)v9, qword_100B0B2E0, 0);
  sub_10002B770((uint64_t)v9, &qword_100ACF708);
  [v18 setFormerIdentifier:0];
  [v18 setParentFormerIdentifier:0];
  int v19 = *v15;
  [v18 isExcludedFromSync];
  int v20 = *((unsigned __int16 *)v15 + 5);
  unsigned int v21 = [a2 supportsSyncingTrash];
  if ((NSFileProviderItemCapabilitiesAllowsTagging & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v22 = NSFileProviderItemCapabilitiesAllowsTagging | 0x2CLL;
    if (v19 == 1)
    {
      if ((~v20 & 0x140) != 0)
      {
LABEL_12:
        if ((v20 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v20 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v22 |= 1uLL;
    goto LABEL_12;
  }
  if (v19 == 1)
  {
    if ((~v20 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v22 = 44;
      goto LABEL_11;
    }
  }
  else if ((v20 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  uint64_t v22 = 44;
  if ((v20 & 0x80) == 0)
  {
    if ((v21 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v22 |= 2uLL;
LABEL_14:
  if (v21) {
LABEL_15:
  }
    v22 |= 0x10uLL;
LABEL_16:
  [v18 setCapabilities:v22];

  return v18;
}

id sub_100443F40(uint64_t a1, void *a2, char a3)
{
  return sub_100443F58(a1, a2, a3);
}

id sub_100443F58(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = sub_10002B7CC(&qword_100ACF708);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  int v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(id *)a1;
  NSFileProviderItemIdentifier v11 = sub_100449034(v10, a3);

  id v12 = *(id *)(a1 + 8);
  NSFileProviderItemIdentifier v13 = sub_100449034(v12, a3);

  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v16 = (uint64_t)&v9[*(int *)(v7 + 48)];
  uint64_t v17 = (unsigned __int8 *)(a1 + *(int *)(sub_10002B7CC((uint64_t *)&unk_100AD0CC0) + 48));
  sub_10010DA98((uint64_t)v17, v16);
  *(void *)int v9 = v13;
  *((void *)v9 + 1) = v14;
  *((void *)v9 + 2) = v15;
  uint64_t v18 = qword_100ACC100;
  int v19 = v13;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  id v20 = sub_100448354(v11, a2, (id *)v9, qword_100B0B2E0, 0);
  sub_10002B770((uint64_t)v9, &qword_100ACF708);
  [v20 setFormerIdentifier:0];
  [v20 setParentFormerIdentifier:0];
  int v21 = *v17;
  [v20 isExcludedFromSync];
  int v22 = *((unsigned __int16 *)v17 + 5);
  unsigned int v23 = [a2 supportsSyncingTrash];
  if ((NSFileProviderItemCapabilitiesAllowsTagging & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v24 = NSFileProviderItemCapabilitiesAllowsTagging | 0x2CLL;
    if (v21 == 1)
    {
      if ((~v22 & 0x140) != 0)
      {
LABEL_12:
        if ((v22 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v22 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v24 |= 1uLL;
    goto LABEL_12;
  }
  if (v21 == 1)
  {
    if ((~v22 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v24 = 44;
      goto LABEL_11;
    }
  }
  else if ((v22 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  uint64_t v24 = 44;
  if ((v22 & 0x80) == 0)
  {
    if ((v23 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v24 |= 2uLL;
LABEL_14:
  if (v23) {
LABEL_15:
  }
    v24 |= 0x10uLL;
LABEL_16:
  [v20 setCapabilities:v24];

  return v20;
}

id sub_1004441D0(uint64_t a1, void *a2, char a3)
{
  return sub_1004441E8(a1, a2, a3);
}

id sub_1004441E8(uint64_t a1, void *a2, char a3)
{
  id v33 = a2;
  uint64_t v5 = sub_10002B7CC(&qword_100ACF708);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(id *)a1;
  NSFileProviderItemIdentifier v32 = sub_100449034(v9, a3);

  id v10 = *(void **)(a1 + 8);
  id v11 = v9;
  id v12 = v10;
  NSFileProviderItemIdentifier v13 = sub_100449034(v12, a3);

  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v16 = (uint64_t)&v8[*(int *)(v6 + 48)];
  uint64_t v17 = (unsigned __int8 *)(a1 + *(int *)(sub_10002B7CC((uint64_t *)&unk_100AD0CC0) + 48));
  sub_10010DA98((uint64_t)v17, v16);
  *(void *)uint64_t v8 = v13;
  *((void *)v8 + 1) = v15;
  *((void *)v8 + 2) = v14;
  uint64_t v18 = qword_100ACC100;
  id v19 = v12;
  unsigned int v31 = v13;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  NSFileProviderItemIdentifier v20 = v32;
  int v21 = v33;
  id v22 = sub_100448354(v32, v33, (id *)v8, qword_100B0B2E0, 0);
  sub_10002B770((uint64_t)v8, &qword_100ACF708);
  [v22 setFormerIdentifier:v11];

  [v22 setParentFormerIdentifier:v19];
  int v23 = *v17;
  [v22 isExcludedFromSync];
  int v24 = *((unsigned __int16 *)v17 + 5);
  unsigned int v25 = [v21 supportsSyncingTrash];
  NSFileProviderItemIdentifier v26 = v20;
  if ((NSFileProviderItemCapabilitiesAllowsTagging & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v27 = NSFileProviderItemCapabilitiesAllowsTagging | 0x2CLL;
    if (v23 == 1)
    {
      id v28 = v31;
      if ((~v24 & 0x140) != 0)
      {
LABEL_12:
        if ((v24 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else
    {
      id v28 = v31;
      if ((v24 & 0x100) == 0) {
        goto LABEL_12;
      }
    }
LABEL_11:
    v27 |= 1uLL;
    goto LABEL_12;
  }
  if (v23 == 1)
  {
    id v28 = v31;
    if ((~v24 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v27 = 44;
      goto LABEL_11;
    }
  }
  else
  {
    id v28 = v31;
    if ((v24 & 0x100) != 0) {
      goto LABEL_9;
    }
  }
  uint64_t v27 = 44;
  if ((v24 & 0x80) == 0)
  {
    if ((v25 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v27 |= 2uLL;
LABEL_14:
  if (v25) {
LABEL_15:
  }
    v27 |= 0x10uLL;
LABEL_16:
  [v22 setCapabilities:v27];

  return v22;
}

id sub_100444498(void *a1, void *a2, char a3)
{
  unsigned __int8 v46 = a2;
  uint64_t v5 = type metadata accessor for ItemMetadata();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v9 = (unsigned __int8 *)&v37 - v8;
  uint64_t v10 = sub_10002B7CC(&qword_100ACF708);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  NSFileProviderItemIdentifier v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [a1 itemID];
  id v15 = [v14 identifier];

  NSFileProviderItemIdentifier v38 = sub_100449034(v15, a3);
  id v16 = [a1 itemID];

  NSFileProviderItemIdentifier v17 = FPItem.parentID.getter();
  NSFileProviderItemIdentifier v18 = sub_100449034(v17, a3);

  id v19 = v18;
  id v20 = [a1 filename];
  uint64_t v21 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v23 = v22;

  uint64_t v44 = v21;
  uint64_t v45 = v23;
  uint64_t v42 = 58;
  unint64_t v43 = 0xE100000000000000;
  uint64_t v40 = 47;
  unint64_t v41 = 0xE100000000000000;
  sub_10001F9C0();
  uint64_t v24 = sub_10096C910();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  FPItem.metadata.getter((uint64_t)&v13[*(int *)(v11 + 48)]);
  uint64_t v37 = v19;
  *(void *)NSFileProviderItemIdentifier v13 = v19;
  *((void *)v13 + 1) = v24;
  *((void *)v13 + 2) = v26;
  if (qword_100ACC100 != -1) {
    swift_once();
  }
  NSFileProviderItemIdentifier v27 = v38;
  id v28 = v46;
  id v29 = sub_100448354(v38, v46, (id *)v13, qword_100B0B2E0, 0);
  sub_10002B770((uint64_t)v13, &qword_100ACF708);
  [v29 setFormerIdentifier:0];
  [v29 setParentFormerIdentifier:0];
  FPItem.metadata.getter((uint64_t)v9);
  int v30 = *v9;
  sub_10010DAFC((uint64_t)v9);
  [v29 isExcludedFromSync];
  uint64_t v31 = v39;
  FPItem.metadata.getter(v39);
  int v32 = *(unsigned __int16 *)(v31 + 10);
  sub_10010DAFC(v31);
  unsigned int v33 = [v28 supportsSyncingTrash];
  if ((NSFileProviderItemCapabilitiesAllowsTagging & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v34 = NSFileProviderItemCapabilitiesAllowsTagging | 0x2CLL;
    if (v30 == 1)
    {
      uint64_t v35 = v37;
      if ((~v32 & 0x140) != 0)
      {
LABEL_12:
        if ((v32 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v35 = v37;
      if ((v32 & 0x100) == 0) {
        goto LABEL_12;
      }
    }
LABEL_11:
    v34 |= 1uLL;
    goto LABEL_12;
  }
  if (v30 == 1)
  {
    uint64_t v35 = v37;
    if ((~v32 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v34 = 44;
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v35 = v37;
    if ((v32 & 0x100) != 0) {
      goto LABEL_9;
    }
  }
  uint64_t v34 = 44;
  if ((v32 & 0x80) == 0)
  {
    if ((v33 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v34 |= 2uLL;
LABEL_14:
  if (v33) {
LABEL_15:
  }
    v34 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v29, "setCapabilities:", v34, v37);

  return v29;
}

uint64_t FPItem.nonSyncableAttributes.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = sub_10002B7CC(&qword_100ACB908);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v108 - v8;
  id v10 = [v2 ownerNameComponents];
  uint64_t v129 = a1;
  if (v10)
  {
    uint64_t v11 = v10;
    sub_10096AB40();

    uint64_t v12 = sub_10096AB50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = sub_10096AB50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
  }
  id v130 = v2;
  id v14 = [v2 preformattedOwnerName];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v19 = sub_100445370(v16, v18);
  uint64_t v127 = v20;
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v9, &qword_100ACB908);
  id v21 = v130;
  id v22 = [v130 mostRecentEditorNameComponents];
  uint64_t v128 = v19;
  if (v22)
  {
    uint64_t v23 = v22;
    sub_10096AB40();

    uint64_t v24 = sub_10096AB50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 0, 1, v24);
  }
  else
  {
    uint64_t v25 = sub_10096AB50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 1, 1, v25);
  }
  id v26 = [v21 preformattedMostRecentEditorName];
  if (v26)
  {
    NSFileProviderItemIdentifier v27 = v26;
    uint64_t v28 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v30 = v29;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v30 = 0;
  }
  uint64_t v31 = sub_100445370(v28, v30);
  uint64_t v125 = v32;
  uint64_t v126 = v31;
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v7, &qword_100ACB908);
  unsigned int v33 = [v21 decorations];
  if (v33)
  {
    type metadata accessor for NSFileProviderItemDecorationIdentifier(0);
    uint64_t v34 = sub_10096C0A0();

    int64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      uint64_t v137 = _swiftEmptyArrayStorage;
      sub_100021770(0, v35, 0);
      uint64_t v36 = 0;
      unsigned int v33 = v137;
      do
      {
        uint64_t v37 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v39 = v38;
        uint64_t v137 = v33;
        unint64_t v41 = v33[2];
        unint64_t v40 = v33[3];
        if (v41 >= v40 >> 1)
        {
          sub_100021770((char *)(v40 > 1), v41 + 1, 1);
          unsigned int v33 = v137;
        }
        ++v36;
        void v33[2] = v41 + 1;
        uint64_t v42 = &v33[2 * v41];
        v42[4] = v37;
        v42[5] = v39;
      }
      while (v35 != v36);
      swift_bridgeObjectRelease();
      id v21 = v130;
    }
    else
    {
      swift_bridgeObjectRelease();
      unsigned int v33 = 0;
    }
  }
  int v124 = v33;
  id v43 = [v21 userInfo];
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = sub_10096B9C0();

    if (*(void *)(v45 + 16))
    {
      id v46 = objc_allocWithZone((Class)FPUserInfo);
      Class isa = sub_10096B9A0().super.isa;
      swift_bridgeObjectRelease();
      id v48 = [v46 initWithUserInfo:isa];

      id v49 = [v48 keys];
      uint64_t v123 = sub_10096C0A0();

      id v50 = [v48 values];
      uint64_t v122 = sub_10096C0A0();

      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v122 = 0;
  uint64_t v123 = 0;
LABEL_26:
  id v51 = [v21 conflictingVersions];
  if (!v51)
  {
    id v114 = 0;
    goto LABEL_44;
  }
  id v52 = v51;
  sub_100011348(0, &qword_100ACBC40);
  unint64_t v53 = sub_10096C0A0();

  if (v53 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_10096CE70();
    swift_bridgeObjectRelease();
    if (v54) {
      goto LABEL_29;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    id v114 = _swiftEmptyArrayStorage;
    goto LABEL_44;
  }
  uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v54) {
    goto LABEL_43;
  }
LABEL_29:
  uint64_t v137 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100445EE4(0, v54 & ~(v54 >> 63), 0);
  if (v54 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v56 = 0;
  uint64_t v57 = v137;
  unint64_t v131 = v53 & 0xC000000000000001;
  uint64_t v132 = v54;
  uint64_t v133 = (void *)v53;
  do
  {
    unsigned int v58 = v57;
    if (v131) {
      id v59 = (id)sub_10096CC30();
    }
    else {
      id v59 = *(id *)(v53 + 8 * v56 + 32);
    }
    uint64_t v60 = v59;
    id v61 = [v59 contentVersion];
    id v134 = (id)sub_10096AF60();
    uint64_t v63 = v62;

    id v64 = [v60 metadataVersion];
    uint64_t v65 = sub_10096AF60();
    uint64_t v67 = v66;

    id v68 = [v60 lastEditorDeviceName];
    if (v68)
    {
      double v69 = v68;
      uint64_t v70 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v72 = v71;
    }
    else
    {

      uint64_t v70 = 0;
      uint64_t v72 = 0;
    }
    uint64_t v57 = v58;
    uint64_t v137 = v58;
    unint64_t v73 = v58[2];
    unint64_t v74 = v57[3];
    if (v73 >= v74 >> 1)
    {
      sub_100445EE4(v74 > 1, v73 + 1, 1);
      uint64_t v57 = v137;
    }
    ++v56;
    v57[2] = v73 + 1;
    uint64_t v75 = &v57[8 * v73];
    v75[4] = v134;
    v75[5] = v63;
    v75[6] = 0;
    v75[7] = v65;
    v75[8] = v67;
    v75[9] = 0;
    v75[10] = v70;
    v75[11] = v72;
    unint64_t v53 = (unint64_t)v133;
  }
  while (v132 != v56);
  id v114 = v57;
  swift_bridgeObjectRelease();
  id v21 = v130;
LABEL_44:
  id v134 = [v21 collaborationIdentifier];
  uint64_t v133 = [v21 capabilities];
  LODWORD(v132) = [v21 isUploading];
  LODWORD(v131) = [v21 isUploaded];
  id v130 = [v21 uploadingError];
  id v121 = [v21 downloadingError];
  unsigned int v120 = [v21 isShared];
  unsigned int v119 = [v21 isTopLevelSharedItem];
  unsigned int v118 = [v21 isSharedByCurrentUser];
  unsigned int v117 = objc_msgSend(v21, "fp_isLastModifiedByCurrentUser");
  id v76 = [v21 sharingPermissions];
  if (v76)
  {
    uint64_t v77 = v76;
    uint64_t v78 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v112 = v79;
    uint64_t v113 = v78;
  }
  else
  {
    uint64_t v112 = 0;
    uint64_t v113 = 0;
  }
  unsigned int v116 = [v21 isContainer];
  unsigned int v115 = [v21 isContainerPristine];
  id v80 = objc_msgSend(v21, "fp_appContainerBundleIdentifier");
  if (v80)
  {
    uint64_t v81 = v80;
    uint64_t v82 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v110 = v83;
    uint64_t v111 = v82;
  }
  else
  {
    uint64_t v110 = 0;
    uint64_t v111 = 0;
  }
  id v84 = [v21 cloudContainerIdentifier];
  if (v84)
  {
    int v85 = v84;
    uint64_t v109 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v87 = v86;
  }
  else
  {
    uint64_t v109 = 0;
    uint64_t v87 = 0;
  }
  id v88 = [v21 containerDisplayName];
  if (v88)
  {
    id v89 = v88;
    uint64_t v90 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v92 = v91;
  }
  else
  {
    uint64_t v90 = 0;
    uint64_t v92 = 0;
  }
  id v93 = objc_msgSend(v21, "fp_displayName");
  if (v93)
  {
    uint64_t v94 = v93;
    uint64_t v95 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v97 = v96;

    uint64_t v137 = (void *)v95;
    uint64_t v138 = v97;
    v171[0] = 58;
    v171[1] = 0xE100000000000000;
    uint64_t v135 = 47;
    unint64_t v136 = 0xE100000000000000;
    sub_10001F9C0();
    uint64_t v98 = sub_10096C910();
    uint64_t v100 = v99;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v98 = 0;
    uint64_t v100 = 0;
  }
  id v101 = [v21 hasUnresolvedConflicts];
  if (v101)
  {
    unsigned __int8 v102 = v101;
    unsigned __int8 v103 = [v101 BOOLValue];
  }
  else
  {
    unsigned __int8 v103 = 0;
  }
  id v104 = [v21 contentPolicy];
  FPItem.version.getter(v171);
  uint64_t v106 = v171[6];
  uint64_t v105 = v171[7];
  swift_bridgeObjectRetain();
  sub_1000789EC(v171);
  uint64_t v137 = v133;
  LOBYTE(v138) = v132;
  BYTE1(v138) = v131;
  id v139 = v130;
  id v140 = v121;
  char v141 = v120;
  char v142 = v119;
  char v143 = v118;
  uint64_t v144 = v128;
  uint64_t v145 = v127;
  uint64_t v146 = v126;
  uint64_t v147 = v125;
  char v148 = v117;
  uint64_t v149 = v113;
  uint64_t v150 = v112;
  id v151 = v134;
  char v152 = v116;
  char v153 = v115;
  uint64_t v154 = v111;
  uint64_t v155 = v110;
  uint64_t v156 = v109;
  uint64_t v157 = v87;
  uint64_t v158 = v90;
  uint64_t v159 = v92;
  uint64_t v160 = v98;
  uint64_t v161 = v100;
  unsigned __int8 v162 = v103;
  BOOL v163 = v124;
  uint64_t v164 = v123;
  uint64_t v165 = v122;
  id v166 = v104;
  uint64_t v167 = 0;
  uint64_t v168 = v114;
  uint64_t v169 = v106;
  uint64_t v170 = v105;
  v107._countAndFlagsBits = (uint64_t)&v137;
  Filename.init(rawValue:)(v107);
  return sub_10001AE98((uint64_t)&v137, v129, &qword_100AD0EA0);
}

uint64_t sub_100445370(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10002B7CC(&qword_100ACB908);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10096AB50();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_10002B70C(v2, (uint64_t)v7, &qword_100ACB908);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10002B770((uint64_t)v7, &qword_100ACB908);
      a1 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      if (qword_100ACC098 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_100B0B160;
      Class v13 = sub_10096AB30();
      id v14 = [v12 stringFromPersonNameComponents:v13];

      a1 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_100445594()
{
  if (qword_100ACC098 != -1) {
    swift_once();
  }
  return &qword_100B0B160;
}

void *FPItem.unknownChildItemCount.unsafeMutableAddressor()
{
  return &static FPItem.unknownChildItemCount;
}

uint64_t static FPItem.unknownChildItemCount.getter()
{
  return 65533;
}

id sub_1004455F4()
{
  id result = [objc_allocWithZone((Class)NSPersonNameComponentsFormatter) init];
  qword_100B0B160 = (uint64_t)result;
  return result;
}

void FPItem.name.setter()
{
  id v1 = sub_10096BC00();
  swift_bridgeObjectRelease();
  [v0 setFilename:v1];
}

void (*FPItem.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  id v4 = [v1 filename];
  uint64_t v5 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v7 = v6;

  v3[2] = v5;
  v3[3] = v7;
  v3[4] = 58;
  v3[5] = 0xE100000000000000;
  v3[6] = 47;
  v3[7] = 0xE100000000000000;
  sub_10001F9C0();
  uint64_t v8 = sub_10096C910();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *uint64_t v3 = v8;
  v3[1] = v10;
  return sub_100445794;
}

void sub_100445794(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  if (a2)
  {
    swift_bridgeObjectRetain();
    NSString v4 = sub_10096BC00();
    swift_bridgeObjectRelease();
    [v3 setFilename:v4];

    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = sub_10096BC00();
    swift_bridgeObjectRelease();
    [v3 setFilename:v5];
  }

  free(v2);
}

uint64_t sub_100445850(unsigned __int8 a1)
{
  if (a1 - 1 < 2) {
    return 0;
  }
  uint64_t result = (uint64_t)[v1 isUploaded];
  if (!result) {
    return result;
  }
  if (([v1 isExcludedFromSync] & 1) != 0
    || ([v1 capabilities] & 0x40) == 0)
  {
    return 0;
  }
  FPItem.nonSyncableAttributes.getter((uint64_t)v5);
  sub_10001AE98((uint64_t)v5, (uint64_t)v6, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v6) != 1)
  {
    uint64_t v3 = v7;
    sub_1000DBD88((uint64_t)v5);
    if (v3 != 500) {
      goto LABEL_10;
    }
    return 0;
  }
  uint64_t v3 = 0;
LABEL_10:
  if (v3 == 1002 || v3 == 3) {
    return 5;
  }
  else {
    return 4;
  }
}

uint64_t FPItem.unsupportedFields.getter()
{
  int v1 = [v0 unsupportedFields];

  return sub_1006B63DC(v1);
}

void sub_100445954(void *a1@<X8>)
{
  id v3 = [*v1 itemID];
  id v4 = [v3 identifier];

  *a1 = v4;
}

NSFileProviderItemIdentifier sub_1004459B8@<X0>(NSFileProviderItemIdentifier *a1@<X8>)
{
  NSFileProviderItemIdentifier result = FPItem.parentID.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1004459E4()
{
  id v1 = [*v0 filename];
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  sub_10001F9C0();
  uint64_t v2 = sub_10096C910();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_100445AA4()
{
  id v1 = *v0;
  id v2 = sub_10096BC00();
  swift_bridgeObjectRelease();
  [v1 setFilename:v2];
}

void (*sub_100445B08(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = FPItem.name.modify(v2);
  return sub_100445B64;
}

void sub_100445B64(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_100445BAC@<X0>(uint64_t a1@<X8>)
{
  return FPItem.metadata.getter(a1);
}

double sub_100445BD0@<D0>(_OWORD *a1@<X8>)
{
  FPItem.version.getter((uint64_t *)v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t sub_100445C14@<X0>(uint64_t a1@<X8>)
{
  FPItem.nonSyncableAttributes.getter((uint64_t)v3);
  return sub_10001AE98((uint64_t)v3, a1, &qword_100AD0EA0);
}

uint64_t sub_100445C64()
{
  int v1 = [*v0 unsupportedFields];

  return sub_1006B63DC(v1);
}

NSFileProviderItemIdentifier sub_100445C98(Swift::UInt64 a1, char a2, uint64_t a3, uint64_t a4)
{
  void (*v17)(uint64_t *__return_ptr, Swift::UInt64 *);
  Swift::UInt64 v18;
  char v19;
  uint64_t v20;

  if (a2 == 2 && a1 == 0)
  {
    uint64_t v10 = &NSFileProviderRootContainerItemIdentifier;
    goto LABEL_9;
  }
  if (a2 == 2 && a1 == 1)
  {
    uint64_t v10 = &NSFileProviderTrashContainerItemIdentifier;
LABEL_9:
    NSFileProviderItemIdentifier v11 = *v10;
LABEL_10:
    uint64_t v12 = v11;
    return v11;
  }
  if (*(void *)(a3 + 16))
  {
    unint64_t v14 = sub_10031F858(a1, a2);
    if (v15)
    {
      NSFileProviderItemIdentifier v11 = *(NSFileProviderItemIdentifier *)(*(void *)(a3 + 56) + 8 * v14);
      goto LABEL_10;
    }
  }
  uint64_t v16 = *(void *)(*(void *)(a4 + 16) + 16);
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v17 = *(void (**)(uint64_t *__return_ptr, Swift::UInt64 *))(*(void *)v16 + 160);
  swift_retain();
  v17(&v20, &v18);
  if (v4)
  {
    swift_errorRelease();
    swift_release();
    return 0;
  }
  else
  {
    swift_release();
    return (NSFileProviderItemIdentifier)v20;
  }
}

void sub_100445DC4(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  long long v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_10096C8C0();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_100445E7C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100445EA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446358(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100445EC4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1004464D4(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100445EE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446640(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_100445F04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446F00(a1, a2, a3, *v3, &qword_100AD5738);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100445F2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446F00(a1, a2, a3, *v3, &qword_100AD57F0);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100445F54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446F00(a1, a2, a3, *v3, &qword_100AD5710);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100445F7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446F00(a1, a2, a3, *v3, &qword_100AD5730);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100445FA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446F00(a1, a2, a3, *v3, &qword_100AD4F10);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100445FCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446F00(a1, a2, a3, *v3, &qword_100AD5758);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100445FF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447358(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100AD0C80, (uint64_t *)&unk_100AD62C0);
  *id v3 = result;
  return result;
}

uint64_t sub_100446024(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447684(a1, a2, a3, (void *)*v3, &qword_100AD57B0, &qword_100ACCB10);
  *id v3 = result;
  return result;
}

uint64_t sub_100446054(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446F00(a1, a2, a3, *v3, qword_100ACE270);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_10044607C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447684(a1, a2, a3, (void *)*v3, &qword_100AD0D48, (uint64_t *)&unk_100AD0D50);
  *id v3 = result;
  return result;
}

uint64_t sub_1004460AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446A0C(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1004460CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446BB0(a1, a2, a3, (void *)*v3, &qword_100AD5778, (uint64_t *)&unk_100ADBFE0);
  *id v3 = result;
  return result;
}

uint64_t sub_1004460FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446BB0(a1, a2, a3, (void *)*v3, &qword_100AD5780, &qword_100AD5788);
  *id v3 = result;
  return result;
}

uint64_t sub_10044612C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446D5C(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_10044614C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447358(a1, a2, a3, (void *)*v3, &qword_100AD5720, &qword_100AD5728);
  *id v3 = result;
  return result;
}

uint64_t sub_10044617C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446F00(a1, a2, a3, *v3, &qword_100AD5740);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1004461A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10044704C(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1004461C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1004471AC(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1004461E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447358(a1, a2, a3, (void *)*v3, &qword_100AD6E50, (uint64_t *)&unk_100AD0DC0);
  *id v3 = result;
  return result;
}

uint64_t sub_100446214(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447C14(a1, a2, a3, *v3, &qword_100AD5718);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_10044623C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1004474E4(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_10044625C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447684(a1, a2, a3, (void *)*v3, &qword_100AD7610, &qword_100AD65C0);
  *id v3 = result;
  return result;
}

uint64_t sub_10044628C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1004478C4(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1004462AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447C14(a1, a2, a3, *v3, &qword_100ACB7C8);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1004462D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100446F00(a1, a2, a3, *v3, &qword_100AD57A8);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1004462FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447D70(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_10044631C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100447F00(a1, a2, a3, (void *)*v3, &qword_100AD5760, type metadata accessor for NSFileProviderItemDecorationIdentifier);
  *id v3 = result;
  return result;
}

uint64_t sub_100446358(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD57E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  Class v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1004464D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD57E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  Class v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100446640(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100ACB808);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  Class v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_10002B7CC((uint64_t *)&unk_100ACB960);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1004467CC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    Class v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10002B7CC((uint64_t *)&unk_100ACA8D0);
  uint64_t v10 = *(void *)(sub_10096AE50() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  Class v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10096AE50() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  id v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100446A0C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD5768);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 80 * v8) {
      memmove(v10 + 4, a4 + 4, 80 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 80 * v8 || v12 >= v13 + 80 * v8)
  {
    sub_10002B7CC(&qword_100AD5770);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100446BB0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_10002B7CC(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 96);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 96 * v11) {
      memmove(v13 + 4, a4 + 4, 96 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 96 * v11 || v15 >= v16 + 96 * v11)
  {
    sub_10002B7CC(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100446D5C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD5790);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 80 * v8) {
      memmove(v10 + 4, a4 + 4, 80 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 80 * v8 || v12 >= v13 + 80 * v8)
  {
    sub_10002B7CC(&qword_100AD5798);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100446F00(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    sub_10002B7CC(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_10044704C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD5748);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1004471AC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD5750);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    sub_10002B7CC((uint64_t *)&unk_100AD7490);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100447358(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_10002B7CC(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = v13 + 4;
  unint64_t v17 = a4 + 4;
  size_t v18 = 2 * v11;
  if (a1)
  {
    if (v13 != a4 || v16 >= &v17[v18]) {
      memmove(v13 + 4, a4 + 4, v18 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= &v16[v18] || v16 >= &v17[v18])
  {
    sub_10002B7CC(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1004474E4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD57D0);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_10002B7CC(&qword_100AD57D8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100447670(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100447684(a1, a2, a3, a4, &qword_100AD7610, &qword_100AD65C0);
}

uint64_t sub_100447684(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10002B7CC(a5);
  uint64_t v13 = *(void *)(sub_10002B7CC(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10002B7CC(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  id v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1004478C4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD57B8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_10002B7CC(&qword_100AD57C0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100447A6C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD57C8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_10002B7CC((uint64_t *)&unk_100AD6500);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100447C14(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10002B7CC(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100447D70(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002B7CC(&qword_100AD57A0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 < a4 || v13 >= v14 + 8 * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_34:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100447F00(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_10002B7CC(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_100448094(uint64_t a1, char a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100ACF708);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  int64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  int64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(int *)(v8 + 48);
  uint64_t v12 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ItemMetadata() + 56) + v11);
  uint64_t v13 = v12[1];
  if (!v13)
  {
    uint64_t v14 = 0;
    if (a2) {
      goto LABEL_5;
    }
LABEL_9:
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_10002B70C(a1, (uint64_t)v7, &qword_100ACF708);
    }
    else
    {
      sub_10002B70C(a1, (uint64_t)v7, &qword_100ACF708);
      uint64_t v14 = *((void *)v7 + 1);
      swift_bridgeObjectRetain();
    }
    int64_t v10 = v7;
    goto LABEL_15;
  }
  uint64_t v14 = *v12;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_10096BD60();
  swift_bridgeObjectRelease();
  if (v15 <= 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
    uint64_t v13 = 0;
  }
  if ((a2 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_5:
  if (v13)
  {
    uint64_t v24 = v14;
    uint64_t v25 = v13;
    uint64_t v22 = 47;
    unint64_t v23 = 0xE100000000000000;
    uint64_t v20 = 58;
    unint64_t v21 = 0xE100000000000000;
    sub_10001F9C0();
    uint64_t v14 = sub_10096C910();
    uint64_t v17 = v16;
    sub_10002B70C(a1, (uint64_t)v10, &qword_100ACF708);
    if (v17) {
      goto LABEL_15;
    }
  }
  else
  {
    sub_10002B70C(a1, (uint64_t)v10, &qword_100ACF708);
  }
  uint64_t v18 = *((void *)v10 + 2);
  uint64_t v24 = *((void *)v10 + 1);
  uint64_t v25 = v18;
  uint64_t v22 = 47;
  unint64_t v23 = 0xE100000000000000;
  uint64_t v20 = 58;
  unint64_t v21 = 0xE100000000000000;
  sub_10001F9C0();
  uint64_t v14 = sub_10096C910();
LABEL_15:
  sub_10002B770((uint64_t)v10, &qword_100ACF708);
  if (sub_10096BD60() <= 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = 0x6E776F6E6B6E7528;
  }
  swift_bridgeObjectRelease();
  return v14;
}

id sub_100448354(void *a1, void *a2, id *a3, uint64_t a4, char a5)
{
  id v88 = a1;
  uint64_t v9 = sub_10002B7CC(&qword_100ACF708);
  __chkstk_darwin(v9);
  uint64_t v92 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v11 - 8);
  uint64_t v90 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10096B370();
  uint64_t v93 = *(void *)(v13 - 8);
  uint64_t v94 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100448094((uint64_t)a3, a5);
  uint64_t v18 = v17;
  uint64_t v87 = v9;
  uint64_t v19 = (char *)a3 + *(int *)(v9 + 40);
  swift_bridgeObjectRetain();
  uint64_t v95 = v15;
  ItemMetadata.contentType(for:)(v16, v18, (uint64_t)v15);
  swift_bridgeObjectRelease();
  uint64_t v91 = a3;
  uint64_t v20 = qword_100ACC110;
  id v21 = *a3;
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v24 = v23;
  uint64_t v25 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v89 = a4;
  if (v22 == v25 && v24 == v26)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v27 = sub_10096D2D0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
LABEL_15:
      uint64_t v28 = v19;
      goto LABEL_16;
    }
  }
  if (qword_100ACC048 != -1) {
    swift_once();
  }
  if ((v16 != qword_100B0B118 || v18 != unk_100B0B120) && (sub_10096D2D0() & 1) == 0) {
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  if (qword_100ACC040 != -1) {
    swift_once();
  }
  uint64_t v28 = v19;
  swift_bridgeObjectRetain();
LABEL_16:
  id v29 = [a2 providerDomainID];
  uint64_t v30 = a2;
  id v31 = objc_allocWithZone((Class)FPItem);
  id v32 = v21;
  id v33 = v88;
  NSString v34 = sub_10096BC00();
  swift_bridgeObjectRelease();
  Class isa = sub_10096B2C0().super.isa;
  id v36 = [v31 initWithProviderDomainID:v29 itemIdentifier:v33 parentItemIdentifier:v32 filename:v34 contentType:isa];

  id v37 = [v30 nsDomain];
  NSString v38 = [v37 spotlightDomainIdentifier];

  if (!v38)
  {
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    NSString v38 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }
  [v36 setSpotlightDomainIdentifier:v38];

  uint64_t v39 = qword_100ACC118;
  id v40 = v32;
  unint64_t v41 = v28;
  if (v39 != -1) {
    swift_once();
  }
  uint64_t v42 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v44 = v43;
  uint64_t v45 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v47 = v89;
  if (v42 == v45 && v44 == v46)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v48 = sub_10096D2D0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0) {
      goto LABEL_29;
    }
  }
  uint64_t v49 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v51 = v50;
  if (v49 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v53 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v53 & 1) == 0) {
      [v36 setTrashed:1];
    }
  }
LABEL_29:
  uint64_t v54 = type metadata accessor for ItemMetadata();
  uint64_t v55 = (uint64_t)v91;
  if (*(void *)&v41[*(int *)(v54 + 56) + 8])
  {
    id v56 = v91[2];
    id v100 = v91[1];
    id v101 = v56;
    uint64_t v98 = 47;
    unint64_t v99 = 0xE100000000000000;
    uint64_t v96 = 58;
    unint64_t v97 = 0xE100000000000000;
    sub_10001F9C0();
    sub_10096C910();
    NSString v57 = sub_10096BC00();
    swift_bridgeObjectRelease();
    [v36 setFileSystemFilename:v57];
  }
  uint64_t v58 = (uint64_t)v92;
  uint64_t v59 = (uint64_t)v90;
  if ((v47 & 0x400000000000) != 0)
  {
    uint64_t v60 = type metadata accessor for ItemMetadata();
    LODWORD(v61) = 0;
    unint64_t v62 = 0;
    uint64_t v63 = (uint64_t *)&v41[*(int *)(v60 + 136)];
    if ((v63[1] & 1) == 0)
    {
      uint64_t v61 = *v63;
      unint64_t v62 = *v63 & 0xFFFFFFFF00000000;
    }
    [v36 setTypeAndCreator:v62 | v61];
    if ((v47 & 2) != 0)
    {
      if ((v47 & 1) == 0)
      {
LABEL_54:
        if ((v47 & 0x20) != 0) {
          goto LABEL_62;
        }
        goto LABEL_55;
      }
    }
    else if ((v47 & 1) == 0)
    {
      if ((v47 & 0x20) == 0)
      {
        if ((v47 & 0x40) == 0)
        {
          if ((v47 & 0x80) == 0)
          {
            if ((v47 & 0x400) == 0)
            {
              if ((v47 & 0x800) == 0)
              {
                if ((v47 & 0x3004) != 0) {
                  goto LABEL_75;
                }
                if ((v47 & 0x100) != 0) {
                  goto LABEL_100;
                }
                goto LABEL_128;
              }
              goto LABEL_73;
            }
            goto LABEL_72;
          }
          goto LABEL_69;
        }
        goto LABEL_65;
      }
      goto LABEL_62;
    }
LABEL_61:
    if ((v47 & 0x20) != 0)
    {
LABEL_62:
      uint64_t v64 = type metadata accessor for ItemMetadata();
      sub_10002B70C((uint64_t)&v41[*(int *)(v64 + 116)], v59, (uint64_t *)&unk_100ACB5E0);
      uint64_t v65 = sub_10096B0E0();
      uint64_t v66 = *(void *)(v65 - 8);
      Class v67 = 0;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v59, 1, v65) != 1)
      {
        Class v67 = sub_10096B030().super.isa;
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v59, v65);
      }
      [v36 setLastUsedDate:v67];

      if ((v47 & 0x40) != 0) {
        goto LABEL_65;
      }
LABEL_56:
      if ((v47 & 0x80) != 0) {
        goto LABEL_69;
      }
LABEL_57:
      if ((v47 & 0x400) != 0) {
        goto LABEL_72;
      }
      goto LABEL_58;
    }
LABEL_55:
    if ((v47 & 0x40) != 0) {
      goto LABEL_65;
    }
    goto LABEL_56;
  }
  if ((v47 & 2) != 0)
  {
    if ((v47 & 1) == 0) {
      goto LABEL_54;
    }
    goto LABEL_61;
  }
  if (v47) {
    goto LABEL_61;
  }
  if ((v47 & 0x20) != 0) {
    goto LABEL_62;
  }
  if ((v47 & 0x40) == 0)
  {
    if ((v47 & 0x80) == 0)
    {
      if ((v47 & 0x400) == 0)
      {
        if ((v47 & 0x800) == 0)
        {
          if ((v47 & 0x3004) != 0) {
            goto LABEL_75;
          }
          if ((v47 & 0x100) != 0) {
            goto LABEL_100;
          }
LABEL_128:
          if ((v47 & 8) != 0) {
            goto LABEL_105;
          }
          goto LABEL_103;
        }
        goto LABEL_73;
      }
LABEL_72:
      type metadata accessor for ItemMetadata();
      Class v71 = sub_10096B030().super.isa;
      [v36 setCreationDate:v71];

      if ((v47 & 0x800) == 0) {
        goto LABEL_74;
      }
      goto LABEL_73;
    }
    goto LABEL_69;
  }
LABEL_65:
  uint64_t v68 = *(void *)&v41[*(int *)(type metadata accessor for ItemMetadata() + 120)];
  if (v68)
  {
    Tags.fpTags.getter(v68);
    sub_100011348(0, &qword_100ACB6E8);
    v69.super.Class isa = sub_10096C080().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v69.super.Class isa = 0;
  }
  [v36 setTags:v69.super.isa];

  if ((v47 & 0x80) == 0) {
    goto LABEL_57;
  }
LABEL_69:
  Class v70 = 0;
  if ((v41[*(int *)(type metadata accessor for ItemMetadata() + 124) + 8] & 1) == 0) {
    Class v70 = sub_10096D540().super.super.isa;
  }
  [v36 setFavoriteRank:v70];

  if ((v47 & 0x400) != 0) {
    goto LABEL_72;
  }
LABEL_58:
  if ((v47 & 0x800) != 0)
  {
LABEL_73:
    type metadata accessor for ItemMetadata();
    Class v72 = sub_10096B030().super.isa;
    [v36 setContentModificationDate:v72];
  }
LABEL_74:
  if ((v47 & 0x3004) == 0) {
    goto LABEL_97;
  }
LABEL_75:
  __int16 v73 = *((_WORD *)v41 + 5);
  if ((v73 & 0x100) != 0)
  {
    if ((v73 & 0x80) == 0)
    {
      if ((v73 & 0x40) == 0)
      {
        uint64_t v76 = type metadata accessor for ItemMetadata();
        if ((v41[*(int *)(v76 + 40)] & 1) == 0)
        {
          uint64_t v75 = 2;
          if ((v41[*(int *)(v76 + 52)] & 1) == 0) {
            goto LABEL_96;
          }
          goto LABEL_95;
        }
        uint64_t v75 = 2;
        goto LABEL_93;
      }
      uint64_t v75 = 2;
      goto LABEL_91;
    }
    uint64_t v75 = 6;
    if ((v73 & 0x40) == 0)
    {
LABEL_92:
      if (v41[*(int *)(type metadata accessor for ItemMetadata() + 40)] != 1) {
        goto LABEL_94;
      }
      goto LABEL_93;
    }
LABEL_91:
    v75 |= 1uLL;
    goto LABEL_92;
  }
  if ((v73 & 0x80) != 0)
  {
    uint64_t v75 = 4;
    if ((v73 & 0x40) == 0) {
      goto LABEL_92;
    }
    goto LABEL_91;
  }
  if ((v73 & 0x40) != 0)
  {
    uint64_t v75 = 0;
    goto LABEL_91;
  }
  uint64_t v74 = type metadata accessor for ItemMetadata();
  uint64_t v75 = 0;
  if ((v41[*(int *)(v74 + 40)] & 1) == 0)
  {
    uint64_t v75 = 0;
    if ((v41[*(int *)(v74 + 52)] & 1) == 0) {
      goto LABEL_96;
    }
    goto LABEL_95;
  }
LABEL_93:
  v75 |= 8uLL;
LABEL_94:
  if (v41[*(int *)(type metadata accessor for ItemMetadata() + 52)] == 1) {
LABEL_95:
  }
    v75 |= 0x10uLL;
LABEL_96:
  [v36 setFileSystemFlags:v75];
LABEL_97:
  if ((v47 & 0x100) == 0)
  {
    if ((v47 & 8) != 0) {
      goto LABEL_105;
    }
LABEL_103:
    if ((v47 & 0x4000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_106;
  }
LABEL_100:
  if (!*(void *)&v41[*(int *)(type metadata accessor for ItemMetadata() + 128)]) {
    sub_10002C41C((uint64_t)_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRetain();
  Class v77 = sub_10096B9A0().super.isa;
  swift_bridgeObjectRelease();
  [v36 setExtendedAttributes:v77];

  if ((v47 & 8) == 0) {
    goto LABEL_103;
  }
LABEL_105:
  type metadata accessor for ItemMetadata();
  Class v78 = sub_10096D460().super.super.isa;
  [v36 setDocumentSize:v78];

  if ((v47 & 0x4000) == 0) {
    goto LABEL_108;
  }
LABEL_106:
  if ((v41[8] & 1) == 0)
  {
    id v79 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*((unsigned int *)v41 + 1)];
    [v36 setChildItemCount:v79];
  }
LABEL_108:
  id v80 = (int *)type metadata accessor for ItemMetadata();
  BOOL v81 = (v41[v80[20]] & 1) == 0;
  [v36 setDownloaded:v81];
  [v36 setMostRecentVersionDownloaded:v81];
  [v36 setIgnoreRoot:v41[v80[16]]];
  int v82 = v41[v80[17]];
  if (v82 == 2)
  {
    sub_10002B70C(v55, v58, &qword_100ACF708);
LABEL_111:
    uint64_t v83 = *(unsigned __int8 *)(v58 + *(int *)(v87 + 40) + v80[16]);
    goto LABEL_113;
  }
  sub_10002B70C(v55, v58, &qword_100ACF708);
  if ((v82 & 1) == 0) {
    goto LABEL_111;
  }
  uint64_t v83 = 1;
LABEL_113:
  sub_10002B770(v58, &qword_100ACF708);
  [v36 setExcludedFromSync:v83];
  objc_msgSend(v36, "setUbiquitous:", objc_msgSend(v36, "isExcludedFromSync") ^ 1);
  if (*(void *)&v41[v80[37] + 8]) {
    NSString v84 = sub_10096BC00();
  }
  else {
    NSString v84 = 0;
  }
  [v36 setCollaborationIdentifier:v84];

  (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v94);
  return v36;
}

NSFileProviderItemIdentifier sub_100449034(void *a1, char a2)
{
  if (qword_100ACC110 != -1) {
    swift_once();
  }
  uint64_t v4 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v6 = v5;
  if (v4 != _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() || v6 != v7)
  {
    char v9 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9 & 1) != 0 && (a2) {
      goto LABEL_9;
    }
LABEL_11:
    if (qword_100ACC118 != -1) {
      swift_once();
    }
    uint64_t v11 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v13 = v12;
    if (v11 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
      if (a2)
      {
LABEL_19:
        uint64_t v10 = &NSFileProviderTrashContainerItemIdentifier;
        goto LABEL_20;
      }
    }
    else
    {
      char v16 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16 & 1) != 0 && (a2) {
        goto LABEL_19;
      }
    }
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v19 = a1;
    NSString v20 = sub_10096BC00();
    swift_bridgeObjectRelease();

    return (NSFileProviderItemIdentifier)v20;
  }
  swift_bridgeObjectRelease_n();
  if ((a2 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_9:
  uint64_t v10 = &NSFileProviderRootContainerItemIdentifier;
LABEL_20:
  NSFileProviderItemIdentifier v17 = *v10;

  return v17;
}

int *sub_10044922C(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a2;
  uint64_t v10 = (int *)sub_10002B7CC(&qword_100ACF708);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::UInt64 v13 = *(void *)a1;
  char v14 = *(unsigned char *)(a1 + 8);
  NSFileProviderItemIdentifier v46 = sub_100442244(*(void *)a1, v14, a3);
  NSFileProviderItemIdentifier v15 = sub_100445C98(v13, v14, a4, a5);
  if (!v5)
  {
    uint64_t v43 = v12;
    uint64_t v44 = a4;
    char v16 = v45;
    Swift::UInt64 v17 = *(void *)(a1 + 16);
    char v18 = *(unsigned char *)(a1 + 24);
    id v19 = v15;
    NSString v20 = sub_100442244(v17, v18, a3 & 1);
    NSFileProviderItemIdentifier v22 = sub_100445C98(v17, v18, v44, a5);
    uint64_t v42 = 0;
    uint64_t v24 = *(void *)(a1 + 128);
    uint64_t v23 = *(void *)(a1 + 136);
    uint64_t v25 = v10[10];
    uint64_t v26 = (uint64_t)v43;
    uint64_t v27 = (uint64_t)&v43[v25];
    uint64_t v28 = (unsigned __int8 *)(a1 + *(int *)(sub_10002B7CC(&qword_100ACCB10) + 48));
    sub_10010DA98((uint64_t)v28, v27);
    unint64_t v41 = v20;
    *(void *)uint64_t v26 = v20;
    *(void *)(v26 + 8) = v24;
    uint64_t v29 = v26;
    *(void *)(v26 + 16) = v23;
    uint64_t v30 = qword_100ACC100;
    id v31 = v22;
    swift_bridgeObjectRetain();
    if (v30 != -1) {
      swift_once();
    }
    NSFileProviderItemIdentifier v32 = v46;
    uint64_t v10 = (int *)sub_100448354(v46, v16, (id *)v26, qword_100B0B2E0, 0);
    sub_10002B770(v29, &qword_100ACF708);
    id v33 = v19;
    [v10 setFormerIdentifier:v19];

    [v10 setParentFormerIdentifier:v31];
    NSString v34 = v31;

    int v35 = *v28;
    [v10 isExcludedFromSync];
    int v36 = *((unsigned __int16 *)v28 + 5);
    unsigned int v37 = [v16 supportsSyncingTrash];
    if ((NSFileProviderItemCapabilitiesAllowsTagging & 0xFFFFFFFFFFFFFFD3) != 0)
    {
      uint64_t v38 = NSFileProviderItemCapabilitiesAllowsTagging | 0x2CLL;
      if (v35 == 1)
      {
        uint64_t v39 = v41;
        if ((~v36 & 0x140) != 0)
        {
LABEL_16:
          if ((v36 & 0x80) == 0) {
            goto LABEL_18;
          }
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v39 = v41;
        if ((v36 & 0x100) == 0) {
          goto LABEL_16;
        }
      }
LABEL_15:
      v38 |= 1uLL;
      goto LABEL_16;
    }
    if (v35 == 1)
    {
      uint64_t v39 = v41;
      if ((~v36 & 0x140) == 0)
      {
LABEL_13:
        uint64_t v38 = 44;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v39 = v41;
      if ((v36 & 0x100) != 0) {
        goto LABEL_13;
      }
    }
    uint64_t v38 = 44;
    if ((v36 & 0x80) == 0)
    {
      if ((v37 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
LABEL_17:
    v38 |= 2uLL;
LABEL_18:
    if (!v37)
    {
LABEL_20:
      [v10 setCapabilities:v38];
      swift_bridgeObjectRelease();

      return v10;
    }
LABEL_19:
    v38 |= 0x10uLL;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();

  return v10;
}

uint64_t sub_100449580(char a1, unsigned __int16 a2, char a3)
{
  if ((NSFileProviderItemCapabilitiesAllowsTagging & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t result = NSFileProviderItemCapabilitiesAllowsTagging | 0x2CLL;
    if (a1)
    {
      if ((~a2 & 0x140) != 0) {
        goto LABEL_17;
      }
    }
    else if ((a2 & 0x100) == 0)
    {
LABEL_17:
      if ((a2 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
LABEL_16:
    result |= 1uLL;
    goto LABEL_17;
  }
  if (a1)
  {
    if ((~a2 & 0x140) != 0)
    {
      if ((a2 & 0x80) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      uint64_t result = 44;
LABEL_18:
      result |= 2uLL;
LABEL_19:
      if ((a3 & 1) == 0) {
        return result;
      }
      return result | 0x10;
    }
LABEL_15:
    uint64_t result = 44;
    goto LABEL_16;
  }
  if ((a2 & 0x100) != 0) {
    goto LABEL_15;
  }
  if ((a2 & 0x80) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t result = 44;
  if (a3) {
    return result | 0x10;
  }
  return result;
}

unint64_t sub_100449614()
{
  unint64_t result = qword_100AD5660;
  if (!qword_100AD5660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5660);
  }
  return result;
}

unint64_t sub_10044966C()
{
  unint64_t result = qword_100AD5668;
  if (!qword_100AD5668)
  {
    type metadata accessor for NSFileProviderItemIdentifier(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5668);
  }
  return result;
}

unint64_t sub_1004496C4(uint64_t a1)
{
  unint64_t result = sub_1004496EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1004496EC()
{
  unint64_t result = qword_100AD5708;
  if (!qword_100AD5708)
  {
    sub_100011348(255, (unint64_t *)&unk_100ACD9F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5708);
  }
  return result;
}

int *sub_100449754(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a2;
  uint64_t v10 = (int *)sub_10002B7CC(&qword_100ACF708);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::UInt64 v13 = *(void *)a1;
  char v14 = *(unsigned char *)(a1 + 8);
  NSFileProviderItemIdentifier v46 = sub_100442244(*(void *)a1, v14, a3);
  NSFileProviderItemIdentifier v15 = sub_100445C98(v13, v14, a4, a5);
  if (!v5)
  {
    uint64_t v43 = v12;
    uint64_t v44 = a4;
    char v16 = v45;
    Swift::UInt64 v17 = *(void *)(a1 + 16);
    char v18 = *(unsigned char *)(a1 + 24);
    id v19 = v15;
    NSString v20 = sub_100442244(v17, v18, a3 & 1);
    NSFileProviderItemIdentifier v22 = sub_100445C98(v17, v18, v44, a5);
    uint64_t v42 = 0;
    uint64_t v24 = *(void *)(a1 + 32);
    uint64_t v23 = *(void *)(a1 + 40);
    uint64_t v25 = v10[10];
    uint64_t v26 = (uint64_t)v43;
    uint64_t v27 = (uint64_t)&v43[v25];
    uint64_t v28 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28));
    sub_10010DA98((uint64_t)v28, v27);
    unint64_t v41 = v20;
    *(void *)uint64_t v26 = v20;
    *(void *)(v26 + 8) = v24;
    uint64_t v29 = v26;
    *(void *)(v26 + 16) = v23;
    uint64_t v30 = qword_100ACC100;
    id v31 = v22;
    swift_bridgeObjectRetain();
    if (v30 != -1) {
      swift_once();
    }
    NSFileProviderItemIdentifier v32 = v46;
    uint64_t v10 = (int *)sub_100448354(v46, v16, (id *)v26, qword_100B0B2E0, 0);
    sub_10002B770(v29, &qword_100ACF708);
    id v33 = v19;
    [v10 setFormerIdentifier:v19];

    [v10 setParentFormerIdentifier:v31];
    NSString v34 = v31;

    int v35 = *v28;
    [v10 isExcludedFromSync];
    int v36 = *((unsigned __int16 *)v28 + 5);
    unsigned int v37 = [v16 supportsSyncingTrash];
    if ((NSFileProviderItemCapabilitiesAllowsTagging & 0xFFFFFFFFFFFFFFD3) != 0)
    {
      uint64_t v38 = NSFileProviderItemCapabilitiesAllowsTagging | 0x2CLL;
      if (v35 == 1)
      {
        uint64_t v39 = v41;
        if ((~v36 & 0x140) != 0)
        {
LABEL_16:
          if ((v36 & 0x80) == 0) {
            goto LABEL_18;
          }
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v39 = v41;
        if ((v36 & 0x100) == 0) {
          goto LABEL_16;
        }
      }
LABEL_15:
      v38 |= 1uLL;
      goto LABEL_16;
    }
    if (v35 == 1)
    {
      uint64_t v39 = v41;
      if ((~v36 & 0x140) == 0)
      {
LABEL_13:
        uint64_t v38 = 44;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v39 = v41;
      if ((v36 & 0x100) != 0) {
        goto LABEL_13;
      }
    }
    uint64_t v38 = 44;
    if ((v36 & 0x80) == 0)
    {
      if ((v37 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
LABEL_17:
    v38 |= 2uLL;
LABEL_18:
    if (!v37)
    {
LABEL_20:
      [v10 setCapabilities:v38];
      swift_bridgeObjectRelease();

      return v10;
    }
LABEL_19:
    v38 |= 0x10uLL;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();

  return v10;
}

unint64_t sub_100449AA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10044AB7C;
  *(void *)(v7 + 24) = v6;
  uint64_t v23 = sub_1001F8FDC;
  uint64_t v24 = v7;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v20 = 1107296256;
  id v21 = sub_10017090C;
  NSFileProviderItemIdentifier v22 = &unk_100A8A068;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  uint64_t aBlock = 0;
  id v9 = [a3 fetchSwift:v8 error:&aBlock];
  _Block_release(v8);
  id v10 = (id)aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v9)
  {
    uint64_t v12 = 0xA3A6E616C70;
    uint64_t aBlock = 0xA3A6E616C70;
    unint64_t v20 = 0xE600000000000000;
    if ([v9 next])
    {
      do
      {
        id v14 = [v9 stringAtIndex:3];
        uint64_t v15 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        Swift::UInt64 v17 = v16;

        v25._countAndFlagsBits = v15;
        v25._object = v17;
        sub_10096BDC0(v25);
        swift_bridgeObjectRelease();
        v26._countAndFlagsBits = 10;
        v26._object = (void *)0xE100000000000000;
        sub_10096BDC0(v26);
        v27._countAndFlagsBits = 538976288;
        v27._object = (void *)0xE400000000000000;
        sub_10096BDC0(v27);
        swift_bridgeObjectRelease();
      }
      while (([v9 next] & 1) != 0);
      swift_release();

      return aBlock;
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_errorRelease();
    swift_release();
    return 0xD000000000000016;
  }
  return v12;
}

unint64_t sub_100449D84(uint64_t a1, uint64_t a2, void *a3)
{
  sub_10096CBD0(21);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = a2;
  v6._object = a3;
  sub_10096BDC0(v6);
  return 0xD000000000000013;
}

uint64_t sub_100449E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = a1 <= 0;
  if (a1 <= 0) {
    v6._countAndFlagsBits = 0;
  }
  else {
    v6._countAndFlagsBits = 0x63732D6C6C756620;
  }
  if (v5) {
    uint64_t v7 = (void *)0xE000000000000000;
  }
  else {
    uint64_t v7 = (void *)0xEA00000000006E61;
  }
  v6._object = v7;
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  if (a2 <= 0) {
    v8._countAndFlagsBits = 0;
  }
  else {
    v8._countAndFlagsBits = 0xD000000000000011;
  }
  if (a2 <= 0) {
    id v9 = (void *)0xE000000000000000;
  }
  else {
    id v9 = (void *)0x80000001009A1660;
  }
  v8._object = v9;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  if (a3 <= 0) {
    v10._countAndFlagsBits = 0;
  }
  else {
    v10._countAndFlagsBits = 0xD000000000000010;
  }
  if (a3 <= 0) {
    uint64_t v11 = (void *)0xE000000000000000;
  }
  else {
    uint64_t v11 = (void *)0x80000001009A1640;
  }
  v10._object = v11;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t (*sub_100449EF0())()
{
  return j__swift_endAccess_0;
}

id sub_100449F50()
{
  int v1 = (unint64_t *)&v0[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics];
  *(void *)&v0[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics] = 0;
  long long v2 = v0;
  if (!os_variant_has_internal_content()) {
    goto LABEL_5;
  }
  id v3 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v4 = sub_10096BC00();
  id v5 = [v3 initWithSuiteName:v4];

  if (!v5) {
    goto LABEL_5;
  }
  NSString v6 = sub_10096BC00();
  unsigned int v7 = [v5 BOOLForKey:v6];

  if (v7) {
    unint64_t v8 = sub_100095B88((uint64_t)_swiftEmptyArrayStorage);
  }
  else {
LABEL_5:
  }
    unint64_t v8 = 0;
  swift_beginAccess();
  *int v1 = v8;
  swift_bridgeObjectRelease();
  id v9 = [self defaultStore];
  signed int v10 = [v9 sqlDatabaseStatementWarnTime];

  *(void *)&v2[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_maxQueryExecutionTime] = v10;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for PQLConnectionWithStatistics();
  return objc_msgSendSuper2(&v12, "init");
}

void sub_10044A108(char a1)
{
  if ((a1 & 1) == 0
    || (long long v2 = &v1[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics],
        swift_beginAccess(),
        (uint64_t v3 = *(void *)v2) == 0))
  {
LABEL_27:
    swift_beginAccess();
    swift_bridgeObjectRetain();
    return;
  }
  NSFileProviderItemIdentifier v22 = v2;
  uint64_t v23 = v1;
  *(void *)long long v2 = 0;
  uint64_t v4 = v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v8) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_26;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_26;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v9);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v12);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    id v19 = *(void **)(*(void *)(v3 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    id v20 = v19;
    id v21 = [v20 queryPlan];
    if (v21)
    {
      NSString v10 = v21;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100449AA4(v18, v17, v23);
      swift_bridgeObjectRelease();
      NSString v10 = sub_10096BC00();
      swift_bridgeObjectRelease();
      [v20 setQueryPlan:v10];
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_26:
    swift_release();
    *(void *)NSFileProviderItemIdentifier v22 = v3;
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
}

const char *sub_10044A354(void *a1, void *a2, uint64_t a3)
{
  id v59 = a1;
  uint64_t v5 = (sqlite3_stmt *)sub_10096B480();
  uint64_t v6 = (uint64_t (**)(char *, sqlite3_stmt *))*((void *)v5 - 1);
  __chkstk_darwin(v5);
  int64_t v8 = (uint64_t (**)(char *, sqlite3_stmt *))((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  [a2 executionTime];
  double v10 = v9;
  [a2 preparationTime];
  double v12 = v11;
  uint64_t v58 = (sqlite3_stmt *)[a2 stmt];
  unint64_t result = sqlite3_sql(v58);
  if (!result) {
    goto LABEL_26;
  }
  double v14 = v10 + v12;
  uint64_t v15 = sub_10096BDE0();
  unint64_t v17 = v16;
  uint64_t v18 = (uint64_t *)(a3 + OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics);
  swift_beginAccess();
  uint64_t v19 = *v18;
  if (*v18)
  {
    if (*(void *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_10000DDD0(v15, v17);
      if (v21)
      {
        id v22 = *(id *)(*(void *)(v19 + 56) + 8 * v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t result = (const char *)[v22 count];
        if (!__OFADD__(result, 1))
        {
          [v22 setCount:result + 1];
          [v22 cumulatedTime];
          [v22 setCumulatedTime:v14 + v23];
          [v22 minTime];
          if (v14 < v24) {
            [v22 setMinTime:v10 + v12];
          }
          [v22 maxTime];
          if (v25 < v14) {
            [v22 setMaxTime:v10 + v12];
          }
          [v22 cumulatedTime];
          double v27 = v26;
          id v28 = [v22 count];
          double v29 = (v14 - v27 / (double)(uint64_t)v28) * (v14 - v27 / (double)(uint64_t)v28);
          [v22 cumulatedSquareDiffFromMean];
          [v22 setCumulatedSquareDiffFromMean:v30 + v29];
LABEL_15:

          goto LABEL_16;
        }
        __break(1u);
LABEL_26:
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    NSString v57 = v8;
    id v31 = v6;
    id v22 = [objc_allocWithZone((Class)FPSQLDatabaseQueryStatistics) initWithMinTime:1 maxTime:0 cumulatedTime:v10 + v12 cumulatedSquareDiffFromMean:v10 + v12 count:v10 + v12 queryPlan:0.0];
    id v33 = sub_100449EF0();
    if (*(void *)v32)
    {
      NSString v34 = v32;
      swift_bridgeObjectRetain();
      id v22 = v22;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v61 = *v34;
      *NSString v34 = -0.0;
      sub_10038C310((uint64_t)v22, v15, v17, isUniquelyReferenced_nonNull_native);
      *NSString v34 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    ((void (*)(uint64_t *, void))v33)(v60, 0);
    uint64_t v6 = v31;
    int64_t v8 = v57;
    goto LABEL_15;
  }
LABEL_16:
  if ((double)*(uint64_t *)(a3 + OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_maxQueryExecutionTime) / 1000.0 >= v14 * 1000.0) {
    return (const char *)swift_bridgeObjectRelease();
  }
  v62._countAndFlagsBits = 0x455441455243;
  v62._object = (void *)0xE600000000000000;
  if (sub_10096BE70(v62)) {
    return (const char *)swift_bridgeObjectRelease();
  }
  v63._countAndFlagsBits = 0x5245544C41;
  v63._object = (void *)0xE500000000000000;
  if (sub_10096BE70(v63)) {
    return (const char *)swift_bridgeObjectRelease();
  }
  v64._countAndFlagsBits = 4473921;
  v64._object = (void *)0xE300000000000000;
  if (sub_10096BE70(v64)) {
    return (const char *)swift_bridgeObjectRelease();
  }
  v65._countAndFlagsBits = 1347375684;
  v65._object = (void *)0xE400000000000000;
  if (sub_10096BE70(v65)) {
    return (const char *)swift_bridgeObjectRelease();
  }
  NSString v57 = v6;
  double v56 = COERCE_DOUBLE([a2 returnedRows]);
  int v36 = v58;
  uint64_t v54 = sqlite3_column_count(v58);
  int v37 = sqlite3_bind_parameter_count(v36);
  int v38 = sqlite3_stmt_status(v36, 4, 0);
  double v55 = COERCE_DOUBLE([v59 changes]);
  int v39 = sqlite3_stmt_status(v36, 1, 0);
  int v40 = sqlite3_stmt_status(v36, 2, 0);
  unint64_t v41 = (char *)v8;
  int v42 = sqlite3_stmt_status(v36, 3, 0);
  id v43 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_10096B470();
  os_log_type_t v45 = sub_10096C5A0();
  LODWORD(v59) = v45;
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v52 = v40;
    uint64_t v53 = v42;
    uint64_t v51 = v39;
    *(void *)&double v46 = v38;
    uint64_t v58 = v5;
    *(void *)&double v47 = (int)v54;
    uint64_t v48 = swift_slowAlloc();
    v60[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136448514;
    swift_bridgeObjectRetain();
    double v61 = COERCE_DOUBLE(sub_100719D44(v15, v17, v60));
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v48 + 12) = 2048;
    *(void *)&double v61 = v37;
    sub_10096C8C0();
    *(_WORD *)(v48 + 22) = 2048;
    double v61 = v47;
    sub_10096C8C0();
    *(_WORD *)(v48 + 32) = 2048;
    double v61 = v56;
    sub_10096C8C0();
    *(_WORD *)(v48 + 42) = 2048;
    double v61 = v55;
    sub_10096C8C0();
    *(_WORD *)(v48 + 52) = 2048;
    double v61 = v46;
    sub_10096C8C0();
    *(_WORD *)(v48 + 62) = 2048;
    double v61 = v10;
    sub_10096C8C0();
    *(_WORD *)(v48 + 72) = 2048;
    double v61 = v12;
    sub_10096C8C0();
    *(_WORD *)(v48 + 82) = 2048;
    double v61 = v10 + v12;
    sub_10096C8C0();
    *(_WORD *)(v48 + 92) = 2082;
    uint64_t v49 = sub_100449E04(v51, v52, v53);
    double v61 = COERCE_DOUBLE(sub_100719D44(v49, v50, v60));
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v59, "🐢 Possible slow statement on %{public}s:\n  binds:    %ld\n  columns:  %ld\n  rows:     %ld\n  changes:  %ld\n  vm steps: %ld\n  execution time: %fs preparation time: %fs total time: %fs\n  warning: %{public}s", (uint8_t *)v48, 0x66u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (const char *)v57[1](v41, v58);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (const char *)v57[1](v41, v5);
  }
}

id sub_10044AADC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PQLConnectionWithStatistics();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PQLConnectionWithStatistics()
{
  return self;
}

uint64_t sub_10044AB44()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_10044AB7C(uint64_t a1)
{
  return sub_100449D84(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10044AB84()
{
  return swift_deallocObject();
}

uint64_t sub_10044AB94()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_10044AC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = *(void *)(v8 + 80);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  int64_t v13 = (char *)&v15 - v12;
  *((unsigned char *)v4 + 72) = 0;
  sub_10009CA78(v11, (uint64_t)(v4 + 2));
  (*(void (**)(uint64_t))(*(void *)(v8 + 104) + 8))(v9);
  sub_1000268E0(a1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v4 + *(void *)(*v4 + 136), v13, v9);
  v4[7] = a2;
  v4[8] = a3;
  return v4;
}

uint64_t *sub_10044AD90()
{
  uint64_t v1 = *v0;
  sub_1000268E0((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 136));
  return v0;
}

uint64_t sub_10044AE18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 136);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t (*sub_10044AEBC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_10044AF28;
}

uint64_t sub_10044AF28(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    *(unsigned char *)(*(void *)(a1 + 24) + 72) = 1;
  }
  return result;
}

uint64_t sub_10044AF60(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v13 - v6;
  if (*(unsigned char *)(v1 + 72) == 1)
  {
    *(unsigned char *)(v1 + 72) = 0;
    sub_10096AAD0();
    swift_allocObject();
    sub_10096AAC0();
    sub_10096AAA0();
    sub_10044AE18((uint64_t)v7);
    uint64_t v8 = sub_10096AAB0();
    unint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    if (!v2)
    {
      uint64_t v11 = *(void *)(v1 + 40);
      uint64_t v12 = *(void *)(v1 + 48);
      sub_10002689C((void *)(v1 + 16), v11);
      (*(void (**)(void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v12 + 8))(*(void *)(v1 + 56), *(void *)(v1 + 64), v8, v10, v11, v12);
      sub_10001E9C0(v8, v10);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10044B134()
{
  return sub_10044B51C(sub_10044AF60);
}

uint64_t sub_10044B154(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  sub_10002689C((void *)(v1 + 16), v7);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v8 + 16))(*(void *)(v1 + 56), *(void *)(v1 + 64), v7, v8);
  if (!v2)
  {
    unint64_t v11 = v10;
    if (v10 >> 60 != 15)
    {
      uint64_t v12 = result;
      sub_10096AA90();
      swift_allocObject();
      sub_10001EBB0(v12, v11);
      sub_10096AA80();
      sub_10096AA70();
      sub_10044B888((uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_10001E9AC(v12, v11);
      swift_release();
      uint64_t result = sub_10001E9AC(v12, v11);
    }
    *(unsigned char *)(v1 + 72) = 0;
  }
  return result;
}

uint64_t sub_10044B360()
{
  return sub_10044B51C(sub_10044B154);
}

uint64_t sub_10044B380(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  sub_10002689C(v1 + 2, v8);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v9 + 24))(v1[7], v1[8], v8, v9);
  if (!v2)
  {
    (*(void (**)(uint64_t))(*(void *)(v3 + 104) + 8))(v4);
    sub_10044B888((uint64_t)v7);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_10044B4FC()
{
  return sub_10044B51C(sub_10044B380);
}

uint64_t sub_10044B51C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = __chkstk_darwin(v2);
  return a1(v3);
}

void sub_10044B80C()
{
  *(unsigned char *)(v0 + 72) = 1;
}

uint64_t sub_10044B818()
{
  sub_10044AD90();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WharfResource()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10044B888(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = &v1[*(void *)(*(void *)v1 + 136)];
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 24))(v4, a1);
  uint64_t result = swift_endAccess();
  v1[72] = 1;
  return result;
}

unint64_t sub_10044B93C(char a1)
{
  unint64_t result = 0x696C696261706163;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x616F6C70755F7369;
      break;
    case 3:
      unint64_t result = 0x6E6964616F6C7075;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x65726168735F7369;
      break;
    case 7:
    case 19:
    case 23:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
      unint64_t result = 0xD000000000000024;
      break;
    case 11:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0x61746E6F635F7369;
      break;
    case 14:
      unint64_t result = 0xD000000000000015;
      break;
    case 15:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 16:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 17:
      unint64_t result = 0xD000000000000016;
      break;
    case 18:
      unint64_t result = 0x5F79616C70736964;
      break;
    case 20:
      unint64_t result = 0x6365645F6D657469;
      break;
    case 21:
      unint64_t result = 0x666E695F72657375;
      break;
    case 22:
      unint64_t result = 0x5F746E65746E6F63;
      break;
    case 24:
      unint64_t result = 0xD000000000000014;
      break;
    case 25:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10044BC78(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_10044B93C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10044B93C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10096D2D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10044BD04()
{
  char v1 = *v0;
  sub_10096D4B0();
  sub_10044B93C(v1);
  sub_10096BD50();
  swift_bridgeObjectRelease();
  return sub_10096D500();
}

uint64_t sub_10044BD68()
{
  sub_10044B93C(*v0);
  sub_10096BD50();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10044BDBC()
{
  char v1 = *v0;
  sub_10096D4B0();
  sub_10044B93C(v1);
  sub_10096BD50();
  swift_bridgeObjectRelease();
  return sub_10096D500();
}

uint64_t sub_10044BE1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10044D6A8();
  *a1 = result;
  return result;
}

unint64_t sub_10044BE4C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10044B93C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10044BE78(void *a1@<X8>)
{
  *a1 = &off_100A6A6D8;
}

unint64_t sub_10044BE88()
{
  return sub_10044B93C(*v0);
}

uint64_t sub_10044BE90(char a1, id a2)
{
  switch(a1)
  {
    case 1:
      id v8 = [a2 bindBooleanParameter:*((unsigned __int8 *)v2 + 8)];
      goto LABEL_33;
    case 2:
      id v8 = [a2 bindBooleanParameter:*((unsigned __int8 *)v2 + 9)];
      goto LABEL_33;
    case 3:
      sub_10044D6FC((uint64_t)(v2 + 2), (uint64_t)v34);
      sub_10044D6FC((uint64_t)v34, (uint64_t)&v37);
      if (!v37) {
        goto LABEL_38;
      }
      swift_getErrorValue();
      uint64_t v10 = v27;
      uint64_t v9 = v28;
      uint64_t v11 = v29;
      goto LABEL_16;
    case 4:
      sub_10044D6FC((uint64_t)(v2 + 3), (uint64_t)v35);
      sub_10044D6FC((uint64_t)v35, (uint64_t)&v36);
      if (!v36) {
        goto LABEL_38;
      }
      swift_getErrorValue();
      uint64_t v10 = v30;
      uint64_t v9 = v31;
      uint64_t v11 = v32;
LABEL_16:
      double v14 = sub_1003ABE00(v9, v11);
      if (v3) {
        return v10;
      }
      uint64_t v24 = (uint64_t)v14;
      unint64_t v25 = v15;
      goto LABEL_40;
    case 5:
      id v8 = [a2 bindBooleanParameter:0];
      goto LABEL_33;
    case 6:
      id v8 = [a2 bindBooleanParameter:*((unsigned __int8 *)v2 + 32)];
      goto LABEL_33;
    case 7:
      id v8 = [a2 bindBooleanParameter:*((unsigned __int8 *)v2 + 33)];
      goto LABEL_33;
    case 8:
      id v8 = [a2 bindBooleanParameter:*((unsigned __int8 *)v2 + 34)];
      goto LABEL_33;
    case 9:
      uint64_t v6 = v2[5];
      uint64_t v7 = v2[6];
      goto LABEL_28;
    case 10:
      uint64_t v6 = v2[7];
      uint64_t v7 = v2[8];
      goto LABEL_28;
    case 11:
      id v8 = [a2 bindBooleanParameter:*((unsigned __int8 *)v2 + 72)];
      goto LABEL_33;
    case 12:
      uint64_t v6 = v2[10];
      uint64_t v7 = v2[11];
      goto LABEL_28;
    case 13:
      id v8 = [a2 bindBooleanParameter:*((unsigned __int8 *)v2 + 104)];
      goto LABEL_33;
    case 14:
      id v8 = [a2 bindBooleanParameter:*((unsigned __int8 *)v2 + 105)];
      goto LABEL_33;
    case 15:
      uint64_t v6 = v2[14];
      uint64_t v7 = v2[15];
      goto LABEL_28;
    case 16:
      uint64_t v6 = v2[16];
      uint64_t v7 = v2[17];
      goto LABEL_28;
    case 17:
      uint64_t v6 = v2[18];
      uint64_t v7 = v2[19];
      goto LABEL_28;
    case 18:
      uint64_t v19 = v2[20];
      uint64_t v20 = v2[21];
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_10038FCD8(v19, v20);
      goto LABEL_29;
    case 19:
      id v8 = [a2 bindBooleanParameter:*((unsigned __int8 *)v2 + 176)];
LABEL_33:
      id v21 = v8;
      uint64_t v10 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

      return v10;
    case 20:
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_10025DD90(v16);
      goto LABEL_29;
    case 21:
      uint64_t v17 = v2[24];
      uint64_t v18 = v2[25];
      sub_10009C7F8(v17);
      uint64_t v10 = sub_10025DF50(v17, v18);
      sub_1000DBF10(v17);
      return v10;
    case 22:
      uint64_t v4 = v2[26];
      goto LABEL_35;
    case 23:
      uint64_t v4 = v2[27];
LABEL_35:
      uint64_t v5 = &type metadata for Int;
      goto LABEL_36;
    case 24:
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_10025E0FC(v12);
      goto LABEL_29;
    case 25:
      uint64_t v6 = v2[29];
      uint64_t v7 = v2[30];
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_10025DBD8(v6, v7);
LABEL_29:
      uint64_t v10 = v13;
      swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v4 = *v2;
      uint64_t v5 = &type metadata for UInt;
LABEL_36:
      v33[3] = v5;
      v33[0] = v4;
      uint64_t v10 = sub_1003AC444((uint64_t)v33);
      uint64_t v23 = v22;
      sub_10017D1A4((uint64_t)v33);
      if (!v23)
      {
        sub_10096CE20();
        __break(1u);
LABEL_38:
        uint64_t v24 = 0;
        unint64_t v25 = 0xF000000000000000;
LABEL_40:
        uint64_t v10 = sub_10025CECC(v24, v25);
        sub_10001E9AC(v24, v25);
      }
      break;
  }
  return v10;
}

double sub_10044C2CC@<D0>(id a1@<X1>, char a2@<W0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(a2)
  {
    case 1:
    case 2:
    case 5:
    case 6:
    case 7:
    case 8:
    case 11:
    case 13:
    case 14:
    case 19:
      unsigned __int8 v8 = [a1 BOOLAtIndex:a3];
      *(void *)(a4 + 24) = &type metadata for Bool;
      *(unsigned char *)a4 = v8;
      return result;
    case 3:
    case 4:
      if ([a1 isNullAtIndex:a3]) {
        goto LABEL_28;
      }
      id v17 = [a1 dataAtIndex:a3];
      uint64_t v18 = sub_10096AF60();
      unint64_t v20 = v19;

      uint64_t v21 = sub_1003AB9C8(v18, v20);
      sub_10001E9C0(v18, v20);
      if (!v4)
      {
        if (!v21) {
          goto LABEL_28;
        }
        swift_getErrorValue();
        *(void *)(a4 + 24) = v36;
        uint64_t v22 = sub_10009C958((uint64_t *)a4);
        (*(void (**)(uint64_t *))(*(void *)(v36 - 8) + 16))(v22);
        swift_errorRelease();
      }
      return result;
    case 9:
    case 10:
    case 12:
    case 15:
    case 16:
    case 17:
      if ([a1 isNullAtIndex:a3]) {
        goto LABEL_28;
      }
      id v10 = [a1 stringAtIndex:a3];
      uint64_t v11 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v13 = v12;

      double v14 = (ValueMetadata *)&type metadata for String;
      goto LABEL_5;
    case 18:
      if ([a1 isNullAtIndex:a3]) {
        goto LABEL_28;
      }
      id v34 = [a1 stringAtIndex:a3];
      uint64_t v11 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v13 = v35;

      double v14 = &type metadata for Filename;
LABEL_5:
      *(void *)(a4 + 24) = v14;
      *(void *)a4 = v11;
      *(void *)(a4 + 8) = v13;
      return result;
    case 20:
      if ([a1 isNullAtIndex:a3]) {
        goto LABEL_28;
      }
      uint64_t v31 = sub_10025F0B8(a3);
      if (v4) {
        return result;
      }
      uint64_t v28 = v31;
      double v29 = (uint64_t *)&unk_100AD5CC0;
      break;
    case 21:
      if ([a1 isNullAtIndex:a3]) {
        goto LABEL_28;
      }
      uint64_t v32 = sub_10025EF74(a3);
      if (!v4)
      {
        *(void *)(a4 + 24) = &type metadata for UserInfo;
        *(void *)a4 = v32;
        *(void *)(a4 + 8) = v33;
      }
      return result;
    case 22:
    case 23:
      type metadata accessor for NSFileProviderContentPolicy(0);
      *(void *)(a4 + 24) = v15;
      id v16 = [a1 longAtIndex:a3];
      goto LABEL_19;
    case 24:
      if ([a1 isNullAtIndex:a3]) {
        goto LABEL_28;
      }
      uint64_t v27 = sub_10025EDF0(a3);
      if (v4) {
        return result;
      }
      uint64_t v28 = v27;
      double v29 = &qword_100ACB6C0;
      break;
    case 25:
      if ([a1 isNullAtIndex:a3])
      {
LABEL_28:
        double result = 0.0;
        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
      }
      else
      {
        if ([a1 isNullAtIndex:a3]) {
          sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 150, 2, 260);
        }
        if (swift_dynamicCastMetatype()) {
          sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 150, 2, 261);
        }
        id v23 = [a1 stringAtIndex:a3];
        uint64_t v24 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v26 = v25;

        *(void *)(a4 + 24) = &type metadata for String;
        *(void *)a4 = v24;
        *(void *)(a4 + 8) = v26;
      }
      return result;
    default:
      type metadata accessor for NSFileProviderItemCapabilities(0);
      *(void *)(a4 + 24) = v30;
      id v16 = [a1 unsignedLongAtIndex:a3];
LABEL_19:
      *(void *)a4 = v16;
      return result;
  }
  *(void *)(a4 + 24) = sub_10002B7CC(v29);
  *(void *)a4 = v28;
  return result;
}

uint64_t sub_10044C71C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  LOBYTE(v69[0]) = 0;
  type metadata accessor for NSFileProviderItemCapabilities(0);
  uint64_t v8 = v7;
  sub_100391750(a1, v7);
  uint64_t result = sub_1006FCBE4((uint64_t)v69, v8, a1, v8, a2);
  if (!v3)
  {
    uint64_t v10 = v77;
    LOBYTE(v69[0]) = 1;
    sub_100391750(a1, (uint64_t)&type metadata for Bool);
    sub_1006FCBE4((uint64_t)v69, (uint64_t)&type metadata for Bool, a1, (uint64_t)&type metadata for Bool, a2);
    int v11 = v76;
    LOBYTE(v69[0]) = 2;
    sub_1006FCBE4((uint64_t)v69, (uint64_t)&type metadata for Bool, a1, (uint64_t)&type metadata for Bool, a2);
    int v79 = v11;
    int v12 = v75;
    LOBYTE(v69[0]) = 3;
    uint64_t v13 = sub_10002B7CC(&qword_100AD7360);
    sub_100391750(a1, v13);
    sub_1006FCBE4((uint64_t)v69, v13, a1, v13, a2);
    int v78 = v12;
    uint64_t v14 = v74;
    LOBYTE(v69[0]) = 4;
    sub_1006FCBE4((uint64_t)v69, v13, a1, v13, a2);
    uint64_t v15 = v73;
    LOBYTE(v69[0]) = 6;
    sub_1006FCBE4((uint64_t)v69, (uint64_t)&type metadata for Bool, a1, (uint64_t)&type metadata for Bool, a2);
    uint64_t v52 = v14;
    LOBYTE(v14) = v72;
    LOBYTE(v69[0]) = 7;
    sub_1006FCBE4((uint64_t)v69, (uint64_t)&type metadata for Bool, a1, (uint64_t)&type metadata for Bool, a2);
    char v50 = v14;
    uint64_t v51 = v15;
    LOBYTE(v15) = v71;
    LOBYTE(v69[0]) = 8;
    sub_1006FCBE4((uint64_t)v69, (uint64_t)&type metadata for Bool, a1, (uint64_t)&type metadata for Bool, a2);
    char v49 = v15;
    LOBYTE(v14) = v70;
    LOBYTE(v68[0]) = 9;
    uint64_t v16 = sub_10002B7CC(&qword_100ACF700);
    sub_100391750(a1, v16);
    sub_1006FCBE4((uint64_t)v68, v16, a1, v16, a2);
    uint64_t v46 = v69[0];
    uint64_t v47 = v16;
    uint64_t v48 = v69[1];
    LOBYTE(v66[0]) = 10;
    sub_1006FCBE4((uint64_t)v66, v16, a1, v16, a2);
    char v43 = v14;
    uint64_t v44 = v68[0];
    uint64_t v45 = v68[1];
    LOBYTE(v66[0]) = 11;
    sub_1006FCBE4((uint64_t)v66, (uint64_t)&type metadata for Bool, a1, (uint64_t)&type metadata for Bool, a2);
    char v42 = v67;
    LOBYTE(v63[0]) = 12;
    sub_1006FCBE4((uint64_t)v63, v47, a1, v47, a2);
    uint64_t v40 = v66[0];
    uint64_t v41 = v66[1];
    LOBYTE(v63[0]) = 13;
    sub_1006FCBE4((uint64_t)v63, (uint64_t)&type metadata for Bool, a1, (uint64_t)&type metadata for Bool, a2);
    char v39 = v65;
    LOBYTE(v63[0]) = 14;
    sub_1006FCBE4((uint64_t)v63, (uint64_t)&type metadata for Bool, a1, (uint64_t)&type metadata for Bool, a2);
    char v38 = v64;
    LOBYTE(v62[0]) = 15;
    sub_1006FCBE4((uint64_t)v62, v47, a1, v47, a2);
    uint64_t v36 = v63[0];
    uint64_t v37 = v63[1];
    LOBYTE(v61[0]) = 16;
    sub_1006FCBE4((uint64_t)v61, v47, a1, v47, a2);
    uint64_t v17 = v62[0];
    uint64_t v35 = v62[1];
    LOBYTE(v60[0]) = 17;
    sub_1006FCBE4((uint64_t)v60, v47, a1, v47, a2);
    uint64_t v33 = v61[0];
    uint64_t v34 = v61[1];
    LOBYTE(v58[0]) = 18;
    uint64_t v18 = sub_10002B7CC(&qword_100ADF5E0);
    sub_100391750(a1, v18);
    sub_1006FCBE4((uint64_t)v58, v18, a1, v18, a2);
    uint64_t v31 = v60[0];
    uint64_t v32 = v60[1];
    LOBYTE(v58[0]) = 19;
    sub_1006FCBE4((uint64_t)v58, (uint64_t)&type metadata for Bool, a1, (uint64_t)&type metadata for Bool, a2);
    char v30 = v59;
    LOBYTE(v58[0]) = 20;
    uint64_t v19 = sub_10002B7CC((uint64_t *)&unk_100AD74F0);
    sub_100391750(a1, v19);
    sub_1006FCBE4((uint64_t)v58, v19, a1, v19, a2);
    uint64_t v29 = v58[2];
    LOBYTE(v54) = 21;
    uint64_t v20 = sub_10002B7CC(&qword_100AD0680);
    sub_100391750(a1, v20);
    sub_1006FCBE4((uint64_t)&v54, v20, a1, v20, a2);
    uint64_t v27 = v58[0];
    uint64_t v28 = v58[1];
    LOBYTE(v54) = 22;
    type metadata accessor for NSFileProviderContentPolicy(0);
    uint64_t v22 = v21;
    sub_100391750(a1, v21);
    sub_1006FCBE4((uint64_t)&v54, v22, a1, v22, a2);
    uint64_t v25 = v57;
    LOBYTE(v54) = 23;
    sub_1006FCBE4((uint64_t)&v54, v22, a1, v22, a2);
    uint64_t v26 = v56;
    LOBYTE(v54) = 24;
    uint64_t v23 = sub_10002B7CC(&qword_100AD0698);
    sub_100391750(a1, v23);
    sub_1006FCBE4((uint64_t)&v54, v23, a1, v23, a2);
    uint64_t v24 = v55;
    char v53 = 25;
    uint64_t result = sub_1006FCBE4((uint64_t)&v53, v16, a1, v16, a2);
    *(void *)a3 = v10;
    *(unsigned char *)(a3 + 8) = v79;
    *(unsigned char *)(a3 + 9) = v78;
    *(void *)(a3 + 16) = v52;
    *(void *)(a3 + 24) = v51;
    *(unsigned char *)(a3 + 32) = v50;
    *(unsigned char *)(a3 + 33) = v49;
    *(unsigned char *)(a3 + 34) = v43;
    *(void *)(a3 + 40) = v46;
    *(void *)(a3 + 48) = v48;
    *(void *)(a3 + 56) = v44;
    *(void *)(a3 + 64) = v45;
    *(unsigned char *)(a3 + 72) = v42;
    *(void *)(a3 + 80) = v40;
    *(void *)(a3 + 88) = v41;
    *(void *)(a3 + 96) = 0;
    *(unsigned char *)(a3 + 104) = v39;
    *(unsigned char *)(a3 + 105) = v38;
    *(void *)(a3 + 112) = v36;
    *(void *)(a3 + 120) = v37;
    *(void *)(a3 + 128) = v17;
    *(void *)(a3 + 136) = v35;
    *(void *)(a3 + 144) = v33;
    *(void *)(a3 + 152) = v34;
    *(void *)(a3 + 160) = v31;
    *(void *)(a3 + 168) = v32;
    *(unsigned char *)(a3 + 176) = v30;
    *(void *)(a3 + 184) = v29;
    *(void *)(a3 + 192) = v27;
    *(void *)(a3 + 200) = v28;
    *(void *)(a3 + 208) = v25;
    *(void *)(a3 + 216) = v26;
    *(void *)(a3 + 224) = v24;
    *(_OWORD *)(a3 + 232) = v54;
  }
  return result;
}

uint64_t sub_10044D1C4(char *a1, void *a2)
{
  return sub_10044BE90(*a1, a2);
}

double sub_10044D23C@<D0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_10044C2CC(a2, *a1, a3, a4);
}

double sub_10044D258@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_10044C71C(a1, a2, (uint64_t)v13);
  if (!v3)
  {
    long long v6 = v25;
    *(_OWORD *)(a3 + 192) = v24;
    *(_OWORD *)(a3 + 208) = v6;
    *(_OWORD *)(a3 + 224) = v26;
    *(void *)(a3 + 240) = v27;
    long long v7 = v21;
    *(_OWORD *)(a3 + 128) = v20;
    *(_OWORD *)(a3 + 144) = v7;
    long long v8 = v23;
    *(_OWORD *)(a3 + 160) = v22;
    *(_OWORD *)(a3 + 176) = v8;
    long long v9 = v17;
    *(_OWORD *)(a3 + 64) = v16;
    *(_OWORD *)(a3 + 80) = v9;
    long long v10 = v19;
    *(_OWORD *)(a3 + 96) = v18;
    *(_OWORD *)(a3 + 112) = v10;
    long long v11 = v13[1];
    *(_OWORD *)a3 = v13[0];
    *(_OWORD *)(a3 + 16) = v11;
    double result = *(double *)&v14;
    long long v12 = v15;
    *(_OWORD *)(a3 + 32) = v14;
    *(_OWORD *)(a3 + 48) = v12;
  }
  return result;
}

unint64_t sub_10044D2F0(uint64_t a1)
{
  unint64_t result = sub_10044D318();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10044D318()
{
  unint64_t result = qword_100AD58B0;
  if (!qword_100AD58B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD58B0);
  }
  return result;
}

unint64_t sub_10044D370()
{
  unint64_t result = qword_100AD58B8;
  if (!qword_100AD58B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD58B8);
  }
  return result;
}

uint64_t sub_10044D3C4()
{
  return sub_10044D530(&qword_100AD58C0);
}

unsigned char *_s9SQLFieldsOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    const char *result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10044D4C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          const char *result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9SQLFieldsOMa_3()
{
  return &_s9SQLFieldsON_2;
}

uint64_t sub_10044D4FC()
{
  return sub_10044D530(&qword_100AD58F8);
}

uint64_t sub_10044D530(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100033BE8(&qword_100AD4F70);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10044D57C()
{
  unint64_t result = qword_100AD5900;
  if (!qword_100AD5900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5900);
  }
  return result;
}

unint64_t sub_10044D5D0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10044D600();
  unint64_t result = sub_10044D654();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10044D600()
{
  unint64_t result = qword_100AD5908;
  if (!qword_100AD5908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5908);
  }
  return result;
}

unint64_t sub_10044D654()
{
  unint64_t result = qword_100AD74E0;
  if (!qword_100AD74E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD74E0);
  }
  return result;
}

uint64_t sub_10044D6A8()
{
  unint64_t v0 = sub_10096D350();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A) {
    return 26;
  }
  else {
    return v0;
  }
}

uint64_t sub_10044D6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100AD7360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10044D764(unsigned __int8 a1, id a2)
{
  uint64_t v4 = *v2;
  int v5 = a1 >> 5;
  if (v5 == 4)
  {
    if (a1 == 129)
    {
      long long v7 = *(void **)((char *)v2 + *(void *)(v4 + 584));
      if (v7) {
        id v8 = [v7 version];
      }
      else {
        id v8 = 0;
      }
      id v6 = [a2 bindLongParameter:v8];
      goto LABEL_13;
    }
    return sub_1007B2514(a1, (uint64_t)a2);
  }
  if (v5 != 2) {
    return sub_1007B2514(a1, (uint64_t)a2);
  }
  if (a1 == 66)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v10 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    long long v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 32);
    uint64_t v12 = swift_checkMetadataState();
    return v11(a2, v12, v10);
  }
  if (a1 != 67) {
    return sub_1007B2514(a1, (uint64_t)a2);
  }
  id v6 = [a2 bindUnsignedLongParameter:*(uint64_t *)((char *)v2 + *(void *)(v4 + 632))];
LABEL_13:
  id v13 = v6;
  uint64_t v14 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  return v14;
}

void sub_10044D90C(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8 = a2 >> 5;
  if (v8 == 4)
  {
    if (a2 == 129)
    {
      id v10 = a1;
      if (([v10 isNullAtIndex:a3] & 1) != 0
        || (id v11 = [v10 integerAtIndex:a3]) == 0)
      {

        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
      }
      else
      {
        id v12 = [self domainVersionWithVersion:v11];

        *(void *)(a4 + 24) = sub_1003923E8();
        *(void *)a4 = v12;
      }
      return;
    }
LABEL_10:
    sub_1007B2780(a1, a2, a3, a4);
    return;
  }
  if (v8 != 2) {
    goto LABEL_10;
  }
  if (a2 != 66)
  {
    if (a2 == 67)
    {
      id v9 = [a1 unsignedLongAtIndex:a3];
      *(void *)(a4 + 24) = &type metadata for UInt;
      *(void *)a4 = v9;
      return;
    }
    goto LABEL_10;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  long long v15 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v14 + 16);
  *(void *)(a4 + 24) = AssociatedTypeWitness;
  sub_10009C958((uint64_t *)a4);
  v15(a1, a3, AssociatedTypeWitness, v14);
  if (v4) {
    sub_10017D150(a4);
  }
}

uint64_t sub_10044DAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v40[0] = &_s9SQLFieldsON_1;
  v40[1] = a2;
  uint64_t v34 = (void *)sub_100392394();
  v40[2] = v34;
  v40[3] = a3;
  uint64_t v8 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v33 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)&v28 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  id v13 = (char *)&v28 - v12;
  LOBYTE(v40[0]) = 66;
  uint64_t v14 = sub_100391750(a2, AssociatedTypeWitness);
  uint64_t v15 = a2;
  uint64_t v36 = a1;
  long long v16 = v37;
  sub_1006FCBE4((uint64_t)v40, v14, a2, AssociatedTypeWitness, a3);
  if (!v16)
  {
    uint64_t v31 = v10;
    uint64_t v32 = AssociatedTypeWitness;
    uint64_t v37 = v13;
    uint64_t v30 = v4;
    LOBYTE(v41) = 67;
    sub_100391750(a2, (uint64_t)&type metadata for UInt);
    sub_1006FCBE4((uint64_t)&v41, (uint64_t)&type metadata for UInt, a2, (uint64_t)&type metadata for UInt, a3);
    uint64_t v17 = v40[0];
    LOBYTE(v39) = -127;
    uint64_t v18 = sub_10002B7CC((uint64_t *)&unk_100AD6860);
    sub_100391750(v15, v18);
    sub_1006FCBE4((uint64_t)&v39, v18, v15, v18, a3);
    uint64_t v19 = (uint64_t)v37;
    uint64_t v20 = v32;
    uint64_t v29 = v17;
    long long v21 = v41;
    uint64_t v22 = (uint64_t)v31;
    sub_1006FD068((uint64_t)sub_100391758, 0, v15, (uint64_t)&_s9SQLFieldsON_1, a3, (uint64_t)v34, (uint64_t)v31);
    uint64_t v23 = v8;
    uint64_t WitnessTable = swift_getWitnessTable();
    long long v26 = sub_1007B28C0(v22, v8, WitnessTable);
    uint64_t v28 = v27;
    uint64_t v34 = v21;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v22, v23);
    char v38 = 65;
    sub_100391750(v15, (uint64_t)&type metadata for JobReason);
    sub_1006FCBE4((uint64_t)&v38, (uint64_t)&type metadata for JobReason, v15, (uint64_t)&type metadata for JobReason, a3);
    sub_10042B3C4(v19, v29, v34, (uint64_t)v26, v28, v39);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v19, v20);
    a1 = sub_1007B70D8(v36, v15, a3);
    swift_retain();
    swift_release();
  }
  return a1;
}

uint64_t sub_10044DF68(unsigned __int8 *a1, void *a2)
{
  return sub_10044D764(*a1, a2);
}

void sub_10044DF90(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_10044DFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_10044DAFC(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void *sub_10044DFD8(unsigned __int8 a1, id a2)
{
  id v4 = a2;
  int v5 = (void *)*v2;
  int v6 = a1 >> 5;
  if (v6 == 4)
  {
    if (a1 == 128)
    {
      uint64_t v14 = *(void *)((char *)v2 + v5[80]);
      v20[3] = &type metadata for Int;
      v20[0] = v14;
      char v2 = (void *)sub_1003AC444((uint64_t)v20);
      id v4 = v15;
      sub_10017D1A4((uint64_t)v20);
      if (v4) {
        return v2;
      }
      LODWORD(v19) = 0;
      uint64_t v18 = 213;
      sub_10096CE20();
      __break(1u);
    }
    else
    {
      if (a1 != 129)
      {
LABEL_10:
        uint64_t v10 = sub_1007B2514(a1, (uint64_t)a2);
        if (v3) {
          return v2;
        }
        return (void *)v10;
      }
      uint64_t v8 = *(void **)((char *)v2 + v5[73]);
      if (v8)
      {
        id v9 = [v8 version];
LABEL_17:
        id v7 = objc_msgSend(v4, "bindLongParameter:", v9, v18, v19);
        goto LABEL_18;
      }
    }
    id v9 = 0;
    goto LABEL_17;
  }
  if (v6 != 2) {
    goto LABEL_10;
  }
  if (a1 != 66)
  {
    if (a1 == 67)
    {
      id v7 = [a2 bindUnsignedLongParameter:*(void *)((char *)v2 + v5[79])];
LABEL_18:
      id v16 = v7;
      char v2 = (void *)_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

      return v2;
    }
    goto LABEL_10;
  }
  swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v12 = *(uint64_t (**)(id, uint64_t, uint64_t))(v11 + 32);
  uint64_t v13 = swift_checkMetadataState();
  return (void *)v12(v4, v13, v11);
}

void sub_10044E224(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8 = a2 >> 5;
  if (v8 == 4)
  {
    if (a2 == 128)
    {
      *(void *)(a4 + 24) = &type metadata for Fields;
      *(void *)a4 = [a1 longAtIndex:a3];
      return;
    }
    if (a2 != 129) {
      goto LABEL_11;
    }
    id v10 = a1;
    if (([v10 isNullAtIndex:a3] & 1) != 0
      || (id v11 = [v10 integerAtIndex:a3]) == 0)
    {

      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
    }
    else
    {
      id v12 = [self domainVersionWithVersion:v11];

      *(void *)(a4 + 24) = sub_1003923E8();
      *(void *)a4 = v12;
    }
  }
  else
  {
    if (v8 != 2)
    {
LABEL_11:
      sub_1007B2780(a1, a2, a3, a4);
      return;
    }
    if (a2 != 66)
    {
      if (a2 == 67)
      {
        id v9 = [a1 unsignedLongAtIndex:a3];
        *(void *)(a4 + 24) = &type metadata for UInt;
        *(void *)a4 = v9;
        return;
      }
      goto LABEL_11;
    }
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v14 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    uint64_t v15 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v14 + 16);
    *(void *)(a4 + 24) = AssociatedTypeWitness;
    sub_10009C958((uint64_t *)a4);
    v15(a1, a3, AssociatedTypeWitness, v14);
    if (v4) {
      sub_10017D150(a4);
    }
  }
}

uint64_t sub_10044E444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v41[0] = &_s9SQLFieldsON_1;
  v41[1] = a2;
  unint64_t v34 = sub_100392394();
  v41[2] = v34;
  v41[3] = a3;
  uint64_t v8 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v33 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)&v27 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v13 = (char *)&v27 - v12;
  LOBYTE(v41[0]) = 66;
  uint64_t v14 = sub_100391750(a2, AssociatedTypeWitness);
  uint64_t v36 = a1;
  uint64_t v15 = v37;
  sub_1006FCBE4((uint64_t)v41, v14, a2, AssociatedTypeWitness, a3);
  if (!v15)
  {
    uint64_t v31 = v10;
    uint64_t v32 = AssociatedTypeWitness;
    uint64_t v37 = v13;
    uint64_t v30 = v4;
    LOBYTE(v42) = 67;
    sub_100391750(a2, (uint64_t)&type metadata for UInt);
    sub_1006FCBE4((uint64_t)&v42, (uint64_t)&type metadata for UInt, a2, (uint64_t)&type metadata for UInt, a3);
    uint64_t v16 = v41[0];
    LOBYTE(v40) = 0x80;
    sub_100391750(a2, (uint64_t)&type metadata for Fields);
    sub_1006FCBE4((uint64_t)&v40, (uint64_t)&type metadata for Fields, a2, (uint64_t)&type metadata for Fields, a3);
    uint64_t v18 = v42;
    LOBYTE(v39) = -127;
    uint64_t v19 = sub_10002B7CC((uint64_t *)&unk_100AD6860);
    sub_100391750(a2, v19);
    sub_1006FCBE4((uint64_t)&v39, v19, a2, v19, a3);
    uint64_t v20 = (uint64_t)v37;
    uint64_t v21 = v32;
    uint64_t v28 = v18;
    uint64_t v29 = v40;
    uint64_t v22 = (uint64_t)v31;
    sub_1006FD068((uint64_t)sub_1003925B8, 0, a2, (uint64_t)&_s9SQLFieldsON_1, a3, v34, (uint64_t)v31);
    uint64_t v23 = v8;
    uint64_t WitnessTable = swift_getWitnessTable();
    long long v25 = sub_1007B28C0(v22, v8, WitnessTable);
    unint64_t v34 = v26;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v22, v23);
    char v38 = 65;
    sub_100391750(a2, (uint64_t)&type metadata for JobReason);
    sub_1006FCBE4((uint64_t)&v38, (uint64_t)&type metadata for JobReason, a2, (uint64_t)&type metadata for JobReason, a3);
    sub_10042BB6C(v20, v16, v28, v29, (uint64_t)v25, v34, v39);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v20, v21);
    a1 = sub_1007B70D8(v36, a2, a3);
    swift_retain();
    swift_release();
  }
  return a1;
}

void *sub_10044E900(unsigned __int8 *a1, void *a2)
{
  return sub_10044DFD8(*a1, a2);
}

void sub_10044E928(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_10044E944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_10044E444(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_10044E970(unsigned __int8 a1, id a2)
{
  int v4 = a1 >> 5;
  if (v4 != 4)
  {
    if (v4 == 2 && a1 == 66)
    {
      swift_getAssociatedTypeWitness();
      uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      int v6 = *(uint64_t (**)(id, uint64_t, uint64_t))(v5 + 32);
      uint64_t v7 = swift_checkMetadataState();
      return v6(a2, v7, v5);
    }
    return sub_1007B2514(a1, (uint64_t)a2);
  }
  if (a1 != 129) {
    return sub_1007B2514(a1, (uint64_t)a2);
  }
  uint64_t v9 = *(void **)(v2 + *(void *)(*(void *)v2 + 584));
  if (v9) {
    id v10 = [v9 version];
  }
  else {
    id v10 = 0;
  }
  id v11 = [a2 bindLongParameter:v10];
  uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  return v12;
}

void sub_10044EAF0(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8 = a2 >> 5;
  if (v8 != 4)
  {
    if (v8 == 2 && a2 == 66)
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v10 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      id v11 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v10 + 16);
      *(void *)(a4 + 24) = AssociatedTypeWitness;
      sub_10009C958((uint64_t *)a4);
      v11(a1, a3, AssociatedTypeWitness, v10);
      if (v4) {
        sub_10017D150(a4);
      }
      return;
    }
LABEL_10:
    sub_1007B2780(a1, a2, a3, a4);
    return;
  }
  if (a2 != 129) {
    goto LABEL_10;
  }
  id v12 = a1;
  if (([v12 isNullAtIndex:a3] & 1) != 0
    || (id v13 = [v12 integerAtIndex:a3]) == 0)
  {

    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  else
  {
    id v14 = [self domainVersionWithVersion:v13];

    *(void *)(a4 + 24) = sub_1003923E8();
    *(void *)a4 = v14;
  }
}

uint64_t sub_10044ECB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v37[0] = &_s9SQLFieldsON_1;
  v37[1] = a2;
  unint64_t v32 = sub_100392394();
  v37[2] = v32;
  v37[3] = a3;
  uint64_t v8 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v31 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  id v13 = (char *)&v29 - v12;
  LOBYTE(v37[0]) = 66;
  uint64_t v14 = sub_100391750(a2, AssociatedTypeWitness);
  uint64_t v15 = a2;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v34 = a1;
  uint64_t v18 = (uint64_t)v35;
  sub_1006FCBE4((uint64_t)v37, v14, v16, AssociatedTypeWitness, a3);
  if (!v18)
  {
    uint64_t v29 = v4;
    uint64_t v30 = AssociatedTypeWitness;
    uint64_t v35 = v13;
    LOBYTE(v38) = -127;
    uint64_t v19 = sub_10002B7CC((uint64_t *)&unk_100AD6860);
    uint64_t v20 = v15;
    uint64_t v21 = v17;
    sub_100391750(v15, v19);
    sub_1006FCBE4((uint64_t)&v38, v19, v15, v19, v17);
    uint64_t v22 = (void *)v37[0];
    sub_1006FD068((uint64_t)sub_1003925B8, 0, v20, (uint64_t)&_s9SQLFieldsON_1, v17, v32, (uint64_t)v10);
    uint64_t WitnessTable = swift_getWitnessTable();
    long long v24 = sub_1007B28C0((uint64_t)v10, v8, WitnessTable);
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
    char v36 = 65;
    sub_100391750(v20, (uint64_t)&type metadata for JobReason);
    sub_1006FCBE4((uint64_t)&v36, (uint64_t)&type metadata for JobReason, v20, (uint64_t)&type metadata for JobReason, v21);
    uint64_t v27 = (uint64_t)v35;
    sub_10042B714((uint64_t)v35, v22, (uint64_t)v24, v26, v38);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v27, v30);
    uint64_t v15 = sub_1007B70D8(v34, v20, v21);
    swift_retain();
    swift_release();
  }
  return v15;
}

uint64_t sub_10044F0D8(unsigned __int8 *a1, void *a2)
{
  return sub_10044E970(*a1, a2);
}

void sub_10044F100(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_10044F11C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_10044ECB0(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_10044F148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  id v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v24 - v15;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v14, 1, v17) == 1)
  {
    uint64_t v18 = sub_10096C890();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
    uint64_t v19 = type metadata accessor for ItemPropagationResult();
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    return v20(a5, 1, 1, v19);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
    v22(v16, a1, a4);
    v22(v13, (uint64_t)v16, a4);
    v22(a5, (uint64_t)v13, a4);
    uint64_t v23 = type metadata accessor for ItemPropagationResult();
    *(void *)&a5[*(int *)(v23 + 36)] = a2;
    a5[*(int *)(v23 + 40)] = a3 & 1;
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a5, 0, 1, v23);
  }
}

uint64_t *FileTreeWriter.deinit()
{
  unint64_t v0 = (uint64_t *)FileTree.deinit();
  sub_1000705CC(v0[2]);
  sub_1000705CC(v0[4]);
  sub_1000705CC(v0[6]);
  sub_1000705CC(v0[8]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000705CC(v0[15]);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10044F42C()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_10044F434(uint64_t result)
{
  *(unsigned char *)(v1 + 112) = result;
  return result;
}

uint64_t sub_10044F43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = *v7;
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = v14 + 136;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), void *))(v14 + 136);
  v15[2] = *(void *)(v16 + 56);
  v15[3] = *(void *)(v16 + 64);
  v15[4] = a6;
  v15[5] = a7;
  swift_retain();
  v17(a1, a2, a3, a5, sub_100455088, v15);

  return swift_release();
}

uint64_t sub_10044F528@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v3(a1, 1, 1, AssociatedTypeWitness);
}

void sub_10044F5D0()
{
}

void sub_10044F634()
{
}

void sub_10044F698()
{
}

void sub_10044F6FC()
{
}

void sub_10044F760()
{
}

void sub_10044F7C4()
{
}

void sub_10044F828()
{
}

void sub_10044F88C()
{
}

void sub_10044F8F0()
{
}

uint64_t sub_10044F954(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(0);
}

void sub_10044F980()
{
}

void sub_10044F9E4()
{
}

void sub_10044FA48()
{
}

void sub_10044FAAC()
{
}

uint64_t sub_10044FB10()
{
  uint64_t v1 = v0[2];
  v0[2] = 0;
  v0[3] = 0;
  sub_1000705CC(v1);
  uint64_t v2 = v0[6];
  v0[6] = 0;
  v0[7] = 0;

  return sub_1000705CC(v2);
}

void sub_10044FB48()
{
}

void sub_10044FBAC()
{
}

uint64_t FileTreeWriterCollisionOptions.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_10044FC18()
{
  return sub_1006F0100(*v0);
}

uint64_t sub_10044FC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006F0D10(a1, a2, a3, *v3);
}

uint64_t sub_10044FC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for ItemPropagationResult();
  *(void *)(a5 + *(int *)(result + 36)) = a2;
  *(unsigned char *)(a5 + *(int *)(result + 40)) = a3;
  return result;
}

uint64_t fpfs_tempfile_pattern_t.description.getter(int a1)
{
  uint64_t result = 1701736302;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x65726F745353442ELL;
      break;
    case 2:
      uint64_t result = 0x656D75636F44534ELL;
      break;
    case 3:
      uint64_t result = 0x697461646E756F46;
      break;
    case 4:
      uint64_t result = 0x65636966664F534DLL;
      break;
    case 5:
      uint64_t result = 0x6E7953726F6C6F43;
      break;
    case 6:
      uint64_t result = 0x617469724BLL;
      break;
    case 7:
      uint64_t result = 0x7363616D45;
      break;
    case 8:
      uint64_t result = 0x6666457265746641;
      break;
    case 9:
      uint64_t result = 0x61727473756C6C49;
      break;
    case 10:
      uint64_t result = 0x706D6574726B6D61;
      break;
    case 11:
      uint64_t result = 5065046;
      break;
    default:
      type metadata accessor for fpfs_tempfile_pattern_t(0);
      sub_10096D380();
      __break(1u);
      JUMPOUT(0x10044FE4CLL);
  }
  return result;
}

uint64_t sub_10044FE7C()
{
  return fpfs_tempfile_pattern_t.description.getter(*v0);
}

uint64_t sub_10044FE84()
{
  return sub_10096C050();
}

uint64_t sub_10044FF14()
{
  return sub_10096BFE0();
}

uint64_t FileTreeWriter.wharf.getter()
{
  return swift_retain();
}

unint64_t sub_10044FF9C(unint64_t a1, char a2)
{
  if (a2)
  {
    unint64_t result = 0xD00000000000001DLL;
    switch(a1)
    {
      case 1uLL:
      case 2uLL:
        unint64_t result = 0xD000000000000029;
        break;
      case 3uLL:
        unint64_t result = 0x20646570706F7244;
        break;
      case 4uLL:
        unint64_t result = 0x204C5255746F6F72;
        break;
      case 5uLL:
        unint64_t result = 0xD000000000000014;
        break;
      case 6uLL:
        unint64_t result = 1953719668;
        break;
      case 7uLL:
        unint64_t result = 0xD000000000000013;
        break;
      case 8uLL:
        unint64_t result = 0xD000000000000019;
        break;
      default:
        return result;
    }
  }
  else
  {
    sub_10096CBD0(29);
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1004565E4(a1);
    uint64_t v4 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    int v6 = v5;

    v8._countAndFlagsBits = v4;
    v8._object = v6;
    sub_10096BDC0(v8);
    swift_bridgeObjectRelease();
    return 0xD00000000000001BLL;
  }
  return result;
}

unint64_t sub_100450160()
{
  return sub_10044FF9C(*(void *)v0, *(unsigned char *)(v0 + 8));
}

unint64_t sub_10045016C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  int v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v11 = (char *)&v29 - v10;
  __chkstk_darwin(v9);
  id v13 = (unsigned __int8 *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v14 + 16))(v13, v2, a1);
  unint64_t v15 = 0xD000000000000035;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      unint64_t v33 = 0;
      unint64_t v34 = 0xE000000000000000;
      sub_10096CBD0(20);
      v35._object = (void *)0x80000001009A1940;
      v35._countAndFlagsBits = 0xD000000000000012;
      sub_10096BDC0(v35);
      swift_getAssociatedConformanceWitness();
      goto LABEL_14;
    case 2u:
      int v20 = *v13;
      uint64_t v21 = *((void *)v13 + 1);
      unsigned __int8 v22 = v13[16];
      unint64_t v33 = 0;
      unint64_t v34 = 0xE000000000000000;
      sub_10096CBD0(18);
      if (v20) {
        v23._countAndFlagsBits = 0x6465727265666564;
      }
      else {
        v23._countAndFlagsBits = 0;
      }
      if (v20) {
        uint64_t v24 = (void *)0xE900000000000020;
      }
      else {
        uint64_t v24 = (void *)0xE000000000000000;
      }
      v23._object = v24;
      sub_10096BDC0(v23);
      swift_bridgeObjectRelease();
      v36._countAndFlagsBits = 0x7473207465736572;
      v36._object = (void *)0xEE00203A6D616572;
      sub_10096BDC0(v36);
      uint64_t v31 = v21;
      unsigned __int8 v32 = v22;
      type metadata accessor for FileTreeWriter.StreamResetReason();
      swift_getWitnessTable();
      sub_10096D270();
      return v33;
    case 3u:
      type metadata accessor for FileTreeWriter.StreamResetReason();
      uint64_t v25 = &v13[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v26 = *(void *)v25;
      LODWORD(v30) = v25[8];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      unint64_t v33 = 0;
      unint64_t v34 = 0xE000000000000000;
      sub_10096CBD0(19);
      v37._countAndFlagsBits = 0x62206E6163736572;
      v37._object = (void *)0xED000020776F6C65;
      sub_10096BDC0(v37);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      v38._countAndFlagsBits = 8250;
      v38._object = (void *)0xE200000000000000;
      sub_10096BDC0(v38);
      uint64_t v31 = v26;
      unsigned __int8 v32 = v30;
      swift_getWitnessTable();
LABEL_14:
      sub_10096D270();
      unint64_t v15 = v33;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      return v15;
    case 4u:
      return v15;
    case 5u:
      return 0xD000000000000030;
    case 6u:
      return 0xD000000000000013;
    default:
      uint64_t v16 = sub_10096C890();
      type metadata accessor for JobLockAggregator();
      sub_10096C890();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v29 = &v13[*(int *)(TupleTypeMetadata3 + 48)];
      if (!*(void *)&v13[*(int *)(TupleTypeMetadata3 + 64)])
      {
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
        unint64_t v33 = 0;
        unint64_t v34 = 0xE000000000000000;
        sub_10096CBD0(28);
        v19._countAndFlagsBits = 0xD00000000000001ALL;
        v19._object = (void *)0x80000001009A1980;
        goto LABEL_19;
      }
      swift_release();
      uint64_t v18 = v30;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v30 + 48))(v29, 1, v4) == 1)
      {
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
        unint64_t v33 = 0;
        unint64_t v34 = 0xE000000000000000;
        v19._countAndFlagsBits = 0x616863206D657469;
        v19._object = (void *)0xED0000206465676ELL;
LABEL_19:
        sub_10096BDC0(v19);
        swift_getAssociatedConformanceWitness();
        sub_10096D270();
        unint64_t v15 = v33;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
        (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v16 - 8) + 8))(v29, v16);
        return v15;
      }
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v18 + 32))(v6, v29, v4);
      unint64_t v33 = 0;
      unint64_t v34 = 0xE000000000000000;
      uint64_t v28 = v18;
      v39._countAndFlagsBits = 0x616863206D657469;
      v39._object = (void *)0xED0000206465676ELL;
      sub_10096BDC0(v39);
      sub_10096D270();
      unint64_t v15 = v33;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
      (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
      return v15;
  }
}

uint64_t sub_1004508B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 1, 1);
  }
  else
  {
    uint64_t v8 = sub_10096C890();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a2, v6, v8);
  }
}

uint64_t sub_100450A14(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a2;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v7 = sub_10096D510();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  sub_10096C890();
  uint64_t v11 = sub_10096D510();
  sub_1000C5150((void (*)(char *))sub_1004550AC, v11, (uint64_t)v10);
  v14(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100450B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for FileTreeWriter.ItemOrContinuation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t FileTreeWriter.lookupItem(by:lastKnownVersion:domainVersion:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)*v6;
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13[24];
  v14[3] = v13[25];
  v14[4] = a5;
  v14[5] = a6;
  uint64_t v15 = (void (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t (*)(uint64_t), void *))v13[63];
  swift_retain();
  v15(a1, a2, a3, 0, a4, sub_100451870, v14);

  return swift_release();
}

uint64_t sub_100450D44(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a2;
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v7 = sub_10096D510();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  uint64_t v11 = sub_10096D510();
  sub_1000C5150((void (*)(char *))sub_1004550B4, v11, (uint64_t)v10);
  v14(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_100450EC0()
{
}

void sub_100450F24()
{
}

void sub_100450F88()
{
}

void FileTreeWriter.provideFile(for:kind:expectedFileSize:lastKnownVersion:domainVersion:requestor:options:completion:)()
{
}

uint64_t FileTreeWriter.provideFile(for:kind:expectedFileSize:updating:domainVersion:requestor:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t *), uint64_t a10)
{
  uint64_t v34 = a5;
  Swift::String v36 = a9;
  uint64_t v37 = a10;
  uint64_t v11 = sub_10096A7B0();
  uint64_t v35 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v14 = sub_10096D510();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v32 = v14;
  uint64_t v33 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v32 - v16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v39 = v19;
  uint64_t v40 = AssociatedConformanceWitness;
  uint64_t v41 = v21;
  uint64_t v22 = type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v24 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v25 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v27 = (char *)&v32 - v26;
  *((void *)v27 + 6) = *(void *)(a4 + 48);
  long long v28 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)a4;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = *(_OWORD *)(a4 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))((char *)&v32 + *(int *)(v25 + 48) - v26, v34, v22);
  LODWORD(v38) = 45;
  sub_100243DB8(a4);
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_10002DBB4((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
  sub_10096ABD0();
  uint64_t v29 = sub_10096A790();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  *uint64_t v17 = v29;
  uint64_t v30 = v32;
  swift_storeEnumTagMultiPayload();
  v36(v17);
  (*(void (**)(uint64_t *, uint64_t))(v33 + 8))(v17, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v27, TupleTypeMetadata2);
}

void sub_100451470()
{
}

void sub_1004514D4()
{
}

void sub_100451538()
{
}

void sub_10045159C()
{
}

void sub_100451600()
{
}

void sub_100451664()
{
}

void sub_1004516C8()
{
}

void sub_10045172C()
{
}

uint64_t sub_100451790(uint64_t (*a1)(void))
{
  return a1(0);
}

uint64_t sub_1004517C0()
{
  sub_1000705CC(v0[2]);
  sub_1000705CC(v0[4]);
  sub_1000705CC(v0[6]);
  sub_1000705CC(v0[8]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000705CC(v0[15]);
  swift_release();

  return swift_release();
}

uint64_t sub_100451838()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100451870(uint64_t a1)
{
  return sub_100450D44(a1, *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t FileTreeWriter.__deallocating_deinit()
{
  FileTreeWriter.deinit();

  return swift_deallocClassInstance();
}

unint64_t sub_1004518AC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1004518DC();
  unint64_t result = sub_100451930();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1004518DC()
{
  unint64_t result = qword_100AD5930;
  if (!qword_100AD5930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5930);
  }
  return result;
}

unint64_t sub_100451930()
{
  unint64_t result = qword_100AD5938;
  if (!qword_100AD5938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5938);
  }
  return result;
}

unint64_t sub_100451988()
{
  unint64_t result = qword_100AD5940;
  if (!qword_100AD5940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5940);
  }
  return result;
}

unint64_t sub_1004519E0()
{
  unint64_t result = qword_100AD5948;
  if (!qword_100AD5948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5948);
  }
  return result;
}

unint64_t sub_100451A38()
{
  unint64_t result = qword_100AD5950;
  if (!qword_100AD5950)
  {
    sub_100033BE8(&qword_100AD5958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5950);
  }
  return result;
}

unint64_t sub_100451A98()
{
  unint64_t result = qword_100AD5960;
  if (!qword_100AD5960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5960);
  }
  return result;
}

unint64_t sub_100451AF0()
{
  unint64_t result = qword_100AD5968[0];
  if (!qword_100AD5968[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD5968);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTreeWriterCollisionOptions()
{
  return &type metadata for FileTreeWriterCollisionOptions;
}

uint64_t sub_100451B54()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100451BFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  }
  return v4;
}

uint64_t sub_100451CFC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_100451D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_100451DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_100451E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_100451EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_100451F38(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1004520A4);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_21:
        int v14 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v14 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v15 = *a1;
        }
        else {
          int v15 = *(_DWORD *)a1;
        }
        return v7 + (v15 | v14) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 2) {
    return ((v17 + 2147483646) & 0x7FFFFFFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_1004520B8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0xFE)
            {
              *(unsigned char *)(((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 8) = a2 + 1;
            }
            else
            {
              int v20 = *(void (**)(void))(v6 + 56);
              v20();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1004522BCLL);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for ItemPropagationResult()
{
  return sub_10014D080();
}

uint64_t sub_1004522FC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FileTreeWriter()
{
  return sub_10014D080();
}

uint64_t sub_100452380()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8);
    uint64_t result = sub_10096C890();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v6 = &v5;
      uint64_t v7 = v2 + 64;
      unsigned int v8 = &unk_100983488;
      swift_getTupleTypeLayout2();
      uint64_t v9 = &v4;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

char *sub_1004524A8(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unint64_t v13 = ((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13) {
    unint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v13 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v13 <= 0x11) {
    uint64_t v14 = 17;
  }
  else {
    uint64_t v14 = v13;
  }
  if (v14 > 3) {
    goto LABEL_15;
  }
  unsigned int v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  unsigned int v16 = v15 | 4;
  BOOL v20 = HIWORD(v15) == 0;
  uint64_t v17 = 2;
  if (!v20) {
    uint64_t v17 = 4;
  }
  if (v16 <= 0xFF) {
LABEL_15:
  }
    uint64_t v17 = 1;
  unint64_t v18 = v17 + v14;
  unsigned int v19 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  BOOL v20 = v18 <= 0x18 && ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) == 0;
  if (!v20 || v19 > 7)
  {
    uint64_t v22 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v22 + (((v19 | 7) + 16) & ~(unint64_t)(v19 | 7)));
    swift_retain();
    return a1;
  }
  if (v14 > 3)
  {
LABEL_29:
    unsigned int v25 = a2[v14];
    unsigned int v26 = v25 - 4;
    if (v25 < 4) {
      goto LABEL_52;
    }
    goto LABEL_34;
  }
  unsigned int v24 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (!HIWORD(v24))
  {
    if ((v24 | 4) > 0xFF)
    {
      unsigned int v25 = *(unsigned __int16 *)&a2[v14];
      unsigned int v26 = v25 - 4;
      if (v25 < 4) {
        goto LABEL_52;
      }
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  unsigned int v25 = *(_DWORD *)&a2[v14];
  unsigned int v26 = v25 - 4;
  if (v25 < 4)
  {
LABEL_52:
    switch(v25)
    {
      case 0u:
        uint64_t v32 = ~v10;
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        uint64_t v33 = (const void *)((unint64_t)&a2[v11] & v32);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v33, 1, v5))
        {
          memcpy((void *)((unint64_t)&a1[v11] & v32), v33, v12);
        }
        else
        {
          (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))((unint64_t)&a1[v11] & v32, v33, v5);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))((unint64_t)&a1[v11] & v32, 0, 1, v5);
        }
        *(void *)((((unint64_t)&a1[v11] & v32) + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v33 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
        swift_retain();
        if (v14 > 3) {
          goto LABEL_70;
        }
        unsigned int v41 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v41))
        {
          *(_DWORD *)&a1[v14] = 0;
        }
        else if ((v41 | 4) <= 0xFF)
        {
LABEL_70:
          a1[v14] = 0;
        }
        else
        {
          *(_WORD *)&a1[v14] = 0;
        }
        return a1;
      case 1u:
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        if (v14 > 3) {
          goto LABEL_64;
        }
        int v39 = 1;
        unsigned int v40 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v40)) {
          goto LABEL_76;
        }
        if ((v40 | 4) <= 0xFF) {
LABEL_64:
        }
          a1[v14] = 1;
        else {
          *(_WORD *)&a1[v14] = 1;
        }
        break;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        if (v14 > 3) {
          goto LABEL_58;
        }
        unsigned int v34 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v34))
        {
          *(_DWORD *)&a1[v14] = 2;
        }
        else if ((v34 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 2;
        }
        else
        {
LABEL_58:
          a1[v14] = 2;
        }
        return a1;
      case 3u:
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v35 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        char v36 = *(unsigned char *)(v35 + 8);
        unint64_t v37 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v37 = *(void *)v35;
        *(unsigned char *)(v37 + 8) = v36;
        if (v14 > 3) {
          goto LABEL_62;
        }
        unsigned int v38 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v38))
        {
          int v39 = 3;
LABEL_76:
          *(_DWORD *)&a1[v14] = v39;
        }
        else if ((v38 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 3;
        }
        else
        {
LABEL_62:
          a1[v14] = 3;
        }
        break;
      default:
        goto LABEL_42;
    }
    return a1;
  }
LABEL_34:
  if (v14 <= 3) {
    uint64_t v27 = v14;
  }
  else {
    uint64_t v27 = 4;
  }
  switch(v27)
  {
    case 1:
      int v28 = *a2;
      if (v14 >= 4) {
        goto LABEL_41;
      }
      goto LABEL_51;
    case 2:
      int v28 = *(unsigned __int16 *)a2;
      if (v14 < 4) {
        goto LABEL_51;
      }
      goto LABEL_41;
    case 3:
      int v28 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v14 < 4) {
        goto LABEL_51;
      }
      goto LABEL_41;
    case 4:
      int v28 = *(_DWORD *)a2;
      if (v14 < 4)
      {
LABEL_51:
        unsigned int v25 = (v28 | (v26 << (8 * v14))) + 4;
        goto LABEL_52;
      }
LABEL_41:
      unsigned int v25 = v28 + 4;
      if (v25 <= 3) {
        goto LABEL_52;
      }
LABEL_42:
      if (v14 > 3) {
        goto LABEL_46;
      }
      unsigned int v29 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      unsigned int v30 = v29 | 4;
      BOOL v20 = HIWORD(v29) == 0;
      uint64_t v31 = 2;
      if (!v20) {
        uint64_t v31 = 4;
      }
      if (v30 <= 0xFF) {
LABEL_46:
      }
        uint64_t v31 = 1;
      memcpy(a1, a2, v31 + v14);
      break;
    default:
      goto LABEL_52;
  }
  return a1;
}

uint64_t sub_100452A60(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(result - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(v3 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v10 = *(void *)(*(void *)(v3 - 8) + 64);
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(v3 - 8) + 64) + 1;
  }
  unint64_t v11 = ((v10 + ((v6 + v8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v6 > v11) {
    unint64_t v11 = *(void *)(*(void *)(result - 8) + 64);
  }
  unint64_t v12 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v11 <= v12) {
    unint64_t v11 = v12;
  }
  if (v11 <= 0x11) {
    unint64_t v11 = 17;
  }
  if (v11 > 3) {
    goto LABEL_11;
  }
  unsigned int v14 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
  if (HIWORD(v14))
  {
    unsigned int v13 = *(_DWORD *)&a1[v11];
  }
  else
  {
    if ((v14 | 4) <= 0xFF)
    {
LABEL_11:
      unsigned int v13 = a1[v11];
      goto LABEL_16;
    }
    unsigned int v13 = *(unsigned __int16 *)&a1[v11];
  }
LABEL_16:
  unsigned int v15 = v13 - 4;
  if (v13 >= 4)
  {
    if (v11 <= 3) {
      uint64_t v16 = v11;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        goto LABEL_25;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        goto LABEL_25;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_25;
      case 4:
        int v17 = *(_DWORD *)a1;
LABEL_25:
        int v18 = (v17 | (v15 << (8 * v11))) + 4;
        unsigned int v13 = v17 + 4;
        if (v11 < 4) {
          unsigned int v13 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 3 || v13 == 1)
  {
    uint64_t v21 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v5 + 8);
    return v21(a1, result);
  }
  else if (!v13)
  {
    uint64_t v19 = ~v8;
    (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, result);
    unint64_t v20 = (unint64_t)&a1[v9] & v19;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v20, 1, v3)) {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v20, v3);
    }
    return swift_release();
  }
  return result;
}

unsigned char *sub_100452D34(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unint64_t v13 = ((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13) {
    unint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v13 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v13 <= 0x11) {
    uint64_t v14 = 17;
  }
  else {
    uint64_t v14 = v13;
  }
  if (v14 > 3) {
    goto LABEL_14;
  }
  unsigned int v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (HIWORD(v15))
  {
    unsigned int v16 = *(_DWORD *)&a2[v14];
    unsigned int v17 = v16 - 4;
    if (v16 < 4) {
      goto LABEL_28;
    }
    goto LABEL_19;
  }
  if ((v15 | 4) <= 0xFF)
  {
LABEL_14:
    unsigned int v16 = a2[v14];
    unsigned int v17 = v16 - 4;
    if (v16 < 4) {
      goto LABEL_28;
    }
LABEL_19:
    if (v14 <= 3) {
      uint64_t v18 = v14;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *a2;
        if (v14 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 2:
        int v19 = *(unsigned __int16 *)a2;
        if (v14 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3:
        int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v14 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 4:
        int v19 = *(_DWORD *)a2;
        if (v14 < 4) {
LABEL_26:
        }
          v19 |= v17 << (8 * v14);
LABEL_27:
        unsigned int v16 = v19 + 4;
        break;
      default:
        goto LABEL_28;
    }
    goto LABEL_28;
  }
  unsigned int v16 = *(unsigned __int16 *)&a2[v14];
  unsigned int v17 = v16 - 4;
  if (v16 >= 4) {
    goto LABEL_19;
  }
LABEL_28:
  switch(v16)
  {
    case 0u:
      uint64_t v20 = ~v10;
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      uint64_t v21 = (const void *)((unint64_t)&a2[v11] & v20);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v21, 1, v5))
      {
        memcpy((void *)((unint64_t)&a1[v11] & v20), v21, v12);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))((unint64_t)&a1[v11] & v20, v21, v5);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))((unint64_t)&a1[v11] & v20, 0, 1, v5);
      }
      *(void *)((((unint64_t)&a1[v11] & v20) + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v21 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v14 <= 3)
      {
        unsigned int v33 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v33))
        {
          *(_DWORD *)&a1[v14] = 0;
          return a1;
        }
        if ((v33 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 0;
          return a1;
        }
      }
      a1[v14] = 0;
      return a1;
    case 1u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      if (v14 > 3) {
        goto LABEL_48;
      }
      int v31 = 1;
      unsigned int v32 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (HIWORD(v32)) {
        goto LABEL_60;
      }
      if ((v32 | 4) > 0xFF) {
        *(_WORD *)&a1[v14] = 1;
      }
      else {
LABEL_48:
      }
        a1[v14] = 1;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v14 <= 3)
      {
        unsigned int v22 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v22))
        {
          *(_DWORD *)&a1[v14] = 2;
          return a1;
        }
        if ((v22 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 2;
          return a1;
        }
      }
      a1[v14] = 2;
      return a1;
    case 3u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      unint64_t v23 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      char v24 = *(unsigned char *)(v23 + 8);
      unint64_t v25 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v25 = *(void *)v23;
      *(unsigned char *)(v25 + 8) = v24;
      if (v14 > 3) {
        goto LABEL_38;
      }
      unsigned int v26 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (!HIWORD(v26))
      {
        if ((v26 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 3;
          return a1;
        }
LABEL_38:
        a1[v14] = 3;
        return a1;
      }
      int v31 = 3;
LABEL_60:
      *(_DWORD *)&a1[v14] = v31;
      return a1;
    default:
      if (v14 > 3) {
        goto LABEL_43;
      }
      unsigned int v27 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      unsigned int v28 = v27 | 4;
      BOOL v29 = HIWORD(v27) == 0;
      uint64_t v30 = 2;
      if (!v29) {
        uint64_t v30 = 4;
      }
      if (v28 <= 0xFF) {
LABEL_43:
      }
        uint64_t v30 = 1;
      memcpy(a1, a2, v30 + v14);
      return a1;
  }
}

unsigned __int8 *sub_10045325C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unint64_t v13 = ((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13) {
    unint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v13 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v13 <= 0x11) {
    uint64_t v14 = 17;
  }
  else {
    uint64_t v14 = v13;
  }
  if (v14 > 3)
  {
LABEL_15:
    unsigned int v16 = a1[v14];
    unsigned int v17 = v16 - 4;
    if (v16 < 4) {
      goto LABEL_29;
    }
    goto LABEL_20;
  }
  unsigned int v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (!HIWORD(v15))
  {
    if ((v15 | 4) > 0xFF)
    {
      unsigned int v16 = *(unsigned __int16 *)&a1[v14];
      unsigned int v17 = v16 - 4;
      if (v16 < 4) {
        goto LABEL_29;
      }
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  unsigned int v16 = *(_DWORD *)&a1[v14];
  unsigned int v17 = v16 - 4;
  if (v16 < 4) {
    goto LABEL_29;
  }
LABEL_20:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *a1;
      if (v14 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v19 = *(unsigned __int16 *)a1;
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v14 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 4:
      int v19 = *(_DWORD *)a1;
      if (v14 < 4) {
LABEL_27:
      }
        v19 |= v17 << (8 * v14);
LABEL_28:
      unsigned int v16 = v19 + 4;
      break;
    default:
      break;
  }
LABEL_29:
  uint64_t v42 = ~v10;
  if (v16 == 3 || v16 == 1)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
    if (v14 > 3) {
      goto LABEL_40;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((unint64_t)&a1[v11] & v42, 1, v5))(*(void (**)(unint64_t, uint64_t))(v9 + 8))((unint64_t)&a1[v11] & v42, v5); {
      swift_release();
      }
    }
    if (v14 > 3)
    {
LABEL_40:
      unsigned int v21 = a2[v14];
      unsigned int v22 = v21 - 4;
      if (v21 < 4) {
        goto LABEL_67;
      }
      goto LABEL_45;
    }
  }
  unsigned int v20 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (!HIWORD(v20))
  {
    if ((v20 | 4) > 0xFF)
    {
      unsigned int v21 = *(unsigned __int16 *)&a2[v14];
      unsigned int v22 = v21 - 4;
      if (v21 < 4) {
        goto LABEL_67;
      }
      goto LABEL_45;
    }
    goto LABEL_40;
  }
  unsigned int v21 = *(_DWORD *)&a2[v14];
  unsigned int v22 = v21 - 4;
  if (v21 < 4)
  {
LABEL_67:
    switch(v21)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        BOOL v29 = (void *)((unint64_t)&a1[v11] & v42);
        uint64_t v30 = (const void *)((unint64_t)&a2[v11] & v42);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v30, 1, v5))
        {
          memcpy(v29, v30, v12);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v29, v30, v5);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v29, 0, 1, v5);
        }
        *(void *)(((unint64_t)v29 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30
                                                                                           + v12
                                                                                           + 7) & 0xFFFFFFFFFFFFFFF8);
        swift_retain();
        if (v14 > 3) {
          goto LABEL_85;
        }
        unsigned int v40 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v40))
        {
          *(_DWORD *)&a1[v14] = 0;
        }
        else if ((v40 | 4) <= 0xFF)
        {
LABEL_85:
          a1[v14] = 0;
        }
        else
        {
          *(_WORD *)&a1[v14] = 0;
        }
        return a1;
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        if (v14 > 3) {
          goto LABEL_79;
        }
        int v37 = 1;
        unsigned int v38 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v38)) {
          goto LABEL_91;
        }
        if ((v38 | 4) <= 0xFF)
        {
LABEL_79:
          a1[v14] = 1;
          return a1;
        }
        __int16 v39 = 1;
        goto LABEL_95;
      case 2u:
        long long v31 = *(_OWORD *)a2;
        a1[16] = a2[16];
        *(_OWORD *)a1 = v31;
        if (v14 > 3) {
          goto LABEL_73;
        }
        unsigned int v32 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v32))
        {
          *(_DWORD *)&a1[v14] = 2;
          return a1;
        }
        if ((v32 | 4) <= 0xFF)
        {
LABEL_73:
          a1[v14] = 2;
          return a1;
        }
        __int16 v39 = 2;
        goto LABEL_95;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v33 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        char v34 = *(unsigned char *)(v33 + 8);
        unint64_t v35 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v35 = *(void *)v33;
        *(unsigned char *)(v35 + 8) = v34;
        if (v14 > 3) {
          goto LABEL_77;
        }
        unsigned int v36 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v36))
        {
          int v37 = 3;
LABEL_91:
          *(_DWORD *)&a1[v14] = v37;
        }
        else if ((v36 | 4) > 0xFF)
        {
          __int16 v39 = 3;
LABEL_95:
          *(_WORD *)&a1[v14] = v39;
        }
        else
        {
LABEL_77:
          a1[v14] = 3;
        }
        break;
      default:
        goto LABEL_53;
    }
    return a1;
  }
LABEL_45:
  if (v14 <= 3) {
    uint64_t v23 = v14;
  }
  else {
    uint64_t v23 = 4;
  }
  switch(v23)
  {
    case 1:
      int v24 = *a2;
      if (v14 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_66;
    case 2:
      int v24 = *(unsigned __int16 *)a2;
      if (v14 < 4) {
        goto LABEL_66;
      }
      goto LABEL_52;
    case 3:
      int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v14 < 4) {
        goto LABEL_66;
      }
      goto LABEL_52;
    case 4:
      int v24 = *(_DWORD *)a2;
      if (v14 < 4)
      {
LABEL_66:
        unsigned int v21 = (v24 | (v22 << (8 * v14))) + 4;
        goto LABEL_67;
      }
LABEL_52:
      unsigned int v21 = v24 + 4;
      if (v21 <= 3) {
        goto LABEL_67;
      }
LABEL_53:
      if (v14 > 3) {
        goto LABEL_57;
      }
      unsigned int v25 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      unsigned int v26 = v25 | 4;
      BOOL v27 = HIWORD(v25) == 0;
      uint64_t v28 = 2;
      if (!v27) {
        uint64_t v28 = 4;
      }
      if (v26 <= 0xFF) {
LABEL_57:
      }
        uint64_t v28 = 1;
      memcpy(a1, a2, v28 + v14);
      break;
    default:
      goto LABEL_67;
  }
  return a1;
}

unsigned char *sub_100453964(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  int v13 = *(_DWORD *)(v9 + 84);
  uint64_t v14 = *(void *)(v9 + 64);
  if (v13) {
    size_t v15 = *(void *)(v9 + 64);
  }
  else {
    size_t v15 = v14 + 1;
  }
  unint64_t v16 = ((((v8 + v11) & ~v11) + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v16) {
    unint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v16 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v16 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v16 <= 0x11) {
    uint64_t v17 = 17;
  }
  else {
    uint64_t v17 = v16;
  }
  if (v17 > 3) {
    goto LABEL_14;
  }
  unsigned int v18 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
  if (HIWORD(v18))
  {
    unsigned int v19 = *(_DWORD *)&a2[v17];
    unsigned int v20 = v19 - 4;
    if (v19 < 4) {
      goto LABEL_28;
    }
    goto LABEL_19;
  }
  if ((v18 | 4) <= 0xFF)
  {
LABEL_14:
    unsigned int v19 = a2[v17];
    unsigned int v20 = v19 - 4;
    if (v19 < 4) {
      goto LABEL_28;
    }
LABEL_19:
    if (v17 <= 3) {
      uint64_t v21 = v17;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *a2;
        if (v17 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 2:
        int v22 = *(unsigned __int16 *)a2;
        if (v17 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3:
        int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v17 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 4:
        int v22 = *(_DWORD *)a2;
        if (v17 < 4) {
LABEL_26:
        }
          v22 |= v20 << (8 * v17);
LABEL_27:
        unsigned int v19 = v22 + 4;
        break;
      default:
        goto LABEL_28;
    }
    goto LABEL_28;
  }
  unsigned int v19 = *(unsigned __int16 *)&a2[v17];
  unsigned int v20 = v19 - 4;
  if (v19 >= 4) {
    goto LABEL_19;
  }
LABEL_28:
  switch(v19)
  {
    case 0u:
      uint64_t v23 = ~v11;
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      __dst = (void *)((unint64_t)&a1[v12] & v23);
      int v24 = (const void *)((unint64_t)&a2[v12] & v23);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v24, 1, v5))
      {
        memcpy(__dst, v24, v15);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(__dst, v24, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v5);
      }
      uint64_t v36 = 7;
      if (!v13) {
        uint64_t v36 = 8;
      }
      *(void *)(((unint64_t)__dst + v14 + v36) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v24
                                                                                             + v14
                                                                                             + v36) & 0xFFFFFFFFFFFFFFF8);
      if (v17 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
        if (HIWORD(v37))
        {
          *(_DWORD *)&a1[v17] = 0;
          return a1;
        }
        if ((v37 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v17] = 0;
          return a1;
        }
      }
      a1[v17] = 0;
      return a1;
    case 1u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      if (v17 > 3) {
        goto LABEL_48;
      }
      int v34 = 1;
      unsigned int v35 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
      if (HIWORD(v35)) {
        goto LABEL_62;
      }
      if ((v35 | 4) > 0xFF) {
        *(_WORD *)&a1[v17] = 1;
      }
      else {
LABEL_48:
      }
        a1[v17] = 1;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v17 <= 3)
      {
        unsigned int v25 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
        if (HIWORD(v25))
        {
          *(_DWORD *)&a1[v17] = 2;
          return a1;
        }
        if ((v25 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v17] = 2;
          return a1;
        }
      }
      a1[v17] = 2;
      return a1;
    case 3u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      unint64_t v26 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      char v27 = *(unsigned char *)(v26 + 8);
      unint64_t v28 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v28 = *(void *)v26;
      *(unsigned char *)(v28 + 8) = v27;
      if (v17 > 3) {
        goto LABEL_38;
      }
      unsigned int v29 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
      if (!HIWORD(v29))
      {
        if ((v29 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v17] = 3;
          return a1;
        }
LABEL_38:
        a1[v17] = 3;
        return a1;
      }
      int v34 = 3;
LABEL_62:
      *(_DWORD *)&a1[v17] = v34;
      return a1;
    default:
      if (v17 > 3) {
        goto LABEL_43;
      }
      unsigned int v30 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
      unsigned int v31 = v30 | 4;
      BOOL v32 = HIWORD(v30) == 0;
      uint64_t v33 = 2;
      if (!v32) {
        uint64_t v33 = 4;
      }
      if (v31 <= 0xFF) {
LABEL_43:
      }
        uint64_t v33 = 1;
      memcpy(a1, a2, v33 + v17);
      return a1;
  }
}

unsigned __int8 *sub_100453EA4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v50 = v8 + v10;
  unint64_t v11 = (v8 + v10) & ~v10;
  size_t v12 = *(void *)(v9 + 64);
  int v46 = *(_DWORD *)(v9 + 84);
  size_t v47 = v12;
  if (!v46) {
    ++v12;
  }
  size_t __n = v12;
  unint64_t v13 = ((v12 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13) {
    unint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unint64_t v14 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v13 <= v14) {
    unint64_t v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v13 <= 0x11) {
    uint64_t v15 = 17;
  }
  else {
    uint64_t v15 = v13;
  }
  if (v15 > 3)
  {
LABEL_14:
    unsigned int v17 = a1[v15];
    unsigned int v18 = v17 - 4;
    if (v17 < 4) {
      goto LABEL_28;
    }
    goto LABEL_19;
  }
  unsigned int v16 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
  if (!HIWORD(v16))
  {
    if ((v16 | 4) > 0xFF)
    {
      unsigned int v17 = *(unsigned __int16 *)&a1[v15];
      unsigned int v18 = v17 - 4;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  unsigned int v17 = *(_DWORD *)&a1[v15];
  unsigned int v18 = v17 - 4;
  if (v17 < 4) {
    goto LABEL_28;
  }
LABEL_19:
  if (v15 <= 3) {
    uint64_t v19 = v15;
  }
  else {
    uint64_t v19 = 4;
  }
  switch(v19)
  {
    case 1:
      int v20 = *a1;
      if (v15 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 2:
      int v20 = *(unsigned __int16 *)a1;
      if (v15 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 3:
      int v20 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v15 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 4:
      int v20 = *(_DWORD *)a1;
      if (v15 < 4) {
LABEL_26:
      }
        v20 |= v18 << (8 * v15);
LABEL_27:
      unsigned int v17 = v20 + 4;
      break;
    default:
      break;
  }
LABEL_28:
  uint64_t v49 = ~v10;
  if (v17 == 3 || v17 == 1)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
    if (v15 > 3) {
      goto LABEL_39;
    }
  }
  else
  {
    if (!v17)
    {
      unint64_t v45 = (v8 + v10) & ~v10;
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((unint64_t)&a1[v50] & v49, 1, v5))(*(void (**)(unint64_t, uint64_t))(v9 + 8))((unint64_t)&a1[v50] & v49, v5); {
      swift_release();
      }
      unint64_t v11 = v45;
    }
    if (v15 > 3)
    {
LABEL_39:
      unsigned int v22 = a2[v15];
      unsigned int v23 = v22 - 4;
      if (v22 < 4) {
        goto LABEL_66;
      }
      goto LABEL_44;
    }
  }
  unsigned int v21 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
  if (!HIWORD(v21))
  {
    if ((v21 | 4) > 0xFF)
    {
      unsigned int v22 = *(unsigned __int16 *)&a2[v15];
      unsigned int v23 = v22 - 4;
      if (v22 < 4) {
        goto LABEL_66;
      }
      goto LABEL_44;
    }
    goto LABEL_39;
  }
  unsigned int v22 = *(_DWORD *)&a2[v15];
  unsigned int v23 = v22 - 4;
  if (v22 < 4)
  {
LABEL_66:
    switch(v22)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
        unsigned int v30 = (void *)((unint64_t)&a1[v50] & v49);
        unsigned int v31 = (const void *)((unint64_t)&a2[v50] & v49);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v31, 1, v5))
        {
          size_t v32 = __n;
          memcpy(v30, v31, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v30, v31, v5);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v30, 0, 1, v5);
          size_t v32 = __n;
        }
        uint64_t v41 = 7;
        if (!v46) {
          uint64_t v41 = 8;
        }
        *(void *)(((unint64_t)v30 + v47 + v41) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v31
                                                                                             + v47
                                                                                             + v41) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v42 = ((v11 + v32 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
        if (v8 > v42) {
          unint64_t v42 = v8;
        }
        if (v42 <= v14) {
          unint64_t v42 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
        }
        if (v42 <= 0x11) {
          unint64_t v42 = 17;
        }
        if (v42 > 3) {
          goto LABEL_92;
        }
        unsigned int v43 = ((1 << (8 * v42)) | 2u) >> (8 * v42);
        if (HIWORD(v43))
        {
          *(_DWORD *)&a1[v42] = 0;
        }
        else if ((v43 | 4) <= 0xFF)
        {
LABEL_92:
          a1[v42] = 0;
        }
        else
        {
          *(_WORD *)&a1[v42] = 0;
        }
        return a1;
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
        if (v15 > 3) {
          goto LABEL_78;
        }
        int v38 = 1;
        unsigned int v39 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
        if (HIWORD(v39)) {
          goto LABEL_98;
        }
        if ((v39 | 4) <= 0xFF)
        {
LABEL_78:
          a1[v15] = 1;
          return a1;
        }
        __int16 v40 = 1;
        goto LABEL_102;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        if (v15 > 3) {
          goto LABEL_72;
        }
        unsigned int v33 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
        if (HIWORD(v33))
        {
          *(_DWORD *)&a1[v15] = 2;
          return a1;
        }
        if ((v33 | 4) <= 0xFF)
        {
LABEL_72:
          a1[v15] = 2;
          return a1;
        }
        __int16 v40 = 2;
        goto LABEL_102;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
        unint64_t v34 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        char v35 = *(unsigned char *)(v34 + 8);
        unint64_t v36 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v36 = *(void *)v34;
        *(unsigned char *)(v36 + 8) = v35;
        if (v15 > 3) {
          goto LABEL_76;
        }
        unsigned int v37 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
        if (HIWORD(v37))
        {
          int v38 = 3;
LABEL_98:
          *(_DWORD *)&a1[v15] = v38;
        }
        else if ((v37 | 4) > 0xFF)
        {
          __int16 v40 = 3;
LABEL_102:
          *(_WORD *)&a1[v15] = v40;
        }
        else
        {
LABEL_76:
          a1[v15] = 3;
        }
        break;
      default:
        goto LABEL_52;
    }
    return a1;
  }
LABEL_44:
  if (v15 <= 3) {
    uint64_t v24 = v15;
  }
  else {
    uint64_t v24 = 4;
  }
  switch(v24)
  {
    case 1:
      int v25 = *a2;
      if (v15 >= 4) {
        goto LABEL_51;
      }
      goto LABEL_65;
    case 2:
      int v25 = *(unsigned __int16 *)a2;
      if (v15 < 4) {
        goto LABEL_65;
      }
      goto LABEL_51;
    case 3:
      int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v15 < 4) {
        goto LABEL_65;
      }
      goto LABEL_51;
    case 4:
      int v25 = *(_DWORD *)a2;
      if (v15 < 4)
      {
LABEL_65:
        unsigned int v22 = (v25 | (v23 << (8 * v15))) + 4;
        goto LABEL_66;
      }
LABEL_51:
      unsigned int v22 = v25 + 4;
      if (v22 <= 3) {
        goto LABEL_66;
      }
LABEL_52:
      if (v15 > 3) {
        goto LABEL_56;
      }
      unsigned int v26 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
      unsigned int v27 = v26 | 4;
      BOOL v28 = HIWORD(v26) == 0;
      uint64_t v29 = 2;
      if (!v28) {
        uint64_t v29 = 4;
      }
      if (v27 <= 0xFF) {
LABEL_56:
      }
        uint64_t v29 = 1;
      memcpy(a1, a2, v29 + v15);
      break;
    default:
      goto LABEL_66;
  }
  return a1;
}

uint64_t sub_1004545F4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v8 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v8 = *(void *)(v7 + 64) + 1;
  }
  unint64_t v9 = ((v8 + ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v6 > v9) {
    unint64_t v9 = v6;
  }
  if (v9 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v9 <= 0x11) {
    unint64_t v9 = 17;
  }
  if (v9 > 3)
  {
    unsigned int v10 = 5;
LABEL_14:
    char v12 = 8;
    goto LABEL_15;
  }
  unsigned int v11 = ((1 << (8 * v9)) | 2u) >> (8 * v9);
  if (HIWORD(v11)) {
    goto LABEL_18;
  }
  unsigned int v10 = v11 | 4;
  if (v10 <= 0xFF) {
    goto LABEL_14;
  }
  char v12 = 16;
LABEL_15:
  int v13 = (1 << v12) - v10;
  if (v13 >= 0)
  {
    if (v9 > 3) {
      goto LABEL_22;
    }
LABEL_19:
    unsigned int v14 = ((1 << (8 * v9)) | 2u) >> (8 * v9);
    unsigned int v15 = v14 | 4;
    BOOL v16 = HIWORD(v14) == 0;
    uint64_t v17 = 2;
    if (!v16) {
      uint64_t v17 = 4;
    }
    if (v15 > 0xFF) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_18:
  int v13 = 0x7FFFFFFF;
  if (v9 <= 3) {
    goto LABEL_19;
  }
LABEL_22:
  uint64_t v17 = 1;
LABEL_23:
  if (!a2) {
    return 0;
  }
  if (a2 <= v13) {
    goto LABEL_43;
  }
  unint64_t v18 = v17 + v9;
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v22 = ((a2 - v13 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      int v20 = *(_DWORD *)((char *)a1 + v18);
      if (!v20) {
        goto LABEL_43;
      }
      goto LABEL_35;
    }
    if (v22 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)((char *)a1 + v18);
      if (!*(unsigned __int16 *)((char *)a1 + v18)) {
        goto LABEL_43;
      }
      goto LABEL_35;
    }
    if (v22 < 2)
    {
LABEL_43:
      if (v9 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v9)) | 2u) >> (8 * v9);
        if (HIWORD(v30))
        {
          unsigned int v25 = *(_DWORD *)((char *)a1 + v9);
          unsigned int v26 = ~v25;
LABEL_51:
          int v29 = 0x7FFFFFFF;
LABEL_52:
          if (v29 > v26) {
            return -v25;
          }
          else {
            return 0;
          }
        }
        int v28 = v30 | 4;
        if ((v30 | 4) > 0xFF)
        {
          int v32 = *(unsigned __int16 *)((char *)a1 + v9);
          unsigned int v25 = v32 | 0xFFFF0000;
          unsigned int v26 = v32 ^ 0xFFFF;
          char v27 = 16;
        }
        else
        {
          int v31 = *((unsigned __int8 *)a1 + v9);
          unsigned int v25 = v31 | 0xFFFFFF00;
          unsigned int v26 = v31 ^ 0xFF;
          char v27 = 8;
        }
      }
      else
      {
        int v24 = *((unsigned __int8 *)a1 + v9);
        unsigned int v25 = v24 | 0xFFFFFF00;
        unsigned int v26 = v24 ^ 0xFF;
        char v27 = 8;
        int v28 = 5;
      }
      int v29 = (1 << v27) - v28;
      if (v29 >= 0) {
        goto LABEL_52;
      }
      goto LABEL_51;
    }
  }
  int v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((unsigned char *)a1 + v18)) {
    goto LABEL_43;
  }
LABEL_35:
  int v23 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v23 = 0;
  }
  if (v18)
  {
    if (v18 > 3) {
      LODWORD(v18) = 4;
    }
    switch((int)v18)
    {
      case 2:
        LODWORD(v18) = *a1;
        break;
      case 3:
        LODWORD(v18) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v18) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v18) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v13 + (v18 | v23) + 1;
}

void sub_100454918(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v9 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v10 = *(void *)(v9 + 64) + 1;
  }
  unint64_t v11 = ((v10 + ((v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 > v11) {
    unint64_t v11 = v8;
  }
  if (v11 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v11 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v11 <= 0x11) {
    unint64_t v11 = 17;
  }
  char v12 = 8 * v11;
  if (v11 > 3)
  {
    unsigned int v13 = 5;
LABEL_12:
    char v14 = 8;
    goto LABEL_13;
  }
  unsigned int v16 = ((1 << v12) | 2u) >> v12;
  if (HIWORD(v16)) {
    goto LABEL_19;
  }
  unsigned int v13 = v16 | 4;
  if (v13 <= 0xFF) {
    goto LABEL_12;
  }
  char v14 = 16;
LABEL_13:
  int v15 = (1 << v14) - v13;
  if (v15 >= 0)
  {
    if (v11 > 3) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v15 = 0x7FFFFFFF;
  if (v11 > 3)
  {
LABEL_23:
    uint64_t v20 = 1;
    goto LABEL_24;
  }
LABEL_20:
  unsigned int v17 = ((1 << v12) | 2u) >> v12;
  unsigned int v18 = v17 | 4;
  BOOL v19 = HIWORD(v17) == 0;
  uint64_t v20 = 2;
  if (!v19) {
    uint64_t v20 = 4;
  }
  if (v18 <= 0xFF) {
    goto LABEL_23;
  }
LABEL_24:
  size_t v21 = v20 + v11;
  if (a3 <= v15)
  {
    int v22 = 0;
  }
  else if (v21 <= 3)
  {
    unsigned int v25 = ((a3 - v15 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v25))
    {
      int v22 = 4;
    }
    else if (v25 >= 0x100)
    {
      int v22 = 2;
    }
    else
    {
      int v22 = v25 > 1;
    }
  }
  else
  {
    int v22 = 1;
  }
  if (v15 < a2)
  {
    unsigned int v23 = ~v15 + a2;
    if (v21 < 4)
    {
      int v24 = (v23 >> (8 * v21)) + 1;
      if (v21)
      {
        int v26 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if (v21 == 3)
        {
          *(_WORD *)a1 = v26;
          a1[2] = BYTE2(v26);
        }
        else if (v21 == 2)
        {
          *(_WORD *)a1 = v26;
        }
        else
        {
          *a1 = v26;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v21] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v21] = v24;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v21] = v24;
        return;
      default:
        return;
    }
  }
  switch(v22)
  {
    case 1:
      a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 2:
      *(_WORD *)&a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x100454C60);
    case 4:
      *(_DWORD *)&a1[v21] = 0;
      goto LABEL_43;
    default:
LABEL_43:
      if (!a2) {
        return;
      }
LABEL_44:
      int v27 = -a2;
      if (v11 > 3) {
        goto LABEL_45;
      }
      unsigned int v28 = ((1 << v12) | 2u) >> v12;
      if (HIWORD(v28))
      {
        *(_DWORD *)&a1[v11] = v27;
      }
      else if ((v28 | 4) <= 0xFF)
      {
LABEL_45:
        a1[v11] = v27;
      }
      else
      {
        *(_WORD *)&a1[v11] = v27;
      }
      return;
  }
}

uint64_t sub_100454C88(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(v3 - 8);
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v7 = ((v6 + ((v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v4 > v7) {
    unint64_t v7 = v4;
  }
  if (v7 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v7 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v7 <= 0x11) {
    unint64_t v7 = 17;
  }
  if (v7 > 3) {
    goto LABEL_11;
  }
  unsigned int v9 = ((1 << (8 * v7)) | 2u) >> (8 * v7);
  if (HIWORD(v9))
  {
    uint64_t result = *(unsigned int *)&a1[v7];
  }
  else
  {
    if ((v9 | 4) <= 0xFF)
    {
LABEL_11:
      uint64_t result = a1[v7];
      goto LABEL_16;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v7];
  }
LABEL_16:
  if (result >= 4)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_25;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_25;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_25;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_25:
        unsigned int v12 = (v11 | ((result - 4) << (8 * v7))) + 4;
        unsigned int v13 = v11 + 4;
        if (v7 >= 4) {
          uint64_t result = v13;
        }
        else {
          uint64_t result = v12;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_100454E3C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v8 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v8 = *(void *)(v7 + 64) + 1;
  }
  unint64_t v9 = ((v8 + ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v6 > v9) {
    unint64_t v9 = v6;
  }
  if (v9 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v9 <= 0x11) {
    size_t v10 = 17;
  }
  else {
    size_t v10 = v9;
  }
  if (a2 > 3)
  {
    unsigned int v11 = a2 - 4;
    if (v10 < 4)
    {
      int v13 = (v11 >> (8 * v10)) + 4;
      v11 &= ~(-1 << (8 * v10));
      char v14 = (int *)&a1[v10];
      unsigned int v15 = ((1 << (8 * v10)) | 2u) >> (8 * v10);
      if (HIWORD(v15))
      {
        *char v14 = v13;
      }
      else if ((v15 | 4) > 0xFF)
      {
        *(_WORD *)char v14 = v13;
      }
      else
      {
        *(unsigned char *)char v14 = v13;
      }
    }
    else
    {
      a1[v10] = 4;
    }
    if (v10 >= 4) {
      int v16 = 4;
    }
    else {
      int v16 = v10;
    }
    bzero(a1, v10);
    switch(v16)
    {
      case 2:
        *(_WORD *)a1 = v11;
        break;
      case 3:
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
        break;
      case 4:
        *(_DWORD *)a1 = v11;
        break;
      default:
        *a1 = v11;
        break;
    }
  }
  else
  {
    if (v10 > 3)
    {
LABEL_13:
      a1[v10] = a2;
      return;
    }
    unsigned int v12 = ((1 << (8 * v10)) | 2u) >> (8 * v10);
    if (HIWORD(v12))
    {
      *(_DWORD *)&a1[v10] = a2;
    }
    else
    {
      if ((v12 | 4) <= 0xFF) {
        goto LABEL_13;
      }
      *(_WORD *)&a1[v10] = a2;
    }
  }
}

uint64_t type metadata accessor for FileTreeWriter.FileTreeChange()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeWriter.StreamResetReason()
{
  return sub_10014D080();
}

uint64_t sub_100455088(uint64_t a1)
{
  return sub_100450A14(a1, *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for FileTreeWriter.ItemOrContinuation()
{
  return sub_10014D080();
}

uint64_t sub_1004550AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100450B90(a1, a2);
}

uint64_t sub_1004550B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FileTreeWriter.ItemOrContinuation();
  return sub_1004508B0(v2, a1);
}

uint64_t sub_1004550F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100455140(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t sub_1004551B0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t sub_100455200(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100455248(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FileTreeWriter.EventStreamBatch()
{
  return sub_10014D080();
}

uint64_t sub_1004552A0()
{
  uint64_t result = sub_10096C890();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_100455338(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  if (v7 <= 8) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = v7;
  }
  int v9 = *(_DWORD *)(v6 + 80);
  if ((v9 & 0x1000F8) != 0 || (unint64_t)(v8 + 1) > 0x18)
  {
    uint64_t v11 = *(void *)a2;
    void *v4 = *(void *)a2;
    unint64_t v4 = (void *)(v11 + ((unsigned __int16)((v9 & 0xF8) + 23) & (unsigned __int16)~(v9 & 0xF8) & 0x1F8));
LABEL_26:
    swift_retain();
    return v4;
  }
  unsigned int v12 = a2[v8];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v14 = v8;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_22;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_22;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_22:
        int v16 = (v15 | (v13 << (8 * v8))) + 2;
        unsigned int v12 = v15 + 2;
        if (v8 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v8) = 1;
    goto LABEL_26;
  }
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(v4, a2, v7);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(v4, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  }
  *((unsigned char *)v4 + v8) = 0;
  return v4;
}

uint64_t sub_100455538(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84)) {
    unint64_t v5 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v5 = *(void *)(v4 + 64) + 1;
  }
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_15;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_15:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    return swift_release();
  }
  else
  {
    uint64_t v13 = *(void *)(*(void *)(a2 + 16) - 8);
    uint64_t result = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!result)
    {
      unsigned int v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v13 + 8);
      return v12(a1, v3);
    }
  }
  return result;
}

void *sub_1004556D8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  if (v7 <= 8) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = v7;
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_16;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_16:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v8) = 1;
    swift_retain();
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

unsigned __int8 *sub_100455898(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    if (v7 <= 8) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = v7;
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          goto LABEL_17;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v12 = *(_DWORD *)a1;
LABEL_17:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      swift_release();
    }
    else if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v14 = a2[v8];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v16 = v8;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_32;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_32;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_32;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_32:
          int v18 = (v17 | (v15 << (8 * v8))) + 2;
          unsigned int v14 = v17 + 2;
          if (v8 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[v8] = 1;
      swift_retain();
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v7);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      a1[v8] = 0;
    }
  }
  return a1;
}

void *sub_100455B40(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  if (v7 <= 8) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = v7;
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_16;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_16:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    *a1 = *(void *)a2;
    char v14 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    char v14 = 0;
  }
  *((unsigned char *)a1 + v8) = v14;
  return a1;
}

unsigned __int8 *sub_100455CFC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    if (v7 <= 8) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = v7;
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          goto LABEL_17;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v12 = *(_DWORD *)a1;
LABEL_17:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      swift_release();
    }
    else if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v14 = a2[v8];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v16 = v8;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_32;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_32;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_32;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_32:
          int v18 = (v17 | (v15 << (8 * v8))) + 2;
          unsigned int v14 = v17 + 2;
          if (v8 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v19 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v7);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      char v19 = 0;
    }
    a1[v8] = v19;
  }
  return a1;
}

uint64_t sub_100455FA0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84)) {
    unint64_t v4 = *(void *)(v3 + 64);
  }
  else {
    unint64_t v4 = *(void *)(v3 + 64) + 1;
  }
  uint64_t v5 = 8;
  if (v4 > 8) {
    uint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_25;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v10 < 2)
    {
LABEL_25:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 2) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_25;
  }
LABEL_17:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 255;
}

void sub_10045610C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v7 = v6 + 1;
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << (8 * v7)) - 254) >> (8 * v7)) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v7 < 4)
    {
      int v10 = (v9 >> (8 * v7)) + 1;
      if (v6 != -1)
      {
        int v12 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v7] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v10;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x10045630CLL);
      case 4:
        *(_DWORD *)&a1[v7] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100456334(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84)) {
    unint64_t v3 = *(void *)(v2 + 64);
  }
  else {
    unint64_t v3 = *(void *)(v2 + 64) + 1;
  }
  uint64_t v4 = 8;
  if (v3 > 8) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = a1[v4];
  int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_15;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_15:
        unsigned int v9 = (v8 | (v6 << (8 * v4))) + 2;
        LODWORD(v5) = v8 + 2;
        if (v4 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v9;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_100456424(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  if (v6 <= 8) {
    size_t v7 = 8;
  }
  else {
    size_t v7 = v6;
  }
  if (a2 > 1)
  {
    unsigned int v8 = a2 - 2;
    if (v7 <= 3) {
      char v9 = (v8 >> (8 * v7)) + 2;
    }
    else {
      char v9 = 2;
    }
    if (v7 <= 3) {
      int v10 = v8 & ~(-1 << (8 * v7));
    }
    else {
      int v10 = v8;
    }
    a1[v7] = v9;
    if (v7 >= 4) {
      int v11 = 4;
    }
    else {
      int v11 = v7;
    }
    bzero(a1, v7);
    switch(v11)
    {
      case 2:
        *(_WORD *)a1 = v10;
        break;
      case 3:
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
        break;
      case 4:
        *(_DWORD *)a1 = v10;
        break;
      default:
        *a1 = v10;
        break;
    }
  }
  else
  {
    a1[v7] = a2;
  }
}

uint64_t getEnumTagSinglePayload for FPCKRunningMode(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FPCKRunningMode(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1004565A8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1004565C4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

__CFString *sub_1004565E4(unint64_t a1)
{
  if (a1 <= 0xA)
  {
    unint64_t v1 = off_100A8A640[a1];
    uint64_t v2 = off_100A8A5E8[a1];
  }

  return v1;
}

uint64_t sub_100456644(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_10002689C(a1, v4);
  if (!v3) {
    return sub_10059A0E8(0xD000000000000018, (void *)0x8000000100995F80, v4, v5);
  }
  sub_10096CBD0(25);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v27);
  swift_bridgeObjectRelease();
  sub_10059A0E8(0xD000000000000017, (void *)0x8000000100995F60, v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v20 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v21 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v26)
  {
    if (v8)
    {
      uint64_t v25 = (v8 - 1) & v8;
      int64_t v26 = i;
      unint64_t v10 = __clz(__rbit64(v8)) | (i << 6);
      uint64_t result = a2;
      goto LABEL_6;
    }
    int64_t v16 = i + 1;
    uint64_t result = a2;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v21) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v20 + 8 * v16);
    int64_t v18 = i + 1;
    if (!v17)
    {
      int64_t v18 = i + 2;
      if (i + 2 >= v21) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v20 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = i + 3;
        if (i + 3 >= v21) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v20 + 8 * v18);
        if (!v17) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v25 = (v17 - 1) & v17;
    int64_t v26 = v18;
    unint64_t v10 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_6:
    uint64_t v12 = *(void *)(result + 48) + 56 * v10;
    int v13 = *(void **)v12;
    char v14 = *(unsigned char *)(v12 + 9);
    uint64_t v23 = a1[3];
    uint64_t v24 = a1[4];
    uint64_t v15 = *(unsigned __int8 *)(v12 + 8);
    sub_10002689C(a1, v23);
    sub_10009C394(v13, v15, v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = 538976288;
    v28._object = (void *)0xE400000000000000;
    sub_10096BDC0(v28);
    sub_10002B7CC(&qword_100AD20A8);
    sub_10096CDF0();
    v29._countAndFlagsBits = 8250;
    v29._object = (void *)0xE200000000000000;
    sub_10096BDC0(v29);
    sub_10096CDF0();
    swift_bridgeObjectRelease();
    sub_10059A0E8(0, (void *)0xE000000000000000, v23, v24);
    swift_bridgeObjectRelease();
    sub_1000D30C4(v13, v15, v14);
    swift_bridgeObjectRelease();
    unint64_t v8 = v25;
  }
  uint64_t v19 = i + 4;
  if (i + 4 >= v21) {
    return swift_release();
  }
  unint64_t v17 = *(void *)(v20 + 8 * v19);
  if (v17)
  {
    int64_t v18 = i + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v21) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v20 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1004569C8(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v104 = a1;
  uint64_t v103 = a4;
  uint64_t v6 = *(uint8_t **)(*(void *)a3 + 584);
  uint64_t v7 = *(void *)(*(void *)a3 + 592);
  uint64_t v8 = *(void *)(*(void *)a3 + 600);
  uint64_t v111 = *(void *)(*(void *)a3 + 576);
  uint64_t v5 = v111;
  uint64_t v112 = (uint64_t)v6;
  uint64_t v113 = v7;
  uint64_t v114 = v8;
  uint64_t v110 = (void *)type metadata accessor for ItemReconciliation();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v102 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v10 = __chkstk_darwin(TupleTypeMetadata3);
  uint64_t v95 = (char *)v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v96 = (char *)v89 - v12;
  uint64_t v105 = v13;
  uint64_t v100 = sub_10096C890();
  unint64_t v99 = *(void (***)(char *, uint64_t))(v100 - 8);
  uint64_t v14 = __chkstk_darwin(v100);
  unint64_t v97 = (char *)v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v98 = (uint64_t)v89 - v17;
  __chkstk_darwin(v16);
  id v101 = (char *)v89 - v18;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v106 = v7;
  uint64_t v21 = v8;
  uint64_t v108 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  Swift::String v107 = v6;
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t v111 = AssociatedTypeWitness;
  uint64_t v112 = v20;
  uint64_t v113 = AssociatedConformanceWitness;
  uint64_t v114 = v23;
  uint64_t v24 = type metadata accessor for ReconciliationID();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  Swift::String v28 = (char *)v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26);
  int v31 = (char *)v89 - v30;
  __chkstk_darwin(v29);
  unsigned int v33 = (char *)v89 - v32;
  uint64_t v34 = v109;
  sub_10082CFA4((uint64_t)a3, 0, 0, 3, v110, v115);
  if (!v34)
  {
    uint64_t v91 = v28;
    uint64_t v92 = v31;
    uint64_t v94 = v25;
    uint64_t v109 = v24;
    uint64_t v35 = v105;
    unint64_t v36 = v107;
    uint64_t v37 = v108;
    if (v115[0])
    {
      LODWORD(v110) = v116;
      LODWORD(v101) = 253;
LABEL_6:
      swift_errorRetain();
      swift_errorRetain();
      int v38 = (void *)sub_10096ABE0();
      type metadata accessor for FPCK(0);
      sub_10047DDF4(v119, v37, v36, v106, v21, v33);
      uint64_t v93 = 0;
      swift_errorRelease();
      (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v104, v33, v109);
      uint64_t v39 = 0;
      uint64_t v40 = v103;
      char v41 = (char)v110;
LABEL_7:
      id v42 = [v38 domain];
      uint64_t v43 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v45 = v44;

      id v46 = [v38 code];
      swift_errorRelease();
      sub_1004A5120((uint64_t)v115);

      *(void *)uint64_t v40 = v43;
      *(void *)(v40 + 8) = v45;
      *(void *)(v40 + 16) = v46;
      *(void *)(v40 + 24) = v39;
      *(unsigned char *)(v40 + 32) = (_BYTE)v101;
      *(unsigned char *)(v40 + 33) = v41;
      return;
    }
    if (v117)
    {
      LODWORD(v110) = v118;
      swift_errorRetain();
      LODWORD(v101) = 252;
      goto LABEL_6;
    }
    uint64_t v93 = 0;
    swift_errorRetain();
    uint64_t v47 = v109;
    uint64_t v48 = sub_10096C110();
    if (sub_10096C1B0())
    {
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v50 = (void *)sub_1003FB210(v48, v47, WitnessTable);
    }
    else
    {
      uint64_t v50 = &_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRelease();
    uint64_t v111 = (uint64_t)v50;
    uint64_t v51 = v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56))(v101, 1, 1, v35);
    uint64_t v52 = type metadata accessor for FPCK(0);
    __chkstk_darwin(v52);
    v89[-6] = v37;
    v89[-5] = v36;
    v89[-4] = v106;
    v89[-3] = v21;
    v89[-2] = &v111;
    uint64_t v53 = v98;
    uint64_t v54 = v93;
    sub_100474B40(v119, a3, 0, (uint64_t (*)(char *))sub_1004A5170, (uint64_t)&v89[-8], v98);
    uint64_t v93 = v54;
    if (v54)
    {
      v99[1](v51, v100);
      sub_1004A5120((uint64_t)v115);
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v90 = v21;
    uint64_t v55 = v99;
    uint64_t v56 = (uint64_t)(v99 + 1);
    uint64_t v57 = (void (**)(char *, uint64_t))v99[1];
    uint64_t v58 = v35;
    uint64_t v59 = v100;
    ((void (*)(char *, uint64_t))v57)(v51, v100);
    uint64_t v60 = v53;
    uint64_t v61 = v59;
    uint64_t v62 = v58;
    ((void (*)(char *, uint64_t, uint64_t))v55[4])(v51, v60, v61);
    Swift::String v63 = v97;
    ((void (*)(char *, char *, uint64_t))v55[2])(v97, v51, v61);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v63, 1, v58) == 1)
    {
      ((void (*)(char *, uint64_t))v57)(v63, v61);
      sub_1004A485C();
      swift_allocError();
      *(void *)uint64_t v64 = 0;
      *(unsigned char *)(v64 + 8) = 11;
      int v38 = (void *)sub_10096ABE0();
      swift_errorRelease();
      char v65 = v91;
      uint64_t v66 = v93;
      sub_10047DDF4(v119, v108, v107, v106, v90, v91);
      uint64_t v67 = v104;
      if (v66)
      {

        sub_1004A5120((uint64_t)v115);
        ((void (*)(char *, uint64_t))v57)(v101, v61);
LABEL_19:
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v93 = 0;
      ((void (*)(char *, uint64_t))v57)(v101, v61);
      (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v67, v65, v109);
      uint64_t v39 = 0;
      LODWORD(v101) = 250;
    }
    else
    {
      unint64_t v99 = v57;
      uint64_t v119 = v56;
      uint64_t v68 = (char *)*(int *)(v58 + 48);
      uint64_t v69 = *(int *)(v62 + 64);
      uint64_t v70 = (uint64_t)v96;
      char v71 = &v96[v69];
      char v72 = &v63[v69];
      uint64_t v73 = v110;
      uint64_t v74 = *(v110 - 1);
      (*(void (**)(char *, char *, void *))(v74 + 32))(v96, v63, v110);
      uint64_t v75 = *(void *)&v68[(void)v63];
      uint64_t v91 = v68;
      *(void *)&v68[v70] = v75;
      uint64_t v76 = *(void *)v72;
      LOBYTE(v72) = v72[8];
      *(void *)char v71 = v76;
      unint64_t v97 = v71;
      v71[8] = (char)v72;
      uint64_t v98 = *(int *)(v62 + 48);
      uint64_t v77 = v95;
      int v78 = &v95[*(int *)(v62 + 64)];
      int v79 = *(void (**)(char *, uint64_t, void *))(v74 + 16);
      v89[1] = v74 + 16;
      v89[0] = v79;
      v79(v95, v70, v73);
      *(void *)&v77[v98] = v75;
      *(void *)int v78 = v76;
      v78[8] = (char)v72;
      id v80 = v73;
      swift_errorRetain();
      int v38 = (void *)sub_10096ABE0();
      swift_errorRelease();
      BOOL v81 = *(void (**)(char *, void *))(v74 + 8);
      uint64_t v98 = v74 + 8;
      v81(v77, v73);
      int v82 = v92;
      uint64_t v83 = v93;
      sub_10047DDF4(v70, v108, v107, v106, v90, v92);
      if (v83)
      {

        sub_1004A5120((uint64_t)v115);
        ((void (*)(char *, uint64_t))v99)(v101, v100);
        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v70, v105);
        goto LABEL_19;
      }
      uint64_t v93 = 0;
      ((void (*)(char *, uint64_t))v99)(v101, v100);
      (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v104, v82, v109);
      uint64_t v84 = v105;
      uint64_t v85 = *(int *)(v105 + 48);
      uint64_t v86 = &v77[*(int *)(v105 + 64)];
      ((void (*)(char *, uint64_t, void *))v89[0])(v77, v70, v80);
      *(void *)&v77[v85] = *(void *)&v91[v70];
      uint64_t v87 = v77;
      uint64_t v39 = *(void *)v97;
      unsigned __int8 v88 = v97[8];
      LODWORD(v101) = v88;
      *(void *)uint64_t v86 = v39;
      v86[8] = v88;
      v81(v87, v80);
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v70, v84);
    }
    swift_bridgeObjectRelease();
    char v41 = 70;
    uint64_t v40 = v103;
    goto LABEL_7;
  }
}

void *sub_10045757C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_1004462AC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)sub_10096CC30();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      id v7 = [v5 unsignedLongLongValue];

      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_1004462AC(v8 > 1, v9 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      _swiftEmptyArrayStorage[v9 + 4] = v7;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_10096CE70();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1004576E0(uint64_t a1, void *a2)
{
  int v78 = a2;
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v81 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  int64_t v82 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = FPDiagnosticAttributeKeyStatDocID;
  uint64_t v79 = FPDiagnosticAttributeKeyStatFileID;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v80 = v7;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_23:
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    if (v16 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v15 == v18)
    {
LABEL_4:
      swift_bridgeObjectRelease();
    }
    else
    {
      char v20 = sub_10096D2D0();
      swift_bridgeObjectRetain();
      id v21 = v17;
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_28;
      }
      if (v16 != _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() || v15 != v22)
      {
        char v24 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        if (v24) {
          goto LABEL_28;
        }
        self;
        if (swift_dynamicCastObjCClass())
        {
          long long v88 = 0uLL;
          sub_10096BC20();
          if (*((void *)&v88 + 1))
          {
            uint64_t v89 = &type metadata for String;
            uint64_t v90 = &protocol witness table for String;
            sub_1001E9E64(&v88, (uint64_t)&v86);
            swift_bridgeObjectRetain();
            uint64_t v25 = v78;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v91 = (void *)*v25;
            uint64_t v27 = v91;
            *uint64_t v25 = 0x8000000000000000;
            unint64_t v29 = sub_10000DDD0(v16, v15);
            uint64_t v30 = v27[2];
            BOOL v31 = (v28 & 1) == 0;
            uint64_t v32 = v30 + v31;
            if (__OFADD__(v30, v31)) {
              goto LABEL_66;
            }
            char v33 = v28;
            if (v27[3] >= v32)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                unint64_t v36 = v91;
                if ((v28 & 1) == 0) {
                  goto LABEL_55;
                }
              }
              else
              {
                unint64_t v54 = v29;
                sub_10091FB78();
                unint64_t v29 = v54;
                unint64_t v36 = v91;
                if ((v33 & 1) == 0) {
                  goto LABEL_55;
                }
              }
            }
            else
            {
              sub_100379AC4(v32, isUniquelyReferenced_nonNull_native);
              unint64_t v34 = sub_10000DDD0(v16, v15);
              if ((v33 & 1) != (v35 & 1)) {
                goto LABEL_70;
              }
              unint64_t v29 = v34;
              unint64_t v36 = v91;
              if ((v33 & 1) == 0)
              {
LABEL_55:
                unint64_t v77 = v29;
                uint64_t v55 = sub_10038F0E4((uint64_t)&v86, v87);
                v76[0] = v76;
                __chkstk_darwin(v55);
                uint64_t v57 = (void *)((char *)v76 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
                (*(void (**)(uint64_t *))(v58 + 16))(v57);
                uint64_t v59 = *v57;
                uint64_t v60 = v57[1];
                uint64_t v84 = &type metadata for String;
                uint64_t v85 = &protocol witness table for String;
                *(void *)&long long v83 = v59;
                *((void *)&v83 + 1) = v60;
                unint64_t v61 = v77;
                v36[(v77 >> 6) + 8] |= 1 << v77;
                uint64_t v62 = (uint64_t *)(v36[6] + 16 * v61);
                *uint64_t v62 = v16;
                v62[1] = v15;
                sub_1001E9E64(&v83, v36[7] + 40 * v61);
                uint64_t v63 = v36[2];
                BOOL v64 = __OFADD__(v63, 1);
                uint64_t v65 = v63 + 1;
                if (v64) {
                  goto LABEL_68;
                }
                v36[2] = v65;
                sub_1000268E0((uint64_t)&v86);
                swift_bridgeObjectRetain();
LABEL_57:
                *int v78 = v36;

LABEL_62:
                swift_bridgeObjectRelease_n();
                goto LABEL_4;
              }
            }
            uint64_t v52 = v36[7] + 40 * v29;
            sub_1000268E0(v52);
            sub_1001E9E64(&v86, v52);
            goto LABEL_57;
          }
        }
        self;
        uint64_t v37 = swift_dynamicCastObjCClass();
        if (!v37)
        {
LABEL_28:

          goto LABEL_4;
        }
        int v38 = (void *)v37;
        swift_bridgeObjectRetain();
        unint64_t v77 = (unint64_t)v21;
        id v39 = [v38 longLongValue];
        uint64_t v90 = &protocol witness table for Int64;
        uint64_t v89 = &type metadata for Int64;
        *(void *)&long long v88 = v39;
        sub_1001E9E64(&v88, (uint64_t)&v86);
        uint64_t v40 = v78;
        char v41 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v91 = (void *)*v40;
        id v42 = v91;
        *uint64_t v40 = 0x8000000000000000;
        unint64_t v44 = sub_10000DDD0(v16, v15);
        uint64_t v45 = v42[2];
        BOOL v46 = (v43 & 1) == 0;
        uint64_t v47 = v45 + v46;
        if (__OFADD__(v45, v46)) {
          goto LABEL_67;
        }
        char v48 = v43;
        if (v42[3] >= v47)
        {
          if (v41)
          {
            uint64_t v51 = v91;
            if ((v43 & 1) == 0) {
              goto LABEL_59;
            }
          }
          else
          {
            sub_10091FB78();
            uint64_t v51 = v91;
            if ((v48 & 1) == 0) {
              goto LABEL_59;
            }
          }
        }
        else
        {
          sub_100379AC4(v47, v41);
          unint64_t v49 = sub_10000DDD0(v16, v15);
          if ((v48 & 1) != (v50 & 1)) {
            goto LABEL_70;
          }
          unint64_t v44 = v49;
          uint64_t v51 = v91;
          if ((v48 & 1) == 0)
          {
LABEL_59:
            uint64_t v66 = sub_10038F0E4((uint64_t)&v86, v87);
            v76[0] = v76;
            __chkstk_darwin(v66);
            uint64_t v68 = (void *)((char *)v76 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v69 + 16))(v68);
            uint64_t v70 = *v68;
            uint64_t v85 = &protocol witness table for Int64;
            uint64_t v84 = &type metadata for Int64;
            *(void *)&long long v83 = v70;
            v51[(v44 >> 6) + 8] |= 1 << v44;
            char v71 = (uint64_t *)(v51[6] + 16 * v44);
            uint64_t *v71 = v16;
            v71[1] = v15;
            sub_1001E9E64(&v83, v51[7] + 40 * v44);
            uint64_t v72 = v51[2];
            BOOL v64 = __OFADD__(v72, 1);
            uint64_t v73 = v72 + 1;
            if (v64) {
              goto LABEL_69;
            }
            v51[2] = v73;
            sub_1000268E0((uint64_t)&v86);
            swift_bridgeObjectRetain();
            goto LABEL_61;
          }
        }
        uint64_t v53 = v51[7] + 40 * v44;
        sub_1000268E0(v53);
        sub_1001E9E64(&v86, v53);
LABEL_61:
        *int v78 = v51;
        id v74 = (id)v77;

        goto LABEL_62;
      }

      swift_bridgeObjectRelease_n();
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v11 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_22;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v8);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v8);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v8);
  if (v12)
  {
LABEL_22:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_23;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v82) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v81 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

uint64_t sub_100457EA8(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 80);
  swift_bridgeObjectRetain();
  sub_100456644(a2, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_10002689C(a2, v6);
  sub_10059A0E8(0xD00000000000001ALL, (void *)0x8000000100995F40, v6, v7);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  sub_10002689C(a2, v8);
  return sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1004A6598, a1, v8, (uint64_t)&type metadata for () + 8, v9);
}

uint64_t sub_100457FB0(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  sub_10096CBD0(28);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10002B7CC(a2);
  sub_100025500(a3, a2);
  uint64_t v5 = sub_10096C300();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = v5;
  v12._object = v7;
  sub_10096BDC0(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x676E69646E657020;
  v13._object = (void *)0xEE003A6873756C46;
  sub_10096BDC0(v13);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10096C300();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = v8;
  v14._object = v10;
  sub_10096BDC0(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 62;
  v15._object = (void *)0xE100000000000000;
  sub_10096BDC0(v15);
  return 0x676E696E6E75723CLL;
}

uint64_t sub_100458150(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_10096BD80();
  return sub_10096BEC0();
}

void *sub_1004581D0(void *a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v4 = dispatch_group_create();
  dispatch_group_enter(v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  Swift::String v13 = a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v1;
  v6[3] = a1;
  v6[4] = sub_1004A6064;
  v6[5] = v3;
  v6[6] = sub_1004A7A68;
  v6[7] = v5;
  uint64_t v7 = *(void (**)(void **, void, void, void, uint64_t (*)(unint64_t), uint64_t, uint64_t (*)(), void *))(*(void *)v1 + 144);
  swift_retain_n();
  uint64_t v8 = v4;
  id v9 = a1;
  swift_retain();
  swift_retain();
  v7(&v13, 0, 0, 0, sub_1004A6064, v3, sub_1004A6070, v6);
  swift_release();
  swift_release();
  swift_release();
  sub_10096C600();
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  int64_t v11 = sub_10057B968(v10);
  swift_release();

  swift_bridgeObjectRelease();
  return v11;
}

void *sub_100458390(uint64_t a1, char a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v6 = dispatch_group_create();
  dispatch_group_enter(v6);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  uint64_t v14 = a1;
  char v15 = a2;
  uint64_t v16 = a1;
  char v17 = a2;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v2;
  sub_1000D3184((uint64_t)&v16, (uint64_t)(v8 + 3));
  v8[5] = sub_1004A5E84;
  v8[6] = v5;
  v8[7] = sub_1004A5EC4;
  v8[8] = v7;
  id v9 = *(void (**)(uint64_t *, void, void, void, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(), void *))(*(void *)v2 + 144);
  swift_retain_n();
  uint64_t v10 = v6;
  swift_retain();
  swift_retain();
  v9(&v14, 0, 0, 0, sub_1004A5E84, v5, sub_1004A5ED0, v8);
  swift_release();
  swift_release();
  swift_release();
  sub_10096C600();
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  Swift::String v12 = sub_10057BA74(v11);
  swift_release();

  swift_bridgeObjectRelease();
  return v12;
}

void sub_100458568(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (unsigned __int8 *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a2;
  id v9 = dispatch_group_create();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(unsigned char *)(v10 + 24) = -1;
  dispatch_group_enter(v9);
  uint64_t v29 = 0;
  unint64_t v30 = 0;
  uint64_t v31 = 1;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v34 = 0;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  Swift::String v12 = *(void (**)(uint64_t *, uint64_t *, void, uint64_t, void (*)(uint64_t), uint64_t))(*v3 + 136);
  swift_retain();
  Swift::String v13 = v9;
  v12(&v35, &v29, 0, 1, sub_1004A6008, v11);
  swift_release();
  sub_1000D35F4(v29, v30, v31, v32, *((unint64_t *)&v32 + 1));
  sub_10096C600();
  swift_beginAccess();
  int v14 = *(unsigned __int8 *)(v10 + 24);
  if (v14 == 255) {
    goto LABEL_7;
  }
  char v15 = *(void **)(v10 + 16);
  if (v14)
  {
    uint64_t v28 = *(void *)(v10 + 16);
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    swift_willThrowTypedImpl();
LABEL_7:
    swift_release();

    return;
  }
  if (v15)
  {
    uint64_t v28 = *(void *)(v10 + 16);
    uint64_t v16 = a1[3];
    uint64_t v27 = a1[4];
    v26[1] = sub_10002689C(a1, v16);
    sub_1004A6028(v15, v14);
    id v17 = [v15 description];
    uint64_t v18 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    v26[0] = a1;
    uint64_t v19 = v18;
    id v21 = v20;

    sub_10059A0E8(v19, v21, v16, v27);
    swift_bridgeObjectRelease();
    FPItem.metadata.getter((uint64_t)v8);
    LODWORD(v16) = *v8;
    sub_1004A6FF0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    if (v16 == 1)
    {
      uint64_t v22 = v26[0][3];
      uint64_t v23 = v26[0][4];
      char v24 = sub_10002689C(v26[0], v22);
      __chkstk_darwin(v24);
      v26[-4] = v3;
      v26[-3] = &v28;
      v26[-2] = (void *)1;
      sub_10059A1B8(32, 0xE100000000000000, sub_1004A6040, (uint64_t)&v26[-6], v22, (uint64_t)&type metadata for () + 8, v23);

      sub_1004A6010(v15, v14);
      swift_release();
      return;
    }

    uint64_t v25 = v15;
  }
  else
  {

    uint64_t v25 = 0;
  }
  sub_1004A6010(v25, v14);
  swift_release();
}

uint64_t sub_1004588C0(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v49 = a1;
  uint64_t v7 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v50 = (uint64_t *)((char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v10 - 8);
  Swift::String v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for VFSItem(0);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = v13;
  __chkstk_darwin(v13);
  char v48 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = a2;
  char v62 = a3;
  char v15 = dispatch_group_create();
  sub_10002B7CC((uint64_t *)&unk_100AD6420);
  uint64_t v16 = swift_allocBox();
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v17, 1, 1, v7);
  dispatch_group_enter(v15);
  long long v59 = 0u;
  long long v60 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  *(void *)(v19 + 24) = v15;
  char v20 = *(void (**)(uint64_t *, long long *, void, uint64_t, void (*)(uint64_t), uint64_t))(*(void *)v4 + 136);
  uint64_t v53 = v16;
  uint64_t v21 = v4;
  swift_retain();
  uint64_t v22 = v15;
  v20(&v61, &v55, 0, 1, sub_1004A5E5C, v19);
  uint64_t v23 = (uint64_t)v12;
  uint64_t v24 = v51;
  swift_release();
  long long v47 = v60;
  uint64_t v46 = *((void *)&v59 + 1);
  sub_1000D32B4(v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1), v58, *((uint64_t *)&v58 + 1), v59);
  sub_10096C600();
  swift_beginAccess();
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v18, 1, v7);
  uint64_t v26 = v52;
  if (v25) {
    goto LABEL_4;
  }
  uint64_t v27 = v52;
  uint64_t v28 = (uint64_t)v48;
  uint64_t v29 = v49;
  uint64_t v30 = v18;
  uint64_t v31 = v50;
  sub_10002B70C(v30, (uint64_t)v50, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v54 = *v31;
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    swift_willThrowTypedImpl();
    swift_errorRelease();
    uint64_t v26 = v27;
LABEL_4:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v23, 1, 1, v26);
    uint64_t v32 = v23;
LABEL_5:

    sub_10002B770(v32, &qword_100ACB910);
    return swift_release();
  }
  uint64_t v34 = (uint64_t)v31;
  uint64_t v32 = v23;
  sub_10001AE98(v34, v23, &qword_100ACB910);
  uint64_t v35 = v23;
  uint64_t v36 = v27;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v35, 1, v27) == 1) {
    goto LABEL_5;
  }
  uint64_t v37 = v28;
  sub_100011454(v32, v28, type metadata accessor for VFSItem);
  uint64_t v38 = v29[3];
  uint64_t v39 = v29[4];
  sub_10002689C(v29, v38);
  uint64_t v40 = sub_100262BFC();
  sub_10059A0E8(v40, v41, v38, v39);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v28 + *(int *)(v36 + 28)) == 1)
  {
    uint64_t v42 = v29[3];
    uint64_t v43 = v29[4];
    unint64_t v44 = sub_10002689C(v29, v42);
    __chkstk_darwin(v44);
    uint64_t v45 = v21;
    uint64_t v46 = v37;
    *(void *)&long long v47 = 1;
    sub_10059A1B8(32, 0xE100000000000000, (void (*)(void *))sub_1004A5E64, (uint64_t)(&v48 - 6), v42, (uint64_t)&type metadata for () + 8, v43);
  }

  sub_1004A6FF0(v37, type metadata accessor for VFSItem);
  return swift_release();
}

uint64_t sub_100458DD0(uint64_t x0_0, char a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0x746976697463613CLL;
  unint64_t v25 = 0xEA00000000003A79;
  sub_10096B0D0();
  sub_10096B080();
  double v11 = v10;
  Swift::String v12 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = v12(v9, v6);
  double v14 = v11 * 1000000000.0;
  if ((~COERCE__INT64(v11 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_10063A588((uint64_t)v14, a3);
  sub_10096BDC0(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 32;
  v27._object = (void *)0xE100000000000000;
  sub_10096BDC0(v27);
  uint64_t v16 = v24;
  unint64_t v15 = v25;
  uint64_t v24 = 0x6974617269707865;
  unint64_t v25 = 0xEB000000003A6E6FLL;
  if (a2)
  {
    object = (void *)0xE600000000000000;
    v20._countAndFlagsBits = 0x3E656E6F6E3CLL;
    goto LABEL_10;
  }
  sub_10096B0D0();
  sub_10096B080();
  double v18 = v17;
  uint64_t result = v12(v9, v6);
  double v19 = v18 * 1000000000.0;
  if ((~COERCE__INT64(v18 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_14;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v19 < 9.22337204e18)
  {
    sub_10063A588((uint64_t)v19, x0_0);
    object = v20._object;
LABEL_10:
    v20._object = object;
    sub_10096BDC0(v20);
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 62;
    v28._object = (void *)0xE100000000000000;
    sub_10096BDC0(v28);
    uint64_t v22 = v24;
    uint64_t v23 = (void *)v25;
    uint64_t v24 = v16;
    unint64_t v25 = v15;
    swift_bridgeObjectRetain();
    v29._countAndFlagsBits = v22;
    v29._object = v23;
    sub_10096BDC0(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_100459078(void *a1)
{
  uint64_t v2 = v1;
  if (sub_1004DAB60() && !*(void *)(v1[4] + 16))
  {
    uint64_t v137 = a1[3];
    uint64_t v138 = a1[4];
    sub_10002689C(a1, v137);
    sub_10059A0E8(0xD000000000000022, (void *)0x80000001009A09D0, v137, v138);
    return;
  }
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_10002689C(a1, v3);
  sub_10096CBD0(24);
  swift_bridgeObjectRelease();
  if (v1[5]) {
    v5._countAndFlagsBits = 0x6F6C667265766F20;
  }
  else {
    v5._countAndFlagsBits = 0;
  }
  if (v1[5]) {
    uint64_t v6 = (void *)0xED000021676E6977;
  }
  else {
    uint64_t v6 = (void *)0xE000000000000000;
  }
  v5._object = v6;
  sub_10096BDC0(v5);
  swift_bridgeObjectRelease();
  sub_10059A0E8(0xD000000000000016, (void *)0x80000001009A0930, v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = *v1;
  id v139 = v1;
  if (!*(void *)(*v1 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_10002689C(a1, v8);
  sub_10096CBD0(19);
  swift_bridgeObjectRelease();
  v160._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v160);
  swift_bridgeObjectRelease();
  sub_10059A0E8(0xD000000000000011, (void *)0x80000001009A0950, v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v143 = v7 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v7 + 64);
  int64_t v147 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  for (i = v7; ; uint64_t v7 = i)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_32;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_189;
    }
    if (v18 >= v147) {
      goto LABEL_41;
    }
    unint64_t v19 = *(void *)(v143 + 8 * v18);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v147) {
        goto LABEL_41;
      }
      unint64_t v19 = *(void *)(v143 + 8 * v13);
      if (!v19)
      {
        int64_t v13 = v18 + 2;
        if (v18 + 2 >= v147) {
          goto LABEL_41;
        }
        unint64_t v19 = *(void *)(v143 + 8 * v13);
        if (!v19) {
          break;
        }
      }
    }
LABEL_31:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_32:
    uint64_t v21 = *(void *)(v7 + 56);
    uint64_t v22 = *(void *)(v7 + 48) + 16 * v17;
    uint64_t v23 = *(void *)v22;
    int v24 = *(unsigned __int8 *)(v22 + 8);
    uint64_t v25 = v21 + 24 * v17;
    uint64_t v26 = *(void *)v25;
    char v27 = *(unsigned char *)(v25 + 8);
    uint64_t v28 = *(void *)(v25 + 16);
    uint64_t v29 = a1[3];
    uint64_t v30 = a1[4];
    sub_10002689C(a1, v29);
    if (!v24)
    {
      uint64_t v155 = 0x284449636F64;
      unint64_t v158 = 0xE600000000000000;
      goto LABEL_14;
    }
    if (v24 == 1)
    {
      uint64_t v155 = 0x284449656C6966;
      unint64_t v158 = 0xE700000000000000;
LABEL_14:
      v161._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v161);
      swift_bridgeObjectRelease();
      v162._countAndFlagsBits = 41;
      v162._object = (void *)0xE100000000000000;
      sub_10096BDC0(v162);
      v14._countAndFlagsBits = v155;
      unint64_t v15 = (void *)v158;
      goto LABEL_15;
    }
    if (v23) {
      v14._countAndFlagsBits = 0x6873617274;
    }
    else {
      v14._countAndFlagsBits = 1953460082;
    }
    if (v23) {
      unint64_t v15 = (void *)0xE500000000000000;
    }
    else {
      unint64_t v15 = (void *)0xE400000000000000;
    }
LABEL_15:
    v14._object = v15;
    sub_10096BDC0(v14);
    swift_bridgeObjectRelease();
    v163._countAndFlagsBits = 8250;
    v163._object = (void *)0xE200000000000000;
    sub_10096BDC0(v163);
    v164._countAndFlagsBits = sub_100458DD0(v26, v27, v28);
    sub_10096BDC0(v164);
    swift_bridgeObjectRelease();
    sub_10059A0E8(538976288, (void *)0xE400000000000000, v29, v30);
    swift_bridgeObjectRelease();
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v147) {
    goto LABEL_41;
  }
  unint64_t v19 = *(void *)(v143 + 8 * v20);
  if (v19)
  {
    int64_t v13 = v20;
    goto LABEL_31;
  }
  while (1)
  {
    int64_t v13 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      goto LABEL_194;
    }
    if (v13 >= v147) {
      break;
    }
    unint64_t v19 = *(void *)(v143 + 8 * v13);
    ++v20;
    if (v19) {
      goto LABEL_31;
    }
  }
LABEL_41:
  swift_release();
  uint64_t v2 = v139;
LABEL_42:
  uint64_t v31 = v2[1];
  if (!*(void *)(v31 + 16)) {
    goto LABEL_64;
  }
  uint64_t v32 = a1[3];
  uint64_t v33 = a1[4];
  sub_10002689C(a1, v32);
  sub_10096CBD0(23);
  swift_bridgeObjectRelease();
  v165._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v165);
  swift_bridgeObjectRelease();
  sub_10059A0E8(0xD000000000000015, (void *)0x80000001009A0970, v32, v33);
  swift_bridgeObjectRelease();
  uint64_t v140 = v31 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(v31 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & *(void *)(v31 + 64);
  int64_t v144 = (unint64_t)(v34 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v37 = 0;
  while (2)
  {
    if (v36)
    {
      unint64_t v38 = __clz(__rbit64(v36));
      v36 &= v36 - 1;
      int64_t v150 = v37;
      unint64_t v39 = v38 | (v37 << 6);
      uint64_t v40 = v31;
LABEL_47:
      char v41 = *(void **)(*(void *)(v40 + 48) + 8 * v39);
      uint64_t v42 = *(void *)(v40 + 56) + 24 * v39;
      uint64_t v43 = *(void *)v42;
      char v44 = *(unsigned char *)(v42 + 8);
      uint64_t v45 = *(void *)(v42 + 16);
      uint64_t v46 = a1[3];
      uint64_t v47 = a1[4];
      sub_10002689C(a1, v46);
      id v48 = v41;
      v166._countAndFlagsBits = NSFileProviderItemIdentifier.description.getter();
      sub_10096BDC0(v166);
      swift_bridgeObjectRelease();
      v167._countAndFlagsBits = 8250;
      v167._object = (void *)0xE200000000000000;
      sub_10096BDC0(v167);
      v168._countAndFlagsBits = sub_100458DD0(v43, v44, v45);
      sub_10096BDC0(v168);
      swift_bridgeObjectRelease();
      sub_10059A0E8(538976288, (void *)0xE400000000000000, v46, v47);

      swift_bridgeObjectRelease();
      int64_t v37 = v150;
      continue;
    }
    break;
  }
  int64_t v49 = v37 + 1;
  uint64_t v40 = v31;
  if (__OFADD__(v37, 1)) {
    goto LABEL_190;
  }
  if (v49 >= v144) {
    goto LABEL_63;
  }
  unint64_t v50 = *(void *)(v140 + 8 * v49);
  int64_t v51 = v37 + 1;
  if (v50) {
    goto LABEL_62;
  }
  int64_t v51 = v37 + 2;
  if (v37 + 2 >= v144) {
    goto LABEL_63;
  }
  unint64_t v50 = *(void *)(v140 + 8 * v51);
  if (v50) {
    goto LABEL_62;
  }
  int64_t v51 = v37 + 3;
  if (v37 + 3 >= v144) {
    goto LABEL_63;
  }
  unint64_t v50 = *(void *)(v140 + 8 * v51);
  if (v50)
  {
LABEL_62:
    unint64_t v36 = (v50 - 1) & v50;
    int64_t v150 = v51;
    unint64_t v39 = __clz(__rbit64(v50)) + (v51 << 6);
    goto LABEL_47;
  }
  uint64_t v52 = v37 + 4;
  if (v37 + 4 >= v144) {
    goto LABEL_63;
  }
  unint64_t v50 = *(void *)(v140 + 8 * v52);
  if (v50)
  {
    int64_t v51 = v37 + 4;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v51 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      goto LABEL_195;
    }
    if (v51 >= v144) {
      break;
    }
    unint64_t v50 = *(void *)(v140 + 8 * v51);
    ++v52;
    if (v50) {
      goto LABEL_62;
    }
  }
LABEL_63:
  swift_release();
  uint64_t v2 = v139;
LABEL_64:
  uint64_t v53 = v2[2];
  if (*(void *)(v53 + 16) || *(void *)(v2[3] + 16))
  {
    uint64_t v54 = a1[3];
    uint64_t v55 = a1[4];
    sub_10002689C(a1, v54);
    sub_10096CBD0(26);
    swift_bridgeObjectRelease();
    if (__OFADD__(*(void *)(v53 + 16), *(void *)(v139[3] + 16))) {
      goto LABEL_197;
    }
    uint64_t v141 = v139[3];
    v169._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v169);
    swift_bridgeObjectRelease();
    sub_10059A0E8(0xD000000000000018, (void *)0x80000001009A0990, v54, v55);
    swift_bridgeObjectRelease();
    uint64_t v56 = v53 + 56;
    uint64_t v57 = -1;
    uint64_t v58 = -1 << *(unsigned char *)(v53 + 32);
    if (-v58 < 64) {
      uint64_t v57 = ~(-1 << -(char)v58);
    }
    unint64_t v59 = v57 & *(void *)(v53 + 56);
    int64_t v60 = (unint64_t)(63 - v58) >> 6;
    swift_bridgeObjectRetain();
    int64_t v61 = 0;
    while (2)
    {
      if (v59)
      {
        unint64_t v64 = __clz(__rbit64(v59));
        v59 &= v59 - 1;
        unint64_t v65 = v64 | (v61 << 6);
      }
      else
      {
        int64_t v66 = v61 + 1;
        if (__OFADD__(v61, 1))
        {
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
          goto LABEL_192;
        }
        if (v66 >= v60) {
          goto LABEL_98;
        }
        unint64_t v67 = *(void *)(v56 + 8 * v66);
        int64_t v68 = v61 + 1;
        if (!v67)
        {
          int64_t v68 = v61 + 2;
          if (v61 + 2 >= v60) {
            goto LABEL_98;
          }
          unint64_t v67 = *(void *)(v56 + 8 * v68);
          if (!v67)
          {
            int64_t v68 = v61 + 3;
            if (v61 + 3 >= v60) {
              goto LABEL_98;
            }
            unint64_t v67 = *(void *)(v56 + 8 * v68);
            if (!v67)
            {
              int64_t v69 = v61 + 4;
              if (v61 + 4 >= v60)
              {
LABEL_98:
                sub_1000146B4();
                uint64_t v148 = v141 + 56;
                uint64_t v75 = -1;
                uint64_t v76 = -1 << *(unsigned char *)(v141 + 32);
                if (-v76 < 64) {
                  uint64_t v75 = ~(-1 << -(char)v76);
                }
                unint64_t v77 = v75 & *(void *)(v141 + 56);
                int64_t v145 = (unint64_t)(63 - v76) >> 6;
                swift_bridgeObjectRetain();
                int64_t v78 = 0;
                while (2)
                {
                  if (v77)
                  {
                    unint64_t v82 = __clz(__rbit64(v77));
                    v77 &= v77 - 1;
                    unint64_t v83 = v82 | (v78 << 6);
                  }
                  else
                  {
                    int64_t v84 = v78 + 1;
                    if (__OFADD__(v78, 1)) {
                      goto LABEL_188;
                    }
                    if (v84 >= v145)
                    {
LABEL_133:
                      sub_1000146B4();
                      uint64_t v2 = v139;
                      goto LABEL_134;
                    }
                    unint64_t v85 = *(void *)(v148 + 8 * v84);
                    int64_t v86 = v78 + 1;
                    if (!v85)
                    {
                      int64_t v86 = v78 + 2;
                      if (v78 + 2 >= v145) {
                        goto LABEL_133;
                      }
                      unint64_t v85 = *(void *)(v148 + 8 * v86);
                      if (!v85)
                      {
                        int64_t v86 = v78 + 3;
                        if (v78 + 3 >= v145) {
                          goto LABEL_133;
                        }
                        unint64_t v85 = *(void *)(v148 + 8 * v86);
                        if (!v85)
                        {
                          int64_t v87 = v78 + 4;
                          if (v78 + 4 >= v145) {
                            goto LABEL_133;
                          }
                          unint64_t v85 = *(void *)(v148 + 8 * v87);
                          if (!v85)
                          {
                            while (1)
                            {
                              int64_t v86 = v87 + 1;
                              if (__OFADD__(v87, 1)) {
                                break;
                              }
                              if (v86 >= v145) {
                                goto LABEL_133;
                              }
                              unint64_t v85 = *(void *)(v148 + 8 * v86);
                              ++v87;
                              if (v85) {
                                goto LABEL_119;
                              }
                            }
LABEL_193:
                            __break(1u);
LABEL_194:
                            __break(1u);
LABEL_195:
                            __break(1u);
                            goto LABEL_196;
                          }
                          int64_t v86 = v78 + 4;
                        }
                      }
                    }
LABEL_119:
                    unint64_t v77 = (v85 - 1) & v85;
                    unint64_t v83 = __clz(__rbit64(v85)) + (v86 << 6);
                    int64_t v78 = v86;
                  }
                  long long v88 = *(void **)(*(void *)(v141 + 48) + 8 * v83);
                  uint64_t v90 = a1[3];
                  uint64_t v89 = a1[4];
                  sub_10002689C(a1, v90);
                  uint64_t v91 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                  uint64_t v93 = v92;
                  if (v91 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v93 == v94)
                  {
                    id v79 = v88;
                    swift_bridgeObjectRelease_n();
                  }
                  else
                  {
                    char v96 = sub_10096D2D0();
                    id v97 = v88;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v96 & 1) == 0)
                    {
                      uint64_t v98 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                      uint64_t v100 = v99;
                      if (v98 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0()
                        && v100 == v101)
                      {
                        swift_bridgeObjectRelease_n();
                      }
                      else
                      {
                        char v103 = sub_10096D2D0();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if ((v103 & 1) == 0)
                        {
                          v81._countAndFlagsBits = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                          object = v81._object;
                          goto LABEL_103;
                        }
                      }
                      object = (void *)0xE500000000000000;
                      v81._countAndFlagsBits = 0x6873617274;
                      goto LABEL_103;
                    }
                  }
                  object = (void *)0xE400000000000000;
                  v81._countAndFlagsBits = 1953460082;
LABEL_103:
                  v81._object = object;
                  sub_10096BDC0(v81);
                  swift_bridgeObjectRelease();
                  sub_10059A0E8(0x3A706620202020, (void *)0xE700000000000000, v90, v89);

                  swift_bridgeObjectRelease();
                  continue;
                }
              }
              unint64_t v67 = *(void *)(v56 + 8 * v69);
              if (!v67)
              {
                while (1)
                {
                  int64_t v68 = v69 + 1;
                  if (__OFADD__(v69, 1)) {
                    break;
                  }
                  if (v68 >= v60) {
                    goto LABEL_98;
                  }
                  unint64_t v67 = *(void *)(v56 + 8 * v68);
                  ++v69;
                  if (v67) {
                    goto LABEL_88;
                  }
                }
LABEL_192:
                __break(1u);
                goto LABEL_193;
              }
              int64_t v68 = v61 + 4;
            }
          }
        }
LABEL_88:
        unint64_t v59 = (v67 - 1) & v67;
        unint64_t v65 = __clz(__rbit64(v67)) + (v68 << 6);
        int64_t v61 = v68;
      }
      uint64_t v70 = *(void *)(v53 + 48) + 16 * v65;
      uint64_t v71 = *(void *)v70;
      int v72 = *(unsigned __int8 *)(v70 + 8);
      uint64_t v73 = a1[3];
      uint64_t v74 = a1[4];
      sub_10002689C(a1, v73);
      if (v72)
      {
        if (v72 == 1)
        {
          uint64_t v156 = 0x284449656C6966;
          unint64_t v159 = 0xE700000000000000;
LABEL_71:
          v170._countAndFlagsBits = sub_10096D220();
          sub_10096BDC0(v170);
          swift_bridgeObjectRelease();
          v171._countAndFlagsBits = 41;
          v171._object = (void *)0xE100000000000000;
          sub_10096BDC0(v171);
          v62._countAndFlagsBits = v156;
          uint64_t v63 = (void *)v159;
        }
        else
        {
          if (v71) {
            v62._countAndFlagsBits = 0x6873617274;
          }
          else {
            v62._countAndFlagsBits = 1953460082;
          }
          if (v71) {
            uint64_t v63 = (void *)0xE500000000000000;
          }
          else {
            uint64_t v63 = (void *)0xE400000000000000;
          }
        }
        v62._object = v63;
        sub_10096BDC0(v62);
        swift_bridgeObjectRelease();
        sub_10059A0E8(0x3A736620202020, (void *)0xE700000000000000, v73, v74);
        swift_bridgeObjectRelease();
        continue;
      }
      break;
    }
    uint64_t v156 = 0x284449636F64;
    unint64_t v159 = 0xE600000000000000;
    goto LABEL_71;
  }
LABEL_134:
  uint64_t v104 = v2[4];
  if (!*(void *)(v104 + 16)) {
    return;
  }
  uint64_t v105 = a1[3];
  uint64_t v106 = a1[4];
  sub_10002689C(a1, v105);
  sub_10096CBD0(22);
  swift_bridgeObjectRelease();
  v172._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v172);
  swift_bridgeObjectRelease();
  sub_10059A0E8(0xD000000000000014, (void *)0x80000001009A09B0, v105, v106);
  swift_bridgeObjectRelease();
  uint64_t v142 = v104 + 56;
  uint64_t v107 = 1 << *(unsigned char *)(v104 + 32);
  uint64_t v108 = -1;
  if (v107 < 64) {
    uint64_t v108 = ~(-1 << v107);
  }
  unint64_t v109 = v108 & *(void *)(v104 + 56);
  int64_t v146 = (unint64_t)(v107 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v110 = 0;
  while (2)
  {
    if (v109)
    {
      unint64_t v113 = __clz(__rbit64(v109));
      v109 &= v109 - 1;
      unint64_t v114 = v113 | (v110 << 6);
      goto LABEL_158;
    }
    int64_t v115 = v110 + 1;
    if (__OFADD__(v110, 1)) {
      goto LABEL_191;
    }
    if (v115 >= v146)
    {
LABEL_184:
      swift_release();
      return;
    }
    unint64_t v116 = *(void *)(v142 + 8 * v115);
    ++v110;
    if (v116) {
      goto LABEL_157;
    }
    int64_t v110 = v115 + 1;
    if (v115 + 1 >= v146) {
      goto LABEL_184;
    }
    unint64_t v116 = *(void *)(v142 + 8 * v110);
    if (v116) {
      goto LABEL_157;
    }
    int64_t v110 = v115 + 2;
    if (v115 + 2 >= v146) {
      goto LABEL_184;
    }
    unint64_t v116 = *(void *)(v142 + 8 * v110);
    if (v116)
    {
LABEL_157:
      unint64_t v109 = (v116 - 1) & v116;
      unint64_t v114 = __clz(__rbit64(v116)) + (v110 << 6);
LABEL_158:
      uint64_t v118 = *(void *)(v104 + 48) + 16 * v114;
      uint64_t v119 = *(void **)v118;
      uint64_t v120 = *(unsigned __int8 *)(v118 + 8);
      char v121 = *(unsigned char *)(v118 + 9);
      uint64_t v122 = a1[3];
      uint64_t v151 = a1[4];
      sub_10002689C(a1, v122);
      if (v121)
      {
        v157._countAndFlagsBits = 0x28726568746F2ELL;
        v157._object = (void *)0xE700000000000000;
        uint64_t v123 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v125 = v124;
        if (v123 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v125 == v126)
        {
          sub_10009C394(v119, v120, 1);
          sub_10009C394(v119, v120, 1);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v128 = sub_10096D2D0();
          sub_10009C394(v119, v120, 1);
          sub_10009C394(v119, v120, 1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v128 & 1) == 0)
          {
            uint64_t v129 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
            uint64_t v131 = v130;
            if (v129 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v131 == v132)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v134 = sub_10096D2D0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v134 & 1) == 0)
              {
                v135._countAndFlagsBits = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                unint64_t v136 = v135._object;
LABEL_183:
                v135._object = v136;
                sub_10096BDC0(v135);
                swift_bridgeObjectRelease();
                v176._countAndFlagsBits = 41;
                v176._object = (void *)0xE100000000000000;
                sub_10096BDC0(v176);
                sub_1000D30C4(v119, v120, 1);
                goto LABEL_141;
              }
            }
            unint64_t v136 = (void *)0xE500000000000000;
            v135._countAndFlagsBits = 0x6873617274;
            goto LABEL_183;
          }
        }
        unint64_t v136 = (void *)0xE400000000000000;
        v135._countAndFlagsBits = 1953460082;
        goto LABEL_183;
      }
      v157._countAndFlagsBits = 0x286E69616D2ELL;
      v157._object = (void *)0xE600000000000000;
      if (v120)
      {
        if (v120 != 1)
        {
          if (v119) {
            v111._countAndFlagsBits = 0x6873617274;
          }
          else {
            v111._countAndFlagsBits = 1953460082;
          }
          if (v119) {
            uint64_t v112 = (void *)0xE500000000000000;
          }
          else {
            uint64_t v112 = (void *)0xE400000000000000;
          }
          goto LABEL_140;
        }
        uint64_t v153 = 0x284449656C6966;
        unint64_t v154 = 0xE700000000000000;
      }
      else
      {
        uint64_t v153 = 0x284449636F64;
        unint64_t v154 = 0xE600000000000000;
      }
      v173._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v173);
      swift_bridgeObjectRelease();
      v174._countAndFlagsBits = 41;
      v174._object = (void *)0xE100000000000000;
      sub_10096BDC0(v174);
      v111._countAndFlagsBits = v153;
      uint64_t v112 = (void *)v154;
LABEL_140:
      v111._object = v112;
      sub_10096BDC0(v111);
      swift_bridgeObjectRelease();
      v175._countAndFlagsBits = 41;
      v175._object = (void *)0xE100000000000000;
      sub_10096BDC0(v175);
LABEL_141:
      sub_10096BDC0(v157);
      swift_bridgeObjectRelease();
      sub_10059A0E8(538976288, (void *)0xE400000000000000, v122, v151);
      swift_bridgeObjectRelease();
      sub_1000D30C4(v119, v120, v121);
      continue;
    }
    break;
  }
  int64_t v117 = v115 + 3;
  if (v117 >= v146) {
    goto LABEL_184;
  }
  unint64_t v116 = *(void *)(v142 + 8 * v117);
  if (v116)
  {
    int64_t v110 = v117;
    goto LABEL_157;
  }
  while (1)
  {
    int64_t v110 = v117 + 1;
    if (__OFADD__(v117, 1)) {
      break;
    }
    if (v110 >= v146) {
      goto LABEL_184;
    }
    unint64_t v116 = *(void *)(v142 + 8 * v110);
    ++v117;
    if (v116) {
      goto LABEL_157;
    }
  }
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
}

uint64_t FPCKDetachedRoot.physicalLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_physicalLocation;
  uint64_t v4 = sub_10096AE50();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FPCKDetachedRoot.logicalLocation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10002B70C(v1 + OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_logicalLocation, a1, &qword_100ACA8C0);
}

uint64_t FPCKDetachedRoot.inode.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_inode);
}

uint64_t FPCKDetachedRoot.shouldRefreshBookmark.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_shouldRefreshBookmark);
}

uint64_t sub_10045A52C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10002B7CC(&qword_100AD5D78);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v43 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v9 = &v39[-v8];
  uint64_t v10 = sub_10002B7CC(&qword_100AD5D80);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  Swift::String v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  unint64_t v16 = &v39[-v15];
  unint64_t v17 = v2;
  uint64_t v49 = a1;
  uint64_t v18 = sub_10096AE10();
  uint64_t v20 = v19;
  uint64_t v44 = a2;
  uint64_t v47 = a2;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v45;
  sub_10084CC44(4294967294, v18, v20, 0x100000, 0, 0, (uint64_t)v9, (uint64_t)sub_1004A7B80, (uint64_t)v46);
  uint64_t v45 = v21;
  if (v21)
  {
    sub_10002B770((uint64_t)v9, &qword_100AD5D78);

    swift_bridgeObjectRelease();
    uint64_t v22 = sub_10096AE50();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
    v23(v49, v22);
    v23(v44, v22);
    type metadata accessor for FPCKDetachedRoot(0);
    swift_deallocPartialClassInstance();
    return v22;
  }
  int v24 = v43;
  sub_10002B70C((uint64_t)v9, (uint64_t)v43, &qword_100AD5D78);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v24, 1, v10);
  if (result != 1)
  {
    uint64_t v26 = *(int *)(v10 + 48);
    uint64_t v27 = *(int *)(v10 + 64);
    uint64_t v41 = v26;
    uint64_t v42 = v27;
    sub_10001AE98((uint64_t)v24, (uint64_t)v16, &qword_100AD5D80);
    sub_10002B770((uint64_t)v9, &qword_100AD5D78);
    swift_bridgeObjectRelease();
    uint64_t v28 = &v17[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_physicalLocation];
    uint64_t v43 = (unsigned char *)sub_10096AE50();
    uint64_t v29 = *((void *)v43 - 1);
    (*(void (**)(char *, uint64_t, unsigned char *))(v29 + 16))(v28, v49, v43);
    sub_10002B70C((uint64_t)v16, (uint64_t)v14, &qword_100ACA8C0);
    uint64_t v30 = *(void *)&v16[v26];
    int v40 = v16[v42];
    sub_10001AE98((uint64_t)v14, (uint64_t)&v17[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_logicalLocation], &qword_100ACA8C0);
    uint64_t v31 = *(int *)(v10 + 48);
    uint64_t v32 = *(int *)(v10 + 64);
    sub_10002B70C((uint64_t)v16, (uint64_t)v14, &qword_100ACA8C0);
    *(void *)&v14[v31] = v30;
    v14[v32] = v40;
    *(void *)&v17[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_inode] = v30;
    sub_10002B770((uint64_t)v14, &qword_100ACA8C0);
    uint64_t v33 = *(int *)(v10 + 48);
    uint64_t v34 = *(int *)(v10 + 64);
    sub_10001AE98((uint64_t)v16, (uint64_t)v14, &qword_100ACA8C0);
    *(void *)&v14[v33] = *(void *)&v16[v41];
    char v35 = v16[v42];
    v14[v34] = v35;
    v17[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_shouldRefreshBookmark] = v35;

    sub_10002B770((uint64_t)v14, &qword_100ACA8C0);
    unint64_t v36 = (objc_class *)type metadata accessor for FPCKDetachedRoot(0);
    v48.receiver = v17;
    v48.super_class = v36;
    uint64_t v22 = (uint64_t)objc_msgSendSuper2(&v48, "init");
    int64_t v37 = *(void (**)(uint64_t, unsigned char *))(v29 + 8);
    unint64_t v38 = v43;
    v37(v49, v43);
    v37(v44, v38);
    return v22;
  }
  __break(1u);
  return result;
}

uint64_t sub_10045A9E4@<X0>(int a1@<W0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v7 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for VFSDetachedRootBookmark();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = 0;
  uint64_t v36 = 0;
  int v39 = 0;
  uint64_t v38 = 0;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  int v47 = a1;
  objc_super v48 = &v36;
  uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10025BCF0);
  if (!v3)
  {
    char v35 = 0;
    fpfs_is_detached_root();
    if (v35)
    {
      uint64_t v14 = sub_10096AE50();
      uint64_t v15 = *(void *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, a2, v14);
      unint64_t v16 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
      v16(v9, 0, 1, v14);
      sub_1003925C0(a1, (uint64_t)v9, (uint64_t)v12);
      uint64_t v21 = sub_10002B7CC(&qword_100AD5D80);
      uint64_t v27 = *(int *)(v21 + 48);
      uint64_t v28 = *(int *)(v21 + 64);
      uint64_t v22 = &v12[*(int *)(v10 + 20)];
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *((void *)v22 + 1);
      uint64_t v33 = v24;
      uint64_t v34 = v23;
      uint64_t v31 = 47;
      unint64_t v32 = 0xE100000000000000;
      uint64_t v29 = 58;
      unint64_t v30 = 0xE100000000000000;
      sub_10001F9C0();
      sub_10096C910();
      sub_10096AD50();
      swift_bridgeObjectRelease();
      v16(a3, 0, 1, v14);
      *(void *)&a3[v27] = v37;
      char v25 = v12[*(int *)(v10 + 28)];
      uint64_t result = sub_1004A6FF0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VFSDetachedRootBookmark);
      a3[v28] = v25;
    }
    else
    {
      uint64_t v17 = sub_10002B7CC(&qword_100AD5D80);
      uint64_t v18 = *(int *)(v17 + 48);
      uint64_t v19 = *(int *)(v17 + 64);
      uint64_t v20 = sub_10096AE50();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 1, 1, v20);
      *(void *)&a3[v18] = v37;
      a3[v19] = 0;
    }
  }
  return result;
}

void FPCKDetachedRoot.init()()
{
}

id FPCKDetachedRoot.__deallocating_deinit()
{
  return sub_10045B1FC(0, (uint64_t (*)(void))type metadata accessor for FPCKDetachedRoot);
}

uint64_t type metadata accessor for FPCKDetachedRoot(uint64_t a1)
{
  return sub_100028978(a1, qword_100AD5E60);
}

id FPShouldPauseResult.__allocating_init(shouldPause:semaphore:)(char a1, uint64_t a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  v5[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] = a1;
  *(void *)&v5[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, "init");
}

id FPShouldPauseResult.init(shouldPause:semaphore:)(char a1, uint64_t a2)
{
  v2[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] = a1;
  *(void *)&v2[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for FPShouldPauseResult();
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t type metadata accessor for FPShouldPauseResult()
{
  return self;
}

void FPShouldPauseResult.init()()
{
}

id FPShouldPauseResult.__deallocating_deinit(uint64_t a1)
{
  return sub_10045B1FC(a1, type metadata accessor for FPShouldPauseResult);
}

id sub_10045B1FC(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

Swift::Void __swiftcall FPCKTelemetryUpdate.encode(with:)(NSCoder with)
{
  double v3 = *(double *)(v1 + OBJC_IVAR___FPCKTelemetryUpdate_status);
  id v4 = sub_10096BC00();
  [(objc_class *)with.super.isa encodeDouble:v4 forKey:v3];
}

id FPCKTelemetryUpdate.__allocating_init(coder:)(void *a1)
{
  double v3 = (char *)objc_allocWithZone(v1);
  NSString v4 = sub_10096BC00();
  [a1 decodeDoubleForKey:v4];
  uint64_t v6 = v5;

  *(void *)&v3[OBJC_IVAR___FPCKTelemetryUpdate_status] = v6;
  v9.receiver = v3;
  v9.super_class = v1;
  id v7 = objc_msgSendSuper2(&v9, "init");

  return v7;
}

id FPCKTelemetryUpdate.init(coder:)(void *a1)
{
  double v3 = v1;
  NSString v4 = sub_10096BC00();
  [a1 decodeDoubleForKey:v4];
  uint64_t v6 = v5;

  *(void *)&v3[OBJC_IVAR___FPCKTelemetryUpdate_status] = v6;
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for FPCKTelemetryUpdate();
  id v7 = objc_msgSendSuper2(&v9, "init");

  return v7;
}

uint64_t type metadata accessor for FPCKTelemetryUpdate()
{
  return self;
}

id FPCKTelemetryUpdate.__allocating_init(status:)(double a1)
{
  double v3 = (char *)objc_allocWithZone(v1);
  *(double *)&v3[OBJC_IVAR___FPCKTelemetryUpdate_status] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

id FPCKTelemetryUpdate.init(status:)(double a1)
{
  *(double *)&v1[OBJC_IVAR___FPCKTelemetryUpdate_status] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for FPCKTelemetryUpdate();
  return objc_msgSendSuper2(&v3, "init");
}

unint64_t FPCKTelemetryUpdate.toDictionary()()
{
  sub_10002B7CC(&qword_100ACE1E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = 0x737574617473;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___FPCKTelemetryUpdate_status);
  *(void *)(inited + 72) = &type metadata for Double;
  *(void *)(inited + 48) = v2;
  return sub_10004621C(inited);
}

uint64_t FPCKTelemetryUpdate.description.getter()
{
  return 0;
}

void FPCKTelemetryUpdate.init()()
{
}

id FPCKTelemetryUpdate.__deallocating_deinit(uint64_t a1)
{
  return sub_10045B1FC(a1, type metadata accessor for FPCKTelemetryUpdate);
}

void sub_10045B8E8(uint64_t a1, Swift::UInt64 a2, char a3)
{
  switch(a3)
  {
    case -6:
      Swift::UInt v3 = 5;
      goto LABEL_15;
    case -5:
      Swift::UInt v3 = 4;
      goto LABEL_15;
    case -4:
      goto LABEL_14;
    case -3:
      Swift::UInt v3 = 1;
      goto LABEL_15;
    case -2:
      Swift::UInt v3 = 0;
      goto LABEL_15;
    default:
      sub_10096D4C0(3uLL);
      if (a3 == -1)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        if (a3)
        {
          if (a3 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(a2);
          }
          else
          {
            if (a2) {
              Swift::UInt v3 = 3;
            }
            else {
LABEL_14:
            }
              Swift::UInt v3 = 2;
LABEL_15:
            sub_10096D4C0(v3);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(a2);
        }
      }
      return;
  }
}

uint64_t sub_10045B9F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10002689C(a1, a1[3]);
  sub_10096D560();
  if (v2) {
    return sub_1000268E0((uint64_t)a1);
  }
  sub_10002689C(v10, v10[3]);
  unint64_t v5 = sub_10096D2E0();
  uint64_t v6 = sub_10049DE2C(v5);
  char v8 = v7;
  sub_1000268E0((uint64_t)v10);
  uint64_t result = sub_1000268E0((uint64_t)a1);
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v8;
  return result;
}

uint64_t sub_10045BAD0(void *a1)
{
  sub_10002689C(a1, a1[3]);
  sub_10096D580();
  sub_10038F0E4((uint64_t)v2, v3);
  sub_10096D300();
  return sub_1000268E0((uint64_t)v2);
}

uint64_t sub_10045BB90(uint64_t a1, uint64_t a2)
{
  return sub_10049D4A4(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

Swift::Int sub_10045BBA8()
{
  Swift::UInt64 v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_10096D4B0();
  sub_10045B8E8((uint64_t)v4, v1, v2);
  return sub_10096D500();
}

void sub_10045BBF8(uint64_t a1)
{
  sub_10045B8E8(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_10045BC04()
{
  Swift::UInt64 v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_10096D4B0();
  sub_10045B8E8((uint64_t)v4, v1, v2);
  return sub_10096D500();
}

uint64_t static PendingSetErrorDetails.== infix(_:_:)(uint64_t a1, uint64_t a2, __int16 a3, void *a4, uint64_t a5, uint64_t a6, __int16 a7, void *a8)
{
  return sub_10049D5D4(a2, a3, SHIBYTE(a3), a4, a6, a7, SHIBYTE(a7), a8);
}

unint64_t sub_10045BC74()
{
  unint64_t result = 0x746E756F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F69746365726964;
      break;
    case 2:
      unint64_t result = 0x65646F43626F6ALL;
      break;
    case 3:
      unint64_t result = 0x65646953626F6ALL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10045BD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10049E048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10045BD4C(uint64_t a1)
{
  unint64_t v2 = sub_10049D750();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10045BD88(uint64_t a1)
{
  unint64_t v2 = sub_10049D750();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PendingSetErrorDetails.encode(to:)(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v16 = a5;
  int v19 = a4;
  uint64_t v8 = sub_10002B7CC(&qword_100AD5C98);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10049D750();
  sub_10096D590();
  LOBYTE(v17) = 0;
  sub_10096D180();
  if (!v5)
  {
    uint64_t v12 = v16;
    uint64_t v17 = a3;
    int v13 = v19;
    char v18 = v19;
    char v20 = 1;
    sub_10049D7A4();
    sub_10096D1A0();
    LOBYTE(v17) = BYTE1(v13);
    char v20 = 2;
    sub_10049D7F8();
    sub_10096D100();
    LOBYTE(v17) = BYTE2(v13);
    char v20 = 3;
    sub_10049D84C();
    sub_10096D100();
    uint64_t v17 = v12;
    char v20 = 4;
    sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
    sub_100078DBC(&qword_100ACB9A0);
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t PendingSetErrorDetails.init(from:)(void *a1)
{
  uint64_t result = sub_10049E268(a1);
  if (v1) {
    return v3 & 0xFFFFFF;
  }
  return result;
}

uint64_t sub_10045C074@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10049E268(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(_WORD *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 18) = BYTE2(v6);
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_10045C0B8(void *a1)
{
  return PendingSetErrorDetails.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int16 *)(v1 + 16) | (*(unsigned __int8 *)(v1 + 18) << 16), *(void *)(v1 + 24));
}

uint64_t sub_10045C0E4(uint64_t a1, uint64_t a2)
{
  return sub_10049D5D4(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(unsigned char *)(a1 + 17), *(void **)(a1 + 24), *(void *)(a2 + 8), *(unsigned char *)(a2 + 16), *(unsigned char *)(a2 + 17), *(void **)(a2 + 24));
}

uint64_t FPCK.numberOfFilesChecked.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.numberOfFilesChecked.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.numberOfFilesChecked.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.numberOfBrokenFilesInFSAndFSSnapshotCheck.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.numberOfBrokenFilesInFSAndFSSnapshotCheck.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.numberOfBrokenFilesInFSAndFSSnapshotCheck.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.numberOfBrokenFilesInReconciliationTableCheck.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.numberOfBrokenFilesInReconciliationTableCheck.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.numberOfBrokenFilesInReconciliationTableCheck.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.numberOfBrokenFilesInBackupManifestCheck.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInBackupManifestCheck;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.numberOfBrokenFilesInBackupManifestCheck.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInBackupManifestCheck);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.numberOfBrokenFilesInBackupManifestCheck.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.numberOfReconciliationTableEntries.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.numberOfReconciliationTableEntries.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.numberOfReconciliationTableEntries.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.totalDatalessItems.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.totalDatalessItems.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.totalDatalessItems.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.totalMaterializedItems.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.totalMaterializedItems.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.totalMaterializedItems.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.accumulatedFileSizes.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.accumulatedFileSizes.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.accumulatedFileSizes.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.accumulatedSizeOfDisk.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.accumulatedSizeOfDisk.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.accumulatedSizeOfDisk.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.accumulatedDownloads.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedDownloads;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.accumulatedDownloads.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedDownloads);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.accumulatedDownloads.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.accumulatedUploads.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedUploads;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.accumulatedUploads.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedUploads);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.accumulatedUploads.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.multipleHardlinksExtensions.getter()
{
  return sub_10045D3A8();
}

uint64_t FPCK.multipleHardlinksExtensions.setter(uint64_t a1)
{
  return sub_10045D488(a1, &OBJC_IVAR____TtC9libfssync4FPCK_multipleHardlinksExtensions);
}

uint64_t (*FPCK.multipleHardlinksExtensions.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.pendingSetSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.pendingSetSize.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.pendingSetSize.modify())()
{
  return j__swift_endAccess_0;
}

uint64_t FPCK.superPendingSetSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t FPCK.superPendingSetSize.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*FPCK.superPendingSetSize.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.pendingSetItemPayload.getter()
{
  return sub_10045D3A8();
}

uint64_t FPCK.pendingSetItemPayload.setter(uint64_t a1)
{
  return sub_10045D488(a1, &OBJC_IVAR____TtC9libfssync4FPCK_pendingSetItemPayload);
}

uint64_t (*FPCK.pendingSetItemPayload.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.superPendingSetItemPayload.getter()
{
  return sub_10045D3A8();
}

uint64_t FPCK.superPendingSetItemPayload.setter(uint64_t a1)
{
  return sub_10045D488(a1, &OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetItemPayload);
}

uint64_t (*FPCK.superPendingSetItemPayload.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.telemetryReport.getter()
{
  return sub_10045D3A8();
}

uint64_t sub_10045D3A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t FPCK.telemetryReport.setter(uint64_t a1)
{
  return sub_10045D488(a1, &OBJC_IVAR____TtC9libfssync4FPCK_telemetryReport);
}

uint64_t sub_10045D488(uint64_t a1, void *a2)
{
  NSString v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  void *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FPCK.telemetryReport.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.pendingSetErrors.getter()
{
  return sub_10045D3A8();
}

uint64_t FPCK.pendingSetErrors.setter(uint64_t a1)
{
  return sub_10045D488(a1, &OBJC_IVAR____TtC9libfssync4FPCK_pendingSetErrors);
}

uint64_t (*FPCK.pendingSetErrors.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t FPCK.superPendingSetErrors.getter()
{
  return sub_10045D3A8();
}

uint64_t FPCK.superPendingSetErrors.setter(uint64_t a1)
{
  return sub_10045D488(a1, &OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetErrors);
}

uint64_t (*FPCK.superPendingSetErrors.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t sub_10045D61C()
{
  return *(unsigned int *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_volumeRole);
}

uint64_t sub_10045D62C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_repairStartTime);
}

void sub_10045D63C()
{
}

id FPCK.__allocating_init(withDatabasesBackupsPaths:volumeRole:providerDomainID:domainUserInfo:reason:usingFPFS:iCDPackageDetection:useShouldPause:shouldPause:sendDiagnostics:saveCheckpoint:isInvalidated:)(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, Swift::Bool (__swiftcall *a15)(), Swift::Bool (__swiftcall *a16)())
{
  objc_allocWithZone(v16);
  if (a8)
  {
    swift_retain();
  }
  else
  {
    a9 = 0;
    a10 = 0;
  }
  swift_getObjectType();
  id v20 = sub_10049EFA4(a1, a2, a3, a4, a5, a6 & 1, a7 & 1, 0, 256, a9, a10, a11, a12, a13, a14, a15, a16);
  swift_release();
  swift_deallocPartialClassInstance();
  return v20;
}

id FPCK.init(withDatabasesBackupsPaths:volumeRole:providerDomainID:domainUserInfo:reason:usingFPFS:iCDPackageDetection:useShouldPause:shouldPause:sendDiagnostics:saveCheckpoint:isInvalidated:)(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, Swift::Bool (__swiftcall *a15)(), Swift::Bool (__swiftcall *a16)())
{
  if (a8)
  {
    swift_retain();
  }
  else
  {
    a9 = 0;
    a10 = 0;
  }
  swift_getObjectType();
  id v18 = sub_10049EFA4(a1, a2, a3, a4, a5, a6 & 1, a7 & 1, 0, 256, a9, a10, a11, a12, a13, a14, a15, a16);
  swift_release();
  swift_deallocPartialClassInstance();
  return v18;
}

id FPCK.__allocating_init(withDatabasesBackupsPaths:volumeRole:providerDomainID:domainUserInfo:reason:usingFPFS:iCDPackageDetection:mode:shouldPause:sendDiagnostics:saveCheckpoint:isInvalidated:)(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8, __int16 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, Swift::Bool (__swiftcall *a16)(), Swift::Bool (__swiftcall *a17)())
{
  return sub_10049EFA4(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 0x1FF, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_10045DBA4(void (*a1)(void, void), uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  id v154 = a5;
  unint64_t v150 = (unint64_t)a1;
  uint64_t v9 = sub_10096B480();
  uint64_t v145 = *(void *)(v9 - 8);
  uint64_t v146 = v9;
  __chkstk_darwin(v9);
  uint64_t v153 = (uint64_t *)((char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100AD63E0);
  __chkstk_darwin(v11 - 8);
  id v139 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10096AE50();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v151 = v13;
  uint64_t v152 = v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v140 = (uint64_t)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v142 = (char *)&v132 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v132 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v132 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v132 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v132 - v28;
  sub_10096ACD0();
  uint64_t v148 = v27;
  uint64_t v143 = a3;
  unint64_t v144 = a4;
  sub_10096ACD0();
  NSString v30 = sub_10015A5DC();
  uint64_t v137 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v149 = v31;

  uint64_t v141 = v6;
  unint64_t v32 = *(const void **)(v6 + OBJC_IVAR____TtC9libfssync4FPCK_ioContext);
  unint64_t v150 = *(unsigned int *)(v6 + OBJC_IVAR____TtC9libfssync4FPCK_ioContext + 8);
  LODWORD(v147) = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC9libfssync4FPCK_ioContext + 12);
  uint64_t v33 = self;
  _Block_copy(v32);
  id v34 = objc_msgSend(v33, "fp_insecureTempDirectoryIgnoringPersona");
  sub_10096ADD0();

  type metadata accessor for ReadOnlyWharf();
  swift_allocObject();
  uint64_t v35 = v151;
  uint64_t v36 = v152;
  uint64_t v38 = v152 + 16;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
  v37(v21, v24, v151);
  int v39 = &_mh_execute_header;
  if (!v147) {
    int v39 = 0;
  }
  uint64_t v40 = DocumentWharf.init(label:at:ioContext:targetQueue:reporter:)((void *)0x4F52236672616877, 0xE800000000000000, (uint64_t)v21, v32, (unint64_t)v39 | v150, 0, 0);
  long long v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v41 = v36 + 8;
  unint64_t v150 = (unint64_t)v42;
  v42(v24, v35);
  sub_10002B7CC((uint64_t *)&unk_100ACA8D0);
  unint64_t v43 = (*(unsigned __int8 *)(v41 + 72) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 72);
  long long v44 = (char *)swift_allocObject();
  *((_OWORD *)v44 + 1) = xmmword_100973BB0;
  int64_t v147 = v29;
  uint64_t v45 = v35;
  uint64_t v138 = (char *)v37;
  v37(&v44[v43], v29, v35);
  id v46 = objc_allocWithZone((Class)type metadata accessor for InternalPathsManager());
  swift_retain();
  id v47 = v154;
  id v48 = InternalPathsManager.init(providerDomainID:personaIdentifier:extensionManager:volume:rtcReporter:)((uint64_t)v47, 0, 0, 0, 0, 0);
  type metadata accessor for VFSFileTree(0);
  swift_allocObject();
  uint64_t v49 = VFSFileTree.init(rootURLs:wharf:pathManager:providerDomainID:openTelemetrySession:fsChangeMonitor:coordinatorPurposeIdentifier:setupRootFolders:)(v44, v40, v48, 0, 0, 0, 0, 0, 0, 0);
  id v154 = 0;
  unint64_t v50 = v49;
  uint64_t v51 = (uint64_t)v142;
  id v133 = v47;
  uint64_t v134 = v38;
  uint64_t v136 = v40;
  uint64_t v52 = (void *)swift_retain();
  if (objc_sync_enter(v52)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v50);
  }
  swift_retain();
  if (objc_sync_exit(v50)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v50);
  }
  uint64_t v53 = v35;
  Swift::String v135 = v50;
  swift_release();
  if (qword_100ACC040 != -1) {
    swift_once();
  }
  v163[0] = static Filename.trashName;
  *(void *)&long long v157 = 47;
  *((void *)&v157 + 1) = 0xE100000000000000;
  v156[0] = 58;
  v156[1] = 0xE100000000000000;
  sub_10001F9C0();
  sub_10096C910();
  sub_10096AD60();
  swift_bridgeObjectRelease();
  id v54 = v154;
  VFSLookupScope.checkExistingTrashFolder(at:)(v51);
  id v154 = v54;
  if (v54)
  {
    uint64_t v55 = (void (*)(char *, uint64_t))v150;
    ((void (*)(uint64_t, uint64_t))v150)(v51, v45);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v56 = v147;
    v55(v148, v45);
    goto LABEL_9;
  }
  uint64_t v152 = v41;
  ((void (*)(uint64_t, uint64_t))v150)(v51, v45);
  swift_release();
  int64_t v66 = self;
  uint64_t v67 = v136;
  swift_retain();
  id v68 = [v66 defaultStore];
  uint64_t v69 = (int)[v68 softConcurrentOperationLimit];
  signed int v70 = [v68 hardConcurrentOperationLimit];

  type metadata accessor for JobLimit();
  uint64_t v71 = (void *)swift_allocObject();
  v71[2] = 0;
  v71[3] = v69;
  v71[4] = v69;
  v71[5] = v70;
  id v72 = [v66 defaultStore];
  uint64_t v73 = (int)[v72 softConcurrentContentUpdateLimit];
  signed int v74 = [v72 hardConcurrentContentUpdateLimit];

  uint64_t v75 = v74;
  uint64_t v76 = (void *)swift_allocObject();
  void v76[2] = 0;
  v76[3] = v73;
  v76[4] = v73;
  v76[5] = v75;
  id v77 = [v66 defaultStore];
  uint64_t v78 = (int)[v77 softConcurrentMetadataOnlyUpdateLimit];
  LODWORD(v73) = [v77 hardConcurrentMetadataOnlyUpdateLimit];

  id v79 = (void *)swift_allocObject();
  v79[2] = 0;
  v79[3] = v78;
  v79[4] = v78;
  v79[5] = (int)v73;
  id v80 = [v66 defaultStore];
  uint64_t v81 = (int)[v80 softConcurrentProvideFileLimit];
  signed int v82 = [v80 hardConcurrentProvideFileLimit];

  unint64_t v83 = (void *)swift_allocObject();
  v83[2] = 0;
  v83[3] = v81;
  v83[4] = v81;
  v83[5] = v82;
  type metadata accessor for RestoreUpgradeSchemaFPFileTree(0);
  swift_allocObject();
  uint64_t v84 = sub_1008D4A50(v67, (uint64_t)v71, (uint64_t)v76, (uint64_t)v79, (uint64_t)v83);
  uint64_t v85 = v141;
  if (!*(void *)(v141 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker))
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v53 = v151;
    uint64_t v94 = (uint64_t)v147;
LABEL_80:
    int64_t v87 = v148;
    goto LABEL_81;
  }
  uint64_t v142 = *(char **)(v141 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker);
  int64_t v86 = *(char **)(v141 + OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker);
  int64_t v87 = v148;
  if (!v86)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v53 = v151;
    uint64_t v94 = (uint64_t)v147;
LABEL_81:
    swift_release();
    uint64_t v130 = (uint64_t (*)(uint64_t, uint64_t))v150;
    ((void (*)(char *, uint64_t))v150)(v87, v53);
    return v130(v94, v53);
  }
  uint64_t v53 = v151;
  ((void (*)(uint64_t, char *, uint64_t))v138)(v140, v148, v151);
  uint64_t v88 = type metadata accessor for TelemetrySignposter(0);
  uint64_t v89 = (uint64_t)v139;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v139, 1, 1, v88);
  sub_10002B7CC((uint64_t *)&unk_100AD63F0);
  uint64_t v90 = swift_allocObject();
  id v91 = v133;
  uint64_t v92 = v135;
  swift_retain();
  swift_retain();
  uint64_t v138 = v86;
  swift_retain();
  swift_retain();
  id v93 = v154;
  sub_1004F124C(v140, v92, v84, v89, 0x21uLL, 1801678950, 0xE400000000000000, 0x6E6E755F4B435046, 0xED00006465646565, v91, 0, v90);
  id v154 = v93;
  if (!v93)
  {
    uint64_t v146 = v84;
    uint64_t v95 = (uint64_t *)(v85 + OBJC_IVAR____TtC9libfssync4FPCK_openBackupDatabases);
    swift_beginAccess();
    sub_10096C070();
    if (*(void *)((*v95 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v95 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_10096C0F0();
    }
    sub_10096C150();
    sub_10096C0C0();
    swift_endAccess();
    uint64_t v94 = v137;
    NSString v96 = sub_10096BC00();
    uint64_t v97 = *v95;
    unint64_t v98 = (unint64_t)*v95 >> 62;
    uint64_t v99 = v142;
    uint64_t v153 = v95;
    if (v98)
    {
      swift_bridgeObjectRetain();
      uint64_t v100 = sub_10096CE70();
      if (v100)
      {
LABEL_22:
        unint64_t v101 = v100 - 1;
        if (__OFSUB__(v100, 1))
        {
          __break(1u);
        }
        else if ((v97 & 0xC000000000000001) == 0)
        {
          if ((v101 & 0x8000000000000000) != 0) {
            goto LABEL_87;
          }
          if (v101 >= *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_90:
            __break(1u);
            goto LABEL_91;
          }
          swift_retain();
          swift_bridgeObjectRelease();
          sub_10002B7CC((uint64_t *)&unk_100AD0850);
          uint64_t v102 = swift_dynamicCastClassUnconditional();
          swift_retain();
          swift_release();
          goto LABEL_27;
        }
        sub_10096CC30();
        swift_bridgeObjectRelease();
        sub_10002B7CC((uint64_t *)&unk_100AD0850);
        uint64_t v102 = swift_dynamicCastClassUnconditional();
        swift_retain();
        swift_unknownObjectRelease();
LABEL_27:
        char v103 = v99 + 16;
        swift_beginAccess();
        if (v102)
        {
          uint64_t v104 = v99;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v157 = *v103;
          *char v103 = 0x8000000000000000;
          sub_10038C69C(v102, v96, isUniquelyReferenced_nonNull_native);
          *char v103 = v157;

          swift_bridgeObjectRelease();
          uint64_t v94 = v137;
          goto LABEL_33;
        }
        uint64_t v94 = v137;
LABEL_32:
        uint64_t v104 = v99;
        sub_1009173B0((uint64_t)v96);

        swift_release();
LABEL_33:
        swift_endAccess();
        NSString v106 = sub_10096BC00();
        swift_beginAccess();
        uint64_t v107 = (uint64_t)v135;
        swift_retain();
        char v108 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v157 = *((void *)v104 + 3);
        *((void *)v104 + 3) = 0x8000000000000000;
        sub_10038C67C(v107, v106, v108);
        *((void *)v104 + 3) = v157;

        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v97 = (uint64_t)sub_10096BC00();
        uint64_t v109 = *v153;
        if ((unint64_t)*v153 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v110 = sub_10096CE70();
          if (v110) {
            goto LABEL_35;
          }
        }
        else
        {
          uint64_t v110 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v110)
          {
LABEL_35:
            unint64_t v111 = v110 - 1;
            if (!__OFSUB__(v110, 1))
            {
              if ((v109 & 0xC000000000000001) == 0)
              {
                if ((v111 & 0x8000000000000000) != 0)
                {
LABEL_91:
                  __break(1u);
                  goto LABEL_92;
                }
                if (v111 >= *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_95;
                }
                swift_retain();
                swift_bridgeObjectRelease();
                sub_10002B7CC(&qword_100AD0EB0);
                uint64_t v112 = swift_dynamicCastClassUnconditional();
                swift_retain();
                swift_release();
                goto LABEL_40;
              }
LABEL_88:
              sub_10096CC30();
              swift_bridgeObjectRelease();
              sub_10002B7CC(&qword_100AD0EB0);
              uint64_t v112 = swift_dynamicCastClassUnconditional();
              swift_retain();
              swift_unknownObjectRelease();
LABEL_40:
              unint64_t v113 = v138 + 16;
              swift_beginAccess();
              if (v112)
              {
                char v114 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)&long long v157 = *v113;
                *unint64_t v113 = 0x8000000000000000;
                sub_10038C65C(v112, (void *)v97, v114);
                *unint64_t v113 = v157;

                swift_bridgeObjectRelease();
                uint64_t v94 = v137;
LABEL_46:
                swift_endAccess();
                uint64_t v97 = (uint64_t)v153;
                uint64_t v115 = *v153;
                if ((unint64_t)*v153 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v116 = sub_10096CE70();
                  if (v116)
                  {
LABEL_48:
                    unint64_t v117 = v116 - 1;
                    if (!__OFSUB__(v116, 1))
                    {
                      if ((v115 & 0xC000000000000001) == 0)
                      {
                        if ((v117 & 0x8000000000000000) != 0) {
                          goto LABEL_96;
                        }
                        if (v117 < *(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10))
                        {
                          swift_retain();
                          swift_bridgeObjectRelease();
                          swift_retain();
                          swift_release();
                          sub_10002B7CC(&qword_100AD0BF0);
                          uint64_t v118 = swift_dynamicCastClass();
                          if (!v118)
                          {
                            swift_release();
                            swift_bridgeObjectRelease();
                            goto LABEL_58;
                          }
                          uint64_t v119 = v118;
LABEL_54:
                          NSString v120 = sub_10096BC00();
                          swift_bridgeObjectRelease();
                          char v121 = v138;
                          swift_beginAccess();
                          swift_retain();
                          char v122 = swift_isUniquelyReferenced_nonNull_native();
                          *(void *)&long long v157 = *((void *)v121 + 3);
                          *((void *)v121 + 3) = 0x8000000000000000;
                          sub_10038C4BC(v119, v120, v122);
                          *((void *)v121 + 3) = v157;

                          swift_bridgeObjectRelease();
                          swift_endAccess();
                          swift_release();
                          goto LABEL_58;
                        }
                        __break(1u);
LABEL_99:
                        __break(1u);
LABEL_100:
                        __break(1u);
LABEL_101:
                        uint64_t v128 = sub_10096CC30();
LABEL_79:
                        swift_bridgeObjectRelease();
                        *(void *)(v141 + OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase) = v128;
                        swift_release();
                        swift_release();
                        swift_release();
                        swift_release();
                        swift_release();
                        goto LABEL_80;
                      }
LABEL_92:
                      sub_10096CC30();
                      swift_bridgeObjectRelease();
                      swift_retain();
                      swift_unknownObjectRelease();
                      sub_10002B7CC(&qword_100AD0BF0);
                      uint64_t v131 = swift_dynamicCastClass();
                      if (!v131) {
                        goto LABEL_105;
                      }
                      uint64_t v119 = v131;
                      uint64_t v53 = v151;
                      goto LABEL_54;
                    }
                    goto LABEL_90;
                  }
                }
                else
                {
                  uint64_t v116 = *(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain();
                  if (v116) {
                    goto LABEL_48;
                  }
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                while (1)
                {
LABEL_58:
                  uint64_t v123 = *(void *)v97;
                  uint64_t v94 = (uint64_t)v147;
                  if (*(void *)v97 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v124 = sub_10096CE70();
                    if (!v124)
                    {
LABEL_71:
                      swift_bridgeObjectRelease();
                      goto LABEL_72;
                    }
                  }
                  else
                  {
                    uint64_t v124 = *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    swift_bridgeObjectRetain();
                    if (!v124) {
                      goto LABEL_71;
                    }
                  }
                  unint64_t v125 = v124 - 1;
                  if (__OFSUB__(v124, 1))
                  {
LABEL_95:
                    __break(1u);
LABEL_96:
                    __break(1u);
                  }
                  else if ((v123 & 0xC000000000000001) == 0)
                  {
                    if ((v125 & 0x8000000000000000) != 0) {
                      goto LABEL_100;
                    }
                    if (v125 >= *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    {
                      __break(1u);
LABEL_103:
                      __break(1u);
                      goto LABEL_104;
                    }
                    swift_retain();
                    swift_bridgeObjectRelease();
                    swift_retain();
                    swift_release();
                    goto LABEL_65;
                  }
                  sub_10096CC30();
                  swift_bridgeObjectRelease();
                  swift_retain();
                  swift_unknownObjectRelease();
LABEL_65:
                  id v126 = v154;
                  sub_10069EB58(1129530692, 0xE400000000000000, v156);
                  if (v126)
                  {
                    swift_errorRelease();
LABEL_67:
                    swift_release();
                    goto LABEL_72;
                  }
                  sub_10001AE98((uint64_t)v156, (uint64_t)&v157, &qword_100AD70C0);
                  if (!(void)v158) {
                    goto LABEL_67;
                  }
                  v164[0] = v160;
                  v164[1] = v161;
                  uint64_t v165 = v162;
                  v163[0] = v157;
                  v163[1] = v158;
                  v163[2] = v159;
                  long long v166 = *(_OWORD *)((char *)v164 + 8);
                  sub_1000A6F50((uint64_t)&v166);
                  sub_100352C88(v156);
                  swift_release();
                  *(_OWORD *)(v141 + OBJC_IVAR____TtC9libfssync4FPCK_providerVersion) = v166;
                  swift_bridgeObjectRelease();
LABEL_72:
                  uint64_t v127 = *(void *)v97;
                  if (*(void *)v97 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v128 = sub_10096CE70();
                    if (!v128) {
                      goto LABEL_79;
                    }
                  }
                  else
                  {
                    uint64_t v128 = *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    swift_bridgeObjectRetain();
                    if (!v128) {
                      goto LABEL_79;
                    }
                  }
                  unint64_t v129 = v128 - 1;
                  if (__OFSUB__(v128, 1)) {
                    goto LABEL_99;
                  }
                  if ((v127 & 0xC000000000000001) != 0) {
                    goto LABEL_101;
                  }
                  if ((v129 & 0x8000000000000000) != 0) {
                    goto LABEL_103;
                  }
                  if (v129 < *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  {
                    uint64_t v128 = *(void *)(v127 + 8 * v129 + 32);
                    swift_retain();
                    goto LABEL_79;
                  }
LABEL_104:
                  __break(1u);
LABEL_105:
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v53 = v151;
                }
              }
              uint64_t v94 = v137;
LABEL_45:
              sub_10091737C(v97);

              swift_release();
              goto LABEL_46;
            }
            __break(1u);
LABEL_87:
            __break(1u);
            goto LABEL_88;
          }
        }
        swift_bridgeObjectRelease();
        swift_beginAccess();
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v100 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v100) {
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    goto LABEL_32;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v56 = v147;
  uint64_t v55 = (void (*)(char *, uint64_t))v150;
  ((void (*)(char *, uint64_t))v150)(v148, v53);
LABEL_9:
  v55(v56, v53);
  id v57 = (id)fpfs_current_or_default_log();
  uint64_t v58 = v153;
  sub_10096B490();
  unint64_t v59 = v144;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  int64_t v60 = sub_10096B470();
  os_log_type_t v61 = sub_10096C5B0();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = swift_slowAlloc();
    uint64_t v63 = (void *)swift_slowAlloc();
    *(void *)&v163[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v62 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)&long long v157 = sub_100719D44(v143, v59, (uint64_t *)v163);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v62 + 12) = 2112;
    swift_getErrorValue();
    id v64 = Error.prettyDescription.getter(v155);
    *(void *)&long long v157 = v64;
    sub_10096C8C0();
    *uint64_t v63 = v64;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "Can't open database at: %{public}s, launching only FPCK disk checks: %@", (uint8_t *)v62, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v145 + 8))(v153, v146);
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    return (*(uint64_t (**)(uint64_t *, uint64_t))(v145 + 8))(v58, v146);
  }
}

uint64_t sub_10045F1B8()
{
  return swift_errorRetain();
}

id FPCK.__deallocating_deinit()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_openBackupDatabases);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    v12.receiver = v11;
    v12.super_class = (Class)type metadata accessor for FPCK(0);
    return objc_msgSendSuper2(&v12, "dealloc");
  }
  swift_bridgeObjectRetain();
  id result = (id)sub_10096CE70();
  uint64_t v3 = (uint64_t)result;
  if (!result) {
    goto LABEL_13;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = sub_10096CC30();
      }
      else
      {
        uint64_t v7 = *(void *)(v2 + 8 * v5 + 32);
        swift_retain();
      }
      id v8 = (id)fpfs_adopt_log();
      uint64_t v9 = (unsigned int *)(v7 + qword_100B0B1C0);
      __swp(v9, v9);
      if ((v9 & 1) == 0)
      {
        sub_100486C7C();
        if (*(unsigned char *)(v7 + qword_100B0B1C8) != 1)
        {
          id v10 = *(id *)(v7 + 64);
          sub_100270A48(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_10049F368, v7);
        }
      }
      ++v5;
      id v6 = (id)fpfs_adopt_log();
      swift_release();
    }
    while (v3 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10045F670()
{
  uint64_t v1 = OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___importIsRunning;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___importIsRunning);
  if (v2 == 2)
  {
    char v3 = sub_10045F6BC(v0);
    *(unsigned char *)(v0 + v1) = v3 & 1;
  }
  else
  {
    char v3 = v2 & 1;
  }
  return v3 & 1;
}

uint64_t sub_10045F6BC(uint64_t a1)
{
  uint64_t v2 = sub_10096B480();
  __chkstk_darwin(v2);
  char v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9libfssync4FPCK_openBackupDatabases);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10096CE70();
    if (v15) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v15 = v5;
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 4;
      do
      {
        uint64_t v8 = v6 - 4;
        if ((v4 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = sub_10096CC30();
          uint64_t v10 = v6 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(v4 + 8 * v6);
          swift_retain();
          uint64_t v10 = v6 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        char v12 = sub_10048D710(v9, (uint64_t)"importIsRunning", 15, 2, 1, (uint64_t)sub_1004A5BC0, v9);
        char v7 = v12;
        swift_release();
        if (v7)
        {
          uint64_t v13 = 1;
          goto LABEL_16;
        }
        ++v6;
      }
      while (v10 != v15);
    }
  }
  uint64_t v13 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10045FA38@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_10002B7CC(&qword_100AD0BF0);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  char v5 = sub_100492500();
  uint64_t result = swift_release();
  if (!v2)
  {
    if (v5) {
      uint64_t result = 1;
    }
    else {
      uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 24) + 480))(result);
    }
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_10045FB14()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_reason);
  if ((v1 & 2) == 0)
  {
    uint64_t v2 = (char *)_swiftEmptyArrayStorage;
    if ((v1 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v2 = sub_100072CCC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100072CCC((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  char v5 = &v2[16 * v4];
  *((void *)v5 + 4) = 0x6F6974617267696DLL;
  *((void *)v5 + 5) = 0xE90000000000006ELL;
  if ((v1 & 4) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_100072CCC(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v7 = *((void *)v2 + 2);
    unint64_t v6 = *((void *)v2 + 3);
    if (v7 >= v6 >> 1) {
      uint64_t v2 = sub_100072CCC((char *)(v6 > 1), v7 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v7 + 1;
    uint64_t v8 = &v2[16 * v7];
    *((void *)v8 + 4) = 0x726961706572;
    *((void *)v8 + 5) = 0xE600000000000000;
  }
LABEL_12:
  if ((v1 & 8) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_100072CCC(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v10 = *((void *)v2 + 2);
    unint64_t v9 = *((void *)v2 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v2 = sub_100072CCC((char *)(v9 > 1), v10 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v10 + 1;
    uint64_t v11 = &v2[16 * v10];
    *((void *)v11 + 4) = 1919251317;
    *((void *)v11 + 5) = 0xE400000000000000;
    if ((v1 & 0x10) == 0)
    {
LABEL_14:
      if ((v1 & 0x20) == 0) {
        goto LABEL_15;
      }
      goto LABEL_28;
    }
  }
  else if ((v1 & 0x10) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100072CCC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v13 = *((void *)v2 + 2);
  unint64_t v12 = *((void *)v2 + 3);
  if (v13 >= v12 >> 1) {
    uint64_t v2 = sub_100072CCC((char *)(v12 > 1), v13 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v13 + 1;
  uint64_t v14 = &v2[16 * v13];
  *((void *)v14 + 4) = 0x6E6F6D656164;
  *((void *)v14 + 5) = 0xE600000000000000;
  if ((v1 & 0x20) == 0)
  {
LABEL_15:
    if ((v1 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_28:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100072CCC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v16 = *((void *)v2 + 2);
  unint64_t v15 = *((void *)v2 + 3);
  if (v16 >= v15 >> 1) {
    uint64_t v2 = sub_100072CCC((char *)(v15 > 1), v16 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v16 + 1;
  uint64_t v17 = &v2[16 * v16];
  *((void *)v17 + 4) = 0x676E6974736574;
  *((void *)v17 + 5) = 0xE700000000000000;
  if ((v1 & 0x40) == 0)
  {
LABEL_16:
    if ((v1 & 0x80) == 0) {
      goto LABEL_43;
    }
    goto LABEL_38;
  }
LABEL_33:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100072CCC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v19 = *((void *)v2 + 2);
  unint64_t v18 = *((void *)v2 + 3);
  if (v19 >= v18 >> 1) {
    uint64_t v2 = sub_100072CCC((char *)(v18 > 1), v19 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v19 + 1;
  uint64_t v20 = &v2[16 * v19];
  *((void *)v20 + 4) = 4469316;
  *((void *)v20 + 5) = 0xE300000000000000;
  if ((v1 & 0x80) != 0)
  {
LABEL_38:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_100072CCC(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v22 = *((void *)v2 + 2);
    unint64_t v21 = *((void *)v2 + 3);
    if (v22 >= v21 >> 1) {
      uint64_t v2 = sub_100072CCC((char *)(v21 > 1), v22 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v22 + 1;
    uint64_t v23 = &v2[16 * v22];
    *((void *)v23 + 4) = 0x6E776F6E6B6E75;
    *((void *)v23 + 5) = 0xE700000000000000;
  }
LABEL_43:
  sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  sub_100025500(qword_100ACE150, (uint64_t *)&unk_100AD5CC0);
  uint64_t v24 = sub_10096BB50();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_10045FF38()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10096B480();
  long long v417 = *(void (**)(void *@<X8>))(v2 - 8);
  uint64_t v418 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v407 = (char *)&v403 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v403 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  unint64_t v10 = (char *)&v403 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v410 = (char *)&v403 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  long long v412 = ((char *)&v403 - v14);
  uint64_t v15 = __chkstk_darwin(v13);
  long long v413 = (char *)&v403 - v16;
  __chkstk_darwin(v15);
  uint64_t v422 = (uint64_t *)((char *)&v403 - v17);
  uint64_t v18 = sub_10096B0E0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v403 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v22 = sub_10015A4E8();
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  NSString v23 = sub_10096BC00();
  swift_bridgeObjectRelease();
  unsigned int v24 = objc_msgSend(v23, "fp_isiCloudDriveIdentifier");

  sub_10096B0D0();
  sub_10096B080();
  double v26 = v25;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  double v27 = v26 * 1000000000.0;
  if ((~COERCE__INT64(v26 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_305;
  }
  if (v27 <= -9.22337204e18)
  {
LABEL_306:
    __break(1u);
    goto LABEL_307;
  }
  if (v27 >= 9.22337204e18)
  {
LABEL_307:
    __break(1u);
    goto LABEL_308;
  }
  uint64_t v28 = *(void *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_repairStartTime];
  uint64_t v29 = (uint64_t)v27 - v28;
  if (__OFSUB__((uint64_t)v27, v28))
  {
LABEL_308:
    __break(1u);
    goto LABEL_309;
  }
  v411 = v10;
  double v438 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v29, 0x7544726961706572, 0xEE006E6F69746172, isUniquelyReferenced_nonNull_native);
  double v438 = v427;
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_10045F670() & 1;
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v31, 0x6D6965526E497369, 0xEC00000074726F70, v32);
  double v438 = v427;
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked];
  swift_beginAccess();
  uint64_t v34 = *v33;
  char v35 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v34, 0xD000000000000014, 0x80000001009A2710, v35);
  double v438 = v427;
  swift_bridgeObjectRelease();
  uint64_t v36 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck];
  swift_beginAccess();
  uint64_t v37 = *v36;
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v37, 0xD000000000000029, 0x80000001009A2730, v38);
  double v438 = v427;
  swift_bridgeObjectRelease();
  int v39 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck];
  swift_beginAccess();
  uint64_t v40 = *v39;
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v40, 0xD000000000000031, 0x80000001009A2760, v41);
  double v438 = v427;
  swift_bridgeObjectRelease();
  long long v42 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck];
  swift_beginAccess();
  uint64_t v43 = *v42;
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v43, 0xD00000000000002DLL, 0x80000001009A27A0, v44);
  double v438 = v427;
  swift_bridgeObjectRelease();
  uint64_t v45 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems];
  swift_beginAccess();
  uint64_t v46 = *v45;
  char v47 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v46, 0xD000000000000012, 0x80000001009A2830, v47);
  double v438 = v427;
  swift_bridgeObjectRelease();
  id v48 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems];
  swift_beginAccess();
  uint64_t v49 = *v48;
  char v50 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v49, 0xD000000000000016, 0x80000001009A2850, v50);
  double v438 = v427;
  swift_bridgeObjectRelease();
  uint64_t v51 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes];
  swift_beginAccess();
  uint64_t v52 = *v51;
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v52, 0xD000000000000014, 0x80000001009A2870, v53);
  double v438 = v427;
  swift_bridgeObjectRelease();
  id v54 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk];
  swift_beginAccess();
  uint64_t v55 = *v54;
  char v56 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  uint64_t v404 = 0xD000000000000015;
  sub_10038C9A0(v55, 0xD000000000000015, 0x80000001009A2890, v56);
  double v438 = v427;
  swift_bridgeObjectRelease();
  id v57 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize];
  swift_beginAccess();
  uint64_t v58 = *v57;
  char v59 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v58, 0x53676E69646E6570, 0xEE00657A69537465, v59);
  double v438 = v427;
  swift_bridgeObjectRelease();
  int64_t v60 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize];
  swift_beginAccess();
  uint64_t v61 = *v60;
  char v62 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v61, 0xD000000000000013, 0x80000001009A2920, v62);
  double v438 = v427;
  swift_bridgeObjectRelease();
  uint64_t v63 = (uint64_t *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries];
  swift_beginAccess();
  uint64_t v64 = *v63;
  char v65 = swift_isUniquelyReferenced_nonNull_native();
  double v427 = v438;
  double v438 = -0.0;
  sub_10038C9A0(v64, 0xD000000000000022, 0x80000001009A2800, v65);
  double v438 = v427;
  swift_bridgeObjectRelease();
  uint64_t v66 = OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker;
  uint64_t v67 = *(void *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker];
  if (v67)
  {
    id v68 = *(void **)(v67 + 48);
    if (*(unsigned char *)(v67 + 56) == 1)
    {
      if (!v68) {
        goto LABEL_16;
      }
      swift_retain();
      id v68 = sub_10063E084();
    }
    else
    {
      swift_retain();
    }
    if (v68 != (void *)0x7FFFFFFF)
    {
      if (v68 && sub_10063E084())
      {
        uint64_t v69 = *(void *)(v67 + 64);
        swift_release();
        double v70 = fmin((double)(uint64_t)v68 / (double)v69, 1.0);
      }
      else
      {
        swift_release();
        double v70 = 0.0;
      }
LABEL_17:
      double v71 = v70 * 100.0;
      if ((~*(void *)&v71 & 0x7FF0000000000000) != 0)
      {
        if (v71 > -9.22337204e18)
        {
          if (v71 < 9.22337204e18)
          {
            uint64_t v72 = (uint64_t)v71;
            char v73 = swift_isUniquelyReferenced_nonNull_native();
            double v427 = v438;
            double v438 = -0.0;
            sub_10038C9A0(v72, 0x676E696C706D6173, 0xEC00000065746152, v73);
            double v438 = v427;
            swift_bridgeObjectRelease();
            if (*(void *)&v1[v66])
            {
              swift_retain();
              signed int v74 = sub_10063E084();
              swift_release();
              char v75 = swift_isUniquelyReferenced_nonNull_native();
              double v427 = v438;
              double v438 = -0.0;
              sub_10038C9A0((uint64_t)v74, 0xD000000000000019, 0x80000001009A41C0, v75);
              double v438 = v427;
              swift_bridgeObjectRelease();
            }
            goto LABEL_22;
          }
LABEL_311:
          __break(1u);
          goto LABEL_312;
        }
LABEL_310:
        __break(1u);
        goto LABEL_311;
      }
LABEL_309:
      __break(1u);
      goto LABEL_310;
    }
    swift_release();
LABEL_16:
    double v70 = 1.0;
    goto LABEL_17;
  }
LABEL_22:
  if (*(void *)&v1[OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker])
  {
    swift_retain();
    uint64_t v76 = sub_1007CBAFC();
    swift_release();
    char v77 = swift_isUniquelyReferenced_nonNull_native();
    double v427 = v438;
    double v438 = -0.0;
    sub_10038C9A0((uint64_t)v76, 0xD000000000000019, 0x80000001009A41E0, v77);
    double v438 = v427;
    swift_bridgeObjectRelease();
  }
  uint64_t v409 = v7;
  unsigned int v405 = v24;
  uint64_t v78 = *(void *)&v1[v66];
  if (v78)
  {
    swift_beginAccess();
    uint64_t v79 = *(void *)(*(void *)(v78 + 40) + 16);
    char v80 = swift_isUniquelyReferenced_nonNull_native();
    double v427 = v438;
    double v438 = -0.0;
    sub_10038C9A0(v79, 0xD000000000000012, 0x80000001009A2C50, v80);
    double v438 = v427;
    swift_bridgeObjectRelease();
  }
  id v81 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + 16) = v1;
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = sub_1004A7130;
  *(void *)(v83 + 24) = v82;
  long long v414 = v1;
  swift_retain();
  uint64_t v84 = sub_10096B470();
  os_log_type_t v85 = sub_10096C590();
  uint64_t v86 = swift_allocObject();
  *(unsigned char *)(v86 + 16) = 32;
  uint64_t v87 = swift_allocObject();
  *(unsigned char *)(v87 + 16) = 8;
  uint64_t v88 = swift_allocObject();
  *(void *)(v88 + 16) = sub_1004A713C;
  *(void *)(v88 + 24) = v83;
  uint64_t v89 = swift_allocObject();
  *(void *)(v89 + 16) = sub_10010DB94;
  *(void *)(v89 + 24) = v88;
  double v415 = COERCE_DOUBLE(sub_10002B7CC(&qword_100ACD798));
  uint64_t v90 = swift_allocObject();
  sub_10038FCB0(v90, 3);
  void *v91 = sub_10010DB7C;
  v91[1] = v86;
  v91[2] = sub_10012133C;
  v91[3] = v87;
  v91[4] = sub_10010DB9C;
  v91[5] = v89;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v421 = v84;
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v92 = (uint8_t *)swift_slowAlloc();
    *(double *)&uint64_t v420 = COERCE_DOUBLE(swift_slowAlloc());
    double v427 = *(double *)&v420;
    *(_WORD *)uint64_t v92 = 258;
    v92[2] = 32;
    swift_release();
    v92[3] = 8;
    swift_release();
    uint64_t v419 = (uint64_t)(v92 + 4);
    swift_beginAccess();
    type metadata accessor for BrokenInvariants(0);
    sub_1004A70C8(&qword_100ACDDC0, type metadata accessor for BrokenInvariants);
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_10096B9D0();
    unint64_t v95 = v94;
    swift_bridgeObjectRelease();
    *(void *)&long long v425 = sub_100719D44(v93, v95, (uint64_t *)&v427);
    sub_10096C8C0();
    NSString v96 = v414;

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v97 = v421;
    _os_log_impl((void *)&_mh_execute_header, v421, v85, "FPCK: FPDRTCReporting diskBrokenInvariants %s ", v92, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v98 = qword_100AD4F80 + 128;
    swift_slowDealloc();

    int v416 = *((void *)v417 + 1);
    ((void (*)(uint64_t *, uint64_t))v416)(v422, v418);
    uint64_t v99 = (char *)v96;
  }
  else
  {

    unint64_t v98 = &qword_100AD4F80[16];
    uint64_t v100 = v414;

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    int v416 = *((void *)v417 + 1);
    ((void (*)(uint64_t *, uint64_t))v416)(v422, v418);
    uint64_t v99 = (char *)v100;
  }
  unint64_t v101 = (uint64_t **)&v99[v98[493]];
  swift_beginAccess();
  char v408 = v101;
  uint64_t v102 = *v101;
  uint64_t v103 = (*v101)[8];
  uint64_t v419 = (uint64_t)(*v101 + 8);
  uint64_t v104 = 1 << *((unsigned char *)v102 + 32);
  uint64_t v105 = -1;
  if (v104 < 64) {
    uint64_t v105 = ~(-1 << v104);
  }
  unint64_t v106 = v105 & v103;
  uint64_t v420 = (uint64_t *)((unint64_t)(v104 + 63) >> 6);
  uint64_t v422 = v102;
  swift_bridgeObjectRetain();
  uint64_t v107 = 0;
  uint64_t v421 = 0x80000001009A4200;
  while (1)
  {
    if (v106)
    {
      unint64_t v108 = __clz(__rbit64(v106));
      v106 &= v106 - 1;
      unint64_t v109 = v108 | (v107 << 6);
      goto LABEL_50;
    }
    uint64_t v110 = v107 + 1;
    if (__OFADD__(v107, 1)) {
      goto LABEL_285;
    }
    if (v110 >= (uint64_t)v420) {
      break;
    }
    unint64_t v111 = *(void *)(v419 + 8 * v110);
    ++v107;
    if (!v111)
    {
      uint64_t v107 = v110 + 1;
      if (v110 + 1 >= (uint64_t)v420) {
        break;
      }
      unint64_t v111 = *(void *)(v419 + 8 * v107);
      if (!v111)
      {
        uint64_t v107 = v110 + 2;
        if (v110 + 2 >= (uint64_t)v420) {
          break;
        }
        unint64_t v111 = *(void *)(v419 + 8 * v107);
        if (!v111)
        {
          uint64_t v112 = v110 + 3;
          if (v112 >= (uint64_t)v420) {
            break;
          }
          unint64_t v111 = *(void *)(v419 + 8 * v112);
          if (!v111)
          {
            while (1)
            {
              uint64_t v107 = v112 + 1;
              if (__OFADD__(v112, 1)) {
                goto LABEL_294;
              }
              if (v107 >= (uint64_t)v420) {
                goto LABEL_60;
              }
              unint64_t v111 = *(void *)(v419 + 8 * v107);
              ++v112;
              if (v111) {
                goto LABEL_49;
              }
            }
          }
          uint64_t v107 = v112;
        }
      }
    }
LABEL_49:
    unint64_t v106 = (v111 - 1) & v111;
    unint64_t v109 = __clz(__rbit64(v111)) + (v107 << 6);
LABEL_50:
    uint64_t v113 = 8 * v109;
    uint64_t v114 = *(void *)(v422[7] + v113);
    v439._int countAndFlagsBits = sub_100609904(*(void *)(v422[6] + v113));
    double v427 = -2.31584178e77;
    id v428 = v421;
    sub_10096BDC0(v439);
    swift_bridgeObjectRelease();
    double v116 = v427;
    uint64_t v115 = (uint64_t)v428;
    char v117 = swift_isUniquelyReferenced_nonNull_native();
    double v118 = v438;
    double v427 = v438;
    double v438 = -0.0;
    unint64_t v120 = sub_10000DDD0(*(uint64_t *)&v116, v115);
    uint64_t v121 = *(void *)(*(void *)&v118 + 16);
    BOOL v122 = (v119 & 1) == 0;
    uint64_t v123 = v121 + v122;
    if (__OFADD__(v121, v122))
    {
      __break(1u);
LABEL_283:
      __break(1u);
LABEL_284:
      __break(1u);
LABEL_285:
      __break(1u);
LABEL_286:
      __break(1u);
LABEL_287:
      __break(1u);
LABEL_288:
      __break(1u);
LABEL_289:
      __break(1u);
LABEL_290:
      __break(1u);
LABEL_291:
      __break(1u);
LABEL_292:
      __break(1u);
LABEL_293:
      __break(1u);
LABEL_294:
      __break(1u);
      goto LABEL_295;
    }
    char v124 = v119;
    if (*(void *)(*(void *)&v118 + 24) >= v123)
    {
      if (v117)
      {
        double v127 = v427;
        if ((v119 & 1) == 0) {
          goto LABEL_32;
        }
      }
      else
      {
        sub_10091FD98();
        double v127 = v427;
        if ((v124 & 1) == 0) {
          goto LABEL_32;
        }
      }
    }
    else
    {
      sub_100379E10(v123, v117);
      unint64_t v125 = sub_10000DDD0(*(uint64_t *)&v116, v115);
      if ((v124 & 1) != (v126 & 1)) {
        goto LABEL_313;
      }
      unint64_t v120 = v125;
      double v127 = v427;
      if ((v124 & 1) == 0)
      {
LABEL_32:
        sub_10038E554(v120, *(void *)&v116, v115, v114, *(void *)&v127);
        swift_bridgeObjectRetain();
        goto LABEL_33;
      }
    }
    *(void *)(*(void *)(*(void *)&v127 + 56) + 8 * v120) = v114;
LABEL_33:
    double v438 = v127;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_60:
  swift_release();
  id v128 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v129 = swift_allocObject();
  uint64_t v130 = v414;
  *(void *)(v129 + 16) = v414;
  uint64_t v131 = swift_allocObject();
  *(void *)(v131 + 16) = sub_1004A7164;
  *(void *)(v131 + 24) = v129;
  uint64_t v421 = v130;
  uint64_t v132 = sub_10096B470();
  LOBYTE(v129) = sub_10096C590();
  uint64_t v133 = swift_allocObject();
  *(unsigned char *)(v133 + 16) = 32;
  uint64_t v134 = swift_allocObject();
  *(unsigned char *)(v134 + 16) = 8;
  uint64_t v135 = swift_allocObject();
  *(void *)(v135 + 16) = sub_1004A7170;
  *(void *)(v135 + 24) = v131;
  uint64_t v136 = swift_allocObject();
  *(void *)(v136 + 16) = sub_100121318;
  *(void *)(v136 + 24) = v135;
  uint64_t v137 = swift_allocObject();
  sub_10038FCB0(v137, 3);
  *uint64_t v138 = sub_10012133C;
  v138[1] = v133;
  v138[2] = sub_10012133C;
  v138[3] = v134;
  v138[4] = sub_100121338;
  v138[5] = v136;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v139 = v129;
  if (os_log_type_enabled(v132, (os_log_type_t)v129))
  {
    uint64_t v140 = (uint8_t *)swift_slowAlloc();
    uint64_t v141 = swift_slowAlloc();
    *(void *)&long long v425 = 0;
    v437[0] = v141;
    *(_WORD *)uint64_t v140 = 258;
    *(void *)&double v427 = v140 + 2;
    sub_100719BF0((unsigned char **)&v427, (uint64_t)&v425, (uint64_t)v437, 32);
    swift_release();
    sub_100719BF0((unsigned char **)&v427, (uint64_t)&v425, (uint64_t)v437, 8);
    swift_release();
    swift_retain();
    sub_100494CBC((uint64_t *)&v427, (uint64_t)&v425, v437, sub_1004A7170);
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v132, v139, "FPCK: FPDRTCReporting diskVersusFSSnapshotDiff %s ", v140, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_100719B98();
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  ((void (*)(char *, uint64_t))v416)(v413, v418);
  uint64_t v142 = (char *)v421 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskVsFSSnapshotDiffCounters;
  swift_beginAccess();
  uint64_t v406 = v142;
  uint64_t v143 = *(void *)v142;
  uint64_t v144 = *(void *)(*(void *)v142 + 64);
  uint64_t v422 = (uint64_t *)(*(void *)v142 + 64);
  uint64_t v145 = 1 << *(unsigned char *)(v143 + 32);
  uint64_t v146 = -1;
  if (v145 < 64) {
    uint64_t v146 = ~(-1 << v145);
  }
  unint64_t v147 = v146 & v144;
  int64_t v148 = (unint64_t)(v145 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v149 = 0;
  while (2)
  {
    if (v147)
    {
      unint64_t v150 = __clz(__rbit64(v147));
      v147 &= v147 - 1;
      unint64_t v151 = v150 | (v149 << 6);
LABEL_67:
      uint64_t v152 = 8 * v151;
      uint64_t v153 = *(void *)(*(void *)(v143 + 56) + v152);
      v440._int countAndFlagsBits = sub_1006093E4(*(void *)(*(void *)(v143 + 48) + v152));
      double v427 = -2.31584178e77;
      id v428 = 0x80000001009A4220;
      sub_10096BDC0(v440);
      swift_bridgeObjectRelease();
      double v154 = v427;
      uint64_t v155 = (uint64_t)v428;
      char v156 = swift_isUniquelyReferenced_nonNull_native();
      double v427 = v438;
      double v438 = -0.0;
      sub_10038C9A0(v153, *(uint64_t *)&v154, v155, v156);
      double v438 = v427;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  int64_t v157 = v149 + 1;
  if (__OFADD__(v149, 1)) {
    goto LABEL_286;
  }
  if (v157 < v148)
  {
    unint64_t v158 = v422[v157];
    ++v149;
    if (!v158)
    {
      int64_t v149 = v157 + 1;
      if (v157 + 1 >= v148) {
        goto LABEL_83;
      }
      unint64_t v158 = v422[v149];
      if (!v158)
      {
        int64_t v149 = v157 + 2;
        if (v157 + 2 >= v148) {
          goto LABEL_83;
        }
        unint64_t v158 = v422[v149];
        if (!v158)
        {
          int64_t v159 = v157 + 3;
          if (v159 >= v148) {
            goto LABEL_83;
          }
          unint64_t v158 = v422[v159];
          if (!v158)
          {
            while (1)
            {
              int64_t v149 = v159 + 1;
              if (__OFADD__(v159, 1)) {
                break;
              }
              if (v149 >= v148) {
                goto LABEL_83;
              }
              unint64_t v158 = v422[v149];
              ++v159;
              if (v158) {
                goto LABEL_82;
              }
            }
LABEL_295:
            __break(1u);
            goto LABEL_296;
          }
          int64_t v149 = v159;
        }
      }
    }
LABEL_82:
    unint64_t v147 = (v158 - 1) & v158;
    unint64_t v151 = __clz(__rbit64(v158)) + (v149 << 6);
    goto LABEL_67;
  }
LABEL_83:
  swift_release();
  id v160 = (id)fpfs_current_or_default_log();
  long long v161 = v412;
  sub_10096B490();
  uint64_t v162 = swift_allocObject();
  Swift::String v163 = v421;
  *(void *)(v162 + 16) = v421;
  uint64_t v164 = swift_allocObject();
  *(void *)(v164 + 16) = sub_1004A7198;
  *(void *)(v164 + 24) = v162;
  uint64_t v422 = v163;
  uint64_t v165 = sub_10096B470();
  os_log_type_t v166 = sub_10096C590();
  Swift::String v167 = swift_allocObject();
  LOBYTE(v167[2].isa) = 32;
  Swift::String v168 = swift_allocObject();
  LOBYTE(v168[2].isa) = 8;
  uint64_t v169 = swift_allocObject();
  *(void *)(v169 + 16) = sub_1004A71A4;
  *(void *)(v169 + 24) = v164;
  Swift::String v170 = swift_allocObject();
  v170[2].Class isa = (Class)sub_100121318;
  v170[3].Class isa = (Class)v169;
  uint64_t v171 = swift_allocObject();
  sub_10038FCB0(v171, 3);
  void *v172 = sub_10012133C;
  v172[1] = v167;
  v172[2] = sub_10012133C;
  v172[3] = v168;
  v172[4] = sub_100121338;
  v172[5] = v170;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v165, v166))
  {
    Swift::String v173 = (uint8_t *)sub_100719B90();
    uint64_t v174 = swift_slowAlloc();
    v436[0] = 0;
    v435[0] = v174;
    *(_WORD *)Swift::String v173 = 258;
    *(void *)&long long v425 = v173 + 2;
    double v427 = COERCE_DOUBLE(sub_10012133C);
    id v428 = v167;
    sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v427, (uint64_t)&v425, (uint64_t)v436, (uint64_t)v435);
    swift_release();
    double v427 = COERCE_DOUBLE(sub_10012133C);
    id v428 = v168;
    sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v427, (uint64_t)&v425, (uint64_t)v436, (uint64_t)v435);
    swift_release();
    double v427 = COERCE_DOUBLE(sub_100121338);
    id v428 = v170;
    sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v427, (uint64_t)&v425, (uint64_t)v436, (uint64_t)v435);
    uint64_t v421 = 0;
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v165, v166, "FPCK: FPDRTCReporting fsSnapshotVersusFpSnapshotDiff %s ", v173, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_100719B98();

    ((void (*)(NSObject *, uint64_t))v416)(v412, v418);
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    ((void (*)(NSObject *, uint64_t))v416)(v161, v418);
    uint64_t v421 = 0;
  }
  Swift::String v175 = (char *)v422 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredFSSnapshotVsFPSnapshotDiffCounters;
  swift_beginAccess();
  uint64_t v176 = *(void *)v175;
  uint64_t v177 = *(void *)v175 + 64;
  uint64_t v178 = 1 << *(unsigned char *)(*(void *)v175 + 32);
  uint64_t v179 = -1;
  if (v178 < 64) {
    uint64_t v179 = ~(-1 << v178);
  }
  unint64_t v180 = v179 & *(void *)(*(void *)v175 + 64);
  int64_t v181 = (unint64_t)(v178 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v182 = 0;
  while (2)
  {
    if (v180)
    {
      unint64_t v183 = __clz(__rbit64(v180));
      v180 &= v180 - 1;
      unint64_t v184 = v183 | (v182 << 6);
LABEL_90:
      uint64_t v185 = 8 * v184;
      uint64_t v186 = *(void *)(*(void *)(v176 + 56) + v185);
      v441._int countAndFlagsBits = sub_100609614(*(void *)(*(void *)(v176 + 48) + v185));
      double v427 = -2.31584178e77;
      id v428 = 0x80000001009A4240;
      sub_10096BDC0(v441);
      swift_bridgeObjectRelease();
      sub_100361124(v186, 0, *(uint64_t *)&v427, (uint64_t)v428);
      continue;
    }
    break;
  }
  BOOL v187 = __OFADD__(v182++, 1);
  if (v187) {
    goto LABEL_287;
  }
  if (v182 < v181)
  {
    unint64_t v188 = *(void *)(v177 + 8 * v182);
    if (!v188)
    {
      int64_t v189 = v182 + 1;
      if (v182 + 1 >= v181) {
        goto LABEL_107;
      }
      unint64_t v188 = *(void *)(v177 + 8 * v189);
      if (!v188)
      {
        int64_t v189 = v182 + 2;
        if (v182 + 2 >= v181) {
          goto LABEL_107;
        }
        unint64_t v188 = *(void *)(v177 + 8 * v189);
        if (!v188)
        {
          int64_t v189 = v182 + 3;
          if (v182 + 3 >= v181) {
            goto LABEL_107;
          }
          unint64_t v188 = *(void *)(v177 + 8 * v189);
          if (!v188)
          {
            while (1)
            {
              int64_t v182 = v189 + 1;
              if (__OFADD__(v189, 1)) {
                break;
              }
              if (v182 >= v181) {
                goto LABEL_107;
              }
              unint64_t v188 = *(void *)(v177 + 8 * v182);
              ++v189;
              if (v188) {
                goto LABEL_102;
              }
            }
LABEL_296:
            __break(1u);
            goto LABEL_297;
          }
        }
      }
      int64_t v182 = v189;
    }
LABEL_102:
    unint64_t v180 = (v188 - 1) & v188;
    unint64_t v184 = __clz(__rbit64(v188)) + (v182 << 6);
    goto LABEL_90;
  }
LABEL_107:
  uint64_t v190 = v410;
  swift_release();
  sub_1006A75AC();
  uint64_t v191 = swift_allocObject();
  char v192 = v422;
  *(void *)(v191 + 16) = v422;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1004A71CC;
  *(void *)(v193 + 24) = v191;
  long long v194 = v192;
  long long v195 = sub_10096B470();
  os_log_type_t v196 = sub_10096C590();
  uint64_t v197 = swift_allocObject();
  LOBYTE(v197[2].isa) = 32;
  uint64_t v198 = swift_allocObject();
  LOBYTE(v198[2].isa) = 8;
  uint64_t v199 = swift_allocObject();
  *(void *)(v199 + 16) = sub_1004A71D8;
  *(void *)(v199 + 24) = v193;
  NSErrorUserInfoKey v200 = swift_allocObject();
  v200[2].Class isa = (Class)sub_100121318;
  v200[3].Class isa = (Class)v199;
  uint64_t v201 = swift_allocObject();
  sub_10038FCB0(v201, 3);
  *uint64_t v202 = sub_10012133C;
  v202[1] = v197;
  v202[2] = sub_10012133C;
  v202[3] = v198;
  v202[4] = sub_100121338;
  v202[5] = v200;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  BOOL v203 = os_log_type_enabled(v195, v196);
  uint64_t v422 = v194;
  if (v203)
  {
    uint64_t v204 = (uint8_t *)sub_100719B90();
    uint64_t v205 = swift_slowAlloc();
    v435[0] = 0;
    v434[0] = v205;
    *(_WORD *)uint64_t v204 = 258;
    *(void *)&long long v425 = v204 + 2;
    double v427 = COERCE_DOUBLE(sub_10012133C);
    id v428 = v197;
    uint64_t v206 = v421;
    sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v427, (uint64_t)&v425, (uint64_t)v435, (uint64_t)v434);
    if (v206) {
      goto LABEL_314;
    }
    swift_release();
    double v427 = COERCE_DOUBLE(sub_10012133C);
    id v428 = v198;
    sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v427, (uint64_t)&v425, (uint64_t)v435, (uint64_t)v434);
    swift_release();
    double v427 = COERCE_DOUBLE(sub_100121338);
    id v428 = v200;
    sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v427, (uint64_t)&v425, (uint64_t)v435, (uint64_t)v434);
    uint64_t v421 = 0;
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v195, v196, "FPCK: FPDRTCReporting reconciliationTableBrokenInvariants %s ", v204, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_100719B98();

    ((void (*)(char *, uint64_t))v416)(v190, v418);
    long long v194 = v422;
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t))v416)(v190, v418);
  }
  Swift::String v207 = (char *)v194 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredReconciliationTableBrokenInvariantsCounters;
  swift_beginAccess();
  uint64_t v208 = *(void *)v207;
  uint64_t v209 = *(void *)v207 + 64;
  uint64_t v210 = 1 << *(unsigned char *)(*(void *)v207 + 32);
  uint64_t v211 = -1;
  if (v210 < 64) {
    uint64_t v211 = ~(-1 << v210);
  }
  unint64_t v212 = v211 & *(void *)(*(void *)v207 + 64);
  int64_t v213 = (unint64_t)(v210 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v214 = 0;
  while (2)
  {
    if (v212)
    {
      unint64_t v215 = __clz(__rbit64(v212));
      v212 &= v212 - 1;
      unint64_t v216 = v215 | (v214 << 6);
LABEL_115:
      uint64_t v217 = 8 * v216;
      uint64_t v218 = *(void *)(*(void *)(v208 + 56) + v217);
      v442._int countAndFlagsBits = sub_100609648(*(void *)(*(void *)(v208 + 48) + v217));
      double v427 = -2.31584178e77;
      id v428 = 0x80000001009A4270;
      sub_10096BDC0(v442);
      swift_bridgeObjectRelease();
      sub_100361124(v218, 0, *(uint64_t *)&v427, (uint64_t)v428);
      continue;
    }
    break;
  }
  BOOL v187 = __OFADD__(v214++, 1);
  if (v187) {
    goto LABEL_288;
  }
  if (v214 < v213)
  {
    unint64_t v219 = *(void *)(v209 + 8 * v214);
    if (!v219)
    {
      int64_t v220 = v214 + 1;
      if (v214 + 1 >= v213) {
        goto LABEL_132;
      }
      unint64_t v219 = *(void *)(v209 + 8 * v220);
      if (!v219)
      {
        int64_t v220 = v214 + 2;
        if (v214 + 2 >= v213) {
          goto LABEL_132;
        }
        unint64_t v219 = *(void *)(v209 + 8 * v220);
        if (!v219)
        {
          int64_t v220 = v214 + 3;
          if (v214 + 3 >= v213) {
            goto LABEL_132;
          }
          unint64_t v219 = *(void *)(v209 + 8 * v220);
          if (!v219)
          {
            while (1)
            {
              int64_t v214 = v220 + 1;
              if (__OFADD__(v220, 1)) {
                break;
              }
              if (v214 >= v213) {
                goto LABEL_132;
              }
              unint64_t v219 = *(void *)(v209 + 8 * v214);
              ++v220;
              if (v219) {
                goto LABEL_127;
              }
            }
LABEL_297:
            __break(1u);
            goto LABEL_298;
          }
        }
      }
      int64_t v214 = v220;
    }
LABEL_127:
    unint64_t v212 = (v219 - 1) & v219;
    unint64_t v216 = __clz(__rbit64(v219)) + (v214 << 6);
    goto LABEL_115;
  }
LABEL_132:
  swift_release();
  unint64_t v221 = v411;
  sub_1006A75AC();
  uint64_t v222 = swift_allocObject();
  uint64_t v223 = v422;
  *(void *)(v222 + 16) = v422;
  uint64_t v224 = swift_allocObject();
  *(void *)(v224 + 16) = sub_1004A7200;
  *(void *)(v224 + 24) = v222;
  long long v414 = v223;
  uint64_t v225 = sub_10096B470();
  os_log_type_t v226 = sub_10096C590();
  uint64_t v227 = swift_allocObject();
  LOBYTE(v227[2].isa) = 32;
  os_log_type_t v228 = swift_allocObject();
  LOBYTE(v228[2].isa) = 8;
  uint64_t v229 = swift_allocObject();
  *(void *)(v229 + 16) = sub_1004A7260;
  *(void *)(v229 + 24) = v224;
  uint64_t v230 = swift_allocObject();
  v230[2].Class isa = (Class)sub_100121318;
  v230[3].Class isa = (Class)v229;
  uint64_t v231 = swift_allocObject();
  sub_10038FCB0(v231, 3);
  void *v232 = sub_10012133C;
  v232[1] = v227;
  v232[2] = sub_10012133C;
  v232[3] = v228;
  v232[4] = sub_100121338;
  v232[5] = v230;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v225, v226))
  {
    uint64_t v233 = (uint8_t *)sub_100719B90();
    uint64_t v234 = swift_slowAlloc();
    v434[0] = 0;
    v433[0] = v234;
    *(_WORD *)uint64_t v233 = 258;
    *(void *)&long long v425 = v233 + 2;
    double v427 = COERCE_DOUBLE(sub_10012133C);
    id v428 = v227;
    int v235 = v421;
    sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v427, (uint64_t)&v425, (uint64_t)v434, (uint64_t)v433);
    if (v235) {
      goto LABEL_314;
    }
    swift_release();
    double v427 = COERCE_DOUBLE(sub_10012133C);
    id v428 = v228;
    sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v427, (uint64_t)&v425, (uint64_t)v434, (uint64_t)v433);
    swift_release();
    double v427 = COERCE_DOUBLE(sub_100121338);
    id v428 = v230;
    sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v427, (uint64_t)&v425, (uint64_t)v434, (uint64_t)v433);
    uint64_t v421 = 0;
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v225, v226, "FPCK: FPDRTCReporting backupManifestVsFSSnapshotDiff %s ", v233, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_100719B98();

    int v236 = v411;
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    int v236 = v221;
  }
  ((void (*)(char *, uint64_t))v416)(v236, v418);
  uint64_t v237 = (char *)v414 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredBackupManifestVsFSSnapshotDiffCounters;
  swift_beginAccess();
  uint64_t v238 = *(void *)v237;
  uint64_t v239 = *(void *)v237 + 64;
  uint64_t v240 = 1 << *(unsigned char *)(*(void *)v237 + 32);
  uint64_t v241 = -1;
  if (v240 < 64) {
    uint64_t v241 = ~(-1 << v240);
  }
  unint64_t v242 = v241 & *(void *)(*(void *)v237 + 64);
  int64_t v243 = (unint64_t)(v240 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v244 = 0;
  while (2)
  {
    if (v242)
    {
      unint64_t v245 = __clz(__rbit64(v242));
      v242 &= v242 - 1;
      unint64_t v246 = v245 | (v244 << 6);
LABEL_140:
      uint64_t v247 = 8 * v246;
      uint64_t v248 = *(void *)(*(void *)(v238 + 56) + v247);
      v443._int countAndFlagsBits = sub_100609418(*(void *)(*(void *)(v238 + 48) + v247));
      double v427 = -2.31584178e77;
      id v428 = 0x80000001009A42A0;
      sub_10096BDC0(v443);
      swift_bridgeObjectRelease();
      sub_100361124(v248, 0, *(uint64_t *)&v427, (uint64_t)v428);
      continue;
    }
    break;
  }
  BOOL v187 = __OFADD__(v244++, 1);
  if (v187) {
    goto LABEL_289;
  }
  if (v244 < v243)
  {
    unint64_t v249 = *(void *)(v239 + 8 * v244);
    if (!v249)
    {
      int64_t v250 = v244 + 1;
      if (v244 + 1 >= v243) {
        goto LABEL_157;
      }
      unint64_t v249 = *(void *)(v239 + 8 * v250);
      if (!v249)
      {
        int64_t v250 = v244 + 2;
        if (v244 + 2 >= v243) {
          goto LABEL_157;
        }
        unint64_t v249 = *(void *)(v239 + 8 * v250);
        if (!v249)
        {
          int64_t v250 = v244 + 3;
          if (v244 + 3 >= v243) {
            goto LABEL_157;
          }
          unint64_t v249 = *(void *)(v239 + 8 * v250);
          if (!v249)
          {
            while (1)
            {
              int64_t v244 = v250 + 1;
              if (__OFADD__(v250, 1)) {
                break;
              }
              if (v244 >= v243) {
                goto LABEL_157;
              }
              unint64_t v249 = *(void *)(v239 + 8 * v244);
              ++v250;
              if (v249) {
                goto LABEL_152;
              }
            }
LABEL_298:
            __break(1u);
            goto LABEL_299;
          }
        }
      }
      int64_t v244 = v250;
    }
LABEL_152:
    unint64_t v242 = (v249 - 1) & v249;
    unint64_t v246 = __clz(__rbit64(v249)) + (v244 << 6);
    goto LABEL_140;
  }
LABEL_157:
  uint64_t v251 = v408;
  swift_release();
  uint64_t v252 = v414;
  unint64_t v253 = (uint64_t *)((char *)v414 + OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskBrokenInvariantsCounters);
  swift_beginAccess();
  uint64_t v422 = v253;
  uint64_t v254 = *v253;
  swift_bridgeObjectRetain();
  uint64_t v255 = v421;
  uint64_t v256 = sub_100463470(0, v254);
  swift_bridgeObjectRelease();
  sub_100361124(v256, 0, 0xD00000000000001ELL, 0x80000001009A42D0);
  uint64_t v257 = (uint64_t *)((char *)v252 + OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskVsFSSnapshotDiffCounters);
  uint64_t v420 = (uint64_t *)((char *)v252 + OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskVsFSSnapshotDiffCounters);
  swift_beginAccess();
  uint64_t v258 = *v257;
  swift_bridgeObjectRetain();
  uint64_t v259 = sub_100463470(0, v258);
  swift_bridgeObjectRelease();
  sub_100361124(v259, 0, 0xD000000000000019, 0x80000001009A42F0);
  int v260 = v409;
  sub_1006A75AC();
  os_log_t v261 = sub_10096B470();
  os_log_type_t v262 = sub_10096C590();
  uint64_t v263 = sub_1003253B8(0);
  if (os_log_type_enabled(v261, v262))
  {
    uint64_t v264 = (uint8_t *)sub_100719B90();
    *(void *)&long long v425 = 0;
    v431[0] = 0;
    *(_WORD *)uint64_t v264 = 0;
    *(void *)&double v427 = v264 + 2;
    sub_10071F8EC((uint64_t)v263, (uint64_t)&v427, (uint64_t)&v425, (uint64_t)v431);
    uint64_t v419 = (uint64_t)v255;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v261, v262, "FPCK: FPDRTCReporting remainingDiskBrokenInvariants", v264, 2u);
    sub_100719B98();
  }
  else
  {
    uint64_t v419 = (uint64_t)v255;

    swift_bridgeObjectRelease();
  }
  ((void (*)(char *, uint64_t))v416)(v260, v418);
  v265 = *v251;
  id v266 = v265 + 8;
  uint64_t v267 = 1 << *((unsigned char *)v265 + 32);
  uint64_t v268 = -1;
  if (v267 < 64) {
    uint64_t v268 = ~(-1 << v267);
  }
  unint64_t v269 = v268 & v265[8];
  int64_t v270 = (unint64_t)(v267 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v271 = 0;
  int64_t v272 = 0;
  v411 = (char *)v270;
  long long v412 = 0x80000001009A4310;
  while (2)
  {
    if (v269)
    {
      unint64_t v273 = __clz(__rbit64(v269));
      v269 &= v269 - 1;
      unint64_t v274 = v273 | (v272 << 6);
LABEL_176:
      uint64_t v277 = 8 * v274;
      unint64_t v278 = *(void *)(v265[6] + v277);
      uint64_t v279 = *(void *)(v265[7] + v277);
      uint64_t v280 = sub_10063D770(v278, *v422);
      if (v281) {
        uint64_t v282 = 0;
      }
      else {
        uint64_t v282 = v280;
      }
      uint64_t v283 = v279 - v282;
      if (__OFSUB__(v279, v282)) {
        goto LABEL_283;
      }
      if (v283 >= 1)
      {
        v444._int countAndFlagsBits = sub_100609904(v278);
        double v427 = -2.31584178e77;
        id v428 = v412;
        sub_10096BDC0(v444);
        swift_bridgeObjectRelease();
        double v284 = v427;
        uint64_t v285 = v428;
        sub_1000705CC((uint64_t)v271);
        char v286 = swift_isUniquelyReferenced_nonNull_native();
        double v287 = v438;
        double v427 = v438;
        double v438 = -0.0;
        double v415 = v284;
        uint64_t v421 = v285;
        unint64_t v289 = sub_10000DDD0(*(uint64_t *)&v284, (uint64_t)v285);
        uint64_t v290 = *(void *)(*(void *)&v287 + 16);
        BOOL v291 = (v288 & 1) == 0;
        uint64_t v292 = v290 + v291;
        if (__OFADD__(v290, v291)) {
          goto LABEL_301;
        }
        char v293 = v288;
        uint64_t v294 = *(void *)(*(void *)&v287 + 24);
        LODWORD(v413) = v288;
        if (v294 >= v292)
        {
          int64_t v270 = (int64_t)v411;
          if ((v286 & 1) == 0)
          {
            sub_10091FD98();
            double v287 = v427;
          }
        }
        else
        {
          sub_100379E10(v292, v286);
          double v287 = v427;
          unint64_t v295 = sub_10000DDD0(*(uint64_t *)&v415, (uint64_t)v421);
          int v297 = v293 & 1;
          int64_t v270 = (int64_t)v411;
          if (v297 != (v296 & 1)) {
            goto LABEL_313;
          }
          unint64_t v289 = v295;
        }
        double v438 = v287;
        swift_bridgeObjectRelease();
        double v298 = v438;
        swift_bridgeObjectRetain();
        if ((v413 & 1) == 0)
        {
          sub_10038E554(v289, *(void *)&v415, v421, 0, *(void *)&v298);
          swift_bridgeObjectRetain();
        }
        uint64_t v299 = *(void *)(*(void *)&v298 + 56);
        swift_bridgeObjectRelease();
        uint64_t v300 = *(void *)(v299 + 8 * v289);
        BOOL v187 = __OFADD__(v300, v283);
        uint64_t v301 = v300 + v283;
        if (v187) {
          goto LABEL_302;
        }
        *(void *)(v299 + 8 * v289) = v301;
        swift_bridgeObjectRelease();
        uint64_t v271 = (char *)sub_10002E4B4;
      }
      continue;
    }
    break;
  }
  BOOL v187 = __OFADD__(v272++, 1);
  if (v187) {
    goto LABEL_290;
  }
  if (v272 < v270)
  {
    unint64_t v275 = v266[v272];
    if (!v275)
    {
      int64_t v276 = v272 + 1;
      if (v272 + 1 >= v270) {
        goto LABEL_195;
      }
      unint64_t v275 = v266[v276];
      if (!v275)
      {
        int64_t v276 = v272 + 2;
        if (v272 + 2 >= v270) {
          goto LABEL_195;
        }
        unint64_t v275 = v266[v276];
        if (!v275)
        {
          int64_t v276 = v272 + 3;
          if (v272 + 3 >= v270) {
            goto LABEL_195;
          }
          unint64_t v275 = v266[v276];
          if (!v275)
          {
            while (1)
            {
              int64_t v272 = v276 + 1;
              if (__OFADD__(v276, 1)) {
                break;
              }
              if (v272 >= v270) {
                goto LABEL_195;
              }
              unint64_t v275 = v266[v272];
              ++v276;
              if (v275) {
                goto LABEL_175;
              }
            }
LABEL_299:
            __break(1u);
            goto LABEL_300;
          }
        }
      }
      int64_t v272 = v276;
    }
LABEL_175:
    unint64_t v269 = (v275 - 1) & v275;
    unint64_t v274 = __clz(__rbit64(v275)) + (v272 << 6);
    goto LABEL_176;
  }
LABEL_195:
  swift_release();
  uint64_t v302 = v407;
  sub_1006A75AC();
  uint64_t v303 = sub_10096B470();
  os_log_type_t v304 = sub_10096C590();
  uint64_t v305 = sub_1003253B8(0);
  BOOL v306 = os_log_type_enabled(v303, v304);
  long long v413 = v271;
  if (v306)
  {
    uint64_t v307 = (uint8_t *)sub_100719B90();
    *(void *)&long long v425 = 0;
    v431[0] = 0;
    *(_WORD *)uint64_t v307 = 0;
    *(void *)&double v427 = v307 + 2;
    uint64_t v308 = v419;
    sub_10071F8EC((uint64_t)v305, (uint64_t)&v427, (uint64_t)&v425, (uint64_t)v431);
    uint64_t v419 = v308;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v303, v304, "FPCK: FPDRTCReporting remainingFSSnapshotDiffs", v307, 2u);
    sub_100719B98();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  ((void (*)(char *, uint64_t))v416)(v302, v418);
  uint64_t v309 = v420;
  uint64_t v310 = *(void *)v406;
  uint64_t v311 = *(void *)v406 + 64;
  uint64_t v312 = 1 << *(unsigned char *)(*(void *)v406 + 32);
  uint64_t v313 = -1;
  if (v312 < 64) {
    uint64_t v313 = ~(-1 << v312);
  }
  unint64_t v314 = v313 & *(void *)(*(void *)v406 + 64);
  int64_t v315 = (unint64_t)(v312 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v316 = 0;
  int v416 = 0x80000001009A4340;
  long long v417 = 0;
  double v415 = *(double *)&v315;
  while (2)
  {
    if (v314)
    {
      unint64_t v317 = __clz(__rbit64(v314));
      v314 &= v314 - 1;
      unint64_t v318 = v317 | (v316 << 6);
LABEL_214:
      uint64_t v321 = 8 * v318;
      unint64_t v322 = *(void *)(*(void *)(v310 + 48) + v321);
      uint64_t v323 = *(void *)(*(void *)(v310 + 56) + v321);
      uint64_t v324 = sub_10063D788(v322, *v309);
      if (v325) {
        uint64_t v326 = 0;
      }
      else {
        uint64_t v326 = v324;
      }
      uint64_t v327 = v323 - v326;
      if (__OFSUB__(v323, v326)) {
        goto LABEL_284;
      }
      if (v327 >= 1)
      {
        v445._int countAndFlagsBits = sub_1006093E4(v322);
        double v427 = -2.31584178e77;
        id v428 = v416;
        sub_10096BDC0(v445);
        swift_bridgeObjectRelease();
        double v329 = v427;
        uint64_t v328 = (uint64_t *)v428;
        sub_1000705CC((uint64_t)v417);
        char v330 = swift_isUniquelyReferenced_nonNull_native();
        double v331 = v438;
        double v427 = v438;
        double v438 = -0.0;
        uint64_t v421 = *(NSObject **)&v329;
        uint64_t v422 = v328;
        unint64_t v333 = sub_10000DDD0(*(uint64_t *)&v329, (uint64_t)v328);
        uint64_t v334 = *(void *)(*(void *)&v331 + 16);
        BOOL v335 = (v332 & 1) == 0;
        uint64_t v336 = v334 + v335;
        if (__OFADD__(v334, v335)) {
          goto LABEL_303;
        }
        char v337 = v332;
        uint64_t v338 = *(void *)(*(void *)&v331 + 24);
        LODWORD(v418) = v332;
        if (v338 >= v336)
        {
          int64_t v315 = *(void *)&v415;
          if ((v330 & 1) == 0)
          {
            sub_10091FD98();
            double v331 = v427;
          }
        }
        else
        {
          sub_100379E10(v336, v330);
          double v331 = v427;
          unint64_t v339 = sub_10000DDD0((uint64_t)v421, (uint64_t)v422);
          int v341 = v337 & 1;
          int64_t v315 = *(void *)&v415;
          if (v341 != (v340 & 1)) {
            goto LABEL_313;
          }
          unint64_t v333 = v339;
        }
        double v438 = v331;
        swift_bridgeObjectRelease();
        double v342 = v438;
        swift_bridgeObjectRetain();
        if ((v418 & 1) == 0)
        {
          sub_10038E554(v333, v421, v422, 0, *(void *)&v342);
          swift_bridgeObjectRetain();
        }
        uint64_t v343 = *(void *)(*(void *)&v342 + 56);
        swift_bridgeObjectRelease();
        uint64_t v344 = *(void *)(v343 + 8 * v333);
        BOOL v187 = __OFADD__(v344, v327);
        uint64_t v345 = v344 + v327;
        if (v187) {
          goto LABEL_304;
        }
        *(void *)(v343 + 8 * v333) = v345;
        swift_bridgeObjectRelease();
        long long v417 = sub_10002E4B4;
        uint64_t v309 = v420;
      }
      continue;
    }
    break;
  }
  BOOL v187 = __OFADD__(v316++, 1);
  if (v187) {
    goto LABEL_291;
  }
  if (v316 < v315)
  {
    unint64_t v319 = *(void *)(v311 + 8 * v316);
    if (!v319)
    {
      int64_t v320 = v316 + 1;
      if (v316 + 1 >= v315) {
        goto LABEL_233;
      }
      unint64_t v319 = *(void *)(v311 + 8 * v320);
      if (!v319)
      {
        int64_t v320 = v316 + 2;
        if (v316 + 2 >= v315) {
          goto LABEL_233;
        }
        unint64_t v319 = *(void *)(v311 + 8 * v320);
        if (!v319)
        {
          int64_t v320 = v316 + 3;
          if (v316 + 3 >= v315) {
            goto LABEL_233;
          }
          unint64_t v319 = *(void *)(v311 + 8 * v320);
          if (!v319)
          {
            while (1)
            {
              int64_t v316 = v320 + 1;
              if (__OFADD__(v320, 1)) {
                break;
              }
              if (v316 >= v315) {
                goto LABEL_233;
              }
              unint64_t v319 = *(void *)(v311 + 8 * v316);
              ++v320;
              if (v319) {
                goto LABEL_213;
              }
            }
LABEL_300:
            __break(1u);
LABEL_301:
            __break(1u);
LABEL_302:
            __break(1u);
LABEL_303:
            __break(1u);
LABEL_304:
            __break(1u);
LABEL_305:
            __break(1u);
            goto LABEL_306;
          }
        }
      }
      int64_t v316 = v320;
    }
LABEL_213:
    unint64_t v314 = (v319 - 1) & v319;
    unint64_t v318 = __clz(__rbit64(v319)) + (v316 << 6);
    goto LABEL_214;
  }
LABEL_233:
  uint64_t v346 = swift_release();
  __chkstk_darwin(v346);
  *(&v403 - 2) = (uint64_t)&v438;
  uint64_t v347 = swift_bridgeObjectRetain();
  unint64_t v348 = v419;
  sub_10049D8A0(v347, (void (*)(uint64_t, uint64_t, uint64_t))sub_1004A7288);
  swift_bridgeObjectRelease();
  uint64_t v349 = swift_bridgeObjectRetain();
  unint64_t v350 = sub_1008D3B88(v349);
  swift_bridgeObjectRelease();
  v432[0] = v350;
  int v351 = v414;
  uint64_t v352 = (char *)v414 + OBJC_IVAR____TtC9libfssync4FPCK_multipleHardlinksExtensions;
  swift_beginAccess();
  if (!*(void *)(*(void *)v352 + 16))
  {
LABEL_264:
    uint64_t v379 = (char *)v351 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetErrors;
    swift_beginAccess();
    unsigned int v380 = v405;
    uint64_t v381 = (uint64_t)v413;
    if (*(void *)(*(void *)v379 + 16))
    {
      swift_bridgeObjectRetain();
      double v382 = COERCE_DOUBLE(sub_10049F550());
      uint64_t v384 = v383;
      swift_bridgeObjectRelease();
      if (v384)
      {
        v429 = &type metadata for String;
        uint64_t v430 = &protocol witness table for String;
        double v427 = v382;
        id v428 = v384;
        sub_100361338((uint64_t)&v427, v404, 0x80000001009A29B0);
      }
    }
    uint64_t v385 = (char *)v351 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetErrors;
    swift_beginAccess();
    if (*(void *)(*(void *)v385 + 16))
    {
      swift_bridgeObjectRetain();
      double v386 = COERCE_DOUBLE(sub_10049F550());
      uint64_t v388 = v387;
      swift_bridgeObjectRelease();
      if (v388)
      {
        v429 = &type metadata for String;
        uint64_t v430 = &protocol witness table for String;
        double v427 = v386;
        id v428 = v388;
        sub_100361338((uint64_t)&v427, 0xD000000000000010, 0x80000001009A2990);
      }
    }
    uint64_t v389 = (uint64_t *)((char *)v351 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetItemPayload);
    swift_beginAccess();
    if (*v389)
    {
      uint64_t v390 = *v389;
    }
    else
    {
      unsigned int v391 = (uint64_t *)((char *)v351 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetItemPayload);
      swift_beginAccess();
      uint64_t v390 = *v391;
      if (!v390) {
        goto LABEL_275;
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_1004576E0(v390, v432);
    swift_bridgeObjectRelease();
LABEL_275:
    if (v380)
    {
      uint64_t v392 = *(uint64_t *)((char *)v351 + OBJC_IVAR____TtC9libfssync4FPCK_domainUserInfo);
      if (v392)
      {
        sub_1008BD75C();
        sub_10063D70C((uint64_t)&v427, v392, &v425);
        sub_100017208((uint64_t)&v427);
        if (v426)
        {
          if (swift_dynamicCast())
          {
            v429 = &type metadata for String;
            uint64_t v430 = &protocol witness table for String;
            double v427 = *(double *)&v423;
            id v428 = v424;
            sub_100361338((uint64_t)&v427, 0x7267694D67616964, 0xEF44496E6F697461);
          }
        }
        else
        {
          sub_10002B770((uint64_t)&v425, (uint64_t *)&unk_100ACE0F0);
        }
      }
    }
    double v393 = COERCE_DOUBLE(sub_10045FB14());
    v429 = &type metadata for String;
    uint64_t v430 = &protocol witness table for String;
    double v427 = v393;
    id v428 = v394;
    sub_100361338((uint64_t)&v427, 0x526E75524B435046, 0xED00006E6F736165);
    uint64_t v395 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    object = v396._object;
    v396._int countAndFlagsBits = *(unsigned int *)((char *)v351 + OBJC_IVAR____TtC9libfssync4FPCK_volumeRole);
    int countAndFlagsBits = Filename.init(rawValue:)(v396).rawValue._countAndFlagsBits;
    v429 = &type metadata for UInt32;
    uint64_t v430 = &protocol witness table for UInt32;
    LODWORD(v427) = countAndFlagsBits;
    sub_100361338((uint64_t)&v427, v395, (uint64_t)object);
    v429 = &type metadata for Double;
    uint64_t v430 = &protocol witness table for Double;
    double v427 = 1.0;
    sub_100361338((uint64_t)&v427, 0x737574617473, 0xE600000000000000);
    uint64_t v399 = *(uint64_t *)((char *)v351 + OBJC_IVAR____TtC9libfssync4FPCK_repairStartTime) / 1000000000;
    v429 = &type metadata for Double;
    uint64_t v430 = &protocol witness table for Double;
    double v427 = (double)v399;
    sub_100361338((uint64_t)&v427, 0x6D69547472617473, 0xE900000000000065);
    uint64_t v400 = swift_bridgeObjectRetain();
    unint64_t v401 = sub_1008D3EC8(v400);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1000705CC(v381);
    sub_1000705CC((uint64_t)v417);
    return v401;
  }
  uint64_t v353 = swift_bridgeObjectRetain();
  uint64_t v354 = sub_10049B134(v353, (uint64_t (*)(char *, unint64_t, uint64_t))sub_10049B464);
  swift_bridgeObjectRelease();
  *(void *)&long long v425 = v354;
  uint64_t v355 = swift_bridgeObjectRetain();
  uint64_t v356 = v348;
  uint64_t v357 = sub_10049B134(v355, (uint64_t (*)(char *, unint64_t, uint64_t))sub_10049B2A0);
  swift_bridgeObjectRelease();
  uint64_t v358 = 0;
  uint64_t v359 = *(void *)(v357 + 64);
  uint64_t v418 = v357;
  uint64_t v419 = v357 + 64;
  uint64_t v360 = 1 << *(unsigned char *)(v357 + 32);
  uint64_t v361 = -1;
  if (v360 < 64) {
    uint64_t v361 = ~(-1 << v360);
  }
  unint64_t v362 = v361 & v359;
  uint64_t v420 = (uint64_t *)((unint64_t)(v360 + 63) >> 6);
  uint64_t v421 = v356;
  while (v362)
  {
    unint64_t v363 = __clz(__rbit64(v362));
    v362 &= v362 - 1;
    unint64_t v364 = v363 | ((void)v358 << 6);
LABEL_258:
    uint64_t v368 = (uint64_t *)(*(void *)(v357 + 48) + 16 * v364);
    uint64_t v369 = *v368;
    unint64_t v370 = v368[1];
    swift_bridgeObjectRetain_n();
    sub_10002C020(v369, v370);
    uint64_t v372 = v371;
    swift_bridgeObjectRelease();
    if (v372)
    {
      swift_bridgeObjectRetain();
      sub_100458150(v369, v370);
      uint64_t v374 = v373;
      swift_bridgeObjectRelease();
      if (v374)
      {
        uint64_t v422 = v358;
        double v427 = 0.0;
        id v428 = 0xE000000000000000;
        v446._int countAndFlagsBits = 0;
        v446._object = (void *)0xE000000000000000;
        sub_10096D280(v446);
        sub_10096BAF0();
        swift_bridgeObjectRelease();
        v447._int countAndFlagsBits = 123;
        v447._object = (void *)0xE100000000000000;
        sub_10096D280(v447);
        uint64_t v375 = sub_10096BD60();
        swift_bridgeObjectRelease();
        if (__OFSUB__(v375, 2)) {
          goto LABEL_292;
        }
        sub_100607A68();
        v448._int countAndFlagsBits = 125;
        v448._object = (void *)0xE100000000000000;
        sub_10096D280(v448);
        sub_10096BAF0();
        swift_bridgeObjectRelease();
        v449._int countAndFlagsBits = 0;
        v449._object = (void *)0xE000000000000000;
        sub_10096D280(v449);
        sub_10036116C(1, 0, *(uint64_t *)&v427, (uint64_t)v428);
        uint64_t v358 = v422;
        uint64_t v357 = v418;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v365 = (uint64_t)v358 + 1;
  if (__OFADD__(v358, 1)) {
    goto LABEL_293;
  }
  if (v365 >= (uint64_t)v420)
  {
LABEL_263:
    swift_release();
    double v427 = *(double *)&v425;
    sub_10002B7CC(&qword_100AD64D0);
    sub_100025500(&qword_100AD64D8, &qword_100AD64D0);
    sub_10001F9C0();
    double v376 = COERCE_DOUBLE(sub_10096BF90());
    uint64_t v378 = v377;
    swift_bridgeObjectRelease();
    v429 = &type metadata for String;
    uint64_t v430 = &protocol witness table for String;
    double v427 = v376;
    id v428 = v378;
    sub_100361338((uint64_t)&v427, 0xD00000000000001BLL, 0x80000001009A28F0);
    int v351 = v414;
    goto LABEL_264;
  }
  unint64_t v366 = *(void *)(v419 + 8 * v365);
  uint64_t v358 = (uint64_t *)((char *)v358 + 1);
  if (v366) {
    goto LABEL_257;
  }
  uint64_t v358 = (uint64_t *)(v365 + 1);
  if (v365 + 1 >= (uint64_t)v420) {
    goto LABEL_263;
  }
  unint64_t v366 = *(void *)(v419 + 8 * (void)v358);
  if (v366) {
    goto LABEL_257;
  }
  uint64_t v358 = (uint64_t *)(v365 + 2);
  if (v365 + 2 >= (uint64_t)v420) {
    goto LABEL_263;
  }
  unint64_t v366 = *(void *)(v419 + 8 * (void)v358);
  if (v366) {
    goto LABEL_257;
  }
  uint64_t v358 = (uint64_t *)(v365 + 3);
  if (v365 + 3 >= (uint64_t)v420) {
    goto LABEL_263;
  }
  unint64_t v366 = *(void *)(v419 + 8 * (void)v358);
  if (v366) {
    goto LABEL_257;
  }
  uint64_t v358 = (uint64_t *)(v365 + 4);
  if (v365 + 4 >= (uint64_t)v420) {
    goto LABEL_263;
  }
  unint64_t v366 = *(void *)(v419 + 8 * (void)v358);
  if (v366)
  {
LABEL_257:
    unint64_t v362 = (v366 - 1) & v366;
    unint64_t v364 = __clz(__rbit64(v366)) + ((void)v358 << 6);
    goto LABEL_258;
  }
  long long v367 = (uint64_t *)(v365 + 5);
  if ((uint64_t)v367 >= (uint64_t)v420) {
    goto LABEL_263;
  }
  unint64_t v366 = *(void *)(v419 + 8 * (void)v367);
  if (v366)
  {
    uint64_t v358 = v367;
    goto LABEL_257;
  }
  while (1)
  {
    uint64_t v358 = (uint64_t *)((char *)v367 + 1);
    if (__OFADD__(v367, 1)) {
      break;
    }
    if ((uint64_t)v358 >= (uint64_t)v420) {
      goto LABEL_263;
    }
    unint64_t v366 = *(void *)(v419 + 8 * (void)v358);
    long long v367 = (uint64_t *)((char *)v367 + 1);
    if (v366) {
      goto LABEL_257;
    }
  }
LABEL_312:
  __break(1u);
LABEL_313:
  sub_10096D3C0();
  __break(1u);
LABEL_314:
  swift_errorRelease();
  __break(1u);
  uint64_t result = swift_errorRelease();
  __break(1u);
  return result;
}

uint64_t sub_100463470(uint64_t result, uint64_t a2)
{
  int64_t v2 = 0;
  uint64_t v3 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v2 << 6);
LABEL_5:
    uint64_t v10 = *(void *)(*(void *)(a2 + 56) + 8 * v9);
    BOOL v11 = __OFADD__(result, v10);
    result += v10;
    if (v11)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  int64_t v12 = v2 + 1;
  if (__OFADD__(v2, 1)) {
    goto LABEL_25;
  }
  if (v12 >= v7) {
    return result;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v12);
  ++v2;
  if (v13) {
    goto LABEL_22;
  }
  int64_t v2 = v12 + 1;
  if (v12 + 1 >= v7) {
    return result;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v2);
  if (v13) {
    goto LABEL_22;
  }
  int64_t v2 = v12 + 2;
  if (v12 + 2 >= v7) {
    return result;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v2);
  if (v13) {
    goto LABEL_22;
  }
  int64_t v2 = v12 + 3;
  if (v12 + 3 >= v7) {
    return result;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v2);
  if (v13)
  {
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v9 = __clz(__rbit64(v13)) + (v2 << 6);
    goto LABEL_5;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7) {
    return result;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v2 >= v7) {
      return result;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v2);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100463588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v7 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a3];
  sub_100845F00(2);
  unint64_t v9 = v8;

  if (v9)
  {
    id v10 = [v9 integerValue];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *a4;
    *a4 = 0x8000000000000000;
    sub_10038C9A0((uint64_t)v10, a1, a2, isUniquelyReferenced_nonNull_native);
    *a4 = v13;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10091750C(a1, a2);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100463698()
{
  uint64_t v1 = sub_10096B480();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  unint64_t v8 = (char *)&v48 - v7;
  __chkstk_darwin(v6);
  id v10 = (char *)&v48 - v9;
  BOOL v11 = *(uint64_t (**)(uint64_t))&v0[OBJC_IVAR____TtC9libfssync4FPCK_isInvalidated];
  uint64_t v12 = swift_retain();
  LOBYTE(v11) = v11(v12);
  swift_release();
  if (v11) {
    return 0;
  }
  int64_t v14 = *(uint64_t (**)(uint64_t))&v0[OBJC_IVAR____TtC9libfssync4FPCK_shouldPause];
  if (!v14) {
    return 1;
  }
  uint64_t v15 = *(void *)&v0[OBJC_IVAR____TtC9libfssync4FPCK_shouldPause + 8];
  uint64_t v16 = swift_retain();
  uint64_t v17 = (char *)v14(v16);
  uint64_t v18 = *(void **)&v17[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore];
  if (v17[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] != 1)
  {
    if (v18)
    {
      id v28 = v18;
      sub_1000705CC((uint64_t)v14);
    }
    else
    {
      sub_1000705CC((uint64_t)v14);
    }

    return 1;
  }
  if (v18)
  {
    id v53 = v18;
    id v19 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v55 = v0;
    uint64_t v20 = sub_10096B470();
    os_log_type_t v21 = sub_10096C590();
    BOOL v22 = os_log_type_enabled(v20, v21);
    id v51 = v17;
    uint64_t v52 = v2;
    uint64_t v54 = v15;
    if (v22)
    {
      NSString v23 = (uint8_t *)swift_slowAlloc();
      unsigned int v24 = (uint8_t *)swift_slowAlloc();
      char v50 = v24;
      *(_DWORD *)NSString v23 = 136315138;
      id v57 = v24;
      id v48 = v23 + 4;
      uint64_t v49 = v23;
      double v25 = v55;
      uint64_t v27 = *(uint64_t *)((char *)&v55->isa + OBJC_IVAR____TtC9libfssync4FPCK_runID);
      unint64_t v26 = *(unint64_t *)((char *)&v55[1].isa + OBJC_IVAR____TtC9libfssync4FPCK_runID);
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_100719D44(v27, v26, (uint64_t *)&v57);
      sub_10096C8C0();

      uint64_t v2 = v52;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "🧹 FPCK %s pausing mid-run because pause checker indicated", v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v37 = *(NSObject **)(v2 + 8);
    ((void (*)(char *, uint64_t))v37)(v8, v1);
    id v38 = v53;
    sub_10096C790();
    id v39 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v40 = v55;
    char v41 = sub_10096B470();
    os_log_type_t v42 = sub_10096C590();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      char v44 = (uint8_t *)swift_slowAlloc();
      char v50 = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      id v57 = v44;
      uint64_t v49 = v43 + 4;
      uint64_t v55 = v37;
      uint64_t v45 = *(uint64_t *)((char *)&v40->isa + OBJC_IVAR____TtC9libfssync4FPCK_runID);
      unint64_t v46 = *(unint64_t *)((char *)&v40[1].isa + OBJC_IVAR____TtC9libfssync4FPCK_runID);
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_100719D44(v45, v46, (uint64_t *)&v57);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "🧹 FPCK %s resuming mid-run", v43, 0xCu);
      uint64_t v13 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_1000705CC((uint64_t)v14);

      ((void (*)(char *, uint64_t))v55)(v5, v1);
      return v13;
    }
    sub_1000705CC((uint64_t)v14);

    ((void (*)(char *, uint64_t))v37)(v5, v1);
    return 1;
  }
  id v29 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  NSString v30 = v0;
  uint64_t v31 = sub_10096B470();
  os_log_type_t v32 = sub_10096C590();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v55 = v31;
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    id v53 = (id)swift_slowAlloc();
    id v57 = (uint8_t *)v53;
    char v50 = v33;
    *(_DWORD *)uint64_t v33 = 136315138;
    uint64_t v49 = v33 + 4;
    uint64_t v54 = v15;
    uint64_t v34 = *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v35 = *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_100719D44(v34, v35, (uint64_t *)&v57);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    uint64_t v36 = v55;
    _os_log_impl((void *)&_mh_execute_header, v55, v32, "🧹 FPCK %s skipping mid-run, shouldPause missing semaphore", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_1000705CC((uint64_t)v14);
  }
  else
  {

    sub_1000705CC((uint64_t)v14);
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
  return 0;
}

void sub_100463D44()
{
  uint64_t v1 = sub_10096B480();
  uint64_t v25 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self defaultManager];
  sub_10002B7CC(&qword_100AD0BB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BA0;
  uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v28 = v6;
  sub_10096CB30();
  NSString v7 = sub_10015A4E8();
  uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v10 = v9;

  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v10;
  uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v28 = v11;
  sub_10096CB30();
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_providerVersion);
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_providerVersion + 8);
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 152) = v12;
  swift_bridgeObjectRetain();
  sub_1000936F0(inited);
  Class isa = sub_10096B9A0().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v4 sessionWithCommonProperties:isa];

  if (v15)
  {
    uint64_t v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_telemetryReport);
    swift_beginAccess();
    uint64_t v17 = *v16;
    if (!*v16)
    {
LABEL_8:

      return;
    }
    swift_bridgeObjectRetain();
    id v18 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_bridgeObjectRetain();
    id v19 = sub_10096B470();
    os_log_type_t v20 = sub_10096C590();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v21 = 134217984;
      id v26 = *(id *)(v17 + 16);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "FPDRTCReporting: postReport with %ld entries", v21, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v1);
    sub_1008D37C0(v17);
    swift_bridgeObjectRelease();
    Class v22 = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    [v15 postReportWithCategory:2 type:1 payload:v22 error:0];

    id v26 = 0;
    if ([v15 flushMessagesSynchronouslyWithError:&v26])
    {
      id v23 = v26;
      goto LABEL_8;
    }
    id v24 = v26;
    sub_10096ABF0();

    swift_willThrow();
    swift_errorRelease();
  }
}

void FPCK.launch(fromURLs:options:resultHandler:)(uint64_t a1, uint64_t a2, char *a3, uint8_t *a4)
{
  uint64_t v338 = a4;
  char v337 = a3;
  uint64_t v315 = a2;
  uint64_t v329 = a1;
  uint64_t v307 = sub_10096B480();
  uint64_t v306 = *(void *)(v307 - 8);
  uint64_t v4 = __chkstk_darwin(v307);
  uint64_t v290 = (char *)&v285 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v285 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  BOOL v291 = (char *)&v285 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v285 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  char v293 = (char *)&v285 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v292 = (char *)&v285 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v294 = (char *)&v285 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v295 = (char *)&v285 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  char v296 = (char *)&v285 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v299 = (char *)&v285 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v300 = (char *)&v285 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  os_log_type_t v304 = (char *)&v285 - v29;
  __chkstk_darwin(v28);
  uint64_t v305 = (char *)&v285 - v30;
  uint64_t v31 = sub_10002B7CC(&qword_100AD5D78);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v325 = (uint64_t)&v285 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v327 = (char *)&v285 - v34;
  uint64_t v326 = sub_10002B7CC(&qword_100AD5D80);
  uint64_t v332 = *(void *)(v326 - 8);
  uint64_t v35 = __chkstk_darwin(v326);
  uint64_t v324 = (uint64_t)&v285 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v323 = (uint64_t)&v285 - v37;
  uint64_t v38 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v39 = __chkstk_darwin(v38 - 8);
  char v41 = (char *)&v285 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v39);
  Class v333 = (Class)((char *)&v285 - v43);
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v285 - v44;
  uint64_t v46 = sub_10096AE50();
  char v47 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v46 - 8);
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v336 = (char *)&v285 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  char v340 = (char *)&v285 - v51;
  __chkstk_darwin(v50);
  BOOL v335 = (char *)&v285 - v52;
  uint64_t v53 = sub_10096B0E0();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v303 = (char *)&v285 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  uint64_t v58 = ((char *)&v285 - v57);
  sub_10096B0D0();
  sub_10096B080();
  double v60 = v59;
  uint64_t v297 = v54;
  char v62 = *(void (**)(NSObject *, uint64_t))(v54 + 8);
  uint64_t v61 = v54 + 8;
  double v298 = v58;
  uint64_t v302 = v53;
  uint64_t v301 = v62;
  v62(v58, v53);
  double v63 = v60 * 1000000000.0;
  if ((~COERCE__INT64(v60 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_84;
  }
  if (v63 <= -9.22337204e18)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (v63 >= 9.22337204e18)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  uint64_t v328 = v41;
  uint64_t v64 = v322;
  *(void *)&v322[OBJC_IVAR____TtC9libfssync4FPCK_repairStartTime] = (uint64_t)v63;
  uint64_t v65 = OBJC_IVAR____TtC9libfssync4FPCK_launchOptions;
  *(void *)&v64[OBJC_IVAR____TtC9libfssync4FPCK_launchOptions] = v315;
  uint64_t v66 = &v64[OBJC_IVAR____TtC9libfssync4FPCK_resultHandler];
  uint64_t v67 = v338;
  *(void *)uint64_t v66 = v337;
  *((void *)v66 + 1) = v67;
  swift_retain();
  swift_release();
  unint64_t v68 = *(void *)(v329 + 16);
  if (!v68)
  {
    v47[7](v45, 1, 1, v46);
LABEL_17:
    sub_10002B770((uint64_t)v45, &qword_100ACA8C0);
    NSString v105 = sub_10096BC00();
    Class isa = sub_10096C080().super.isa;
    id v107 = (id)FPInvalidParameterError();

    if (v107) {
      swift_willThrow();
    }
    else {
      __break(1u);
    }
    return;
  }
  int v288 = v13;
  unint64_t v289 = v8;
  uint64_t v69 = (char *)v47[2];
  uint64_t v320 = v329 + ((*((unsigned __int8 *)v47 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v47 + 80));
  char v337 = v69;
  ((void (*)(char *))v69)(v45);
  double v70 = v47[7];
  v70(v45, 0, 1, v46);
  double v71 = v47[6];
  unint64_t v319 = (char *)(v47 + 6);
  unint64_t v318 = v71;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v71)(v45, 1, v46) == 1) {
    goto LABEL_17;
  }
  uint64_t v286 = v65;
  uint64_t v287 = v61;
  uint64_t v72 = v47[4];
  unint64_t v317 = v68;
  char v73 = v335;
  unint64_t v314 = (char *)(v47 + 4);
  uint64_t v313 = v72;
  ((void (*)(char *, char *, uint64_t))v72)(v335, v45, v46);
  Class v74 = v333;
  ((void (*)(Class, char *, uint64_t))v337)(v333, v73, v46);
  v70((char *)v74, 0, 1, v46);
  char v75 = v322;
  uint64_t v76 = (uint64_t)&v322[OBJC_IVAR____TtC9libfssync4FPCK_rootURL];
  swift_beginAccess();
  uint64_t v77 = v76;
  unint64_t v78 = v317;
  sub_1000148B8((uint64_t)v74, v77, &qword_100ACA8C0);
  swift_endAccess();
  *(void *)&v75[OBJC_IVAR____TtC9libfssync4FPCK_rootURLs] = v329;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v347 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v321 = v46;
  int64_t v316 = (unsigned __int8 *)v47;
  uint64_t v79 = (void (*)(char *, uint64_t, uint64_t))v337;
  if (v78 >= 2)
  {
    uint64_t v312 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v332 + 56);
    uint64_t v310 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v332 + 48);
    uint64_t v311 = (void (**)(char *, uint64_t))(v47 + 1);
    swift_bridgeObjectRetain();
    uint64_t v80 = 1;
    uint64_t v81 = v339;
    uint64_t v334 = (char *)(v47 + 2);
    uint64_t v309 = (char *)(v47 + 7);
    uint64_t v308 = v70;
    while (1)
    {
      BOOL v82 = v78 == v80;
      uint64_t v83 = v328;
      if (v82) {
        break;
      }
      v79(v328, v320 + (void)v47[9] * v80, v46);
      v70(v83, 0, 1, v46);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v318)(v83, 1, v46) == 1) {
        goto LABEL_21;
      }
      uint64_t v332 = v80;
      ((void (*)(char *, char *, uint64_t))v313)(v340, v83, v46);
      uint64_t v84 = v336;
      v79(v336, (uint64_t)v335, v46);
      Class v333 = (Class)type metadata accessor for FPCKDetachedRoot(0);
      os_log_type_t v85 = (char *)objc_allocWithZone(v333);
      uint64_t v86 = sub_10096AE10();
      uint64_t v88 = v87;
      __chkstk_darwin(v86);
      double v284 = v84;
      uint64_t v89 = (uint64_t)v327;
      uint64_t v90 = v326;
      (*v312)(v327, 1, 1, v326);
      swift_bridgeObjectRetain();
      sub_10084CC44(4294967294, v86, v88, 0x100000, 0, 0, v89, (uint64_t)sub_10049F3A4, (uint64_t)(&v285 - 4));
      if (v81)
      {
        sub_10002B770(v89, &qword_100AD5D78);

        swift_bridgeObjectRelease();
        unint64_t v109 = *v311;
        (*v311)(v340, v46);
        v109(v336, v46);
        swift_deallocPartialClassInstance();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v109(v335, v46);
        return;
      }
      uint64_t v339 = 0;
      uint64_t v91 = v325;
      sub_10002B70C(v89, v325, &qword_100AD5D78);
      if ((*v310)(v91, 1, v90) == 1) {
        __break(1u);
      }
      uint64_t v331 = *(int *)(v90 + 48);
      uint64_t v338 = (uint8_t *)*(int *)(v90 + 64);
      uint64_t v92 = v323;
      sub_10001AE98(v91, v323, &qword_100AD5D80);
      sub_10002B770(v89, &qword_100AD5D78);
      swift_bridgeObjectRelease();
      uint64_t v93 = v85;
      ((void (*)(char *, char *, uint64_t))v337)(&v85[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_physicalLocation], v340, v46);
      uint64_t v94 = v324;
      sub_10002B70C(v92, v324, &qword_100ACA8C0);
      uint64_t v95 = v331;
      uint64_t v96 = *(void *)(v92 + v331);
      int v330 = v338[v92];
      sub_10001AE98(v94, (uint64_t)&v93[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_logicalLocation], &qword_100ACA8C0);
      uint64_t v97 = *(int *)(v90 + 48);
      uint64_t v98 = *(int *)(v90 + 64);
      sub_10002B70C(v92, v94, &qword_100ACA8C0);
      *(void *)(v94 + v97) = v96;
      *(unsigned char *)(v94 + v98) = v330;
      *(void *)&v93[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_inode] = v96;
      sub_10002B770(v94, &qword_100ACA8C0);
      uint64_t v99 = *(int *)(v90 + 48);
      uint64_t v100 = *(int *)(v90 + 64);
      sub_10001AE98(v92, v94, &qword_100ACA8C0);
      *(void *)(v94 + v99) = *(void *)(v92 + v95);
      uint8_t v101 = v338[v92];
      *(unsigned char *)(v94 + v100) = v101;
      uint64_t v46 = v321;
      v93[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_shouldRefreshBookmark] = v101;

      sub_10002B770(v94, &qword_100ACA8C0);
      v341.receiver = v93;
      v341.super_class = v333;
      id v102 = objc_msgSendSuper2(&v341, "init");
      uint64_t v103 = *v311;
      (*v311)(v340, v46);
      v103(v336, v46);
      id v104 = v102;
      sub_10096C070();
      if (*(void *)((v347 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v347 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10096C0F0();
      }
      uint64_t v80 = v332 + 1;
      sub_10096C150();
      sub_10096C0C0();

      unint64_t v78 = v317;
      uint64_t v81 = v339;
      char v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v316;
      uint64_t v79 = (void (*)(char *, uint64_t, uint64_t))v337;
      double v70 = v308;
      if (v317 == v80)
      {
        v308(v328, 1, 1, v46);
LABEL_21:
        swift_bridgeObjectRelease();
        unint64_t v108 = v305;
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_75;
  }
  unint64_t v108 = v305;
  uint64_t v81 = v339;
LABEL_22:
  uint64_t v339 = v81;
  uint64_t v110 = v322;
  *(void *)&v322[OBJC_IVAR____TtC9libfssync4FPCK_detachedRoots] = v347;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v111 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v112 = v110;
  uint64_t v113 = sub_10096B470();
  os_log_type_t v114 = sub_10096C590();
  if (os_log_type_enabled(v113, v114))
  {
    uint64_t v115 = swift_slowAlloc();
    unint64_t v350 = (const void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v115 = 136315394;
    uint64_t v116 = *(void *)&v112[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v117 = *(void *)&v112[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v349 = sub_100719D44(v116, v117, (uint64_t *)&v350);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v115 + 12) = 2080;
    unint64_t v118 = FPCKOptions.description.getter(v315);
    uint64_t v349 = sub_100719D44(v118, v119, (uint64_t *)&v350);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v113, v114, "🧹 FPCK %s: launching with options: [%s].", (uint8_t *)v115, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v120 = *(void (**)(char *, uint64_t))(v306 + 8);
    uint64_t v121 = v305;
  }
  else
  {

    unint64_t v120 = *(void (**)(char *, uint64_t))(v306 + 8);
    uint64_t v121 = v108;
  }
  uint64_t v122 = v307;
  v120(v121, v307);
  uint64_t v123 = v304;
  char v124 = *(uint8_t **)&v112[OBJC_IVAR____TtC9libfssync4FPCK_reason];
  if ((v124 & 0x20) == 0)
  {
    unint64_t v125 = (objc_class *)type metadata accessor for FPCKTelemetryUpdate();
    char v126 = (char *)objc_allocWithZone(v125);
    *(void *)&v126[OBJC_IVAR___FPCKTelemetryUpdate_status] = 0;
    v346.receiver = v126;
    v346.super_class = v125;
    id v127 = objc_msgSendSuper2(&v346, "init");
    id v128 = *(void (**)(id))&v112[OBJC_IVAR____TtC9libfssync4FPCK_saveCheckpoint];
    swift_retain();
    v128(v127);

    swift_release();
  }
  char v129 = sub_100463698();
  uint64_t v130 = v321;
  if ((v129 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v316 + 1))(v335, v130);
    return;
  }
  uint64_t v338 = v124;
  id v131 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v132 = v112;
  uint64_t v133 = sub_10096B470();
  os_log_type_t v134 = sub_10096C590();
  BOOL v135 = os_log_type_enabled(v133, v134);
  char v340 = (char *)v120;
  if (v135)
  {
    uint64_t v136 = (uint8_t *)swift_slowAlloc();
    unint64_t v350 = (const void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v136 = 136315138;
    uint64_t v137 = *(void *)&v132[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v138 = *(void *)&v132[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v349 = sub_100719D44(v137, v138, (uint64_t *)&v350);
    uint64_t v122 = v307;
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v133, v134, "🧹 FPCK %s: launching disk and FSSnapshot checks.", v136, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    os_log_type_t v139 = v304;
  }
  else
  {

    os_log_type_t v139 = v123;
  }
  v120(v139, v122);
  sub_10096B0B0();
  int v141 = *(_DWORD *)&v132[OBJC_IVAR____TtC9libfssync4FPCK_ioContext + 8];
  char v142 = v132[OBJC_IVAR____TtC9libfssync4FPCK_ioContext + 12];
  unint64_t v350 = *(const void **)&v132[OBJC_IVAR____TtC9libfssync4FPCK_ioContext];
  uint64_t v140 = v350;
  int v351 = v141;
  char v352 = v142;
  id v143 = objc_allocWithZone((Class)FSChecker);
  _Block_copy(v140);
  id v144 = [v143 init];
  sub_10096AD20(&v353);
  uint64_t v146 = v145;
  type metadata accessor for FPCKDetachedRoot(0);
  Class v147 = sub_10096C080().super.isa;
  [v144 enumerateItemsOnDiskAtURL:v146 detachedRoots:v147 usingFPFS:v132[OBJC_IVAR____TtC9libfssync4FPCK_usingFPFS] ioContext:&v350 delegate:v132];

  _Block_release(v140);
  swift_bridgeObjectRelease();
  id v148 = (id)fpfs_current_or_default_log();
  int64_t v149 = v300;
  sub_10096B490();
  unint64_t v150 = v132;
  unint64_t v151 = sub_10096B470();
  os_log_type_t v152 = sub_10096C590();
  if (os_log_type_enabled(v151, v152))
  {
    uint64_t v153 = swift_slowAlloc();
    unint64_t v350 = (const void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v153 = 136315394;
    uint64_t v154 = *(void *)&v150[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v155 = *(void *)&v150[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v349 = sub_100719D44(v154, v155, (uint64_t *)&v350);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v153 + 12) = 2048;
    char v156 = v298;
    sub_10096B0B0();
    swift_beginAccess();
    sub_10096B010();
    uint64_t v158 = v157;
    v301(v156, v302);
    uint64_t v349 = v158;
    uint64_t v122 = v307;
    sub_10096C8C0();
    _os_log_impl((void *)&_mh_execute_header, v151, v152, "🧹 FPCK %s: FS vs snapshot check took %fs", (uint8_t *)v153, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    int64_t v159 = v300;
  }
  else
  {

    int64_t v159 = v149;
  }
  id v160 = v340;
  ((void (*)(char *, uint64_t))v340)(v159, v122);
  long long v161 = v299;
  if ((v338 & 0x20) == 0)
  {
    uint64_t v162 = (objc_class *)type metadata accessor for FPCKTelemetryUpdate();
    Swift::String v163 = (char *)objc_allocWithZone(v162);
    *(void *)&v163[OBJC_IVAR___FPCKTelemetryUpdate_status] = 0x3FD0000000000000;
    v345.receiver = v163;
    v345.super_class = v162;
    id v164 = objc_msgSendSuper2(&v345, "init");
    uint64_t v165 = *(void (**)(id))&v150[OBJC_IVAR____TtC9libfssync4FPCK_saveCheckpoint];
    swift_retain();
    v165(v164);

    swift_release();
  }
  char v166 = sub_100463698();
  uint64_t v46 = v321;
  if ((v166 & 1) == 0) {
    goto LABEL_92;
  }
  id v167 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  Swift::String v168 = v150;
  uint64_t v169 = sub_10096B470();
  os_log_type_t v170 = sub_10096C590();
  if (os_log_type_enabled(v169, v170))
  {
    uint64_t v171 = (uint8_t *)swift_slowAlloc();
    unint64_t v350 = (const void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v171 = 136315138;
    uint64_t v172 = *(void *)&v168[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v173 = *(void *)&v168[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v349 = sub_100719D44(v172, v173, (uint64_t *)&v350);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v169, v170, "🧹 FPCK %s: launching reconciliation table checks.", v171, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v46 = v321;
    swift_slowDealloc();

    uint64_t v174 = v299;
    uint64_t v175 = v307;
  }
  else
  {

    uint64_t v174 = v161;
    uint64_t v175 = v122;
  }
  ((void (*)(char *, uint64_t))v160)(v174, v175);
  uint64_t v176 = v298;
  sub_10096B0B0();
  uint64_t v177 = v303;
  swift_beginAccess();
  uint64_t v178 = v297 + 40;
  uint64_t v179 = *(void (**)(char *, NSObject *, uint64_t))(v297 + 40);
  uint64_t v180 = v302;
  v179(v177, v176, v302);
  uint64_t v181 = v339;
  sub_10046BF18();
  uint64_t v339 = v181;
  if (v181) {
    goto LABEL_42;
  }
  char v337 = (char *)v179;
  uint64_t v297 = v178;
  id v184 = (id)fpfs_current_or_default_log();
  uint64_t v185 = v296;
  sub_10096B490();
  uint64_t v186 = v168;
  BOOL v187 = sub_10096B470();
  os_log_type_t v188 = sub_10096C590();
  if (os_log_type_enabled(v187, v188))
  {
    uint64_t v189 = swift_slowAlloc();
    uint64_t v336 = v186;
    uint64_t v190 = v189;
    uint64_t v349 = swift_slowAlloc();
    *(_DWORD *)uint64_t v190 = 136315394;
    uint64_t v191 = *(void *)&v336[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v192 = *(void *)&v336[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v348 = sub_100719D44(v191, v192, &v349);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v190 + 12) = 2048;
    sub_10096B0B0();
    uint64_t v193 = v303;
    sub_10096B010();
    uint64_t v195 = v194;
    v301(v176, v302);
    uint64_t v348 = v195;
    uint64_t v45 = (char *)v307;
    sub_10096C8C0();
    _os_log_impl((void *)&_mh_execute_header, v187, v188, "🧹 FPCK %s: reconciliation table check took %fs", (uint8_t *)v190, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v186 = v336;
    swift_slowDealloc();

    ((void (*)(char *, char *))v160)(v296, v45);
  }
  else
  {

    uint64_t v45 = (char *)v307;
    ((void (*)(char *, uint64_t))v160)(v185, v307);
    uint64_t v193 = v303;
  }
  os_log_type_t v196 = v295;
  if ((v338 & 0x20) == 0)
  {
    uint64_t v197 = (objc_class *)type metadata accessor for FPCKTelemetryUpdate();
    uint64_t v198 = (char *)objc_allocWithZone(v197);
    *(void *)&v198[OBJC_IVAR___FPCKTelemetryUpdate_status] = 0x3FE0000000000000;
    v344.receiver = v198;
    v344.super_class = v197;
    id v199 = objc_msgSendSuper2(&v344, "init");
    NSErrorUserInfoKey v200 = *(void (**)(id))&v186[OBJC_IVAR____TtC9libfssync4FPCK_saveCheckpoint];
    swift_retain();
    v200(v199);

    swift_release();
  }
  if ((sub_100463698() & 1) == 0)
  {
    (*((void (**)(char *, uint64_t))v316 + 1))(v335, v321);
    int64_t v182 = v193;
LABEL_94:
    uint64_t v183 = v302;
    goto LABEL_95;
  }
  id v201 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v202 = v186;
  BOOL v203 = sub_10096B470();
  os_log_type_t v204 = sub_10096C590();
  if (os_log_type_enabled(v203, v204))
  {
    uint64_t v205 = (uint8_t *)swift_slowAlloc();
    uint64_t v349 = swift_slowAlloc();
    *(_DWORD *)uint64_t v205 = 136315138;
    uint64_t v206 = *(void *)&v202[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v207 = *(void *)&v202[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v348 = sub_100719D44(v206, v207, &v349);
    uint64_t v45 = (char *)v307;
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v203, v204, "🧹 FPCK %s: launching TTR check", v205, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  ((void (*)(char *, char *))v340)(v196, v45);
  uint64_t v208 = v298;
  uint64_t v209 = (void (*)(char *, NSObject *, uint64_t))v337;
  sub_10096B0B0();
  v209(v303, v208, v302);
  sub_10046B6CC();
  id v210 = (id)fpfs_current_or_default_log();
  uint64_t v211 = v294;
  sub_10096B490();
  unint64_t v212 = v202;
  int64_t v213 = sub_10096B470();
  os_log_type_t v214 = sub_10096C590();
  if (os_log_type_enabled(v213, v214))
  {
    uint64_t v215 = swift_slowAlloc();
    uint64_t v349 = swift_slowAlloc();
    *(_DWORD *)uint64_t v215 = 136315394;
    uint64_t v216 = *(void *)&v212[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v217 = *(void *)&v212[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v348 = sub_100719D44(v216, v217, &v349);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v215 + 12) = 2048;
    sub_10096B0B0();
    sub_10096B010();
    uint64_t v219 = v218;
    v301(v208, v302);
    uint64_t v348 = v219;
    uint64_t v45 = (char *)v307;
    sub_10096C8C0();
    _os_log_impl((void *)&_mh_execute_header, v213, v214, "🧹 FPCK %s: TTR check took %fs", (uint8_t *)v215, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    int64_t v220 = v294;
  }
  else
  {

    int64_t v220 = v211;
  }
  ((void (*)(char *, char *))v340)(v220, v45);
  id v221 = (id)fpfs_current_or_default_log();
  uint64_t v222 = v292;
  sub_10096B490();
  uint64_t v223 = v212;
  uint64_t v224 = sub_10096B470();
  os_log_type_t v225 = sub_10096C590();
  if (os_log_type_enabled(v224, v225))
  {
    os_log_type_t v226 = (uint8_t *)swift_slowAlloc();
    uint64_t v349 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v226 = 136315138;
    uint64_t v227 = *(void *)&v223[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v228 = *(void *)&v223[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v348 = sub_100719D44(v227, v228, &v349);
    uint64_t v45 = (char *)v307;
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v224, v225, "🧹 FPCK %s: launching FSSnapshot and FPSnapshot checks.", v226, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  ((void (*)(char *, char *))v340)(v222, v45);
  uint64_t v46 = v321;
  uint64_t v177 = v303;
  uint64_t v229 = v293;
  uint64_t v230 = v298;
  sub_10096B0B0();
  uint64_t v180 = v302;
  ((void (*)(char *, NSObject *, uint64_t))v337)(v177, v230, v302);
  uint64_t v231 = v339;
  sub_10047F254();
  uint64_t v339 = v231;
  if (v231)
  {
LABEL_42:
    (*((void (**)(char *, uint64_t))v316 + 1))(v335, v46);
    int64_t v182 = v177;
    uint64_t v183 = v180;
LABEL_95:
    v301(v182, v183);
    return;
  }
  id v232 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v233 = v223;
  uint64_t v234 = sub_10096B470();
  os_log_type_t v235 = sub_10096C590();
  BOOL v236 = os_log_type_enabled(v234, v235);
  char v337 = v233;
  if (v236)
  {
    uint64_t v237 = swift_slowAlloc();
    uint64_t v349 = swift_slowAlloc();
    *(_DWORD *)uint64_t v237 = 136315394;
    uint64_t v238 = *(void *)&v233[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v239 = *(void *)&v233[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v348 = sub_100719D44(v238, v239, &v349);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v237 + 12) = 2048;
    sub_10096B0B0();
    sub_10096B010();
    uint64_t v241 = v240;
    v301(v230, v302);
    uint64_t v348 = v241;
    uint64_t v45 = (char *)v307;
    sub_10096C8C0();
    _os_log_impl((void *)&_mh_execute_header, v234, v235, "🧹 FPCK %s: FS vs FP snapshot check took %fs", (uint8_t *)v237, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v46 = v321;
    swift_slowDealloc();

    unint64_t v242 = v293;
  }
  else
  {

    unint64_t v242 = v229;
  }
  uint64_t v13 = v340;
  ((void (*)(char *, char *))v340)(v242, v45);
  char v41 = v289;
  LOBYTE(v53) = (_BYTE)v338;
  if ((v338 & 0x20) == 0)
  {
    int64_t v243 = (objc_class *)type metadata accessor for FPCKTelemetryUpdate();
    int64_t v244 = (char *)objc_allocWithZone(v243);
    *(void *)&v244[OBJC_IVAR___FPCKTelemetryUpdate_status] = 0x3FE8000000000000;
    v343.receiver = v244;
    v343.super_class = v243;
    id v245 = objc_msgSendSuper2(&v343, "init");
    unint64_t v246 = *(void (**)(id))&v337[OBJC_IVAR____TtC9libfssync4FPCK_saveCheckpoint];
    swift_retain();
    v246(v245);

    swift_release();
  }
  uint64_t v247 = *(void *)&v322[v286];
  char v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v316;
  if ((v247 & 0x10) != 0)
  {
    os_log_t v261 = v337;
    if ((sub_100463698() & 1) == 0)
    {
LABEL_82:
      ((void (*)(char *, uint64_t))v47[1])(v335, v46);
LABEL_93:
      int64_t v182 = v303;
      goto LABEL_94;
    }
    id v262 = (id)fpfs_current_or_default_log();
    uint64_t v263 = v288;
    sub_10096B490();
    uint64_t v264 = v261;
    v265 = sub_10096B470();
    os_log_type_t v266 = sub_10096C590();
    if (os_log_type_enabled(v265, v266))
    {
      uint64_t v267 = (uint8_t *)swift_slowAlloc();
      uint64_t v349 = swift_slowAlloc();
      *(_DWORD *)uint64_t v267 = 136315138;
      uint64_t v338 = v267 + 4;
      uint64_t v268 = *(void *)&v264[OBJC_IVAR____TtC9libfssync4FPCK_runID];
      unint64_t v269 = *(void *)&v264[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
      swift_bridgeObjectRetain();
      uint64_t v348 = sub_100719D44(v268, v269, &v349);
      uint64_t v45 = (char *)v307;
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v265, v266, "🧹 FPCK %s: launching purgePurgatory.", v267, 0xCu);
      swift_arrayDestroy();
      char v41 = v289;
      swift_slowDealloc();
      uint64_t v46 = v321;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v13 = v340;
    ((void (*)(char *, char *))v340)(v263, v45);
    uint64_t v270 = v339;
    sub_100484088();
    uint64_t v339 = v270;
    if (v270) {
      goto LABEL_92;
    }
    char v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v316;
    if ((*(void *)&v322[v286] & 0x20) == 0) {
      goto LABEL_67;
    }
  }
  else if ((v247 & 0x20) == 0)
  {
    goto LABEL_67;
  }
  uint64_t v271 = v337;
  if ((sub_100463698() & 1) == 0) {
    goto LABEL_82;
  }
  id v272 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  char v47 = v271;
  uint64_t v58 = sub_10096B470();
  os_log_type_t v273 = sub_10096C590();
  if (os_log_type_enabled(v58, v273))
  {
    unint64_t v274 = (uint8_t *)swift_slowAlloc();
    uint64_t v349 = swift_slowAlloc();
    *(_DWORD *)unint64_t v274 = 136315138;
    uint64_t v338 = v274 + 4;
    uint64_t v275 = *(uint64_t *)((char *)v47 + OBJC_IVAR____TtC9libfssync4FPCK_runID);
    unint64_t v276 = *(unint64_t *)((char *)v47 + OBJC_IVAR____TtC9libfssync4FPCK_runID + 8);
    swift_bridgeObjectRetain();
    uint64_t v348 = sub_100719D44(v275, v276, &v349);
    uint64_t v45 = (char *)v307;
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v58, v273, "🧹 FPCK %s: launching backup manifest checks.", v274, 0xCu);
    swift_arrayDestroy();
    char v41 = v289;
    swift_slowDealloc();
    uint64_t v46 = v321;
    swift_slowDealloc();

    goto LABEL_87;
  }
LABEL_86:

LABEL_87:
  ((void (*)(char *, char *))v13)(v291, v45);
  uint64_t v277 = v339;
  sub_1004843FC();
  uint64_t v339 = v277;
  if (v277)
  {
LABEL_92:
    (*((void (**)(char *, uint64_t))v316 + 1))(v335, v46);
    goto LABEL_93;
  }
  char v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v316;
LABEL_67:
  if ((v53 & 0x20) != 0)
  {
LABEL_75:
    ((void (*)(char *, uint64_t))v47[1])(v335, v46);
    v301(v303, v302);
    return;
  }
  uint64_t v248 = v337;
  uint64_t v249 = sub_10045FF38();
  if (!v249)
  {
    id v278 = (id)fpfs_current_or_default_log();
    uint64_t v279 = v290;
    sub_10096B490();
    uint64_t v280 = sub_10096B470();
    os_log_type_t v281 = sub_10096C5B0();
    if (os_log_type_enabled(v280, v281))
    {
      uint64_t v282 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v282 = 0;
      _os_log_impl((void *)&_mh_execute_header, v280, v281, "🧹 ❌ Error generating telemetry report, report is empty", v282, 2u);
      uint64_t v46 = v321;
      swift_slowDealloc();
    }

    ((void (*)(char *, char *))v13)(v279, v45);
    goto LABEL_92;
  }
  uint64_t v250 = v249;
  uint64_t v251 = (uint64_t *)&v248[OBJC_IVAR____TtC9libfssync4FPCK_telemetryReport];
  swift_beginAccess();
  *uint64_t v251 = v250;
  swift_bridgeObjectRelease();
  id v252 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  unint64_t v253 = v248;
  uint64_t v254 = sub_10096B470();
  os_log_type_t v255 = sub_10096C590();
  if (os_log_type_enabled(v254, v255))
  {
    uint64_t v256 = (uint8_t *)swift_slowAlloc();
    uint64_t v348 = swift_slowAlloc();
    *(_DWORD *)uint64_t v256 = 136315138;
    uint64_t v257 = *(void *)&v253[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    unint64_t v258 = *(void *)&v253[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    uint64_t v342 = sub_100719D44(v257, v258, &v348);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v254, v255, "🧹 FPCK %s: all checks done.", v256, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v46 = v321;
    swift_slowDealloc();

    uint64_t v259 = v289;
    int v260 = (char *)v307;
  }
  else
  {

    uint64_t v259 = v41;
    int v260 = v45;
  }
  ((void (*)(char *, char *))v13)(v259, v260);
  uint64_t v283 = v302;
  if ((v315 & 0x200) != 0) {
    sub_100463D44();
  }
  (*((void (**)(char *, uint64_t))v316 + 1))(v335, v46);
  v301(v303, v283);
}

uint64_t FPCK.checker(_:handleItem:itemStatus:under:brokenInvariants:)(uint64_t a1, unsigned int a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_10049FD38(a2, a3, a4, a5);
}

void *sub_100466E10(void *result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, unint64_t *a6, unint64_t *a7)
{
  if (*result || *a2)
  {
    uint64_t v12 = (void *)(a3 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck);
    uint64_t result = (void *)swift_beginAccess();
    if (__OFADD__(*v12, 1))
    {
      __break(1u);
    }
    else
    {
      ++*v12;
      swift_bridgeObjectRetain();
      NSString v13 = sub_10096BC00();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v13, "fp_prettyPath");

      uint64_t v15 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v17 = v16;

      uint64_t v18 = sub_10049FA00(v15, v17, *a5, *a6, *a2, *a7);
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(a3 + OBJC_IVAR____TtC9libfssync4FPCK_resultHandler);
      swift_retain();
      v21(v18, v20);
      swift_bridgeObjectRelease();
      return (void *)swift_release();
    }
  }
  return result;
}

uint64_t sub_100466F68@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker);
  if (!v5) {
    goto LABEL_7;
  }
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_7;
  }
  id v9 = a2;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10031F918(v9);
  if ((v11 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_7:
    sub_1003572F8(v17);
    return sub_10001AE98((uint64_t)v17, a4, &qword_100ACD980);
  }
  uint64_t v12 = *(void *)(*(void *)(v8 + 56) + 8 * v10);
  swift_retain();

  swift_bridgeObjectRelease();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    void v16[2] = v12;
    v16[3] = a3;
    id v14 = *(void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t@<X8>), void *, uint64_t))(*(void *)__chkstk_darwin(result) + 432);
    uint64_t v15 = sub_10002B7CC(&qword_100ACD980);
    v14(1, "checker(_:handleItem:itemStatus:under:brokenInvariants:)", 56, 2, sub_1004A6FD4, v16, v15);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10046711C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10096B480();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100555F10(*(void **)a1, *(unsigned __int8 *)(a1 + 8), 0, v26);
  if (v2)
  {
    uint64_t v21 = v6;
    id v9 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_errorRetain();
    uint64_t v10 = sub_10096B470();
    os_log_type_t v11 = sub_10096C5B0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v20 = a2;
      NSString v13 = (uint8_t *)v12;
      id v14 = (void *)swift_slowAlloc();
      uint64_t v19 = v5;
      *(_DWORD *)NSString v13 = 138543362;
      uint64_t v18 = v13 + 4;
      swift_getErrorValue();
      id v15 = Error.prettyDescription.getter(v25);
      *(void *)&v26[0] = v15;
      uint64_t v5 = v19;
      sub_10096C8C0();
      *id v14 = v15;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "FPCK: error fetching the item in the reconciliation table: %{public}@", v13, 0xCu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v20;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v5);
    sub_1003572F8(v26);
    return sub_10001AE98((uint64_t)v26, a2, &qword_100ACD980);
  }
  else
  {
    sub_10001AE98((uint64_t)v26, (uint64_t)v23, (uint64_t *)&unk_100AD67E0);
    sub_10001AE98((uint64_t)v23, (uint64_t)v24, (uint64_t *)&unk_100AD67E0);
    if (sub_1000D3324((uint64_t)v24) == 1)
    {
      sub_1003572F8(v22);
    }
    else
    {
      memcpy(v22, v24, sizeof(v22));
      v17._int countAndFlagsBits = (uint64_t)v22;
      Filename.init(rawValue:)(v17);
    }
    return sub_10001AE98((uint64_t)v22, a2, &qword_100ACD980);
  }
}

void *sub_1004674D0()
{
  uint64_t v1 = OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___vendorExcludedFolders;
  if (*(void *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___vendorExcludedFolders))
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___vendorExcludedFolders);
  }
  else
  {
    uint64_t v2 = sub_100467538(v0);
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void *sub_100467538(uint64_t a1)
{
  void (*v9)(void *__return_ptr, void, const char *, uint64_t, uint64_t, uint64_t (*)@<X0>(void *@<X8>), uint64_t, uint64_t);
  uint64_t v10;
  void v11[2];

  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker);
  if (!v1) {
    return &_swiftEmptySetSingleton;
  }
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  v11[0] = 47;
  v11[1] = 0xE100000000000000;
  sub_10001F9C0();
  swift_retain();
  uint64_t v2 = sub_10096C8E0();
  swift_bridgeObjectRelease();
  if (!*(void *)(v2 + 16))
  {
    swift_release();
    swift_bridgeObjectRelease();
    return &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  NSString v3 = sub_10096BC00();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 24);
  if (!*(void *)(v4 + 16))
  {

LABEL_10:
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10031F918(v3);
  if ((v6 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_retain();

  swift_bridgeObjectRelease();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    id v9 = *(void (**)(void *__return_ptr, void, const char *, uint64_t, uint64_t, uint64_t (*)@<X0>(void *@<X8>), uint64_t, uint64_t))(*(void *)result + 432);
    uint64_t v10 = sub_10002B7CC(&qword_100AD63C8);
    v9(v11, 0, "vendorExcludedFolders", 21, 2, sub_1004A5B4C, v7, v10);
    swift_release();
    swift_release();
    swift_release();
    return (void *)v11[0];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100467740@<X0>(void *a1@<X8>)
{
  uint64_t v2 = 0;
  char v3 = 1;
  uint64_t v4 = &_swiftEmptySetSingleton;
  while (1)
  {
    char v6 = sub_100491C10(v2, v3 & 1);
    if (v1)
    {
      uint64_t result = swift_errorRelease();
      goto LABEL_21;
    }
    id v9 = v6;
    uint64_t v2 = v7;
    char v10 = v8;
    uint64_t v11 = v6[2];
    if (!v11) {
      break;
    }
    char v20 = v8;
    uint64_t v21 = v7;
    unint64_t v12 = 0;
    while (1)
    {
      uint64_t result = (uint64_t)memcpy(__dst, &v9[62 * v12 + 4], 0x1F0uLL);
      if (LOBYTE(__dst[1]) != 1) {
        goto LABEL_15;
      }
      uint64_t v13 = __dst[0];
      uint64_t result = sub_10096D4A0();
      uint64_t v14 = -1 << v4[32];
      unint64_t v15 = result & ~v14;
      if ((*(void *)&v4[((v15 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v15))
      {
        uint64_t v16 = *((void *)v4 + 6);
        if (*(void *)(v16 + 8 * v15) == v13) {
          goto LABEL_15;
        }
        uint64_t v17 = ~v14;
        while (1)
        {
          unint64_t v15 = (v15 + 1) & v17;
          if (((*(void *)&v4[((v15 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v15) & 1) == 0) {
            break;
          }
          if (*(void *)(v16 + 8 * v15) == v13) {
            goto LABEL_15;
          }
        }
      }
      sub_10035751C((uint64_t)__dst);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = v4;
      sub_1004978DC(v13, v15, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t))sub_100922024, (uint64_t)&type metadata for UInt64, (uint64_t *)&unk_100AD63D0, (uint64_t (*)(uint64_t))sub_10092431C);
      uint64_t v4 = v23;
      swift_bridgeObjectRelease();
      uint64_t result = sub_1000D3440((uint64_t)__dst);
LABEL_15:
      if (++v12 == v11) {
        break;
      }
      if (v12 >= v9[2])
      {
        __break(1u);
        return result;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v2 = v21;
    if (v20) {
      goto LABEL_21;
    }
LABEL_3:
    char v3 = 0;
    if (*((void *)v4 + 2) >= 0x249F0uLL) {
      goto LABEL_21;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_21:
  *a1 = v4;
  return result;
}

uint64_t FPCK.checker(_:handleLockedItemAtPath:handle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (*(void *)(v4 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker))
  {
    uint64_t v5 = *a4;
    swift_beginAccess();
    swift_retain();
    sub_100495714(&v7, v5, (void (*)(uint64_t))sub_100922024, (uint64_t)&type metadata for UInt64, (uint64_t *)&unk_100AD63D0, (uint64_t (*)(uint64_t))sub_10092431C);
    swift_endAccess();
    swift_release();
  }
  return 1;
}

id sub_100467B00(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, int a5)
{
  uint64_t v10 = sub_10096B480();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0) {
    return (id)((uint64_t (*)(uint64_t))a3)(a1);
  }
  swift_errorRetain();
  id v15 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v16 = sub_10096B470();
  os_log_type_t v17 = sub_10096C5B0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = a3;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v28 = a4;
    uint64_t v21 = (void *)v20;
    *(_DWORD *)uint64_t v19 = 67109378;
    LODWORD(v30) = a5;
    sub_10096C8C0();
    *(_WORD *)(v19 + 8) = 2112;
    swift_errorRetain();
    uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v30 = v22;
    sub_10096C8C0();
    *uint64_t v21 = v22;
    sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
    sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed gathering diag info for item with did %u: %@", (uint8_t *)v19, 0x12u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v29;
    swift_slowDealloc();
  }
  else
  {
    sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
    sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v23 = (void *)sub_10096ABE0();
  sub_10002B7CC(&qword_100AD63C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10097D760;
  *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(inited + 40) = v25;
  id result = [v23 domain];
  if (result)
  {
    *(void *)(inited + 48) = result;
    *(void *)(inited + 56) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 64) = v26;
    *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(v23, "code"));
    *(void *)(inited + 80) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 88) = v27;
    *(void *)(inited + 96) = [objc_allocWithZone((Class)NSNumber) initWithInteger:0x40000000];
    sub_100095B7C(inited);
    a3();

    swift_bridgeObjectRelease();
    return (id)sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100467ED4(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10096B480();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0) {
    return (id)((uint64_t (*)(uint64_t))a3)(a1);
  }
  swift_errorRetain();
  id v15 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v16 = sub_10096B470();
  os_log_type_t v17 = sub_10096C5B0();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v30 = a4;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = a3;
    uint64_t v20 = v19;
    uint64_t v28 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 134218242;
    uint64_t v31 = a5;
    sub_10096C8C0();
    *(_WORD *)(v20 + 12) = 2112;
    swift_errorRetain();
    uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v31 = v21;
    sub_10096C8C0();
    *uint64_t v28 = v21;
    sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
    sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed gathering diag info for item with fid %llu: %@", (uint8_t *)v20, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v29;
    swift_slowDealloc();
  }
  else
  {
    sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
    sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v22 = (void *)sub_10096ABE0();
  sub_10002B7CC(&qword_100AD63C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10097D760;
  *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(inited + 40) = v24;
  id result = [v22 domain];
  if (result)
  {
    *(void *)(inited + 48) = result;
    *(void *)(inited + 56) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 64) = v25;
    *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(v22, "code"));
    *(void *)(inited + 80) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 88) = v26;
    *(void *)(inited + 96) = [objc_allocWithZone((Class)NSNumber) initWithInteger:0x40000000];
    sub_100095B7C(inited);
    a3();

    swift_bridgeObjectRelease();
    return (id)sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1004682AC(unsigned __int8 *__src, void *a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, char a10, unsigned __int8 a11)
{
  uint64_t v143 = a7;
  uint64_t v12 = v11;
  LODWORD(v139) = a8;
  int v137 = a6;
  uint64_t v131 = a5;
  LODWORD(v142) = a4;
  uint64_t v138 = a3;
  int v141 = a2;
  memcpy(v155, __src, sizeof(v155));
  uint64_t v14 = sub_10096B0E0();
  uint64_t v133 = *(void *)(v14 - 8);
  uint64_t v134 = v14;
  __chkstk_darwin(v14);
  uint64_t v132 = &v126[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10096BCB0();
  __chkstk_darwin(v16 - 8);
  uint64_t v130 = &v126[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_10096B830();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = &v126[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  uint64_t v23 = (unint64_t *)(v22 + 16);
  uint64_t v24 = dispatch_group_create();
  dispatch_group_enter(v24);
  swift_retain();
  uint64_t v25 = v24;
  sub_1004A19A4(__src, v12, v22, v25);
  uint64_t v136 = v22;
  swift_release();

  BOOL v135 = v25;
  sub_10096C600();
  uint64_t v140 = v12;
  uint64_t v26 = *(void *)(v12 + OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase);
  if (v26)
  {
    int v27 = __src[8];
    uint64_t v28 = *(void **)(v26 + 64);
    *uint64_t v21 = v28;
    (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
    swift_retain();
    id v29 = v28;
    LOBYTE(v28) = sub_10096B860();
    id result = (id)(*(uint64_t (**)(void *, uint64_t))(v19 + 8))(v21, v18);
    if ((v28 & 1) == 0)
    {
      __break(1u);
      goto LABEL_39;
    }
    uint64_t v31 = v144;
    uint64_t v32 = sub_1007CCDF0((long long *)__src, v27 != 255, 0);
    uint64_t v33 = v31;
    if (v31)
    {
      swift_errorRelease();
      swift_release();
      uint64_t v34 = 0;
      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v34 = sub_1007CFA90(v32);
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v33 = v144;
  }
  swift_beginAccess();
  unint64_t v35 = *v23;
  if (v35)
  {
    unint64_t v36 = v35;
    unint64_t v153 = v35;
    if (v34)
    {
LABEL_9:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_100468F6C(v34, v36);
      uint64_t v144 = v33;
      swift_bridgeObjectRelease();
      unint64_t v153 = v37;
      unint64_t v36 = v37;
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v36 = sub_100095B7C((uint64_t)_swiftEmptyArrayStorage);
    unint64_t v153 = v36;
    if (v34) {
      goto LABEL_9;
    }
  }
  uint64_t v144 = v33;
  swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v38 = (void *)sub_10096ABE0();
  uint64_t v39 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v41 = v40;
  id result = [v38 domain];
  if (!result)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v42 = (uint64_t)result;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v154[0] = v36;
  unint64_t v153 = 0x8000000000000000;
  sub_10038C2F0(v42, v39, v41, isUniquelyReferenced_nonNull_native);
  unint64_t v153 = v154[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v46 = v45;
  int v141 = v38;
  id v54 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(v38, "code"));
  unint64_t v47 = v153;
  char v48 = swift_isUniquelyReferenced_nonNull_native();
  v154[0] = v47;
  unint64_t v153 = 0x8000000000000000;
  sub_10038C2F0((uint64_t)v54, v44, v46, v48);
  unint64_t v153 = v154[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v152, v155, 0x1F0uLL);
  v49._int countAndFlagsBits = (uint64_t)v152;
  Filename.init(rawValue:)(v49);
  sub_10001AE98((uint64_t)v152, (uint64_t)v154, &qword_100ACD980);
  sub_1004A2118((uint64_t)v154, v138, v142, v143, v139, (uint64_t)v146);
  uint64_t v51 = v146[0];
  uint64_t v50 = v146[1];
  uint64_t v53 = v146[2];
  uint64_t v52 = v146[3];
  LODWORD(v54) = v147;
  unsigned __int8 v55 = v148;
  LODWORD(v139) = v149;
  uint64_t v138 = v150;
  uint64_t v140 = v151;
  if (!v151) {
    goto LABEL_18;
  }
  int v129 = v148;
  v146[0] = v151;
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  sub_100011348(0, (unint64_t *)&qword_100ACECC0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    unsigned __int8 v55 = v129;
LABEL_18:
    sub_10002B7CC(&qword_100AD63A0);
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_100973BB0;
    *(void *)(v68 + 32) = v51;
    *(void *)(v68 + 40) = v50;
    *(void *)(v68 + 48) = v53;
    *(void *)(v68 + 56) = v52;
    *(unsigned char *)(v68 + 64) = (_BYTE)v54;
    *(unsigned char *)(v68 + 65) = v55;
    *(unsigned char *)(v68 + 66) = v139;
    *(void *)(v68 + 72) = v138;
    unint64_t v69 = sub_10009602C(v68);
    sub_10096A820();
    swift_allocObject();
    uint64_t v70 = sub_10096A810();
    v146[0] = v69;
    sub_10002B7CC(&qword_100AD63A8);
    sub_1004A7290(&qword_100AD63B0, &qword_100AD63A8, (void (*)(void))sub_1004A5A54);
    uint64_t v71 = v144;
    uint64_t v72 = sub_10096A800();
    uint64_t v139 = v70;
    if (v71)
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      uint64_t v144 = 0;
      Class v74 = v141;
      char v75 = v137;
    }
    else
    {
      uint64_t v76 = v72;
      unint64_t v77 = v73;
      uint64_t v144 = 0;
      swift_bridgeObjectRelease();
      sub_10096BC90();
      sub_10096BC50();
      Class v74 = v141;
      char v75 = v137;
      if (v78)
      {
        uint64_t v79 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v81 = v80;
        NSString v82 = sub_10096BC00();
        swift_bridgeObjectRelease();
        unint64_t v83 = v153;
        char v84 = swift_isUniquelyReferenced_nonNull_native();
        v146[0] = v83;
        unint64_t v153 = 0x8000000000000000;
        sub_10038C2F0((uint64_t)v82, v79, v81, v84);
        unint64_t v153 = v146[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_10001E9C0(v76, v77);
    }
    if (v142 == 252)
    {
      uint64_t v85 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v87 = v86;
      id v88 = [objc_allocWithZone((Class)NSNumber) initWithBool:1];
      unint64_t v89 = v153;
      char v90 = swift_isUniquelyReferenced_nonNull_native();
      v146[0] = v89;
      unint64_t v153 = 0x8000000000000000;
      sub_10038C2F0((uint64_t)v88, v85, v87, v90);
      unint64_t v153 = v146[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if ((v75 & 1) == 0)
    {
      uint64_t v91 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v93 = v92;
      id v94 = objc_allocWithZone((Class)NSNumber);
      id v95 = [v94 initWithInteger:v131];
      unint64_t v96 = v153;
      char v97 = swift_isUniquelyReferenced_nonNull_native();
      v146[0] = v96;
      unint64_t v153 = 0x8000000000000000;
      sub_10038C2F0((uint64_t)v95, v91, v93, v97);
      unint64_t v153 = v146[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    char v98 = v143;
    if (v143 == 70)
    {
      int v99 = a11;
      if (a10) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v100 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v102 = v101;
      id v103 = [objc_allocWithZone((Class)NSNumber) initWithInteger:qword_100984688[v98]];
      unint64_t v104 = v153;
      char v105 = swift_isUniquelyReferenced_nonNull_native();
      v146[0] = v104;
      unint64_t v153 = 0x8000000000000000;
      sub_10038C2F0((uint64_t)v103, v100, v102, v105);
      unint64_t v153 = v146[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v99 = a11;
      if (a10)
      {
LABEL_29:
        if (v99 == 2)
        {
LABEL_30:

LABEL_37:
          swift_errorRelease();

          swift_release();
          unint64_t v125 = v153;
          swift_release();
          return (id)v125;
        }
LABEL_36:
        uint64_t v118 = v99 & 1;
        uint64_t v119 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v121 = v120;
        id v122 = [objc_allocWithZone((Class)NSNumber) initWithBool:v118];
        unint64_t v123 = v153;
        char v124 = swift_isUniquelyReferenced_nonNull_native();
        v146[0] = v123;
        unint64_t v153 = 0x8000000000000000;
        sub_10038C2F0((uint64_t)v122, v119, v121, v124);
        unint64_t v153 = v146[0];

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
    }
    LODWORD(v143) = v99;
    uint64_t v106 = (uint64_t)v132;
    sub_10096B070();
    sub_10096B080();
    double v108 = v107;
    uint64_t v109 = v134;
    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
    v110(v106, v134);
    id v111 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v108];
    uint64_t v142 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v113 = v112;
    sub_10096B0B0();
    Class v114 = sub_100637FE0(v106, 12, 8);
    v110(v106, v109);
    if (v114)
    {
      unint64_t v115 = v153;
      char v116 = swift_isUniquelyReferenced_nonNull_native();
      v146[0] = v115;
      unint64_t v153 = 0x8000000000000000;
      sub_10038C2F0((uint64_t)v114, v142, v113, v116);
      unint64_t v153 = v146[0];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v117 = (void *)sub_1009172A4(v142, v113);

      swift_bridgeObjectRelease();
    }
    Class v74 = v141;
    LOBYTE(v99) = v143;
    if (v143 == 2) {
      goto LABEL_30;
    }
    goto LABEL_36;
  }
  int v127 = (int)v54;
  uint64_t v128 = v52;
  uint64_t v56 = v145;
  uint64_t v57 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v59 = v58;
  id result = [v56 domain];
  if (result)
  {
    uint64_t v60 = (uint64_t)result;
    unint64_t v61 = v153;
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    v146[0] = v61;
    unint64_t v153 = 0x8000000000000000;
    sub_10038C2F0(v60, v57, v59, v62);
    unint64_t v153 = v146[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v54 = v64;
    id v65 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(v56, "code"));
    unint64_t v66 = v153;
    char v67 = swift_isUniquelyReferenced_nonNull_native();
    v146[0] = v66;
    unint64_t v153 = 0x8000000000000000;
    sub_10038C2F0((uint64_t)v65, v63, (uint64_t)v54, v67);
    unint64_t v153 = v146[0];

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v128;
    LOBYTE(v54) = v127;
    goto LABEL_17;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_100468F00(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(void *)(a2 + 16) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a3);
}

uint64_t sub_100468F6C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_100325B54(a1, (uint64_t)sub_10049D038, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100468FF8(void *a1, uint64_t a2)
{
  id v4 = [a1 code];
  if (v4 == (id)257)
  {
    sub_10001AE98(a2, (uint64_t)&v19, &qword_100ACD980);
    if (sub_1000D3324((uint64_t)&v19) != 1 && v20 != 255)
    {
      uint64_t v8 = sub_1004691C8(a1, v19, v20, 1u);
      if (v9 != -1)
      {
        uint64_t v10 = v8;
        char v7 = v9;
        sub_1004A485C();
        uint64_t v6 = swift_allocError();
        *(void *)uint64_t v5 = v10;
        goto LABEL_22;
      }
    }
    return 0;
  }
  if (v4 != (id)255) {
    return 0;
  }
  sub_10001AE98(a2, (uint64_t)&v19, &qword_100ACD980);
  if (sub_1000D3324((uint64_t)&v19) == 1)
  {
    sub_1004A485C();
    uint64_t v6 = swift_allocError();
    *(void *)uint64_t v5 = 6;
    char v7 = 11;
LABEL_22:
    *(unsigned char *)(v5 + 8) = v7;
    return v6;
  }
  uint64_t v11 = 2;
  uint64_t v12 = 4;
  if (!v23) {
    uint64_t v12 = 5;
  }
  if (!v21) {
    uint64_t v11 = v12;
  }
  if ((v23 & 8) != 0) {
    uint64_t v13 = 3;
  }
  else {
    uint64_t v13 = v11;
  }
  if ((v21 & 8) != 0) {
    uint64_t v14 = 1;
  }
  else {
    uint64_t v14 = v13;
  }
  uint64_t v15 = v22 & 0xC;
  sub_1004A485C();
  uint64_t v6 = swift_allocError();
  *(void *)uint64_t v16 = v14;
  *(unsigned char *)(v16 + 8) = 11;
  if (v15)
  {
    uint64_t v17 = swift_allocError();
    *(void *)uint64_t v5 = v6;
    char v7 = 9;
    uint64_t v6 = v17;
    goto LABEL_22;
  }
  return v6;
}

uint64_t sub_1004691C8(void *a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  id v68 = a1;
  int v8 = ~a3;
  uint64_t v9 = sub_10096AA50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10096AE50();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v8) {
    return 0;
  }
  uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker);
  if (!v18) {
    return 0;
  }
  uint64_t v64 = v10;
  uint64_t v65 = v15;
  uint64_t v66 = v14;
  uint64_t v67 = v4;
  swift_retain();
  NSString v19 = sub_10015A5DC();
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  NSString v20 = sub_10096BC00();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v21 = *(void *)(v18 + 24);
  if (!*(void *)(v21 + 16)) {
    goto LABEL_31;
  }
  NSString v20 = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_10031F918(v20);
  if ((v23 & 1) == 0)
  {
    swift_release();

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v24 = *(void **)(*(void *)(v21 + 56) + 8 * v22);
  swift_retain();

  swift_bridgeObjectRelease();
  if (a3)
  {
    if (a3 != 1)
    {
      uint64_t v25 = (void *)swift_retain();
      int v26 = objc_sync_enter(v25);
      if (a2)
      {
        if (v26) {
          goto LABEL_68;
        }
        uint64_t v27 = v24[20];
        swift_retain();
        if (objc_sync_exit(v24)) {
          goto LABEL_69;
        }
        swift_release();
        char v28 = *(unsigned char *)(v27 + 48);
        swift_release();
        if (v28) {
          goto LABEL_30;
        }
      }
      else
      {
        if (v26) {
          goto LABEL_68;
        }
        swift_retain();
        if (objc_sync_exit(v24)) {
          goto LABEL_69;
        }
        swift_release();
        swift_release();
      }
    }
    a4 = 0;
  }
  else
  {
    uint64_t v30 = (void *)swift_retain();
    if (objc_sync_enter(v30)) {
      goto LABEL_68;
    }
    swift_retain();
    if (objc_sync_exit(v24)) {
      goto LABEL_69;
    }
    swift_release();
    swift_release();
    uint64_t v29 = GSLibraryResolveDocumentId2();
    if (!v29)
    {
      swift_release();
      swift_release();

      return v29;
    }
  }
  uint64_t v72 = 0;
  uint64_t v31 = (void *)swift_retain();
  if (objc_sync_enter(v31)) {
LABEL_68:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v24);
  swift_retain();
  if (objc_sync_exit(v24)) {
LABEL_69:
  }
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v24);
  swift_release();
  swift_release();
  int v32 = fpfs_fsgetpath();
  uint64_t v33 = v72;
  if (v32 < 0 || !v72)
  {
    free(v72);
LABEL_30:
    swift_release();
LABEL_31:
    swift_release();

    return 0;
  }
  NSString v63 = v20;
  id v34 = [self defaultManager];
  id v35 = [v34 stringWithFileSystemRepresentation:v33 length:strlen(v33)];

  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096ACC0();
  swift_bridgeObjectRelease();
  if (!fpfs_lp_faccessat())
  {
    int v37 = fpfs_lp_faccessat();
    if (v37) {
      uint64_t v29 = 8;
    }
    else {
      uint64_t v29 = 9;
    }
    if (((v37 == 0) & a4) != 1) {
      goto LABEL_41;
    }
    id v38 = [v68 userInfo];
    uint64_t v39 = sub_10096B9C0();

    uint64_t v40 = v63;
    if (*(void *)(v39 + 16) && (unint64_t v41 = sub_10000DDD0(0xD000000000000013, 0x800000010099AFB0), (v42 & 1) != 0))
    {
      sub_1001FAC78(*(void *)(v39 + 56) + 32 * v41, (uint64_t)&v69);
    }
    else
    {
      long long v69 = 0u;
      long long v70 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v70 + 1))
    {
      type metadata accessor for URLFileProtection(0);
      if (swift_dynamicCast())
      {
        id v47 = v71;
        if (v71) {
          goto LABEL_54;
        }
        goto LABEL_53;
      }
    }
    else
    {
      sub_10002B770((uint64_t)&v69, (uint64_t *)&unk_100ACE0F0);
    }
    id v71 = 0;
LABEL_53:
    sub_10002B7CC(&qword_100ACF740);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100973BB0;
    *(void *)(inited + 32) = NSURLFileProtectionKey;
    Swift::String v49 = NSURLFileProtectionKey;
    sub_1000087CC(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy();
    sub_10096ACB0();
    swift_bridgeObjectRelease();
    uint64_t v50 = (void *)sub_10096A9C0();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v12, v9);
    id v51 = v71;
    id v71 = v50;

    id v47 = v71;
    if (!v71)
    {
      uint64_t v29 = 9;
      goto LABEL_67;
    }
LABEL_54:
    uint64_t v52 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v54 = v53;
    if (v52 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v54 == v55)
    {
      id v56 = v47;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v57 = sub_10096D2D0();
      id v58 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v57 & 1) == 0)
      {
        uint64_t v59 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v61 = v60;
        if (v59 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v61 == v62)
        {
          uint64_t v29 = 12;
        }
        else if (sub_10096D2D0())
        {
          uint64_t v29 = 12;
        }
        else
        {
          uint64_t v29 = 9;
        }
        uint64_t v40 = v63;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      }
    }

    uint64_t v29 = 11;
    uint64_t v40 = v63;
LABEL_67:

    goto LABEL_42;
  }
  uint64_t v29 = 10;
LABEL_41:
  uint64_t v40 = v63;
LABEL_42:
  if (*(void *)(*(void *)(v67 + OBJC_IVAR____TtC9libfssync4FPCK_rootURLs) + 16)
    && (uint64_t v43 = swift_bridgeObjectRetain(), v44 = sub_100846178(v43), swift_bridgeObjectRelease(), (v44 & 1) == 0))
  {
    sub_1004A485C();
    uint64_t v45 = swift_allocError();
    *(void *)uint64_t v46 = v29;
    *(unsigned char *)(v46 + 8) = 11;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v17, v66);
    free(v72);
    swift_release();
    swift_release();

    return v45;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v17, v66);
    free(v72);
    swift_release();
    swift_release();
  }
  return v29;
}

uint64_t sub_100469AAC(uint64_t a1, char a2)
{
  uint64_t v78 = a1;
  int v4 = ~a2;
  uint64_t v5 = sub_10096B480();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v72 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v72 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v72 - v17;
  __chkstk_darwin(v16);
  NSString v20 = (char *)&v72 - v19;
  if (!v4)
  {
    id v31 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    int v32 = sub_10096B470();
    os_log_type_t v33 = sub_10096C5B0();
    if (os_log_type_enabled(v32, v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      *(_DWORD *)id v34 = 136315138;
      uint64_t v90 = sub_100719D44(0xD000000000000014, 0x80000001009A3BA0, &v80);
      sub_10096C8C0();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s: nil item ID", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    goto LABEL_14;
  }
  uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker);
  if (!v21)
  {
    id v35 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    unint64_t v36 = sub_10096B470();
    uint64_t v37 = sub_10096C5B0();
    if (os_log_type_enabled(v36, (os_log_type_t)v37))
    {
      id v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      *(_DWORD *)id v38 = 136315138;
      uint64_t v90 = sub_100719D44(0xD000000000000014, 0x80000001009A3BA0, &v80);
      sub_10096C8C0();
      _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v37, "%s: nil fsSnapshotChecker", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
LABEL_14:
    sub_1004A485C();
    uint64_t v39 = swift_allocError();
    *(void *)uint64_t v40 = 13;
    *(unsigned char *)(v40 + 8) = 11;
    return v39;
  }
  uint64_t v77 = v5;
  swift_retain();
  NSString v22 = sub_10015A5DC();
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  NSString v23 = sub_10096BC00();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v24 = *(void *)(v21 + 24);
  if (*(void *)(v24 + 16))
  {
    id v25 = v23;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_10031F918(v25);
    if (v27)
    {
      char v28 = *(void **)(*(void *)(v24 + 56) + 8 * v26);
      swift_retain();

      swift_bridgeObjectRelease();
      id v76 = v25;
      if (a2)
      {
        if (a2 == 1)
        {
          int v29 = 0;
          uint64_t v30 = v78;
          goto LABEL_31;
        }
        uint64_t v46 = (void *)swift_retain();
        int v47 = objc_sync_enter(v46);
        if (v78)
        {
          if (v47) {
            goto LABEL_45;
          }
          uint64_t v48 = v28[20];
          swift_retain();
          if (objc_sync_exit(v28)) {
            goto LABEL_46;
          }
          swift_release();
          uint64_t v30 = *(void *)(v48 + 40);
          char v49 = *(unsigned char *)(v48 + 48);
          swift_release();
          if (v49)
          {
            id v50 = (id)fpfs_current_or_default_log();
            sub_10096B490();
            id v51 = sub_10096B470();
            os_log_type_t v52 = sub_10096C5B0();
            if (os_log_type_enabled(v51, v52))
            {
              uint64_t v53 = (uint8_t *)swift_slowAlloc();
              uint64_t v80 = swift_slowAlloc();
              *(_DWORD *)uint64_t v53 = 136315138;
              uint64_t v79 = sub_100719D44(0xD000000000000014, 0x80000001009A3BA0, &v80);
              id v25 = v76;
              sub_10096C8C0();
              _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s: failed to retrieve error for trash, it's inode is unexpectedly nil", v53, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }

            (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v77);
            sub_1004A485C();
            uint64_t v39 = swift_allocError();
            *(void *)uint64_t v54 = 13;
            *(unsigned char *)(v54 + 8) = 11;
            swift_release();
            swift_release();

            return v39;
          }
        }
        else
        {
          if (v47) {
            goto LABEL_45;
          }
          uint64_t v55 = v28[20];
          swift_retain();
          if (objc_sync_exit(v28)) {
            goto LABEL_46;
          }
          swift_release();
          uint64_t v30 = *(void *)(v55 + 24);
          swift_release();
        }
        int v29 = 0;
      }
      else
      {
        uint64_t v30 = 0;
        int v29 = v78;
      }
LABEL_31:
      id v56 = (void *)swift_retain();
      if (!objc_sync_enter(v56))
      {
        swift_retain();
        if (!objc_sync_exit(v28))
        {
          char v75 = v28;
          swift_release();
          swift_release();
          uint64_t v80 = v30;
          uint64_t v81 = 0;
          *(_DWORD *)NSString v82 = v29;
          *(void *)unint64_t v83 = 0;
          *(void *)&v82[4] = 0;
          *(_DWORD *)&v83[8] = 0;
          uint64_t v57 = fpfs_openfdbyhandle();
          if ((v57 & 0x80000000) != 0)
          {
            int v59 = sub_10096B4D0();
            sub_1005970E0(v59, 0, 0, 0xAu);
            swift_willThrow();
            swift_errorRetain();
            LODWORD(v80) = sub_10096A6F0();
            sub_100045CB4();
            sub_10096AA60();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            id v60 = (id)fpfs_current_or_default_log();
            sub_10096B490();
            swift_errorRetain();
            swift_errorRetain();
            uint64_t v61 = sub_10096B470();
            os_log_type_t v62 = sub_10096C5B0();
            if (os_log_type_enabled(v61, v62))
            {
              uint64_t v63 = swift_slowAlloc();
              unint64_t v73 = (void *)swift_slowAlloc();
              uint64_t v74 = swift_slowAlloc();
              uint64_t v80 = v74;
              *(_DWORD *)uint64_t v63 = 136315650;
              uint64_t v79 = sub_100719D44(0xD000000000000014, 0x80000001009A3BA0, &v80);
              sub_10096C8C0();
              *(_WORD *)(v63 + 12) = 2080;
              uint64_t v64 = VFSItemID.parseableString.getter(v78, a2);
              uint64_t v79 = sub_100719D44(v64, v65, &v80);
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              *(_WORD *)(v63 + 22) = 2112;
              swift_errorRetain();
              uint64_t v66 = _swift_stdlib_bridgeErrorToNSError();
              uint64_t v79 = v66;
              sub_10096C8C0();
              *unint64_t v73 = v66;
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, v61, v62, "%s: failed to open %s: %@", (uint8_t *)v63, 0x20u);
              sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              swift_errorRelease();
              swift_errorRelease();
            }

            (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v77);
            uint64_t v67 = v76;
            sub_1004A485C();
            uint64_t v39 = swift_allocError();
            *(void *)uint64_t v68 = 13;
            *(unsigned char *)(v68 + 8) = 11;
            swift_release();
            swift_release();

            swift_errorRelease();
          }
          else
          {
            uint64_t v58 = v57;
            uint64_t v81 = 0;
            memset(v82, 0, sizeof(v82));
            uint64_t v80 = 0;
            *(_OWORD *)&v83[4] = 0u;
            long long v84 = 0u;
            long long v85 = 0u;
            long long v86 = 0u;
            long long v87 = 0u;
            long long v88 = 0u;
            long long v89 = 0u;
            *((_DWORD *)&v72 - 4) = __chkstk_darwin(v57);
            *(&v72 - 1) = (uint64_t)&v80;
            sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10035A1A4);
            long long v69 = v76;
            if ((BYTE4(v88) & 0x20) == 0 || (DWORD1(v88) & 0x40000000) != 0)
            {
              sub_100595FB8(v58);

              uint64_t v39 = 0;
            }
            else
            {
              sub_1004A485C();
              uint64_t v39 = swift_allocError();
              *(void *)uint64_t v70 = 14;
              *(unsigned char *)(v70 + 8) = 11;
              sub_100595FB8(v58);
            }
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
          }
          return v39;
        }
LABEL_46:
        sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v28);
      }
LABEL_45:
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v28);
    }

    swift_bridgeObjectRelease();
  }
  id v41 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  char v42 = sub_10096B470();
  os_log_type_t v43 = sub_10096C5B0();
  if (os_log_type_enabled(v42, v43))
  {
    char v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    *(_DWORD *)char v44 = 136315138;
    uint64_t v79 = sub_100719D44(0xD000000000000014, 0x80000001009A3BA0, &v80);
    sub_10096C8C0();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "%s: nil fsTree", v44, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v77);
  sub_1004A485C();
  uint64_t v39 = swift_allocError();
  *(void *)uint64_t v45 = 13;
  *(unsigned char *)(v45 + 8) = 11;
  swift_release();

  return v39;
}

uint64_t sub_10046A848(void *a1, uint64_t a2, char a3)
{
  sub_10096A6B0();
  sub_100045CB4();
  if (sub_10096AA60())
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
    char v8 = a3;
    unsigned __int8 v9 = 0;
  }
  else
  {
    sub_10096A6A0();
    if ((sub_10096AA60() & 1) == 0)
    {
      sub_10096A770();
      if (sub_10096AA60()) {
        return sub_100469AAC(a2, a3);
      }
      else {
        return 0;
      }
    }
    uint64_t v6 = a1;
    uint64_t v7 = a2;
    char v8 = a3;
    unsigned __int8 v9 = 1;
  }
  uint64_t v10 = sub_1004691C8(v6, v7, v8, v9);
  char v12 = v11;
  int v13 = v11;
  sub_1004A485C();
  uint64_t result = swift_allocError();
  uint64_t v16 = 7;
  if (v13 == 255)
  {
    char v17 = 11;
  }
  else
  {
    uint64_t v16 = v10;
    char v17 = v12;
  }
  *(void *)uint64_t v15 = v16;
  *(unsigned char *)(v15 + 8) = v17;
  return result;
}

uint64_t sub_10046A998(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v8 = [a1 domain];
  uint64_t v9 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v11 = v10;

  if (_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() == v9 && v12 == v11)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t result = sub_100468FF8(a1, a2);
    if (!result) {
      return result;
    }
    goto LABEL_22;
  }
  char v14 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_15;
  }
  if (_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() == v9 && v15 == v11)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t result = sub_10046A848(a1, a3, a4);
    if (!result) {
      return result;
    }
    goto LABEL_22;
  }
  char v17 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_18;
  }
  if (_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() == v9 && v18 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v20 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_1004A1FA4(a1);
  if (result)
  {
LABEL_22:
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    sub_100011348(0, (unint64_t *)&qword_100ACECC0);
    if (swift_dynamicCast()) {
      return v21;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10046ABA4(uint64_t a1, uint64_t a2, BOOL a3, uint64_t a4, char a5, char a6, char a7)
{
  sub_1004A2118(a1, a4, a5, a6, a7, (uint64_t)v101);
  uint64_t v12 = v101[0];
  uint64_t v11 = v101[1];
  uint64_t v83 = v101[2];
  uint64_t v92 = (void *)v101[3];
  int v96 = v102;
  uint64_t v86 = (char)v103;
  int v93 = v103;
  char v82 = v104;
  id v95 = v105;
  swift_errorRelease();
  int v13 = (void *)(v7 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetErrors);
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v15 = *(void *)(*v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v87 = v12;
  long long v85 = v13;
  if (v15 && (unint64_t v16 = sub_10000DDD0(v12, v11), (v17 & 1) != 0))
  {
    uint64_t v18 = *(void **)(*(void *)(v14 + 56) + 8 * v16);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
  }
  uint64_t v88 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v90 = v18;
  uint64_t v19 = (void *)v18[2];
  char v20 = v95;
  if (!v19)
  {
LABEL_62:
    swift_bridgeObjectRetain();
    uint64_t v26 = (uint64_t)v90;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_63;
    }
    goto LABEL_150;
  }
  unint64_t v9 = 0;
  uint64_t v21 = v18 + 4;
  BOOL v22 = v96 == 2;
  BOOL v23 = v92 == (void *)1 && v96 == 2;
  if (v92) {
    BOOL v22 = 0;
  }
  BOOL v79 = v22;
  BOOL v80 = v23;
  while (2)
  {
    uint64_t v24 = &v21[4 * v9];
    uint64_t v26 = *v24;
    id v25 = (void *)v24[1];
    LODWORD(v10) = *((unsigned __int8 *)v24 + 16);
    char v94 = *((unsigned char *)v24 + 18);
    char v27 = (void *)v24[3];
    switch(*((unsigned char *)v24 + 16))
    {
      case 0xFA:
        if (v96 == 250) {
          goto LABEL_32;
        }
        goto LABEL_13;
      case 0xFB:
        if (v96 == 251) {
          goto LABEL_32;
        }
        goto LABEL_13;
      case 0xFC:
        if (v96 == 252) {
          goto LABEL_32;
        }
        goto LABEL_13;
      case 0xFD:
        if (v96 == 253) {
          goto LABEL_32;
        }
        goto LABEL_13;
      case 0xFE:
        if (v96 == 254) {
          goto LABEL_32;
        }
        goto LABEL_13;
      default:
        if ((v96 + 6) < 5u) {
          goto LABEL_13;
        }
        if (v10 == 255)
        {
          if (v96 != 255) {
            goto LABEL_13;
          }
        }
        else
        {
          if (v96 == 255) {
            goto LABEL_13;
          }
          if (*((unsigned char *)v24 + 16))
          {
            if (v10 == 1)
            {
              if (v96 != 1 || v25 != v92) {
                goto LABEL_13;
              }
            }
            else if (v25)
            {
              if (!v80) {
                goto LABEL_13;
              }
            }
            else if (!v79)
            {
              goto LABEL_13;
            }
          }
          else if (v96 || v25 != v92)
          {
            goto LABEL_13;
          }
        }
LABEL_32:
        LOBYTE(v8) = *((unsigned char *)v24 + 17);
        if (v8 == 70)
        {
          if (v93 != 70) {
            goto LABEL_13;
          }
        }
        else if (v93 == 70 || qword_100984688[*((char *)v24 + 17)] != qword_100984688[v86])
        {
          goto LABEL_13;
        }
        char v28 = (void *)v27[2];
        if (v28 != (void *)v20[2]) {
          goto LABEL_13;
        }
        if (!v28) {
          goto LABEL_67;
        }
        if (v27 != v20)
        {
          BOOL v29 = v27[4] == v20[4] && v27[5] == v20[5];
          if (v29 || (char v30 = sub_10096D2D0(), v20 = v95, (v30 & 1) != 0))
          {
            char v28 = (void *)((char *)v28 - 1);
            if (!v28) {
              goto LABEL_67;
            }
            uint64_t v31 = 0;
            while (1)
            {
              if (v27[v31 + 6] != v20[v31 + 6] || v27[v31 + 7] != v20[v31 + 7])
              {
                char v33 = sub_10096D2D0();
                char v20 = v95;
                if ((v33 & 1) == 0) {
                  break;
                }
              }
              v31 += 2;
              char v28 = (void *)((char *)v28 - 1);
              if (!v28) {
                goto LABEL_67;
              }
            }
          }
LABEL_13:
          if ((void *)++v9 == v19) {
            goto LABEL_62;
          }
          continue;
        }
        char v27 = v20;
LABEL_67:
        uint64_t v42 = v26 + 1;
        BOOL v43 = __OFADD__(v26, 1);
        swift_bridgeObjectRetain();
        if (v43) {
          goto LABEL_152;
        }
        swift_bridgeObjectRetain();
        char v28 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_153;
        }
LABEL_72:
        if (v9 >= v28[2])
        {
          __break(1u);
          goto LABEL_155;
        }
        char v44 = &v28[4 * v9];
        unint64_t v9 = v44[7];
        v44[4] = v42;
        v44[5] = v25;
        *((unsigned char *)v44 + 48) = v10;
        *((unsigned char *)v44 + 49) = v8;
        *((unsigned char *)v44 + 50) = v94;
        v44[7] = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v35 = v88;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v100 = (void *)*v85;
        void *v85 = 0x8000000000000000;
        uint64_t v46 = (uint64_t)v28;
        uint64_t v36 = v87;
        sub_10038C6BC(v46, v87, v88, isUniquelyReferenced_nonNull_native);
        void *v85 = v100;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v34 = v89;
        while (1)
        {
          int v47 = (void *)(v34 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize);
          swift_beginAccess();
          if (!__OFADD__(*v47, 1)) {
            break;
          }
          __break(1u);
LABEL_150:
          uint64_t v26 = (uint64_t)sub_1006A4300(0, *(void *)(v26 + 16) + 1, 1, (void *)v26);
LABEL_63:
          uint64_t v35 = v88;
          uint64_t v34 = v89;
          uint64_t v36 = v87;
          unint64_t v38 = *(void *)(v26 + 16);
          unint64_t v37 = *(void *)(v26 + 24);
          uint64_t v39 = v95;
          if (v38 >= v37 >> 1)
          {
            uint64_t v77 = sub_1006A4300((void *)(v37 > 1), v38 + 1, 1, (void *)v26);
            uint64_t v39 = v95;
            uint64_t v26 = (uint64_t)v77;
          }
          *(void *)(v26 + 16) = v38 + 1;
          uint64_t v40 = v26 + 32 * v38;
          *(void *)(v40 + 32) = v83;
          *(void *)(v40 + 40) = v92;
          *(unsigned char *)(v40 + 48) = v96;
          *(unsigned char *)(v40 + 49) = v93;
          *(unsigned char *)(v40 + 50) = v82;
          *(void *)(v40 + 56) = v39;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          char v41 = swift_isUniquelyReferenced_nonNull_native();
          int v99 = (void *)*v85;
          void *v85 = 0x8000000000000000;
          sub_10038C6BC(v26, v87, v88, v41);
          void *v85 = v99;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
        }
        ++*v47;
        if (a3)
        {
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        char v49 = (void *)(v34 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetErrors);
        swift_beginAccess();
        uint64_t v50 = *v49;
        uint64_t v51 = *(void *)(*v49 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v85 = v49;
        if (v51 && (unint64_t v52 = sub_10000DDD0(v36, v35), (v53 & 1) != 0))
        {
          uint64_t v54 = *(void **)(*(void *)(v50 + 56) + 8 * v52);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v54 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v91 = v54;
        uint64_t v55 = v54[2];
        id v56 = v95;
        if (!v55)
        {
LABEL_138:
          uint64_t v26 = (uint64_t)v91;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
LABEL_139:
            uint64_t v42 = v89;
            char v28 = (void *)v87;
            unint64_t v71 = *(void *)(v26 + 16);
            unint64_t v70 = *(void *)(v26 + 24);
            uint64_t v72 = v95;
            if (v71 >= v70 >> 1)
            {
              uint64_t v78 = sub_1006A4300((void *)(v70 > 1), v71 + 1, 1, (void *)v26);
              uint64_t v72 = v95;
              uint64_t v26 = (uint64_t)v78;
            }
            *(void *)(v26 + 16) = v71 + 1;
            uint64_t v73 = v26 + 32 * v71;
            *(void *)(v73 + 32) = v83;
            *(void *)(v73 + 40) = v92;
            *(unsigned char *)(v73 + 48) = v96;
            *(unsigned char *)(v73 + 49) = v93;
            *(unsigned char *)(v73 + 50) = v82;
            *(void *)(v73 + 56) = v72;
            swift_beginAccess();
            char v74 = swift_isUniquelyReferenced_nonNull_native();
            char v97 = (void *)*v85;
            void *v85 = 0x8000000000000000;
            sub_10038C6BC(v26, v87, v88, v74);
            char v27 = (void *)*v85;
            void *v85 = v97;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            goto LABEL_147;
          }
LABEL_155:
          uint64_t v26 = (uint64_t)sub_1006A4300(0, *(void *)(v26 + 16) + 1, 1, (void *)v26);
          goto LABEL_139;
        }
        unint64_t v8 = 0;
        uint64_t v57 = v54 + 4;
        BOOL v58 = v96 == 2;
        BOOL v59 = v92 == (void *)1 && v96 == 2;
        a3 = v59;
        if (v92) {
          BOOL v58 = 0;
        }
        BOOL v81 = v58;
        while (2)
        {
          id v60 = &v57[4 * v8];
          uint64_t v61 = *v60;
          unint64_t v9 = v60[1];
          int v62 = *((unsigned __int8 *)v60 + 16);
          char v94 = *((unsigned char *)v60 + 18);
          uint64_t v63 = (void *)v60[3];
          switch(*((unsigned char *)v60 + 16))
          {
            case 0xFA:
              if (v96 != 250) {
                goto LABEL_89;
              }
              goto LABEL_108;
            case 0xFB:
              if (v96 == 251) {
                goto LABEL_108;
              }
              goto LABEL_89;
            case 0xFC:
              if (v96 == 252) {
                goto LABEL_108;
              }
              goto LABEL_89;
            case 0xFD:
              if (v96 == 253) {
                goto LABEL_108;
              }
              goto LABEL_89;
            case 0xFE:
              if (v96 == 254) {
                goto LABEL_108;
              }
              goto LABEL_89;
            default:
              if ((v96 + 6) < 5u) {
                goto LABEL_89;
              }
              if (v62 == 255)
              {
                if (v96 != 255) {
                  goto LABEL_89;
                }
              }
              else
              {
                if (v96 == 255) {
                  goto LABEL_89;
                }
                if (*((unsigned char *)v60 + 16))
                {
                  if (v62 == 1)
                  {
                    if (v96 != 1 || (void *)v9 != v92) {
                      goto LABEL_89;
                    }
                  }
                  else if (v9)
                  {
                    if (!a3) {
                      goto LABEL_89;
                    }
                  }
                  else if (!v81)
                  {
                    goto LABEL_89;
                  }
                }
                else if (v96 || v9 != v92)
                {
LABEL_89:
                  if (++v8 == v55) {
                    goto LABEL_138;
                  }
                  continue;
                }
              }
LABEL_108:
              uint64_t v26 = *((unsigned __int8 *)v60 + 17);
              if (v26 == 70)
              {
                if (v93 != 70) {
                  goto LABEL_89;
                }
              }
              else if (v93 == 70 || qword_100984688[*((char *)v60 + 17)] != qword_100984688[v86])
              {
                goto LABEL_89;
              }
              uint64_t v64 = v63[2];
              if (v64 != v56[2]) {
                goto LABEL_89;
              }
              if (!v64) {
                goto LABEL_143;
              }
              if (v63 != v56)
              {
                BOOL v65 = v63[4] == v56[4] && v63[5] == v56[5];
                if (v65 || (char v66 = sub_10096D2D0(), v56 = v95, (v66 & 1) != 0))
                {
                  uint64_t v67 = v64 - 1;
                  if (!v67) {
                    goto LABEL_143;
                  }
                  unint64_t v10 = 0;
                  while (1)
                  {
                    if (v63[v10 / 8 + 6] != v56[v10 / 8 + 6] || v63[v10 / 8 + 7] != v56[v10 / 8 + 7])
                    {
                      char v69 = sub_10096D2D0();
                      id v56 = v95;
                      if ((v69 & 1) == 0) {
                        break;
                      }
                    }
                    v10 += 16;
                    if (!--v67) {
                      goto LABEL_143;
                    }
                  }
                }
                goto LABEL_89;
              }
              uint64_t v63 = v56;
LABEL_143:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (__OFADD__(v61, 1))
              {
                __break(1u);
              }
              else
              {
                swift_bridgeObjectRetain();
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_145;
                }
              }
              uint64_t v91 = sub_100795024(v91);
LABEL_145:
              if (v8 >= v91[2])
              {
                __break(1u);
                JUMPOUT(0x10046B6A4);
              }
              char v75 = &v91[4 * v8];
              char v28 = (void *)v75[7];
              v75[4] = v61 + 1;
              v75[5] = v9;
              *((unsigned char *)v75 + 48) = v62;
              *((unsigned char *)v75 + 49) = v26;
              *((unsigned char *)v75 + 50) = v94;
              v75[7] = v63;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_beginAccess();
              char v76 = swift_isUniquelyReferenced_nonNull_native();
              char v98 = (void *)*v85;
              void *v85 = 0x8000000000000000;
              sub_10038C6BC((uint64_t)v91, v87, v88, v76);
              char v27 = (void *)*v85;
              void *v85 = v98;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_endAccess();
              uint64_t v42 = v89;
LABEL_147:
              id v25 = (void *)(v42 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize);
              uint64_t result = swift_beginAccess();
              if (__OFADD__(*v25, 1))
              {
                __break(1u);
LABEL_152:
                __break(1u);
LABEL_153:
                char v28 = sub_100795024(v28);
                goto LABEL_72;
              }
              ++*v25;
              return result;
          }
        }
    }
  }
}

uint64_t sub_10046B6CC()
{
  uint64_t v1 = sub_10096B480();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  unint64_t v8 = (char *)&v48 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v48 - v10;
  __chkstk_darwin(v9);
  int v13 = (char *)&v48 - v12;
  uint64_t v14 = (uint64_t *)&v0[OBJC_IVAR____TtC9libfssync4FPCK_nilErrorIds];
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (*(void *)(*v14 + 16))
  {
    swift_bridgeObjectRetain();
    id v16 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    char v17 = v0;
    uint64_t v18 = sub_10096B470();
    os_log_type_t v19 = sub_10096C590();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v53 = v2;
    if (v20)
    {
      uint64_t v50 = v11;
      uint64_t v21 = swift_slowAlloc();
      id v52 = (id)v1;
      BOOL v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      char v49 = (uint64_t (*)(char *, id))v15;
      uint64_t v55 = v23;
      *(_DWORD *)BOOL v22 = 136315138;
      uint64_t v51 = v5;
      uint64_t v24 = *(void *)&v17[OBJC_IVAR____TtC9libfssync4FPCK_runID];
      unint64_t v25 = *(void *)&v17[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
      swift_bridgeObjectRetain();
      uint64_t v26 = v24;
      uint64_t v11 = v50;
      uint64_t v54 = sub_100719D44(v26, v25, &v55);
      uint64_t v2 = v53;
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "🧹 FPCK %s: sending TTR, we have nil errors", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v15 = (uint64_t)v49;
      swift_slowDealloc();
      uint64_t v1 = (uint64_t)v52;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v35 = *(void (**)(char *, uint64_t))(v2 + 8);
    v35(v13, v1);
    if (*(void *)&v17[OBJC_IVAR____TtC9libfssync4FPCK_sendDiagnostics])
    {
      uint64_t v50 = *(char **)&v17[OBJC_IVAR____TtC9libfssync4FPCK_sendDiagnostics];
      id v52 = v17;
      sub_10096AAD0();
      swift_allocObject();
      swift_retain();
      sub_10096AAC0();
      sub_10096AAA0();
      uint64_t v55 = v15;
      sub_10002B7CC((uint64_t *)&unk_100AD0CA0);
      sub_100267308();
      uint64_t v44 = sub_10096AAB0();
      unint64_t v46 = v45;
      swift_bridgeObjectRelease();
      uint64_t v47 = (uint64_t)v50;
      ((void (*)(uint64_t, unint64_t))v50)(v44, v46);
      swift_release();
      sub_1000705CC(v47);
      return sub_10001E9C0(v44, v46);
    }
    else
    {
      swift_bridgeObjectRelease();
      id v36 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      unint64_t v37 = v17;
      unint64_t v38 = sub_10096B470();
      os_log_type_t v39 = sub_10096C590();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        char v49 = (uint64_t (*)(char *, id))v35;
        char v41 = (uint8_t *)v40;
        uint64_t v55 = swift_slowAlloc();
        uint64_t v50 = v11;
        *(_DWORD *)char v41 = 136315138;
        id v52 = (id)v1;
        uint64_t v42 = *(void *)&v37[OBJC_IVAR____TtC9libfssync4FPCK_runID];
        unint64_t v43 = *(void *)&v37[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_100719D44(v42, v43, &v55);
        sub_10096C8C0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "🧹 FPCK %s: cannot send TTR, the sender is nil", v41, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return v49(v50, v52);
      }
      else
      {

        return ((uint64_t (*)(char *, uint64_t))v35)(v11, v1);
      }
    }
  }
  else
  {
    id v27 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    char v28 = v0;
    BOOL v29 = sub_10096B470();
    os_log_type_t v30 = sub_10096C5A0();
    if (os_log_type_enabled(v29, v30))
    {
      id v52 = (id)v1;
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v53 = v2;
      uint64_t v32 = *(void *)&v28[OBJC_IVAR____TtC9libfssync4FPCK_runID];
      unint64_t v33 = *(void *)&v28[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_100719D44(v32, v33, &v55);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "🧹 FPCK %s: skipping TTR, no nil errors", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, id))(v53 + 8))(v8, v52);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v8, v1);
    }
  }
}

void sub_10046BF18()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker);
  if (v2)
  {
    uint64_t v3 = v0;
    swift_retain();
    NSString v4 = sub_10015A5DC();
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    NSString v5 = sub_10096BC00();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v6 = *(void *)(v2 + 24);
    if (!*(void *)(v6 + 16))
    {
      swift_release();

      return;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_10031F918(v5);
    if ((v8 & 1) == 0)
    {
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    swift_retain();

    swift_bridgeObjectRelease();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v17 = v9;
      uint64_t v18 = v3;
      uint64_t v11 = *(void *)__chkstk_darwin(Strong);
      (*(void (**)(uint64_t, const char *, uint64_t, uint64_t, void (*)()))(v11 + 432))(1, "reconciliationTableCheck()", 26, 2, sub_1004A77C8);
      uint64_t v12 = swift_release();
      if (!v1)
      {
        uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase);
        if (!v13)
        {
          swift_release();
          swift_release();
          return;
        }
        __chkstk_darwin(v12);
        void v16[2] = v3;
        v16[3] = v13;
        uint64_t v17 = v9;
        swift_retain();
        sub_10048DC38(v13, (uint64_t)"reconciliationTableCheck()", 26, 2, 0, (uint64_t)sub_1004A7800, (uint64_t)v16, v15);
        swift_release();
      }
      swift_release();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10046C1B8(void *__src, uint64_t a2)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t result = sub_100463698();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v100 = a2;
  v77[2] = __dst[25];
  v77[3] = __dst[26];
  uint64_t v78 = *(void *)&__dst[27];
  long long v75 = __dst[21];
  long long v76 = __dst[22];
  v77[0] = __dst[23];
  v77[1] = __dst[24];
  v74[0] = __dst[17];
  v74[1] = __dst[18];
  v74[2] = __dst[19];
  v74[3] = __dst[20];
  long long v72 = __dst[15];
  long long v73 = __dst[16];
  uint64_t v5 = *((void *)&__dst[21] + 1);
  unint64_t v6 = *(void *)&__dst[22];
  int v7 = BYTE8(__dst[22]);
  if (!BYTE8(__dst[22]) && (BYTE8(__dst[21]) & 2) != 0)
  {
LABEL_6:
    v65[2] = __dst[12];
    v65[3] = __dst[13];
    long long v66 = __dst[14];
    long long v63 = __dst[8];
    long long v64 = __dst[9];
    v65[0] = __dst[10];
    v65[1] = __dst[11];
    void v62[2] = __dst[4];
    v62[3] = __dst[5];
    v62[4] = __dst[6];
    v62[5] = __dst[7];
    long long v60 = __dst[0];
    long long v61 = __dst[1];
    v62[0] = __dst[2];
    v62[1] = __dst[3];
    sub_10001AE98((uint64_t)&v63 + 9, (uint64_t)&v71, (uint64_t *)&unk_100AD4BE0);
    sub_10001AE98((uint64_t)&v71, (uint64_t)&v90, (uint64_t *)&unk_100AD4BE0);
    unint64_t v10 = v90 == 6 && v75 == 3;
    sub_10001AE98((uint64_t)&v60, (uint64_t)v70, &qword_100AD6398);
    sub_10001AE98((uint64_t)v70, (uint64_t)v93, &qword_100AD6398);
    unint64_t v54 = v6;
    if (v93[8] == 255)
    {
      int v11 = BYTE8(v63);
    }
    else
    {
      sub_10001AE98((uint64_t)&v72, (uint64_t)v82, &qword_100AD6810);
      sub_10001AE98((uint64_t)v82, (uint64_t)&v83, &qword_100AD6810);
      int v11 = BYTE8(v63);
      if (BYTE8(v63)) {
        BOOL v12 = 1;
      }
      else {
        BOOL v12 = v83 == 0;
      }
      if (!v12) {
        v10 |= 2uLL;
      }
    }
    int v13 = LOBYTE(v65[0]);
    int v14 = v75;
    uint64_t v56 = v2;
    if (LOBYTE(v65[0]) == 2)
    {
      if (v7 == 2) {
        goto LABEL_28;
      }
    }
    else if (v7 != 2)
    {
      if (v11 != 1) {
        goto LABEL_29;
      }
      goto LABEL_27;
    }
    if (v11 == 1) {
      goto LABEL_28;
    }
LABEL_27:
    if (v75 == 1) {
LABEL_28:
    }
      v10 |= 4uLL;
LABEL_29:
    long long v15 = v64;
    sub_10035751C((uint64_t)__dst);
    if (qword_100ACC0F0 != -1) {
      swift_once();
    }
    LOBYTE(v16) = BYTE8(v61);
    if ((*((void *)&v61 + 1) & (static Fields.all | 0x10)) != 0) {
      goto LABEL_34;
    }
    if ((v61 & 0x51) != 0) {
      goto LABEL_34;
    }
    if (((unint64_t)v73 & (static Fields.all | 0x10)) != 0) {
      goto LABEL_34;
    }
    if ((BYTE8(v72) & 0x51) != 0) {
      goto LABEL_34;
    }
    if (v11 == 1) {
      goto LABEL_34;
    }
    if (v14 == 1) {
      goto LABEL_34;
    }
    sub_10001AE98((uint64_t)v62, (uint64_t)&v67, (uint64_t *)&unk_100AD6530);
    sub_10001AE98((uint64_t)&v67, (uint64_t)&v98, (uint64_t *)&unk_100AD6530);
    if (v98 != 3) {
      goto LABEL_34;
    }
    sub_10001AE98((uint64_t)&v71, (uint64_t)&v89, (uint64_t *)&unk_100AD4BE0);
    if (v89 != 6 || v13 != 3 && (v13 != 4 || v15 & 0xFFFFFFFFFFFFFFFELL | *((void *)&v15 + 1))) {
      goto LABEL_34;
    }
    if (v7 == 3) {
      goto LABEL_121;
    }
    if (v7 != 4)
    {
LABEL_34:
      sub_1000D3440((uint64_t)__dst);
    }
    else
    {
      sub_1000D3440((uint64_t)__dst);
      if (!(v5 & 0xFFFFFFFFFFFFFFFELL | v54))
      {
        while (1)
        {
          if (*((void *)&__dst[28] + 1) == 0x2000000000000000) {
            unint64_t v19 = v10;
          }
          else {
            unint64_t v19 = v10 | 8;
          }
          sub_10001AE98((uint64_t)v65 + 8, (uint64_t)v69, (uint64_t *)&unk_100ACF710);
          sub_10001AE98((uint64_t)v69, (uint64_t)v94, (uint64_t *)&unk_100ACF710);
          if (v95 >> 60 != 11) {
            v19 |= 0x10uLL;
          }
          sub_10001AE98((uint64_t)v77, (uint64_t)v81, (uint64_t *)&unk_100ACF710);
          sub_10001AE98((uint64_t)v81, (uint64_t)v84, (uint64_t *)&unk_100ACF710);
          if (v85 >> 60 != 11) {
            v19 |= 0x20uLL;
          }
LABEL_48:
          sub_10001AE98((uint64_t)v70, (uint64_t)v91, &qword_100AD6398);
          if (v91[8] != 255)
          {
            sub_1000D3184((uint64_t)v91, (uint64_t)v92);
            sub_10001AE98((uint64_t)&v72, (uint64_t)v80, &qword_100AD6810);
            sub_10001AE98((uint64_t)v80, (uint64_t)&v86, &qword_100AD6810);
            if (v86)
            {
              sub_10001AE98((uint64_t)v62 + 8, (uint64_t)v68, (uint64_t *)&unk_100AD6BC0);
              sub_10001AE98((uint64_t)v68, (uint64_t)v96, (uint64_t *)&unk_100AD6BC0);
              if (!(v97 | v19 & 0x40)) {
                v19 |= 0x40uLL;
              }
              sub_10001AE98((uint64_t)v74, (uint64_t)v79, (uint64_t *)&unk_100AD6520);
              sub_10001AE98((uint64_t)v79, (uint64_t)v87, (uint64_t *)&unk_100AD6520);
              uint64_t v20 = (v19 >> 7) & 1;
              if (v88 != 1) {
                LODWORD(v20) = 1;
              }
              if (!v20) {
                v19 |= 0x80uLL;
              }
              sub_10001AE98((uint64_t)&__dst[27] + 8, (uint64_t)&v59, (uint64_t *)&unk_100AD6840);
              sub_10001AE98((uint64_t)&v59, (uint64_t)v99, (uint64_t *)&unk_100AD6840);
              if (v99[0] == 1)
              {
                uint64_t v21 = (v19 >> 8) & 1;
                if ((v16 & 8) == 0) {
                  LODWORD(v21) = 1;
                }
                if (v21) {
                  unint64_t v22 = v19;
                }
                else {
                  unint64_t v22 = v19 | 0x100;
                }
                uint64_t v23 = (v22 >> 9) & 1;
                if ((v73 & 8) == 0) {
                  LODWORD(v23) = 1;
                }
                if (v23) {
                  unint64_t v19 = v22;
                }
                else {
                  unint64_t v19 = v22 | 0x200;
                }
              }
            }
          }
          unint64_t v24 = (BYTE8(v66) & 0xC) == 8 ? v19 | 0x4000 : v19;
          unint64_t v25 = (*(unsigned char *)(v100 + OBJC_IVAR____TtC9libfssync4FPCK_launchOptions) & 2) != 0
              ? v24 & 0xFFFFFFFFFFFFC3FFLL
              : v24;
          unint64_t v55 = v25;
          uint64_t v26 = 0;
          if (!v25) {
            break;
          }
          id v27 = (void *)(v100 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredReconciliationTableBrokenInvariantsCounters);
          while (1)
          {
            unint64_t v28 = __clz(__rbit64(v25));
            uint64_t v29 = v25 & ~(1 << v28);
            if (((1 << v28) & v25) == 0) {
              uint64_t v29 = v25;
            }
            if (v28 >= 0x40) {
              uint64_t v16 = 0;
            }
            else {
              uint64_t v16 = 1 << v28;
            }
            if (v28 < 0x40) {
              unint64_t v25 = v29;
            }
            swift_beginAccess();
            sub_1000705CC((uint64_t)v26);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v31 = (void *)*v27;
            uint64_t v57 = (void *)*v27;
            *id v27 = 0x8000000000000000;
            unint64_t v33 = sub_1003204B0(v16);
            uint64_t v34 = v31[2];
            BOOL v35 = (v32 & 1) == 0;
            uint64_t v36 = v34 + v35;
            if (__OFADD__(v34, v35)) {
              break;
            }
            unint64_t v10 = v32;
            if (v31[3] >= v36)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_100920130();
                uint64_t v31 = v57;
              }
            }
            else
            {
              sub_10037A49C(v36, isUniquelyReferenced_nonNull_native);
              uint64_t v31 = v57;
              unint64_t v37 = sub_1003204B0(v16);
              if ((v10 & 1) != (v38 & 1)) {
                goto LABEL_132;
              }
              unint64_t v33 = v37;
            }
            *id v27 = v31;
            swift_bridgeObjectRelease();
            os_log_type_t v39 = (void *)*v27;
            if (v10)
            {
              swift_bridgeObjectRetain();
            }
            else
            {
              v39[(v33 >> 6) + 8] |= 1 << v33;
              uint64_t v40 = 8 * v33;
              *(void *)(v39[6] + v40) = v16;
              *(void *)(v39[7] + v40) = 0;
              uint64_t v41 = v39[2];
              uint64_t v42 = v41 + 1;
              LOBYTE(v16) = __OFADD__(v41, 1);
              swift_bridgeObjectRetain();
              if (v16) {
                goto LABEL_120;
              }
              void v39[2] = v42;
            }
            uint64_t v43 = v39[7];
            uint64_t v44 = *(void *)(v43 + 8 * v33);
            BOOL v45 = __OFADD__(v44, 1);
            uint64_t v46 = v44 + 1;
            if (v45) {
              goto LABEL_119;
            }
            *(void *)(v43 + 8 * v33) = v46;
            swift_endAccess();
            swift_bridgeObjectRelease();
            uint64_t v26 = sub_10002E4B4;
            if (!v25) {
              goto LABEL_97;
            }
          }
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          sub_1000D3440((uint64_t)__dst);
        }
LABEL_97:
        if (sub_100758EDC())
        {
          uint64_t v47 = v100;
          sub_10047E8F8(__dst);
          unint64_t v48 = v55;
          if (v56 || !v55) {
            return sub_1000705CC((uint64_t)v26);
          }
        }
        else
        {
          unint64_t v48 = v55;
          uint64_t v47 = v100;
          if (!v55) {
            return sub_1000705CC((uint64_t)v26);
          }
        }
        char v49 = (void *)(v47 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck);
        swift_beginAccess();
        if (!__OFADD__(*v49, 1))
        {
          ++*v49;
          uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v47 + OBJC_IVAR____TtC9libfssync4FPCK_resultHandler);
          sub_10035751C((uint64_t)__dst);
          swift_retain();
          uint64_t v51 = sub_10046CB28();
          uint64_t v53 = v52;
          sub_1000D3440((uint64_t)__dst);
          sub_10096CBD0(19);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v101._int countAndFlagsBits = 0x654C208C9DE2203ALL;
          v101._object = (void *)0xAD0000203A207466;
          sub_10096BDC0(v101);
          v102._int countAndFlagsBits = sub_100609648(v48);
          sub_10096BDC0(v102);
          swift_bridgeObjectRelease();
          v103._int countAndFlagsBits = 2592;
          v103._object = (void *)0xE200000000000000;
          sub_10096BDC0(v103);
          swift_bridgeObjectRelease();
          v50(v51, v53);
          swift_release();
          swift_bridgeObjectRelease();
          return sub_1000705CC((uint64_t)v26);
        }
        goto LABEL_131;
      }
    }
    uint64_t v17 = v10 | 0x400;
    if (v13 != 2) {
      uint64_t v17 = v10;
    }
    if (v7 == 2) {
      v17 |= 0x800uLL;
    }
    if ((v15 & 0x40100) == 0x100 && v13 == 0) {
      unint64_t v19 = v17 | 0x1000;
    }
    else {
      unint64_t v19 = v17;
    }
    if (!v7 && (v5 & 0x40100) == 0x100) {
      v19 |= 0x2000uLL;
    }
    goto LABEL_48;
  }
  char v8 = (void *)(v100 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries);
  swift_beginAccess();
  if (!__OFADD__(*v8, 1))
  {
    ++*v8;
    goto LABEL_6;
  }
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

uint64_t sub_10046CB28()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  if (v1 == 255)
  {
    NSString v4 = (void *)0xE200000000000000;
    uint64_t v2 = 16191;
    uint64_t v5 = *(void **)(v0 + 240);
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = VFSItemID.parseableString.getter(*(void *)v0, v1);
    NSString v4 = v3;
    uint64_t v5 = *(void **)(v0 + 240);
    if (v5)
    {
LABEL_3:
      id v6 = v5;
      uint64_t v7 = NSFileProviderItemIdentifier.description.getter();
      uint64_t v9 = v8;

      goto LABEL_6;
    }
  }
  uint64_t v9 = (void *)0xE200000000000000;
  uint64_t v7 = 16191;
LABEL_6:
  sub_10001AE98(v0 + 440, (uint64_t)&v13, (uint64_t *)&unk_100AD6840);
  sub_10001AE98((uint64_t)&v13, (uint64_t)&v14, (uint64_t *)&unk_100AD6840);
  unint64_t v10 = (void *)0xE000000000000000;
  uint64_t v11 = 0;
  switch(v14)
  {
    case 1:
      unint64_t v10 = (void *)0xE300000000000000;
      uint64_t v11 = 7498084;
      break;
    case 2:
      unint64_t v10 = (void *)0xE700000000000000;
      uint64_t v11 = 0x6B6E696C6D7973;
      break;
    case 3:
      unint64_t v10 = (void *)0xE500000000000000;
      uint64_t v11 = 0x7361696C61;
      break;
    case 4:
      break;
    default:
      unint64_t v10 = (void *)0xE300000000000000;
      uint64_t v11 = 6516580;
      break;
  }
  sub_10096CBD0(21);
  swift_bridgeObjectRelease();
  v15._int countAndFlagsBits = v2;
  v15._object = v4;
  sub_10096BDC0(v15);
  swift_bridgeObjectRelease();
  v16._int countAndFlagsBits = 0x663C203E2D3C203ELL;
  v16._object = (void *)0xEA00000000003A70;
  sub_10096BDC0(v16);
  v17._int countAndFlagsBits = v7;
  v17._object = v9;
  sub_10096BDC0(v17);
  swift_bridgeObjectRelease();
  v18._int countAndFlagsBits = 62;
  v18._object = (void *)0xE100000000000000;
  sub_10096BDC0(v18);
  v19._int countAndFlagsBits = v11;
  v19._object = v10;
  sub_10096BDC0(v19);
  swift_bridgeObjectRelease();
  return 980641340;
}

uint64_t sub_10046CD14(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10046CD60(a2);
  if (!v2) {
    return sub_10046D208(a2);
  }
  return result;
}

uint64_t sub_10046CD60(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = 0;
  uint64_t v30 = *(void *)(a1 + 24);
  uint64_t v26 = *(uint64_t (**)(uint64_t, void))(*(void *)v30 + 432);
  do
  {
    uint64_t result = v26(v3, 0);
    if (v2) {
      break;
    }
    uint64_t v7 = result;
    if (v6) {
      uint64_t v8 = -1;
    }
    else {
      uint64_t v8 = v5;
    }
    if (result < 0 || (result & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_10096CE70();
      swift_bridgeObjectRelease();
      uint64_t v27 = v8;
      if (v9)
      {
LABEL_10:
        uint64_t v10 = 0;
        unint64_t v11 = v7 & 0xC000000000000001;
        uint64_t v31 = v7 + 32;
        uint64_t v28 = v9;
        unint64_t v29 = v7 & 0xC000000000000001;
        do
        {
          if (v11)
          {
            uint64_t result = sub_10096CC30();
            uint64_t v12 = result;
            BOOL v13 = __OFADD__(v10++, 1);
            if (v13) {
              goto LABEL_31;
            }
          }
          else
          {
            uint64_t v12 = *(void *)(v31 + 8 * v10);
            uint64_t result = swift_retain();
            BOOL v13 = __OFADD__(v10++, 1);
            if (v13)
            {
LABEL_31:
              __break(1u);
              return result;
            }
          }
          if (sub_10051EA0C() == 3)
          {
            char v14 = *(void **)(v12 + 144);
            uint64_t v15 = *(unsigned __int8 *)(v12 + 152);
            uint64_t v32 = (uint64_t)v14;
            int v39 = *(unsigned __int8 *)(v12 + 152);
            sub_100555F10(v14, v15, 1, __src);
            sub_10001AE98((uint64_t)__src, (uint64_t)v35, (uint64_t *)&unk_100AD67E0);
            sub_10001AE98((uint64_t)v35, (uint64_t)v36, (uint64_t *)&unk_100AD67E0);
            if (sub_1000D3324((uint64_t)v36) == 1)
            {
              *(void *)&__dst[0] = v32;
              BYTE8(__dst[0]) = v39;
              uint64_t v16 = (*(uint64_t (**)(_OWORD *, uint64_t))(*(void *)v30 + 344))(__dst, 70);
              uint64_t v17 = *(void *)(v16 + 16);
              if (v17)
              {
                Swift::String v18 = (void *)(v16 + 88);
                while (1)
                {
                  Swift::String v19 = (void *)*(v18 - 7);
                  uint64_t v20 = *((unsigned __int8 *)v18 - 48);
                  char v21 = *((unsigned char *)v18 - 47);
                  uint64_t v22 = *v18;
                  int v23 = *((unsigned __int8 *)v18 - 40);
                  sub_10009C394(v19, v20, v21);
                  swift_errorRetain();
                  swift_bridgeObjectRetain();
                  sub_10009C394(v19, v20, v21);
                  swift_errorRetain();
                  swift_bridgeObjectRetain();
                  sub_1000D30C4(v19, v20, v21);
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  if (v23 == 1)
                  {
                    sub_10009C394(v19, v20, v21);
                    swift_errorRetain();
                    swift_bridgeObjectRetain();
                    sub_1000D30C4(v19, v20, v21);
                    swift_errorRelease();
                    swift_bridgeObjectRelease();
                    if (v22) {
                      break;
                    }
                  }
                  v18 += 11;
                  sub_1000D30C4(v19, v20, v21);
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  if (!--v17) {
                    goto LABEL_26;
                  }
                }
                swift_bridgeObjectRelease();
                sub_1000D30C4(v19, v20, v21);
                swift_errorRetain();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_errorRetain();
                uint64_t v24 = v22;
              }
              else
              {
LABEL_26:
                swift_bridgeObjectRelease();
                sub_1004A485C();
                uint64_t v24 = swift_allocError();
                *(void *)uint64_t v25 = 21;
                *(unsigned char *)(v25 + 8) = 11;
              }
              uint64_t v2 = 0;
              uint64_t v9 = v28;
              sub_1003572F8(__dst);
              sub_10001AE98((uint64_t)__dst, (uint64_t)v38, &qword_100ACD980);
              sub_10046ABA4((uint64_t)v38, v24, 1, v32, v39, 3, 0);
              swift_errorRelease();
              swift_errorRelease();
              unint64_t v11 = v29;
            }
            else
            {
              memcpy(__dst, __src, sizeof(__dst));
              sub_1000D3440((uint64_t)__dst);
            }
          }
          swift_release();
        }
        while (v10 != v9);
      }
    }
    else
    {
      uint64_t v9 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v27 = v8;
      if (v9) {
        goto LABEL_10;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v27;
  }
  while ((v27 & 0x8000000000000000) == 0);
  return result;
}

uint64_t sub_10046D208(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = 0;
  uint64_t v41 = *(void *)(a1 + 24);
  int v39 = *(uint64_t (**)(uint64_t, void))(*(void *)v41 + 440);
  do
  {
    uint64_t result = v39(v3, 0);
    if (v2) {
      break;
    }
    uint64_t v7 = result;
    if (v6) {
      uint64_t v8 = -1;
    }
    else {
      uint64_t v8 = v5;
    }
    if (result < 0 || (result & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_10096CE70();
      swift_bridgeObjectRelease();
      uint64_t v40 = v8;
      if (v9)
      {
LABEL_10:
        uint64_t v10 = 0;
        unint64_t v11 = v7 & 0xC000000000000001;
        uint64_t v42 = v7 + 32;
        uint64_t v43 = v9;
        unint64_t v44 = v7 & 0xC000000000000001;
        do
        {
          if (v11)
          {
            uint64_t result = sub_10096CC30();
            uint64_t v12 = result;
            BOOL v13 = __OFADD__(v10++, 1);
            if (v13) {
              goto LABEL_41;
            }
          }
          else
          {
            uint64_t v12 = *(void *)(v42 + 8 * v10);
            uint64_t result = swift_retain();
            BOOL v13 = __OFADD__(v10++, 1);
            if (v13)
            {
LABEL_41:
              __break(1u);
              return result;
            }
          }
          if (sub_10051F448() == 3)
          {
            char v14 = *(void **)(v12 + 144);
            id v45 = v14;
            sub_100555F10(v14, 256, 1, __src);
            sub_10001AE98((uint64_t)__src, (uint64_t)v73, (uint64_t *)&unk_100AD67E0);
            sub_10001AE98((uint64_t)v73, (uint64_t)v74, (uint64_t *)&unk_100AD67E0);
            if (sub_1000D3324((uint64_t)v74) == 1)
            {

              *(void *)&__dst[0] = v45;
              uint64_t v15 = *(uint64_t (**)(_OWORD *, uint64_t))(*(void *)v41 + 336);
              id v16 = v45;
              uint64_t v17 = v15(__dst, 70);

              uint64_t v46 = v17;
              uint64_t v18 = *(void *)(v17 + 16);
              if (v18)
              {
                Swift::String v19 = (void *)(v46 + 88);
                while (1)
                {
                  uint64_t v20 = (void *)*(v19 - 7);
                  uint64_t v21 = *((unsigned __int8 *)v19 - 48);
                  char v22 = *((unsigned char *)v19 - 47);
                  uint64_t v23 = *v19;
                  int v24 = *((unsigned __int8 *)v19 - 40);
                  sub_10014E450(v20, v21, v22);
                  swift_errorRetain();
                  swift_bridgeObjectRetain();
                  sub_10014E450(v20, v21, v22);
                  swift_errorRetain();
                  swift_bridgeObjectRetain();
                  sub_10017E788(v20, v21, v22);
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  if (v24 == 1)
                  {
                    sub_10014E450(v20, v21, v22);
                    swift_errorRetain();
                    swift_bridgeObjectRetain();
                    sub_10017E788(v20, v21, v22);
                    swift_errorRelease();
                    swift_bridgeObjectRelease();
                    if (v23) {
                      break;
                    }
                  }
                  v19 += 11;
                  sub_10017E788(v20, v21, v22);
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  if (!--v18) {
                    goto LABEL_35;
                  }
                }
                swift_bridgeObjectRelease();
                sub_10017E788(v20, v21, v22);
                swift_errorRetain();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_errorRetain();
                uint64_t v25 = v23;
              }
              else
              {
LABEL_35:
                swift_bridgeObjectRelease();
                sub_1004A485C();
                uint64_t v25 = swift_allocError();
                *(void *)uint64_t v38 = 21;
                *(unsigned char *)(v38 + 8) = 11;
              }
              uint64_t v2 = 0;
              uint64_t v9 = v43;
              sub_1003572F8(__dst);
              sub_10001AE98((uint64_t)__dst, (uint64_t)v76, &qword_100ACD980);
              sub_10046ABA4((uint64_t)v76, v25, 1, 0, 251, 3, 1);
              swift_errorRelease();
              swift_errorRelease();
              unint64_t v11 = v44;
            }
            else
            {
              memcpy(__dst, __src, sizeof(__dst));
              uint64_t v26 = *(void *)&__dst[28];
              int64_t v27 = *(void *)(*(void *)&__dst[28] + 16);
              if (v27)
              {
                sub_1000D333C((uint64_t)&__dst[15]);
                sub_10034B658((uint64_t)__dst);
                *(void *)&v48[0] = _swiftEmptyArrayStorage;
                swift_bridgeObjectRetain();
                uint64_t v28 = v26;
                sub_10044614C(0, v27, 0);
                unint64_t v29 = *(void **)&v48[0];
                uint64_t v30 = (unsigned __int8 *)(v28 + 41);
                do
                {
                  uint64_t v31 = *(void **)(v30 - 9);
                  int v32 = *v30;
                  if (v32 == 1)
                  {
                    id v33 = v31;
                    char v34 = 0;
                  }
                  else
                  {
                    char v34 = *(v30 - 1);
                  }
                  *(void *)&v48[0] = v29;
                  unint64_t v36 = v29[2];
                  unint64_t v35 = v29[3];
                  if (v36 >= v35 >> 1)
                  {
                    sub_10044614C(v35 > 1, v36 + 1, 1);
                    unint64_t v29 = *(void **)&v48[0];
                  }
                  v30 += 16;
                  _OWORD v29[2] = v36 + 1;
                  unint64_t v37 = &v29[2 * v36];
                  void v37[4] = v31;
                  *((unsigned char *)v37 + 40) = v34;
                  *((unsigned char *)v37 + 41) = v32 ^ 1;
                  --v27;
                }
                while (v27);
                swift_bridgeObjectRelease();
                sub_1000D3440((uint64_t)__dst);

                uint64_t v9 = v43;
                unint64_t v11 = v44;
              }
              else
              {
                sub_1000D333C((uint64_t)&__dst[15]);
                sub_10034B658((uint64_t)__dst);
                sub_1000D3440((uint64_t)__dst);

                unint64_t v29 = _swiftEmptyArrayStorage;
              }
              v48[10] = __dst[25];
              v48[11] = __dst[26];
              uint64_t v49 = *(void *)&__dst[27];
              v48[6] = __dst[21];
              v48[7] = __dst[22];
              v48[8] = __dst[23];
              v48[9] = __dst[24];
              v48[2] = __dst[17];
              v48[3] = __dst[18];
              v48[4] = __dst[19];
              v48[5] = __dst[20];
              v48[0] = __dst[15];
              v48[1] = __dst[16];
              long long v62 = __dst[12];
              long long v63 = __dst[13];
              long long v64 = __dst[14];
              long long v58 = __dst[8];
              long long v59 = __dst[9];
              long long v60 = __dst[10];
              long long v61 = __dst[11];
              long long v54 = __dst[4];
              long long v55 = __dst[5];
              long long v56 = __dst[6];
              long long v57 = __dst[7];
              long long v50 = __dst[0];
              long long v51 = __dst[1];
              long long v52 = __dst[2];
              long long v53 = __dst[3];
              char v65 = BYTE8(__dst[27]);
              long long v66 = v29;
              uint64_t v67 = *((void *)&__dst[28] + 1);
              uint64_t v68 = *(void *)&__dst[29];
              uint64_t v69 = 0;
              char v70 = __dst[30];
              uint64_t v71 = *((void *)&__dst[30] + 1);
              sub_1000DBF50((uint64_t)v48);
            }
          }
          swift_release();
        }
        while (v10 != v9);
      }
    }
    else
    {
      uint64_t v9 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v40 = v8;
      if (v9) {
        goto LABEL_10;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v40;
  }
  while ((v40 & 0x8000000000000000) == 0);
  return result;
}

uint64_t sub_10046D8BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int a7, uint64_t a8, char a9, char a10)
{
  uint64_t v14 = *(void *)(a1 + 240);
  if (v14) {
    uint64_t v18 = OBJC_IVAR____TtC9libfssync4FPCK_pendingSetItemPayload;
  }
  else {
    uint64_t v18 = OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetItemPayload;
  }
  Swift::String v19 = (uint64_t *)(v10 + v18);
  swift_beginAccess();
  uint64_t v20 = *v19;
  if (!v20
    || (swift_bridgeObjectRetain(),
        BOOL v21 = sub_1004A1608((_OWORD *)a1, (uint64_t)a2, a3, 0, v20),
        uint64_t result = swift_bridgeObjectRelease(),
        v21))
  {
    uint64_t result = (uint64_t)sub_1004682AC((unsigned __int8 *)a1, a2, a4, a5, a3, 0, a6, a7, a8, a9 & 1, v14 == 0);
    uint64_t v23 = result;
    if (result)
    {
      uint64_t v24 = v14;
      if ((a10 & 1) == 0)
      {
LABEL_16:
        if (v24) {
          uint64_t v36 = OBJC_IVAR____TtC9libfssync4FPCK_pendingSetItemPayload;
        }
        else {
          uint64_t v36 = OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetItemPayload;
        }
        unint64_t v37 = (uint64_t *)(v38 + v36);
        swift_beginAccess();
        *unint64_t v37 = v23;
        return swift_bridgeObjectRelease();
      }
      uint64_t v25 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v27 = v26;
      if (*(void *)(v23 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v28 = sub_10000DDD0(v25, v27);
        if (v29)
        {
          id v30 = *(id *)(*(void *)(v23 + 56) + 8 * v28);
          swift_bridgeObjectRelease();
          self;
          uint64_t v31 = (void *)swift_dynamicCastObjCClass();
          if (v31)
          {
            unint64_t v32 = (unint64_t)[v31 integerValue];

            uint64_t v33 = v32 | 0x80000000;
LABEL_15:
            id v34 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v33];
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_10038C2F0((uint64_t)v34, v25, v27, isUniquelyReferenced_nonNull_native);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_16;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v33 = 0x80000000;
      goto LABEL_15;
    }
  }
  return result;
}

void sub_10046DB28(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_10046E3CC(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, id, uint64_t))sub_100472EDC, a5);
}

void sub_10046DB54(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(uint64_t *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, void *a7@<X8>)
{
  void (*v23)(id *__return_ptr, id *);
  id v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(void *__return_ptr, id *, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned char v73[520];
  void v74[65];
  uint64_t v75[65];
  unsigned char v76[504];
  unsigned char v77[504];
  id v78;
  __int16 v79;
  void v80[63];
  id v81;
  unsigned char v82[504];
  id v83;

  uint64_t v67 = a3;
  uint64_t v68 = a4;
  uint64_t v12 = sub_10096B480();
  uint64_t v13 = *(void *)(v12 - 8);
  char v70 = v12;
  uint64_t v71 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  Swift::String v19 = (char *)&v65 - v18;
  __chkstk_darwin(v17);
  BOOL v21 = (char *)&v65 - v20;
  char v22 = *a1;
  if (!*a1)
  {
    uint64_t v26 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    sub_1004A4AF8((uint64_t)a1);
    uint64_t v27 = sub_10096B470();
    unint64_t v28 = sub_10096C5B0();
    if (os_log_type_enabled(v27, v28))
    {
      char v29 = (uint8_t *)swift_slowAlloc();
      v75[0] = swift_slowAlloc();
      uint64_t v69 = a7;
      *(_DWORD *)char v29 = 136315138;
      uint64_t v68 = (uint64_t)(v29 + 4);
      id v30 = sub_100769B78();
      v74[0] = sub_100719D44(v30, v31, v75);
      a7 = v69;
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_1000DBF50((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "no entry.a.id for entry: %s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000DBF50((uint64_t)a1);
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v21, v70);
    sub_1004A5990((uint64_t)v75);
    uint64_t v36 = (uint64_t)a7;
    goto LABEL_20;
  }
  char v65 = a5;
  long long v66 = a6;
  uint64_t v69 = a7;
  uint64_t v83 = v22;
  uint64_t v23 = *(void (**)(id *__return_ptr, id *))(**(void **)(a2 + 32) + 280);
  uint64_t v24 = v22;
  uint64_t v25 = v72;
  v23(&v81, &v83);
  long long v72 = v25;
  if (v25)
  {

    return;
  }
  if (!v81)
  {
    unint64_t v37 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v38 = v24;
    int v39 = sub_10096B470();
    uint64_t v40 = sub_10096C5B0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      v75[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      uint64_t v68 = (uint64_t)(v41 + 4);
      uint64_t v42 = NSFileProviderItemIdentifier.description.getter();
      v74[0] = sub_100719D44(v42, v43, v75);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "no parent ID in snapshot for %s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v19, v70);
    goto LABEL_19;
  }
  unint64_t v32 = *(void *)(a2 + 16);
  uint64_t v78 = v81;
  BOOL v79 = 0;
  uint64_t v33 = *(void (**)(void *__return_ptr, id *, uint64_t))(*(void *)v32 + 168);
  id v34 = v81;
  unint64_t v35 = v72;
  v33(v80, &v78, 1);
  long long v72 = v35;
  if (v35)
  {

LABEL_9:
    return;
  }

  sub_10001AE98((uint64_t)v80, (uint64_t)v76, &qword_100AD6800);
  sub_10001AE98((uint64_t)v76, (uint64_t)v77, &qword_100AD6800);
  if (sub_1000D3324((uint64_t)v77) != 1)
  {
    memcpy(v82, v80, 0x1F0uLL);
    long long v58 = v69;
    if ((v82[8] & 2) != 0)
    {
      long long v62 = v72;
      v66(v75, v82, a2, v67, v68, v65);
      long long v72 = v62;
      if (v62)
      {
        sub_1000DBF50((uint64_t)v82);

        goto LABEL_9;
      }
      sub_10001AE98((uint64_t)v75, (uint64_t)v73, (uint64_t *)&unk_100AD6310);
      sub_10001AE98((uint64_t)v73, (uint64_t)v74, (uint64_t *)&unk_100AD6310);
      if (sub_1000D3324((uint64_t)v74) != 1)
      {
        long long v63 = v75[62];
        memcpy(v58, v75, 0x1F0uLL);
        sub_1004A485C();
        v58[62] = swift_allocError();
        *(void *)long long v64 = v63;
        *(unsigned char *)(v64 + 8) = 4;
        goto LABEL_25;
      }
      memcpy(v58, a1, 0x1F0uLL);
      sub_1004A485C();
      v58[62] = swift_allocError();
      *(void *)long long v59 = 0;
      long long v60 = 4;
    }
    else
    {
      memcpy(v69, a1, 0x1F0uLL);
      sub_1004A485C();
      v58[62] = swift_allocError();
      *(void *)long long v59 = 0;
      long long v60 = 3;
    }
    *(unsigned char *)(v59 + 8) = v60;
    sub_1004A4AF8((uint64_t)a1);
LABEL_25:
    sub_1000DBF50((uint64_t)v82);

    v61._int countAndFlagsBits = (uint64_t)v58;
    Filename.init(rawValue:)(v61);
    return;
  }
  unint64_t v44 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  id v45 = v24;
  uint64_t v46 = v34;
  uint64_t v47 = sub_10096B470();
  unint64_t v48 = sub_10096C5B0();
  uint64_t v49 = v48;
  if (os_log_type_enabled(v47, v48))
  {
    long long v50 = swift_slowAlloc();
    LODWORD(v67) = v49;
    long long v51 = v50;
    uint64_t v68 = swift_slowAlloc();
    v75[0] = v68;
    *(_DWORD *)long long v51 = 136315394;
    long long v52 = NSFileProviderItemIdentifier.description.getter();
    v74[0] = sub_100719D44(v52, v53, v75);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    long long v54 = NSFileProviderItemIdentifier.description.getter();
    long long v66 = (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))v46;
    long long v56 = v55;

    v74[0] = sub_100719D44(v54, v56, v75);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v67, "no parentRec in RT for parent %s of %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v71 + 8))(v16, v70);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v71 + 8))(v16, v70);
  }
LABEL_19:

  long long v57 = (uint64_t)v69;
  sub_1004A5990((uint64_t)v75);
  uint64_t v36 = v57;
LABEL_20:
  sub_10001AE98((uint64_t)v75, v36, &qword_100AD6328);
}

void sub_10046E3A0(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_10046E3CC(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, id, uint64_t))sub_100473D8C, a5);
}

void sub_10046E3CC(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t *__return_ptr, unsigned char *, uint64_t, id, uint64_t)@<X4>, void *a6@<X8>)
{
  void (*v22)(id *__return_ptr, id *);
  id v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(void *__return_ptr, id *, uint64_t);
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void *v59;
  uint64_t v60;
  int v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  void (*v69)(uint64_t *__return_ptr, unsigned char *, uint64_t, id, uint64_t);
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  unsigned char v74[520];
  void v75[65];
  uint64_t v76[65];
  unsigned char v77[504];
  unsigned char v78[504];
  id v79;
  __int16 v80;
  void v81[63];
  id v82;
  unsigned char v83[504];
  id v84;

  long long v72 = a6;
  uint64_t v11 = sub_10096B480();
  uint64_t v12 = *(void *)(v11 - 8);
  char v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v66 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v66 - v19;
  BOOL v21 = *a1;
  if (!*a1)
  {
    uint64_t v25 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    sub_1004A4AF8((uint64_t)a1);
    uint64_t v26 = sub_10096B470();
    uint64_t v27 = sub_10096C5B0();
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      v76[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v28 = 136315138;
      uint64_t v69 = (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, id, uint64_t))(v28 + 4);
      char v29 = sub_100769B78();
      v75[0] = sub_100719D44(v29, v30, v76);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_1000DBF50((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "no entry.a.id for entry: %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000DBF50((uint64_t)a1);
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v20, v70);
    goto LABEL_20;
  }
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  uint64_t v69 = a5;
  long long v84 = v21;
  char v22 = *(void (**)(id *__return_ptr, id *))(**(void **)(a2 + 32) + 280);
  uint64_t v23 = v21;
  uint64_t v24 = v73;
  v22(&v82, &v84);
  long long v73 = v24;
  if (v24)
  {

    return;
  }
  if (!v82)
  {
    unint64_t v35 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v36 = v23;
    unint64_t v37 = sub_10096B470();
    uint64_t v38 = sub_10096C5B0();
    if (os_log_type_enabled(v37, v38))
    {
      int v39 = (uint8_t *)swift_slowAlloc();
      v76[0] = swift_slowAlloc();
      *(_DWORD *)int v39 = 136315138;
      uint64_t v69 = (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, id, uint64_t))(v39 + 4);
      uint64_t v40 = NSFileProviderItemIdentifier.description.getter();
      v75[0] = sub_100719D44(v40, v41, v76);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "no parent ID in snapshot for %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v18, v70);
    goto LABEL_19;
  }
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v79 = v82;
  BOOL v80 = 0;
  unint64_t v32 = *(void (**)(void *__return_ptr, id *, uint64_t))(*(void *)v31 + 168);
  uint64_t v33 = v82;
  id v34 = v73;
  v32(v81, &v79, 1);
  long long v73 = v34;
  if (v34)
  {

LABEL_9:
    return;
  }

  sub_10001AE98((uint64_t)v81, (uint64_t)v77, &qword_100AD6800);
  sub_10001AE98((uint64_t)v77, (uint64_t)v78, &qword_100AD6800);
  if (sub_1000D3324((uint64_t)v78) == 1)
  {
    uint64_t v42 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v43 = v23;
    unint64_t v44 = v33;
    id v45 = sub_10096B470();
    uint64_t v46 = sub_10096C5B0();
    uint64_t v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v48 = swift_slowAlloc();
      LODWORD(v68) = v47;
      uint64_t v49 = v48;
      uint64_t v69 = (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, id, uint64_t))swift_slowAlloc();
      v76[0] = (uint64_t)v69;
      *(_DWORD *)uint64_t v49 = 136315394;
      long long v50 = NSFileProviderItemIdentifier.description.getter();
      v75[0] = sub_100719D44(v50, v51, v76);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      long long v52 = NSFileProviderItemIdentifier.description.getter();
      uint64_t v67 = v44;
      long long v54 = v53;

      v75[0] = sub_100719D44(v52, v54, v76);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v68, "no parentRec in RT for parent %s of %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v71 + 8))(v15, v70);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v71 + 8))(v15, v70);
    }
LABEL_19:

LABEL_20:
    long long v55 = (uint64_t)v72;
    sub_1004A5990((uint64_t)v76);
    sub_10001AE98((uint64_t)v76, v55, &qword_100AD6328);
    return;
  }
  memcpy(v83, v81, 0x1F0uLL);
  if ((v83[8] & 2) != 0)
  {
    long long v60 = v73;
    v69(v76, v83, a2, v67, v68);
    long long v73 = v60;
    if (v60)
    {
      sub_1000DBF50((uint64_t)v83);

      goto LABEL_9;
    }
    sub_10001AE98((uint64_t)v76, (uint64_t)v74, (uint64_t *)&unk_100AD6310);
    sub_10001AE98((uint64_t)v74, (uint64_t)v75, (uint64_t *)&unk_100AD6310);
    long long v61 = sub_1000D3324((uint64_t)v75);
    long long v62 = v72;
    if (v61 == 1)
    {
      memcpy(v72, a1, 0x1F0uLL);
      sub_1004A485C();
      v62[62] = swift_allocError();
      *(void *)long long v63 = 0;
      *(unsigned char *)(v63 + 8) = 4;
      sub_1004A4AF8((uint64_t)a1);
    }
    else
    {
      long long v64 = v76[62];
      memcpy(v72, v76, 0x1F0uLL);
      sub_1004A485C();
      v62[62] = swift_allocError();
      *(void *)char v65 = v64;
      *(unsigned char *)(v65 + 8) = 4;
    }
    sub_1000DBF50((uint64_t)v83);

    long long v59 = v62;
  }
  else
  {
    long long v56 = v72;
    memcpy(v72, a1, 0x1F0uLL);
    sub_1004A485C();
    v56[62] = swift_allocError();
    *(void *)long long v57 = 0;
    *(unsigned char *)(v57 + 8) = 3;
    sub_1004A4AF8((uint64_t)a1);
    sub_1000DBF50((uint64_t)v83);

    long long v59 = v56;
  }
  Filename.init(rawValue:)(*(Swift::String *)&v59);
}

void sub_10046EC28(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_10046E3CC(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, id, uint64_t))sub_100472C7C, a5);
}

void sub_10046EC54(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_10046E3CC(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, id, uint64_t))sub_100472E30, a5);
}

void *sub_10046EC80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, void (*a10)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))
{
  uint64_t v67 = a6;
  uint64_t v68 = (uint8_t *)a7;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a3;
  uint64_t v86 = a9;
  uint64_t v14 = sub_10096B480();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v70 = v14;
  uint64_t v71 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  BOOL v21 = (char *)&v61 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v61 - v22;
  int v24 = *((unsigned __int8 *)a1 + 8);
  if (v24 == 255)
  {
    uint64_t v69 = v10;
    id v38 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    sub_10035751C((uint64_t)a1);
    int v39 = sub_10096B470();
    os_log_type_t v40 = sub_10096C5B0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      v74[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      uint64_t v68 = v41 + 4;
      uint64_t v42 = sub_100769260();
      v73[0] = sub_100719D44(v42, v43, v74);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_1000D3440((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "no entry.a.id for entry: %s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000D3440((uint64_t)a1);
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v23, v70);
    goto LABEL_12;
  }
  uint64_t v63 = a8;
  uint64_t v25 = *a1;
  uint64_t v83 = *a1;
  char v84 = v24;
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t *))(**(void **)(a2 + 32) + 280))(&v81, &v83);
  if (v10) {
    return result;
  }
  uint64_t v62 = v25;
  char v27 = v82;
  if (v82 == 255)
  {
    uint64_t v69 = 0;
    id v45 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v46 = sub_10096B470();
    os_log_type_t v47 = sub_10096C5B0();
    if (os_log_type_enabled(v46, v47))
    {
      unint64_t v48 = (uint8_t *)swift_slowAlloc();
      v74[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v48 = 136315138;
      uint64_t v49 = VFSItemID.parseableString.getter(v62, v24);
      v73[0] = sub_100719D44(v49, v50, v74);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "no parent ID in snapshot for %s", v48, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v21, v70);
    goto LABEL_12;
  }
  uint64_t v28 = v81;
  uint64_t v29 = *(void *)(a2 + 16);
  uint64_t v77 = v81;
  unsigned __int8 v78 = v82;
  char v79 = 0;
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(*(void *)v29 + 168))(v80, &v77, 1);
  uint64_t v69 = 0;
  sub_10001AE98((uint64_t)v80, (uint64_t)v75, (uint64_t *)&unk_100AD67E0);
  sub_10001AE98((uint64_t)v75, (uint64_t)v76, (uint64_t *)&unk_100AD67E0);
  if (sub_1000D3324((uint64_t)v76) == 1)
  {
    id v30 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v31 = sub_10096B470();
    os_log_type_t v32 = sub_10096C5B0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      v74[0] = (uint64_t)v68;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v34 = VFSItemID.parseableString.getter(v28, v27);
      v73[0] = sub_100719D44(v34, v35, v74);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v36 = VFSItemID.parseableString.getter(v62, v24);
      v73[0] = sub_100719D44(v36, v37, v74);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "no parentRec in RT for parent %s of %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v18, v70);
LABEL_12:
    uint64_t v44 = (uint64_t)v86;
    sub_1004A5990((uint64_t)v74);
    return (void *)sub_10001AE98((uint64_t)v74, v44, &qword_100AD6320);
  }
  memcpy(v85, v80, 0x1F0uLL);
  if ((v85[16] & 2) != 0)
  {
    uint64_t v54 = v69;
    sub_1004711CC((uint64_t)v85, a2, v64, v65, v66, v67, (uint64_t)v68, v63, a10);
    if (v54)
    {
      return (void *)sub_1000D3440((uint64_t)v85);
    }
    else
    {
      sub_10001AE98((uint64_t)v74, (uint64_t)v72, &qword_100ADC000);
      sub_10001AE98((uint64_t)v72, (uint64_t)v73, &qword_100ADC000);
      int v55 = sub_1000D3324((uint64_t)v73);
      long long v56 = v86;
      if (v55 == 1)
      {
        memcpy(v86, a1, 0x1F0uLL);
        sub_1004A485C();
        v56[62] = swift_allocError();
        *(void *)uint64_t v57 = 0;
        *(unsigned char *)(v57 + 8) = 4;
        sub_10035751C((uint64_t)a1);
      }
      else
      {
        uint64_t v58 = v74[62];
        memcpy(v86, v74, 0x1F0uLL);
        sub_1004A485C();
        v56[62] = swift_allocError();
        *(void *)uint64_t v59 = v58;
        *(unsigned char *)(v59 + 8) = 4;
      }
      sub_1000D3440((uint64_t)v85);
      v60._int countAndFlagsBits = (uint64_t)v56;
      return (void *)Filename.init(rawValue:)(v60).rawValue._countAndFlagsBits;
    }
  }
  else
  {
    long long v51 = v86;
    memcpy(v86, a1, 0x1F0uLL);
    sub_1004A485C();
    v51[62] = swift_allocError();
    *(void *)uint64_t v52 = 0;
    *(unsigned char *)(v52 + 8) = 3;
    sub_10035751C((uint64_t)a1);
    sub_1000D3440((uint64_t)v85);
    v53._int countAndFlagsBits = (uint64_t)v51;
    return (void *)Filename.init(rawValue:)(v53).rawValue._countAndFlagsBits;
  }
}

void *sub_10046F41C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_10046F474(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))sub_100471E6C, a5);
}

void *sub_10046F448@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_10046F474(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))sub_100471F18, a5);
}

void *sub_10046F474@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t)@<X4>, void *a6@<X8>)
{
  void (*v60)(uint64_t *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned char v66[520];
  void v67[65];
  uint64_t v68[65];
  unsigned char v69[504];
  unsigned char v70[504];
  uint64_t v71;
  unsigned __int8 v72;
  char v73;
  void v74[63];
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  char v78;
  unsigned char v79[504];
  void *v80;

  uint64_t v61 = a3;
  uint64_t v62 = a4;
  BOOL v80 = a6;
  uint64_t v10 = sub_10096B480();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  uint64_t v65 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v59 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v59 - v18;
  int v20 = *((unsigned __int8 *)a1 + 8);
  if (v20 == 255)
  {
    uint64_t v63 = v6;
    id v36 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    sub_10035751C((uint64_t)a1);
    unint64_t v37 = sub_10096B470();
    os_log_type_t v38 = sub_10096C5B0();
    if (os_log_type_enabled(v37, v38))
    {
      int v39 = (uint8_t *)swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)int v39 = 136315138;
      uint64_t v62 = (uint64_t)(v39 + 4);
      uint64_t v40 = sub_100769260();
      v67[0] = sub_100719D44(v40, v41, v68);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_1000D3440((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "no entry.a.id for entry: %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000D3440((uint64_t)a1);
    }

    (*(void (**)(char *, uint64_t))(v65 + 8))(v19, v64);
    goto LABEL_12;
  }
  Swift::String v60 = a5;
  uint64_t v21 = *a1;
  uint64_t v77 = *a1;
  unsigned __int8 v78 = v20;
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t *))(**(void **)(a2 + 32) + 280))(&v75, &v77);
  if (v6) {
    return result;
  }
  char v23 = v76;
  if (v76 == 255)
  {
    uint64_t v63 = 0;
    id v43 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v44 = sub_10096B470();
    os_log_type_t v45 = sub_10096C5B0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315138;
      uint64_t v62 = (uint64_t)(v46 + 4);
      uint64_t v47 = VFSItemID.parseableString.getter(v21, v20);
      v67[0] = sub_100719D44(v47, v48, v68);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "no parent ID in snapshot for %s", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v65 + 8))(v17, v64);
    goto LABEL_12;
  }
  uint64_t v24 = v75;
  uint64_t v25 = *(void *)(a2 + 16);
  uint64_t v71 = v75;
  long long v72 = v76;
  long long v73 = 0;
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(*(void *)v25 + 168))(v74, &v71, 1);
  uint64_t v63 = 0;
  sub_10001AE98((uint64_t)v74, (uint64_t)v69, (uint64_t *)&unk_100AD67E0);
  sub_10001AE98((uint64_t)v69, (uint64_t)v70, (uint64_t *)&unk_100AD67E0);
  if (sub_1000D3324((uint64_t)v70) == 1)
  {
    id v26 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    char v27 = sub_10096B470();
    os_log_type_t v28 = sub_10096C5B0();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      LODWORD(v61) = v29;
      uint64_t v31 = v30;
      uint64_t v62 = swift_slowAlloc();
      v68[0] = v62;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v32 = VFSItemID.parseableString.getter(v24, v23);
      v67[0] = sub_100719D44(v32, v33, v68);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v34 = VFSItemID.parseableString.getter(v21, v20);
      v67[0] = sub_100719D44(v34, v35, v68);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v61, "no parentRec in RT for parent %s of %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v64);
LABEL_12:
    uint64_t v42 = (uint64_t)v80;
    sub_1004A5990((uint64_t)v68);
    return (void *)sub_10001AE98((uint64_t)v68, v42, &qword_100AD6320);
  }
  memcpy(v79, v74, 0x1F0uLL);
  if ((v79[16] & 2) != 0)
  {
    uint64_t v52 = v63;
    v60(v68, v79, a2, v61, v62);
    if (v52)
    {
      return (void *)sub_1000D3440((uint64_t)v79);
    }
    else
    {
      sub_10001AE98((uint64_t)v68, (uint64_t)v66, &qword_100ADC000);
      sub_10001AE98((uint64_t)v66, (uint64_t)v67, &qword_100ADC000);
      int v53 = sub_1000D3324((uint64_t)v67);
      uint64_t v54 = v80;
      if (v53 == 1)
      {
        memcpy(v80, a1, 0x1F0uLL);
        sub_1004A485C();
        v54[62] = swift_allocError();
        *(void *)uint64_t v55 = 0;
        *(unsigned char *)(v55 + 8) = 4;
        sub_10035751C((uint64_t)a1);
      }
      else
      {
        uint64_t v56 = v68[62];
        memcpy(v80, v68, 0x1F0uLL);
        sub_1004A485C();
        v54[62] = swift_allocError();
        *(void *)uint64_t v57 = v56;
        *(unsigned char *)(v57 + 8) = 4;
      }
      sub_1000D3440((uint64_t)v79);
      v58._int countAndFlagsBits = (uint64_t)v54;
      return (void *)Filename.init(rawValue:)(v58).rawValue._countAndFlagsBits;
    }
  }
  else
  {
    uint64_t v49 = v80;
    memcpy(v80, a1, 0x1F0uLL);
    sub_1004A485C();
    v49[62] = swift_allocError();
    *(void *)uint64_t v50 = 0;
    *(unsigned char *)(v50 + 8) = 3;
    sub_10035751C((uint64_t)a1);
    sub_1000D3440((uint64_t)v79);
    v51._int countAndFlagsBits = (uint64_t)v49;
    return (void *)Filename.init(rawValue:)(v51).rawValue._countAndFlagsBits;
  }
}

uint64_t sub_10046FC00@<X0>(char *a1@<X0>, uint8_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v153 = a5;
  uint64_t v152 = a4;
  uint64_t v151 = a3;
  uint64_t v174 = a6;
  uint64_t v7 = *(void *)a2;
  os_log_type_t v170 = a2;
  uint64_t v8 = v7;
  uint64_t v9 = sub_10096B480();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v172 = v9;
  uint64_t v173 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v178 = (char *)&v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  char v166 = (char *)&v144 - v14;
  __chkstk_darwin(v13);
  uint64_t v158 = (char *)&v144 - v15;
  long long v16 = *(_OWORD *)(v8 + 96);
  long long v179 = *(_OWORD *)(v8 + 80);
  long long v180 = v16;
  v182[0] = v179;
  v182[1] = v16;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  uint64_t v176 = sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v148 = sub_10096C890();
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v150 = (char *)&v144 - v18;
  uint64_t v156 = sub_10096C890();
  uint64_t v155 = *(void *)(v156 - 8);
  uint64_t v19 = __chkstk_darwin(v156);
  uint64_t v164 = (uint64_t)&v144 - v20;
  uint64_t v175 = v17;
  uint64_t v171 = *(void *)(v17 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v169 = (char *)&v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v177 = (char *)&v144 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v146 = (char *)&v144 - v26;
  __chkstk_darwin(v25);
  uint64_t v157 = (char *)&v144 - v27;
  uint64_t v161 = v180;
  uint64_t v162 = v179;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = sub_10096C890();
  uint64_t v30 = *(char **)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  *(void *)&long long v179 = (char *)&v144 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  *(void *)&long long v180 = (char *)&v144 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  unint64_t v37 = (char *)&v144 - v36;
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v39 = __chkstk_darwin(v35);
  Swift::String v163 = (char *)&v144 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  id v160 = (char *)&v144 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  int64_t v159 = (char *)&v144 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v154 = (char *)&v144 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v165 = (char *)&v144 - v48;
  __chkstk_darwin(v47);
  uint64_t v50 = (char *)&v144 - v49;
  Swift::String v51 = a1;
  Swift::String v168 = (void (*)(char *, char *, uint64_t))*((void *)v30 + 2);
  v168(v37, a1, v29);
  id v167 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  if (v167(v37, 1, AssociatedTypeWitness) == 1)
  {
    (*((void (**)(char *, uint64_t))v30 + 1))(v37, v29);
    id v52 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v53 = v171;
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v171 + 16);
    uint64_t v55 = v175;
    v54(v177, v51, v175);
    uint64_t v56 = sub_10096B470();
    os_log_type_t v57 = sub_10096C5B0();
    if (os_log_type_enabled(v56, v57))
    {
      Swift::String v58 = (_DWORD *)swift_slowAlloc();
      *(void *)&long long v180 = swift_slowAlloc();
      *(void *)&v182[0] = v180;
      *(void *)&long long v179 = v58;
      *Swift::String v58 = 136315138;
      os_log_type_t v170 = (uint8_t *)(v58 + 1);
      uint64_t v59 = v169;
      Swift::String v60 = v177;
      v54(v169, v177, v55);
      uint64_t v61 = *(void (**)(char *, uint64_t))(v53 + 8);
      v61(v60, v55);
      uint64_t v62 = sub_10082F470(v55);
      unint64_t v64 = v63;
      v61(v59, v55);
      uint64_t v183 = sub_100719D44(v62, v64, (uint64_t *)v182);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "no entry.a.id for entry: %s", (uint8_t *)v179, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v177, v55);
    }

    (*(void (**)(char *, uint64_t))(v173 + 8))(v178, v172);
    uint64_t v69 = v174;
LABEL_8:
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v69, 1, 1, TupleTypeMetadata2);
  }
  uint64_t v177 = a1;
  uint64_t v145 = v29;
  uint64_t v178 = v30;
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v65(v50, v37, AssociatedTypeWitness);
  uint64_t v66 = v170;
  uint64_t v67 = v181;
  (*(void (**)(char *))(**((void **)v170 + 4) + 280))(v50);
  if (v67) {
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v50, AssociatedTypeWitness);
  }
  uint64_t v169 = (char *)v65;
  uint64_t v144 = v50;
  uint64_t v181 = 0;
  uint64_t v71 = (char *)v179;
  uint64_t v72 = v145;
  v168((char *)v179, (char *)v180, v145);
  if (v167(v71, 1, AssociatedTypeWitness) == 1)
  {
    long long v73 = v178 + 8;
    *(void *)&long long v179 = *((void *)v178 + 1);
    ((void (*)(char *, uint64_t))v179)(v71, v72);
    id v74 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v75 = v38;
    long long v76 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    uint64_t v77 = v163;
    unsigned __int8 v78 = v144;
    v76(v163, v144, AssociatedTypeWitness);
    char v79 = sub_10096B470();
    os_log_type_t v80 = sub_10096C5B0();
    int v81 = v80;
    if (os_log_type_enabled(v79, v80))
    {
      LODWORD(v177) = v81;
      uint64_t v82 = swift_slowAlloc();
      uint64_t v178 = v73;
      uint64_t v83 = (uint8_t *)v82;
      uint64_t v171 = swift_slowAlloc();
      *(void *)&v182[0] = v171;
      *(_DWORD *)uint64_t v83 = 136315138;
      os_log_type_t v170 = v83 + 4;
      char v84 = v160;
      v76(v160, v77, AssociatedTypeWitness);
      unint64_t v85 = *(void (**)(char *, uint64_t))(v75 + 8);
      v85(v77, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      uint64_t v86 = sub_10096D220();
      uint64_t v87 = AssociatedTypeWitness;
      unint64_t v89 = v88;
      v85(v84, v87);
      uint64_t v183 = sub_100719D44(v86, v89, (uint64_t *)v182);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v177, "no parent ID in snapshot for %s", v83, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v173 + 8))(v166, v172);
      ((void (*)(void, uint64_t))v179)(v180, v145);
      v85(v144, v87);
    }
    else
    {
      char v94 = *(void (**)(char *, uint64_t))(v75 + 8);
      v94(v77, AssociatedTypeWitness);

      (*(void (**)(char *, uint64_t))(v173 + 8))(v166, v172);
      ((void (*)(void, uint64_t))v179)(v180, v145);
      v94(v78, AssociatedTypeWitness);
    }
    uint64_t v69 = v174;
    goto LABEL_8;
  }
  uint64_t v90 = (uint64_t)v165;
  ((void (*)(char *, char *, uint64_t))v169)(v165, v71, AssociatedTypeWitness);
  uint64_t v91 = v164;
  uint64_t v92 = v181;
  sub_1000DEDD8(v90, v164);
  if (v92)
  {
    int v93 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v93(v90, AssociatedTypeWitness);
    (*((void (**)(void, uint64_t))v178 + 1))(v180, v145);
    return ((uint64_t (*)(char *, uint64_t))v93)(v144, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v95 = v171;
    uint64_t v96 = v175;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v91, 1, v175) == 1)
    {
      uint64_t v181 = 0;
      (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v91, v156);
      id v97 = (id)fpfs_current_or_default_log();
      char v98 = v158;
      sub_10096B490();
      uint64_t v99 = v38;
      uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
      Swift::String v101 = v154;
      v100(v154, v90, AssociatedTypeWitness);
      Swift::String v102 = v144;
      v100(v159, (uint64_t)v144, AssociatedTypeWitness);
      Swift::String v103 = sub_10096B470();
      os_log_type_t v104 = sub_10096C5B0();
      *(void *)&long long v179 = v103;
      LODWORD(v177) = v104;
      if (os_log_type_enabled(v103, v104))
      {
        uint64_t v105 = swift_slowAlloc();
        uint64_t v171 = swift_slowAlloc();
        *(void *)&v182[0] = v171;
        *(_DWORD *)uint64_t v105 = 136315394;
        os_log_type_t v170 = (uint8_t *)(v105 + 4);
        uint64_t v106 = v160;
        v100(v160, (uint64_t)v101, AssociatedTypeWitness);
        double v107 = *(void (**)(char *, uint64_t))(v99 + 8);
        v107(v101, AssociatedTypeWitness);
        Swift::String v168 = (void (*)(char *, char *, uint64_t))v107;
        uint64_t v169 = *(char **)(swift_getAssociatedConformanceWitness() + 8);
        uint64_t v108 = sub_10096D220();
        unint64_t v110 = v109;
        v107(v106, AssociatedTypeWitness);
        uint64_t v183 = sub_100719D44(v108, v110, (uint64_t *)v182);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        id v111 = (uint8_t *)v105;
        *(_WORD *)(v105 + 12) = 2080;
        os_log_type_t v170 = (uint8_t *)(v105 + 14);
        uint64_t v112 = v159;
        v100(v106, (uint64_t)v159, AssociatedTypeWitness);
        uint64_t v113 = (void (*)(char *, uint64_t))v168;
        ((void (*)(char *, uint64_t))v168)(v112, AssociatedTypeWitness);
        uint64_t v114 = sub_10096D220();
        unint64_t v116 = v115;
        v113(v106, AssociatedTypeWitness);
        uint64_t v183 = sub_100719D44(v114, v116, (uint64_t *)v182);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        unint64_t v117 = (void *)v179;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v179, (os_log_type_t)v177, "no parentRec in RT for parent %s of %s", v111, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v173 + 8))(v158, v172);
        v113(v165, AssociatedTypeWitness);
        (*((void (**)(void, uint64_t))v178 + 1))(v180, v145);
        v113(v144, AssociatedTypeWitness);
      }
      else
      {
        char v126 = *(void (**)(char *, uint64_t))(v99 + 8);
        v126(v159, AssociatedTypeWitness);
        v126(v101, AssociatedTypeWitness);

        (*(void (**)(char *, uint64_t))(v173 + 8))(v98, v172);
        v126((char *)v90, AssociatedTypeWitness);
        (*((void (**)(void, uint64_t))v178 + 1))(v180, v145);
        v126(v102, AssociatedTypeWitness);
      }
      uint64_t v69 = v174;
      goto LABEL_8;
    }
    *(void *)&long long v179 = AssociatedTypeWitness;
    uint64_t v118 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
    uint64_t v119 = v157;
    v118(v157, v91, v96);
    if ((v119[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)] & 2) != 0)
    {
      int v127 = v150;
      sub_100474B40(v119, v66, v151, v152, v153);
      uint64_t v181 = 0;
      uint64_t v128 = TupleTypeMetadata3;
      int v129 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 48))(v127, 1, TupleTypeMetadata3);
      uint64_t v130 = v127;
      uint64_t v131 = v174;
      if (v129 == 1)
      {
        (*(void (**)(char *, uint64_t))(v147 + 8))(v130, v148);
        uint64_t v132 = swift_getTupleTypeMetadata2();
        uint64_t v133 = *(int *)(v132 + 48);
        uint64_t v134 = v171;
        (*(void (**)(uint64_t, char *, uint64_t))(v171 + 16))(v131, v177, v96);
        sub_1004A485C();
        *(void *)(v131 + v133) = swift_allocError();
        *(void *)uint64_t v135 = 0;
        *(unsigned char *)(v135 + 8) = 4;
        (*(void (**)(char *, uint64_t))(v134 + 8))(v157, v96);
      }
      else
      {
        uint64_t v136 = *(void *)&v130[*(int *)(v128 + 48)];
        int v137 = v146;
        ((void (*)(char *))v118)(v146);
        uint64_t v132 = swift_getTupleTypeMetadata2();
        uint64_t v138 = *(int *)(v132 + 48);
        uint64_t v139 = v171;
        (*(void (**)(uint64_t, char *, uint64_t))(v171 + 16))(v131, v137, v96);
        sub_1004A485C();
        *(void *)(v131 + v138) = swift_allocError();
        *(void *)uint64_t v140 = v136;
        *(unsigned char *)(v140 + 8) = 4;
        int v141 = *(void (**)(char *, uint64_t))(v139 + 8);
        v141(v137, v96);
        v141(v157, v96);
      }
      uint64_t v142 = *(void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v143 = v179;
      v142(v165, v179);
      (*((void (**)(void, uint64_t))v178 + 1))(v180, v145);
      v142(v144, v143);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 0, 1, v132);
    }
    else
    {
      uint64_t v120 = swift_getTupleTypeMetadata2();
      uint64_t v121 = *(int *)(v120 + 48);
      uint64_t v122 = v174;
      (*(void (**)(uint64_t, char *, uint64_t))(v95 + 16))(v174, v177, v96);
      sub_1004A485C();
      *(void *)(v122 + v121) = swift_allocError();
      *(void *)uint64_t v123 = 0;
      *(unsigned char *)(v123 + 8) = 3;
      (*(void (**)(char *, uint64_t))(v95 + 8))(v119, v96);
      char v124 = *(void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v125 = v179;
      v124(v165, v179);
      (*((void (**)(void, uint64_t))v178 + 1))(v180, v145);
      v124(v144, v125);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v122, 0, 1, v120);
    }
  }
}

void sub_1004711CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))
{
  void (*v11)(void *__return_ptr, __n128 *, uint64_t, char *, uint64_t (*)(void), uint64_t);
  void (*v12)(char **__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *);
  void (*v13)(char **__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char **);
  uint64_t (*v19)(char **);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  void **v40;
  Swift::String v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unsigned __int8 v46;
  __n128 *v47;
  uint64_t v48;
  char *v49;
  char v50;
  uint64_t *v51;
  char v52;
  id v53;
  void **v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void *v68;
  Swift::String v69;
  void *v70;
  uint64_t v71;
  char *v72;
  Swift::String v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  Swift::String v80;
  __n128 *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  Swift::String v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  uint64_t v90;
  void (*v91)(void *__return_ptr, __n128 *, uint64_t, char *, uint64_t (*)(void), uint64_t);
  uint64_t (*v92)(char **);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  void v99[5];
  unsigned char v100[496];
  uint64_t v101;
  unsigned char v102[504];
  unsigned char v103[504];
  unsigned char v104[496];
  void v105[63];
  unsigned char v106[504];
  unsigned char v107[504];
  void v108[63];
  unsigned char v109[504];
  unsigned char v110[504];
  unsigned char v111[503];
  unsigned __int8 v112;
  void v113[65];
  unsigned char v114[496];
  uint64_t v115;
  uint64_t v116;
  char v117;
  unsigned char v118[520];
  void v119[65];
  char *v120;
  char v121;
  char v122;
  uint64_t v123[5];
  uint64_t v124;
  unsigned char v125[496];
  unsigned char v126[496];
  unsigned char v127[496];
  void v128[62];
  unsigned char v129[496];
  unsigned char v130[512];
  void **v131;

  uint64_t v10 = (void **)__chkstk_darwin(a1);
  uint64_t v91 = v11;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  char v98 = v9;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v131 = v10;
  id v97 = v24;
  uint64_t v25 = sub_10096B480();
  uint64_t v95 = *(void *)(v25 - 8);
  uint64_t v96 = v25;
  uint64_t v26 = __chkstk_darwin(v25);
  os_log_type_t v28 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v87 - v29;
  uint64_t v92 = v19;
  int v93 = v17;
  v99[2] = v19;
  v99[3] = v17;
  char v94 = (char *)v21;
  if (v21 > 9)
  {
    uint64_t v35 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v36 = sub_10096B470();
    unint64_t v37 = sub_10096C5B0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Recursion too deep - aborting", v38, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v95 + 8))(v30, v96);
    uint64_t v39 = v97;
    uint64_t v40 = v131;
    memcpy(v97, v131, 0x1F0uLL);
    sub_1004A485C();
    v39[62] = swift_allocError();
    *(void *)v41._object = 15;
    *((unsigned char *)v41._object + 8) = 11;
    v39[63] = 0;
    *((unsigned char *)v39 + 512) = -6;
    v41._int countAndFlagsBits = (uint64_t)v39;
    Filename.init(rawValue:)(v41);
    sub_10035751C((uint64_t)v40);
  }
  else
  {
    sub_10002B7CC(&qword_100AD6308);
    uint64_t v31 = swift_dynamicCastClass();
    if (!v31)
    {
      uint64_t v42 = sub_100722F18((uint64_t)v110);
      uint64_t v43 = (*(uint64_t (**)(double))(*(void *)v23 + 176))(v42);
      memcpy(v130, v110, 0x1F0uLL);
      uint64_t v44 = v98;
      v13(&v120, v130, v43, v94, v15, v99);
      if (v44)
      {
        sub_1000DBF50((uint64_t)v130);
        swift_release();
        return;
      }
      sub_1000DBF50((uint64_t)v130);
      swift_release();
      sub_10001AE98((uint64_t)&v120, (uint64_t)v118, (uint64_t *)&unk_100AD6310);
      sub_10001AE98((uint64_t)v118, (uint64_t)v114, (uint64_t *)&unk_100AD6310);
      sub_10001AE98((uint64_t)v118, (uint64_t)v119, (uint64_t *)&unk_100AD6310);
      if (sub_1000D3324((uint64_t)v119) != 1)
      {
        memcpy(v129, v114, sizeof(v129));
        uint64_t v65 = v115;
        uint64_t v66 = v116;
        uint64_t v67 = v117;
        sub_1004A5424(v118, sub_1004A48B8);
        sub_1004A4AF8((uint64_t)v129);
        swift_errorRetain();
        uint64_t v68 = v97;
        sub_1007231B0((uint64_t)v97);
        sub_1004A5424(v118, sub_1004A4CD4);
        swift_errorRelease();
        v68[62] = v65;
        v68[63] = v66;
        *((unsigned char *)v68 + 512) = v67;
        v69._int countAndFlagsBits = (uint64_t)v68;
        Filename.init(rawValue:)(v69);
        sub_1000DBF50((uint64_t)v129);
        sub_1000DBF50((uint64_t)v129);
        return;
      }
      sub_1004A48B0(v113);
      Swift::String v51 = v113;
LABEL_18:
      sub_10001AE98((uint64_t)v51, (uint64_t)v97, &qword_100ADC000);
      return;
    }
    uint64_t v32 = v31;
    uint64_t v90 = v23;
    uint64_t v33 = *((unsigned __int8 *)v131 + 8);
    unint64_t v88 = v15;
    if (v33 == 255)
    {
      uint64_t v34 = (char *)v131[30];
      if (!v34)
      {
        uint64_t v47 = (__n128 *)v131;
        uint64_t v112 = -1;
        uint64_t v48 = 65280;
        goto LABEL_25;
      }
      uint64_t v112 = 1;
      uint64_t v45 = v34;
      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v34 = (char *)*v131;
      uint64_t v112 = 0;
    }
    uint64_t v46 = v112;
    unint64_t v89 = v33 | (v112 << 8);
    if (v112 == 255)
    {
      uint64_t v47 = (__n128 *)v131;
      uint64_t v48 = v89;
LABEL_25:
      swift_retain();
      Swift::String v60 = v98;
LABEL_26:
      if (sub_100758EDC())
      {
        sub_100759334(v32, 0, 0, 3, v123);
        if (v60)
        {
          sub_1004A4F10(v34, v48);
          swift_release();
          return;
        }
        uint64_t v61 = v123[0];
        if (v123[0])
        {
          swift_errorRetain();
          swift_release();
          sub_1004A5120((uint64_t)v123);
          sub_1004A4F10(v34, v48);
          uint64_t v62 = v97;
          memcpy(v97, v47, 0x1F0uLL);
          v62[62] = v61;
          v62[63] = 0;
          unint64_t v64 = -3;
LABEL_36:
          *((unsigned char *)v62 + 512) = v64;
          uint64_t v75 = v62;
          Filename.init(rawValue:)(*(Swift::String *)(&v63 - 1));
          sub_10035751C((uint64_t)v47);
          return;
        }
        id v74 = v124;
        if (v124)
        {
          swift_errorRetain();
          swift_release();
          sub_1004A5120((uint64_t)v123);
          sub_1004A4F10(v34, v48);
          uint64_t v62 = v97;
          memcpy(v97, v47, 0x1F0uLL);
          v62[62] = v74;
          v62[63] = 0;
          unint64_t v64 = -4;
          goto LABEL_36;
        }
        sub_1004A5120((uint64_t)v123);
      }
      sub_100478FA4(v47, v32, v119);
      if (v60)
      {
        swift_release();
        sub_1004A4F10(v34, v48);
        return;
      }
      sub_10001AE98((uint64_t)v119, (uint64_t)v114, &qword_100AD6320);
      sub_10001AE98((uint64_t)v114, (uint64_t)v118, &qword_100AD6320);
      if (sub_1000D3324((uint64_t)v118) == 1)
      {
        sub_100722F18((uint64_t)v111);
        long long v76 = sub_100514C2C();
        memcpy(v128, v111, sizeof(v128));
        sub_1004792E4(v128, v76, v113);
        sub_1000DBF50((uint64_t)v128);
        swift_release();
        sub_10001AE98((uint64_t)v113, (uint64_t)v109, &qword_100AD6328);
        sub_10001AE98((uint64_t)v109, (uint64_t)v110, &qword_100AD6328);
        if (sub_1000D3324((uint64_t)v110) != 1)
        {
          char v84 = v113[62];
          memcpy(v125, v113, sizeof(v125));
          unint64_t v85 = v97;
          sub_1007231B0((uint64_t)v97);
          swift_release();
          sub_1000DBF50((uint64_t)v125);
LABEL_48:
          sub_1004A4F10(v34, v48);
          v85[62] = v84;
          v85[63] = 0;
          *((unsigned char *)v85 + 512) = -4;
          v86._int countAndFlagsBits = (uint64_t)v85;
          Filename.init(rawValue:)(v86);
          return;
        }
        int v81 = v47;
        uint64_t v82 = v94 + 1;
        v91(v108, v81, v32, v94 + 1, (uint64_t (*)(void))v92, v93);
        sub_10001AE98((uint64_t)v108, (uint64_t)v106, &qword_100AD6320);
        sub_10001AE98((uint64_t)v106, (uint64_t)v107, &qword_100AD6320);
        if (sub_1000D3324((uint64_t)v107) == 1)
        {
          sub_100722F18((uint64_t)v104);
          uint64_t v83 = sub_100514C2C();
          memcpy(v127, v104, sizeof(v127));
          a9(v105, v127, v83, v82, v88, v99);
          sub_1000DBF50((uint64_t)v127);
          swift_release();
          sub_10001AE98((uint64_t)v105, (uint64_t)v102, &qword_100AD6328);
          sub_10001AE98((uint64_t)v102, (uint64_t)v100, &qword_100AD6328);
          sub_10001AE98((uint64_t)v102, (uint64_t)v103, &qword_100AD6328);
          if (sub_1000D3324((uint64_t)v103) == 1)
          {
            swift_release();
            sub_1004A4F10(v34, v48);
            sub_1004A48B0(&v120);
            Swift::String v51 = (uint64_t *)&v120;
            goto LABEL_18;
          }
          char v84 = v101;
          memcpy(v126, v100, sizeof(v126));
          sub_10001AE98((uint64_t)v102, (uint64_t)&v120, &qword_100AD6328);
          sub_1004A4F28((uint64_t)&v120);
          unint64_t v85 = v97;
          sub_1007231B0((uint64_t)v97);
          swift_release();
          sub_1000DBF50((uint64_t)v126);
          sub_1004A58A4((uint64_t)v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1004A4CD4);
          goto LABEL_48;
        }
        sub_1004A4F10(v34, v48);
        swift_release();
        uint64_t v77 = v108[62];
        unsigned __int8 v78 = v108;
      }
      else
      {
        sub_1004A4F10(v34, v48);
        swift_release();
        uint64_t v77 = v119[62];
        unsigned __int8 v78 = v119;
      }
      char v79 = v97;
      memcpy(v97, v78, 0x1F0uLL);
      v79[62] = v77;
      v79[63] = 0;
      *((unsigned char *)v79 + 512) = -3;
      v80._int countAndFlagsBits = (uint64_t)v79;
      Filename.init(rawValue:)(v80);
      return;
    }
    if (v112)
    {
      uint64_t v48 = v89;
      sub_1004A5158(v34, v89);
      uint64_t v49 = v34;
      uint64_t v50 = 0;
    }
    else
    {
      uint64_t v50 = v33;
      uint64_t v48 = v89;
    }
    uint64_t v120 = v34;
    uint64_t v121 = v50;
    uint64_t v122 = v46 & 1;
    swift_retain();
    id v52 = v92(&v120);
    sub_1004A4F10(v34, v48);
    sub_1004A4F10(v34, v48);
    if ((v52 & 1) == 0)
    {
      sub_1004A4F10(v34, v48);
      Swift::String v60 = v98;
      uint64_t v47 = (__n128 *)v131;
      goto LABEL_26;
    }
    char v94 = v34;
    uint64_t v53 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v54 = v131;
    sub_10035751C((uint64_t)v131);
    uint64_t v55 = sub_10096B470();
    uint64_t v56 = sub_10096C5B0();
    if (os_log_type_enabled(v55, v56))
    {
      os_log_type_t v57 = (uint8_t *)swift_slowAlloc();
      int v93 = swift_slowAlloc();
      uint64_t v120 = (char *)v93;
      *(_DWORD *)os_log_type_t v57 = 136315138;
      uint64_t v92 = (uint64_t (*)(char **))(v57 + 4);
      Swift::String v58 = sub_100769260();
      v119[0] = sub_100719D44(v58, v59, (uint64_t *)&v120);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_1000D3440((uint64_t)v54);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Cycle detected for %s!", v57, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000D3440((uint64_t)v54);
    }

    (*(void (**)(char *, uint64_t))(v95 + 8))(v28, v96);
    uint64_t v70 = v97;
    memcpy(v97, v54, 0x1F0uLL);
    sub_1004A485C();
    v70[62] = swift_allocError();
    *(void *)uint64_t v71 = 16;
    *(unsigned char *)(v71 + 8) = 11;
    sub_10035751C((uint64_t)v54);
    swift_release();
    uint64_t v72 = v94;
    sub_1004A4F10(v94, v89);
    sub_1004A4F10(v72, v33 | (v112 << 8));
    v70[63] = 0;
    *((unsigned char *)v70 + 512) = -6;
    v73._int countAndFlagsBits = (uint64_t)v70;
    Filename.init(rawValue:)(v73);
  }
}

void sub_100471E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_100471F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_100471FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v16)(id *__return_ptr, unsigned char *, uint64_t, uint64_t, void *);
  void (*v17)(id *__return_ptr, unsigned char *, uint64_t, uint64_t, void *);
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  int v32;
  void *v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  Swift::String v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  int v44;
  uint64_t v45;
  char v46;
  id *v47;
  id v48;
  __n128 *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  void *v58;
  __n128 *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void *v65;
  Swift::String v66;
  void *v67;
  uint64_t v68;
  void *v69;
  Swift::String v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  Swift::String v77;
  void *v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  Swift::String v83;
  int v84;
  uint64_t v85;
  void *v86;
  uint8_t *v87;
  uint8_t *v88;
  __n128 *v89;
  uint64_t v90;
  void *v91;
  os_log_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  unsigned char v96[496];
  uint64_t v97;
  unsigned char v98[504];
  unsigned char v99[504];
  unsigned char v100[496];
  uint64_t v101;
  unsigned char v102[504];
  unsigned char v103[504];
  void v104[63];
  unsigned char v105[504];
  unsigned char v106[504];
  unsigned char v107[503];
  unsigned __int8 v108;
  void v109[65];
  unsigned char v110[496];
  uint64_t v111;
  uint64_t v112;
  char v113;
  unsigned char v114[520];
  void v115[65];
  id v116;
  unsigned __int8 v117;
  char v118;
  uint64_t v119[5];
  uint64_t v120;
  unsigned char v121[496];
  unsigned char v122[496];
  unsigned char v123[496];
  void v124[62];
  unsigned char v125[496];
  unsigned char v126[504];
  uint64_t v127;

  uint64_t v12 = __chkstk_darwin(a1);
  uint64_t v92 = v13;
  int v93 = v14;
  uint64_t v91 = v15;
  uint64_t v17 = v16;
  int v127 = v11;
  char v94 = v18;
  uint64_t v95 = v19;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v24 = (__n128 *)v12;
  uint64_t v25 = sub_10096B480();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v87 - v30;
  if (v21 > 9)
  {
    uint64_t v34 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v35 = sub_10096B470();
    uint64_t v36 = sub_10096C5B0();
    if (os_log_type_enabled(v35, v36))
    {
      unint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Recursion too deep - aborting", v37, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v25);
    uint64_t v38 = v95;
    memcpy(v95, v24, 0x1F0uLL);
    sub_1004A485C();
    v38[62] = swift_allocError();
    *(void *)v39._object = 15;
    *((unsigned char *)v39._object + 8) = 11;
    v38[63] = 0;
    *((unsigned char *)v38 + 512) = -6;
    v39._int countAndFlagsBits = (uint64_t)v38;
    Filename.init(rawValue:)(v39);
    sub_10035751C((uint64_t)v24);
    return;
  }
  sub_10002B7CC(&qword_100AD6308);
  unint64_t v88 = (uint8_t *)swift_dynamicCastClass();
  if (!v88)
  {
    uint64_t v40 = sub_100722F18((uint64_t)v106);
    uint64_t v41 = (*(uint64_t (**)(double))(*(void *)v23 + 176))(v40);
    memcpy(v126, v106, 0x1F0uLL);
    uint64_t v42 = v127;
    v17(&v116, v126, v41, v21, v94);
    if (v42)
    {
      sub_1000DBF50((uint64_t)v126);
      swift_release();
      return;
    }
    sub_1000DBF50((uint64_t)v126);
    swift_release();
    sub_10001AE98((uint64_t)&v116, (uint64_t)v114, (uint64_t *)&unk_100AD6310);
    sub_10001AE98((uint64_t)v114, (uint64_t)v110, (uint64_t *)&unk_100AD6310);
    sub_10001AE98((uint64_t)v114, (uint64_t)v115, (uint64_t *)&unk_100AD6310);
    if (sub_1000D3324((uint64_t)v115) != 1)
    {
      memcpy(v125, v110, sizeof(v125));
      uint64_t v62 = v111;
      unint64_t v63 = v112;
      unint64_t v64 = v113;
      sub_1004A5424(v114, sub_1004A48B8);
      sub_1004A4AF8((uint64_t)v125);
      swift_errorRetain();
      uint64_t v65 = v95;
      sub_1007231B0((uint64_t)v95);
      sub_1004A5424(v114, sub_1004A4CD4);
      swift_errorRelease();
      v65[62] = v62;
      v65[63] = v63;
      *((unsigned char *)v65 + 512) = v64;
      v66._int countAndFlagsBits = (uint64_t)v65;
      Filename.init(rawValue:)(v66);
      sub_1000DBF50((uint64_t)v125);
      sub_1000DBF50((uint64_t)v125);
      return;
    }
    sub_1004A48B0(v109);
    uint64_t v47 = (id *)v109;
LABEL_17:
    sub_10001AE98((uint64_t)v47, (uint64_t)v95, &qword_100ADC000);
    return;
  }
  unint64_t v89 = v24;
  uint64_t v90 = v23;
  uint64_t v32 = v24->n128_u8[8];
  if (v32 == 255)
  {
    uint64_t v33 = (void *)v24[15].n128_u64[0];
    if (!v33)
    {
      uint64_t v108 = -1;
      uint64_t v45 = 65280;
      goto LABEL_21;
    }
    uint64_t v108 = 1;
    uint64_t v43 = v33;
    uint64_t v32 = 0;
  }
  else
  {
    uint64_t v33 = (void *)v24->n128_u64[0];
    uint64_t v108 = 0;
  }
  uint64_t v44 = v108;
  uint64_t v45 = v32 | (v108 << 8);
  if (v108 == 255)
  {
LABEL_21:
    swift_retain();
LABEL_22:
    uint64_t v55 = v127;
    uint64_t v56 = v88;
    if (sub_100758EDC())
    {
      sub_100759334((uint64_t)v56, 0, 0, 3, v119);
      if (v55)
      {
        sub_1004A4F10(v33, v45);
        swift_release();
        return;
      }
      os_log_type_t v57 = v119[0];
      if (v119[0])
      {
        swift_errorRetain();
        swift_release();
        sub_1004A5120((uint64_t)v119);
        sub_1004A4F10(v33, v45);
        Swift::String v58 = v95;
        uint64_t v59 = v89;
        memcpy(v95, v89, 0x1F0uLL);
        v58[62] = v57;
        v58[63] = 0;
        uint64_t v61 = -3;
LABEL_32:
        *((unsigned char *)v58 + 512) = v61;
        uint64_t v72 = v58;
        Filename.init(rawValue:)(*(Swift::String *)(&v60 - 1));
        sub_10035751C((uint64_t)v59);
        return;
      }
      uint64_t v71 = v120;
      if (v120)
      {
        swift_errorRetain();
        swift_release();
        sub_1004A5120((uint64_t)v119);
        sub_1004A4F10(v33, v45);
        Swift::String v58 = v95;
        uint64_t v59 = v89;
        memcpy(v95, v89, 0x1F0uLL);
        v58[62] = v71;
        v58[63] = 0;
        uint64_t v61 = -4;
        goto LABEL_32;
      }
      sub_1004A5120((uint64_t)v119);
    }
    sub_100478FA4(v89, (uint64_t)v56, v115);
    if (v55)
    {
      swift_release();
      sub_1004A4F10(v33, v45);
      return;
    }
    sub_10001AE98((uint64_t)v115, (uint64_t)v110, &qword_100AD6320);
    sub_10001AE98((uint64_t)v110, (uint64_t)v114, &qword_100AD6320);
    if (sub_1000D3324((uint64_t)v114) == 1)
    {
      sub_100722F18((uint64_t)v107);
      long long v73 = sub_100514C2C();
      memcpy(v124, v107, sizeof(v124));
      sub_1004792E4(v124, v73, v109);
      sub_1000DBF50((uint64_t)v124);
      swift_release();
      sub_10001AE98((uint64_t)v109, (uint64_t)v105, &qword_100AD6328);
      sub_10001AE98((uint64_t)v105, (uint64_t)v106, &qword_100AD6328);
      if (sub_1000D3324((uint64_t)v106) != 1)
      {
        unsigned __int8 v78 = v33;
        char v79 = v109[62];
        memcpy(v121, v109, sizeof(v121));
        os_log_type_t v80 = v95;
        sub_1007231B0((uint64_t)v95);
        swift_release();
        sub_1000DBF50((uint64_t)v121);
        int v81 = v78;
        uint64_t v82 = v45;
LABEL_44:
        sub_1004A4F10(v81, v82);
        v80[62] = v79;
        void v80[63] = 0;
        *((unsigned char *)v80 + 512) = -4;
        v83._int countAndFlagsBits = (uint64_t)v80;
        Filename.init(rawValue:)(v83);
        return;
      }
      sub_10047A980((uint64_t)v89);
      sub_10001AE98((uint64_t)v104, (uint64_t)v102, &qword_100AD6320);
      sub_10001AE98((uint64_t)v102, (uint64_t)v103, &qword_100AD6320);
      if (sub_1000D3324((uint64_t)v103) == 1)
      {
        LODWORD(v93) = v45;
        int v127 = a11;
        sub_100722F18((uint64_t)v100);
        sub_100514C2C();
        memcpy(v123, v100, sizeof(v123));
        sub_10047BD7C((uint64_t)v123);
        sub_1000DBF50((uint64_t)v123);
        swift_release();
        sub_10001AE98((uint64_t)&v101, (uint64_t)v98, &qword_100AD6328);
        sub_10001AE98((uint64_t)v98, (uint64_t)v96, &qword_100AD6328);
        sub_10001AE98((uint64_t)v98, (uint64_t)v99, &qword_100AD6328);
        char v84 = sub_1000D3324((uint64_t)v99);
        unint64_t v85 = v93;
        if (v84 == 1)
        {
          swift_release();
          sub_1004A4F10(v33, v85);
          sub_1004A48B0(&v116);
          uint64_t v47 = &v116;
          goto LABEL_17;
        }
        uint64_t v86 = v33;
        char v79 = v97;
        memcpy(v122, v96, sizeof(v122));
        sub_10001AE98((uint64_t)v98, (uint64_t)&v116, &qword_100AD6328);
        sub_1004A4F28((uint64_t)&v116);
        os_log_type_t v80 = v95;
        sub_1007231B0((uint64_t)v95);
        swift_release();
        sub_1000DBF50((uint64_t)v122);
        sub_1004A58A4((uint64_t)v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1004A4CD4);
        int v81 = v86;
        uint64_t v82 = v85;
        goto LABEL_44;
      }
      sub_1004A4F10(v33, v45);
      swift_release();
      id v74 = v104[62];
      uint64_t v75 = v104;
    }
    else
    {
      sub_1004A4F10(v33, v45);
      swift_release();
      id v74 = v115[62];
      uint64_t v75 = v115;
    }
    long long v76 = v95;
    memcpy(v95, v75, 0x1F0uLL);
    v76[62] = v74;
    v76[63] = 0;
    *((unsigned char *)v76 + 512) = -3;
    v77._int countAndFlagsBits = (uint64_t)v76;
    Filename.init(rawValue:)(v77);
    return;
  }
  sub_1004A5158(v33, v32 | (v108 << 8));
  sub_1004A5158(v33, v32 | (v44 << 8));
  swift_retain();
  uint64_t v46 = sub_100495840((uint64_t)&v116, v33, v32 & 0xFFFFFEFF | ((v44 & 1) << 8));
  sub_1000D30C4(v116, v117, v118);
  if (v46)
  {
    sub_1004A4F10(v33, v45);
    goto LABEL_22;
  }
  LODWORD(v93) = v45;
  char v94 = v33;
  uint64_t v48 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v49 = v89;
  sub_10035751C((uint64_t)v89);
  uint64_t v50 = sub_10096B470();
  Swift::String v51 = sub_10096C5B0();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v92 = v50;
    id v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v91 = (void *)swift_slowAlloc();
    unint64_t v116 = v91;
    unint64_t v88 = v52;
    *(_DWORD *)id v52 = 136315138;
    uint64_t v87 = v52 + 4;
    uint64_t v53 = sub_100769260();
    v115[0] = sub_100719D44(v53, v54, (uint64_t *)&v116);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_1000D3440((uint64_t)v49);
    uint64_t v50 = v92;
    _os_log_impl((void *)&_mh_execute_header, v92, v51, "Cycle detected for %s!", v88, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000D3440((uint64_t)v49);
  }

  (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
  uint64_t v67 = v95;
  memcpy(v95, v49, 0x1F0uLL);
  sub_1004A485C();
  v67[62] = swift_allocError();
  *(void *)uint64_t v68 = 16;
  *(unsigned char *)(v68 + 8) = 11;
  sub_10035751C((uint64_t)v49);
  swift_release();
  uint64_t v69 = v94;
  sub_1004A4F10(v94, v93);
  sub_1004A4F10(v69, v32 | (v108 << 8));
  v67[63] = 0;
  *((unsigned char *)v67 + 512) = -6;
  v70._int countAndFlagsBits = (uint64_t)v67;
  Filename.init(rawValue:)(v70);
}

void sub_100472C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100473E38(a1, a2, a3, a4, (uint64_t)sub_1004A7A64, (uint64_t)sub_1004A7B60, (uint64_t)sub_10047A910, (uint64_t)sub_100477914, (uint64_t)sub_100472C7C, (uint64_t)sub_10046EC28, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, void *, void *))sub_100479E70);
}

uint64_t sub_100472D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100473090(a1, a2, a3, a4, a5, sub_1004A7B5C, sub_1004A7B60, sub_10047A910, sub_10047C728, sub_100479E70);
}

void sub_100472DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100473090(a1, a2, a3, a4, a5, (uint64_t)sub_1004A7B5C, (uint64_t)sub_1004A7B60, (uint64_t)sub_10047A910, (void (*)(void *__return_ptr, void **, uint64_t, char *, uint64_t (*)(void), uint64_t))sub_10047C768, (void (*)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))sub_100479E70);
}

void sub_100472E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100473E38(a1, a2, a3, a4, (uint64_t)sub_1004A7A64, (uint64_t)sub_1004A7B60, (uint64_t)sub_10047A910, (uint64_t)sub_100477940, (uint64_t)sub_100472E30, (uint64_t)sub_10046EC54, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, void *, void *))sub_100479E70);
}

void sub_100472EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100473E38(a1, a2, a3, a4, (uint64_t)sub_1004A5220, (uint64_t)sub_1004A7B60, (uint64_t)sub_10047A910, (uint64_t)sub_100476F30, (uint64_t)sub_100472EDC, (uint64_t)sub_10046DB28, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, void *, void *))sub_100479E00);
}

uint64_t sub_100472F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100473090(a1, a2, a3, a4, a5, sub_1004A59FC, sub_1004A7B60, sub_10047A910, sub_10047B338, sub_100479E00);
}

uint64_t sub_10047300C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100473090(a1, a2, a3, a4, a5, sub_1004A7B5C, sub_1004A7B60, sub_10047A910, sub_10047B378, sub_100479E00);
}

void sub_100473090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void *__return_ptr, void **, uint64_t, char *, uint64_t (*)(void), uint64_t), void (*a10)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))
{
  uint64_t v11 = (void **)__chkstk_darwin(a1);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v102 = v10;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v135 = v11;
  Swift::String v101 = v26;
  uint64_t v27 = sub_10096B480();
  uint64_t v99 = *(void *)(v27 - 8);
  uint64_t v100 = v27;
  uint64_t v28 = __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v93 - v30;
  uint64_t v96 = v21;
  uint64_t v97 = v19;
  v103[2] = v21;
  v103[3] = v19;
  char v98 = (char *)v23;
  if (v23 <= 9)
  {
    uint64_t v32 = v29;
    sub_10002B7CC(&qword_100AD6360);
    uint64_t v33 = swift_dynamicCastClass();
    if (!v33)
    {
      double v46 = sub_1007231B0((uint64_t)v114);
      uint64_t v47 = (*(uint64_t (**)(double))(*(void *)v25 + 176))(v46);
      memcpy(v134, v114, 0x1F0uLL);
      uint64_t v48 = v102;
      sub_1004711CC((uint64_t)v134, v47, (uint64_t)v98, v17, (uint64_t)v103, v15, (uint64_t)sub_100472DAC, v13, (void (*)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))sub_10047B378);
      if (v48)
      {
        sub_1000D3440((uint64_t)v134);
        swift_release();
        return;
      }
      sub_1000D3440((uint64_t)v134);
      swift_release();
      sub_10001AE98((uint64_t)&v124, (uint64_t)v122, &qword_100ADC000);
      sub_10001AE98((uint64_t)v122, (uint64_t)v118, &qword_100ADC000);
      sub_10001AE98((uint64_t)v122, (uint64_t)v123, &qword_100ADC000);
      if (sub_1000D3324((uint64_t)v123) != 1)
      {
        memcpy(v133, v118, sizeof(v133));
        uint64_t v68 = v119;
        uint64_t v69 = v120;
        char v70 = v121;
        sub_1004A5424(v122, sub_1004A5228);
        sub_10035751C((uint64_t)v133);
        swift_errorRetain();
        uint64_t v71 = v101;
        sub_100722F18((uint64_t)v101);
        sub_1004A5424(v122, sub_1004A5500);
        swift_errorRelease();
        v71[62] = v68;
        v71[63] = v69;
        *((unsigned char *)v71 + 512) = v70;
        v72._int countAndFlagsBits = (uint64_t)v71;
        Filename.init(rawValue:)(v72);
        sub_1000D3440((uint64_t)v133);
        sub_1000D3440((uint64_t)v133);
        return;
      }
      sub_1004A48B0(v117);
      Swift::String v51 = v117;
LABEL_16:
      sub_10001AE98((uint64_t)v51, (uint64_t)v101, (uint64_t *)&unk_100AD6310);
      return;
    }
    uint64_t v34 = v33;
    uint64_t v95 = v25;
    uint64_t v35 = v135;
    uint64_t v36 = (char *)*v135;
    uint64_t v93 = v17;
    if (v36)
    {
      int v37 = 0;
      uint64_t v38 = v36;
    }
    else
    {
      int v37 = *((unsigned __int8 *)v135 + 208);
      if (v37 == 255)
      {
        uint64_t v38 = 0;
        unsigned __int8 v116 = -1;
        uint64_t v50 = 65280;
        id v63 = 0;
        swift_retain();
        uint64_t v62 = v102;
        goto LABEL_23;
      }
      uint64_t v38 = (char *)v135[25];
    }
    unsigned __int8 v116 = v36 == 0;
    unsigned int v94 = v37 | ((v36 == 0) << 8);
    if (v36)
    {
      uint64_t v50 = v94;
      sub_1004A5978(v38, v94);
      id v52 = v38;
      char v49 = 0;
    }
    else
    {
      char v49 = v37;
      uint64_t v50 = v94;
    }
    char v124 = v38;
    char v125 = v49;
    BOOL v126 = v36 == 0;
    uint64_t v53 = v36;
    swift_retain();
    char v54 = v96(&v124);
    sub_1004A5208(v38, v50);
    sub_1004A5208(v38, v50);
    if (v54)
    {
      char v98 = v38;
      id v55 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      uint64_t v56 = v135;
      sub_1004A4AF8((uint64_t)v135);
      os_log_type_t v57 = sub_10096B470();
      os_log_type_t v58 = sub_10096C5B0();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v97 = swift_slowAlloc();
        char v124 = (char *)v97;
        *(_DWORD *)uint64_t v59 = 136315138;
        uint64_t v96 = (uint64_t (*)(char **))(v59 + 4);
        uint64_t v60 = sub_100769B78();
        v123[0] = sub_100719D44(v60, v61, (uint64_t *)&v124);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        sub_1000DBF50((uint64_t)v56);
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "Cycle detected for %s!", v59, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1000DBF50((uint64_t)v56);
      }

      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v32, v100);
      long long v73 = v101;
      memcpy(v101, v56, 0x1F0uLL);
      sub_1004A485C();
      v73[62] = swift_allocError();
      *(void *)uint64_t v74 = 16;
      *(unsigned char *)(v74 + 8) = 11;
      sub_1004A4AF8((uint64_t)v56);
      swift_release();
      uint64_t v75 = v98;
      sub_1004A5208(v98, v94);
      sub_1004A5208(v75, v37 | (v116 << 8));
      v73[63] = 0;
      *((unsigned char *)v73 + 512) = -6;
      v76._int countAndFlagsBits = (uint64_t)v73;
      Filename.init(rawValue:)(v76);
      return;
    }
    sub_1004A5208(v38, v50);
    uint64_t v62 = v102;
    uint64_t v35 = v135;
LABEL_23:
    if (sub_1007590F8())
    {
      sub_10075A1FC(v34, 0, 0, 3, v127);
      if (v62)
      {
        sub_1004A5208(v38, v50);
        swift_release();
        return;
      }
      uint64_t v64 = v127[0];
      if (v127[0])
      {
        swift_errorRetain();
        swift_release();
        sub_1004A5120((uint64_t)v127);
        sub_1004A5208(v38, v50);
        uint64_t v65 = v101;
        memcpy(v101, v35, 0x1F0uLL);
        v65[62] = v64;
        v65[63] = 0;
        char v67 = -3;
LABEL_33:
        *((unsigned char *)v65 + 512) = v67;
        unsigned __int8 v78 = v65;
        Filename.init(rawValue:)(*(Swift::String *)(&v66 - 1));
        sub_1004A4AF8((uint64_t)v35);
        return;
      }
      uint64_t v77 = v128;
      if (v128)
      {
        swift_errorRetain();
        swift_release();
        sub_1004A5120((uint64_t)v127);
        sub_1004A5208(v38, v50);
        uint64_t v65 = v101;
        memcpy(v101, v35, 0x1F0uLL);
        v65[62] = v77;
        v65[63] = 0;
        char v67 = -4;
        goto LABEL_33;
      }
      sub_1004A5120((uint64_t)v127);
    }
    sub_1004792E4(v35, v34, v123);
    if (v62)
    {
      swift_release();
      sub_1004A5208(v38, v50);
      return;
    }
    sub_10001AE98((uint64_t)v123, (uint64_t)v118, &qword_100AD6328);
    sub_10001AE98((uint64_t)v118, (uint64_t)v122, &qword_100AD6328);
    if (sub_1000D3324((uint64_t)v122) == 1)
    {
      sub_1007231B0((uint64_t)v115);
      uint64_t v79 = sub_100514C4C();
      memcpy(v132, v115, sizeof(v132));
      sub_100478FA4(v132, v79, v117);
      sub_1000D3440((uint64_t)v132);
      swift_release();
      sub_10001AE98((uint64_t)v117, (uint64_t)v113, &qword_100AD6320);
      sub_10001AE98((uint64_t)v113, (uint64_t)v114, &qword_100AD6320);
      if (sub_1000D3324((uint64_t)v114) != 1)
      {
        uint64_t v87 = v38;
        uint64_t v88 = v117[62];
        memcpy(v129, v117, sizeof(v129));
        unint64_t v89 = v101;
        sub_100722F18((uint64_t)v101);
        swift_release();
        sub_1000D3440((uint64_t)v129);
        uint64_t v90 = v87;
        uint64_t v91 = v50;
        goto LABEL_45;
      }
      char v84 = v98 + 1;
      a9(v112, v35, v34, v98 + 1, (uint64_t (*)(void))v96, v97);
      sub_10001AE98((uint64_t)v112, (uint64_t)v110, &qword_100AD6328);
      sub_10001AE98((uint64_t)v110, (uint64_t)v111, &qword_100AD6328);
      if (sub_1000D3324((uint64_t)v111) == 1)
      {
        unsigned int v94 = v50;
        unint64_t v85 = v38;
        sub_1007231B0((uint64_t)v108);
        uint64_t v86 = sub_100514C4C();
        memcpy(v131, v108, sizeof(v131));
        a10(v109, v131, v86, v84, v93, v103);
        sub_1000D3440((uint64_t)v131);
        swift_release();
        sub_10001AE98((uint64_t)v109, (uint64_t)v106, &qword_100AD6320);
        sub_10001AE98((uint64_t)v106, (uint64_t)v104, &qword_100AD6320);
        sub_10001AE98((uint64_t)v106, (uint64_t)v107, &qword_100AD6320);
        if (sub_1000D3324((uint64_t)v107) == 1)
        {
          swift_release();
          sub_1004A5208(v38, v94);
          sub_1004A48B0(&v124);
          Swift::String v51 = (uint64_t *)&v124;
          goto LABEL_16;
        }
        uint64_t v88 = v105;
        memcpy(v130, v104, sizeof(v130));
        sub_10001AE98((uint64_t)v106, (uint64_t)&v124, &qword_100AD6320);
        sub_1004A56FC((uint64_t)&v124);
        unint64_t v89 = v101;
        sub_100722F18((uint64_t)v101);
        swift_release();
        sub_1000D3440((uint64_t)v130);
        sub_1004A58A4((uint64_t)v106, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1004A5500);
        uint64_t v90 = v85;
        uint64_t v91 = v94;
LABEL_45:
        sub_1004A5208(v90, v91);
        v89[62] = v88;
        v89[63] = 0;
        *((unsigned char *)v89 + 512) = -4;
        v92._int countAndFlagsBits = (uint64_t)v89;
        Filename.init(rawValue:)(v92);
        return;
      }
      sub_1004A5208(v38, v50);
      swift_release();
      uint64_t v80 = v112[62];
      int v81 = v112;
    }
    else
    {
      sub_1004A5208(v38, v50);
      swift_release();
      uint64_t v80 = v123[62];
      int v81 = v123;
    }
    uint64_t v82 = v101;
    memcpy(v101, v81, 0x1F0uLL);
    v82[62] = v80;
    v82[63] = 0;
    *((unsigned char *)v82 + 512) = -3;
    v83._int countAndFlagsBits = (uint64_t)v82;
    Filename.init(rawValue:)(v83);
    return;
  }
  id v39 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v40 = sub_10096B470();
  os_log_type_t v41 = sub_10096C5B0();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Recursion too deep - aborting", v42, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v99 + 8))(v31, v100);
  uint64_t v43 = v101;
  uint64_t v44 = (uint64_t)v135;
  memcpy(v101, v135, 0x1F0uLL);
  sub_1004A485C();
  v43[62] = swift_allocError();
  *(void *)v45._object = 15;
  *((unsigned char *)v45._object + 8) = 11;
  v43[63] = 0;
  *((unsigned char *)v43 + 512) = -6;
  v45._int countAndFlagsBits = (uint64_t)v43;
  Filename.init(rawValue:)(v45);
  sub_1004A4AF8(v44);
}

void sub_100473D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100473E38(a1, a2, a3, a4, (uint64_t)sub_1004A5220, (uint64_t)sub_1004A7B60, (uint64_t)sub_10047A910, (uint64_t)sub_100477418, (uint64_t)sub_100473D8C, (uint64_t)sub_10046E3A0, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, void *, void *))sub_100479E00);
}

void sub_100473E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, void *, void *))
{
  uint64_t v12 = __chkstk_darwin(a1);
  uint64_t v96 = v13;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v98 = v18;
  uint64_t v134 = v11;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v25 = (void **)v12;
  Swift::String v101 = v26;
  uint64_t v27 = sub_10096B480();
  uint64_t v99 = *(void *)(v27 - 8);
  uint64_t v100 = v27;
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v92 - v31;
  uint64_t v97 = v20;
  v102[2] = v20;
  if (v22 > 9)
  {
    id v37 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v38 = sub_10096B470();
    os_log_type_t v39 = sub_10096C5B0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Recursion too deep - aborting", v40, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v99 + 8))(v32, v100);
    os_log_type_t v41 = v101;
    memcpy(v101, v25, 0x1F0uLL);
    sub_1004A485C();
    v41[62] = swift_allocError();
    *(void *)v42._object = 15;
    *((unsigned char *)v42._object + 8) = 11;
    v41[63] = 0;
    *((unsigned char *)v41 + 512) = -6;
    v42._int countAndFlagsBits = (uint64_t)v41;
    Filename.init(rawValue:)(v42);
    sub_1004A4AF8((uint64_t)v25);
  }
  else
  {
    sub_10002B7CC(&qword_100AD6360);
    uint64_t v94 = swift_dynamicCastClass();
    if (!v94)
    {
      double v43 = sub_1007231B0((uint64_t)v113);
      uint64_t v44 = (*(uint64_t (**)(double))(*(void *)v24 + 176))(v43);
      memcpy(v133, v113, 0x1F0uLL);
      uint64_t v45 = v134;
      sub_1004711CC((uint64_t)v133, v44, v22, (uint64_t)v98, (uint64_t)v102, v17, (uint64_t)sub_100472DAC, v15, (void (*)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))sub_10047B378);
      if (v45)
      {
        sub_1000D3440((uint64_t)v133);
        swift_release();
        return;
      }
      sub_1000D3440((uint64_t)v133);
      swift_release();
      sub_10001AE98((uint64_t)&v123, (uint64_t)v121, &qword_100ADC000);
      sub_10001AE98((uint64_t)v121, (uint64_t)v117, &qword_100ADC000);
      sub_10001AE98((uint64_t)v121, (uint64_t)v122, &qword_100ADC000);
      if (sub_1000D3324((uint64_t)v122) != 1)
      {
        memcpy(v132, v117, sizeof(v132));
        uint64_t v70 = v118;
        uint64_t v71 = v119;
        char v72 = v120;
        sub_1004A5424(v121, sub_1004A5228);
        sub_10035751C((uint64_t)v132);
        swift_errorRetain();
        long long v73 = v101;
        sub_100722F18((uint64_t)v101);
        sub_1004A5424(v121, sub_1004A5500);
        swift_errorRelease();
        v73[62] = v70;
        v73[63] = v71;
        *((unsigned char *)v73 + 512) = v72;
        v74._int countAndFlagsBits = (uint64_t)v73;
        Filename.init(rawValue:)(v74);
        sub_1000D3440((uint64_t)v132);
        sub_1000D3440((uint64_t)v132);
        return;
      }
      sub_1004A48B0(v116);
      uint64_t v56 = (id *)v116;
LABEL_18:
      sub_10001AE98((uint64_t)v56, (uint64_t)v101, (uint64_t *)&unk_100AD6310);
      return;
    }
    uint64_t v95 = v24;
    uint64_t v33 = v25;
    uint64_t v34 = *v25;
    if (*v25)
    {
      int v35 = 0;
      uint64_t v36 = *v25;
    }
    else
    {
      int v35 = *((unsigned __int8 *)v25 + 208);
      if (v35 == 255)
      {
        uint64_t v53 = 0;
        unsigned __int8 v115 = -1;
        uint64_t v52 = 65280;
        id v64 = 0;
        swift_retain();
        uint64_t v55 = v134;
LABEL_22:
        uint64_t v65 = v94;
        if (sub_1007590F8())
        {
          sub_10075A1FC(v65, 0, 0, 3, v126);
          if (v55)
          {
            sub_1004A5208(v53, v52);
            swift_release();
            return;
          }
          uint64_t v66 = v126[0];
          if (v126[0])
          {
            swift_errorRetain();
            swift_release();
            sub_1004A5120((uint64_t)v126);
            sub_1004A5208(v53, v52);
            char v67 = v101;
            memcpy(v101, v33, 0x1F0uLL);
            v67[62] = v66;
            v67[63] = 0;
            char v69 = -3;
LABEL_32:
            *((unsigned char *)v67 + 512) = v69;
            uint64_t v80 = v67;
            Filename.init(rawValue:)(*(Swift::String *)(&v68 - 1));
            sub_1004A4AF8((uint64_t)v33);
            return;
          }
          uint64_t v79 = v127;
          if (v127)
          {
            swift_errorRetain();
            swift_release();
            sub_1004A5120((uint64_t)v126);
            sub_1004A5208(v53, v52);
            char v67 = v101;
            memcpy(v101, v33, 0x1F0uLL);
            v67[62] = v79;
            v67[63] = 0;
            char v69 = -4;
            goto LABEL_32;
          }
          sub_1004A5120((uint64_t)v126);
        }
        sub_1004792E4(v33, v65, v122);
        if (v55)
        {
          swift_release();
          sub_1004A5208(v53, v52);
          return;
        }
        sub_10001AE98((uint64_t)v122, (uint64_t)v117, &qword_100AD6328);
        sub_10001AE98((uint64_t)v117, (uint64_t)v121, &qword_100AD6328);
        if (sub_1000D3324((uint64_t)v121) == 1)
        {
          sub_1007231B0((uint64_t)v114);
          uint64_t v81 = sub_100514C4C();
          memcpy(v131, v114, sizeof(v131));
          sub_100478FA4(v131, v81, v116);
          unsigned int v93 = v52;
          sub_1000D3440((uint64_t)v131);
          swift_release();
          sub_10001AE98((uint64_t)v116, (uint64_t)v112, &qword_100AD6320);
          sub_10001AE98((uint64_t)v112, (uint64_t)v113, &qword_100AD6320);
          if (sub_1000D3324((uint64_t)v113) != 1)
          {
            uint64_t v87 = v53;
            uint64_t v88 = v116[62];
            memcpy(v128, v116, sizeof(v128));
            unint64_t v89 = v101;
            sub_100722F18((uint64_t)v101);
            swift_release();
            sub_1000D3440((uint64_t)v128);
LABEL_43:
            sub_1004A5208(v87, v93);
            v89[62] = v88;
            v89[63] = 0;
            *((unsigned char *)v89 + 512) = -4;
            v90._int countAndFlagsBits = (uint64_t)v89;
            Filename.init(rawValue:)(v90);
            return;
          }
          uint64_t v86 = v22 + 1;
          sub_10047BD7C((uint64_t)v33);
          sub_10001AE98((uint64_t)v111, (uint64_t)v109, &qword_100AD6328);
          sub_10001AE98((uint64_t)v109, (uint64_t)v110, &qword_100AD6328);
          if (sub_1000D3324((uint64_t)v110) == 1)
          {
            uint64_t v87 = v53;
            sub_1007231B0((uint64_t)v107);
            uint64_t v91 = sub_100514C4C();
            memcpy(v130, v107, sizeof(v130));
            a11(v108, v130, v91, v86, v98, v102);
            sub_1000D3440((uint64_t)v130);
            swift_release();
            sub_10001AE98((uint64_t)v108, (uint64_t)v105, &qword_100AD6320);
            sub_10001AE98((uint64_t)v105, (uint64_t)v103, &qword_100AD6320);
            sub_10001AE98((uint64_t)v105, (uint64_t)v106, &qword_100AD6320);
            if (sub_1000D3324((uint64_t)v106) == 1)
            {
              swift_release();
              sub_1004A5208(v53, v93);
              sub_1004A48B0(&v123);
              uint64_t v56 = &v123;
              goto LABEL_18;
            }
            uint64_t v88 = v104;
            memcpy(v129, v103, sizeof(v129));
            sub_10001AE98((uint64_t)v105, (uint64_t)&v123, &qword_100AD6320);
            sub_1004A56FC((uint64_t)&v123);
            unint64_t v89 = v101;
            sub_100722F18((uint64_t)v101);
            swift_release();
            sub_1000D3440((uint64_t)v129);
            sub_1004A58A4((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1004A5500);
            goto LABEL_43;
          }
          sub_1004A5208(v53, v93);
          swift_release();
          uint64_t v82 = v111[62];
          Swift::String v83 = v111;
        }
        else
        {
          sub_1004A5208(v53, v52);
          swift_release();
          uint64_t v82 = v122[62];
          Swift::String v83 = v122;
        }
        char v84 = v101;
        memcpy(v101, v83, 0x1F0uLL);
        v84[62] = v82;
        v84[63] = 0;
        *((unsigned char *)v84 + 512) = -3;
        v85._int countAndFlagsBits = (uint64_t)v84;
        Filename.init(rawValue:)(v85);
        return;
      }
      uint64_t v36 = v25[25];
    }
    unsigned __int8 v115 = v34 == 0;
    unsigned int v93 = v35 | ((v34 == 0) << 8);
    uint64_t v92 = v22;
    int v46 = v35;
    if (v34)
    {
      sub_1004A5978(v36, v93);
      id v47 = v36;
      int v46 = 0;
    }
    uint64_t v48 = v36;
    char v49 = v36;
    uint64_t v50 = v93;
    sub_1004A5978(v48, v93);
    id v51 = v34;
    swift_retain();
    uint64_t v52 = v50;
    uint64_t v53 = v49;
    char v54 = sub_100495840((uint64_t)&v123, v49, v46 | ((v34 != 0) << 8));
    sub_1000D30C4(v123, v124, v125);
    sub_1004A5208(v49, v52);
    if (v54)
    {
      sub_1004A5208(v49, v52);
      uint64_t v55 = v134;
      uint64_t v33 = v25;
      uint64_t v22 = v92;
      goto LABEL_22;
    }
    char v98 = v49;
    id v57 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    os_log_type_t v58 = v25;
    sub_1004A4AF8((uint64_t)v25);
    uint64_t v59 = sub_10096B470();
    os_log_type_t v60 = sub_10096C5B0();
    if (os_log_type_enabled(v59, v60))
    {
      unint64_t v61 = (uint8_t *)swift_slowAlloc();
      uint64_t v97 = (void *)swift_slowAlloc();
      id v123 = v97;
      *(_DWORD *)unint64_t v61 = 136315138;
      uint64_t v96 = v61 + 4;
      uint64_t v62 = sub_100769B78();
      v122[0] = sub_100719D44(v62, v63, (uint64_t *)&v123);
      uint64_t v52 = v93;
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_1000DBF50((uint64_t)v58);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Cycle detected for %s!", v61, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000DBF50((uint64_t)v58);
    }

    (*(void (**)(char *, uint64_t))(v99 + 8))(v30, v100);
    uint64_t v75 = v101;
    memcpy(v101, v58, 0x1F0uLL);
    sub_1004A485C();
    v75[62] = swift_allocError();
    *(void *)uint64_t v76 = 16;
    *(unsigned char *)(v76 + 8) = 11;
    sub_1004A4AF8((uint64_t)v58);
    swift_release();
    uint64_t v77 = v98;
    sub_1004A5208(v98, v52);
    sub_1004A5208(v77, v35 | (v115 << 8));
    v75[63] = 0;
    *((unsigned char *)v75 + 512) = -6;
    v78._int countAndFlagsBits = (uint64_t)v75;
    Filename.init(rawValue:)(v78);
  }
}

uint64_t sub_100474B40@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(char *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v291 = a5;
  uint64_t v290 = a4;
  uint64_t v307 = a3;
  uint64_t v309 = (uint64_t *)a1;
  uint64_t v305 = (char *)a6;
  uint64_t v8 = *(void *)(*(void *)a2 + 80);
  uint64_t v9 = *(uint8_t **)(*(void *)a2 + 104);
  uint64_t v10 = *(uint8_t **)(*(void *)a2 + 96);
  uint64_t v310 = *(void *)(*(void *)a2 + 88);
  uint64_t v7 = v310;
  uint64_t v311 = v8;
  uint64_t v312 = v9;
  uint64_t v313 = (uint64_t)v10;
  uint64_t v11 = type metadata accessor for ItemReconciliation();
  uint64_t v12 = sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v273 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v14 = __chkstk_darwin(TupleTypeMetadata3);
  uint64_t v268 = (char *)&v248 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v267 = (char *)&v248 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  os_log_type_t v266 = (char *)&v248 - v19;
  __chkstk_darwin(v18);
  uint64_t v271 = (char *)&v248 - v20;
  uint64_t v279 = v21;
  uint64_t v277 = sub_10096C890();
  uint64_t v276 = *(void *)(v277 - 8);
  uint64_t v22 = __chkstk_darwin(v277);
  id v272 = (char *)&v248 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v287 = (char *)&v248 - v24;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v259 = sub_10096C890();
  uint64_t v258 = *(void *)(v259 - 8);
  uint64_t v25 = __chkstk_darwin(v259);
  id v252 = (char *)&v248 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  os_log_type_t v255 = (char *)&v248 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v263 = (uint64_t)&v248 - v30;
  uint64_t v286 = v11;
  uint64_t v285 = *(void *)(v11 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  double v284 = (uint64_t *)((char *)&v248 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v251 = (char *)&v248 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v254 = (uint64_t)&v248 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v262 = (uint64_t)&v248 - v38;
  __chkstk_darwin(v37);
  uint64_t v257 = (char *)&v248 - v39;
  uint64_t v310 = v8;
  uint64_t v311 = v7;
  uint64_t v312 = v10;
  uint64_t v313 = (uint64_t)v9;
  uint64_t v40 = (int *)type metadata accessor for ItemReconciliation();
  os_log_type_t v304 = (char *)v12;
  uint64_t v270 = swift_getTupleTypeMetadata2();
  uint64_t v264 = sub_10096C890();
  uint64_t v265 = *(void *)(v264 - 8);
  uint64_t v41 = __chkstk_darwin(v264);
  uint64_t v256 = (char *)&v248 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v278 = (uint64_t)&v248 - v44;
  uint64_t v308 = (uint64_t)v40;
  uint64_t v301 = *((void *)v40 - 1);
  uint64_t v45 = __chkstk_darwin(v43);
  unint64_t v253 = (char *)&v248 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v45);
  os_log_t v261 = (char *)&v248 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  unint64_t v269 = (char *)&v248 - v50;
  __chkstk_darwin(v49);
  uint64_t v275 = (char *)&v248 - v51;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t v302 = v10;
  uint64_t v303 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  double v298 = (uint8_t *)v7;
  uint64_t v55 = swift_getAssociatedConformanceWitness();
  uint64_t v310 = AssociatedTypeWitness;
  uint64_t v311 = v53;
  uint64_t v312 = (uint8_t *)AssociatedConformanceWitness;
  uint64_t v313 = v55;
  uint64_t v56 = type metadata accessor for ReconciliationID();
  uint64_t v293 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  unint64_t v295 = (char *)&v248 - v57;
  uint64_t v283 = sub_10096C890();
  uint64_t v282 = *(void *)(v283 - 8);
  uint64_t v58 = __chkstk_darwin(v283);
  os_log_type_t v281 = (char *)&v248 - v59;
  uint64_t v280 = *(void *)(v53 - 8);
  __chkstk_darwin(v58);
  unint64_t v274 = (char *)&v248 - v60;
  uint64_t v61 = sub_10096C890();
  uint64_t v289 = *(void *)(v61 - 8);
  uint64_t v62 = __chkstk_darwin(v61);
  id v64 = (char *)&v248 - v63;
  uint64_t v65 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v62);
  char v67 = (char *)&v248 - v66;
  uint64_t v294 = (uint64_t (*)(void, void, void))v56;
  uint64_t v296 = sub_10096C890();
  uint64_t v292 = *(void *)(v296 - 8);
  uint64_t v68 = __chkstk_darwin(v296);
  int v288 = (char *)&v248 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v68);
  uint64_t v297 = (char *)&v248 - v70;
  uint64_t v300 = sub_10096B480();
  uint64_t v299 = *(void *)(v300 - 8);
  uint64_t v71 = __chkstk_darwin(v300);
  __chkstk_darwin(v71);
  Swift::String v74 = (char *)&v248 - v73;
  if (v307 >= 10)
  {
    id v89 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    Swift::String v90 = sub_10096B470();
    os_log_type_t v91 = sub_10096C5B0();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v92 = 0;
      _os_log_impl((void *)&_mh_execute_header, v90, v91, "Recursion too deep - aborting", v92, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v299 + 8))(v74, v300);
    unsigned int v93 = (int *)v308;
    uint64_t v94 = swift_getTupleTypeMetadata3();
    uint64_t v95 = *(int *)(v94 + 48);
    uint64_t v96 = (uint64_t)v305;
    uint64_t v97 = &v305[*(int *)(v94 + 64)];
    (*(void (**)(char *, uint64_t *, int *))(v301 + 16))(v305, v309, v93);
    sub_1004A485C();
    *(void *)(v96 + v95) = swift_allocError();
    *(void *)uint64_t v98 = 15;
    *(unsigned char *)(v98 + 8) = 11;
    *(void *)uint64_t v97 = 0;
    v97[8] = -6;
    uint64_t v99 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56);
    uint64_t v100 = v96;
    return v99(v100, 0, 1, v94);
  }
  uint64_t v250 = v72;
  uint64_t v75 = v298;
  uint64_t v310 = v303;
  uint64_t v311 = (uint64_t)v298;
  uint64_t v312 = v302;
  uint64_t v313 = (uint64_t)v9;
  type metadata accessor for ConcreteDatabase();
  uint64_t v76 = (uint64_t *)swift_dynamicCastClass();
  if (v76)
  {
    double v284 = v76;
    uint64_t v287 = a2;
    uint64_t v77 = v289;
    uint64_t v78 = (uint64_t)v309;
    (*(void (**)(char *, uint64_t *, uint64_t))(v289 + 16))(v64, v309, v61);
    int v79 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48))(v64, 1, AssociatedTypeWitness);
    uint64_t v249 = v9;
    if (v79 == 1)
    {
      uint64_t v80 = *(void (**)(char *, uint64_t))(v77 + 8);
      swift_retain();
      v80(v64, v61);
      uint64_t v81 = (int *)v308;
      uint64_t v82 = v282;
      Swift::String v83 = v281;
      uint64_t v84 = v283;
      (*(void (**)(char *, uint64_t, uint64_t))(v282 + 16))(v281, v78 + *(int *)(v308 + 52), v283);
      uint64_t v85 = v280;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v280 + 48))(v83, 1, v53) == 1)
      {
        (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
        uint64_t v86 = v293;
        uint64_t v87 = v297;
        uint64_t v88 = v294;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t (*)(void, void, void)))(v293 + 56))(v297, 1, 1, v294);
      }
      else
      {
        unint64_t v109 = *(void (**)(void))(v85 + 32);
        ((void (*)(char *, char *, uint64_t))v109)(v274, v83, v53);
        uint64_t v87 = v297;
        v109();
        uint64_t v88 = v294;
        swift_storeEnumTagMultiPayload();
        uint64_t v86 = v293;
        (*(void (**)(char *, void, uint64_t, uint64_t (*)(void, void, void)))(v293 + 56))(v87, 0, 1, v88);
      }
    }
    else
    {
      uint64_t v108 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
      v108(v67, v64, AssociatedTypeWitness);
      uint64_t v87 = v297;
      v108(v297, v67, AssociatedTypeWitness);
      uint64_t v88 = v294;
      swift_storeEnumTagMultiPayload();
      uint64_t v86 = v293;
      (*(void (**)(char *, void, uint64_t, uint64_t (*)(void, void, void)))(v293 + 56))(v87, 0, 1, v88);
      swift_retain();
      uint64_t v81 = (int *)v308;
    }
    uint64_t v110 = v292;
    uint64_t v111 = v296;
    uint64_t v112 = v288;
    (*(void (**)(char *, char *, uint64_t))(v292 + 16))(v288, v87, v296);
    int v113 = (*(uint64_t (**)(char *, uint64_t, void))(v86 + 48))(v112, 1, v88);
    uint64_t v114 = v112;
    unsigned __int8 v115 = v295;
    if (v113 == 1)
    {
      (*(void (**)(char *, uint64_t))(v110 + 8))(v114, v111);
      uint64_t v116 = v306;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t (*)(void, void, void)))(v86 + 32))(v295, v114, v88);
      if (v290(v115))
      {
        id v117 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v118 = v301;
        uint64_t v119 = v275;
        char v120 = *(void (**)(char *, uint64_t *, int *))(v301 + 16);
        v120(v275, v309, v81);
        char v121 = sub_10096B470();
        os_log_type_t v122 = sub_10096C5B0();
        BOOL v123 = os_log_type_enabled(v121, v122);
        uint64_t v307 = (uint64_t)v120;
        if (v123)
        {
          unsigned __int8 v124 = (uint8_t *)swift_slowAlloc();
          uint64_t v303 = swift_slowAlloc();
          uint64_t v310 = v303;
          uint64_t v302 = v124;
          *(_DWORD *)unsigned __int8 v124 = 136315138;
          double v298 = v124 + 4;
          char v125 = v269;
          v120(v269, (uint64_t *)v119, v81);
          BOOL v126 = *(void (**)(char *, uint64_t))(v118 + 8);
          v126(v119, v308);
          uint64_t v127 = sub_10082F470(v308);
          unint64_t v129 = v128;
          v126(v125, v308);
          uint64_t v81 = (int *)v308;
          uint64_t v316 = sub_100719D44(v127, v129, &v310);
          sub_10096C8C0();
          uint64_t v130 = (uint64_t)v309;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v121, v122, "Cycle detected for %s!", v302, 0xCu);
          swift_arrayDestroy();
          uint64_t v110 = v292;
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(uint64_t, uint64_t))(v299 + 8))(v250, v300);
        }
        else
        {
          (*(void (**)(char *, int *))(v118 + 8))(v119, v81);

          (*(void (**)(uint64_t, uint64_t))(v299 + 8))(v250, v300);
          uint64_t v130 = (uint64_t)v309;
        }
        uint64_t v158 = swift_getTupleTypeMetadata3();
        uint64_t v159 = *(int *)(v158 + 48);
        uint64_t v160 = (uint64_t)v305;
        uint64_t v161 = &v305[*(int *)(v158 + 64)];
        ((void (*)(char *, uint64_t, int *))v307)(v305, v130, v81);
        sub_1004A485C();
        *(void *)(v160 + v159) = swift_allocError();
        *(void *)uint64_t v162 = 16;
        *(unsigned char *)(v162 + 8) = 11;
        swift_release();
        (*(void (**)(char *, uint64_t (*)(void, void, void)))(v293 + 8))(v295, v294);
        (*(void (**)(char *, uint64_t))(v110 + 8))(v297, v296);
        *(void *)uint64_t v161 = 0;
        v161[8] = -6;
        Swift::String v163 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56);
        uint64_t v164 = v160;
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t (*)(void, void, void)))(v86 + 8))(v115, v88);
      uint64_t v116 = v306;
      uint64_t v78 = (uint64_t)v309;
    }
    if (sub_10082C738((uint64_t)v81))
    {
      sub_10082CFA4((uint64_t)v284, 0, 0, 3, v81, &v314);
      if (v116)
      {
        (*(void (**)(char *, uint64_t))(v110 + 8))(v87, v111);
        return swift_release();
      }
      uint64_t v152 = v314;
      if (v314)
      {
        swift_errorRetain();
        swift_release();
        sub_1004A5120((uint64_t)&v314);
        (*(void (**)(char *, uint64_t))(v110 + 8))(v87, v111);
        uint64_t v153 = swift_getTupleTypeMetadata3();
        uint64_t v154 = *(int *)(v153 + 48);
        uint64_t v155 = (uint64_t)v305;
        uint64_t v156 = &v305[*(int *)(v153 + 64)];
        (*(void (**)(char *, uint64_t, int *))(v301 + 16))(v305, v78, v81);
        *(void *)(v155 + v154) = v152;
        *(void *)uint64_t v156 = 0;
        char v157 = -3;
LABEL_38:
        v156[8] = v157;
        Swift::String v163 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56);
        uint64_t v164 = v155;
        uint64_t v199 = v153;
        return v163(v164, 0, 1, v199);
      }
      uint64_t v200 = v315;
      if (v315)
      {
        swift_errorRetain();
        swift_release();
        sub_1004A5120((uint64_t)&v314);
        (*(void (**)(char *, uint64_t))(v110 + 8))(v87, v111);
        uint64_t v153 = swift_getTupleTypeMetadata3();
        uint64_t v201 = *(int *)(v153 + 48);
        uint64_t v155 = (uint64_t)v305;
        uint64_t v156 = &v305[*(int *)(v153 + 64)];
        (*(void (**)(char *, uint64_t, int *))(v301 + 16))(v305, v78, v81);
        *(void *)(v155 + v201) = v200;
        *(void *)uint64_t v156 = 0;
        char v157 = -4;
        goto LABEL_38;
      }
      sub_1004A5120((uint64_t)&v314);
    }
    uint64_t v131 = v278;
    sub_100479634(v78, v284, v278);
    if (v116)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v87, v111);
    }
    uint64_t v142 = v270;
    uint64_t v143 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v270 - 8) + 48);
    uint64_t v144 = *(void *)(v270 - 8) + 48;
    if (v143(v131, 1, v270) == 1)
    {
      uint64_t v299 = v144;
      uint64_t v300 = (uint64_t)v143;
      uint64_t v145 = v265 + 8;
      uint64_t v146 = v131;
      uint64_t v147 = *(void (**)(uint64_t, uint64_t))(v265 + 8);
      v147(v146, v264);
      uint64_t v148 = v262;
      uint64_t v149 = sub_100827044(v308, v262);
      uint64_t v150 = (void *)sub_1006BA40C(v149);
      uint64_t v151 = v263;
      sub_100479634(v148, v150, v263);
      unint64_t v295 = (char *)v147;
      uint64_t v265 = v145;
      uint64_t v306 = 0;
      uint64_t v202 = v285;
      BOOL v203 = *(void (**)(uint64_t, uint64_t))(v285 + 8);
      uint64_t v204 = v286;
      v203(v148, v286);
      swift_release();
      uint64_t v205 = TupleTypeMetadata2;
      uint64_t v206 = *(unsigned int (**)(void, void, void))(*(void *)(TupleTypeMetadata2 - 8) + 48);
      if (v206(v151, 1, TupleTypeMetadata2) == 1)
      {
        uint64_t v294 = (uint64_t (*)(void, void, void))v206;
        uint64_t v207 = v307 + 1;
        uint64_t v208 = v258;
        uint64_t v209 = v258 + 8;
        id v210 = *(void (**)(uint64_t, uint64_t))(v258 + 8);
        v210(v151, v259);
        uint64_t v211 = v256;
        uint64_t v212 = v306;
        sub_10047C7A8((uint64_t)v309, v284, v207, (uint64_t)v290, v291, v256);
        uint64_t v306 = v212;
        if (v212)
        {
          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v292 + 8))(v297, v296);
        }
        uint64_t v218 = v270;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v300)(v211, 1, v270) == 1)
        {
          uint64_t v300 = (uint64_t)v210;
          uint64_t v301 = v209;
          uint64_t v307 = (uint64_t)v203;
          ((void (*)(char *, uint64_t))v295)(v211, v264);
          uint64_t v219 = v254;
          uint64_t v220 = sub_100827044(v308, v254);
          id v221 = (uint64_t *)sub_1006BA40C(v220);
          uint64_t v309 = &v248;
          __chkstk_darwin(v221);
          uint64_t v222 = v298;
          *(&v248 - 6) = v303;
          *(&v248 - 5) = (uint64_t)v222;
          uint64_t v223 = v249;
          *(&v248 - 4) = (uint64_t)v302;
          *(&v248 - 3) = (uint64_t)v223;
          uint64_t v224 = v291;
          *(&v248 - 2) = (uint64_t)v290;
          *(&v248 - 1) = v224;
          os_log_type_t v225 = v255;
          uint64_t v226 = v306;
          sub_10047C7A8(v219, v221, v207, (uint64_t)sub_1004A5180, (uint64_t)(&v248 - 8), v255);
          uint64_t v306 = v226;
          if (v226)
          {
            swift_release();
            swift_release();
            ((void (*)(uint64_t, uint64_t))v307)(v219, v286);
            return (*(uint64_t (**)(char *, uint64_t))(v292 + 8))(v297, v296);
          }
          uint64_t v234 = v219;
          os_log_type_t v235 = v225;
          uint64_t v236 = v286;
          uint64_t v237 = (void (*)(char *, uint64_t))v307;
          ((void (*)(uint64_t, uint64_t))v307)(v234, v286);
          swift_release();
          uint64_t v238 = v252;
          uint64_t v239 = v259;
          (*(void (**)(char *, char *, uint64_t))(v208 + 16))(v252, v235, v259);
          uint64_t v240 = TupleTypeMetadata2;
          int v241 = v294(v238, 1, TupleTypeMetadata2);
          uint64_t v242 = v296;
          if (v241 == 1)
          {
            swift_release();
            int64_t v243 = (void (*)(char *, uint64_t))v300;
            ((void (*)(char *, uint64_t))v300)(v235, v239);
            (*(void (**)(char *, uint64_t))(v292 + 8))(v297, v242);
            v243(v238, v239);
            uint64_t v244 = swift_getTupleTypeMetadata3();
            return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v244 - 8) + 56))(v305, 1, 1, v244);
          }
          uint64_t v309 = *(uint64_t **)&v238[*(int *)(v240 + 48)];
          id v245 = v251;
          (*(void (**)(char *, char *, uint64_t))(v285 + 32))(v251, v238, v236);
          uint64_t v94 = swift_getTupleTypeMetadata3();
          uint64_t v308 = *(int *)(v94 + 48);
          uint64_t v232 = (uint64_t)v305;
          unint64_t v246 = v237;
          uint64_t v247 = &v305[*(int *)(v94 + 64)];
          sub_100827044(v236, (uint64_t)v305);
          swift_release();
          v246(v245, v236);
          ((void (*)(char *, uint64_t))v300)(v235, v259);
          (*(void (**)(char *, uint64_t))(v292 + 8))(v297, v296);
          *(void *)(v232 + v308) = v309;
          *(void *)uint64_t v247 = 0;
          v247[8] = -4;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v292 + 8))(v297, v296);
          swift_release();
          uint64_t v227 = *(void *)&v211[*(int *)(v218 + 48)];
          unint64_t v228 = *(void (**)(char *, char *, uint64_t))(v301 + 32);
          uint64_t v229 = v253;
          uint64_t v230 = (int *)v308;
          v228(v253, v211, v308);
          uint64_t v94 = swift_getTupleTypeMetadata3();
          uint64_t v231 = *(int *)(v94 + 48);
          uint64_t v232 = (uint64_t)v305;
          uint64_t v233 = &v305[*(int *)(v94 + 64)];
          v228(v305, v229, (uint64_t)v230);
          *(void *)(v232 + v231) = v227;
          *(void *)uint64_t v233 = 0;
          v233[8] = -3;
        }
        uint64_t v99 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56);
        uint64_t v100 = v232;
      }
      else
      {
        uint64_t v309 = *(uint64_t **)(v151 + *(int *)(v205 + 48));
        int64_t v213 = v257;
        (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v257, v151, v204);
        uint64_t v94 = swift_getTupleTypeMetadata3();
        uint64_t v214 = *(int *)(v94 + 48);
        uint64_t v215 = (void (*)(char *, uint64_t))v203;
        uint64_t v216 = (uint64_t)v305;
        unint64_t v217 = &v305[*(int *)(v94 + 64)];
        sub_100827044(v204, (uint64_t)v305);
        swift_release();
        v215(v213, v204);
        (*(void (**)(char *, uint64_t))(v292 + 8))(v297, v296);
        *(void *)(v216 + v214) = v309;
        *(void *)unint64_t v217 = 0;
        v217[8] = -4;
        uint64_t v99 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56);
        uint64_t v100 = v216;
      }
      return v99(v100, 0, 1, v94);
    }
    (*(void (**)(char *, uint64_t))(v110 + 8))(v297, v111);
    swift_release();
    uint64_t v309 = *(uint64_t **)(v131 + *(int *)(v142 + 48));
    uint64_t v193 = *(void (**)(char *, uint64_t, uint64_t))(v301 + 32);
    uint64_t v194 = v261;
    uint64_t v195 = (int *)v308;
    v193(v261, v131, v308);
    uint64_t v158 = swift_getTupleTypeMetadata3();
    uint64_t v196 = *(int *)(v158 + 48);
    uint64_t v197 = (uint64_t)v305;
    uint64_t v198 = &v305[*(int *)(v158 + 64)];
    v193(v305, (uint64_t)v194, (uint64_t)v195);
    *(void *)(v197 + v196) = v309;
    *(void *)uint64_t v198 = 0;
    v198[8] = -3;
    Swift::String v163 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56);
    uint64_t v164 = v197;
LABEL_35:
    uint64_t v199 = v158;
    return v163(v164, 0, 1, v199);
  }
  uint64_t v102 = v284;
  uint64_t v103 = sub_100827044(v308, (uint64_t)v284);
  uint64_t v104 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 176))(v103);
  __chkstk_darwin(v104);
  *(&v248 - 6) = v303;
  *(&v248 - 5) = (uint64_t)v75;
  *(&v248 - 4) = (uint64_t)v302;
  *(&v248 - 3) = (uint64_t)v9;
  uint64_t v105 = v291;
  *(&v248 - 2) = (uint64_t)v290;
  *(&v248 - 1) = v105;
  uint64_t v106 = v287;
  uint64_t v107 = v306;
  sub_100474B40(v102, v104, v307, sub_1004A5180, &v248 - 8);
  if (v107)
  {
    (*(void (**)(uint64_t *, uint64_t))(v285 + 8))(v102, v286);
    return swift_release();
  }
  else
  {
    uint64_t v132 = v285;
    uint64_t v133 = *(void (**)(uint64_t *, uint64_t))(v285 + 8);
    uint64_t v134 = v102;
    uint64_t v135 = v286;
    uint64_t v309 = (uint64_t *)(v285 + 8);
    uint64_t v307 = (uint64_t)v133;
    v133(v134, v286);
    swift_release();
    uint64_t v136 = v276;
    int v137 = v272;
    uint64_t v138 = v277;
    (*(void (**)(char *, char *, uint64_t))(v276 + 16))(v272, v106, v277);
    uint64_t v139 = v279;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v273 + 48))(v137, 1, v279) == 1)
    {
      uint64_t v140 = *(void (**)(char *, uint64_t))(v136 + 8);
      v140(v106, v138);
      v140(v137, v138);
      uint64_t v141 = swift_getTupleTypeMetadata3();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56))(v305, 1, 1, v141);
    }
    else
    {
      uint64_t v303 = *(int *)(v139 + 48);
      uint64_t v165 = *(int *)(v139 + 64);
      char v166 = v271;
      id v167 = &v271[v165];
      Swift::String v168 = &v137[v165];
      uint64_t v301 = *(void *)(v132 + 32);
      uint64_t v302 = (uint8_t *)(v132 + 32);
      ((void (*)(char *, char *, uint64_t))v301)(v271, v137, v135);
      uint64_t v169 = *(void *)&v137[v303];
      *(void *)&v166[v303] = v169;
      os_log_type_t v170 = *(uint8_t **)v168;
      int v171 = v168[8];
      *(void *)id v167 = *(void *)v168;
      uint64_t v172 = v170;
      double v298 = v170;
      v167[8] = v171;
      int v173 = v171;
      uint64_t v308 = swift_getTupleTypeMetadata3();
      uint64_t v300 = *(int *)(v308 + 48);
      uint64_t v174 = v135;
      uint64_t v175 = (uint64_t)v305;
      os_log_type_t v304 = &v305[*(int *)(v308 + 64)];
      uint64_t v296 = *(int *)(v279 + 48);
      uint64_t v176 = *(int *)(v279 + 64);
      uint64_t v306 = 0;
      uint64_t v177 = v266;
      uint64_t v178 = &v266[v176];
      uint64_t v299 = *(void *)(v132 + 16);
      ((void (*)(char *, char *, uint64_t))v299)(v266, v166, v174);
      *(void *)&v177[v296] = v169;
      *(void *)uint64_t v178 = v172;
      LOBYTE(v166) = v173;
      LODWORD(v297) = v173;
      v178[8] = v173;
      swift_errorRetain();
      sub_100827044(v174, v175);
      (*(void (**)(char *, uint64_t))(v276 + 8))(v287, v277);
      ((void (*)(char *, uint64_t))v307)(v177, v174);
      uint64_t v179 = v279;
      uint64_t v180 = *(int *)(v279 + 48);
      uint64_t v181 = v267;
      int64_t v182 = &v267[*(int *)(v279 + 64)];
      uint64_t v183 = v271;
      ((void (*)(char *, char *, uint64_t))v299)(v267, v271, v174);
      *(void *)&v181[v180] = v169;
      id v184 = v298;
      *(void *)int64_t v182 = v298;
      v182[8] = (char)v166;
      uint64_t v185 = (uint64_t)v305;
      *(void *)&v305[v300] = v169;
      uint64_t v186 = *(int *)(v179 + 48);
      BOOL v187 = v268;
      os_log_type_t v188 = &v268[*(int *)(v179 + 64)];
      ((void (*)(char *, char *, uint64_t))v301)(v268, v183, v174);
      uint64_t v189 = *(void *)&v183[v303];
      swift_errorRelease();
      *(void *)&v187[v186] = v189;
      *(void *)os_log_type_t v188 = v184;
      char v190 = (char)v297;
      v188[8] = (char)v297;
      uint64_t v191 = v304;
      *(void *)os_log_type_t v304 = v184;
      v191[8] = v190;
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v308 - 8) + 56))(v185, 0, 1);
      unint64_t v192 = (uint64_t (*)(char *, uint64_t))v307;
      ((void (*)(char *, uint64_t))v307)(v187, v174);
      return v192(v181, v174);
    }
  }
}

void sub_100476F30(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_100477444(a1, a2, a3, a4, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))sub_100472EDC, a5);
}

void sub_100476F5C(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, void *a7@<X8>)
{
  void (*v29)(void *__return_ptr, id *, uint64_t);
  id v30;
  int v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  void (*v40)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t);
  id *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned char v46[520];
  unsigned char v47[520];
  void v48[65];
  unsigned char v49[504];
  unsigned char v50[504];
  void v51[63];
  id v52;
  __int16 v53;
  unsigned char v54[504];
  id v55;

  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v13 = sub_10002B7CC((uint64_t *)&unk_100AD6350);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
  __chkstk_darwin(v16);
  uint64_t v19 = (id *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *a1;
  if (!*a1)
  {
    sub_1004A5990((uint64_t)v48);
    sub_10001AE98((uint64_t)v48, (uint64_t)a7, &qword_100AD6328);
    return;
  }
  uint64_t v42 = a7;
  uint64_t v43 = v17;
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v41 = v19;
  uint64_t v55 = v20;
  uint64_t v21 = *(uint64_t (**)(id *, void))(**(void **)(a2 + 32) + 472);
  id v22 = v20;
  uint64_t v23 = v21(&v55, 0);
  if (v7)
  {

    return;
  }
  uint64_t v24 = v23;
  swift_release();
  if (*(void *)(v24 + 16))
  {
    uint64_t v25 = v43;
    sub_10002B70C(v24 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80)), (uint64_t)v15, (uint64_t *)&unk_100AD0CC0);
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = 1;
    uint64_t v25 = v43;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v15, v26, 1, v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v16) == 1)
  {

    sub_10002B770((uint64_t)v15, (uint64_t *)&unk_100AD6350);
LABEL_10:
    sub_1004A5990((uint64_t)v48);
    sub_10001AE98((uint64_t)v48, (uint64_t)v42, &qword_100AD6328);
    return;
  }
  uint64_t v27 = v41;
  sub_10001AE98((uint64_t)v15, (uint64_t)v41, (uint64_t *)&unk_100AD0CC0);
  uint64_t v28 = *(void *)(a2 + 16);
  uint64_t v52 = *v27;
  uint64_t v53 = 0;
  uint64_t v29 = *(void (**)(void *__return_ptr, id *, uint64_t))(*(void *)v28 + 168);
  uint64_t v30 = v52;
  v29(v51, &v52, 1);
  sub_10001AE98((uint64_t)v51, (uint64_t)v49, &qword_100AD6800);
  sub_10001AE98((uint64_t)v49, (uint64_t)v50, &qword_100AD6800);
  if (sub_1000D3324((uint64_t)v50) == 1)
  {

    sub_10002B770((uint64_t)v27, (uint64_t *)&unk_100AD0CC0);
    goto LABEL_10;
  }

  memcpy(v54, v51, 0x1F0uLL);
  v40(v48, v54, a2, v44, v45, v39);
  sub_10001AE98((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_100AD6310);
  sub_10001AE98((uint64_t)v46, (uint64_t)v47, (uint64_t *)&unk_100AD6310);
  uint64_t v31 = sub_1000D3324((uint64_t)v47);
  uint64_t v32 = v42;
  if (v31 == 1)
  {
    memcpy(v42, v54, 0x1F0uLL);
    sub_1004A485C();
    uint64_t v33 = swift_allocError();
    *(void *)uint64_t v34 = 0;
    *(unsigned char *)(v34 + 8) = 11;
    v32[62] = swift_allocError();
    *(void *)uint64_t v35 = v33;
    *(unsigned char *)(v35 + 8) = 2;
  }
  else
  {
    uint64_t v36 = v48[62];
    memcpy(v42, v48, 0x1F0uLL);
    sub_1004A485C();
    v32[62] = swift_allocError();
    *(void *)uint64_t v37 = v36;
    *(unsigned char *)(v37 + 8) = 2;
    sub_1000DBF50((uint64_t)v54);
  }
  sub_10002B770((uint64_t)v27, (uint64_t *)&unk_100AD0CC0);

  v38._int countAndFlagsBits = (uint64_t)v32;
  Filename.init(rawValue:)(v38);
}

void sub_100477418(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_100477444(a1, a2, a3, a4, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))sub_100473D8C, a5);
}

void sub_100477444(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t)@<X4>, void *a6@<X8>)
{
  void (*v29)(void *__return_ptr, id *, uint64_t);
  id v30;
  int v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  void (*v40)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t);
  id *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned char v46[520];
  unsigned char v47[520];
  void v48[65];
  unsigned char v49[504];
  unsigned char v50[504];
  void v51[63];
  id v52;
  __int16 v53;
  unsigned char v54[504];
  id v55;

  uint64_t v45 = a3;
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100AD6350);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
  __chkstk_darwin(v15);
  uint64_t v18 = (id *)((char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *a1;
  if (!*a1)
  {
    sub_1004A5990((uint64_t)v48);
    sub_10001AE98((uint64_t)v48, (uint64_t)a6, &qword_100AD6328);
    return;
  }
  uint64_t v43 = v16;
  uint64_t v44 = a4;
  uint64_t v40 = a5;
  uint64_t v41 = v18;
  uint64_t v42 = a6;
  uint64_t v55 = v19;
  uint64_t v20 = *(uint64_t (**)(id *, void))(**(void **)(a2 + 32) + 472);
  id v21 = v19;
  uint64_t v22 = v20(&v55, 0);
  if (v6)
  {

    return;
  }
  uint64_t v23 = v22;
  swift_release();
  if (*(void *)(v23 + 16))
  {
    uint64_t v24 = v43;
    sub_10002B70C(v23 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80)), (uint64_t)v14, (uint64_t *)&unk_100AD0CC0);
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
    uint64_t v24 = v43;
  }
  uint64_t v26 = v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v14, v25, 1, v15);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v15) == 1)
  {

    sub_10002B770((uint64_t)v14, (uint64_t *)&unk_100AD6350);
LABEL_10:
    sub_1004A5990((uint64_t)v48);
    sub_10001AE98((uint64_t)v48, (uint64_t)v42, &qword_100AD6328);
    return;
  }
  uint64_t v27 = v41;
  sub_10001AE98((uint64_t)v14, (uint64_t)v41, (uint64_t *)&unk_100AD0CC0);
  uint64_t v28 = *(void *)(a2 + 16);
  uint64_t v52 = *v27;
  uint64_t v53 = 0;
  uint64_t v29 = *(void (**)(void *__return_ptr, id *, uint64_t))(*(void *)v28 + 168);
  uint64_t v30 = v52;
  v29(v51, &v52, 1);
  sub_10001AE98((uint64_t)v51, (uint64_t)v49, &qword_100AD6800);
  sub_10001AE98((uint64_t)v49, (uint64_t)v50, &qword_100AD6800);
  if (sub_1000D3324((uint64_t)v50) == 1)
  {

    sub_10002B770((uint64_t)v27, (uint64_t *)&unk_100AD0CC0);
    goto LABEL_10;
  }

  memcpy(v54, v51, 0x1F0uLL);
  v40(v48, v54, a2, v45, v26);
  sub_10001AE98((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_100AD6310);
  sub_10001AE98((uint64_t)v46, (uint64_t)v47, (uint64_t *)&unk_100AD6310);
  uint64_t v31 = sub_1000D3324((uint64_t)v47);
  uint64_t v32 = v42;
  if (v31 == 1)
  {
    memcpy(v42, v54, 0x1F0uLL);
    sub_1004A485C();
    uint64_t v33 = swift_allocError();
    *(void *)uint64_t v34 = 0;
    *(unsigned char *)(v34 + 8) = 11;
    v32[62] = swift_allocError();
    *(void *)uint64_t v35 = v33;
    *(unsigned char *)(v35 + 8) = 2;
  }
  else
  {
    uint64_t v36 = v48[62];
    memcpy(v42, v48, 0x1F0uLL);
    sub_1004A485C();
    v32[62] = swift_allocError();
    *(void *)uint64_t v37 = v36;
    *(unsigned char *)(v37 + 8) = 2;
    sub_1000DBF50((uint64_t)v54);
  }
  sub_10002B770((uint64_t)v27, (uint64_t *)&unk_100AD0CC0);

  v38._int countAndFlagsBits = (uint64_t)v32;
  Filename.init(rawValue:)(v38);
}

void sub_100477914(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_100477444(a1, a2, a3, a4, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))sub_100472C7C, a5);
}

void sub_100477940(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_100477444(a1, a2, a3, a4, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))sub_100472E30, a5);
}

uint64_t sub_10047796C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, void (*a10)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))
{
  uint64_t v57 = a8;
  uint64_t v42 = a6;
  uint64_t v43 = a7;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v39 = a3;
  uint64_t v14 = sub_10002B7CC((uint64_t *)&unk_100AD0CF0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v21 = *((unsigned __int8 *)a1 + 8);
  if (v21 == 255)
  {
    sub_1004A5990((uint64_t)v46);
    return sub_10001AE98((uint64_t)v46, (uint64_t)a9, &qword_100AD6320);
  }
  uint64_t v38 = a9;
  uint64_t v54 = *a1;
  char v55 = v21;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void))(**(void **)(a2 + 32) + 472))(&v54, 0);
  if (!v10)
  {
    uint64_t v23 = result;
    swift_release();
    if (*(void *)(v23 + 16))
    {
      sub_10002B70C(v23 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), (uint64_t)v16, &qword_100ACCB10);
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v24 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v24, 1, v17);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      uint64_t v25 = (uint64_t *)&unk_100AD0CF0;
      uint64_t v26 = (uint64_t)v16;
LABEL_9:
      sub_10002B770(v26, v25);
      sub_1004A5990((uint64_t)v46);
      return sub_10001AE98((uint64_t)v46, (uint64_t)v38, &qword_100AD6320);
    }
    sub_10001AE98((uint64_t)v16, (uint64_t)v20, &qword_100ACCB10);
    uint64_t v27 = *(void *)(a2 + 16);
    char v28 = v20[8];
    uint64_t v51 = *(void *)v20;
    char v52 = v28;
    char v53 = 0;
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(*(void *)v27 + 168))(v50, &v51, 1);
    sub_10001AE98((uint64_t)v50, (uint64_t)v48, (uint64_t *)&unk_100AD67E0);
    sub_10001AE98((uint64_t)v48, (uint64_t)v49, (uint64_t *)&unk_100AD67E0);
    if (sub_1000D3324((uint64_t)v49) == 1)
    {
      uint64_t v25 = &qword_100ACCB10;
      uint64_t v26 = (uint64_t)v20;
      goto LABEL_9;
    }
    memcpy(v56, v50, 0x1F0uLL);
    sub_1004711CC((uint64_t)v56, a2, v39, v40, v41, v42, v43, v57, a10);
    sub_10001AE98((uint64_t)v46, (uint64_t)v44, &qword_100ADC000);
    sub_10001AE98((uint64_t)v44, (uint64_t)v45, &qword_100ADC000);
    int v29 = sub_1000D3324((uint64_t)v45);
    uint64_t v30 = v38;
    if (v29 == 1)
    {
      memcpy(v38, v56, 0x1F0uLL);
      sub_1004A485C();
      uint64_t v31 = swift_allocError();
      *(void *)uint64_t v32 = 0;
      *(unsigned char *)(v32 + 8) = 11;
      v30[62] = swift_allocError();
      *(void *)uint64_t v33 = v31;
      *(unsigned char *)(v33 + 8) = 2;
    }
    else
    {
      uint64_t v34 = v47;
      memcpy(v38, v46, 0x1F0uLL);
      sub_1004A485C();
      v30[62] = swift_allocError();
      *(void *)uint64_t v35 = v34;
      *(unsigned char *)(v35 + 8) = 2;
      sub_1000D3440((uint64_t)v56);
    }
    sub_10002B770((uint64_t)v20, &qword_100ACCB10);
    v36._int countAndFlagsBits = (uint64_t)v30;
    return Filename.init(rawValue:)(v36).rawValue._countAndFlagsBits;
  }
  return result;
}

uint64_t sub_100477DF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_100477E50(a1, a2, a3, a4, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))sub_100471E6C, a5);
}

uint64_t sub_100477E24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_100477E50(a1, a2, a3, a4, (void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))sub_100471F18, a5);
}

uint64_t sub_100477E50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t)@<X4>, void *a6@<X8>)
{
  void (*v48)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t);

  uint64_t v48 = a5;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v10 = sub_10002B7CC((uint64_t *)&unk_100AD0CF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *((unsigned __int8 *)a1 + 8);
  if (v17 == 255)
  {
    sub_1004A5990((uint64_t)v38);
    return sub_10001AE98((uint64_t)v38, (uint64_t)a6, &qword_100AD6320);
  }
  uint64_t v33 = a6;
  uint64_t v45 = *a1;
  char v46 = v17;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void))(**(void **)(a2 + 32) + 472))(&v45, 0);
  if (!v6)
  {
    uint64_t v19 = result;
    swift_release();
    if (*(void *)(v19 + 16))
    {
      sub_10002B70C(v19 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), (uint64_t)v12, &qword_100ACCB10);
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v20, 1, v13);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      int v21 = (uint64_t *)&unk_100AD0CF0;
      uint64_t v22 = (uint64_t)v12;
LABEL_9:
      sub_10002B770(v22, v21);
      sub_1004A5990((uint64_t)v38);
      return sub_10001AE98((uint64_t)v38, (uint64_t)v33, &qword_100AD6320);
    }
    sub_10001AE98((uint64_t)v12, (uint64_t)v16, &qword_100ACCB10);
    uint64_t v23 = *(void *)(a2 + 16);
    char v24 = v16[8];
    uint64_t v42 = *(void *)v16;
    char v43 = v24;
    char v44 = 0;
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(*(void *)v23 + 168))(v41, &v42, 1);
    sub_10001AE98((uint64_t)v41, (uint64_t)v39, (uint64_t *)&unk_100AD67E0);
    sub_10001AE98((uint64_t)v39, (uint64_t)v40, (uint64_t *)&unk_100AD67E0);
    if (sub_1000D3324((uint64_t)v40) == 1)
    {
      int v21 = &qword_100ACCB10;
      uint64_t v22 = (uint64_t)v16;
      goto LABEL_9;
    }
    memcpy(v47, v41, 0x1F0uLL);
    v48(v38, v47, a2, v34, v35);
    sub_10001AE98((uint64_t)v38, (uint64_t)v36, &qword_100ADC000);
    sub_10001AE98((uint64_t)v36, (uint64_t)v37, &qword_100ADC000);
    int v25 = sub_1000D3324((uint64_t)v37);
    uint64_t v26 = v33;
    if (v25 == 1)
    {
      memcpy(v33, v47, 0x1F0uLL);
      sub_1004A485C();
      uint64_t v27 = swift_allocError();
      *(void *)uint64_t v28 = 0;
      *(unsigned char *)(v28 + 8) = 11;
      v26[62] = swift_allocError();
      *(void *)uint64_t v29 = v27;
      *(unsigned char *)(v29 + 8) = 2;
    }
    else
    {
      uint64_t v30 = v38[62];
      memcpy(v33, v38, 0x1F0uLL);
      sub_1004A485C();
      v26[62] = swift_allocError();
      *(void *)uint64_t v31 = v30;
      *(unsigned char *)(v31 + 8) = 2;
      sub_1000D3440((uint64_t)v47);
    }
    sub_10002B770((uint64_t)v16, &qword_100ACCB10);
    v32._int countAndFlagsBits = (uint64_t)v26;
    return Filename.init(rawValue:)(v32).rawValue._countAndFlagsBits;
  }
  return result;
}

uint64_t sub_1004782C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v87 = a5;
  uint64_t v86 = a4;
  uint64_t v85 = a3;
  uint64_t v101 = a1;
  uint64_t v97 = a6;
  uint64_t v6 = *(void *)(*a2 + 80);
  uint64_t v7 = *(void *)(*a2 + 88);
  uint64_t v8 = *(void *)(*a2 + 96);
  uint64_t v9 = *a2;
  uint64_t v96 = a2;
  uint64_t v10 = *(void *)(v9 + 104);
  uint64_t v102 = v6;
  uint64_t v103 = v7;
  uint64_t v11 = v6;
  uint64_t v104 = v8;
  uint64_t v105 = v10;
  uint64_t v12 = type metadata accessor for ItemReconciliation();
  uint64_t v98 = sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v80 = sub_10096C890();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v84 = (char *)&v76 - v13;
  uint64_t v100 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v102 = AssociatedTypeWitness;
  uint64_t v103 = v15;
  uint64_t v104 = AssociatedConformanceWitness;
  uint64_t v105 = v17;
  uint64_t v94 = type metadata accessor for ReconciliationID();
  uint64_t v90 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  unsigned int v93 = (char *)&v76 - v18;
  uint64_t v83 = sub_10096C890();
  uint64_t v82 = *(void *)(v83 - 8);
  uint64_t v19 = __chkstk_darwin(v83);
  uint64_t v95 = (uint64_t)&v76 - v20;
  uint64_t v99 = v12;
  uint64_t v89 = *(void *)(v12 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v78 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v88 = (char *)&v76 - v23;
  uint64_t v24 = type metadata accessor for SnapshotItem();
  uint64_t v25 = sub_10096C890();
  uint64_t v91 = *(void *)(v25 - 8);
  uint64_t v92 = v25;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v76 - v27;
  uint64_t v100 = *(void *)(v24 - 8);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v76 - v29;
  uint64_t v31 = sub_10096C890();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v76 - v34;
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v76 - v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v35, v101, v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v35, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
LABEL_3:
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v97, 1, 1, TupleTypeMetadata2);
  }
  uint64_t v77 = v30;
  uint64_t v101 = v24;
  uint64_t v41 = (void (*)(void))AssociatedTypeWitness;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v35, AssociatedTypeWitness);
  uint64_t v42 = v106;
  uint64_t v43 = (*(uint64_t (**)(char *, void))(*(void *)v96[4] + 472))(v38, 0);
  uint64_t v44 = v36;
  if (v42) {
    return (*(uint64_t (**)(char *, void (*)(void)))(v44 + 8))(v38, v41);
  }
  uint64_t v45 = v43;
  uint64_t v76 = v38;
  uint64_t v106 = 0;
  swift_release();
  uint64_t v102 = v45;
  uint64_t v46 = v101;
  sub_10096C1C0();
  swift_getWitnessTable();
  sub_10096C450();
  swift_bridgeObjectRelease();
  uint64_t v47 = v100;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v28, 1, v46) == 1)
  {
    (*(void (**)(char *, void (*)(void)))(v36 + 8))(v76, v41);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v28, v92);
    goto LABEL_3;
  }
  uint64_t v48 = v77;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v77, v28, v46);
  uint64_t v49 = (uint64_t)v93;
  (*(void (**)(char *, char *, void (*)(void)))(v36 + 16))(v93, v48, v41);
  uint64_t v50 = v94;
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = v106;
  sub_1000DEB74(v49, v95);
  if (v51)
  {
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v49, v50);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
    uint64_t v38 = v76;
    return (*(uint64_t (**)(char *, void (*)(void)))(v44 + 8))(v38, v41);
  }
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v49, v50);
  uint64_t v52 = v89;
  uint64_t v53 = v95;
  uint64_t v54 = v99;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v95, 1, v99) == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v101);
    (*(void (**)(char *, void (*)(void)))(v44 + 8))(v76, v41);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v53, v83);
    uint64_t v55 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v97, 1, 1, v55);
  }
  else
  {
    uint64_t v56 = v88;
    uint64_t v106 = *(void (**)(void))(v52 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v106)(v88, v53, v54);
    uint64_t v57 = v84;
    sub_100474B40(v56, v96, v85, v86, v87);
    uint64_t v58 = (void (*)(char *))v106;
    uint64_t v59 = v54;
    uint64_t v60 = TupleTypeMetadata3;
    int v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 48))(v57, 1, TupleTypeMetadata3);
    uint64_t v62 = v97;
    if (v61 == 1)
    {
      (*(void (**)(char *, uint64_t))(v79 + 8))(v57, v80);
      uint64_t v63 = swift_getTupleTypeMetadata2();
      uint64_t v64 = v59;
      uint64_t v98 = *(int *)(v63 + 48);
      uint64_t v65 = v88;
      uint64_t v66 = v89;
      (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v62, v88, v64);
      sub_1004A485C();
      uint64_t v67 = swift_allocError();
      uint64_t v106 = v41;
      uint64_t v68 = v67;
      *(void *)uint64_t v69 = 0;
      *(unsigned char *)(v69 + 8) = 11;
      *(void *)(v62 + v98) = swift_allocError();
      *(void *)uint64_t v70 = v68;
      *(unsigned char *)(v70 + 8) = 2;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v64);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v77, v101);
      (*(void (**)(char *, void (*)(void)))(v44 + 8))(v76, v106);
    }
    else
    {
      uint64_t v96 = *(uint64_t **)&v57[*(int *)(v60 + 48)];
      uint64_t v71 = v78;
      v58(v78);
      uint64_t v63 = swift_getTupleTypeMetadata2();
      uint64_t v72 = *(int *)(v63 + 48);
      uint64_t v73 = v89;
      (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v62, v71, v59);
      sub_1004A485C();
      *(void *)(v62 + v72) = swift_allocError();
      *(void *)uint64_t v74 = v96;
      *(unsigned char *)(v74 + 8) = 2;
      uint64_t v75 = *(void (**)(char *, uint64_t))(v73 + 8);
      v75(v71, v59);
      v75(v88, v59);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v77, v101);
      (*(void (**)(char *, void (*)(void)))(v44 + 8))(v76, v41);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
}

uint64_t sub_100478FA4@<X0>(__n128 *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  __n128 v5 = a1[13];
  v41[3] = a1[12];
  void v41[4] = v5;
  v41[5] = a1[14];
  __n128 v6 = a1[9];
  __n128 v40 = a1[8];
  v41[0] = v6;
  __n128 v7 = a1[11];
  v41[1] = a1[10];
  v41[2] = v7;
  __n128 v8 = a1[5];
  __n128 v36 = a1[4];
  __n128 v37 = v8;
  __n128 v9 = a1[7];
  __n128 v38 = a1[6];
  __n128 v39 = v9;
  __n128 v10 = a1[1];
  __n128 v32 = *a1;
  __n128 v33 = v10;
  __n128 v11 = a1[3];
  __n128 v34 = a1[2];
  __n128 v35 = v11;
  if (v32.n128_u8[8] == 255) {
    goto LABEL_17;
  }
  unint64_t v30 = v32.n128_u64[0];
  __int8 v31 = v32.n128_i8[8];
  if (v40.n128_u8[8] != 1)
  {
LABEL_12:
    sub_1004A51AC(v41, &v42);
    sub_1004A51AC(&v42, &v43);
    if (v44 == 2)
    {
      uint64_t result = (*(uint64_t (**)(unint64_t *))(**(void **)(a2 + 24) + 256))(&v30);
      if (v3) {
        return result;
      }
      uint64_t v18 = result;
      if (result) {
        goto LABEL_15;
      }
    }
LABEL_17:
    sub_1004A5990((uint64_t)v29);
    return sub_10001AE98((uint64_t)v29, (uint64_t)a3, &qword_100AD6320);
  }
  uint64_t v14 = *(void *)(a2 + 24);
  sub_10057A6F4();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100973BA0;
  *(void *)(v15 + 32) = sub_10002B7CC(&qword_100AD6380);
  *(void *)(v15 + 40) = sub_10002B7CC(&qword_100AD6388);
  unint64_t v16 = (*(uint64_t (**)(unint64_t *, uint64_t))(*(void *)v14 + 272))(&v30, v15);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3) {
    return result;
  }
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_10096CE70();
    uint64_t result = swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_6:
  if ((v16 & 0xC000000000000001) != 0)
  {
    uint64_t v18 = sub_10096CC30();
  }
  else
  {
    if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v18 = *(void *)(v16 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
LABEL_15:
  memcpy(a3, a1, 0x1F0uLL);
  uint64_t v20 = a1[29].n128_i64[0];
  if (*(unsigned char *)(v18 + 112) == 2)
  {
    uint64_t v22 = *(void *)(v18 + 96);
    uint64_t v21 = *(void *)(v18 + 104);
    sub_10035751C((uint64_t)a1);
    sub_10009C5FC(v22, v21, 2);
    uint64_t v23 = sub_10064FA1C(v20, 18, 0xBu);
    char v25 = v24;
    sub_1000D31F8(v22, v21, 2);
  }
  else
  {
    sub_10035751C((uint64_t)a1);
    uint64_t v23 = sub_10064FA1C(v20, 19, 0xBu);
    char v25 = v26;
  }
  sub_1004A485C();
  a3[62] = swift_allocError();
  *(void *)uint64_t v27 = v23;
  *(unsigned char *)(v27 + 8) = v25;
  swift_release();
  v28._int countAndFlagsBits = (uint64_t)a3;
  return Filename.init(rawValue:)(v28).rawValue._countAndFlagsBits;
}

void sub_1004792E4(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v5 = *((_OWORD *)a1 + 11);
  unsigned char v39[4] = *((_OWORD *)a1 + 10);
  v39[5] = v5;
  uint64_t v40 = a1[24];
  long long v6 = *((_OWORD *)a1 + 7);
  v39[0] = *((_OWORD *)a1 + 6);
  v39[1] = v6;
  long long v7 = *((_OWORD *)a1 + 9);
  void v39[2] = *((_OWORD *)a1 + 8);
  v39[3] = v7;
  long long v8 = *((_OWORD *)a1 + 3);
  long long v35 = *((_OWORD *)a1 + 2);
  long long v36 = v8;
  long long v9 = *((_OWORD *)a1 + 5);
  long long v37 = *((_OWORD *)a1 + 4);
  long long v38 = v9;
  long long v10 = *((_OWORD *)a1 + 1);
  long long v33 = *(_OWORD *)a1;
  long long v34 = v10;
  __n128 v11 = (void *)v33;
  if (!(void)v33) {
    goto LABEL_18;
  }
  id v44 = (id)v33;
  if (LOBYTE(v39[0]) != 1)
  {
    id v20 = (id)v33;
LABEL_11:
    sub_1004A51AC((__n128 *)((char *)v39 + 8), &v41);
    sub_1004A51AC(&v41, &v42);
    if (v43 == 2)
    {
      uint64_t v21 = (*(uint64_t (**)(id *))(**(void **)(a2 + 24) + 256))(&v44);
      if (v3) {
        goto LABEL_13;
      }
      uint64_t v19 = v21;
      if (v21) {
        goto LABEL_15;
      }
    }

LABEL_18:
    sub_1004A5990((uint64_t)v32);
    sub_10001AE98((uint64_t)v32, (uint64_t)a3, &qword_100AD6328);
    return;
  }
  uint64_t v14 = *(void *)(a2 + 24);
  sub_10057A754();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100973BA0;
  *(void *)(v15 + 32) = sub_10002B7CC((uint64_t *)&unk_100AD6370);
  *(void *)(v15 + 40) = sub_10002B7CC(&qword_100AD6E30);
  unint64_t v16 = *(uint64_t (**)(id *, uint64_t))(*(void *)v14 + 272);
  id v17 = v11;
  unint64_t v18 = v16(&v44, v15);
  swift_bridgeObjectRelease();
  if (v3)
  {
LABEL_13:

    return;
  }
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_10096CE70();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_6:
  if ((v18 & 0xC000000000000001) != 0)
  {
    uint64_t v19 = sub_10096CC30();
  }
  else
  {
    if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v19 = *(void *)(v18 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
LABEL_15:
  memcpy(a3, a1, 0x1F0uLL);
  uint64_t v22 = a1[58];
  if (*(unsigned char *)(v19 + 112) == 2)
  {
    uint64_t v24 = *(void *)(v19 + 96);
    uint64_t v23 = *(void *)(v19 + 104);
    sub_1004A4AF8((uint64_t)a1);
    sub_10009C5FC(v24, v23, 2);
    uint64_t v25 = sub_10064FA1C(v22, 18, 0xBu);
    char v27 = v26;
    sub_1000D31F8(v24, v23, 2);
  }
  else
  {
    sub_1004A4AF8((uint64_t)a1);
    uint64_t v25 = sub_10064FA1C(v22, 19, 0xBu);
    char v27 = v28;
  }
  sub_1004A485C();
  a3[62] = swift_allocError();
  *(void *)uint64_t v29 = v25;
  *(unsigned char *)(v29 + 8) = v27;
  swift_release();

  v30._int countAndFlagsBits = (uint64_t)a3;
  Filename.init(rawValue:)(v30);
}

uint64_t sub_100479634@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v73 = (void *)*a2;
  uint64_t v5 = v73[10];
  uint64_t v74 = v73[12];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_10096C890();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  __n128 v11 = (char *)v67 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v9);
  uint64_t v14 = (char *)v67 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v71 = a1;
  v15(v11, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v16 = v73[11];
    uint64_t v17 = v73[13];
    uint64_t v76 = v5;
    uint64_t v77 = v16;
    uint64_t v78 = v74;
    uint64_t v79 = v17;
    type metadata accessor for ItemReconciliation();
    sub_100033BE8((uint64_t *)&unk_100ACB6B0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
    uint64_t v20 = v72;
  }
  else
  {
    uint64_t v70 = a2;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, AssociatedTypeWitness);
    uint64_t v21 = v74;
    uint64_t v22 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v23 = v71;
    if (*(unsigned char *)(v71 + *(int *)(v22 + 52)) == 1)
    {
      v67[0] = v22;
      uint64_t v68 = v12;
      uint64_t v69 = AssociatedTypeWitness;
      uint64_t v24 = v70[3];
      uint64_t v25 = v73[11];
      uint64_t v26 = v73[13];
      uint64_t v76 = v5;
      uint64_t v77 = v25;
      uint64_t v78 = v21;
      uint64_t v79 = v26;
      v67[1] = type metadata accessor for ItemJob();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
      swift_allocObject();
      uint64_t v28 = sub_10096C0D0();
      uint64_t v29 = v14;
      uint64_t v31 = v30;
      uint64_t v76 = v5;
      uint64_t v77 = v25;
      uint64_t v78 = v21;
      uint64_t v79 = v26;
      *Swift::String v30 = type metadata accessor for Ingestion.FetchContent();
      uint64_t v76 = v5;
      uint64_t v77 = v25;
      uint64_t v78 = v21;
      uint64_t v79 = v26;
      v31[1] = type metadata accessor for Ingestion.FetchChildrenMetadata();
      uint64_t v14 = v29;
      uint64_t v32 = sub_1003FC080(v28);
      uint64_t v33 = v75;
      uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v24 + 272))(v29, v32);
      uint64_t v75 = v33;
      if (v33)
      {
        (*(void (**)(char *, uint64_t))(v68 + 8))(v29, v69);
        return swift_bridgeObjectRelease();
      }
      uint64_t v36 = v34;
      swift_bridgeObjectRelease();
      uint64_t v80 = v36;
      sub_10096C1C0();
      swift_getWitnessTable();
      sub_10096C450();
      swift_bridgeObjectRelease();
      uint64_t v37 = v76;
      uint64_t v12 = v68;
      uint64_t AssociatedTypeWitness = v69;
      if (v76)
      {
        uint64_t v76 = v5;
        uint64_t v77 = v25;
        uint64_t v78 = v21;
        uint64_t v79 = v26;
        uint64_t v38 = type metadata accessor for ItemReconciliation();
        sub_100033BE8((uint64_t *)&unk_100ACB6B0);
        uint64_t v39 = swift_getTupleTypeMetadata2();
        uint64_t v40 = *(int *)(v39 + 48);
        uint64_t v42 = v71;
        uint64_t v41 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v72, v71, v38);
        uint64_t v43 = sub_10064F980(v37, *(void *)(v42 + *(int *)(v38 + 64) + 8));
        id v44 = v14;
        char v46 = v45;
        sub_1004A485C();
        *(void *)(v41 + v40) = swift_allocError();
        *(void *)uint64_t v47 = v43;
        *(unsigned char *)(v47 + 8) = v46;
        swift_release();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v44, AssociatedTypeWitness);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v41, 0, 1, v39);
      }
      uint64_t v23 = v71;
      uint64_t v22 = v67[0];
    }
    if (*(unsigned char *)(v23 + *(int *)(v22 + 64) + 16) == 2)
    {
      uint64_t v48 = v21;
      uint64_t v49 = v23;
      uint64_t v50 = v75;
      uint64_t v51 = (*(uint64_t (**)(char *))(*(void *)v70[3] + 256))(v14);
      uint64_t v75 = v50;
      if (v50) {
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
      }
      uint64_t v56 = v51;
      if (v51)
      {
        uint64_t v57 = v73[11];
        uint64_t v58 = v73[13];
        uint64_t v76 = v5;
        uint64_t v77 = v57;
        uint64_t v78 = v48;
        uint64_t v79 = v58;
        uint64_t v59 = type metadata accessor for ItemReconciliation();
        sub_100033BE8((uint64_t *)&unk_100ACB6B0);
        uint64_t v60 = swift_getTupleTypeMetadata2();
        uint64_t v74 = *(int *)(v60 + 48);
        uint64_t v61 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v72, v49, v59);
        uint64_t v62 = sub_10064F980(v56, *(void *)(v49 + *(int *)(v59 + 64) + 8));
        uint64_t v63 = v14;
        char v65 = v64;
        sub_1004A485C();
        *(void *)(v61 + v74) = swift_allocError();
        *(void *)uint64_t v66 = v62;
        *(unsigned char *)(v66 + 8) = v65;
        swift_release();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v63, AssociatedTypeWitness);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v61, 0, 1, v60);
      }
      uint64_t v53 = v72;
      uint64_t v52 = v73;
      uint64_t v21 = v48;
    }
    else
    {
      uint64_t v53 = v72;
      uint64_t v52 = v73;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
    uint64_t v54 = v52[11];
    uint64_t v55 = v52[13];
    uint64_t v76 = v5;
    uint64_t v77 = v54;
    uint64_t v78 = v21;
    uint64_t v79 = v55;
    type metadata accessor for ItemReconciliation();
    sub_100033BE8((uint64_t *)&unk_100ACB6B0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
    uint64_t v20 = v53;
  }
  return v19(v20, 1, 1, TupleTypeMetadata2);
}

void sub_100479E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100479EE0(a1, a2, a3, a4, a5, (uint64_t)sub_1004A59DC, (uint64_t)sub_100472D28, (uint64_t)sub_100479E00, (void (*)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))sub_10047B338);
}

void sub_100479E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100479EE0(a1, a2, a3, a4, a5, (uint64_t)sub_1004A7B60, (uint64_t)sub_100472D28, (uint64_t)sub_100479E70, (void (*)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))sub_10047B338);
}

void sub_100479EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))
{
  void (*v45)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *);
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  void (*v79)(_OWORD *__return_ptr, id *, uint64_t);
  uint64_t v80;
  char v81;
  uint64_t v82;
  int v83;
  char v84;
  void *v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v91;
  unint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  NSString v103;
  Class isa;
  id v105;
  Swift::String v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  unsigned char v118[520];
  unsigned char v119[520];
  void v120[62];
  uint64_t v121;
  void v122[63];
  _OWORD v123[31];
  _OWORD v124[31];
  id v125;
  __int16 v126;
  id v127;
  unsigned __int16 v128;
  long long v129;
  long long v130;
  long long v131;
  long long v132;
  long long v133;
  long long v134;
  long long v135;
  long long v136;
  long long v137;
  __n128 v138[6];
  __n128 v139;
  unsigned char v140[496];
  unsigned char v141[496];
  __n128 v142;
  char v143;
  uint64_t v144;

  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v12 = v11;
  uint64_t v116 = v13;
  id v117 = v14;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v23 = v10;
  unsigned __int8 v115 = v24;
  uint64_t v25 = sub_10002B7CC(&qword_100AD6368);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v112 = (uint64_t)&v110 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  __n128 v28 = *(__n128 *)(v23 + 208);
  v138[3] = *(__n128 *)(v23 + 192);
  v138[4] = v28;
  v138[5] = *(__n128 *)(v23 + 224);
  __n128 v29 = *(__n128 *)(v23 + 144);
  int v137 = *(_OWORD *)(v23 + 128);
  v138[0] = v29;
  __n128 v30 = *(__n128 *)(v23 + 160);
  v138[2] = *(__n128 *)(v23 + 176);
  v138[1] = v30;
  long long v31 = *(_OWORD *)(v23 + 80);
  uint64_t v133 = *(_OWORD *)(v23 + 64);
  uint64_t v134 = v31;
  long long v32 = *(_OWORD *)(v23 + 96);
  uint64_t v136 = *(_OWORD *)(v23 + 112);
  uint64_t v135 = v32;
  long long v33 = *(_OWORD *)(v23 + 16);
  unint64_t v129 = *(_OWORD *)v23;
  uint64_t v130 = v33;
  long long v34 = *(_OWORD *)(v23 + 32);
  uint64_t v132 = *(_OWORD *)(v23 + 48);
  uint64_t v131 = v34;
  int v113 = (uint64_t)&v110 - v35;
  uint64_t v114 = v12;
  if ((v130 & 4) != 0)
  {
    uint64_t v37 = v116;
    sub_10047796C((uint64_t *)v23, v22, v20, v18, v16, v116, v117, v12, v120, a9);
    if (v9) {
      return;
    }
    uint64_t v111 = a9;
    uint64_t v36 = v20;
    uint64_t v144 = 0;
    uint64_t v38 = v117;
    sub_10001AE98((uint64_t)v120, (uint64_t)v118, &qword_100AD6320);
    sub_10001AE98((uint64_t)v118, (uint64_t)v119, &qword_100AD6320);
    if (sub_1000D3324((uint64_t)v119) != 1)
    {
      uint64_t v59 = v121;
      uint64_t v60 = v115;
      memcpy(v115, v120, 0x1F0uLL);
      v60[62] = v59;
LABEL_24:
      uint64_t v62 = v60;
      Filename.init(rawValue:)(*(Swift::String *)(&v61 - 1));
      return;
    }
  }
  else
  {
    uint64_t v111 = a9;
    uint64_t v36 = v20;
    uint64_t v144 = v9;
    uint64_t v37 = v116;
    uint64_t v38 = v117;
  }
  sub_1004A51AC(v138, &v139);
  sub_1004A51AC(&v139, &v142);
  if (v143 || (unint64_t v39 = v142.n128_u64[0]) == 0)
  {
LABEL_4:
    sub_1004A5990((uint64_t)v120);
    sub_10001AE98((uint64_t)v120, (uint64_t)v115, &qword_100AD6320);
    return;
  }
  uint64_t v116 = v22;
  uint64_t v40 = v38;
  uint64_t v41 = v37;
  uint64_t v42 = v16;
  uint64_t v43 = v18;
  uint64_t v44 = v36;
  char v45 = v111;
  while (1)
  {
    char v46 = __clz(__rbit64(v39));
    if (v46 < 0x40) {
      break;
    }
LABEL_10:
    if (!v39) {
      goto LABEL_4;
    }
  }
  uint64_t v47 = 1 << v46;
  if (((1 << v46) & v39) != 0) {
    uint64_t v48 = ~v47;
  }
  else {
    uint64_t v48 = -1;
  }
  v39 &= v48;
  if (v47 != 512)
  {
    if ((v47 > 0x10 || ((1 << v47) & 0x10114) == 0) && v47 != 1024) {
      goto LABEL_10;
    }
    uint64_t v111 = v45;
    uint64_t v112 = v42;
    uint64_t v63 = sub_10002B7CC(&qword_100AD0D90);
    char v64 = v113;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v113, 1, 1, v63);
    char v65 = v116;
    uint64_t v66 = v144;
    sub_10073E8C8((uint64_t)&v127);
    uint64_t v144 = v66;
    if (v66)
    {
      sub_10002B770(v64, &qword_100AD6368);
      return;
    }
    uint64_t v110 = v43;
    sub_10002B770(v64, &qword_100AD6368);
    uint64_t v67 = v128;
    if (HIBYTE(v128) > 0xFEu)
    {
      uint64_t v68 = v127;
      uint64_t v69 = v115;
LABEL_29:
      memcpy(v69, (const void *)v23, 0x1F0uLL);
      uint64_t v70 = sub_100650088(v47, 0);
      sub_10035751C(v23);
      sub_1004A4F10(v68, v67);
      v69[62] = v70;
LABEL_30:
      uint64_t v72 = v69;
      Filename.init(rawValue:)(*(Swift::String *)(&v71 - 1));
      return;
    }
    int v113 = v44;
    uint64_t v78 = *(void *)(v65 + 16);
    char v125 = v127;
    BOOL v126 = v128 & 0x1FF;
    uint64_t v79 = *(void (**)(_OWORD *__return_ptr, id *, uint64_t))(*(void *)v78 + 168);
    uint64_t v68 = v127;
    sub_10009C394(v127, v128, HIBYTE(v128) & 1);
    uint64_t v80 = v144;
    v79(v124, &v125, 1);
    uint64_t v144 = v80;
    if (v80)
    {
LABEL_34:
      sub_1004A4F10(v68, v67);
      sub_1004A4F10(v68, v67);
      return;
    }
    sub_10001AE98((uint64_t)v124, (uint64_t)v122, (uint64_t *)&unk_100AD67E0);
    sub_10001AE98((uint64_t)v122, (uint64_t)v123, (uint64_t *)&unk_100AD67E0);
    uint64_t v83 = sub_1000D3324((uint64_t)v123);
    uint64_t v69 = v115;
    if (v83 != 1)
    {
      memcpy(v140, v124, sizeof(v140));
      uint64_t v107 = v144;
      sub_1004711CC((uint64_t)v140, v116, v113, v110, v112, v41, v117, v114, v111);
      uint64_t v144 = v107;
      if (v107)
      {
        sub_1000D3440((uint64_t)v140);
        goto LABEL_34;
      }
      sub_10001AE98((uint64_t)v120, (uint64_t)v118, &qword_100ADC000);
      sub_10001AE98((uint64_t)v118, (uint64_t)v119, &qword_100ADC000);
      if (sub_1000D3324((uint64_t)v119) != 1)
      {
        uint64_t v108 = v121;
        memcpy(v69, v120, 0x1F0uLL);
        unint64_t v109 = sub_100650088(v47, v108);
        swift_errorRelease();
        sub_1000D3440((uint64_t)v140);
        sub_1004A4F10(v68, v67);
        sub_1004A4F10(v68, v67);
        v69[62] = v109;
        goto LABEL_30;
      }
      sub_1000D3440((uint64_t)v140);
    }
    sub_1004A4F10(v68, v67);
    goto LABEL_29;
  }
  uint64_t v49 = v45;
  uint64_t v50 = v44;
  uint64_t v51 = v44;
  uint64_t v52 = v43;
  uint64_t v53 = v43;
  uint64_t v54 = v42;
  uint64_t v55 = v144;
  uint64_t v56 = v41;
  uint64_t v57 = v41;
  uint64_t v58 = v40;
  sub_10046EC80((uint64_t *)v23, v116, v51, v53, v42, v57, v40, v114, v120, v45);
  if (v55) {
    return;
  }
  uint64_t v144 = 0;
  sub_10001AE98((uint64_t)v120, (uint64_t)v118, &qword_100AD6320);
  sub_10001AE98((uint64_t)v118, (uint64_t)v119, &qword_100AD6320);
  if (sub_1000D3324((uint64_t)v119) == 1)
  {
    uint64_t v40 = v58;
    uint64_t v41 = v56;
    uint64_t v42 = v54;
    uint64_t v43 = v52;
    uint64_t v44 = v50;
    char v45 = v49;
    goto LABEL_10;
  }
  uint64_t v73 = v121;
  memcpy(v141, v120, sizeof(v141));
  uint64_t v74 = sub_10002B7CC(&qword_100AD0D90);
  uint64_t v75 = v112;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v112, 1, 1, v74);
  uint64_t v76 = v144;
  sub_10073E8C8((uint64_t)v124);
  uint64_t v144 = v76;
  if (v76)
  {
    swift_errorRelease();
    sub_10002B770(v75, &qword_100AD6368);
    sub_1000D3440((uint64_t)v141);
    return;
  }
  uint64_t v81 = v77;
  sub_10002B770(v75, &qword_100AD6368);
  sub_1004A4F10(*(void **)&v124[0], WORD4(v124[0]));
  if (sub_1001EBC84(v81) == 0x65526D6165727473 && v82 == 0xEB00000000746573)
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  uint64_t v84 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if ((v84 & 1) == 0)
  {
    uint64_t v60 = v115;
    memcpy(v115, v141, 0x1F0uLL);
    v60[62] = v73;
    goto LABEL_24;
  }
LABEL_41:
  uint64_t v85 = (void *)sub_10096ABE0();
  uint64_t v86 = [v85 underlyingErrors];
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  uint64_t v87 = (void *)sub_10096C0A0();

  sub_1004A485C();
  uint64_t v88 = swift_allocError();
  *(void *)uint64_t v89 = 17;
  *(unsigned char *)(v89 + 8) = 11;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v117 = v73;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v87 = sub_1006A2428(0, v87[2] + 1, 1, v87);
  }
  uint64_t v92 = v87[2];
  uint64_t v91 = v87[3];
  if (v92 >= v91 >> 1) {
    uint64_t v87 = sub_1006A2428((void *)(v91 > 1), v92 + 1, 1, v87);
  }
  v87[2] = v92 + 1;
  v87[v92 + 4] = v88;
  unsigned int v93 = [v85 userInfo];
  uint64_t v94 = sub_10096B9C0();

  uint64_t v95 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v97 = v96;
  *((void *)&v124[1] + 1) = sub_10002B7CC((uint64_t *)&unk_100AD6330);
  *(void *)&v124[0] = v87;
  sub_100042A48(v124, v123);
  uint64_t v98 = swift_isUniquelyReferenced_nonNull_native();
  v122[0] = v94;
  sub_10037BFD0(v123, v95, v97, v98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v99 = v115;
  memcpy(v115, v141, 0x1F0uLL);
  sub_10035751C((uint64_t)v141);
  uint64_t v100 = [v85 domain];
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  uint64_t v101 = [v85 code];
  uint64_t v102 = objc_allocWithZone((Class)NSError);
  uint64_t v103 = sub_10096BC00();
  swift_bridgeObjectRelease();
  Class isa = sub_10096B9A0().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v105 = [v102 initWithDomain:v103 code:v101 userInfo:isa];

  swift_errorRelease();
  sub_1000D3440((uint64_t)v141);
  v99[62] = v105;
  v106._int countAndFlagsBits = (uint64_t)v99;
  Filename.init(rawValue:)(v106);
}

void sub_10047A910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100479EE0(a1, a2, a3, a4, a5, (uint64_t)sub_1004A7B60, (uint64_t)sub_100472DAC, (uint64_t)sub_10047A910, (void (*)(void *__return_ptr, unsigned char *, uint64_t, char *, uint64_t, void *))sub_10047B378);
}

void sub_10047A980(uint64_t a1)
{
  void (*v3)(void *__return_ptr, __n128 *, uint64_t, char *);
  void (*v4)(void *__return_ptr, void, void, void, void);
  void (*v5)(void *__return_ptr, __n128 *, uint64_t, char *, void (*)(void *__return_ptr, void, void, void));
  void (*v6)(void *__return_ptr, __n128 *, uint64_t, char *, void (*)(void *__return_ptr, void, void, void));
  void (*v7)(void *__return_ptr, __n128 *, uint64_t, char *);
  void (*v8)(void *__return_ptr, __n128 *, uint64_t, char *);
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  Swift::String v29;
  unint64_t v30;
  void (*v31)(void *__return_ptr, __n128 *, uint64_t, char *);
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(void *__return_ptr, __n128 *, uint64_t, char *);
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void (*v46)(void *__return_ptr, __n128 *, uint64_t, char *);
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void (*v51)(_OWORD *__return_ptr, id *, uint64_t);
  char v52;
  uint64_t v53;
  int v54;
  char v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  unint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  id v72;
  id v73;
  NSString v74;
  Class isa;
  id v76;
  Swift::String v77;
  Swift::String v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void (*v83)(void *__return_ptr, unsigned char *, uint64_t, char *, void (*)(void *__return_ptr, __n128 *, uint64_t, char *));
  char *v84;
  unsigned char v85[520];
  unsigned char v86[520];
  void v87[62];
  uint64_t v88;
  void v89[63];
  _OWORD v90[31];
  _OWORD v91[31];
  id v92;
  __int16 v93;
  id v94;
  unsigned __int16 v95;
  __n128 v96;
  __n128 v97;
  __n128 v98;
  __n128 v99;
  __n128 v100;
  __n128 v101;
  __n128 v102;
  __n128 v103;
  __n128 v104;
  __n128 v105[6];
  __n128 v106;
  unsigned char v107[496];
  unsigned char v108[496];
  __n128 v109;
  char v110;
  void (*v111)(void *__return_ptr, __n128 *, uint64_t, char *);

  uint64_t v2 = __chkstk_darwin(a1);
  uint64_t v111 = v3;
  uint64_t v83 = v4;
  long long v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = (__n128 *)v2;
  uint64_t v15 = v14;
  uint64_t v16 = sub_10002B7CC(&qword_100AD6368);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v84 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v81 - v19;
  uint64_t v21 = v13[13];
  v105[3] = v13[12];
  v105[4] = v21;
  v105[5] = v13[14];
  uint64_t v22 = v13[9];
  uint64_t v104 = v13[8];
  v105[0] = v22;
  uint64_t v23 = v13[10];
  v105[2] = v13[11];
  v105[1] = v23;
  uint64_t v24 = v13[5];
  uint64_t v100 = v13[4];
  uint64_t v101 = v24;
  uint64_t v25 = v13[6];
  uint64_t v103 = v13[7];
  uint64_t v102 = v25;
  uint64_t v26 = v13[1];
  uint64_t v96 = *v13;
  uint64_t v97 = v26;
  uint64_t v27 = v13[2];
  uint64_t v99 = v13[3];
  uint64_t v98 = v27;
  if ((v97.n128_u8[0] & 4) != 0)
  {
    v6(v87, v13, v12, v10, (void (*)(void *__return_ptr, void, void, void))v8);
    if (v1) {
      return;
    }
    sub_10001AE98((uint64_t)v87, (uint64_t)v85, &qword_100AD6320);
    sub_10001AE98((uint64_t)v85, (uint64_t)v86, &qword_100AD6320);
    if (sub_1000D3324((uint64_t)v86) != 1)
    {
      __n128 v28 = v88;
      memcpy(v15, v87, 0x1F0uLL);
      v15[62] = v28;
      v29._int countAndFlagsBits = (uint64_t)v15;
      Filename.init(rawValue:)(v29);
      return;
    }
  }
  sub_1004A51AC(v105, &v106);
  sub_1004A51AC(&v106, &v109);
  if (v110)
  {
    sub_1004A5990((uint64_t)v87);
    sub_10001AE98((uint64_t)v87, (uint64_t)v15, &qword_100AD6320);
    return;
  }
  uint64_t v81 = v15;
  __n128 v30 = v109.n128_u64[0];
  if (!v109.n128_u64[0])
  {
LABEL_23:
    sub_1004A5990((uint64_t)v87);
    sub_10001AE98((uint64_t)v87, (uint64_t)v81, &qword_100AD6320);
    return;
  }
  uint64_t v82 = v12;
  long long v31 = v8;
  long long v32 = v10;
  long long v33 = v1;
  while (1)
  {
    long long v34 = __clz(__rbit64(v30));
    if (v34 < 0x40) {
      break;
    }
LABEL_11:
    if (!v30) {
      goto LABEL_23;
    }
  }
  uint64_t v35 = 1 << v34;
  if (((1 << v34) & v30) != 0) {
    uint64_t v36 = ~v35;
  }
  else {
    uint64_t v36 = -1;
  }
  v30 &= v36;
  if (v35 != 512)
  {
    if ((v35 > 0x10 || ((1 << v35) & 0x10114) == 0) && v35 != 1024) {
      goto LABEL_11;
    }
    uint64_t v84 = v32;
    uint64_t v111 = v31;
    uint64_t v38 = sub_10002B7CC(&qword_100AD0D90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v20, 1, 1, v38);
    unint64_t v39 = v82;
    sub_10073E8C8((uint64_t)&v94);
    if (v33)
    {
      sub_10002B770((uint64_t)v20, &qword_100AD6368);
      return;
    }
    sub_10002B770((uint64_t)v20, &qword_100AD6368);
    uint64_t v40 = v94;
    uint64_t v41 = v95;
    if (HIBYTE(v95) <= 0xFEu)
    {
      uint64_t v50 = *(void *)(v39 + 16);
      uint64_t v92 = v94;
      unsigned int v93 = v95 & 0x1FF;
      uint64_t v51 = *(void (**)(_OWORD *__return_ptr, id *, uint64_t))(*(void *)v50 + 168);
      sub_10009C394(v94, v95, HIBYTE(v95) & 1);
      v51(v91, &v92, 1);
      sub_10001AE98((uint64_t)v91, (uint64_t)v89, (uint64_t *)&unk_100AD67E0);
      sub_10001AE98((uint64_t)v89, (uint64_t)v90, (uint64_t *)&unk_100AD67E0);
      uint64_t v54 = sub_1000D3324((uint64_t)v90);
      uint64_t v42 = v81;
      if (v54 != 1)
      {
        memcpy(v107, v91, sizeof(v107));
        v83(v87, v107, v82, v84, v111);
        sub_10001AE98((uint64_t)v87, (uint64_t)v85, &qword_100ADC000);
        sub_10001AE98((uint64_t)v85, (uint64_t)v86, &qword_100ADC000);
        if (sub_1000D3324((uint64_t)v86) != 1)
        {
          uint64_t v79 = v88;
          memcpy(v42, v87, 0x1F0uLL);
          uint64_t v80 = sub_100650088(v35, v79);
          swift_errorRelease();
          sub_1000D3440((uint64_t)v107);
          sub_1004A4F10(v40, v41);
          sub_1004A4F10(v40, v41);
          v42[62] = v80;
          goto LABEL_29;
        }
        sub_1000D3440((uint64_t)v107);
      }
      sub_1004A4F10(v40, v41);
    }
    else
    {
      uint64_t v42 = v81;
    }
    memcpy(v42, v13, 0x1F0uLL);
    uint64_t v43 = sub_100650088(v35, 0);
    sub_10035751C((uint64_t)v13);
    sub_1004A4F10(v40, v41);
    v42[62] = v43;
LABEL_29:
    char v45 = v42;
    Filename.init(rawValue:)(*(Swift::String *)(&v44 - 1));
    return;
  }
  uint64_t v37 = v31;
  v111(v87, v13, v82, v32);
  if (v33) {
    return;
  }
  sub_10001AE98((uint64_t)v87, (uint64_t)v85, &qword_100AD6320);
  sub_10001AE98((uint64_t)v85, (uint64_t)v86, &qword_100AD6320);
  if (sub_1000D3324((uint64_t)v86) == 1)
  {
    long long v31 = v37;
    long long v33 = 0;
    goto LABEL_11;
  }
  char v46 = (void (*)(void *__return_ptr, __n128 *, uint64_t, char *))v88;
  memcpy(v108, v87, sizeof(v108));
  uint64_t v47 = sub_10002B7CC(&qword_100AD0D90);
  uint64_t v48 = (uint64_t)v84;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v84, 1, 1, v47);
  sub_10073E8C8((uint64_t)v91);
  uint64_t v52 = v49;
  sub_10002B770(v48, &qword_100AD6368);
  sub_1004A4F10(*(void **)&v91[0], WORD4(v91[0]));
  if (sub_1001EBC84(v52) == 0x65526D6165727473 && v53 == 0xEB00000000746573)
  {
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  uint64_t v55 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  uint64_t v56 = v81;
  if (v55)
  {
LABEL_38:
    uint64_t v57 = (void *)sub_10096ABE0();
    uint64_t v58 = [v57 underlyingErrors];
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    uint64_t v59 = (void *)sub_10096C0A0();

    sub_1004A485C();
    uint64_t v60 = swift_allocError();
    *(void *)uint64_t v61 = 17;
    *(unsigned char *)(v61 + 8) = 11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v111 = v46;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v59 = sub_1006A2428(0, v59[2] + 1, 1, v59);
    }
    char v64 = v59[2];
    uint64_t v63 = v59[3];
    if (v64 >= v63 >> 1) {
      uint64_t v59 = sub_1006A2428((void *)(v63 > 1), v64 + 1, 1, v59);
    }
    v59[2] = v64 + 1;
    v59[v64 + 4] = v60;
    char v65 = objc_msgSend(v57, "userInfo", v81);
    uint64_t v66 = sub_10096B9C0();

    uint64_t v67 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v69 = v68;
    *((void *)&v91[1] + 1) = sub_10002B7CC((uint64_t *)&unk_100AD6330);
    *(void *)&v91[0] = v59;
    sub_100042A48(v91, v90);
    uint64_t v70 = swift_isUniquelyReferenced_nonNull_native();
    v89[0] = v66;
    sub_10037BFD0(v90, v67, v69, v70);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v81, v108, 0x1F0uLL);
    sub_10035751C((uint64_t)v108);
    uint64_t v71 = [v57 domain];
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    uint64_t v72 = [v57 code];
    uint64_t v73 = objc_allocWithZone((Class)NSError);
    uint64_t v74 = sub_10096BC00();
    swift_bridgeObjectRelease();
    Class isa = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v76 = [v73 initWithDomain:v74 code:v72 userInfo:isa];

    swift_errorRelease();
    sub_1000D3440((uint64_t)v108);
    v77._int countAndFlagsBits = (uint64_t)v81;
    v81[62] = v76;
    Filename.init(rawValue:)(v77);
  }
  else
  {
    memcpy(v81, v108, 0x1F0uLL);
    v56[62] = v46;
    v78._int countAndFlagsBits = (uint64_t)v56;
    Filename.init(rawValue:)(v78);
  }
}

void sub_10047B338(uint64_t a1)
{
}

void sub_10047B378(uint64_t a1)
{
}

void sub_10047B3B8(uint64_t a1)
{
  void (*v3)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, char *, uint64_t);
  void (*v4)(uint64_t *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v5)(uint64_t *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  long long v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  void (*v53)(_OWORD *__return_ptr, id *, uint64_t);
  char v54;
  uint64_t v55;
  int v56;
  char v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v64;
  unint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  NSString v76;
  Class isa;
  id v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  void (*v86)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, char *, uint64_t);
  char *v87;
  char *v88;
  unsigned char v89[520];
  unsigned char v90[520];
  void v91[62];
  uint64_t v92;
  void v93[63];
  _OWORD v94[31];
  _OWORD v95[31];
  id v96;
  __int16 v97;
  id v98;
  unsigned __int16 v99;
  long long v100;
  long long v101;
  long long v102;
  long long v103;
  long long v104;
  long long v105;
  _OWORD v106[6];
  uint64_t v107;
  __n128 v108;
  unsigned char v109[496];
  unsigned char v110[496];
  __n128 v111;
  char v112;
  uint64_t v113;

  uint64_t v2 = __chkstk_darwin(a1);
  uint64_t v86 = v3;
  uint64_t v5 = v4;
  long long v6 = v1;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = v2;
  uint64_t v17 = v16;
  uint64_t v18 = sub_10002B7CC(&qword_100AD6910);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v87 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v88 = (char *)&v83 - v21;
  uint64_t v22 = *(_OWORD *)(v15 + 176);
  v106[4] = *(_OWORD *)(v15 + 160);
  v106[5] = v22;
  uint64_t v107 = *(void *)(v15 + 192);
  uint64_t v23 = *(_OWORD *)(v15 + 112);
  v106[0] = *(_OWORD *)(v15 + 96);
  v106[1] = v23;
  uint64_t v24 = *(_OWORD *)(v15 + 128);
  v106[3] = *(_OWORD *)(v15 + 144);
  v106[2] = v24;
  uint64_t v25 = *(_OWORD *)(v15 + 48);
  uint64_t v102 = *(_OWORD *)(v15 + 32);
  uint64_t v103 = v25;
  uint64_t v26 = *(_OWORD *)(v15 + 64);
  uint64_t v105 = *(_OWORD *)(v15 + 80);
  uint64_t v104 = v26;
  uint64_t v27 = *(_OWORD *)v15;
  uint64_t v101 = *(_OWORD *)(v15 + 16);
  uint64_t v100 = v27;
  int v113 = v8;
  if ((BYTE8(v27) & 4) != 0)
  {
    sub_100476F5C((void **)v15, v14, v12, v10, v8, v5, v91);
    if (v1) {
      return;
    }
    long long v6 = 0;
    sub_10001AE98((uint64_t)v91, (uint64_t)v89, &qword_100AD6328);
    sub_10001AE98((uint64_t)v89, (uint64_t)v90, &qword_100AD6328);
    if (sub_1000D3324((uint64_t)v90) != 1)
    {
      __n128 v29 = v92;
      memcpy(v17, v91, 0x1F0uLL);
      v17[62] = v29;
      v30._int countAndFlagsBits = (uint64_t)v17;
      Filename.init(rawValue:)(v30);
      return;
    }
  }
  sub_1004A51AC((__n128 *)((char *)v106 + 8), &v108);
  sub_1004A51AC(&v108, &v111);
  if (v112)
  {
    sub_1004A5990((uint64_t)v91);
    __n128 v28 = (uint64_t)v17;
LABEL_23:
    sub_10001AE98((uint64_t)v91, v28, &qword_100AD6328);
    return;
  }
  uint64_t v84 = v17;
  uint64_t v85 = v14;
  long long v31 = v111.n128_u64[0];
  if (!v111.n128_u64[0])
  {
LABEL_22:
    sub_1004A5990((uint64_t)v91);
    __n128 v28 = (uint64_t)v84;
    goto LABEL_23;
  }
  long long v32 = v10;
  long long v33 = v12;
  while (1)
  {
    long long v34 = __clz(__rbit64(v31));
    if (v34 >= 0x40) {
      goto LABEL_10;
    }
    uint64_t v35 = 1 << v34;
    uint64_t v36 = ((1 << v34) & v31) != 0 ? ~v35 : -1;
    v31 &= v36;
    if (v35 == 512) {
      break;
    }
    if (v35 <= 0x10 && ((1 << v35) & 0x10114) != 0 || v35 == 1024)
    {
      uint64_t v83 = v33;
      uint64_t v87 = (char *)v32;
      unint64_t v39 = sub_10002B7CC((uint64_t *)&unk_100AD6340);
      uint64_t v40 = (uint64_t)v88;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v88, 1, 1, v39);
      uint64_t v41 = v85;
      sub_10073477C((uint64_t)&v98);
      if (v6)
      {
        sub_10002B770(v40, &qword_100AD6910);
        return;
      }
      sub_10002B770(v40, &qword_100AD6910);
      uint64_t v42 = v98;
      uint64_t v43 = v99;
      if (HIBYTE(v99) <= 0xFEu)
      {
        uint64_t v52 = *(void *)(v41 + 16);
        uint64_t v96 = v98;
        uint64_t v97 = v99 & 0x1FF;
        uint64_t v53 = *(void (**)(_OWORD *__return_ptr, id *, uint64_t))(*(void *)v52 + 168);
        sub_10014E450(v98, v99, HIBYTE(v99) & 1);
        v53(v95, &v96, 1);
        sub_10001AE98((uint64_t)v95, (uint64_t)v93, &qword_100AD6800);
        sub_10001AE98((uint64_t)v93, (uint64_t)v94, &qword_100AD6800);
        uint64_t v56 = sub_1000D3324((uint64_t)v94);
        uint64_t v44 = v84;
        if (v56 != 1)
        {
          memcpy(v109, v95, sizeof(v109));
          v86(v91, v109, v85, v83, v87, v113);
          sub_10001AE98((uint64_t)v91, (uint64_t)v89, (uint64_t *)&unk_100AD6310);
          sub_10001AE98((uint64_t)v89, (uint64_t)v90, (uint64_t *)&unk_100AD6310);
          if (sub_1000D3324((uint64_t)v90) != 1)
          {
            uint64_t v80 = v92;
            memcpy(v44, v91, 0x1F0uLL);
            uint64_t v81 = v44;
            uint64_t v82 = sub_100650088(v35, v80);
            swift_errorRelease();
            sub_1000DBF50((uint64_t)v109);
            sub_1004A5208(v42, v43);
            sub_1004A5208(v42, v43);
            v81[62] = v82;
            uint64_t v47 = v81;
            goto LABEL_30;
          }
          sub_1000DBF50((uint64_t)v109);
        }
        sub_1004A5208(v42, v43);
      }
      else
      {
        uint64_t v44 = v84;
      }
      memcpy(v44, (const void *)v15, 0x1F0uLL);
      char v45 = sub_100650088(v35, 0);
      sub_1004A4AF8(v15);
      sub_1004A5208(v42, v43);
      v44[62] = v45;
      uint64_t v47 = v44;
      goto LABEL_30;
    }
LABEL_10:
    if (!v31) {
      goto LABEL_22;
    }
  }
  uint64_t v37 = v33;
  uint64_t v38 = v32;
  sub_10046DB54((void **)v15, v85, v33, v32, v113, v5, v91);
  if (v6) {
    return;
  }
  long long v6 = 0;
  sub_10001AE98((uint64_t)v91, (uint64_t)v89, &qword_100AD6328);
  sub_10001AE98((uint64_t)v89, (uint64_t)v90, &qword_100AD6328);
  if (sub_1000D3324((uint64_t)v90) == 1)
  {
    long long v32 = v38;
    long long v33 = v37;
    goto LABEL_10;
  }
  uint64_t v48 = (char *)v92;
  memcpy(v110, v91, sizeof(v110));
  uint64_t v49 = sub_10002B7CC((uint64_t *)&unk_100AD6340);
  uint64_t v50 = (uint64_t)v87;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v87, 1, 1, v49);
  sub_10073477C((uint64_t)v95);
  int v113 = 0;
  uint64_t v54 = v51;
  sub_10002B770(v50, &qword_100AD6910);
  sub_1004A5208(*(void **)&v95[0], WORD4(v95[0]));
  if (sub_1001EBC84(v54) == 0x65526D6165727473 && v55 == 0xEB00000000746573)
  {
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  uint64_t v57 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v57)
  {
LABEL_39:
    uint64_t v58 = (void *)sub_10096ABE0();
    uint64_t v59 = [v58 underlyingErrors];
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    uint64_t v60 = (void *)sub_10096C0A0();

    sub_1004A485C();
    uint64_t v61 = swift_allocError();
    *(void *)uint64_t v62 = 17;
    *(unsigned char *)(v62 + 8) = 11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v88 = v48;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v60 = sub_1006A2428(0, v60[2] + 1, 1, v60);
    }
    char v65 = v60[2];
    char v64 = v60[3];
    if (v65 >= v64 >> 1) {
      uint64_t v60 = sub_1006A2428((void *)(v64 > 1), v65 + 1, 1, v60);
    }
    void v60[2] = v65 + 1;
    v60[v65 + 4] = v61;
    uint64_t v66 = [v58 userInfo];
    uint64_t v67 = sub_10096B9C0();

    uint64_t v68 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v70 = v69;
    *((void *)&v95[1] + 1) = sub_10002B7CC((uint64_t *)&unk_100AD6330);
    *(void *)&v95[0] = v60;
    sub_100042A48(v95, v94);
    uint64_t v71 = swift_isUniquelyReferenced_nonNull_native();
    v93[0] = v67;
    sub_10037BFD0(v94, v68, v70, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v72 = v84;
    memcpy(v84, v110, 0x1F0uLL);
    sub_1004A4AF8((uint64_t)v110);
    uint64_t v73 = [v58 domain];
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    uint64_t v74 = [v58 code];
    uint64_t v75 = objc_allocWithZone((Class)NSError);
    uint64_t v76 = sub_10096BC00();
    swift_bridgeObjectRelease();
    Class isa = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v78 = [v75 initWithDomain:v76 code:v74 userInfo:isa];

    swift_errorRelease();
    sub_1000DBF50((uint64_t)v110);
    v72[62] = v78;
    uint64_t v47 = v72;
  }
  else
  {
    uint64_t v79 = v84;
    memcpy(v84, v110, 0x1F0uLL);
    v79[62] = v48;
    uint64_t v47 = v79;
  }
LABEL_30:
  Filename.init(rawValue:)(*(Swift::String *)&v47);
}

void sub_10047BD7C(uint64_t a1)
{
  void (*v3)(void *__return_ptr, _OWORD *, uint64_t, char *);
  void (*v4)(void *__return_ptr, void, void, void, void);
  void (*v5)(void *__return_ptr, void, void, void, void);
  void (*v6)(void *__return_ptr, _OWORD *, uint64_t, char *, void (*)(void *__return_ptr, _OWORD *, uint64_t, char *));
  void (*v7)(void *__return_ptr, _OWORD *, uint64_t, char *);
  void (*v8)(void *__return_ptr, _OWORD *, uint64_t, char *);
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  uint64_t v27;
  Swift::String v28;
  unint64_t v29;
  void (*v30)(void *__return_ptr, _OWORD *, uint64_t, char *);
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(void *__return_ptr, _OWORD *, uint64_t, char *);
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void (*v45)(void *__return_ptr, _OWORD *, uint64_t, char *);
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  void (*v50)(_OWORD *__return_ptr, id *, uint64_t);
  char v51;
  uint64_t v52;
  int v53;
  char v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v62;
  unint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  id v70;
  id v71;
  id v72;
  NSString v73;
  Class isa;
  id v75;
  Swift::String v76;
  Swift::String v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void (*v82)(void *__return_ptr, unsigned char *, uint64_t, char *, void (*)(void *__return_ptr, _OWORD *, uint64_t, char *));
  char *v83;
  unsigned char v84[520];
  unsigned char v85[520];
  void v86[62];
  uint64_t v87;
  void v88[63];
  _OWORD v89[31];
  _OWORD v90[31];
  id v91;
  __int16 v92;
  id v93;
  unsigned __int16 v94;
  long long v95;
  long long v96;
  long long v97;
  long long v98;
  long long v99;
  long long v100;
  _OWORD v101[6];
  uint64_t v102;
  __n128 v103;
  unsigned char v104[496];
  unsigned char v105[496];
  __n128 v106;
  char v107;
  void (*v108)(void *__return_ptr, _OWORD *, uint64_t, char *);

  uint64_t v2 = __chkstk_darwin(a1);
  uint64_t v108 = v3;
  uint64_t v82 = v4;
  long long v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = (_OWORD *)v2;
  uint64_t v15 = v14;
  uint64_t v16 = sub_10002B7CC(&qword_100AD6910);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v83 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v80 - v19;
  uint64_t v21 = v13[11];
  void v101[4] = v13[10];
  v101[5] = v21;
  uint64_t v102 = *((void *)v13 + 24);
  uint64_t v22 = v13[7];
  v101[0] = v13[6];
  v101[1] = v22;
  uint64_t v23 = v13[8];
  v101[3] = v13[9];
  v101[2] = v23;
  uint64_t v24 = v13[3];
  uint64_t v97 = v13[2];
  uint64_t v98 = v24;
  uint64_t v25 = v13[4];
  uint64_t v100 = v13[5];
  uint64_t v99 = v25;
  uint64_t v26 = *v13;
  uint64_t v96 = v13[1];
  uint64_t v95 = v26;
  if ((BYTE8(v26) & 4) != 0)
  {
    v6(v86, v13, v12, v10, v8);
    if (v1) {
      return;
    }
    sub_10001AE98((uint64_t)v86, (uint64_t)v84, &qword_100AD6328);
    sub_10001AE98((uint64_t)v84, (uint64_t)v85, &qword_100AD6328);
    if (sub_1000D3324((uint64_t)v85) != 1)
    {
      uint64_t v27 = v87;
      memcpy(v15, v86, 0x1F0uLL);
      v15[62] = v27;
      v28._int countAndFlagsBits = (uint64_t)v15;
      Filename.init(rawValue:)(v28);
      return;
    }
  }
  sub_1004A51AC((__n128 *)((char *)v101 + 8), &v103);
  sub_1004A51AC(&v103, &v106);
  if (v107)
  {
    sub_1004A5990((uint64_t)v86);
    sub_10001AE98((uint64_t)v86, (uint64_t)v15, &qword_100AD6328);
    return;
  }
  uint64_t v80 = v15;
  __n128 v29 = v106.n128_u64[0];
  if (!v106.n128_u64[0])
  {
LABEL_23:
    sub_1004A5990((uint64_t)v86);
    sub_10001AE98((uint64_t)v86, (uint64_t)v80, &qword_100AD6328);
    return;
  }
  uint64_t v81 = v12;
  __n128 v30 = v8;
  long long v31 = v10;
  long long v32 = v1;
  while (1)
  {
    long long v33 = __clz(__rbit64(v29));
    if (v33 < 0x40) {
      break;
    }
LABEL_11:
    if (!v29) {
      goto LABEL_23;
    }
  }
  long long v34 = 1 << v33;
  if (((1 << v33) & v29) != 0) {
    uint64_t v35 = ~v34;
  }
  else {
    uint64_t v35 = -1;
  }
  v29 &= v35;
  if (v34 != 512)
  {
    if ((v34 > 0x10 || ((1 << v34) & 0x10114) == 0) && v34 != 1024) {
      goto LABEL_11;
    }
    uint64_t v83 = v31;
    uint64_t v108 = v30;
    uint64_t v37 = sub_10002B7CC((uint64_t *)&unk_100AD6340);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v20, 1, 1, v37);
    uint64_t v38 = v81;
    sub_10073477C((uint64_t)&v93);
    if (v32)
    {
      sub_10002B770((uint64_t)v20, &qword_100AD6910);
      return;
    }
    sub_10002B770((uint64_t)v20, &qword_100AD6910);
    unint64_t v39 = v93;
    uint64_t v40 = v94;
    if (HIBYTE(v94) <= 0xFEu)
    {
      uint64_t v49 = *(void *)(v38 + 16);
      uint64_t v91 = v93;
      uint64_t v92 = v94 & 0x1FF;
      uint64_t v50 = *(void (**)(_OWORD *__return_ptr, id *, uint64_t))(*(void *)v49 + 168);
      sub_10014E450(v93, v94, HIBYTE(v94) & 1);
      v50(v90, &v91, 1);
      sub_10001AE98((uint64_t)v90, (uint64_t)v88, &qword_100AD6800);
      sub_10001AE98((uint64_t)v88, (uint64_t)v89, &qword_100AD6800);
      uint64_t v53 = sub_1000D3324((uint64_t)v89);
      uint64_t v41 = v80;
      if (v53 != 1)
      {
        memcpy(v104, v90, sizeof(v104));
        v82(v86, v104, v81, v83, v108);
        sub_10001AE98((uint64_t)v86, (uint64_t)v84, (uint64_t *)&unk_100AD6310);
        sub_10001AE98((uint64_t)v84, (uint64_t)v85, (uint64_t *)&unk_100AD6310);
        if (sub_1000D3324((uint64_t)v85) != 1)
        {
          uint64_t v78 = v87;
          memcpy(v41, v86, 0x1F0uLL);
          uint64_t v79 = sub_100650088(v34, v78);
          swift_errorRelease();
          sub_1000DBF50((uint64_t)v104);
          sub_1004A5208(v39, v40);
          sub_1004A5208(v39, v40);
          v41[62] = v79;
          goto LABEL_29;
        }
        sub_1000DBF50((uint64_t)v104);
      }
      sub_1004A5208(v39, v40);
    }
    else
    {
      uint64_t v41 = v80;
    }
    memcpy(v41, v13, 0x1F0uLL);
    uint64_t v42 = sub_100650088(v34, 0);
    sub_1004A4AF8((uint64_t)v13);
    sub_1004A5208(v39, v40);
    v41[62] = v42;
LABEL_29:
    uint64_t v44 = v41;
    Filename.init(rawValue:)(*(Swift::String *)(&v43 - 1));
    return;
  }
  uint64_t v36 = v30;
  v108(v86, v13, v81, v31);
  if (v32) {
    return;
  }
  sub_10001AE98((uint64_t)v86, (uint64_t)v84, &qword_100AD6328);
  sub_10001AE98((uint64_t)v84, (uint64_t)v85, &qword_100AD6328);
  if (sub_1000D3324((uint64_t)v85) == 1)
  {
    __n128 v30 = v36;
    long long v32 = 0;
    goto LABEL_11;
  }
  char v45 = (void (*)(void *__return_ptr, _OWORD *, uint64_t, char *))v87;
  memcpy(v105, v86, sizeof(v105));
  char v46 = sub_10002B7CC((uint64_t *)&unk_100AD6340);
  uint64_t v47 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v83, 1, 1, v46);
  sub_10073477C((uint64_t)v90);
  uint64_t v51 = v48;
  sub_10002B770(v47, &qword_100AD6910);
  sub_1004A5208(*(void **)&v90[0], WORD4(v90[0]));
  if (sub_1001EBC84(v51) == 0x65526D6165727473 && v52 == 0xEB00000000746573)
  {
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  uint64_t v54 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  uint64_t v55 = v80;
  if (v54)
  {
LABEL_38:
    uint64_t v56 = (void *)sub_10096ABE0();
    uint64_t v57 = [v56 underlyingErrors];
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    uint64_t v58 = (void *)sub_10096C0A0();

    sub_1004A485C();
    uint64_t v59 = swift_allocError();
    *(void *)uint64_t v60 = 17;
    *(unsigned char *)(v60 + 8) = 11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v108 = v45;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v58 = sub_1006A2428(0, v58[2] + 1, 1, v58);
    }
    uint64_t v63 = v58[2];
    uint64_t v62 = v58[3];
    if (v63 >= v62 >> 1) {
      uint64_t v58 = sub_1006A2428((void *)(v62 > 1), v63 + 1, 1, v58);
    }
    v58[2] = v63 + 1;
    v58[v63 + 4] = v59;
    char v64 = objc_msgSend(v56, "userInfo", v80);
    char v65 = sub_10096B9C0();

    uint64_t v66 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v68 = v67;
    *((void *)&v90[1] + 1) = sub_10002B7CC((uint64_t *)&unk_100AD6330);
    *(void *)&v90[0] = v58;
    sub_100042A48(v90, v89);
    uint64_t v69 = swift_isUniquelyReferenced_nonNull_native();
    v88[0] = v65;
    sub_10037BFD0(v89, v66, v68, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v80, v105, 0x1F0uLL);
    sub_1004A4AF8((uint64_t)v105);
    uint64_t v70 = [v56 domain];
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    uint64_t v71 = [v56 code];
    uint64_t v72 = objc_allocWithZone((Class)NSError);
    uint64_t v73 = sub_10096BC00();
    swift_bridgeObjectRelease();
    Class isa = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v75 = [v72 initWithDomain:v73 code:v71 userInfo:isa];

    swift_errorRelease();
    sub_1000DBF50((uint64_t)v105);
    v76._int countAndFlagsBits = (uint64_t)v80;
    v80[62] = v75;
    Filename.init(rawValue:)(v76);
  }
  else
  {
    memcpy(v80, v105, 0x1F0uLL);
    v55[62] = v45;
    v77._int countAndFlagsBits = (uint64_t)v55;
    Filename.init(rawValue:)(v77);
  }
}

void sub_10047C728(uint64_t a1)
{
}

void sub_10047C768(uint64_t a1)
{
}

uint64_t sub_10047C7A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v169 = a5;
  uint64_t v167 = a3;
  uint64_t v168 = a4;
  uint64_t v171 = a1;
  char v166 = a6;
  uint64_t v6 = *(void *)(*a2 + 80);
  uint64_t v7 = *(void *)(*a2 + 88);
  uint64_t v8 = *(void *)(*a2 + 96);
  uint64_t v9 = *a2;
  int v173 = a2;
  uint64_t v10 = *(void *)(v9 + 104);
  *(void *)&long long v176 = v6;
  *((void *)&v176 + 1) = v7;
  uint64_t v177 = v8;
  uint64_t v178 = v10;
  uint64_t v11 = type metadata accessor for ItemReconciliation();
  uint64_t v170 = sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v172 = v11;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v141 = sub_10096C890();
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v146 = (char *)&v135 - v12;
  uint64_t v144 = sub_10096C890();
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v147 = (uint64_t)&v135 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v176 = AssociatedTypeWitness;
  *((void *)&v176 + 1) = v15;
  uint64_t v177 = AssociatedConformanceWitness;
  uint64_t v178 = v17;
  uint64_t v18 = type metadata accessor for ReconciliationID();
  uint64_t v153 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v150 = (char *)&v135 - v19;
  *(void *)&long long v176 = v6;
  *((void *)&v176 + 1) = v7;
  uint64_t v163 = v7;
  uint64_t v177 = v8;
  uint64_t v178 = v10;
  uint64_t v20 = v8;
  uint64_t v161 = v10;
  uint64_t v159 = type metadata accessor for PersistenceTrigger();
  uint64_t v21 = sub_10096C890();
  uint64_t v160 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v149 = (char *)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v157 = (char *)&v135 - v24;
  uint64_t v156 = v18;
  uint64_t v155 = sub_10096C890();
  uint64_t v154 = *(void *)(v155 - 8);
  uint64_t v25 = __chkstk_darwin(v155);
  uint64_t v148 = (char *)&v135 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v152 = (char *)&v135 - v28;
  __chkstk_darwin(v27);
  uint64_t v164 = (char *)&v135 - v29;
  uint64_t v30 = v172;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v32 = sub_10096C890();
  uint64_t v165 = *(void *)(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v135 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v135 - v37;
  uint64_t v39 = *(void *)(v30 - 8);
  uint64_t v40 = __chkstk_darwin(v36);
  uint64_t v151 = (char *)&v135 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v139 = (char *)&v135 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v145 = (char *)&v135 - v45;
  __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v135 - v46;
  uint64_t v158 = v6;
  uint64_t v162 = v20;
  uint64_t v48 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v49 = (char *)v171;
  if ((*(unsigned char *)(v171 + *(int *)(v48 + 36)) & 4) != 0)
  {
    uint64_t v138 = v39;
    uint64_t v53 = v174;
    uint64_t result = sub_1004782C4(v171, v173, v167, v168, v169, (uint64_t)v38);
    if (v53) {
      return result;
    }
    uint64_t v137 = v21;
    uint64_t v50 = (uint8_t *)v173;
    uint64_t v174 = 0;
    uint64_t v62 = *(void *)(TupleTypeMetadata2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v38, 1, TupleTypeMetadata2) != 1)
    {
      uint64_t v63 = *(void *)&v38[*(int *)(TupleTypeMetadata2 + 48)];
      char v64 = *(void (**)(char *, char *, uint64_t))(v138 + 32);
      uint64_t v65 = v172;
      v64(v47, v38, v172);
      uint64_t v66 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v67 = v166;
      v64(v166, v47, v65);
      *(void *)&v67[v66] = v63;
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v67, 0, 1, TupleTypeMetadata2);
    }
    (*(void (**)(char *, uint64_t))(v165 + 8))(v38, v32);
    uint64_t v39 = v138;
  }
  else
  {
    uint64_t v137 = v21;
    uint64_t v50 = (uint8_t *)v173;
  }
  uint64_t v51 = &v49[*(int *)(v48 + 64)];
  if (v51[16]) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v166, 1, 1, TupleTypeMetadata2);
  }
  unint64_t v54 = *(void *)v51;
  if (!*(void *)v51) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v166, 1, 1, TupleTypeMetadata2);
  }
  int v173 = (uint64_t *)(TupleTypeMetadata2 - 8);
  uint64_t v55 = (void (**)(char *, uint64_t))(v165 + 8);
  uint64_t v136 = TupleTypeMetadata2;
  while (1)
  {
    unint64_t v56 = __clz(__rbit64(v54));
    if (v56 > 0x3F) {
      goto LABEL_10;
    }
    unint64_t v57 = 1 << v56;
    unint64_t v58 = ((1 << v56) & v54) != 0 ? ~v57 : -1;
    v54 &= v58;
    if (v57 == 512) {
      break;
    }
    if (v57 <= 0x10 && ((1 << v57) & 0x10114) != 0 || v57 == 1024)
    {
      uint64_t v138 = v39;
      *(void *)&long long v176 = v158;
      *((void *)&v176 + 1) = v163;
      uint64_t v177 = v162;
      uint64_t v178 = v161;
      type metadata accessor for ReconciliationTable();
      uint64_t v68 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56))(v157, 1, 1);
      uint64_t v69 = v164;
      uint64_t v70 = v50;
      uint64_t v71 = v174;
      sub_1000F9B68(v164, v57, v49, v68, v50);
      if (v71) {
        return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v68, v137);
      }
      (*(void (**)(char *, uint64_t))(v160 + 8))(v68, v137);
      uint64_t v72 = v154;
      uint64_t v73 = v152;
      uint64_t v74 = v155;
      (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v152, v69, v155);
      uint64_t v75 = v153;
      uint64_t v76 = v156;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v73, 1, v156) == 1)
      {
        (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
        uint64_t v77 = v172;
        uint64_t v78 = v136;
      }
      else
      {
        uint64_t v91 = (uint64_t)v150;
        (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v150, v73, v76);
        uint64_t v92 = v147;
        sub_1000DEB74(v91, v147);
        uint64_t v77 = v172;
        uint64_t v95 = v138;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v92, 1, v172) == 1)
        {
          (*(void (**)(char *, uint64_t))(v153 + 8))(v150, v156);
          (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v92, v144);
        }
        else
        {
          uint64_t v119 = v145;
          uint64_t v120 = v92;
          char v121 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
          v121(v145, v120, v77);
          sub_100474B40(v119, v70, v167, v168, v169);
          uint64_t v174 = (char *)v121;
          uint64_t v124 = TupleTypeMetadata3;
          char v125 = v146;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 48))(v146, 1, TupleTypeMetadata3) != 1)
          {
            uint64_t v126 = *(int *)(v124 + 48);
            uint64_t v127 = v77;
            uint64_t v128 = *(void *)&v125[v126];
            unint64_t v129 = v139;
            ((void (*)(char *, char *, uint64_t))v174)(v139, v125, v127);
            uint64_t v130 = v136;
            uint64_t v174 = (char *)*(int *)(v136 + 48);
            uint64_t v131 = v138;
            uint64_t v132 = v166;
            (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v166, v129, v127);
            uint64_t v133 = sub_100650088(v57, v128);
            swift_errorRelease();
            uint64_t v134 = *(void (**)(char *, uint64_t))(v131 + 8);
            v134(v129, v127);
            v134(v145, v127);
            (*(void (**)(char *, uint64_t))(v153 + 8))(v150, v156);
            (*(void (**)(char *, uint64_t))(v72 + 8))(v164, v155);
            *(void *)&v174[(void)v132] = v133;
            return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v132, 0, 1, v130);
          }
          (*(void (**)(char *, uint64_t))(v138 + 8))(v145, v77);
          (*(void (**)(char *, uint64_t))(v153 + 8))(v150, v156);
          (*(void (**)(char *, uint64_t))(v140 + 8))(v125, v141);
        }
        uint64_t v78 = v136;
        uint64_t v74 = v155;
      }
      uint64_t v79 = *(int *)(v78 + 48);
      uint64_t v80 = v166;
      (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v166, v171, v77);
      uint64_t v81 = sub_100650088(v57, 0);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v164, v74);
      *(void *)&v80[v79] = v81;
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v80, 0, 1, v78);
    }
LABEL_10:
    if (!v54) {
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v166, 1, 1, TupleTypeMetadata2);
    }
  }
  uint64_t v59 = v49;
  uint64_t v60 = v174;
  uint64_t result = sub_10046FC00(v49, v50, v167, v168, v169, (uint64_t)v35);
  if (v60) {
    return result;
  }
  uint64_t v174 = 0;
  TupleTypeMetadata2 = v136;
  uint64_t v61 = *(void *)(v136 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v35, 1, v136) == 1)
  {
    (*v55)(v35, v32);
    uint64_t v49 = v59;
    goto LABEL_10;
  }
  int v173 = *(uint64_t **)&v35[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v82 = v151;
  uint64_t v83 = v35;
  uint64_t v84 = v172;
  uint64_t v171 = *(void *)(v39 + 32);
  ((void (*)(char *, char *, uint64_t))v171)(v151, v83, v172);
  *(void *)&long long v176 = v158;
  *((void *)&v176 + 1) = v163;
  uint64_t v177 = v162;
  uint64_t v178 = v161;
  type metadata accessor for ReconciliationTable();
  uint64_t v85 = v149;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56))(v149, 1, 1);
  uint64_t v86 = v148;
  uint64_t v87 = v174;
  uint64_t v88 = sub_1000F9B68(v148, 512, v82, v85, v50);
  uint64_t v89 = v39;
  uint64_t v90 = (void (**)(char *, uint64_t))(v160 + 8);
  uint64_t v174 = v87;
  if (v87)
  {
    swift_errorRelease();
    (*v90)(v85, v137);
    return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v82, v84);
  }
  uint64_t v138 = v89;
  char v93 = BYTE1(v88);
  (*v90)(v85, v137);
  (*(void (**)(char *, uint64_t))(v154 + 8))(v86, v155);
  if (sub_1001EBC84(v93) == 0x65526D6165727473 && v94 == 0xEB00000000746573)
  {
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  char v96 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  uint64_t v97 = v166;
  if (v96)
  {
LABEL_40:
    uint64_t v98 = (void *)sub_10096ABE0();
    id v99 = [v98 underlyingErrors];
    uint64_t v100 = (void *)sub_10096C0A0();

    sub_1004A485C();
    uint64_t v101 = swift_allocError();
    *(void *)uint64_t v102 = 17;
    *(unsigned char *)(v102 + 8) = 11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v100 = sub_1006A2428(0, v100[2] + 1, 1, v100);
    }
    unint64_t v104 = v100[2];
    unint64_t v103 = v100[3];
    uint64_t v165 = v61;
    if (v104 >= v103 >> 1) {
      uint64_t v100 = sub_1006A2428((void *)(v103 > 1), v104 + 1, 1, v100);
    }
    v100[2] = v104 + 1;
    v100[v104 + 4] = v101;
    id v105 = [v98 userInfo];
    uint64_t v106 = sub_10096B9C0();

    uint64_t v107 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v109 = v108;
    uint64_t v178 = sub_10002B7CC((uint64_t *)&unk_100AD6330);
    *(void *)&long long v176 = v100;
    sub_100042A48(&v176, &v175);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v179 = v106;
    sub_10037BFD0(&v175, v107, v109, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v171 = *(int *)(v136 + 48);
    uint64_t v111 = v138;
    uint64_t v112 = v166;
    (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v166, v151, v172);
    id v113 = [v98 domain];
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    id v114 = [v98 code];
    id v115 = objc_allocWithZone((Class)NSError);
    NSString v116 = sub_10096BC00();
    swift_bridgeObjectRelease();
    Class isa = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    id v118 = [v115 initWithDomain:v116 code:v114 userInfo:isa];

    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v151, v172);
    *(void *)&v112[v171] = v118;
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v165 + 56))(v112, 0, 1, v136);
  }
  else
  {
    uint64_t v122 = v136;
    uint64_t v123 = *(int *)(v136 + 48);
    ((void (*)(char *, char *, uint64_t))v171)(v166, v82, v172);
    *(void *)&v97[v123] = v173;
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v97, 0, 1, v122);
  }
}

uint64_t sub_10047DC3C(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t v13 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = AssociatedTypeWitness;
  uint64_t v15 = v3;
  uint64_t v16 = AssociatedConformanceWitness;
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ReconciliationID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v14 = v3;
  uint64_t v15 = AssociatedTypeWitness;
  uint64_t v16 = v17;
  uint64_t v17 = AssociatedConformanceWitness;
  uint64_t v9 = (int8x16_t *)type metadata accessor for ReconciliationID();
  sub_1005EC558(v9, (uint64_t)v8);
  char v10 = v13(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t sub_10047DDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint8_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v84 = a1;
  uint64_t v78 = a6;
  uint64_t v10 = sub_10096A630();
  __chkstk_darwin(v10 - 8);
  uint64_t v70 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10096A650();
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v72 = v12;
  __chkstk_darwin(v12);
  uint64_t v69 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = a2;
  uint64_t v86 = (uint64_t)a3;
  uint64_t v87 = a4;
  uint64_t v88 = a5;
  uint64_t v76 = type metadata accessor for ItemReconciliation();
  uint64_t v66 = *(void *)(v76 - 8);
  uint64_t v14 = __chkstk_darwin(v76);
  char v64 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v65 = (char *)&v64 - v16;
  uint64_t v68 = sub_10096B480();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v77 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = a5;
  uint64_t v82 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_10096C890();
  uint64_t v74 = *(void *)(v19 - 8);
  uint64_t v75 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v64 - v21;
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v64 - v23;
  uint64_t v79 = a4;
  uint64_t v80 = a2;
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v26 = sub_10096C890();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v64 - v29;
  uint64_t v31 = *(void *)(v25 - 8);
  __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v64 - v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v30, v84, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, v25) != 1)
  {
    unint64_t v54 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v54(v33, v30, v25);
    v54(v78, v33, v25);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v56 = swift_getAssociatedConformanceWitness();
    uint64_t v85 = v25;
    uint64_t v86 = AssociatedTypeWitness;
    uint64_t v87 = AssociatedConformanceWitness;
    uint64_t v88 = v56;
    type metadata accessor for ReconciliationID();
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v34 = v24;
  uint64_t v35 = v77;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  uint64_t v36 = v75;
  uint64_t v37 = v76;
  uint64_t v38 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v22, v84 + *(int *)(v76 + 52), v75);
  uint64_t v39 = v73;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v22, 1, AssociatedTypeWitness) != 1)
  {
    unint64_t v57 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v57(v34, v22, AssociatedTypeWitness);
    v57(v78, v34, AssociatedTypeWitness);
    uint64_t v58 = swift_getAssociatedConformanceWitness();
    uint64_t v59 = swift_getAssociatedConformanceWitness();
    uint64_t v85 = v25;
    uint64_t v86 = AssociatedTypeWitness;
    uint64_t v87 = v58;
    uint64_t v88 = v59;
    type metadata accessor for ReconciliationID();
    return swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v36);
  id v40 = (id)fpfs_current_or_default_log();
  uint64_t v41 = v35;
  sub_10096B490();
  uint64_t v42 = v66;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
  uint64_t v44 = v65;
  v43(v65, v84, v37);
  uint64_t v45 = sub_10096B470();
  os_log_type_t v46 = sub_10096C5B0();
  int v47 = v46;
  if (os_log_type_enabled(v45, v46))
  {
    LODWORD(v84) = v47;
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    uint64_t v85 = v83;
    *(_DWORD *)uint64_t v48 = 136315138;
    uint64_t v82 = v48 + 4;
    uint64_t v49 = v64;
    v43(v64, (uint64_t)v44, v37);
    uint64_t v50 = *(void (**)(char *, uint64_t))(v42 + 8);
    v50(v44, v37);
    uint64_t v51 = sub_10082F470(v37);
    unint64_t v53 = v52;
    v50(v49, v37);
    uint64_t v89 = sub_100719D44(v51, v53, &v85);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v84, "RT entry without ID on either side: %s", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v67 + 8))(v77, v68);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v37);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v68);
  }
  uint64_t v62 = v71;
  uint64_t v61 = v72;
  uint64_t v63 = v69;
  sub_10096A5F0();
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_1004A70C8((unint64_t *)&qword_100ACB680, (void (*)(uint64_t))&type metadata accessor for CocoaError);
  sub_10096ABD0();
  sub_10096A4D0();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v61);
  return swift_willThrow();
}

BOOL sub_10047E6F8(uint64_t a1)
{
  v10[0] = swift_getAssociatedTypeWitness();
  v10[1] = swift_getAssociatedTypeWitness();
  _OWORD v10[2] = swift_getAssociatedConformanceWitness();
  v10[3] = swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ReconciliationID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  swift_getWitnessTable();
  sub_10096C3A0();
  LOBYTE(a1) = sub_10096C330();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return (a1 & 1) == 0;
}

uint64_t sub_10047E8F8(_OWORD *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10096B480();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v3 + OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase))
  {
    uint64_t v9 = swift_retain();
    sub_100759334(v9, 0, 0, 3, v21);
    if (!v2)
    {
      if (v21[0])
      {
        uint64_t v32 = v21[1];
        unsigned int v20 = v22;
        int v10 = v23;
        uint64_t v19 = v24;
        int v11 = 253;
        uint64_t v12 = (void *)v21[0];
        char v13 = v25;
      }
      else
      {
        uint64_t v12 = v26;
        if (v26)
        {
          uint64_t v32 = v27;
          unsigned int v20 = v28;
          int v10 = v29;
          uint64_t v19 = v30;
          char v13 = v31;
          swift_errorRetain();
          int v11 = 252;
        }
        else
        {
          uint64_t v19 = 0;
          uint64_t v32 = 0;
          int v11 = 250;
          unsigned int v20 = 70;
          int v10 = 2;
          char v13 = 1;
        }
      }
      swift_errorRetain();
      sub_10047EB88(a1, v12, v32, 0, v11, v20, v10, v19, v13, 2);
      swift_errorRelease();
      sub_1004A5120((uint64_t)v21);
    }
    return swift_release();
  }
  else
  {
    id v14 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v15 = sub_10096B470();
    os_log_type_t v16 = sub_10096C5B0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Update for pending set, db is not a sql db", v17, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_10047EB88(_OWORD *a1, void *a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int a7, uint64_t a8, char a9, char a10)
{
  memcpy(__dst, a1, sizeof(__dst));
  if ((*(unsigned char *)(v10 + OBJC_IVAR____TtC9libfssync4FPCK_launchOptions) & 0x80) == 0)
  {
    uint64_t v69 = a8;
    if (a2)
    {
      int v19 = a7;
      unsigned int v20 = a2;
    }
    else
    {
      uint64_t v32 = *(void *)(v10 + OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase);
      if (v32)
      {
        uint64_t v72 = &_swiftEmptySetSingleton;
        swift_retain();
        sub_100471F18((uint64_t)a1, v32, 0, (uint64_t)&v72);
        if (v11)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        swift_release();
        sub_10001AE98((uint64_t)v73, (uint64_t)v71, &qword_100ADC000);
        swift_bridgeObjectRelease();
        uint64_t v33 = v71;
      }
      else
      {
        sub_1004A48B0(v73);
        uint64_t v33 = v73;
      }
      sub_10001AE98((uint64_t)v33, (uint64_t)v77, &qword_100ADC000);
      uint64_t v34 = (void *)(v10 + OBJC_IVAR____TtC9libfssync4FPCK_nilErrorIds);
      swift_beginAccess();
      uint64_t v68 = v34;
      if (*(void *)(*v34 + 16) <= 0xC7uLL)
      {
        long long v35 = a1[13];
        v81[12] = a1[12];
        v81[13] = v35;
        v81[14] = a1[14];
        long long v36 = a1[9];
        v81[8] = a1[8];
        v81[9] = v36;
        long long v37 = a1[10];
        v81[11] = a1[11];
        v81[10] = v37;
        long long v38 = a1[5];
        v81[4] = a1[4];
        v81[5] = v38;
        long long v39 = a1[6];
        v81[7] = a1[7];
        v81[6] = v39;
        long long v40 = a1[1];
        v81[0] = *a1;
        v81[1] = v40;
        long long v41 = a1[2];
        v81[3] = a1[3];
        v81[2] = v41;
        sub_10001AE98((uint64_t)v81, (uint64_t)v82, &qword_100AD6398);
        sub_10001AE98((uint64_t)v82, (uint64_t)&v85, &qword_100AD6398);
        if (v86 == 255)
        {
          if (*((void *)a1 + 30))
          {
            uint64_t v67 = (void *)*((void *)a1 + 30);
            swift_beginAccess();
            uint64_t v48 = (void *)*v34;
            id v65 = v67;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v50 = v48;
            void *v68 = v48;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v50 = sub_1006A2FF8(0, v48[2] + 1, 1, v48);
              void *v68 = v50;
            }
            unint64_t v52 = v50[2];
            unint64_t v51 = v50[3];
            unint64_t v53 = v52 + 1;
            if (v52 >= v51 >> 1)
            {
              uint64_t v61 = sub_1006A2FF8((void *)(v51 > 1), v52 + 1, 1, v50);
              unint64_t v53 = v52 + 1;
              uint64_t v50 = v61;
              void *v68 = v61;
            }
            v50[2] = v53;
            unint64_t v54 = &v50[2 * v52];
            v54[4] = v67;
            *((_WORD *)v54 + 20) = 256;
            swift_endAccess();
          }
        }
        else
        {
          unsigned __int8 v66 = v86;
          uint64_t v64 = v85;
          swift_beginAccess();
          uint64_t v63 = (void *)*v34;
          char v42 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v43 = v63;
          *uint64_t v34 = v63;
          if ((v42 & 1) == 0)
          {
            uint64_t v43 = sub_1006A2FF8(0, v63[2] + 1, 1, v63);
            *uint64_t v34 = v43;
          }
          unint64_t v45 = v43[2];
          unint64_t v44 = v43[3];
          unint64_t v46 = v45 + 1;
          if (v45 >= v44 >> 1)
          {
            uint64_t v60 = sub_1006A2FF8((void *)(v44 > 1), v45 + 1, 1, v43);
            unint64_t v46 = v45 + 1;
            uint64_t v43 = v60;
            void *v68 = v60;
          }
          v43[2] = v46;
          int v47 = &v43[2 * v45];
          v47[4] = v64;
          *((unsigned char *)v47 + 40) = v66;
          *((unsigned char *)v47 + 41) = 0;
          swift_endAccess();
        }
      }
      sub_10001AE98((uint64_t)v77, (uint64_t)v73, &qword_100ADC000);
      if (sub_1000D3324((uint64_t)v73) != 1)
      {
        memcpy(__src, v73, sizeof(__src));
        uint64_t v56 = v74;
        uint64_t v57 = v75;
        BOOL v58 = *((void *)a1 + 30) == 0;
        uint64_t v59 = v76;
        sub_1004A5424(v77, sub_1004A5228);
        swift_errorRetain();
        HIBYTE(v62) = v58;
        LOBYTE(v62) = 1;
        sub_10047EB88(__src, v56, 0, v57, v59, 70, 2, 0, v62);
        sub_1004A5424(v77, sub_1004A5500);
        swift_errorRelease();
        swift_errorRelease();
        return sub_1000D3440((uint64_t)v73);
      }
      int v19 = a7;
      sub_1004A485C();
      unsigned int v20 = (void *)swift_allocError();
      *(void *)uint64_t v55 = 0;
      *(unsigned char *)(v55 + 8) = 11;
    }
    swift_errorRetain();
    LOBYTE(a7) = v19;
    sub_10046D8BC((uint64_t)a1, v20, a3, a4, a5, a6, v19, v69, a9 & 1, a10 != 2);
    swift_errorRelease();
  }
  if (a2)
  {
    uint64_t v21 = (uint64_t)a2;
  }
  else
  {
    sub_1004A485C();
    uint64_t v21 = swift_allocError();
    *(void *)uint64_t v22 = 0;
    *(unsigned char *)(v22 + 8) = 11;
  }
  if (a10 == 2)
  {
    long long v23 = a1[26];
    v78[10] = a1[25];
    v78[11] = v23;
    uint64_t v79 = *((void *)a1 + 54);
    long long v24 = a1[22];
    v78[6] = a1[21];
    v78[7] = v24;
    long long v25 = a1[23];
    v78[9] = a1[24];
    v78[8] = v25;
    long long v26 = a1[18];
    v78[2] = a1[17];
    v78[3] = v26;
    long long v27 = a1[19];
    v78[5] = a1[20];
    v78[4] = v27;
    long long v28 = a1[15];
    v78[1] = a1[16];
    v78[0] = v28;
    sub_10001AE98((uint64_t)v78, (uint64_t)v80, &qword_100AD6810);
    sub_10001AE98((uint64_t)v80, (uint64_t)&v88, &qword_100AD6810);
    BOOL v29 = v88 == 0;
  }
  else
  {
    BOOL v29 = a10 & 1;
  }
  memcpy(v77, __dst, 0x1F0uLL);
  v30._int countAndFlagsBits = (uint64_t)v77;
  Filename.init(rawValue:)(v30);
  sub_10001AE98((uint64_t)v77, (uint64_t)v83, &qword_100ACD980);
  swift_errorRetain();
  sub_10046ABA4((uint64_t)v83, v21, v29, a4, a5, a6, a7);
  return swift_errorRelease();
}

BOOL sub_10047F1DC(uint64_t a1)
{
  id v1 = *(id *)a1;
  uint64_t v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 9);
  sub_10009C394(*(id *)a1, v2, v3);
  LOBYTE(v1) = sub_100495840((uint64_t)&v5, v1, v2 | (v3 << 8));
  sub_1000D30C4(v5, v6, v7);
  return (v1 & 1) == 0;
}

void sub_10047F254()
{
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker];
  if (v2)
  {
    uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker];
    if (v3)
    {
      uint64_t v4 = (void *)swift_allocObject();
      v4[2] = v0;
      v4[3] = v2;
      v4[4] = v3;
      swift_retain_n();
      swift_retain_n();
      id v5 = v0;
      sub_10063F524(0, (uint64_t)sub_1004A73CC, v4);
      swift_release();
      if (v1)
      {
        swift_release();
      }
      else
      {
        NSString v6 = sub_10015A5DC();
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

        NSString v7 = sub_10096BC00();
        swift_bridgeObjectRelease();
        uint64_t v8 = (void *)swift_allocObject();
        v8[2] = v3;
        v8[3] = v7;
        v8[4] = v5;
        swift_retain();
        uint64_t v9 = v5;
        id v10 = v7;
        sub_1007CC2D8(v10, (uint64_t)sub_1004A7434, (uint64_t)v8);
        swift_release();
        swift_release();
      }
      swift_release();
    }
  }
}

void sub_10047F3F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v85 = a6;
  uint64_t v84 = a3;
  uint64_t v10 = sub_10002B7CC((uint64_t *)&unk_100AD6350);
  __chkstk_darwin(v10 - 8);
  uint64_t v81 = (uint64_t)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
  uint64_t v79 = *(void *)(v12 - 8);
  uint64_t v80 = v12;
  __chkstk_darwin(v12);
  uint64_t v83 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t isUniquelyReferenced_nonNull_native = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14 - 8);
  uint64_t v18 = (char *)&v77 - ((isUniquelyReferenced_nonNull_native + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unsigned int v20 = (char *)&v77 - v19;
  uint64_t v109 = a4;
  if ((sub_100463698() & 1) == 0) {
    return;
  }
  uint64_t v78 = a1;
  sub_10002B70C(a1, (uint64_t)v20, &qword_100ACCB10);
  if (a2)
  {
    sub_10002B770((uint64_t)v20, &qword_100ACCB10);
  }
  else
  {
    swift_beginAccess();
    char v21 = sub_1004AE748(*((void *)v20 + 4), *(void *)(a5 + 40));
    sub_10002B770((uint64_t)v20, &qword_100ACCB10);
    if ((v21 & 1) == 0)
    {
      long long v23 = (uint64_t *)(v109 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck);
      swift_beginAccess();
      uint64_t v24 = *v23 + 1;
      uint64_t v22 = v78;
      if (__OFADD__(*v23, 1))
      {
        __break(1u);
        goto LABEL_104;
      }
      int v82 = 0;
      *long long v23 = v24;
      a5 = 0x20000000;
      goto LABEL_8;
    }
  }
  a5 = 0;
  int v82 = 1;
  uint64_t v22 = v78;
LABEL_8:
  sub_10002B70C(v22, (uint64_t)v18, &qword_100ACCB10);
  unint64_t v25 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v26 = swift_allocObject();
  long long v27 = v84;
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v85;
  *(void *)(v26 + 16) = v85;
  *(void *)(v26 + 24) = v27;
  sub_10001AE98((uint64_t)v18, v26 + v25, &qword_100ACCB10);
  sub_10002B7CC(&qword_100AD64B8);
  a2 = swift_allocObject();
  sub_1004A68A8((uint64_t)v92);
  sub_10001AE98((uint64_t)v92, a2 + 32, (uint64_t *)&unk_100AD64C0);
  *(void *)(a2 + 16) = sub_1004A7724;
  *(void *)(a2 + 24) = v26;
  swift_retain();
  a1 = v27;
  sub_100489E28((uint64_t)v91);
  sub_10001AE98((uint64_t)v91, (uint64_t)v93, &qword_100ACD980);
  sub_10001AE98((uint64_t)v93, (uint64_t)v94, &qword_100ACD980);
  if (sub_1000D3324((uint64_t)v94) != 1)
  {
    sub_10001AE98((uint64_t)v93, (uint64_t)&v89, &qword_100ACD980);
    sub_10035751C((uint64_t)&v89);
    uint64_t v29 = v109;
    if (qword_100ACC0F0 == -1) {
      goto LABEL_11;
    }
    goto LABEL_100;
  }
  LODWORD(v84) = 0;
  uint64_t v28 = 1;
  uint64_t v29 = v109;
  while (1)
  {
    while (1)
    {
      uint64_t v34 = (uint64_t *)(v29 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck);
      swift_beginAccess();
      uint64_t v35 = *v34 + 1;
      if (!__OFADD__(*v34, 1)) {
        break;
      }
      __break(1u);
LABEL_100:
      swift_once();
LABEL_11:
      uint64_t v28 = (uint64_t)v83;
      if ((v95 & (static Fields.all | 0x10)) != 0
        || (v94[16] & 0x51) != 0
        || (v103 & (static Fields.all | 0x10)) != 0
        || (v102 & 0x51) != 0
        || v97 == 1
        || v104 == 1
        || v96 != 3
        || v98 != 6
        || v101 != 3 && (v101 != 4 || v99 & 0xFFFFFFFFFFFFFFFELL | v100))
      {
LABEL_14:
        sub_1004A6C18((uint64_t)v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
LABEL_15:
        sub_1004A6C18((uint64_t)v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
        if (v82) {
          goto LABEL_16;
        }
        goto LABEL_34;
      }
      if (v107 == 3)
      {
        sub_1004A6C18((uint64_t)v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
      }
      else
      {
        if (v107 != 4) {
          goto LABEL_14;
        }
        unint64_t v31 = v105 & 0xFFFFFFFFFFFFFFFELL | v106;
        sub_1004A6C18((uint64_t)v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
        if (v31) {
          goto LABEL_15;
        }
      }
      uint64_t v32 = v86;
      sub_1007CBCB0(*(void *)v22, *(unsigned __int8 *)(v22 + 8), (void *)a1, v81);
      uint64_t v33 = v32;
      if (v32)
      {
        sub_1004A6C18((uint64_t)v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
        swift_release();
        return;
      }
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v81, 1, v80) != 1) {
        goto LABEL_97;
      }
      sub_1004A6C18((uint64_t)v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
      sub_10002B770(v81, (uint64_t *)&unk_100AD6350);
      unsigned __int8 v86 = 0;
      if (v82) {
        goto LABEL_16;
      }
LABEL_34:
      uint64_t v28 = 0;
      LODWORD(v84) = 1;
    }
    uint64_t v83 = (char *)a2;
    *uint64_t v34 = v35;
    uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v29 + OBJC_IVAR____TtC9libfssync4FPCK_resultHandler);
    uint64_t v36 = *(void *)(v22 + 16);
    char v37 = *(unsigned char *)(v22 + 24);
    swift_retain();
    uint64_t v89 = VFSItemID.parseableString.getter(v36, v37);
    uint64_t v90 = v38;
    v110._int countAndFlagsBits = 47;
    v110._object = (void *)0xE100000000000000;
    sub_10096BDC0(v110);
    swift_bridgeObjectRetain();
    NSString v39 = sub_10096BC00();
    id v40 = objc_msgSend(v39, "fp_obfuscatedFilename");

    uint64_t v22 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    char v42 = v41;

    v111._int countAndFlagsBits = v22;
    v111._object = v42;
    sub_10096BDC0(v111);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v112._int countAndFlagsBits = 8250;
    v112._object = (void *)0xE200000000000000;
    sub_10096BDC0(v112);
    v113._int countAndFlagsBits = sub_1006093E4(a5);
    sub_10096BDC0(v113);
    swift_bridgeObjectRelease();
    v114._int countAndFlagsBits = 32;
    v114._object = (void *)0xE100000000000000;
    sub_10096BDC0(v114);
    v115._int countAndFlagsBits = sub_100609614(v28);
    sub_10096BDC0(v115);
    swift_bridgeObjectRelease();
    v116._int countAndFlagsBits = 10;
    v116._object = (void *)0xE100000000000000;
    sub_10096BDC0(v116);
    v85(v89, v90);
    swift_release();
    swift_bridgeObjectRelease();
    if ((v82 & 1) == 0)
    {
      Swift::String v30 = 0;
      a2 = v109 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskVsFSSnapshotDiffCounters;
      while (1)
      {
        unint64_t v44 = __clz(__rbit64(a5));
        uint64_t v45 = a5 & ~(1 << v44);
        if (((1 << v44) & a5) == 0) {
          uint64_t v45 = a5;
        }
        if (v44 >= 0x40) {
          a1 = 0;
        }
        else {
          a1 = 1 << v44;
        }
        if (v44 < 0x40) {
          a5 = v45;
        }
        swift_beginAccess();
        sub_1000705CC((uint64_t)v30);
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v87[0] = *(void *)a2;
        uint64_t v33 = (void *)v87[0];
        *(void *)a2 = 0x8000000000000000;
        unint64_t v47 = sub_1003204C8(a1);
        uint64_t v48 = v33[2];
        BOOL v49 = (v46 & 1) == 0;
        uint64_t v50 = v48 + v49;
        if (__OFADD__(v48, v49))
        {
          __break(1u);
LABEL_92:
          __break(1u);
          goto LABEL_93;
        }
        uint64_t v22 = v46;
        if (v33[3] >= v50)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10091FF4C();
            uint64_t v33 = (void *)v87[0];
          }
        }
        else
        {
          sub_10037A124(v50, isUniquelyReferenced_nonNull_native);
          uint64_t v33 = (void *)v87[0];
          unint64_t v51 = sub_1003204C8(a1);
          if ((v22 & 1) != (v52 & 1))
          {
            sub_10096D3C0();
            __break(1u);
LABEL_107:
            sub_10096D3C0();
            __break(1u);
            return;
          }
          unint64_t v47 = v51;
        }
        *(void *)a2 = v33;
        swift_bridgeObjectRelease();
        uint64_t v33 = *(void **)a2;
        if (v22)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          v33[(v47 >> 6) + 8] |= 1 << v47;
          uint64_t v53 = 8 * v47;
          *(void *)(v33[6] + v53) = a1;
          *(void *)(v33[7] + v53) = 0;
          uint64_t v54 = v33[2];
          uint64_t v55 = v54 + 1;
          a1 = __OFADD__(v54, 1);
          swift_bridgeObjectRetain();
          if (a1) {
            goto LABEL_95;
          }
          void v33[2] = v55;
        }
        uint64_t v56 = v33[7];
        uint64_t v57 = *(void *)(v56 + 8 * v47);
        BOOL v58 = __OFADD__(v57, 1);
        uint64_t v59 = v57 + 1;
        if (v58) {
          goto LABEL_92;
        }
        *(void *)(v56 + 8 * v47) = v59;
        swift_endAccess();
        swift_bridgeObjectRelease();
        Swift::String v30 = sub_10002E4B4;
        if (!a5) {
          goto LABEL_38;
        }
      }
    }
    Swift::String v30 = 0;
LABEL_38:
    if (v84) {
      break;
    }
    uint64_t v60 = 0;
    a2 = v109 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredFSSnapshotVsFPSnapshotDiffCounters;
    while (1)
    {
      unint64_t v61 = __clz(__rbit64(v28));
      uint64_t v62 = v28 & ~(1 << v61);
      if (((1 << v61) & v28) == 0) {
        uint64_t v62 = v28;
      }
      if (v61 >= 0x40) {
        a1 = 0;
      }
      else {
        a1 = 1 << v61;
      }
      if (v61 < 0x40) {
        uint64_t v28 = v62;
      }
      swift_beginAccess();
      sub_1000705CC((uint64_t)v60);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v87[0] = *(void *)a2;
      uint64_t v33 = (void *)v87[0];
      *(void *)a2 = 0x8000000000000000;
      a5 = sub_1003204C8(a1);
      uint64_t v64 = v33[2];
      BOOL v65 = (v63 & 1) == 0;
      uint64_t v66 = v64 + v65;
      if (__OFADD__(v64, v65)) {
        break;
      }
      uint64_t v22 = v63;
      if (v33[3] >= v66)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100920148();
          uint64_t v33 = (void *)v87[0];
        }
      }
      else
      {
        sub_10037A6AC(v66, isUniquelyReferenced_nonNull_native);
        uint64_t v33 = (void *)v87[0];
        unint64_t v67 = sub_1003204C8(a1);
        if ((v22 & 1) != (v68 & 1)) {
          goto LABEL_107;
        }
        a5 = v67;
      }
      *(void *)a2 = v33;
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void **)a2;
      if (v22)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v33[(a5 >> 6) + 8] |= 1 << a5;
        uint64_t v69 = 8 * a5;
        *(void *)(v33[6] + v69) = a1;
        *(void *)(v33[7] + v69) = 0;
        uint64_t v70 = v33[2];
        uint64_t v71 = v70 + 1;
        a1 = __OFADD__(v70, 1);
        swift_bridgeObjectRetain();
        if (a1) {
          goto LABEL_96;
        }
        void v33[2] = v71;
      }
      uint64_t v72 = v33[7];
      uint64_t v73 = *(void *)(v72 + 8 * a5);
      BOOL v58 = __OFADD__(v73, 1);
      uint64_t v74 = v73 + 1;
      if (v58) {
        goto LABEL_94;
      }
      *(void *)(v72 + 8 * a5) = v74;
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v60 = sub_10002E4B4;
      if (!v28)
      {
        swift_release();
        uint64_t v43 = sub_10002E4B4;
        goto LABEL_89;
      }
    }
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    sub_10001AE98(v81, v28, (uint64_t *)&unk_100AD0CC0);
    id v75 = *(id *)v28;
    sub_1007CC648((uint64_t)v75);
    if (v33)
    {
      sub_10002B770(v28, (uint64_t *)&unk_100AD0CC0);
      sub_1004A6C18((uint64_t)v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
      swift_release();

      return;
    }
    unsigned __int8 v86 = 0;

    sub_10001AE98((uint64_t)v87, (uint64_t)v108, &qword_100AD0EA0);
    uint64_t v29 = v109;
    uint64_t v76 = v28;
    uint64_t v28 = sub_1004830DC(v22, v28, (uint64_t)v108, *(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 32), v88);
    sub_1004A6C18((uint64_t)v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
    sub_1000DBD88((uint64_t)v87);
    sub_10002B770(v76, (uint64_t *)&unk_100AD0CC0);
    if (v28)
    {
      LODWORD(v84) = 0;
    }
    else
    {
LABEL_104:
      if (v82)
      {
LABEL_16:
        swift_release();
        Swift::String v30 = 0;
        goto LABEL_40;
      }
      uint64_t v28 = 0;
      LODWORD(v84) = 1;
      uint64_t v29 = v109;
      uint64_t v22 = v78;
    }
  }
  swift_release();
LABEL_40:
  uint64_t v43 = 0;
LABEL_89:
  sub_1000705CC((uint64_t)v30);
  sub_1000705CC((uint64_t)v43);
}

uint64_t sub_100480088@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10096B480();
  __chkstk_darwin(v8);
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 24) + 16)) {
    goto LABEL_7;
  }
  id v9 = a2;
  swift_bridgeObjectRetain();
  sub_10031F918(v9);
  if ((v10 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_7:
    sub_1003572F8(v18);
    uint64_t v12 = v18;
    return sub_10001AE98((uint64_t)v12, a4, &qword_100ACD980);
  }
  swift_retain();

  swift_bridgeObjectRelease();
  sub_100555F10(*(void **)a3, *(unsigned __int8 *)(a3 + 8), 0, v18);
  swift_release();
  sub_10001AE98((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_100AD67E0);
  sub_10001AE98((uint64_t)v16, (uint64_t)v17, (uint64_t *)&unk_100AD67E0);
  int v11 = sub_1000D3324((uint64_t)v17);
  if (v11 == 1)
  {
    sub_1003572F8(v15);
  }
  else
  {
    memcpy(v15, v17, sizeof(v15));
    v14._int countAndFlagsBits = (uint64_t)v15;
    Filename.init(rawValue:)(v14);
  }
  uint64_t v12 = v15;
  return sub_10001AE98((uint64_t)v12, a4, &qword_100ACD980);
}

uint64_t sub_1004803F8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t v9 = *(void *)(a3 + 24);
  if (*(void *)(v9 + 16))
  {
    id v10 = a4;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10031F918(v10);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
      swift_retain();

      swift_bridgeObjectRelease();
      if (v13)
      {
        swift_retain();
        id v14 = a1;
        sub_100555F10(a1, 256, 0, v21);
        if (v4)
        {

          return swift_release_n();
        }

        swift_release();
        sub_10001AE98((uint64_t)v21, (uint64_t)v19, (uint64_t *)&unk_100AD67E0);
        sub_10001AE98((uint64_t)v19, (uint64_t)__src, (uint64_t *)&unk_100AD67E0);
        if (sub_1000D3324((uint64_t)__src) != 1)
        {
          memcpy(__dst, __src, sizeof(__dst));
          v17._int countAndFlagsBits = (uint64_t)__dst;
          Filename.init(rawValue:)(v17);
          os_log_type_t v16 = __dst;
          goto LABEL_8;
        }
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  sub_1003572F8(__src);
  os_log_type_t v16 = __src;
LABEL_8:
  sub_10001AE98((uint64_t)v16, (uint64_t)v22, &qword_100ACD980);
  sub_10001AE98((uint64_t)v22, (uint64_t)v23, &qword_100ACD980);
  sub_10046ABA4((uint64_t)v23, a2, 1, 0, 254, 70, 2);
  sub_1004A6C18((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
  return swift_release();
}

uint64_t sub_1004805E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v522 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v563 = (char *)&v522 - v11;
  __chkstk_darwin(v10);
  v560 = (char *)&v522 - v12;
  uint64_t v566 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v13 = __chkstk_darwin(v566);
  uint64_t v529 = (uint64_t)&v522 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v550 = (char *)&v522 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v547 = (uint64_t)&v522 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v527 = (uint64_t)&v522 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v556 = (char *)&v522 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v525 = (uint64_t)&v522 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v561 = (uint64_t)&v522 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v559 = (uint64_t)&v522 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v35 = __chkstk_darwin(v34);
  id v567 = (int *)((char *)&v522 - v36);
  uint64_t v37 = __chkstk_darwin(v35);
  v557 = (char *)&v522 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v555 = (char *)&v522 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v554 = (uint64_t)&v522 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v553 = (int *)((char *)&v522 - v44);
  uint64_t v45 = __chkstk_darwin(v43);
  unint64_t v47 = (char *)&v522 - v46;
  uint64_t v48 = __chkstk_darwin(v45);
  uint64_t v50 = (char *)&v522 - v49;
  __chkstk_darwin(v48);
  char v52 = (char *)&v522 - v51;
  int v53 = *(_DWORD *)(a1 + 40);
  uint64_t v548 = v55;
  uint64_t v549 = v54;
  uint64_t v528 = v56;
  uint64_t v526 = v57;
  uint64_t v562 = v58;
  unint64_t v565 = v59;
  v558 = v9;
  if (v53 != 1)
  {
    if (*(void *)(a1 + 24))
    {
      char v60 = a3;
      LODWORD(v564) = 0;
      goto LABEL_6;
    }
    unint64_t v67 = 0;
    switch(v53)
    {
      case 4:
LABEL_33:
        uint64_t v100 = v67 | 8;
        BOOL v101 = *(unsigned char *)(a2 + *(int *)(v566 + 48)) == 2;
        break;
      case 3:
LABEL_29:
        uint64_t v102 = v566;
        int v103 = *(unsigned __int8 *)(a2 + *(int *)(v566 + 48));
        sub_10002B70C(a2, (uint64_t)v47, &qword_100ACCB10);
        if (!v103)
        {
          unint64_t v521 = &v47[*(int *)(v102 + 48)];
          LOBYTE(v521) = v521[*(int *)(type metadata accessor for ItemMetadata() + 108)];
          sub_10002B770((uint64_t)v47, &qword_100ACCB10);
          if (v521) {
            goto LABEL_36;
          }
          goto LABEL_32;
        }
        uint64_t v99 = (uint64_t)v47;
LABEL_31:
        sub_10002B770(v99, &qword_100ACCB10);
LABEL_32:
        v67 |= 8uLL;
        goto LABEL_36;
      case 2:
LABEL_28:
        uint64_t v100 = v67 | 8;
        BOOL v101 = *(unsigned char *)(a2 + *(int *)(v566 + 48)) == 1;
        break;
      default:
        goto LABEL_36;
    }
    if (!v101) {
      unint64_t v67 = v100;
    }
    goto LABEL_36;
  }
  if (!*(void *)(a1 + 24))
  {
    unint64_t v67 = 0;
LABEL_12:
    int v68 = *(unsigned __int8 *)(a2 + *(int *)(v566 + 48));
    sub_10002B70C(a2, (uint64_t)v52, &qword_100ACCB10);
    if (!v68)
    {
      sub_10002B770((uint64_t)v52, &qword_100ACCB10);
      goto LABEL_36;
    }
    __int16 v69 = *(_WORD *)(a1 + 44);
    char v70 = *(unsigned char *)(a1 + 46);
    __int16 v71 = *(_WORD *)(a1 + 48);
    char v72 = *(unsigned char *)(a1 + 136);
    unsigned int v73 = *(_DWORD *)(a1 + 144);
    uint64_t v74 = *(void *)(a1 + 200);
    uint64_t v75 = *(void *)(a1 + 216);
    int v76 = *(_DWORD *)(a1 + 256);
    char v77 = *(unsigned char *)(a1 + 224) & 1;
    char v78 = *(unsigned char *)(a1 + 225) & 1;
    LODWORD(v572) = *(_DWORD *)(a1 + 40);
    BYTE6(v572) = v70;
    WORD2(v572) = v69;
    LOWORD(v573) = v71;
    long long v79 = *(_OWORD *)(a1 + 72);
    long long v574 = *(_OWORD *)(a1 + 56);
    long long v575 = v79;
    long long v80 = *(_OWORD *)(a1 + 104);
    long long v576 = *(_OWORD *)(a1 + 88);
    long long v577 = v80;
    long long v578 = *(_OWORD *)(a1 + 120);
    char v579 = v72;
    unsigned int v580 = v73;
    long long v81 = *(_OWORD *)(a1 + 168);
    long long v581 = *(_OWORD *)(a1 + 152);
    long long v582 = v81;
    long long v583 = *(_OWORD *)(a1 + 184);
    uint64_t v584 = v74;
    unint64_t v585 = *(void *)(a1 + 208);
    uint64_t v586 = v75;
    char v587 = v77;
    char v588 = v78;
    long long v589 = *(_OWORD *)(a1 + 232);
    unint64_t v590 = *(void *)(a1 + 248);
    int v591 = v76;
    int v82 = sub_1003E01D8((uint64_t)&v572);
    sub_10002B70C((uint64_t)v52, (uint64_t)v50, &qword_100ACCB10);
    if (v82)
    {
      unsigned int v83 = v50[*(int *)(v566 + 48)];
      sub_10002B770((uint64_t)v50, &qword_100ACCB10);
      sub_10002B770((uint64_t)v52, &qword_100ACCB10);
      if (v83 >= 3) {
        goto LABEL_36;
      }
      goto LABEL_32;
    }
    sub_10002B770((uint64_t)v50, &qword_100ACCB10);
    uint64_t v99 = (uint64_t)v52;
    goto LABEL_31;
  }
  LODWORD(v564) = *(_DWORD *)(a1 + 144) > 1u;
  char v60 = a3;
LABEL_6:
  uint64_t v61 = sub_10096BDE0();
  uint64_t v63 = v62;
  uint64_t v64 = *(void *)(a2 + 136);
  uint64_t v572 = *(void *)(a2 + 128);
  uint64_t v573 = v64;
  uint64_t v570 = 47;
  unint64_t v571 = 0xE100000000000000;
  uint64_t v568 = 58;
  unint64_t v569 = 0xE100000000000000;
  sub_10001F9C0();
  if (v61 == sub_10096C910() && v63 == v65)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  char v66 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v66)
  {
LABEL_10:
    unint64_t v67 = 0;
    a3 = v60;
    switch(*(_DWORD *)(a1 + 40))
    {
      case 1:
        goto LABEL_12;
      case 2:
        goto LABEL_28;
      case 3:
        goto LABEL_29;
      case 4:
        goto LABEL_33;
      default:
        goto LABEL_36;
    }
    goto LABEL_36;
  }
  __int16 v84 = *(_WORD *)(a1 + 44);
  char v85 = *(unsigned char *)(a1 + 46);
  __int16 v86 = *(_WORD *)(a1 + 48);
  char v87 = *(unsigned char *)(a1 + 136);
  unsigned int v88 = *(_DWORD *)(a1 + 144);
  uint64_t v89 = *(void *)(a1 + 200);
  uint64_t v90 = *(void *)(a1 + 216);
  int v91 = *(_DWORD *)(a1 + 256);
  char v92 = *(unsigned char *)(a1 + 224) & 1;
  char v93 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v85;
  WORD2(v572) = v84;
  LOWORD(v573) = v86;
  long long v94 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v94;
  long long v95 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v95;
  long long v578 = *(_OWORD *)(a1 + 120);
  char v579 = v87;
  unsigned int v580 = v88;
  long long v96 = *(_OWORD *)(a1 + 168);
  long long v581 = *(_OWORD *)(a1 + 152);
  long long v582 = v96;
  long long v583 = *(_OWORD *)(a1 + 184);
  uint64_t v584 = v89;
  unint64_t v585 = *(void *)(a1 + 208);
  uint64_t v586 = v90;
  char v587 = v92;
  char v588 = v93;
  long long v589 = *(_OWORD *)(a1 + 232);
  unint64_t v590 = *(void *)(a1 + 248);
  int v591 = v91;
  char v97 = sub_10002DCEC((uint64_t)&v572);
  int v98 = *(_DWORD *)(a1 + 40);
  a3 = v60;
  if (v97)
  {
    unint64_t v67 = 0;
    switch(v98)
    {
      case 1:
        goto LABEL_12;
      case 2:
        goto LABEL_28;
      case 3:
        goto LABEL_29;
      case 4:
        goto LABEL_33;
      default:
        break;
    }
  }
  else
  {
    if (v564) {
      unint64_t v67 = 0;
    }
    else {
      unint64_t v67 = 2;
    }
    switch(v98)
    {
      case 1:
        goto LABEL_12;
      case 2:
        goto LABEL_28;
      case 3:
        goto LABEL_29;
      case 4:
        goto LABEL_33;
      default:
        break;
    }
  }
LABEL_36:
  char v104 = fpfs_supports_parent_mtime_iopolicy();
  int v105 = *(_DWORD *)(a1 + 40);
  uint64_t v564 = a2;
  if ((v104 & 1) == 0 && v105 == 2)
  {
    uint64_t v106 = v566;
    uint64_t v107 = (uint64_t)v567;
    goto LABEL_72;
  }
  uint64_t v108 = v566;
  if (v105 == 3)
  {
    unint64_t v552 = v67;
  }
  else
  {
    uint64_t v109 = (uint64_t)v553;
    sub_10002B70C(a2, (uint64_t)v553, &qword_100ACCB10);
    if (a3)
    {
      unint64_t v552 = v67;
      sub_10002B770(v109, &qword_100ACCB10);
    }
    else
    {
      uint64_t v110 = (uint64_t)v560;
      sub_10096B070();
      uint64_t v111 = sub_10096B0E0();
      uint64_t v112 = v109;
      uint64_t v113 = *(void *)(v111 - 8);
      Swift::String v114 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56);
      v114(v110, 0, 1, v111);
      uint64_t v115 = *(int *)(v566 + 48);
      uint64_t v116 = v112 + v115 + *(int *)(type metadata accessor for ItemMetadata() + 32);
      uint64_t v117 = (uint64_t)v563;
      (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v563, v116, v111);
      v114(v117, 0, 1, v111);
      LOBYTE(v111) = sub_1008AFAF8(v117);
      sub_10002B770(v117, (uint64_t *)&unk_100ACB5E0);
      sub_10002B770(v110, (uint64_t *)&unk_100ACB5E0);
      uint64_t v118 = v112;
      uint64_t v108 = v566;
      sub_10002B770(v118, &qword_100ACCB10);
      if ((v111 & 1) == 0) {
        v67 |= 0x10uLL;
      }
      unint64_t v552 = v67;
    }
  }
  uint64_t v119 = (uint64_t)v560;
  sub_10096B070();
  uint64_t v120 = sub_10096B0E0();
  uint64_t v121 = *(void *)(v120 - 8);
  uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 56);
  v122(v119, 0, 1, v120);
  uint64_t v123 = v564 + *(int *)(v108 + 48);
  uint64_t v553 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v124 = (uint64_t)v563;
  (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v563, v123 + v553[7], v120);
  v122(v124, 0, 1, v120);
  LOBYTE(v121) = sub_1008AFAF8(v124);
  sub_10002B770(v124, (uint64_t *)&unk_100ACB5E0);
  sub_10002B770(v119, (uint64_t *)&unk_100ACB5E0);
  uint64_t v125 = 1;
  if (v121) {
    uint64_t v126 = v552;
  }
  else {
    uint64_t v126 = v552 | 0x20;
  }
  uint64_t v127 = (uint64_t)v558;
  if (*(_OWORD *)(a1 + 96) != 0)
  {
    sub_10096B070();
    uint64_t v125 = 0;
  }
  v122(v127, v125, 1, v120);
  uint64_t v128 = v553;
  char v129 = sub_1008AFAF8(v123 + v553[29]);
  sub_10002B770(v127, (uint64_t *)&unk_100ACB5E0);
  if (v129) {
    unint64_t v67 = v126;
  }
  else {
    unint64_t v67 = v126 | 0x40;
  }
  a2 = v564;
  uint64_t v106 = v566;
  uint64_t v107 = (uint64_t)v567;
  if (*(_DWORD *)(a1 + 40) != 2)
  {
    uint64_t v130 = *(void *)(v564 + *(int *)(v566 + 48) + v128[25]);
    __int16 v131 = *(_WORD *)(a1 + 44);
    char v132 = *(unsigned char *)(a1 + 46);
    __int16 v133 = *(_WORD *)(a1 + 48);
    char v134 = *(unsigned char *)(a1 + 136);
    unsigned int v135 = *(_DWORD *)(a1 + 144);
    uint64_t v136 = *(void *)(a1 + 200);
    uint64_t v137 = *(void *)(a1 + 216);
    int v138 = *(_DWORD *)(a1 + 256);
    char v139 = *(unsigned char *)(a1 + 224) & 1;
    char v140 = *(unsigned char *)(a1 + 225) & 1;
    LODWORD(v572) = *(_DWORD *)(a1 + 40);
    BYTE6(v572) = v132;
    WORD2(v572) = v131;
    LOWORD(v573) = v133;
    if (*(void *)(a1 + 56) != v130) {
      v67 |= 0x100uLL;
    }
    long long v141 = *(_OWORD *)(a1 + 72);
    long long v574 = *(_OWORD *)(a1 + 56);
    long long v575 = v141;
    long long v142 = *(_OWORD *)(a1 + 104);
    long long v576 = *(_OWORD *)(a1 + 88);
    long long v577 = v142;
    long long v578 = *(_OWORD *)(a1 + 120);
    char v579 = v134;
    unsigned int v580 = v135;
    long long v143 = *(_OWORD *)(a1 + 168);
    long long v581 = *(_OWORD *)(a1 + 152);
    long long v582 = v143;
    long long v583 = *(_OWORD *)(a1 + 184);
    uint64_t v584 = v136;
    unint64_t v585 = *(void *)(a1 + 208);
    uint64_t v586 = v137;
    char v587 = v139;
    char v588 = v140;
    long long v589 = *(_OWORD *)(a1 + 232);
    unint64_t v590 = *(void *)(a1 + 248);
    int v591 = v138;
    int v144 = sub_10002DD1C((uint64_t)&v572);
    uint64_t v145 = v554;
    sub_10002B70C(a2, v554, &qword_100ACCB10);
    if (v144)
    {
      char v146 = *(unsigned char *)(v145 + *(int *)(v106 + 48) + v128[13]);
      sub_10002B770(v145, &qword_100ACCB10);
      uint64_t v147 = (uint64_t)v557;
      uint64_t v148 = (uint64_t)v555;
      if ((v146 & 1) == 0)
      {
        v67 |= 0x800000uLL;
LABEL_65:
        int v164 = *(_DWORD *)(a1 + 20);
        int v165 = *(_DWORD *)(a2 + 40);
        sub_10002B70C(a2, v147, &qword_100ACCB10);
        if (v164 == v165)
        {
          sub_10002B770(v147, &qword_100ACCB10);
        }
        else
        {
          char v166 = *(unsigned char *)(v147 + *(int *)(v106 + 48) + v128[20]);
          sub_10002B770(v147, &qword_100ACCB10);
          if ((v166 & 1) == 0)
          {
            uint64_t v167 = (v67 >> 13) & 1;
            if (*(_DWORD *)(a1 + 40) == 4) {
              LODWORD(v167) = 1;
            }
            if (!v167) {
              v67 |= 0x2000uLL;
            }
          }
        }
        goto LABEL_72;
      }
    }
    else
    {
      sub_10002B770(v145, &qword_100ACCB10);
      uint64_t v147 = (uint64_t)v557;
      uint64_t v148 = (uint64_t)v555;
    }
    __int16 v149 = *(_WORD *)(a1 + 44);
    char v150 = *(unsigned char *)(a1 + 46);
    __int16 v151 = *(_WORD *)(a1 + 48);
    char v152 = *(unsigned char *)(a1 + 136);
    unsigned int v153 = *(_DWORD *)(a1 + 144);
    uint64_t v154 = *(void *)(a1 + 200);
    uint64_t v155 = *(void *)(a1 + 216);
    int v156 = *(_DWORD *)(a1 + 256);
    char v157 = *(unsigned char *)(a1 + 224) & 1;
    char v158 = *(unsigned char *)(a1 + 225) & 1;
    LODWORD(v572) = *(_DWORD *)(a1 + 40);
    BYTE6(v572) = v150;
    WORD2(v572) = v149;
    LOWORD(v573) = v151;
    long long v159 = *(_OWORD *)(a1 + 72);
    long long v574 = *(_OWORD *)(a1 + 56);
    long long v575 = v159;
    long long v160 = *(_OWORD *)(a1 + 104);
    long long v576 = *(_OWORD *)(a1 + 88);
    long long v577 = v160;
    long long v578 = *(_OWORD *)(a1 + 120);
    char v579 = v152;
    unsigned int v580 = v153;
    long long v161 = *(_OWORD *)(a1 + 168);
    long long v581 = *(_OWORD *)(a1 + 152);
    long long v582 = v161;
    long long v583 = *(_OWORD *)(a1 + 184);
    uint64_t v584 = v154;
    unint64_t v585 = *(void *)(a1 + 208);
    uint64_t v586 = v155;
    char v587 = v157;
    char v588 = v158;
    long long v589 = *(_OWORD *)(a1 + 232);
    unint64_t v590 = *(void *)(a1 + 248);
    int v591 = v156;
    char v162 = sub_10002DD1C((uint64_t)&v572);
    sub_10002B70C(a2, v148, &qword_100ACCB10);
    if (v162)
    {
      sub_10002B770(v148, &qword_100ACCB10);
    }
    else
    {
      int v163 = *(unsigned __int8 *)(v148 + *(int *)(v106 + 48) + v128[13]);
      sub_10002B770(v148, &qword_100ACCB10);
      if (v163) {
        v67 |= 0x1000000uLL;
      }
    }
    goto LABEL_65;
  }
LABEL_72:
  uint64_t v168 = (v67 >> 9) & 1;
  if (((*(_WORD *)(a2 + *(int *)(v106 + 48) + 10) ^ *(_WORD *)(a1 + 48)) & 0x1C0) == 0) {
    LODWORD(v168) = 1;
  }
  if (v168) {
    uint64_t v169 = v67;
  }
  else {
    uint64_t v169 = v67 | 0x200;
  }
  uint64_t v170 = (char *)(a2 + *(int *)(v106 + 48));
  uint64_t v171 = type metadata accessor for ItemMetadata();
  char v172 = v170[*(int *)(v171 + 124) + 8];
  sub_10002B70C(a2, v107, &qword_100ACCB10);
  id v567 = (int *)v171;
  if (v172)
  {
    sub_10002B770(v107, &qword_100ACCB10);
    uint64_t v173 = a2;
    uint64_t v174 = a2;
    uint64_t v175 = v565;
    sub_10002B70C(v174, v565, &qword_100ACCB10);
  }
  else
  {
    uint64_t v176 = *(void *)(a1 + 112);
    uint64_t v177 = v107 + *(int *)(v106 + 48) + (uint64_t)*(int *)(v171 + 124);
    uint64_t v178 = *(void *)v177;
    char v179 = *(unsigned char *)(v177 + 8);
    sub_10002B770(v107, &qword_100ACCB10);
    uint64_t v173 = a2;
    uint64_t v180 = a2;
    uint64_t v175 = v565;
    sub_10002B70C(v180, v565, &qword_100ACCB10);
    if ((v179 & 1) != 0 || v176 != v178)
    {
      sub_10002B770(v175, &qword_100ACCB10);
      unint64_t v183 = v169;
      uint64_t v181 = v567;
      uint64_t v184 = v173;
      if ((v169 & 0x400) != 0) {
        goto LABEL_89;
      }
      goto LABEL_87;
    }
  }
  uint64_t v181 = v567;
  if (*(unsigned char *)(v175 + *(int *)(v566 + 48) + (uint64_t)v567[31] + 8) != 1)
  {
    sub_10002B770(v175, &qword_100ACCB10);
    unint64_t v183 = v169;
    uint64_t v184 = v173;
    goto LABEL_89;
  }
  uint64_t v182 = *(void *)(a1 + 112);
  sub_10002B770(v175, &qword_100ACCB10);
  unint64_t v183 = v169;
  uint64_t v184 = v173;
  if (!v182)
  {
    uint64_t v181 = v567;
    goto LABEL_89;
  }
  uint64_t v181 = v567;
  if ((v169 & 0x400) == 0) {
LABEL_87:
  }
    v183 |= 0x400uLL;
LABEL_89:
  uint64_t v185 = sub_1006141FC(*(void *)(a1 + 120), *(void *)(a1 + 128), *(unsigned char *)(a1 + 136));
  uint64_t v563 = v170;
  if (!v185)
  {
    uint64_t v191 = *(void *)&v170[v181[30]];
    if (!v191) {
      goto LABEL_97;
    }
    uint64_t v188 = 0;
    unint64_t v190 = 0xF000000000000000;
LABEL_95:
    Tags.fpTags.getter(v191);
    sub_100011348(0, &qword_100ACB6E8);
    Class isa = sub_10096C080().super.isa;
    swift_bridgeObjectRelease();
    id v195 = (id)FPGetTagsDataForTags();

    uint64_t v192 = sub_10096AF60();
    unint64_t v193 = v196;

    if (v190 >> 60 == 15)
    {
      uint64_t v170 = v563;
      if (v193 >> 60 == 15) {
        goto LABEL_97;
      }
    }
    else
    {
      if (v193 >> 60 != 15)
      {
        sub_10002D830(v188, v190);
        char v209 = _s9libfssync17FPItemVersionDataV23__derived_struct_equalsySbAC_ACtFZ_0(v188, v190, v192, v193);
        sub_10001E9AC(v192, v193);
        sub_10001E9AC(v188, v190);
        sub_10001E9AC(v188, v190);
        if (v209)
        {
          uint64_t v197 = v566;
          uint64_t v170 = v563;
          if (*(void *)(a1 + 176)) {
            goto LABEL_106;
          }
          goto LABEL_98;
        }
        uint64_t v197 = v566;
        uint64_t v170 = v563;
        if ((v183 & 0x800) != 0) {
          goto LABEL_105;
        }
LABEL_104:
        v183 |= 0x800uLL;
LABEL_105:
        if (*(void *)(a1 + 176)) {
          goto LABEL_106;
        }
        goto LABEL_98;
      }
      uint64_t v170 = v563;
    }
LABEL_103:
    sub_10001E9AC(v188, v190);
    sub_10001E9AC(v192, v193);
    uint64_t v197 = v566;
    if ((v183 & 0x800) != 0) {
      goto LABEL_105;
    }
    goto LABEL_104;
  }
  Tags.fpTags.getter(v185);
  sub_100011348(0, &qword_100ACB6E8);
  Class v186 = sub_10096C080().super.isa;
  swift_bridgeObjectRelease();
  id v187 = (id)FPGetTagsDataForTags();

  uint64_t v188 = sub_10096AF60();
  unint64_t v190 = v189;
  swift_bridgeObjectRelease();

  uint64_t v191 = *(void *)&v170[v181[30]];
  if (v191) {
    goto LABEL_95;
  }
  if (v190 >> 60 != 15)
  {
    uint64_t v192 = 0;
    unint64_t v193 = 0xF000000000000000;
    goto LABEL_103;
  }
LABEL_97:
  uint64_t v197 = v566;
  if (*(void *)(a1 + 176))
  {
LABEL_106:
    uint64_t v201 = &v170[v181[14]];
    uint64_t v202 = *((void *)v201 + 1);
    if (v202)
    {
      uint64_t v203 = v197;
      uint64_t v204 = *(void *)v201;
      uint64_t v205 = sub_10096BDE0();
      uint64_t v200 = v562;
      if (v205 == v204 && v202 == v206)
      {
        swift_bridgeObjectRelease();
        uint64_t v197 = v203;
      }
      else
      {
        char v208 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        if (!(v208 & 1 | (v183 >> 14) & 1)) {
          v183 |= 0x4000uLL;
        }
        uint64_t v197 = v203;
      }
      goto LABEL_119;
    }
    uint64_t v207 = v559;
    sub_10002B70C(v184, v559, &qword_100ACCB10);
    sub_10002B770(v207, &qword_100ACCB10);
    uint64_t v200 = v562;
    if ((v183 & 0x4000) != 0) {
      goto LABEL_119;
    }
LABEL_111:
    v183 |= 0x4000uLL;
    goto LABEL_119;
  }
LABEL_98:
  uint64_t v198 = v559;
  sub_10002B70C(v184, v559, &qword_100ACCB10);
  uint64_t v199 = *(void *)(v198 + *(int *)(v197 + 48) + (uint64_t)v181[14] + 8);
  sub_10002B770(v198, &qword_100ACCB10);
  if (!v199)
  {
    uint64_t v181 = v567;
    uint64_t v200 = v562;
    goto LABEL_119;
  }
  uint64_t v181 = v567;
  uint64_t v200 = v562;
  if ((v183 & 0x4000) == 0) {
    goto LABEL_111;
  }
LABEL_119:
  __int16 v210 = *(_WORD *)(a1 + 44);
  char v211 = *(unsigned char *)(a1 + 46);
  __int16 v212 = *(_WORD *)(a1 + 48);
  char v213 = *(unsigned char *)(a1 + 136);
  unsigned int v214 = *(_DWORD *)(a1 + 144);
  uint64_t v215 = *(void *)(a1 + 200);
  uint64_t v216 = *(void *)(a1 + 216);
  int v217 = *(_DWORD *)(a1 + 256);
  char v218 = *(unsigned char *)(a1 + 224) & 1;
  char v219 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v211;
  WORD2(v572) = v210;
  LOWORD(v573) = v212;
  long long v220 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v220;
  long long v221 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v221;
  long long v578 = *(_OWORD *)(a1 + 120);
  char v579 = v213;
  unsigned int v580 = v214;
  long long v222 = *(_OWORD *)(a1 + 168);
  long long v581 = *(_OWORD *)(a1 + 152);
  long long v582 = v222;
  long long v583 = *(_OWORD *)(a1 + 184);
  uint64_t v584 = v215;
  unint64_t v585 = *(void *)(a1 + 208);
  uint64_t v586 = v216;
  char v587 = v218;
  char v588 = v219;
  long long v589 = *(_OWORD *)(a1 + 232);
  unint64_t v590 = *(void *)(a1 + 248);
  int v591 = v217;
  int v223 = sub_10002DCF8((uint64_t)&v572);
  sub_10002B70C(v184, v200, &qword_100ACCB10);
  if (v223)
  {
    char v224 = *(unsigned char *)(v200 + *(int *)(v197 + 48) + v181[20]);
    sub_10002B770(v200, &qword_100ACCB10);
    if ((v224 & 1) == 0)
    {
      v183 |= 0x8000uLL;
      goto LABEL_127;
    }
  }
  else
  {
    sub_10002B770(v200, &qword_100ACCB10);
  }
  __int16 v225 = *(_WORD *)(a1 + 44);
  char v226 = *(unsigned char *)(a1 + 46);
  __int16 v227 = *(_WORD *)(a1 + 48);
  char v228 = *(unsigned char *)(a1 + 136);
  unsigned int v229 = *(_DWORD *)(a1 + 144);
  uint64_t v230 = *(void *)(a1 + 200);
  uint64_t v231 = *(void *)(a1 + 216);
  int v232 = *(_DWORD *)(a1 + 256);
  char v233 = *(unsigned char *)(a1 + 224) & 1;
  char v234 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v226;
  WORD2(v572) = v225;
  LOWORD(v573) = v227;
  long long v235 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v235;
  long long v236 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v236;
  long long v578 = *(_OWORD *)(a1 + 120);
  char v579 = v228;
  unsigned int v580 = v229;
  long long v237 = *(_OWORD *)(a1 + 168);
  long long v581 = *(_OWORD *)(a1 + 152);
  long long v582 = v237;
  long long v583 = *(_OWORD *)(a1 + 184);
  uint64_t v584 = v230;
  unint64_t v585 = *(void *)(a1 + 208);
  uint64_t v586 = v231;
  char v587 = v233;
  char v588 = v234;
  long long v589 = *(_OWORD *)(a1 + 232);
  unint64_t v590 = *(void *)(a1 + 248);
  int v591 = v232;
  char v238 = sub_10002DCF8((uint64_t)&v572);
  uint64_t v239 = v561;
  sub_10002B70C(v184, v561, &qword_100ACCB10);
  if (v238)
  {
    unint64_t v565 = v183;
    sub_10002B770(v239, &qword_100ACCB10);
    goto LABEL_128;
  }
  unsigned __int8 v240 = *(unsigned char *)(v239 + *(int *)(v197 + 48) + v567[20]);
  sub_10002B770(v239, &qword_100ACCB10);
  if ((v240 & ((v183 & 0x10000) == 0)) != 0) {
    v183 |= 0x10000uLL;
  }
LABEL_127:
  unint64_t v565 = v183;
LABEL_128:
  LODWORD(v558) = *(_DWORD *)(a1 + 40);
  int v241 = *(unsigned __int8 *)(a1 + 46);
  LODWORD(v557) = *(unsigned __int16 *)(a1 + 44);
  int v242 = *(unsigned __int16 *)(a1 + 48);
  uint64_t v559 = *(void *)(a1 + 56);
  uint64_t v243 = *(void *)(a1 + 72);
  uint64_t v530 = *(void *)(a1 + 64);
  uint64_t v244 = *(char **)(a1 + 80);
  uint64_t v245 = *(void *)(a1 + 88);
  uint64_t v246 = *(void *)(a1 + 96);
  uint64_t v247 = *(char **)(a1 + 104);
  uint64_t v248 = *(void *)(a1 + 112);
  uint64_t v249 = *(void *)(a1 + 120);
  unint64_t v250 = *(void *)(a1 + 128);
  int v251 = *(unsigned __int8 *)(a1 + 136);
  unsigned int v252 = *(_DWORD *)(a1 + 144);
  uint64_t v253 = *(void *)(a1 + 152);
  uint64_t v254 = *(void *)(a1 + 160);
  uint64_t v255 = *(void *)(a1 + 168);
  uint64_t v256 = *(void *)(a1 + 176);
  uint64_t v257 = *(void *)(a1 + 184);
  uint64_t v258 = *(void *)(a1 + 192);
  uint64_t v259 = *(void *)(a1 + 200);
  unsigned int v260 = *(_DWORD *)(a1 + 208);
  unsigned int v261 = *(_DWORD *)(a1 + 212);
  uint64_t v262 = *(void *)(a1 + 216);
  uint64_t v264 = *(void *)(a1 + 232);
  uint64_t v263 = *(void *)(a1 + 240);
  char v265 = *(unsigned char *)(a1 + 224) & 1;
  int v266 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = v558;
  LODWORD(v523) = v241;
  BYTE6(v572) = v241;
  WORD2(v572) = (_WORD)v557;
  LODWORD(v524) = v242;
  LOWORD(v573) = v242;
  uint64_t v267 = v530;
  *(void *)&long long v574 = v559;
  *((void *)&v574 + 1) = v530;
  uint64_t v268 = v243;
  *(void *)&long long v575 = v243;
  *((void *)&v575 + 1) = v244;
  v560 = v244;
  uint64_t v533 = v245;
  *(void *)&long long v576 = v245;
  *((void *)&v576 + 1) = v246;
  uint64_t v269 = v246;
  uint64_t v554 = v248;
  uint64_t v555 = v247;
  *(void *)&long long v577 = v247;
  *((void *)&v577 + 1) = v248;
  unint64_t v552 = v250;
  uint64_t v553 = (int *)v249;
  *(void *)&long long v578 = v249;
  *((void *)&v578 + 1) = v250;
  unsigned int v545 = v252;
  int v546 = v251;
  char v579 = v251;
  unsigned int v580 = v252;
  uint64_t v543 = v254;
  uint64_t v544 = v253;
  *(void *)&long long v581 = v253;
  *((void *)&v581 + 1) = v254;
  uint64_t v541 = v256;
  uint64_t v542 = v255;
  *(void *)&long long v582 = v255;
  *((void *)&v582 + 1) = v256;
  uint64_t v539 = v258;
  uint64_t v540 = v257;
  *(void *)&long long v583 = v257;
  *((void *)&v583 + 1) = v258;
  uint64_t v538 = v259;
  uint64_t v584 = v259;
  unsigned int v537 = v260;
  unint64_t v585 = __PAIR64__(v261, v260);
  LODWORD(v536) = v261;
  uint64_t v534 = v264;
  uint64_t v535 = v262;
  uint64_t v586 = v262;
  char v587 = v265;
  LODWORD(v531) = v266;
  char v588 = v266;
  *(void *)&long long v589 = v264;
  uint64_t v532 = v263;
  *((void *)&v589 + 1) = v263;
  unsigned int v270 = *(_DWORD *)(a1 + 252);
  LODWORD(v562) = *(_DWORD *)(a1 + 248);
  unint64_t v590 = __PAIR64__(v270, v562);
  LODWORD(v561) = v270;
  int v271 = *(_DWORD *)(a1 + 256);
  int v591 = v271;
  if (sub_10002DCF8((uint64_t)&v572))
  {
    uint64_t v272 = v564;
    uint64_t v273 = v555;
    uint64_t v274 = (uint64_t)v556;
    uint64_t v275 = v533;
    uint64_t v276 = v534;
    uint64_t v277 = v269;
    uint64_t v279 = (uint64_t)v553;
    uint64_t v278 = v554;
    unint64_t v280 = v552;
    unsigned int v281 = v545;
    char v282 = v546;
    uint64_t v284 = v543;
    uint64_t v283 = v544;
    uint64_t v286 = v541;
    uint64_t v285 = v542;
    uint64_t v288 = v539;
    uint64_t v287 = v540;
    uint64_t v289 = v538;
    unsigned int v290 = v537;
    unsigned int v291 = v536;
    uint64_t v292 = v535;
    uint64_t v293 = v532;
    char v294 = v531;
    int v295 = v271;
    goto LABEL_142;
  }
  LODWORD(v572) = v558;
  WORD2(v572) = (_WORD)v557;
  BYTE6(v572) = (v557 | (v523 << 16)) >> 16;
  LOWORD(v573) = v524;
  *(void *)&long long v574 = v559;
  *((void *)&v574 + 1) = v267;
  *(void *)&long long v575 = v268;
  *((void *)&v575 + 1) = v560;
  *(void *)&long long v576 = v533;
  *((void *)&v576 + 1) = v269;
  *(void *)&long long v577 = v555;
  *((void *)&v577 + 1) = v554;
  *(void *)&long long v578 = v553;
  *((void *)&v578 + 1) = v552;
  char v579 = v546;
  unsigned int v580 = v545;
  *(void *)&long long v581 = v544;
  *((void *)&v581 + 1) = v543;
  *(void *)&long long v582 = v542;
  *((void *)&v582 + 1) = v541;
  *(void *)&long long v583 = v540;
  *((void *)&v583 + 1) = v539;
  uint64_t v584 = v538;
  unint64_t v585 = __PAIR64__(v536, v537);
  uint64_t v586 = v535;
  char v587 = v265;
  char v588 = v531;
  *(void *)&long long v589 = v534;
  *((void *)&v589 + 1) = v532;
  unint64_t v590 = __PAIR64__(v561, v562);
  int v591 = v271;
  int v296 = sub_1004420D8((uint64_t)&v572);
  uint64_t v297 = v564;
  uint64_t v298 = v525;
  sub_10002B70C(v564, v525, &qword_100ACCB10);
  if (!v296)
  {
    sub_10002B770(v298, &qword_100ACCB10);
    uint64_t v299 = v566;
    uint64_t v301 = v526;
LABEL_134:
    __int16 v303 = *(_WORD *)(a1 + 44);
    char v304 = *(unsigned char *)(a1 + 46);
    __int16 v305 = *(_WORD *)(a1 + 48);
    char v306 = *(unsigned char *)(a1 + 136);
    unsigned int v307 = *(_DWORD *)(a1 + 144);
    uint64_t v308 = *(void *)(a1 + 200);
    uint64_t v309 = *(void *)(a1 + 216);
    int v310 = *(_DWORD *)(a1 + 256);
    char v311 = *(unsigned char *)(a1 + 224) & 1;
    char v312 = *(unsigned char *)(a1 + 225) & 1;
    LODWORD(v572) = *(_DWORD *)(a1 + 40);
    BYTE6(v572) = v304;
    WORD2(v572) = v303;
    LOWORD(v573) = v305;
    long long v313 = *(_OWORD *)(a1 + 72);
    long long v574 = *(_OWORD *)(a1 + 56);
    long long v575 = v313;
    long long v314 = *(_OWORD *)(a1 + 104);
    long long v576 = *(_OWORD *)(a1 + 88);
    long long v577 = v314;
    long long v578 = *(_OWORD *)(a1 + 120);
    char v579 = v306;
    unsigned int v580 = v307;
    long long v315 = *(_OWORD *)(a1 + 168);
    long long v581 = *(_OWORD *)(a1 + 152);
    long long v582 = v315;
    long long v583 = *(_OWORD *)(a1 + 184);
    uint64_t v584 = v308;
    unint64_t v585 = *(void *)(a1 + 208);
    uint64_t v586 = v309;
    char v587 = v311;
    char v588 = v312;
    long long v589 = *(_OWORD *)(a1 + 232);
    unint64_t v590 = *(void *)(a1 + 248);
    int v591 = v310;
    char v316 = sub_1004420D8((uint64_t)&v572);
    sub_10002B70C(v297, v301, &qword_100ACCB10);
    uint64_t v302 = v297;
    if (v316)
    {
      sub_10002B770(v301, &qword_100ACCB10);
    }
    else
    {
      int v317 = *(unsigned __int8 *)(v301 + *(int *)(v299 + 48) + v567[21]);
      sub_10002B770(v301, &qword_100ACCB10);
      uint64_t v318 = v565;
      unint64_t v319 = (v565 >> 18) & 1;
      if (!v317) {
        LODWORD(v319) = 1;
      }
      if (!v319) {
        uint64_t v318 = v565 | 0x40000;
      }
      unint64_t v565 = v318;
    }
    goto LABEL_141;
  }
  uint64_t v299 = v566;
  int v300 = *(unsigned __int8 *)(v298 + *(int *)(v566 + 48) + v567[21]);
  sub_10002B770(v298, &qword_100ACCB10);
  uint64_t v301 = v526;
  if (v300) {
    goto LABEL_134;
  }
  uint64_t v302 = v297;
  v565 |= 0x20000uLL;
LABEL_141:
  uint64_t v275 = *(void *)(a1 + 88);
  v560 = *(char **)(a1 + 80);
  uint64_t v277 = *(void *)(a1 + 96);
  uint64_t v273 = *(char **)(a1 + 104);
  uint64_t v278 = *(void *)(a1 + 112);
  uint64_t v279 = *(void *)(a1 + 120);
  unint64_t v280 = *(void *)(a1 + 128);
  char v282 = *(unsigned char *)(a1 + 136);
  unsigned int v281 = *(_DWORD *)(a1 + 144);
  uint64_t v283 = *(void *)(a1 + 152);
  uint64_t v284 = *(void *)(a1 + 160);
  uint64_t v285 = *(void *)(a1 + 168);
  uint64_t v286 = *(void *)(a1 + 176);
  uint64_t v287 = *(void *)(a1 + 184);
  uint64_t v288 = *(void *)(a1 + 192);
  uint64_t v289 = *(void *)(a1 + 200);
  unsigned int v290 = *(_DWORD *)(a1 + 208);
  unsigned int v291 = *(_DWORD *)(a1 + 212);
  uint64_t v292 = *(void *)(a1 + 216);
  char v320 = *(unsigned char *)(a1 + 224);
  char v321 = *(unsigned char *)(a1 + 225);
  uint64_t v276 = *(void *)(a1 + 232);
  uint64_t v293 = *(void *)(a1 + 240);
  LODWORD(v562) = *(_DWORD *)(a1 + 248);
  LODWORD(v561) = *(_DWORD *)(a1 + 252);
  char v265 = v320 & 1;
  char v294 = v321 & 1;
  int v295 = *(_DWORD *)(a1 + 256);
  uint64_t v272 = v302;
  uint64_t v274 = (uint64_t)v556;
LABEL_142:
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = *(unsigned char *)(a1 + 46);
  WORD2(v572) = *(_WORD *)(a1 + 44);
  LOWORD(v573) = *(_WORD *)(a1 + 48);
  *(void *)&long long v575 = *(void *)(a1 + 72);
  *((void *)&v575 + 1) = v560;
  *(void *)&long long v576 = v275;
  *((void *)&v576 + 1) = v277;
  *(void *)&long long v577 = v273;
  *((void *)&v577 + 1) = v278;
  *(void *)&long long v578 = v279;
  *((void *)&v578 + 1) = v280;
  char v579 = v282;
  unsigned int v580 = v281;
  *(void *)&long long v581 = v283;
  *((void *)&v581 + 1) = v284;
  *(void *)&long long v582 = v285;
  *((void *)&v582 + 1) = v286;
  *(void *)&long long v583 = v287;
  *((void *)&v583 + 1) = v288;
  uint64_t v584 = v289;
  unint64_t v585 = __PAIR64__(v291, v290);
  uint64_t v586 = v292;
  char v587 = v265;
  char v588 = v294;
  *(void *)&long long v589 = v276;
  *((void *)&v589 + 1) = v293;
  unint64_t v590 = __PAIR64__(v561, v562);
  int v591 = v295;
  long long v574 = *(_OWORD *)(a1 + 56);
  int v322 = sub_10002DC8C((uint64_t)&v572);
  sub_10002B70C(v272, v274, &qword_100ACCB10);
  uint64_t v323 = v274;
  if (v322)
  {
    uint64_t v324 = v566;
    char v325 = *(unsigned char *)(v274 + *(int *)(v566 + 48) + v567[15]);
    sub_10002B770(v323, &qword_100ACCB10);
    if ((v325 & 1) == 0)
    {
      v565 |= 0x80000uLL;
      goto LABEL_151;
    }
  }
  else
  {
    sub_10002B770(v274, &qword_100ACCB10);
    uint64_t v324 = v566;
  }
  __int16 v326 = *(_WORD *)(a1 + 44);
  char v327 = *(unsigned char *)(a1 + 46);
  __int16 v328 = *(_WORD *)(a1 + 48);
  char v329 = *(unsigned char *)(a1 + 136);
  unsigned int v330 = *(_DWORD *)(a1 + 144);
  uint64_t v331 = *(void *)(a1 + 200);
  uint64_t v332 = *(void *)(a1 + 216);
  int v333 = *(_DWORD *)(a1 + 256);
  char v334 = *(unsigned char *)(a1 + 224) & 1;
  char v335 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v327;
  WORD2(v572) = v326;
  LOWORD(v573) = v328;
  long long v336 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v336;
  long long v337 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v337;
  long long v578 = *(_OWORD *)(a1 + 120);
  char v579 = v329;
  unsigned int v580 = v330;
  long long v338 = *(_OWORD *)(a1 + 168);
  long long v581 = *(_OWORD *)(a1 + 152);
  long long v582 = v338;
  long long v583 = *(_OWORD *)(a1 + 184);
  uint64_t v584 = v331;
  unint64_t v585 = *(void *)(a1 + 208);
  uint64_t v586 = v332;
  char v587 = v334;
  char v588 = v335;
  long long v589 = *(_OWORD *)(a1 + 232);
  unint64_t v590 = *(void *)(a1 + 248);
  int v591 = v333;
  char v339 = sub_10002DC8C((uint64_t)&v572);
  uint64_t v340 = v527;
  sub_10002B70C(v272, v527, &qword_100ACCB10);
  if (v339)
  {
    sub_10002B770(v340, &qword_100ACCB10);
  }
  else
  {
    unsigned __int8 v341 = *(unsigned char *)(v340 + *(int *)(v324 + 48) + v567[15]);
    sub_10002B770(v340, &qword_100ACCB10);
    uint64_t v342 = v565;
    if ((v341 & ((v565 & 0x100000) == 0)) != 0) {
      uint64_t v342 = v565 | 0x100000;
    }
    unint64_t v565 = v342;
  }
LABEL_151:
  int v343 = *(_DWORD *)(a1 + 40);
  LODWORD(v552) = *(unsigned __int8 *)(a1 + 46);
  LODWORD(v554) = *(unsigned __int16 *)(a1 + 44);
  unsigned int v344 = *(unsigned __int16 *)(a1 + 48);
  uint64_t v345 = *(void *)(a1 + 56);
  uint64_t v346 = *(void *)(a1 + 64);
  uint64_t v347 = *(void *)(a1 + 72);
  uint64_t v348 = *(void *)(a1 + 80);
  uint64_t v349 = *(void *)(a1 + 88);
  uint64_t v350 = *(void *)(a1 + 96);
  uint64_t v351 = *(void *)(a1 + 104);
  uint64_t v352 = *(void *)(a1 + 112);
  uint64_t v353 = *(void *)(a1 + 120);
  uint64_t v562 = *(void *)(a1 + 128);
  int v354 = *(unsigned __int8 *)(a1 + 136);
  unsigned int v355 = *(_DWORD *)(a1 + 144);
  uint64_t v356 = *(char **)(a1 + 152);
  uint64_t v357 = *(char **)(a1 + 160);
  uint64_t v358 = *(void *)(a1 + 168);
  uint64_t v359 = *(void *)(a1 + 176);
  uint64_t v360 = *(void *)(a1 + 184);
  uint64_t v361 = *(void *)(a1 + 192);
  uint64_t v362 = *(void *)(a1 + 200);
  unsigned int v364 = *(_DWORD *)(a1 + 208);
  unsigned int v363 = *(_DWORD *)(a1 + 212);
  uint64_t v365 = *(void *)(a1 + 216);
  uint64_t v366 = *(void *)(a1 + 232);
  uint64_t v367 = *(void *)(a1 + 240);
  int v368 = *(unsigned char *)(a1 + 224) & 1;
  int v369 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v525) = v343;
  LODWORD(v572) = v343;
  BYTE6(v572) = v552;
  WORD2(v572) = v554;
  unsigned int v537 = v344;
  LOWORD(v573) = v344;
  uint64_t v535 = v346;
  uint64_t v536 = v345;
  *(void *)&long long v574 = v345;
  *((void *)&v574 + 1) = v346;
  uint64_t v533 = v348;
  uint64_t v534 = v347;
  *(void *)&long long v575 = v347;
  *((void *)&v575 + 1) = v348;
  uint64_t v531 = v350;
  uint64_t v532 = v349;
  *(void *)&long long v576 = v349;
  *((void *)&v576 + 1) = v350;
  uint64_t v530 = v351;
  *(void *)&long long v577 = v351;
  *((void *)&v577 + 1) = v352;
  uint64_t v526 = v353;
  uint64_t v527 = v352;
  *(void *)&long long v578 = v353;
  uint64_t v370 = v562;
  *((void *)&v578 + 1) = v562;
  LODWORD(v556) = v354;
  char v579 = v354;
  LODWORD(v557) = v355;
  unsigned int v580 = v355;
  uint64_t v555 = v356;
  *(void *)&long long v581 = v356;
  v560 = v357;
  uint64_t v561 = v358;
  *((void *)&v581 + 1) = v357;
  *(void *)&long long v582 = v358;
  uint64_t v553 = (int *)v359;
  *((void *)&v582 + 1) = v359;
  uint64_t v371 = v360;
  *(void *)&long long v583 = v360;
  uint64_t v372 = v361;
  *((void *)&v583 + 1) = v361;
  uint64_t v559 = v362;
  uint64_t v584 = v362;
  LODWORD(v558) = v364;
  unint64_t v585 = __PAIR64__(v363, v364);
  unsigned int v545 = v363;
  uint64_t v540 = v366;
  uint64_t v541 = v365;
  uint64_t v586 = v365;
  LODWORD(v538) = v368;
  char v587 = v368;
  int v373 = v369;
  char v588 = v369;
  *(void *)&long long v589 = v366;
  uint64_t v539 = v367;
  *((void *)&v589 + 1) = v367;
  unsigned int v375 = *(_DWORD *)(a1 + 252);
  LODWORD(v590) = *(_DWORD *)(a1 + 248);
  unsigned int v374 = v590;
  HIDWORD(v590) = v375;
  int v591 = *(_DWORD *)(a1 + 256);
  int v376 = v591;
  int v377 = sub_10002DCBC((uint64_t)&v572);
  int v378 = v563[v567[11]];
  int v546 = v373;
  LODWORD(v544) = v375;
  LODWORD(v543) = v374;
  LODWORD(v542) = v376;
  if (v377 == v378)
  {
    char v385 = (char)v556;
    unsigned int v386 = v557;
    uint64_t v387 = v555;
    uint64_t v388 = v560;
    uint64_t v389 = v561;
    uint64_t v390 = (uint64_t)v553;
    uint64_t v391 = v371;
    uint64_t v392 = v372;
    uint64_t v393 = v559;
    unsigned int v394 = v558;
    unsigned int v379 = v545;
    uint64_t v381 = v540;
    uint64_t v395 = v541;
    uint64_t v383 = v539;
    char v382 = v538;
  }
  else
  {
    LODWORD(v572) = v525;
    WORD2(v572) = v554;
    BYTE6(v572) = (v554 | (v552 << 16)) >> 16;
    LOWORD(v573) = v537;
    *(void *)&long long v574 = v536;
    *((void *)&v574 + 1) = v535;
    *(void *)&long long v575 = v534;
    *((void *)&v575 + 1) = v533;
    *(void *)&long long v576 = v532;
    *((void *)&v576 + 1) = v531;
    *(void *)&long long v577 = v530;
    *((void *)&v577 + 1) = v527;
    *(void *)&long long v578 = v526;
    *((void *)&v578 + 1) = v370;
    uint64_t v523 = v372;
    uint64_t v524 = v371;
    char v579 = (char)v556;
    unsigned int v580 = v557;
    *(void *)&long long v581 = v555;
    *((void *)&v581 + 1) = v560;
    *(void *)&long long v582 = v561;
    *((void *)&v582 + 1) = v553;
    *(void *)&long long v583 = v371;
    *((void *)&v583 + 1) = v372;
    uint64_t v584 = v559;
    unint64_t v585 = __PAIR64__(v545, v558);
    unsigned int v379 = v545;
    uint64_t v381 = v540;
    uint64_t v380 = v541;
    uint64_t v586 = v541;
    char v382 = v538;
    char v587 = v538;
    char v588 = v373;
    *(void *)&long long v589 = v540;
    uint64_t v383 = v539;
    *((void *)&v589 + 1) = v539;
    unint64_t v590 = __PAIR64__(v375, v374);
    int v591 = v376;
    char v384 = sub_10002DCBC((uint64_t)&v572);
    char v385 = (char)v556;
    unsigned int v386 = v557;
    uint64_t v387 = v555;
    uint64_t v388 = v560;
    uint64_t v389 = v561;
    uint64_t v390 = (uint64_t)v553;
    uint64_t v392 = v523;
    uint64_t v391 = v524;
    uint64_t v393 = v559;
    unsigned int v394 = v558;
    uint64_t v395 = v380;
    if (v384) {
      uint64_t v396 = v565 | 0x200000;
    }
    else {
      uint64_t v396 = v565 | 0x400000;
    }
    unint64_t v565 = v396;
  }
  __int16 v397 = *(_WORD *)(a1 + 44);
  char v398 = *(unsigned char *)(a1 + 46);
  __int16 v399 = *(_WORD *)(a1 + 48);
  uint64_t v400 = *(void *)(a1 + 120);
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v398;
  WORD2(v572) = v397;
  LOWORD(v573) = v399;
  long long v401 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v401;
  long long v402 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v402;
  *(void *)&long long v578 = v400;
  *((void *)&v578 + 1) = v562;
  char v579 = v385;
  unsigned int v580 = v386;
  *(void *)&long long v581 = v387;
  *((void *)&v581 + 1) = v388;
  *(void *)&long long v582 = v389;
  *((void *)&v582 + 1) = v390;
  *(void *)&long long v583 = v391;
  *((void *)&v583 + 1) = v392;
  uint64_t v584 = v393;
  unint64_t v585 = __PAIR64__(v379, v394);
  uint64_t v586 = v395;
  char v587 = v382;
  char v588 = v546;
  *(void *)&long long v589 = v381;
  *((void *)&v589 + 1) = v383;
  unint64_t v590 = __PAIR64__(v544, v543);
  int v591 = v542;
  int v403 = sub_10002DCE0((uint64_t)&v572);
  uint64_t v404 = v564;
  uint64_t v405 = v547;
  sub_10002B70C(v564, v547, &qword_100ACCB10);
  if (v403)
  {
    uint64_t v406 = v566;
    char v407 = *(unsigned char *)(v405 + *(int *)(v566 + 48) + v567[10]);
    sub_10002B770(v405, &qword_100ACCB10);
    uint64_t v408 = v549;
    uint64_t v409 = (uint64_t)v550;
    uint64_t v410 = v548;
    if ((v407 & 1) == 0)
    {
      uint64_t v411 = v565 | 0x2000000;
      goto LABEL_165;
    }
  }
  else
  {
    sub_10002B770(v405, &qword_100ACCB10);
    uint64_t v406 = v566;
    uint64_t v408 = v549;
    uint64_t v409 = (uint64_t)v550;
    uint64_t v410 = v548;
  }
  __int16 v412 = *(_WORD *)(a1 + 44);
  char v413 = *(unsigned char *)(a1 + 46);
  __int16 v414 = *(_WORD *)(a1 + 48);
  char v415 = *(unsigned char *)(a1 + 136);
  unsigned int v416 = *(_DWORD *)(a1 + 144);
  uint64_t v417 = *(void *)(a1 + 200);
  uint64_t v418 = *(void *)(a1 + 216);
  int v419 = *(_DWORD *)(a1 + 256);
  char v420 = *(unsigned char *)(a1 + 224) & 1;
  char v421 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v413;
  WORD2(v572) = v412;
  LOWORD(v573) = v414;
  long long v422 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v422;
  long long v423 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v423;
  long long v578 = *(_OWORD *)(a1 + 120);
  char v579 = v415;
  unsigned int v580 = v416;
  long long v424 = *(_OWORD *)(a1 + 168);
  long long v581 = *(_OWORD *)(a1 + 152);
  long long v582 = v424;
  long long v583 = *(_OWORD *)(a1 + 184);
  uint64_t v584 = v417;
  unint64_t v585 = *(void *)(a1 + 208);
  uint64_t v586 = v418;
  char v587 = v420;
  char v588 = v421;
  long long v589 = *(_OWORD *)(a1 + 232);
  unint64_t v590 = *(void *)(a1 + 248);
  int v591 = v419;
  char v425 = sub_10002DCE0((uint64_t)&v572);
  uint64_t v426 = v528;
  sub_10002B70C(v404, v528, &qword_100ACCB10);
  if (v425)
  {
    sub_10002B770(v426, &qword_100ACCB10);
    uint64_t v411 = v565;
  }
  else
  {
    int v427 = *(unsigned __int8 *)(v426 + *(int *)(v406 + 48) + v567[10]);
    sub_10002B770(v426, &qword_100ACCB10);
    uint64_t v411 = v565;
    if (v427) {
      uint64_t v411 = v565 | 0x4000000;
    }
  }
LABEL_165:
  __int16 v428 = *(_WORD *)(a1 + 44);
  char v429 = *(unsigned char *)(a1 + 46);
  __int16 v430 = *(_WORD *)(a1 + 48);
  char v431 = *(unsigned char *)(a1 + 136);
  unsigned int v432 = *(_DWORD *)(a1 + 144);
  uint64_t v433 = *(void *)(a1 + 200);
  uint64_t v434 = *(void *)(a1 + 216);
  int v435 = *(_DWORD *)(a1 + 256);
  char v436 = *(unsigned char *)(a1 + 224) & 1;
  char v437 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v429;
  WORD2(v572) = v428;
  LOWORD(v573) = v430;
  long long v438 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v438;
  long long v439 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v439;
  long long v578 = *(_OWORD *)(a1 + 120);
  char v579 = v431;
  unsigned int v580 = v432;
  long long v440 = *(_OWORD *)(a1 + 168);
  long long v581 = *(_OWORD *)(a1 + 152);
  long long v582 = v440;
  long long v583 = *(_OWORD *)(a1 + 184);
  uint64_t v584 = v433;
  unint64_t v585 = *(void *)(a1 + 208);
  uint64_t v586 = v434;
  char v587 = v436;
  char v588 = v437;
  long long v589 = *(_OWORD *)(a1 + 232);
  unint64_t v590 = *(void *)(a1 + 248);
  int v591 = v435;
  int v441 = sub_10002DCC8((uint64_t)&v572);
  sub_10002B70C(v404, v410, &qword_100ACCB10);
  if (!v441)
  {
    sub_10002B770(v410, &qword_100ACCB10);
LABEL_170:
    __int16 v444 = *(_WORD *)(a1 + 44);
    char v445 = *(unsigned char *)(a1 + 46);
    __int16 v446 = *(_WORD *)(a1 + 48);
    char v447 = *(unsigned char *)(a1 + 136);
    unsigned int v448 = *(_DWORD *)(a1 + 144);
    uint64_t v449 = *(void *)(a1 + 200);
    uint64_t v450 = *(void *)(a1 + 216);
    int v451 = *(_DWORD *)(a1 + 256);
    char v452 = *(unsigned char *)(a1 + 224) & 1;
    char v453 = *(unsigned char *)(a1 + 225) & 1;
    LODWORD(v572) = *(_DWORD *)(a1 + 40);
    BYTE6(v572) = v445;
    WORD2(v572) = v444;
    LOWORD(v573) = v446;
    long long v454 = *(_OWORD *)(a1 + 72);
    long long v574 = *(_OWORD *)(a1 + 56);
    long long v575 = v454;
    long long v455 = *(_OWORD *)(a1 + 104);
    long long v576 = *(_OWORD *)(a1 + 88);
    long long v577 = v455;
    long long v578 = *(_OWORD *)(a1 + 120);
    char v579 = v447;
    unsigned int v580 = v448;
    long long v456 = *(_OWORD *)(a1 + 168);
    long long v581 = *(_OWORD *)(a1 + 152);
    long long v582 = v456;
    long long v583 = *(_OWORD *)(a1 + 184);
    uint64_t v584 = v449;
    unint64_t v585 = *(void *)(a1 + 208);
    uint64_t v586 = v450;
    char v587 = v452;
    char v588 = v453;
    long long v589 = *(_OWORD *)(a1 + 232);
    unint64_t v590 = *(void *)(a1 + 248);
    int v591 = v451;
    char v457 = sub_10002DCC8((uint64_t)&v572);
    sub_10002B70C(v404, v408, &qword_100ACCB10);
    Swift::String v443 = v563;
    if (v457)
    {
      sub_10002B770(v408, &qword_100ACCB10);
      if (!*(void *)(a1 + 216)) {
        goto LABEL_180;
      }
    }
    else
    {
      int v463 = *(unsigned __int8 *)(v408 + *(int *)(v406 + 48) + v567[9]);
      sub_10002B770(v408, &qword_100ACCB10);
      if (v463) {
        v411 |= 0x10000000uLL;
      }
      if (!*(void *)(a1 + 216)) {
        goto LABEL_180;
      }
    }
    goto LABEL_172;
  }
  char v442 = *(unsigned char *)(v410 + *(int *)(v406 + 48) + v567[9]);
  sub_10002B770(v410, &qword_100ACCB10);
  if (v442) {
    goto LABEL_170;
  }
  v411 |= 0x8000000uLL;
  Swift::String v443 = v563;
  if (!*(void *)(a1 + 216))
  {
LABEL_180:
    v460 = v567;
    if (*(void *)&v443[v567[37] + 8]) {
      v411 |= 0x80000000uLL;
    }
    goto LABEL_188;
  }
LABEL_172:
  uint64_t v458 = sub_10096BBF0();
  v460 = v567;
  v461 = &v443[v567[37]];
  uint64_t v462 = *((void *)v461 + 1);
  if (!v459)
  {
    if (!v462) {
      goto LABEL_188;
    }
LABEL_187:
    v411 |= 0x80000000uLL;
    goto LABEL_188;
  }
  if (!v462)
  {
    swift_bridgeObjectRelease();
    goto LABEL_187;
  }
  if (v458 == *(void *)v461 && v459 == v462)
  {
    swift_bridgeObjectRelease();
    goto LABEL_188;
  }
  char v464 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if ((v464 & 1) == 0) {
    goto LABEL_187;
  }
LABEL_188:
  __int16 v465 = *(_WORD *)(a1 + 44);
  char v466 = *(unsigned char *)(a1 + 46);
  __int16 v467 = *(_WORD *)(a1 + 48);
  char v468 = *(unsigned char *)(a1 + 136);
  unsigned int v469 = *(_DWORD *)(a1 + 144);
  uint64_t v470 = *(void *)(a1 + 200);
  uint64_t v471 = *(void *)(a1 + 216);
  int v472 = *(_DWORD *)(a1 + 256);
  char v473 = *(unsigned char *)(a1 + 224) & 1;
  char v474 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v466;
  WORD2(v572) = v465;
  LOWORD(v573) = v467;
  long long v475 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v475;
  long long v476 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v476;
  long long v578 = *(_OWORD *)(a1 + 120);
  char v579 = v468;
  unsigned int v580 = v469;
  long long v477 = *(_OWORD *)(a1 + 168);
  long long v581 = *(_OWORD *)(a1 + 152);
  long long v582 = v477;
  long long v583 = *(_OWORD *)(a1 + 184);
  uint64_t v584 = v470;
  unint64_t v585 = *(void *)(a1 + 208);
  uint64_t v586 = v471;
  char v587 = v473;
  char v588 = v474;
  long long v589 = *(_OWORD *)(a1 + 232);
  unint64_t v590 = *(void *)(a1 + 248);
  int v591 = v472;
  int v478 = sub_10002DCEC((uint64_t)&v572);
  sub_10002B70C(v404, v409, &qword_100ACCB10);
  if (v478)
  {
    char v479 = *(unsigned char *)(v409 + *(int *)(v406 + 48) + v460[18]);
    sub_10002B770(v409, &qword_100ACCB10);
    if ((v479 & 1) == 0)
    {
      v411 |= (unint64_t)&_mh_execute_header;
LABEL_194:
      uint64_t v495 = v567;
      goto LABEL_197;
    }
  }
  else
  {
    sub_10002B770(v409, &qword_100ACCB10);
  }
  __int16 v480 = *(_WORD *)(a1 + 44);
  char v481 = *(unsigned char *)(a1 + 46);
  __int16 v482 = *(_WORD *)(a1 + 48);
  char v483 = *(unsigned char *)(a1 + 136);
  unsigned int v484 = *(_DWORD *)(a1 + 144);
  uint64_t v485 = *(void *)(a1 + 200);
  uint64_t v486 = *(void *)(a1 + 216);
  int v487 = *(_DWORD *)(a1 + 256);
  char v488 = *(unsigned char *)(a1 + 224) & 1;
  char v489 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v481;
  WORD2(v572) = v480;
  LOWORD(v573) = v482;
  long long v490 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v490;
  long long v491 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v491;
  long long v578 = *(_OWORD *)(a1 + 120);
  char v579 = v483;
  unsigned int v580 = v484;
  long long v492 = *(_OWORD *)(a1 + 168);
  long long v581 = *(_OWORD *)(a1 + 152);
  long long v582 = v492;
  long long v583 = *(_OWORD *)(a1 + 184);
  uint64_t v584 = v485;
  unint64_t v585 = *(void *)(a1 + 208);
  uint64_t v586 = v486;
  char v587 = v488;
  char v588 = v489;
  long long v589 = *(_OWORD *)(a1 + 232);
  unint64_t v590 = *(void *)(a1 + 248);
  int v591 = v487;
  char v493 = sub_10002DCEC((uint64_t)&v572);
  uint64_t v494 = v529;
  sub_10002B70C(v404, v529, &qword_100ACCB10);
  if (v493)
  {
    sub_10002B770(v494, &qword_100ACCB10);
    goto LABEL_194;
  }
  unint64_t v496 = v567;
  int v497 = *(unsigned __int8 *)(v494 + *(int *)(v406 + 48) + v567[18]);
  sub_10002B770(v494, &qword_100ACCB10);
  uint64_t v495 = v496;
  if (v497) {
    v411 |= 0x200000000uLL;
  }
LABEL_197:
  uint64_t v498 = v551;
  uint64_t v499 = *(void *)(a1 + 240);
  if ((v443[v495[20]] & 1) == 0 && v499 != qword_100984638[v443[v495[21]]]) {
    v411 |= 0x400000000uLL;
  }
  __int16 v500 = *(_WORD *)(a1 + 44);
  char v501 = *(unsigned char *)(a1 + 46);
  __int16 v502 = *(_WORD *)(a1 + 48);
  char v503 = *(unsigned char *)(a1 + 136);
  unsigned int v504 = *(_DWORD *)(a1 + 144);
  uint64_t v505 = *(void *)(a1 + 200);
  uint64_t v506 = *(void *)(a1 + 216);
  uint64_t v507 = *(void *)(a1 + 232);
  int v508 = *(_DWORD *)(a1 + 256);
  char v509 = *(unsigned char *)(a1 + 224) & 1;
  char v510 = *(unsigned char *)(a1 + 225) & 1;
  LODWORD(v572) = *(_DWORD *)(a1 + 40);
  BYTE6(v572) = v501;
  WORD2(v572) = v500;
  LOWORD(v573) = v502;
  long long v511 = *(_OWORD *)(a1 + 72);
  long long v574 = *(_OWORD *)(a1 + 56);
  long long v575 = v511;
  long long v512 = *(_OWORD *)(a1 + 104);
  long long v576 = *(_OWORD *)(a1 + 88);
  long long v577 = v512;
  long long v578 = *(_OWORD *)(a1 + 120);
  char v579 = v503;
  unsigned int v580 = v504;
  long long v513 = *(_OWORD *)(a1 + 168);
  long long v581 = *(_OWORD *)(a1 + 152);
  long long v582 = v513;
  long long v583 = *(_OWORD *)(a1 + 184);
  uint64_t v584 = v505;
  unint64_t v585 = *(void *)(a1 + 208);
  uint64_t v586 = v506;
  char v587 = v509;
  char v588 = v510;
  *(void *)&long long v589 = v507;
  *((void *)&v589 + 1) = v499;
  unint64_t v590 = *(void *)(a1 + 248);
  int v591 = v508;
  if (sub_10002DCF8((uint64_t)&v572))
  {
    uint64_t v514 = (uint64_t *)(v498 + OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems);
    swift_beginAccess();
    uint64_t v515 = *v514 + 1;
    if (!__OFADD__(*v514, 1)) {
      goto LABEL_205;
    }
    __break(1u);
  }
  uint64_t v514 = (uint64_t *)(v498 + OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems);
  swift_beginAccess();
  uint64_t v515 = *v514 + 1;
  if (__OFADD__(*v514, 1))
  {
LABEL_214:
    __break(1u);
    JUMPOUT(0x1004830ACLL);
  }
LABEL_205:
  *uint64_t v514 = v515;
  uint64_t v516 = *(void *)(a1 + 56);
  id v517 = (void *)(v498 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes);
  swift_beginAccess();
  if (__OFADD__(*v517, v516))
  {
    __break(1u);
    goto LABEL_213;
  }
  *v517 += v516;
  uint64_t v518 = *(void *)(a1 + 168);
  BOOL v519 = (void *)(v498 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk);
  swift_beginAccess();
  if (__OFADD__(*v519, v518))
  {
LABEL_213:
    __break(1u);
    goto LABEL_214;
  }
  *v519 += v518;
  return v411;
}

uint64_t sub_1004830DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v165 = a5;
  uint64_t v181 = a2;
  sub_10001AE98(a3, (uint64_t)v183, &qword_100AD0EA0);
  sub_10001AE98((uint64_t)v183, (uint64_t)v187, &qword_100AD0EA0);
  uint64_t v180 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
  uint64_t v8 = __chkstk_darwin(v180);
  uint64_t v166 = (uint64_t)v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v167 = (uint64_t)v154 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v172 = (uint64_t)v154 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v176 = (char *)v154 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v163 = (uint64_t)v154 - v17;
  __chkstk_darwin(v16);
  unint64_t v164 = (unint64_t)v154 - v18;
  uint64_t v171 = sub_10096D250();
  uint64_t v177 = *(char **)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v20 = (char *)v154 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10096B0E0();
  uint64_t v169 = *(void *)(v21 - 8);
  uint64_t v170 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v168 = (char *)v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v174 = (char *)v154 - v24;
  uint64_t v178 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v25 = __chkstk_darwin(v178);
  uint64_t v162 = (uint64_t)v154 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v175 = (uint64_t)v154 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)v154 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)v154 - v32;
  uint64_t v34 = *(void *)a1;
  int v35 = *(unsigned __int8 *)(a1 + 8);
  sub_10002B70C(a1, (uint64_t)v154 - v32, &qword_100ACCB10);
  if (v35 == 2 && !v34)
  {
    sub_10002B770((uint64_t)v33, &qword_100ACCB10);
    return 0;
  }
  uint64_t v37 = *(void *)v33;
  unsigned int v38 = v33[8];
  sub_10002B770((uint64_t)v33, &qword_100ACCB10);
  if (v38 >= 2 && v37 != 0) {
    return 0;
  }
  uint64_t v159 = a3;
  long long v161 = (unsigned char *)(a1 + *(int *)(v178 + 48));
  uint64_t v40 = v161;
  char v179 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v41 = (uint64_t *)&v40[v179[14]];
  uint64_t v43 = *v41;
  unint64_t v42 = v41[1];
  sub_10002B70C(a1, (uint64_t)v31, &qword_100ACCB10);
  uint64_t v160 = a1;
  int v157 = a4;
  if (v42)
  {
    unint64_t v44 = v42;
  }
  else
  {
    uint64_t v43 = *((void *)v31 + 16);
    unint64_t v44 = *((void *)v31 + 17);
    swift_bridgeObjectRetain();
  }
  uint64_t v45 = v181;
  swift_bridgeObjectRetain();
  sub_10002B770((uint64_t)v31, &qword_100ACCB10);
  uint64_t v46 = *(void *)(v45 + 80);
  unint64_t v47 = *(void *)(v45 + 88);
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_10002C020(v43, v44);
  uint64_t v50 = v49;
  swift_bridgeObjectRelease();
  if (v50)
  {
    if (v48 == 12565487 && v50 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_17:
      swift_bridgeObjectRetain();
      unint64_t v52 = sub_10096BD70();
      sub_1000364D0(v52, v43, v44);
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_10096BD10();
      unint64_t v54 = v53;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    char v51 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v54 = v44;
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_10002C020(v46, v47);
  uint64_t v57 = v56;
  swift_bridgeObjectRelease();
  if (!v57) {
    goto LABEL_25;
  }
  if (v55 != 12565487 || v57 != 0xA300000000000000)
  {
    char v58 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v58) {
      goto LABEL_24;
    }
LABEL_25:
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
LABEL_24:
  swift_bridgeObjectRetain();
  unint64_t v59 = sub_10096BD70();
  sub_1000364D0(v59, v46, v47);
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_10096BD10();
  unint64_t v47 = v60;
  swift_bridgeObjectRelease();
LABEL_26:
  uint64_t v61 = v180;
  uint64_t v62 = v181;
  uint64_t v63 = v161;
  if (v43 == v46 && v54 == v47)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v64 = 0;
  }
  else
  {
    char v65 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v65) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = 2;
    }
  }
  char v66 = v177;
  uint64_t v67 = *v63;
  int v68 = (char *)(v62 + *(int *)(v61 + 48));
  char v69 = 0;
  switch(*v63)
  {
    case 1:
      char v69 = 1;
      uint64_t v67 = 1;
      break;
    case 2:
      char v69 = 0;
      uint64_t v67 = 2;
      break;
    case 3:
      char v69 = 0;
      uint64_t v67 = 4;
      break;
    default:
      break;
  }
  if (v67 == qword_100984668[*v68]) {
    uint64_t v36 = v64;
  }
  else {
    uint64_t v36 = v64 | 8;
  }
  if (v69)
  {
    char v70 = v179;
    goto LABEL_67;
  }
  int v71 = v63[v179[27]];
  uint64_t v72 = enum case for FloatingPointRoundingRule.towardZero(_:);
  char v158 = (char *)(v62 + *(int *)(v61 + 48));
  if (v71 != 1)
  {
    int v156 = &v68[v179[8]];
    uint64_t v74 = v177;
    uint64_t v75 = (void (*)(char *, uint64_t, uint64_t))*((void *)v177 + 13);
    v154[1] = (unint64_t)(v177 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    uint64_t v76 = enum case for FloatingPointRoundingRule.towardZero(_:);
    uint64_t v77 = v171;
    v75(v20, enum case for FloatingPointRoundingRule.towardZero(_:), v171);
    sub_1008AFED4((uint64_t)v20);
    char v78 = (void (*)(char *, uint64_t))*((void *)v74 + 1);
    v78(v20, v77);
    unsigned int v155 = v76;
    uint64_t v79 = v76;
    long long v80 = v75;
    v75(v20, v79, v77);
    long long v81 = v168;
    sub_1008AFED4((uint64_t)v20);
    v78(v20, v77);
    int v82 = v174;
    uint64_t v83 = sub_10096B0C0();
    uint64_t v84 = v170;
    char v85 = *(void (**)(char *, uint64_t))(v169 + 8);
    __int16 v86 = v81;
    char v87 = v179;
    v85(v86, v170);
    v85(v82, v84);
    uint64_t v88 = v36 | 0x10;
    if (!v83) {
      uint64_t v88 = v36;
    }
    if (*(void *)&v161[v87[25]] == *(void *)&v158[v87[25]]) {
      uint64_t v89 = v88;
    }
    else {
      uint64_t v89 = v88 | 0x100;
    }
    uint64_t v90 = v87[13];
    int v91 = v161;
    int v92 = v161[v90];
    uint64_t v93 = v164;
    sub_10002B70C(v181, v164, (uint64_t *)&unk_100AD0CC0);
    if (v92 == 1)
    {
      char v94 = *(unsigned char *)(v93 + *(int *)(v180 + 48) + v87[13]);
      sub_10002B770(v93, (uint64_t *)&unk_100AD0CC0);
      long long v95 = v91;
      int v68 = v158;
      if ((v94 & 1) == 0)
      {
        v89 |= 0x800000uLL;
        goto LABEL_56;
      }
    }
    else
    {
      sub_10002B770(v93, (uint64_t *)&unk_100AD0CC0);
      long long v95 = v91;
      int v68 = v158;
    }
    char v96 = v95[v90];
    uint64_t v97 = v163;
    sub_10002B70C(v181, v163, (uint64_t *)&unk_100AD0CC0);
    if (v96)
    {
      unint64_t v164 = v89;
      sub_10002B770(v97, (uint64_t *)&unk_100AD0CC0);
LABEL_57:
      char v66 = v177;
      uint64_t v72 = v155;
      unsigned int v73 = v80;
      goto LABEL_58;
    }
    int v98 = *(unsigned __int8 *)(v97 + *(int *)(v180 + 48) + v179[13]);
    sub_10002B770(v97, (uint64_t *)&unk_100AD0CC0);
    if (v98) {
      v89 |= 0x1000000uLL;
    }
LABEL_56:
    unint64_t v164 = v89;
    goto LABEL_57;
  }
  unint64_t v164 = v36;
  unsigned int v73 = (void (*)(char *, uint64_t, uint64_t))*((void *)v177 + 13);
LABEL_58:
  uint64_t v177 = &v68[v179[7]];
  uint64_t v99 = v72;
  uint64_t v100 = v171;
  v73(v20, v72, v171);
  BOOL v101 = v174;
  sub_1008AFED4((uint64_t)v20);
  uint64_t v102 = (void (*)(char *, uint64_t))*((void *)v66 + 1);
  v102(v20, v100);
  v73(v20, v99, v100);
  int v103 = v168;
  char v104 = v161;
  sub_1008AFED4((uint64_t)v20);
  v102(v20, v100);
  uint64_t v105 = sub_10096B0C0();
  uint64_t v106 = v170;
  uint64_t v107 = *(void (**)(char *, uint64_t))(v169 + 8);
  uint64_t v108 = v103;
  int v68 = v158;
  v107(v108, v170);
  uint64_t v109 = v101;
  uint64_t v63 = v104;
  v107(v109, v106);
  char v70 = v179;
  unint64_t v110 = (v164 >> 5) & 1;
  if (!v105) {
    LODWORD(v110) = 1;
  }
  if (v110) {
    unint64_t v111 = v164;
  }
  else {
    unint64_t v111 = v164 | 0x20;
  }
  if (sub_1008AFAF8((uint64_t)&v68[v179[29]]) & 1 | (v111 >> 6) & 1) {
    uint64_t v36 = v111;
  }
  else {
    uint64_t v36 = v111 | 0x40;
  }
  uint64_t v61 = v180;
  uint64_t v62 = v181;
LABEL_67:
  uint64_t v112 = v70[31];
  uint64_t v113 = &v63[v112];
  char v114 = v63[v112 + 8];
  uint64_t v115 = &v68[v112];
  char v116 = v68[v112 + 8];
  if (v114)
  {
    uint64_t v117 = (uint64_t)v176;
    if (v116) {
      goto LABEL_74;
    }
LABEL_73:
    v36 |= 0x400uLL;
    goto LABEL_74;
  }
  if (*v113 != *(void *)v115) {
    char v116 = 1;
  }
  uint64_t v117 = (uint64_t)v176;
  if (v116) {
    goto LABEL_73;
  }
LABEL_74:
  uint64_t v118 = v179[30];
  uint64_t v119 = *(void *)&v68[v118];
  if (*(void *)&v63[v118])
  {
    if (!v119) {
      goto LABEL_79;
    }
    swift_bridgeObjectRetain();
    uint64_t v120 = swift_bridgeObjectRetain();
    char v121 = _s9libfssync4TagsV23__derived_struct_equalsySbAC_ACtFZ_0(v120, v119);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v121 & 1) == 0)
    {
      uint64_t v63 = v161;
      goto LABEL_79;
    }
    uint64_t v63 = v161;
LABEL_82:
    uint64_t v122 = v173;
    uint64_t v123 = v179;
    goto LABEL_83;
  }
  if (!v119) {
    goto LABEL_82;
  }
LABEL_79:
  uint64_t v122 = v173;
  uint64_t v123 = v179;
  if ((v36 & 0x800) == 0) {
    v36 |= 0x800uLL;
  }
LABEL_83:
  uint64_t v124 = v123[15];
  int v125 = v63[v124];
  sub_10002B70C(v62, v117, (uint64_t *)&unk_100AD0CC0);
  if (v125 != 1)
  {
    sub_10002B770(v117, (uint64_t *)&unk_100AD0CC0);
    uint64_t v127 = v175;
    sub_10002B70C(v160, v175, &qword_100ACCB10);
    goto LABEL_88;
  }
  char v126 = *(unsigned char *)(v117 + *(int *)(v61 + 48) + v123[15]);
  sub_10002B770(v117, (uint64_t *)&unk_100AD0CC0);
  uint64_t v127 = v175;
  sub_10002B70C(v160, v175, &qword_100ACCB10);
  if (v126)
  {
LABEL_88:
    sub_10002B770(v127, &qword_100ACCB10);
    goto LABEL_89;
  }
  char v128 = *(unsigned char *)(v127 + *(int *)(v178 + 48) + v123[18]);
  sub_10002B770(v127, &qword_100ACCB10);
  if ((v128 & 1) == 0)
  {
    v36 |= 0x80000uLL;
    goto LABEL_93;
  }
LABEL_89:
  char v129 = v63[v124];
  uint64_t v130 = v172;
  sub_10002B70C(v62, v172, (uint64_t *)&unk_100AD0CC0);
  if (v129)
  {
    sub_10002B770(v130, (uint64_t *)&unk_100AD0CC0);
  }
  else
  {
    unsigned __int8 v131 = *(unsigned char *)(v130 + *(int *)(v61 + 48) + v123[15]);
    sub_10002B770(v130, (uint64_t *)&unk_100AD0CC0);
    if ((v131 & ((v36 & 0x100000) == 0)) != 0) {
      v36 |= 0x100000uLL;
    }
  }
LABEL_93:
  if ((*(unsigned char *)(v122 + OBJC_IVAR____TtC9libfssync4FPCK_launchOptions) & 0x40) != 0) {
    goto LABEL_102;
  }
  uint64_t v132 = v123[10];
  int v133 = v63[v132];
  uint64_t v134 = v167;
  sub_10002B70C(v62, v167, (uint64_t *)&unk_100AD0CC0);
  if (v133 != 1)
  {
    sub_10002B770(v134, (uint64_t *)&unk_100AD0CC0);
LABEL_98:
    char v136 = v63[v132];
    uint64_t v137 = v166;
    sub_10002B70C(v62, v166, (uint64_t *)&unk_100AD0CC0);
    if (v136)
    {
      sub_10002B770(v137, (uint64_t *)&unk_100AD0CC0);
    }
    else
    {
      int v138 = *(unsigned __int8 *)(v137 + *(int *)(v61 + 48) + v123[10]);
      sub_10002B770(v137, (uint64_t *)&unk_100AD0CC0);
      if (v138) {
        v36 |= 0x4000000uLL;
      }
    }
    goto LABEL_102;
  }
  char v135 = *(unsigned char *)(v134 + *(int *)(v61 + 48) + v123[10]);
  sub_10002B770(v134, (uint64_t *)&unk_100AD0CC0);
  if (v135) {
    goto LABEL_98;
  }
  v36 |= 0x2000000uLL;
LABEL_102:
  if (v63[v123[20]]) {
    return v36;
  }
  sub_10001AE98(v159, (uint64_t)v184, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v184) == 1 || (v165 & 1) == 0) {
    return v36;
  }
  char v139 = v184[0];
  uint64_t v140 = v185;
  uint64_t v141 = v186;
  sub_10001AE98((uint64_t)v187, (uint64_t)v182, &qword_100AD0EA0);
  sub_1002677EC((uint64_t)v182);
  if ((sub_100153F20() & 1) == 0) {
    goto LABEL_125;
  }
  uint64_t v142 = v179[21];
  int v143 = v63[v142];
  if ((v139 & 0x40) == 0)
  {
    sub_1000DBD88(v159);
    if (v143) {
      return v36 | 0x40000000;
    }
    return v36;
  }
  if (!v143)
  {
    sub_1000DBD88(v159);
    return v36 | 0x80000000;
  }
  int v144 = v161;
  uint64_t v145 = sub_1005EBAF8(v140, v141, 0, v157 & 1, *v161 == 1, 1u);
  if ((v145 == 1002 || v145 == 3) && v143 != 5) {
    v36 |= (unint64_t)&_mh_execute_header;
  }
  uint64_t v148 = v179;
  int v149 = v144[v179[11]];
  uint64_t v150 = v162;
  sub_10002B70C(v160, v162, &qword_100ACCB10);
  if (v149 == 1)
  {
    sub_10002B770(v150, &qword_100ACCB10);
    goto LABEL_122;
  }
  int v151 = *(unsigned __int8 *)(v150 + *(int *)(v178 + 48) + v148[12]);
  sub_10002B770(v150, &qword_100ACCB10);
  if (v151 != 1)
  {
LABEL_125:
    sub_1000DBD88(v159);
    return v36;
  }
LABEL_122:
  int v152 = v161[v142];
  sub_1000DBD88(v159);
  if (v152 != 5) {
    return v36 | 0x200000000;
  }
  return v36;
}

uint64_t static FPCK.dumpDatabase(at:fullDump:writeTo:)(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  return sub_1004A2690(a1, a2, a3, a4);
}

void sub_100483FB8()
{
}

uint64_t sub_100484088()
{
  uint64_t v1 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v27 - v5;
  uint64_t v7 = sub_10096AE50();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v29 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v27 = (char *)&v27 - v11;
  uint64_t v12 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_rootURL;
  swift_beginAccess();
  sub_10002B70C(v12, (uint64_t)v6, &qword_100ACA8C0);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v28(v6, 1, v7) == 1)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v13 = self;
  sub_10096AD20(v14);
  uint64_t v16 = v15;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v17, v7);
  id v19 = objc_msgSend(v13, "fp_supportDirectoryForVolume:", v16);

  if (!v19)
  {
LABEL_8:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
    goto LABEL_9;
  }
  uint64_t v20 = v29;
  sub_10096ADD0();

  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v4, v20, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v4, 1, v7);
  if (result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v22 = v27;
  sub_10096AD50();
  v18(v4, v7);
  if (qword_100ACC078 != -1) {
    swift_once();
  }
  id v23 = (id)qword_100AD4490;
  sub_10096AD20(v24);
  uint64_t v26 = v25;
  [v23 purgeAndWaitAtUrl:v25];

  return ((uint64_t (*)(char *, uint64_t))v18)(v22, v7);
}

uint64_t sub_1004843FC()
{
  uint64_t v1 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10096AC80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10096AE50();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v0;
  if (*(void *)&v0[OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker])
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.notDirectory(_:), v4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v3, 1, 1, v8);
    swift_retain();
    sub_10096AE30();
    type metadata accessor for SQLBackupManifest();
    swift_allocObject();
    uint64_t v13 = v21;
    uint64_t v14 = sub_1001F2CB8(v12);
    if (!v13)
    {
      uint64_t v15 = v14;
      uint64_t v16 = (void *)swift_allocObject();
      uint64_t v17 = v20;
      void v16[2] = v20;
      v16[3] = v15;
      id v18 = v17;
      swift_retain();
      sub_10063F524(1, (uint64_t)sub_1004A7090, v16);
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1004846B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v83 = a1;
  uint64_t v8 = sub_10096A630();
  unint64_t v81 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = &v78[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = &v78[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = &v78[-v16];
  __chkstk_darwin(v15);
  uint64_t v19 = &v78[-v18];
  uint64_t v82 = a4;
  uint64_t result = sub_100463698();
  if ((result & 1) == 0) {
    return result;
  }
  if ((a2 & 1) == 0) {
    return result;
  }
  int v21 = *(unsigned __int8 *)(v83 + 8);
  if (v21 == 2 && !*(void *)v83) {
    return result;
  }
  if (*(unsigned char *)(v83 + 8))
  {
    int v79 = 0;
    unint64_t v80 = 0xE000000000000000;
    if (v21 == 1) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
  __chkstk_darwin(result);
  *(void *)&v78[-16] = a5;
  *(_DWORD *)&v78[-8] = v30;
  uint64_t v31 = v86;
  uint64_t result = sub_1008BE02C(5, (uint64_t)sub_1004A7110, (uint64_t)&v78[-32]);
  if (!v31)
  {
    int v79 = v33;
    unint64_t v80 = v32;
    uint64_t v86 = 0;
    if (*(unsigned char *)(v83 + 8) == 1)
    {
LABEL_7:
      __chkstk_darwin(result);
      *(void *)&v78[-16] = a5;
      *(void *)&v78[-8] = v22;
      uint64_t v23 = v86;
      sub_1008BE02C(5, (uint64_t)sub_1004A70AC, (uint64_t)&v78[-32]);
      if (!v23)
      {
        unint64_t v26 = v24;
        int v27 = v25;
        uint64_t v86 = 0;
        swift_bridgeObjectRelease();
        char v28 = 1;
        uint64_t v29 = 2;
        int v79 = v27;
        unint64_t v80 = v26;
        goto LABEL_16;
      }
      goto LABEL_11;
    }
LABEL_15:
    char v28 = 1;
    uint64_t v29 = 2;
    goto LABEL_16;
  }
  int v79 = 0;
  unint64_t v80 = 0xE000000000000000;
LABEL_11:
  swift_errorRetain();
  sub_10096A4F0();
  sub_1004A70C8((unint64_t *)&qword_100ACF7F0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
  char v34 = sub_10096AA60();
  swift_errorRelease();
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v10, v8);
  if ((v34 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  swift_errorRelease();
  char v28 = 0;
  uint64_t v86 = 0;
  uint64_t v29 = 3;
LABEL_16:
  uint64_t v35 = v83;
  int v36 = *(unsigned __int8 *)(v83 + *(int *)(v11 + 48));
  sub_10002B70C(v83, (uint64_t)v19, &qword_100ACCB10);
  if (v36 == 1)
  {
    sub_10002B770((uint64_t)v19, &qword_100ACCB10);
    sub_10002B70C(v35, (uint64_t)v17, &qword_100ACCB10);
LABEL_19:
    sub_10002B770((uint64_t)v17, &qword_100ACCB10);
    sub_10002B70C(v35, (uint64_t)v14, &qword_100ACCB10);
LABEL_20:
    sub_10002B770((uint64_t)v14, &qword_100ACCB10);
    if (v28) {
      return swift_bridgeObjectRelease();
    }
    unint64_t v38 = 1;
    goto LABEL_23;
  }
  int v37 = v19[*(int *)(v11 + 48)];
  sub_10002B770((uint64_t)v19, &qword_100ACCB10);
  sub_10002B70C(v35, (uint64_t)v17, &qword_100ACCB10);
  if (v37 == 2) {
    goto LABEL_19;
  }
  uint64_t v74 = &v17[*(int *)(v11 + 48)];
  char v75 = v74[*(int *)(type metadata accessor for ItemMetadata() + 80)];
  sub_10002B770((uint64_t)v17, &qword_100ACCB10);
  sub_10002B70C(v35, (uint64_t)v14, &qword_100ACCB10);
  if (v75) {
    goto LABEL_20;
  }
  int v76 = *((_DWORD *)v14 + 10);
  sub_10002B770((uint64_t)v14, &qword_100ACCB10);
  if (v76 == v79) {
    char v77 = v28;
  }
  else {
    char v77 = 0;
  }
  if (v76 == v79) {
    unint64_t v38 = 1;
  }
  else {
    unint64_t v38 = v29;
  }
  if (v77) {
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  uint64_t v39 = 0;
  uint64_t v40 = (uint64_t *)(v82 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredBackupManifestVsFSSnapshotDiffCounters);
  unint64_t v81 = v38;
  do
  {
    unint64_t v41 = __clz(__rbit64(v38));
    uint64_t v42 = v38 & ~(1 << v41);
    if (((1 << v41) & v38) == 0) {
      uint64_t v42 = v38;
    }
    if (v41 >= 0x40) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = 1 << v41;
    }
    if (v41 < 0x40) {
      unint64_t v38 = v42;
    }
    swift_beginAccess();
    sub_1000705CC((uint64_t)v39);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v84 = *v40;
    uint64_t v45 = v84;
    *uint64_t v40 = 0x8000000000000000;
    unint64_t v47 = sub_1003204C8(v43);
    uint64_t v48 = *(void *)(v45 + 16);
    BOOL v49 = (v46 & 1) == 0;
    uint64_t v50 = v48 + v49;
    if (__OFADD__(v48, v49))
    {
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    char v51 = v46;
    if (*(void *)(v45 + 24) >= v50)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1009203E8();
        uint64_t v45 = v84;
      }
    }
    else
    {
      sub_10037AAC0(v50, isUniquelyReferenced_nonNull_native);
      uint64_t v45 = v84;
      unint64_t v52 = sub_1003204C8(v43);
      if ((v51 & 1) != (v53 & 1)) {
        goto LABEL_63;
      }
      unint64_t v47 = v52;
    }
    *uint64_t v40 = v45;
    swift_bridgeObjectRelease();
    unint64_t v54 = (void *)*v40;
    if (v51)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v54[(v47 >> 6) + 8] |= 1 << v47;
      uint64_t v55 = 8 * v47;
      *(void *)(v54[6] + v55) = v43;
      *(void *)(v54[7] + v55) = 0;
      uint64_t v56 = v54[2];
      uint64_t v57 = v56 + 1;
      BOOL v58 = __OFADD__(v56, 1);
      swift_bridgeObjectRetain();
      if (v58) {
        goto LABEL_61;
      }
      v54[2] = v57;
    }
    uint64_t v59 = v54[7];
    uint64_t v60 = *(void *)(v59 + 8 * v47);
    BOOL v61 = __OFADD__(v60, 1);
    uint64_t v62 = v60 + 1;
    if (v61) {
      goto LABEL_60;
    }
    *(void *)(v59 + 8 * v47) = v62;
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_10002E4B4;
  }
  while (v38);
  uint64_t v63 = v82;
  uint64_t v64 = (void *)(v82 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInBackupManifestCheck);
  swift_beginAccess();
  if (!__OFADD__(*v64, 1))
  {
    ++*v64;
    char v65 = *(void (**)(uint64_t, uint64_t))(v63 + OBJC_IVAR____TtC9libfssync4FPCK_resultHandler);
    uint64_t v66 = *(void *)(v83 + 16);
    char v67 = *(unsigned char *)(v83 + 24);
    swift_retain();
    uint64_t v84 = VFSItemID.parseableString.getter(v66, v67);
    uint64_t v85 = v68;
    v87._int countAndFlagsBits = 47;
    v87._object = (void *)0xE100000000000000;
    sub_10096BDC0(v87);
    swift_bridgeObjectRetain();
    NSString v69 = sub_10096BC00();
    id v70 = objc_msgSend(v69, "fp_obfuscatedFilename");

    uint64_t v71 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unsigned int v73 = v72;

    v88._int countAndFlagsBits = v71;
    v88._object = v73;
    sub_10096BDC0(v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v89._int countAndFlagsBits = 8250;
    v89._object = (void *)0xE200000000000000;
    sub_10096BDC0(v89);
    v90._int countAndFlagsBits = sub_100609418(v81);
    sub_10096BDC0(v90);
    swift_bridgeObjectRelease();
    v91._int countAndFlagsBits = 2592;
    v91._object = (void *)0xE200000000000000;
    sub_10096BDC0(v91);
    v65(v84, v85);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_62:
  __break(1u);
LABEL_63:
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

void FPCK.init()()
{
}

uint64_t BrokenInvariants.bitDescription.getter(uint64_t a1)
{
  uint64_t result = 0;
  if (a1 > 0x1FFFFFFF)
  {
    if (a1 > 0x7FFFFFFFFFFLL)
    {
      if (a1 <= 0x3FFFFFFFFFFFFLL)
      {
        if (a1 <= 0x3FFFFFFFFFFFLL)
        {
          if (a1 == 0x80000000000) {
            return 0xD000000000000018;
          }
          uint64_t v3 = 0x100000000000;
          unint64_t v4 = 0xD000000000000016;
          uint64_t v5 = 0x200000000000;
          unint64_t v6 = 0xD000000000000020;
        }
        else
        {
          if (a1 > 0xFFFFFFFFFFFFLL)
          {
            uint64_t v3 = 0x1000000000000;
            unint64_t v4 = 0xD000000000000024;
            uint64_t v5 = 0x2000000000000;
          }
          else
          {
            uint64_t v3 = 0x400000000000;
            unint64_t v4 = 0xD000000000000016;
            uint64_t v5 = 0x800000000000;
          }
          unint64_t v6 = 0xD000000000000021;
        }
        goto LABEL_88;
      }
      if (a1 <= 0x1FFFFFFFFFFFFFLL)
      {
        switch(a1)
        {
          case 0x4000000000000:
            return 0xD000000000000023;
          case 0x8000000000000:
            return 0x797375625F736168;
          case 0x10000000000000:
            return 0xD00000000000001CLL;
        }
        return result;
      }
      if (a1 <= 0x7FFFFFFFFFFFFFLL)
      {
        uint64_t v3 = 0x20000000000000;
        unint64_t v4 = 0xD000000000000020;
        uint64_t v5 = 0x40000000000000;
        unint64_t v6 = 0xD000000000000022;
        goto LABEL_88;
      }
      uint64_t v16 = 0x80000000000000;
      if (a1 == 0x100000000000000) {
        unint64_t v17 = 0xD000000000000019;
      }
      else {
        unint64_t v17 = 0;
      }
    }
    else
    {
      if (a1 <= 0xFFFFFFFFFLL)
      {
        if (a1 <= 0xFFFFFFFFLL)
        {
          if (a1 == 0x20000000) {
            return 0xD000000000000018;
          }
          uint64_t v3 = 0x40000000;
          unint64_t v4 = 0xD000000000000019;
          uint64_t v5 = 0x80000000;
          unint64_t v6 = 0xD00000000000001FLL;
        }
        else if (a1 > 0x3FFFFFFFFLL)
        {
          uint64_t v3 = 0x400000000;
          unint64_t v4 = 0xD000000000000019;
          uint64_t v5 = 0x800000000;
          unint64_t v6 = 0xD000000000000036;
        }
        else
        {
          uint64_t v3 = (uint64_t)&_mh_execute_header;
          unint64_t v4 = 0xD000000000000020;
          uint64_t v5 = 0x200000000;
          unint64_t v6 = 0xD000000000000024;
        }
        goto LABEL_88;
      }
      if (a1 <= 0x7FFFFFFFFFLL)
      {
        if (a1 == 0x1000000000) {
          return 0xD000000000000019;
        }
        uint64_t v3 = 0x2000000000;
        unint64_t v4 = 0xD00000000000001ELL;
        uint64_t v5 = 0x4000000000;
        unint64_t v6 = 0xD00000000000001FLL;
        goto LABEL_88;
      }
      if (a1 <= 0x1FFFFFFFFFFLL)
      {
        uint64_t v3 = 0x8000000000;
        unint64_t v4 = 0xD00000000000001ELL;
        uint64_t v5 = 0x10000000000;
        unint64_t v6 = 0xD00000000000002ALL;
LABEL_88:
        if (a1 != v5) {
          unint64_t v6 = 0;
        }
        if (a1 == v3) {
          return v4;
        }
        else {
          return v6;
        }
      }
      uint64_t v16 = 0x20000000000;
      if (a1 == 0x40000000000) {
        unint64_t v17 = 0xD00000000000001ALL;
      }
      else {
        unint64_t v17 = 0;
      }
    }
    if (a1 == v16) {
      return 0xD00000000000001ALL;
    }
    else {
      return v17;
    }
  }
  if (a1 < 0x4000)
  {
    if (a1 > 127)
    {
      if (a1 <= 1023)
      {
        unint64_t v13 = 0xD00000000000001ALL;
        if (a1 != 512) {
          unint64_t v13 = 0;
        }
        if (a1 == 256) {
          unint64_t v13 = 0xD000000000000014;
        }
        if (a1 == 128) {
          return 0xD000000000000014;
        }
        else {
          return v13;
        }
      }
      else
      {
        unint64_t v9 = 0xD00000000000001CLL;
        if (a1 == 0x2000) {
          unint64_t v10 = 0xD00000000000001CLL;
        }
        else {
          unint64_t v10 = 0;
        }
        if (a1 == 4096) {
          unint64_t v10 = 0xD00000000000001ALL;
        }
        unint64_t v11 = 0xD000000000000019;
        if (a1 != 2048) {
          unint64_t v9 = 0;
        }
        if (a1 != 1024) {
          unint64_t v11 = v9;
        }
        if (a1 <= 4095) {
          return v11;
        }
        else {
          return v10;
        }
      }
    }
    else
    {
      switch(a1)
      {
        case 1:
          uint64_t result = 0x6F6E5F646C756F63;
          break;
        case 2:
          uint64_t result = 0xD000000000000019;
          break;
        case 4:
          uint64_t result = 0xD00000000000001ELL;
          break;
        case 8:
          uint64_t result = 0xD000000000000023;
          break;
        case 16:
          uint64_t result = 0xD000000000000022;
          break;
        case 32:
          uint64_t result = 0xD00000000000001ALL;
          break;
        case 64:
          uint64_t result = 0xD00000000000001FLL;
          break;
        default:
          return result;
      }
    }
    return result;
  }
  if (a1 >= 0x200000)
  {
    if (a1 <= 0xFFFFFF)
    {
      unint64_t v7 = 0xD00000000000001BLL;
      unint64_t v14 = 0xD00000000000001ALL;
      if (a1 != 0x800000) {
        unint64_t v14 = 0;
      }
      if (a1 != 0x400000) {
        unint64_t v7 = v14;
      }
      BOOL v8 = a1 == 0x200000;
      goto LABEL_69;
    }
    if (a1 > 0x7FFFFFF)
    {
      uint64_t v3 = 0x8000000;
      unint64_t v4 = 0xD000000000000016;
      uint64_t v5 = 0x10000000;
      unint64_t v6 = 0xD000000000000014;
    }
    else
    {
      uint64_t v3 = 0x1000000;
      unint64_t v4 = 0xD00000000000002ALL;
      uint64_t v5 = 0x4000000;
      unint64_t v6 = 0xD000000000000011;
    }
    goto LABEL_88;
  }
  if (a1 < 0x20000)
  {
    unint64_t v12 = 0xD00000000000001ELL;
    if (a1 != 0x10000) {
      unint64_t v12 = 0;
    }
    if (a1 == 0x8000) {
      unint64_t v12 = 0xD00000000000001DLL;
    }
    if (a1 == 0x4000) {
      return 0xD00000000000001FLL;
    }
    else {
      return v12;
    }
  }
  else
  {
    if (a1 < 0x80000)
    {
      unint64_t v7 = 0xD000000000000011;
      if (a1 != 0x40000) {
        unint64_t v7 = 0;
      }
      BOOL v8 = a1 == 0x20000;
LABEL_69:
      if (v8) {
        return 0xD000000000000010;
      }
      else {
        return v7;
      }
    }
    uint64_t v15 = 0x7974706D655F7369;
    if (a1 != 0x100000) {
      uint64_t v15 = 0;
    }
    if (a1 == 0x80000) {
      return 0x5F656469735F7369;
    }
    else {
      return v15;
    }
  }
}

uint64_t sub_1004857E0()
{
  return BrokenInvariants.bitDescription.getter(*v0);
}

Swift::Int sub_1004857E8(uint64_t a1, uint64_t a2)
{
  return sub_100486AC4(a1, a2, (void (*)(uint64_t))&Hasher._combine(_:));
}

Swift::Int sub_100485800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100486B1C(a1, a2, a3, (void (*)(uint64_t))&Hasher._combine(_:));
}

uint64_t sub_100485818()
{
  return sub_100609904(*v0);
}

uint64_t sub_100485820()
{
  return sub_1006F02BC(*v0);
}

unint64_t FPCKOptions.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0xD000000000000021;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD000000000000021;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
    case 31:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0x75705F7261656C63;
      break;
    case 63:
      unint64_t result = 0xD000000000000023;
      break;
    default:
      unint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_100485A18()
{
  return FPCKOptions.description.getter(*v0);
}

unint64_t sub_100485A20(uint64_t a1)
{
  if (a1 < 0x40000)
  {
    if (a1 > 511)
    {
      if (a1 < 0x2000)
      {
        unint64_t v20 = 0xD000000000000012;
        unint64_t v21 = 0xD000000000000018;
        if (a1 != 4096) {
          unint64_t v21 = 0;
        }
        if (a1 != 2048) {
          unint64_t v20 = v21;
        }
        unint64_t v22 = 0xD000000000000017;
        if (a1 != 1024) {
          unint64_t v22 = 0;
        }
        if (a1 == 512) {
          unint64_t v22 = 0xD000000000000015;
        }
        if (a1 <= 2047) {
          return v22;
        }
        else {
          return v20;
        }
      }
      else
      {
        if (a1 < 0x8000)
        {
          unint64_t v13 = 0xD000000000000013;
          unint64_t v14 = 0xD000000000000021;
          if (a1 != 0x4000) {
            unint64_t v14 = 0;
          }
          BOOL v15 = a1 == 0x2000;
        }
        else
        {
          unint64_t v13 = 0xD00000000000002ALL;
          unint64_t v14 = 0xD00000000000002BLL;
          if (a1 != 0x20000) {
            unint64_t v14 = 0;
          }
          if (a1 == 0x10000) {
            unint64_t v14 = 0xD00000000000002ALL;
          }
          BOOL v15 = a1 == 0x8000;
        }
        if (v15) {
          return v13;
        }
        else {
          return v14;
        }
      }
    }
    else
    {
      uint64_t v7 = a1 - 1;
      unint64_t result = 0;
      switch(v7)
      {
        case 0:
          unint64_t result = 0xD000000000000021;
          break;
        case 1:
          unint64_t result = 0xD000000000000013;
          break;
        case 2:
        case 4:
        case 5:
        case 6:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 28:
        case 29:
        case 30:
        case 32:
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
          return result;
        case 3:
          unint64_t result = 0xD000000000000014;
          break;
        case 7:
          unint64_t result = 0x6E65726566666964;
          break;
        case 15:
          unint64_t result = 0xD000000000000023;
          break;
        case 31:
          unint64_t result = 0xD000000000000017;
          break;
        case 63:
          unint64_t result = 0xD000000000000018;
          break;
        default:
          unint64_t result = 0;
          break;
      }
    }
  }
  else
  {
    if (a1 > 0x7FFFFFF)
    {
      if (a1 <= 0xFFFFFFFFLL)
      {
        if (a1 <= 0x1FFFFFFF)
        {
          if (a1 == 0x10000000) {
            unint64_t v23 = 0xD000000000000028;
          }
          else {
            unint64_t v23 = 0;
          }
          if (a1 == 0x8000000) {
            return 0xD000000000000028;
          }
          else {
            return v23;
          }
        }
        uint64_t v1 = 0x20000000;
        unint64_t v2 = 0xD000000000000021;
        uint64_t v3 = 0x40000000;
        unint64_t v4 = 0xD000000000000025;
        uint64_t v5 = 0x80000000;
        unint64_t v6 = 0xD000000000000022;
        goto LABEL_27;
      }
      if (a1 > 0x3FFFFFFFFLL)
      {
        uint64_t v1 = 0x400000000;
        unint64_t v2 = 0xD000000000000026;
        uint64_t v3 = 0x800000000;
        unint64_t v4 = 0xD00000000000002BLL;
        uint64_t v5 = 0x1000000000;
        unint64_t v6 = 0xD000000000000030;
LABEL_27:
        if (a1 != v5) {
          unint64_t v6 = 0;
        }
        if (a1 == v3) {
          unint64_t v6 = v4;
        }
        if (a1 == v1) {
          return v2;
        }
        else {
          return v6;
        }
      }
      uint64_t v9 = (uint64_t)&_mh_execute_header;
      unint64_t v10 = 0xD00000000000002FLL;
      if (a1 == 0x200000000) {
        unint64_t v12 = 0xD00000000000002FLL;
      }
      else {
        unint64_t v12 = 0;
      }
LABEL_79:
      if (a1 == v9) {
        return v10;
      }
      else {
        return v12;
      }
    }
    if (a1 < 0x400000)
    {
      unint64_t v16 = 0xD00000000000002BLL;
      if (a1 == 0x200000) {
        unint64_t v17 = 0xD000000000000028;
      }
      else {
        unint64_t v17 = 0;
      }
      if (a1 != 0x100000) {
        unint64_t v16 = v17;
      }
      unint64_t v18 = 0xD00000000000002BLL;
      if (a1 == 0x80000) {
        unint64_t v19 = 0xD00000000000002BLL;
      }
      else {
        unint64_t v19 = 0;
      }
      if (a1 != 0x40000) {
        unint64_t v18 = v19;
      }
      if (a1 < 0x100000) {
        return v18;
      }
      else {
        return v16;
      }
    }
    else
    {
      if (a1 > 0xFFFFFF)
      {
        uint64_t v9 = 0x1000000;
        unint64_t v10 = 0xD000000000000032;
        if (a1 == 0x4000000) {
          unint64_t v11 = 0xD000000000000028;
        }
        else {
          unint64_t v11 = 0;
        }
        if (a1 == 0x2000000) {
          unint64_t v12 = 0xD000000000000028;
        }
        else {
          unint64_t v12 = v11;
        }
        goto LABEL_79;
      }
      unint64_t v24 = 0xD000000000000032;
      if (a1 != 0x800000) {
        unint64_t v24 = 0;
      }
      if (a1 == 0x400000) {
        return 0xD000000000000028;
      }
      else {
        return v24;
      }
    }
  }
  return result;
}

unint64_t sub_1004860AC()
{
  return sub_100485A20(*v0);
}

Swift::Int sub_1004860B4(uint64_t a1, uint64_t a2)
{
  return sub_100486AC4(a1, a2, (void (*)(uint64_t))&Hasher._combine(_:));
}

void sub_1004860CC()
{
  sub_10096D4F0(*v0);
}

Swift::Int sub_1004860F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100486B1C(a1, a2, a3, (void (*)(uint64_t))&Hasher._combine(_:));
}

uint64_t sub_100486110()
{
  return sub_1006093E4(*v0);
}

uint64_t sub_100486118()
{
  return sub_1006F00F4(*v0);
}

unint64_t sub_100486120(uint64_t a1)
{
  if (a1 >= 0x10000)
  {
    if (a1 > 0x3FFFFFF)
    {
      if (a1 > 0x3FFFFFFF)
      {
        if (a1 > 0xFFFFFFFFLL)
        {
          uint64_t v19 = (uint64_t)&_mh_execute_header;
          unint64_t v20 = 0xD000000000000025;
          uint64_t v21 = 0x200000000;
          unint64_t v22 = 0xD00000000000001CLL;
        }
        else
        {
          uint64_t v19 = 0x40000000;
          unint64_t v20 = 0xD00000000000001FLL;
          uint64_t v21 = 0x80000000;
          unint64_t v22 = 0xD00000000000001BLL;
        }
      }
      else
      {
        if (a1 <= 0xFFFFFFF)
        {
          if (a1 == 0x8000000) {
            unint64_t v10 = 0xD00000000000002FLL;
          }
          else {
            unint64_t v10 = 0;
          }
          if (a1 == 0x4000000) {
            return 0xD00000000000002FLL;
          }
          else {
            return v10;
          }
        }
        uint64_t v19 = 0x10000000;
        unint64_t v20 = 0xD00000000000002FLL;
        uint64_t v21 = 0x20000000;
        unint64_t v22 = 0xD000000000000022;
      }
      if (a1 != v21) {
        unint64_t v22 = 0;
      }
      if (a1 == v19) {
        return v20;
      }
      else {
        return v22;
      }
    }
    else if (a1 >= 0x100000)
    {
      unint64_t v11 = 0xD000000000000039;
      if (a1 == 0x2000000) {
        unint64_t v12 = 0xD00000000000002FLL;
      }
      else {
        unint64_t v12 = 0;
      }
      if (a1 == 0x1000000) {
        unint64_t v13 = 0xD000000000000039;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = 0xD000000000000032;
      if (a1 != 0x800000) {
        unint64_t v11 = 0;
      }
      if (a1 != 0x100000) {
        unint64_t v14 = v11;
      }
      if (a1 <= 0xFFFFFF) {
        return v14;
      }
      else {
        return v13;
      }
    }
    else
    {
      unint64_t v3 = 0xD000000000000032;
      if (a1 == 0x80000) {
        unint64_t v4 = 0xD000000000000032;
      }
      else {
        unint64_t v4 = 0;
      }
      if (a1 == 0x40000) {
        unint64_t v4 = 0xD000000000000032;
      }
      unint64_t v5 = 0xD000000000000031;
      if (a1 != 0x20000) {
        unint64_t v3 = 0;
      }
      if (a1 != 0x10000) {
        unint64_t v5 = v3;
      }
      if (a1 < 0x40000) {
        return v5;
      }
      else {
        return v4;
      }
    }
  }
  else if (a1 > 255)
  {
    if (a1 > 4095)
    {
      unint64_t v15 = 0xD000000000000021;
      unint64_t v16 = 0xD000000000000031;
      if (a1 != 0x8000) {
        unint64_t v16 = 0;
      }
      if (a1 != 0x4000) {
        unint64_t v15 = v16;
      }
      unint64_t v17 = 0xD000000000000013;
      if (a1 != 0x2000) {
        unint64_t v17 = 0;
      }
      if (a1 == 4096) {
        unint64_t v18 = 0xD000000000000018;
      }
      else {
        unint64_t v18 = v17;
      }
      if (a1 < 0x4000) {
        return v18;
      }
      else {
        return v15;
      }
    }
    else
    {
      unint64_t v6 = 0xD000000000000017;
      unint64_t v7 = 0xD000000000000012;
      if (a1 != 2048) {
        unint64_t v7 = 0;
      }
      if (a1 != 1024) {
        unint64_t v6 = v7;
      }
      unint64_t v8 = 0xD000000000000017;
      unint64_t v9 = 0xD000000000000015;
      if (a1 != 512) {
        unint64_t v9 = 0;
      }
      if (a1 != 256) {
        unint64_t v8 = v9;
      }
      if (a1 <= 1023) {
        return v8;
      }
      else {
        return v6;
      }
    }
  }
  else
  {
    uint64_t v1 = a1 - 1;
    unint64_t result = 0;
    switch(v1)
    {
      case 0:
        unint64_t result = 0xD000000000000028;
        break;
      case 1:
        unint64_t result = 0xD000000000000013;
        break;
      case 2:
      case 4:
      case 5:
      case 6:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
        return result;
      case 3:
        unint64_t result = 0xD000000000000014;
        break;
      case 7:
        unint64_t result = 0x6E65726566666964;
        break;
      case 15:
        unint64_t result = 0xD000000000000023;
        break;
      case 31:
        unint64_t result = 0xD000000000000017;
        break;
      case 63:
        unint64_t result = 0xD000000000000018;
        break;
      default:
        unint64_t result = 0;
        break;
    }
  }
  return result;
}

unint64_t sub_1004866F4()
{
  return sub_100486120(*v0);
}

uint64_t sub_1004866FC()
{
  return sub_100609614(*v0);
}

uint64_t sub_100486704()
{
  return sub_1006F0118(*v0);
}

unint64_t sub_10048670C(uint64_t a1)
{
  unint64_t result = 0;
  if (a1 <= 127)
  {
    switch(a1)
    {
      case 1:
        unint64_t result = 0xD000000000000014;
        break;
      case 2:
        unint64_t result = 0xD000000000000020;
        break;
      case 4:
        unint64_t result = 0xD00000000000001ELL;
        break;
      case 8:
        unint64_t result = 0xD000000000000031;
        break;
      case 16:
        unint64_t result = 0xD000000000000025;
        break;
      case 32:
        unint64_t result = 0xD000000000000025;
        break;
      case 64:
        unint64_t result = 0xD000000000000023;
        break;
      default:
        return result;
    }
  }
  else if (a1 > 2047)
  {
    unint64_t v7 = 0xD000000000000026;
    if (a1 != 0x4000) {
      unint64_t v7 = 0;
    }
    if (a1 == 0x2000) {
      unint64_t v7 = 0xD000000000000015;
    }
    unint64_t v8 = 0xD000000000000012;
    unint64_t v9 = 0xD000000000000015;
    if (a1 != 4096) {
      unint64_t v9 = 0;
    }
    if (a1 != 2048) {
      unint64_t v8 = v9;
    }
    if (a1 < 0x2000) {
      return v8;
    }
    else {
      return v7;
    }
  }
  else
  {
    unint64_t v3 = 0xD000000000000030;
    if (a1 == 1024) {
      unint64_t v4 = 0xD000000000000012;
    }
    else {
      unint64_t v4 = 0;
    }
    if (a1 != 512) {
      unint64_t v3 = v4;
    }
    unint64_t v5 = 0xD000000000000023;
    unint64_t v6 = 0xD000000000000030;
    if (a1 != 256) {
      unint64_t v6 = 0;
    }
    if (a1 != 128) {
      unint64_t v5 = v6;
    }
    if (a1 <= 511) {
      return v5;
    }
    else {
      return v3;
    }
  }
  return result;
}

unint64_t sub_100486A34()
{
  return sub_10048670C(*v0);
}

uint64_t sub_100486A3C()
{
  return sub_100609648(*v0);
}

uint64_t sub_100486A44()
{
  return sub_1006F0124(*v0);
}

unint64_t sub_100486A4C(uint64_t a1)
{
  unint64_t v1 = 0xD000000000000012;
  unint64_t v2 = 0xD000000000000025;
  if (a1 != 1) {
    unint64_t v2 = 0;
  }
  if (a1 != 2) {
    unint64_t v1 = v2;
  }
  if (a1 == 4) {
    return 0xD000000000000028;
  }
  else {
    return v1;
  }
}

unint64_t sub_100486ABC()
{
  return sub_100486A4C(*v0);
}

Swift::Int sub_100486AC4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_10096D4B0();
  a3(v5);
  return sub_10096D500();
}

Swift::Int sub_100486B1C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_10096D4B0();
  a4(v6);
  return sub_10096D500();
}

unint64_t sub_100486B70()
{
  return sub_100609418(*v0);
}

uint64_t sub_100486B78()
{
  return sub_1006F010C(*v0);
}

void sub_100486B80()
{
  id v1 = (id)fpfs_adopt_log();
  unint64_t v2 = (unsigned int *)(v0 + qword_100B0B1C0);
  __swp(v2, v2);
  if ((v2 & 1) == 0)
  {
    sub_100486C7C();
    if (*(unsigned char *)(v0 + qword_100B0B1C8) != 1)
    {
      id v3 = *(id *)(v0 + 64);
      sub_100270A48(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_10049F368, v0);
    }
  }
  id v4 = (id)fpfs_adopt_log();
}

void sub_100486C7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v115 = (char *)v106 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)v106 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v112 = (char *)v106 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (char *)v106 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  unint64_t v110 = (char *)v106 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v107 = (char *)v106 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v109 = (char *)v106 - v22;
  __chkstk_darwin(v21);
  unint64_t v24 = (char *)v106 - v23;
  id v25 = [objc_allocWithZone((Class)FPLoggerScope) init];
  id v26 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  int v27 = v25;
  char v28 = sub_10096B470();
  os_log_type_t v29 = sub_10096C5D0();
  BOOL v30 = os_log_type_enabled(v28, v29);
  char v116 = v6;
  uint64_t v113 = v11;
  char v114 = v27;
  unint64_t v111 = v16;
  if (v30)
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v108 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 138412290;
    v106[1] = v31 + 4;
    uint64_t v32 = v3;
    uint64_t v33 = v1;
    uint64_t v34 = v2;
    id v35 = [v27 enter];
    id v117 = v35;
    sub_10096C8C0();
    *uint64_t v108 = v35;
    uint64_t v2 = v34;
    uint64_t v1 = v33;
    uint64_t v3 = v32;

    _os_log_impl((void *)&_mh_execute_header, v28, v29, "%@ ✋🏻  invalidating database", v31, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    char v28 = v27;
  }

  int v36 = *(void (**)(char *, uint64_t))(v3 + 8);
  v36(v24, v2);
  id v37 = *(id *)(v1 + 64);
  sub_100270A48(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_1004A7820, v1);

  unint64_t v38 = v109;
  if (qword_100ACC120 != -1) {
    swift_once();
  }
  [(id)qword_100B0B300 removeWatcher:v1];
  id v39 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v40 = sub_10096B470();
  os_log_type_t v41 = sub_10096C5D0();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "disable event aggregation", v42, 2u);
    swift_slowDealloc();
  }

  uint64_t v43 = v2;
  v36(v38, v2);
  uint64_t v109 = *(char **)(v1 + 32);
  unint64_t v44 = *(void (**)(uint64_t))(**((void **)v109 + 2) + 824);
  uint64_t v45 = swift_retain();
  v44(v45);
  swift_release();
  uint64_t v108 = *(void **)(v1 + 40);
  char v46 = (void *)v108[2];
  uint64_t v47 = v46[2];
  v46[2] = 0;
  v46[3] = 0;
  swift_retain();
  sub_1000705CC(v47);
  uint64_t v48 = v46[6];
  v46[6] = 0;
  v46[7] = 0;
  sub_1000705CC(v48);
  swift_release();
  if (*(unsigned char *)(v1 + 104) == 1)
  {
    id v49 = (id)fpfs_current_or_default_log();
    uint64_t v50 = v107;
    sub_10096B490();
    char v51 = sub_10096B470();
    os_log_type_t v52 = sub_10096C5D0();
    if (os_log_type_enabled(v51, v52))
    {
      char v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "cancel trees", v53, 2u);
      swift_slowDealloc();
    }

    v36(v50, v43);
    unint64_t v54 = *(void (**)(uint64_t))(**((void **)v109 + 2) + 832);
    uint64_t v55 = swift_retain();
    v54(v55);
    swift_release();
    uint64_t v56 = *(void (**)(uint64_t))(*(void *)v108[2] + 832);
    uint64_t v57 = swift_retain();
    v56(v57);
    swift_release();
  }
  id v58 = (id)fpfs_current_or_default_log();
  uint64_t v59 = v110;
  sub_10096B490();
  uint64_t v60 = sub_10096B470();
  os_log_type_t v61 = sub_10096C5D0();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v62 = 0;
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "stopping scheduler", v62, 2u);
    swift_slowDealloc();
  }

  v36(v59, v43);
  id v63 = v37;
  sub_100270A48(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_1004A783C, v1);

  id v64 = v63;
  sub_100270A48(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)Filename.init(rawValue:), 0);

  (*(void (**)(void))(**(void **)(v1 + 24) + 120))();
  id v65 = (id)fpfs_current_or_default_log();
  uint64_t v66 = v111;
  sub_10096B490();
  char v67 = sub_10096B470();
  os_log_type_t v68 = sub_10096C5D0();
  if (os_log_type_enabled(v67, v68))
  {
    NSString v69 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v69 = 0;
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "cancelling in-flight requests", v69, 2u);
    swift_slowDealloc();
  }

  uint64_t v70 = v43;
  v36(v66, v43);
  id v71 = v64;
  sub_100270A48(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_1004A7858, v1);

  unsigned int v73 = v115;
  uint64_t v72 = v116;
  uint64_t v74 = v113;
  if (*(unsigned char *)(v1 + 104) == 1)
  {
    id v75 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    int v76 = sub_10096B470();
    os_log_type_t v77 = sub_10096C5D0();
    if (os_log_type_enabled(v76, v77))
    {
      char v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v78 = 0;
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "closing trees", v78, 2u);
      swift_slowDealloc();
    }

    v36(v112, v70);
    int v79 = v36;
    unint64_t v80 = v109;
    unint64_t v81 = *(void (**)(uint64_t))(**((void **)v109 + 2) + 832);
    uint64_t v82 = swift_retain();
    v81(v82);
    swift_release();
    uint64_t v83 = v108;
    uint64_t v84 = *(void (**)(uint64_t))(*(void *)v108[2] + 832);
    uint64_t v85 = swift_retain();
    v84(v85);
    swift_release();
    uint64_t v86 = *((void *)v80 + 2);
    int v36 = v79;
    Swift::String v87 = *(void (**)(uint64_t))(*(void *)v86 + 840);
    uint64_t v88 = swift_retain();
    v87(v88);
    swift_release();
    Swift::String v89 = *(void (**)(uint64_t))(*(void *)v83[2] + 840);
    uint64_t v90 = swift_retain();
    v89(v90);
    swift_release();
    unsigned int v73 = v115;
    uint64_t v72 = v116;
  }
  id v91 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  int v92 = sub_10096B470();
  os_log_type_t v93 = sub_10096C5D0();
  if (os_log_type_enabled(v92, v93))
  {
    char v94 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v94 = 0;
    _os_log_impl((void *)&_mh_execute_header, v92, v93, "waiting for job completion", v94, 2u);
    swift_slowDealloc();
  }

  v36(v74, v70);
  id v95 = *(id *)(v1 + 208);
  sub_10096C600();

  id v96 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v97 = sub_10096B470();
  os_log_type_t v98 = sub_10096C5D0();
  if (os_log_type_enabled(v97, v98))
  {
    uint64_t v99 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v99 = 0;
    _os_log_impl((void *)&_mh_execute_header, v97, v98, "stopping tracker", v99, 2u);
    swift_slowDealloc();
  }

  v36(v73, v70);
  uint64_t v100 = *(void **)(*(void *)(v1 + 200) + 16);
  fp_task_tracker_cancel(v100);
  fp_task_tracker_wait((uint64_t)v100);
  id v101 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v102 = sub_10096B470();
  os_log_type_t v103 = sub_10096C5D0();
  if (os_log_type_enabled(v102, v103))
  {
    char v104 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v104 = 0;
    _os_log_impl((void *)&_mh_execute_header, v102, v103, "closing the wharf", v104, 2u);
    swift_slowDealloc();
  }

  v36(v72, v70);
  if (*(unsigned char *)(v1 + 104) == 1) {
    DocumentWharf.invalidate()();
  }
  uint64_t v105 = v114;
  sub_1006D6B50(v114);
}

void **sub_100487924(uint64_t a1)
{
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(a1 + qword_100B0B1C8) = 1;
  uint64_t v6 = qword_100AD6638;
  if (*(void *)(a1 + qword_100AD6638))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10096C720();
    swift_unknownObjectRelease();
  }
  *(void *)(a1 + v6) = 0;
  swift_unknownObjectRelease();
  *(void *)(*(void *)(a1 + 192) + 16) = 0;
  uint64_t v7 = *(void **)(a1 + qword_100B0B1B8);
  if (v7)
  {
    uint64_t v32 = sub_1005019A0;
    uint64_t v33 = 0;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    BOOL v30 = sub_1000072D0;
    uint64_t v31 = &unk_100A8B538;
    uint64_t v8 = _Block_copy(&aBlock);
    [v7 setAutoRollbackHandlerForSwift:v8];
    _Block_release(v8);
  }
  uint64_t v9 = *(void **)(a1 + qword_100B0B1B0);
  uint64_t v32 = sub_1005019AC;
  uint64_t v33 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  BOOL v30 = sub_1000072D0;
  uint64_t v31 = &unk_100A8B510;
  uint64_t v10 = _Block_copy(&aBlock);
  [v9 setAutoRollbackHandlerForSwift:v10];
  _Block_release(v10);
  if (v7)
  {
    uint64_t aBlock = 0;
    unsigned int v11 = [v7 close:&aBlock];
    uint64_t v12 = aBlock;
    if (!v11) {
      goto LABEL_10;
    }
    uint64_t v13 = aBlock;
  }
  uint64_t aBlock = 0;
  unsigned int v14 = [v9 close:&aBlock];
  uint64_t v12 = aBlock;
  if (v14) {
    return aBlock;
  }
LABEL_10:
  unint64_t v16 = v12;
  sub_10096ABF0();

  swift_willThrow();
  id v17 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_errorRetain();
  uint64_t v18 = sub_10096B470();
  os_log_type_t v19 = sub_10096C5C0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v2;
    uint64_t v22 = (void *)v21;
    id v25 = v5;
    *(_DWORD *)uint64_t v20 = 138412290;
    swift_getErrorValue();
    uint64_t v23 = (void **)Error.prettyDescription.getter(v27);
    uint64_t aBlock = v23;
    uint64_t v5 = v25;
    sub_10096C8C0();
    *uint64_t v22 = v23;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "can't close DB: %@", v20, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    uint64_t v2 = v26;
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  return (void **)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100487D94(unsigned char *a1, void *a2)
{
  sub_10002B7CC((uint64_t *)&unk_100AD64A0);
  swift_dynamicCastClassUnconditional();
  sub_100488478(a2);
  uint64_t v4 = (void *)swift_retain();
  if (objc_sync_enter(v4)) {
    goto LABEL_19;
  }
  char v5 = a1[qword_100ADA028];
  if (objc_sync_exit(a1)) {
    goto LABEL_20;
  }
  swift_release();
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_10002689C(a2, v6);
  if (v5)
  {
    sub_10059A0E8(0xD000000000000012, (void *)0x80000001009A3EC0, v6, v7);
    uint64_t v9 = a2[3];
    uint64_t v8 = a2[4];
    sub_10002689C(a2, v9);
    sub_10096CBD0(17);
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)swift_retain();
    if (!objc_sync_enter(v10))
    {
      uint64_t v11 = v8;
      id v12 = *(id *)&a1[qword_100ADA030];
      if (!objc_sync_exit(a1))
      {
        swift_release();
        id v13 = [v12 description];
        uint64_t v14 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        unint64_t v16 = v15;

        v50._int countAndFlagsBits = v14;
        v50._object = v16;
        sub_10096BDC0(v50);

        swift_bridgeObjectRelease();
        sub_10059A0E8(0x65686373202D2020, (void *)0xEF203A72656C7564, v9, v11);
        swift_bridgeObjectRelease();
        uint64_t v17 = a2[3];
        uint64_t v18 = a2[4];
        sub_10002689C(a2, v17);
        uint64_t v19 = sub_10002B7CC(&qword_100AD0FB0);
        sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1004A64B4, (uint64_t)a1, v17, v19, v18);
        goto LABEL_8;
      }
LABEL_20:
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
    }
LABEL_19:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_10059A0E8(0xD000000000000011, (void *)0x80000001009A3DC0, v6, v7);
LABEL_8:
  int v20 = a1[qword_100B0B3D0];
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[4];
  sub_10002689C(a2, v21);
  if (v20 == 1)
  {
    sub_10059A0E8(0xD000000000000013, (void *)0x80000001009A3EA0, v21, v22);
    uint64_t v23 = a2[3];
    uint64_t v24 = a2[4];
    sub_10002689C(a2, v23);
    sub_10096CBD0(17);
    swift_bridgeObjectRelease();
    if (qword_100ACC1B0 != -1) {
      swift_once();
    }
    id v25 = (id)qword_100B0B618;
    id v26 = [v25 description];
    uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v29 = v28;

    v51._int countAndFlagsBits = v27;
    v51._object = v29;
    sub_10096BDC0(v51);

    swift_bridgeObjectRelease();
    sub_10059A0E8(0x65686373202D2020, (void *)0xEF203A72656C7564, v23, v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10059A0E8(0xD000000000000012, (void *)0x80000001009A3DE0, v21, v22);
  }
  uint64_t v30 = a2[3];
  uint64_t v31 = a2[4];
  sub_10002689C(a2, v30);
  sub_10059A0E8(0xD000000000000011, (void *)0x80000001009A3E00, v30, v31);
  uint64_t v32 = a2[3];
  uint64_t v33 = a2[4];
  sub_10002689C(a2, v32);
  uint64_t v34 = sub_10002B7CC(&qword_100AD0FB0);
  sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1004A6468, (uint64_t)a1, v32, v34, v33);
  int v35 = a1[qword_100B0B3D8];
  uint64_t v36 = a2[3];
  uint64_t v37 = a2[4];
  sub_10002689C(a2, v36);
  if (v35 == 1)
  {
    sub_10059A0E8(0xD000000000000021, (void *)0x80000001009A3E70, v36, v37);
    uint64_t v38 = a2[3];
    uint64_t v49 = a2[4];
    sub_10002689C(a2, v38);
    sub_10096CBD0(17);
    swift_bridgeObjectRelease();
    if (qword_100ACC070 != -1) {
      swift_once();
    }
    id v39 = (id)qword_100B0B148;
    id v40 = [v39 description];
    uint64_t v41 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v43 = v42;

    v52._int countAndFlagsBits = v41;
    v52._object = v43;
    sub_10096BDC0(v52);

    swift_bridgeObjectRelease();
    sub_10059A0E8(0x65686373202D2020, (void *)0xEF203A72656C7564, v38, v49);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10059A0E8(0xD000000000000020, (void *)0x80000001009A3E20, v36, v37);
  }
  uint64_t v44 = a2[3];
  uint64_t v45 = a2[4];
  sub_10002689C(a2, v44);
  sub_10059A0E8(0xD000000000000013, (void *)0x80000001009A3E50, v44, v45);
  uint64_t v46 = a2[3];
  uint64_t v47 = a2[4];
  sub_10002689C(a2, v46);
  return sub_10059A1B8(8224, 0xE200000000000000, sub_1004A6484, (uint64_t)a1, v46, (uint64_t)&type metadata for () + 8, v47);
}

void sub_100488478(void *a1)
{
  uint64_t v3 = sub_10002B7CC((uint64_t *)&unk_100ACAF10);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096B180();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v58 - v11;
  uint64_t v65 = v1;
  id v13 = *(void **)(v1 + 16);
  id v71 = sub_100703CDC;
  uint64_t v72 = 0;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  NSString v69 = sub_10017090C;
  uint64_t v70 = &unk_100A8AF70;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_release();
  *(void *)&long long aBlock = 0;
  id v15 = [v13 fetchSwift:v14 error:&aBlock];
  _Block_release(v14);
  id v16 = (id)aBlock;
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (!v15)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_errorRelease();
    return;
  }
  if (([v15 next] & 1) == 0)
  {

    return;
  }
  id v17 = [v13 userVersion];
  unsigned int v18 = [v17 unsignedIntValue];

  id v19 = [v15 unsignedLongAtIndex:1];
  if ([v15 isNullAtIndex:0]) {
LABEL_32:
  }
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 150, 2, 260);
  unsigned int v60 = v18;
  uint64_t v61 = (uint64_t)v19;
  uint64_t v62 = v7;
  uint64_t v59 = v10;
  id v63 = a1;
  id v64 = v12;
  if (swift_dynamicCastMetatype()) {
    goto LABEL_33;
  }
  sub_10096AA90();
  swift_allocObject();
  sub_10096AA80();
  id v20 = [v15 dataAtIndex:0];
  uint64_t v21 = sub_10096AF60();
  unint64_t v23 = v22;

  uint64_t v24 = sub_1004A70C8(&qword_100ACAD08, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_10096AA70();
  sub_10001E9C0(v21, v23);
  v58[1] = v24;
  swift_release();
  uint64_t v26 = v63[3];
  uint64_t v25 = v63[4];
  v58[2] = sub_10002689C(v63, v26);
  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  sub_10096CBD0(33);
  v73._object = (void *)0x80000001009A3FB0;
  v73._int countAndFlagsBits = 0xD000000000000014;
  sub_10096BDC0(v73);
  v74._int countAndFlagsBits = sub_1004EE86C();
  sub_10096BDC0(v74);
  swift_bridgeObjectRelease();
  v75._int countAndFlagsBits = 46;
  v75._object = (void *)0xE100000000000000;
  sub_10096BDC0(v75);
  v67._int countAndFlagsBits = 114;
  v67._object = (void *)0xE100000000000000;
  uint64_t v66 = v61;
  v76._int countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v76);
  swift_bridgeObjectRelease();
  sub_10096BDC0(v67);
  swift_bridgeObjectRelease();
  v77._int countAndFlagsBits = 0x3D4449555520;
  v77._object = (void *)0xE600000000000000;
  sub_10096BDC0(v77);
  uint64_t v61 = sub_1004A70C8((unint64_t *)&qword_100ACAF50, (void (*)(uint64_t))&type metadata accessor for UUID);
  v78._int countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v78);
  swift_bridgeObjectRelease();
  sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v26, v25);
  swift_bridgeObjectRelease();
  uint64_t v27 = &selRef_stringWithFormat_;
  uint64_t v28 = v6;
  if ([v15 isNullAtIndex:2])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v5, 1, 1, v6);
LABEL_11:
    sub_10002B770((uint64_t)v5, (uint64_t *)&unk_100ACAF10);
    goto LABEL_12;
  }
  if ([v15 isNullAtIndex:2]) {
    goto LABEL_32;
  }
  if (swift_dynamicCastMetatype()) {
LABEL_33:
  }
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 150, 2, 261);
  swift_allocObject();
  sub_10096AA80();
  id v29 = [v15 dataAtIndex:2];
  uint64_t v30 = sub_10096AF60();
  unint64_t v32 = v31;

  sub_10096AA70();
  sub_10001E9C0(v30, v32);
  swift_release();
  uint64_t v33 = v62;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v5, 1, v6) == 1) {
    goto LABEL_11;
  }
  uint64_t v34 = v59;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v59, v5, v28);
  uint64_t v35 = v63[3];
  uint64_t v36 = v63[4];
  sub_10002689C(v63, v35);
  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  sub_10096CBD0(30);
  swift_bridgeObjectRelease();
  *(void *)&long long aBlock = 0xD000000000000010;
  *((void *)&aBlock + 1) = 0x80000001009A40B0;
  v79._int countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v79);
  swift_bridgeObjectRelease();
  v80._int countAndFlagsBits = 0x496D616572745320;
  v80._object = (void *)0xEA00000000003D44;
  sub_10096BDC0(v80);
  v67._int countAndFlagsBits = (uint64_t)[v15 unsignedLongAtIndex:3];
  v81._int countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v81);
  swift_bridgeObjectRelease();
  uint64_t v27 = &selRef_stringWithFormat_;
  sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v35, v36);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v28);
LABEL_12:
  if ((objc_msgSend(v15, v27[369], 4) & 1) == 0)
  {
    uint64_t v37 = (void *)sub_10025F230(4);
    id v39 = v38;
    uint64_t v40 = v63[3];
    uint64_t v41 = v63[4];
    sub_10002689C(v63, v40);
    strcpy((char *)&aBlock, "+ FP anchor: ");
    HIWORD(aBlock) = -4864;
    v82._int countAndFlagsBits = sub_100712028((uint64_t)v37, (uint64_t)v39);
    sub_10096BDC0(v82);
    swift_bridgeObjectRelease();
    sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v40, v41);
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = v63;
  uint64_t v43 = v63[3];
  uint64_t v44 = v63[4];
  sub_10002689C(v63, v43);
  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  sub_10096CBD0(20);
  swift_bridgeObjectRelease();
  *(void *)&long long aBlock = 0xD000000000000012;
  *((void *)&aBlock + 1) = 0x80000001009A3FF0;
  v67._int countAndFlagsBits = (uint64_t)[v15 unsignedLongAtIndex:5];
  v83._int countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v83);
  swift_bridgeObjectRelease();
  sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v43, v44);
  swift_bridgeObjectRelease();
  uint64_t v45 = v42[3];
  uint64_t v46 = v42[4];
  sub_10002689C(v42, v45);
  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  sub_10096CBD0(19);
  swift_bridgeObjectRelease();
  *(void *)&long long aBlock = 0xD000000000000011;
  *((void *)&aBlock + 1) = 0x80000001009A4010;
  v84._int countAndFlagsBits = sub_100608698((unint64_t)[v15 integerAtIndex:6]);
  sub_10096BDC0(v84);
  swift_bridgeObjectRelease();
  sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v45, v46);
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_32;
  }
  char v48 = *(unsigned char *)(Strong + 120);
  swift_release();
  uint64_t v49 = v42[3];
  uint64_t v50 = v42[4];
  sub_10002689C(v42, v49);
  if (v48)
  {
    *(void *)&long long aBlock = 0;
    *((void *)&aBlock + 1) = 0xE000000000000000;
    sub_10096CBD0(22);
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = 0xD000000000000014;
    *((void *)&aBlock + 1) = 0x80000001009A4070;
    id v51 = [v15 integerAtIndex:7];
    BOOL v52 = v51 == (id)1;
    if (v51 == (id)1) {
      v53._int countAndFlagsBits = 0xD000000000000019;
    }
    else {
      v53._int countAndFlagsBits = 0x676E696E6E7572;
    }
    if (v52) {
      unint64_t v54 = (void *)0x80000001009A4090;
    }
    else {
      unint64_t v54 = (void *)0xE700000000000000;
    }
    v53._object = v54;
    sub_10096BDC0(v53);
    swift_bridgeObjectRelease();
    sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v49, v50);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10059A0E8(0xD00000000000001ALL, (void *)0x80000001009A4030, v49, v50);
  }
  uint64_t v55 = v62;
  uint64_t v56 = v63[3];
  uint64_t v57 = v63[4];
  sub_10002689C(v63, v56);
  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  sub_10096CBD0(22);
  swift_bridgeObjectRelease();
  *(void *)&long long aBlock = 0xD000000000000014;
  *((void *)&aBlock + 1) = 0x80000001009A4050;
  v67._int countAndFlagsBits = (uint64_t)[v15 unsignedLongAtIndex:8];
  v85._int countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v85);
  swift_bridgeObjectRelease();
  sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v56, v57);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v55 + 8))(v64, v28);
}

BOOL sub_100489184(void *a1, uint64_t a2)
{
  uint64_t v2 = *(_OWORD **)(a2 + qword_100B0B3B8);
  if (v2)
  {
    swift_beginAccess();
    long long v4 = v2[6];
    v6[0] = BYTE8(v4);
    *(_OWORD *)&v6[1] = *(_OWORD *)((char *)v2 + 105);
    long long v7 = v2[5];
    unsigned long long v8 = __PAIR128__(*(unint64_t *)v6, v4);
    uint64_t v9 = *(void *)&v6[8];
    swift_retain();
    sub_100130300((uint64_t)&v7);
    sub_100130300((uint64_t)&v7 + 8);
    sub_100130300((uint64_t)&v8);
    sub_100130300((uint64_t)&v8 + 8);
    sub_100130300((uint64_t)&v9);
    sub_100459078(a1);
    sub_100130294((uint64_t)&v7);
    sub_100130294((uint64_t)&v7 + 8);
    sub_100130294((uint64_t)&v8);
    sub_100130294((uint64_t)&v8 + 8);
    sub_100130294((uint64_t)&v9);
    swift_release();
  }
  return v2 == 0;
}

uint64_t sub_100489280(void *a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v30 = a1;
  char v7 = a2 & 1;
  char v31 = a2;
  sub_10048DC38(v4, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, 0, (uint64_t)sub_1004A5D58, (uint64_t)v29, v9);
  uint64_t v10 = *(void (**)(void *))(**(void **)(*(void *)(v4 + 32) + 16) + 864);
  swift_retain();
  v10(a1);
  uint64_t v11 = swift_release();
  if (a3)
  {
    uint64_t v12 = a1[3];
    uint64_t v13 = a1[4];
    sub_10002689C(a1, v12);
    sub_10059A0E8(0x662065657274202BLL, (void *)0xEA00000000003A73, v12, v13);
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_10002689C(a1, v14);
    uint64_t v11 = sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1004A5E3C, v4, v14, (uint64_t)&type metadata for () + 8, v15);
  }
  id v16 = *(void **)(v4 + qword_100B0B360);
  __chkstk_darwin(v11);
  uint64_t v27 = v4;
  uint64_t v28 = a1;
  uint64_t v17 = sub_10026BFF4(v16, (void (*)(void))sub_1004A5D78);
  __chkstk_darwin(v17);
  v26[2] = a1;
  v26[3] = v4;
  LOBYTE(v27) = v7;
  sub_10048DC38(v4, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, 0, (uint64_t)sub_1004A5DBC, (uint64_t)v26, v19);
  if (a3)
  {
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    sub_10002689C(a1, v21);
    sub_10059A0E8(0x662065657274202BLL, (void *)0xEA00000000003A70, v21, v22);
    uint64_t v23 = a1[3];
    uint64_t v24 = a1[4];
    sub_10002689C(a1, v23);
    uint64_t v20 = sub_10059A1B8(8224, 0xE200000000000000, sub_1004A5E20, v4, v23, (uint64_t)&type metadata for () + 8, v24);
  }
  __chkstk_darwin(v20);
  uint64_t v27 = v4;
  uint64_t v28 = a1;
  return sub_10026BFF4(v16, (void (*)(void))sub_1004A5DDC);
}

uint64_t sub_1004895A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC(&qword_100AD6540);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096C270();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  char v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_10002B770((uint64_t)v4, &qword_100AD6540);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_10096C260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_10096C230();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_100AD6550;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    void v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1004897E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_10002B7CC(&qword_100AD6560);
  sub_100025500(&qword_100AD6568, &qword_100AD6560);
  uint64_t v6 = sub_10096C230();
  return _swift_task_switch(sub_1004898A0, v6, v5);
}

uint64_t sub_1004898A0()
{
  *(void *)(v0 + 24) = *(void *)(*(void *)(v0 + 16) + 64);
  swift_retain();
  return _swift_task_switch(sub_100489914, 0, 0);
}

uint64_t sub_100489914()
{
  if (*(void *)(v0 + 24))
  {
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    sub_10096C280();
    swift_release();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004899A8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_10002689C(a2, v6);
  sub_10059A0E8(0xD000000000000021, (void *)0x80000001009A3F10, v6, v7);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  sub_10002689C(a2, v9);
  void v16[2] = v8;
  swift_bridgeObjectRetain();
  sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1004A6504, (uint64_t)v16, v9, (uint64_t)&type metadata for () + 8, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  sub_10002689C(a2, v11);
  sub_10059A0E8(0xD00000000000001DLL, (void *)0x80000001009A3F40, v11, v12);
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  sub_10002689C(a2, v13);
  return sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1004A6520, a3, v13, (uint64_t)&type metadata for () + 8, v14);
}

uint64_t sub_100489B30(void *a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16))
  {
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    sub_10002689C(a1, v21);
    return sub_10059A0E8(0xD000000000000013, (void *)0x80000001009A3F90, v21, v22);
  }
  uint64_t v23 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v24 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v24) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v23 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v24) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v23 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v24) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v23 + 8 * v8);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_24:
    uint64_t v16 = *(void *)(a2 + 48) + 16 * v12;
    uint64_t v17 = *(void *)v16;
    int v18 = *(unsigned __int8 *)(v16 + 8);
    uint64_t v20 = a1[3];
    uint64_t v19 = a1[4];
    sub_10002689C(a1, v20);
    if (!v18)
    {
      uint64_t v25 = 0x284449636F64;
      unint64_t v26 = 0xE600000000000000;
LABEL_6:
      v27._int countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v27);
      swift_bridgeObjectRelease();
      v28._int countAndFlagsBits = 41;
      v28._object = (void *)0xE100000000000000;
      sub_10096BDC0(v28);
      v9._int countAndFlagsBits = v25;
      uint64_t v10 = (void *)v26;
      goto LABEL_7;
    }
    if (v18 == 1)
    {
      uint64_t v25 = 0x284449656C6966;
      unint64_t v26 = 0xE700000000000000;
      goto LABEL_6;
    }
    if (v17) {
      v9._int countAndFlagsBits = 0x6873617274;
    }
    else {
      v9._int countAndFlagsBits = 1953460082;
    }
    if (v17) {
      uint64_t v10 = (void *)0xE500000000000000;
    }
    else {
      uint64_t v10 = (void *)0xE400000000000000;
    }
LABEL_7:
    v9._object = v10;
    sub_10096BDC0(v9);
    swift_bridgeObjectRelease();
    sub_10059A0E8(0, (void *)0xE000000000000000, v20, v19);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v24) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v23 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v24) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v23 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100489E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + 32;
  swift_beginAccess();
  sub_10001AE98(v1 + 32, (uint64_t)v11, (uint64_t *)&unk_100AD64C0);
  sub_10001AE98((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_100AD64C0);
  if (sub_1004A6BF4((uint64_t)v12) == 1)
  {
    uint64_t v4 = *(void (**)(uint64_t))(v1 + 16);
    uint64_t v5 = swift_retain();
    v4(v5);
    swift_release();
    sub_10001AE98(a1, (uint64_t)v8, &qword_100ACD980);
    sub_10001AE98((uint64_t)v8, (uint64_t)v9, &qword_100ACD980);
    v6._int countAndFlagsBits = (uint64_t)v9;
    Filename.init(rawValue:)(v6);
    sub_10001AE98(v3, (uint64_t)v10, (uint64_t *)&unk_100AD64C0);
    sub_10001AE98((uint64_t)v9, v3, (uint64_t *)&unk_100AD64C0);
    sub_1004A6C18((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C3A0);
    sub_1004A6C18((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1004A68FC);
  }
  else
  {
    sub_10001AE98((uint64_t)v11, (uint64_t)v10, (uint64_t *)&unk_100AD64C0);
    sub_10001AE98((uint64_t)v10, a1, &qword_100ACD980);
  }
  return sub_1004A6C18((uint64_t)v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1004A6CDC);
}

uint64_t sub_100489FA8(uint64_t a1, void *a2, void *a3)
{
  if (a3)
  {
    if (a2)
    {
      id v4 = a2;
      swift_retain();
      sub_10096CBD0(26);
      swift_bridgeObjectRelease();
      strcpy((char *)v14, "item changed ");
      HIWORD(v14[1]) = -4864;
      id v5 = [v4 description];
      uint64_t v6 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      int64_t v8 = v7;

      v15._int countAndFlagsBits = v6;
      v15._object = v8;
      sub_10096BDC0(v15);
      swift_bridgeObjectRelease();
      v16._int countAndFlagsBits = 0x3A73656C7572202CLL;
      v16._object = (void *)0xE900000000000020;
      sub_10096BDC0(v16);
      Swift::String v9 = (void *)swift_retain();
      if (objc_sync_enter(v9)) {
        sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a3);
      }
      uint64_t v10 = sub_100457FB0((uint64_t)a3, &qword_100ACE948, (unint64_t *)&unk_100AD6430);
      unint64_t v12 = v11;
      if (objc_sync_exit(a3)) {
        sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a3);
      }
      swift_release();
      v17._int countAndFlagsBits = v10;
      v17._object = v12;
      sub_10096BDC0(v17);

      swift_release();
    }
    else
    {
      strcpy((char *)v14, "item changed ");
      HIWORD(v14[1]) = -4864;
      swift_retain();
      v19._int countAndFlagsBits = NSFileProviderItemIdentifier.description.getter();
      sub_10096BDC0(v19);
      swift_release();
    }
  }
  else
  {
    sub_10096CBD0(28);
    swift_bridgeObjectRelease();
    v14[0] = 0xD00000000000001ALL;
    v14[1] = 0x80000001009A1980;
    v18._int countAndFlagsBits = NSFileProviderItemIdentifier.description.getter();
    sub_10096BDC0(v18);
  }
  swift_bridgeObjectRelease();
  return v14[0];
}

uint64_t sub_10048A1D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v2 - 8);
  id v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for VFSItem(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10002B7CC(&qword_100ACCA30);
  uint64_t v10 = *(void **)(v1 + *(int *)(v9 + 40));
  if (!v10)
  {
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    sub_10096CBD0(28);
    swift_bridgeObjectRelease();
    v18[0] = 0xD00000000000001ALL;
    v18[1] = 0x80000001009A1980;
    v20._int countAndFlagsBits = VFSItemID.parseableString.getter(*(void *)v1, *(unsigned char *)(v1 + 8));
    sub_10096BDC0(v20);
    goto LABEL_5;
  }
  sub_10002B70C(v1 + *(int *)(v9 + 36), (uint64_t)v4, &qword_100ACB910);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_retain();
    sub_10002B770((uint64_t)v4, &qword_100ACB910);
    strcpy((char *)v18, "item changed ");
    HIWORD(v18[1]) = -4864;
    v19._int countAndFlagsBits = VFSItemID.parseableString.getter(*(void *)v1, *(unsigned char *)(v1 + 8));
    sub_10096BDC0(v19);
    swift_release();
LABEL_5:
    swift_bridgeObjectRelease();
    return v18[0];
  }
  sub_100011454((uint64_t)v4, (uint64_t)v8, type metadata accessor for VFSItem);
  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  swift_retain();
  sub_10096CBD0(26);
  swift_bridgeObjectRelease();
  strcpy((char *)v18, "item changed ");
  HIWORD(v18[1]) = -4864;
  v21._int countAndFlagsBits = sub_100262BFC();
  sub_10096BDC0(v21);
  swift_bridgeObjectRelease();
  v22._int countAndFlagsBits = 0x3A73656C7572202CLL;
  v22._object = (void *)0xE900000000000020;
  sub_10096BDC0(v22);
  unint64_t v12 = (void *)swift_retain();
  if (objc_sync_enter(v12)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v10);
  }
  uint64_t v13 = sub_100457FB0((uint64_t)v10, &qword_100ACC9E0, (unint64_t *)&unk_100AD6450);
  Swift::String v15 = v14;
  if (objc_sync_exit(v10)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v10);
  }
  swift_release();
  v23._int countAndFlagsBits = v13;
  v23._object = v15;
  sub_10096BDC0(v23);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = v18[0];
  sub_1004A6FF0((uint64_t)v8, type metadata accessor for VFSItem);
  return v11;
}

uint64_t sub_10048A554(void *a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), void (*a4)(void *), void (*a5)(void *))
{
  uint64_t v41 = a4;
  uint64_t v9 = v5;
  sub_10001AE98((uint64_t)(v5 + 16), (uint64_t)v44, a2);
  uint64_t result = sub_10001AE98((uint64_t)v44, (uint64_t)v45, a2);
  char v12 = v45[0];
  if (v45[0] != 2)
  {
    uint64_t v13 = a5;
    uint64_t v14 = v46;
    uint64_t v15 = v47;
    uint64_t v16 = a1[3];
    uint64_t v40 = a1[4];
    sub_10002689C(a1, v16);
    sub_10096CBD0(24);
    swift_bridgeObjectRelease();
    uint64_t v42 = 0x3A7465736572202BLL;
    uint64_t v43 = (void *)0xE900000000000020;
    uint64_t v17 = v14;
    a5 = v13;
    v48._int countAndFlagsBits = a3(v17, v15);
    sub_10096BDC0(v48);
    swift_bridgeObjectRelease();
    v49._int countAndFlagsBits = 0x6579616C6564202CLL;
    v49._object = (void *)0xEB00000000203A64;
    sub_10096BDC0(v49);
    if (v12) {
      v18._int countAndFlagsBits = 1702195828;
    }
    else {
      v18._int countAndFlagsBits = 0x65736C6166;
    }
    if (v12) {
      Swift::String v19 = (void *)0xE400000000000000;
    }
    else {
      Swift::String v19 = (void *)0xE500000000000000;
    }
    v18._object = v19;
    sub_10096BDC0(v18);
    swift_bridgeObjectRelease();
    sub_10059A0E8(v42, v43, v16, v40);
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (v5[48])
  {
    uint64_t v20 = 0x6B636F6C626E7520;
    Swift::String v21 = (void *)0xE800000000000000;
  }
  else
  {
    if ((v5[49] & 1) == 0) {
      goto LABEL_20;
    }
    uint64_t v20 = 0;
    Swift::String v21 = (void *)0xE000000000000000;
  }
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_10002689C(a1, v22);
  uint64_t v42 = 0x3A656C6469202BLL;
  uint64_t v43 = (void *)0xE700000000000000;
  v50._int countAndFlagsBits = v20;
  v50._object = v21;
  sub_10096BDC0(v50);
  swift_bridgeObjectRelease();
  if (v5[49]) {
    v24._int countAndFlagsBits = 0x6E616373657220;
  }
  else {
    v24._int countAndFlagsBits = 0;
  }
  if (v5[49]) {
    uint64_t v25 = (void *)0xE700000000000000;
  }
  else {
    uint64_t v25 = (void *)0xE000000000000000;
  }
  v24._object = v25;
  sub_10096BDC0(v24);
  swift_bridgeObjectRelease();
  sub_10059A0E8(v42, v43, v22, v23);
  uint64_t result = swift_bridgeObjectRelease();
LABEL_20:
  if (v5[50])
  {
    uint64_t v26 = a1[3];
    uint64_t v27 = a1[4];
    sub_10002689C(a1, v26);
    uint64_t result = sub_10059A0E8(0x6C616E676973202BLL, (void *)0xEA00000000006465, v26, v27);
  }
  if (*(void *)(*v9 + 16))
  {
    uint64_t v28 = a1[3];
    uint64_t v29 = a1[4];
    sub_10002689C(a1, v28);
    sub_10059A0E8(0x65676E616863202BLL, (void *)0xEA00000000003A73, v28, v29);
    uint64_t v30 = a1[3];
    uint64_t v31 = a1[4];
    unint64_t v32 = sub_10002689C(a1, v30);
    __chkstk_darwin(v32);
    id v39 = v9;
    uint64_t result = sub_10059A1B8(8224, 0xE200000000000000, v41, (uint64_t)v38, v30, (uint64_t)&type metadata for () + 8, v31);
  }
  if (*(void *)(v9[1] + 16))
  {
    uint64_t v33 = a1[3];
    uint64_t v34 = a1[4];
    sub_10002689C(a1, v33);
    sub_10059A0E8(0x697469736F70202BLL, (void *)0xEC0000003A736E6FLL, v33, v34);
    uint64_t v35 = a1[3];
    uint64_t v36 = a1[4];
    uint64_t v37 = sub_10002689C(a1, v35);
    __chkstk_darwin(v37);
    id v39 = v9;
    return sub_10059A1B8(8224, 0xE200000000000000, a5, (uint64_t)v38, v35, (uint64_t)&type metadata for () + 8, v36);
  }
  return result;
}

uint64_t sub_10048A948(void *a1, uint64_t *a2)
{
  uint64_t v2 = 1 << *(unsigned char *)(*a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(*a2 + 64);
  int64_t v24 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v26 = *a2;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v27)
  {
    if (v4)
    {
      unint64_t v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      int64_t v27 = i;
      unint64_t v8 = v7 | (i << 6);
      goto LABEL_5;
    }
    int64_t v19 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    int64_t v21 = i + 1;
    if (!v20)
    {
      int64_t v21 = i + 2;
      if (i + 2 >= v24) {
        return swift_release();
      }
      unint64_t v20 = *(void *)(v23 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = i + 3;
        if (i + 3 >= v24) {
          return swift_release();
        }
        unint64_t v20 = *(void *)(v23 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = i + 4;
          if (i + 4 >= v24) {
            return swift_release();
          }
          unint64_t v20 = *(void *)(v23 + 8 * v21);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v4 = (v20 - 1) & v20;
    int64_t v27 = v21;
    unint64_t v8 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_5:
    uint64_t v9 = *(void *)(v26 + 56) + 24 * v8;
    uint64_t v10 = *(void **)v9;
    uint64_t v11 = *(void **)(v9 + 8);
    char v12 = *(void **)(v9 + 16);
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_10002689C(a1, v13);
    swift_retain();
    id v15 = v10;
    id v16 = v11;
    uint64_t v17 = sub_100489FA8((uint64_t)v15, v11, v12);
    sub_10059A0E8(v17, v18, v13, v14);
    swift_release();

    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v22 = i + 5;
  if (i + 5 >= v24) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v23 + 8 * v22);
  if (v20)
  {
    int64_t v21 = i + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v24) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v23 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10048AB68(void *a1, uint64_t *a2)
{
  uint64_t v26 = a1;
  uint64_t v3 = sub_10002B7CC(&qword_100ACCA30);
  uint64_t v25 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a2;
  uint64_t v7 = *(void *)(*a2 + 64);
  uint64_t v23 = *a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v24 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v27 = v6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v24) {
        return swift_release();
      }
      unint64_t v20 = *(void *)(v23 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v24) {
          return swift_release();
        }
        unint64_t v20 = *(void *)(v23 + 8 * v12);
        if (!v20)
        {
          int64_t v12 = v19 + 3;
          if (v19 + 3 >= v24) {
            return swift_release();
          }
          unint64_t v20 = *(void *)(v23 + 8 * v12);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v14 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_5:
    sub_10002B70C(*(void *)(v27 + 56) + *(void *)(v25 + 72) * v14, (uint64_t)v5, &qword_100ACCA30);
    uint64_t v15 = v26[3];
    uint64_t v16 = v26[4];
    sub_10002689C(v26, v15);
    uint64_t v17 = sub_10048A1D8();
    sub_10059A0E8(v17, v18, v15, v16);
    swift_bridgeObjectRelease();
    uint64_t result = sub_10002B770((uint64_t)v5, &qword_100ACCA30);
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v24) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v24) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v23 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10048ADE8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SyncState();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v24 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v25 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v27 = v7;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v13;
    if (!v21)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v25) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v24 + 8 * v13);
      if (!v21)
      {
        int64_t v13 = v20 + 2;
        if (v20 + 2 >= v25) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v24 + 8 * v13);
        if (!v21)
        {
          int64_t v13 = v20 + 3;
          if (v20 + 3 >= v25) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v24 + 8 * v13);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_5:
    sub_1004A6134(*(void *)(v27 + 56) + *(void *)(v26 + 72) * v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SyncState);
    uint64_t v16 = a1[3];
    uint64_t v17 = a1[4];
    sub_10002689C(a1, v16);
    uint64_t v18 = sub_100598FFC();
    sub_10059A0E8(v18, v19, v16, v17);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1004A6FF0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SyncState);
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v25) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v13 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v13);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10048B07C(uint64_t a1)
{
  *(unsigned char *)(a1 + 184) = 1;
  uint64_t v2 = qword_100B0B3B8;
  uint64_t v3 = *(void *)(a1 + qword_100B0B3B8);
  if (v3)
  {
    if (*(void *)(v3 + 168))
    {
      swift_getObjectType();
      swift_retain();
      swift_unknownObjectRetain();
      sub_10096C750();
      swift_unknownObjectRelease();
      if (*(void *)(v3 + 168))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C720();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_retain();
    }
    *(void *)(v3 + 168) = 0;
    swift_release();
    swift_unknownObjectRelease();
  }
  *(void *)(a1 + v2) = 0;
  swift_release();
  uint64_t v4 = qword_100B0B3C0;
  if (*(void *)(a1 + qword_100B0B3C0))
  {
    swift_retain();
    sub_1004895A0();
    swift_release();
  }
  *(void *)(a1 + v4) = 0;
  return swift_release();
}

void sub_10048B1A4(uint64_t a1)
{
  uint64_t v288 = sub_10096B480();
  uint64_t v289 = *(void *)(v288 - 8);
  uint64_t v2 = __chkstk_darwin(v288);
  uint64_t v287 = (char *)&v283 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v284 = (char *)&v283 - v4;
  uint64_t v330 = sub_10002B7CC((uint64_t *)&unk_100AD6F70);
  uint64_t v300 = *(void *)(v330 - 8);
  uint64_t v5 = __chkstk_darwin(v330);
  __int16 v305 = (unsigned int (***)(uint64_t *, uint64_t, unint64_t))((char *)&v283
                                                                             - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v5);
  char v304 = (unsigned int (***)(uint64_t *, uint64_t, unint64_t))((char *)&v283 - v8);
  __chkstk_darwin(v7);
  uint64_t v299 = (uint64_t *)((char *)&v283 - v9);
  uint64_t v10 = sub_10002B7CC((uint64_t *)&unk_100AD6460);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  int64_t v13 = (unsigned int (***)(uint64_t *, uint64_t, unint64_t))((char *)&v283
                                                                            - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __chkstk_darwin(v11);
  char v312 = (unsigned int (***)(uint64_t *, uint64_t, unint64_t))((char *)&v283 - v15);
  __chkstk_darwin(v14);
  uint64_t v308 = (uint64_t *)((char *)&v283 - v16);
  int64_t v331 = sub_10002B7CC((uint64_t *)&unk_100AD6F90);
  uint64_t v303 = *(void *)(v331 - 8);
  uint64_t v17 = __chkstk_darwin(v331);
  int v310 = (unsigned int (***)(uint64_t *, uint64_t, unint64_t))((char *)&v283
                                                                             - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v309 = (unsigned int (***)(uint64_t *, uint64_t, unint64_t))((char *)&v283 - v20);
  __chkstk_darwin(v19);
  uint64_t v302 = (uint64_t *)((char *)&v283 - v21);
  uint64_t v22 = sub_10002B7CC((uint64_t *)&unk_100AD6470);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  int64_t v25 = (unsigned int (***)(uint64_t *, uint64_t, unint64_t))((char *)&v283
                                                                            - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = __chkstk_darwin(v23);
  unint64_t v319 = (unsigned int (***)(uint64_t *, uint64_t, unint64_t))((char *)&v283 - v27);
  __chkstk_darwin(v26);
  char v311 = (uint64_t *)((char *)&v283 - v28);
  v329.n128_u64[0] = sub_10002B7CC((uint64_t *)&unk_100ACC9B0);
  uint64_t v29 = *(void *)(v329.n128_u64[0] - 8);
  uint64_t v30 = __chkstk_darwin(v329.n128_u64[0] - 8);
  char v316 = (unint64_t *)((char *)&v283 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = __chkstk_darwin(v30);
  long long v315 = (unint64_t *)((char *)&v283 - v33);
  __chkstk_darwin(v32);
  unsigned int v307 = (uint64_t *)((char *)&v283 - v34);
  uint64_t v35 = sub_10002B7CC((uint64_t *)&unk_100AD6480);
  uint64_t v36 = __chkstk_darwin(v35 - 8);
  uint64_t v38 = (uint64_t *)((char *)&v283 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = __chkstk_darwin(v36);
  int v322 = (unsigned int (***)(uint64_t *, uint64_t, unint64_t))((char *)&v283 - v40);
  __chkstk_darwin(v39);
  int v317 = (unint64_t *)((char *)&v283 - v41);
  uint64_t v295 = sub_10002B7CC(&qword_100ACCA78);
  uint64_t v294 = *(void *)(v295 - 8);
  __chkstk_darwin(v295);
  uint64_t v293 = (uint64_t)&v283 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v286 = a1;
  uint64_t v43 = (unint64_t *)(a1 + qword_100B0B318);
  swift_beginAccess();
  uint64_t v285 = v43;
  unint64_t v44 = *v43;
  uint64_t v45 = *(void *)(*v43 + 64);
  uint64_t v290 = *v43 + 64;
  uint64_t v46 = 1 << *(unsigned char *)(v44 + 32);
  if (v46 < 64) {
    uint64_t v47 = ~(-1 << v46);
  }
  else {
    uint64_t v47 = -1;
  }
  unint64_t v48 = v47 & v45;
  int64_t v291 = (unint64_t)(v46 + 63) >> 6;
  __int16 v328 = (unint64_t *)(v29 + 56);
  uint64_t v313 = v29;
  char v327 = (unsigned int (**)(uint64_t *, uint64_t, unint64_t))(v29 + 48);
  unint64_t v296 = v44;
  swift_bridgeObjectRetain();
  int64_t v49 = 0;
  uint64_t v318 = v13;
  char v321 = v25;
  __int16 v326 = v38;
  if (!v48) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v297 = (v48 - 1) & v48;
  int64_t v298 = v49;
  for (unint64_t i = __clz(__rbit64(v48)) | (v49 << 6); ; unint64_t i = __clz(__rbit64(v52)) + (v53 << 6))
  {
    uint64_t v55 = v293;
    sub_10002B70C(*(void *)(v296 + 56) + *(void *)(v294 + 72) * i, v293, &qword_100ACCA78);
    uint64_t v56 = *(void *)(v55 + *(int *)(v295 + 56));
    swift_bridgeObjectRetain();
    sub_10002B770(v55, &qword_100ACCA78);
    int64_t v320 = 0;
    uint64_t v57 = *(void *)(v56 + 64);
    uint64_t v301 = v56 + 64;
    uint64_t v314 = v56;
    uint64_t v58 = 1 << *(unsigned char *)(v56 + 32);
    if (v58 < 64) {
      uint64_t v59 = ~(-1 << v58);
    }
    else {
      uint64_t v59 = -1;
    }
    unint64_t v60 = v59 & v57;
    int64_t v306 = (unint64_t)(v58 + 63) >> 6;
    int64_t v292 = v306 - 1;
    if (!v60)
    {
LABEL_30:
      int64_t v80 = v320 + 1;
      unint64_t v77 = v329.n128_u64[0];
      if (!__OFADD__(v320, 1))
      {
        if (v80 < v306)
        {
          unint64_t v81 = *(void *)(v301 + 8 * v80);
          if (v81)
          {
LABEL_33:
            uint64_t v325 = (v81 - 1) & v81;
            unint64_t v76 = __clz(__rbit64(v81)) + (v80 << 6);
            int64_t v320 = v80;
            goto LABEL_29;
          }
          int64_t v82 = v320 + 2;
          ++v320;
          if (v80 + 1 < v306)
          {
            unint64_t v81 = *(void *)(v301 + 8 * v82);
            if (v81)
            {
LABEL_36:
              int64_t v80 = v82;
              goto LABEL_33;
            }
            int64_t v320 = v80 + 1;
            if (v80 + 2 < v306)
            {
              unint64_t v81 = *(void *)(v301 + 8 * (v80 + 2));
              if (v81)
              {
                v80 += 2;
                goto LABEL_33;
              }
              int64_t v320 = v80 + 2;
              if (v80 + 3 < v306)
              {
                unint64_t v81 = *(void *)(v301 + 8 * (v80 + 3));
                if (v81)
                {
                  v80 += 3;
                  goto LABEL_33;
                }
                int64_t v82 = v80 + 4;
                int64_t v320 = v80 + 3;
                if (v80 + 4 < v306)
                {
                  unint64_t v81 = *(void *)(v301 + 8 * v82);
                  if (v81) {
                    goto LABEL_36;
                  }
                  while (1)
                  {
                    int64_t v80 = v82 + 1;
                    if (__OFADD__(v82, 1)) {
                      goto LABEL_198;
                    }
                    if (v80 >= v306) {
                      break;
                    }
                    unint64_t v81 = *(void *)(v301 + 8 * v80);
                    ++v82;
                    if (v81) {
                      goto LABEL_33;
                    }
                  }
                  int64_t v320 = v292;
                }
              }
            }
          }
        }
        Swift::String v79 = (void (*)(uint64_t *, void, uint64_t, unint64_t))*v328;
        ((void (*)(uint64_t *, uint64_t, uint64_t, unint64_t))*v328)(v38, 1, 1, v329.n128_u64[0]);
        uint64_t v325 = 0;
        goto LABEL_51;
      }
      __break(1u);
      goto LABEL_180;
    }
    while (1)
    {
      uint64_t v325 = (v60 - 1) & v60;
      unint64_t v76 = __clz(__rbit64(v60)) | (v320 << 6);
      unint64_t v77 = v329.n128_u64[0];
LABEL_29:
      uint64_t v78 = v313;
      sub_10002B70C(*(void *)(v314 + 56) + *(void *)(v313 + 72) * v76, (uint64_t)v38, (uint64_t *)&unk_100ACC9B0);
      Swift::String v79 = *(void (**)(uint64_t *, void, uint64_t, unint64_t))(v78 + 56);
      v79(v38, 0, 1, v77);
LABEL_51:
      Swift::String v83 = *v327;
      uint64_t v84 = 1;
      if ((*v327)(v38, 1, v77) != 1)
      {
        uint64_t v85 = *(int *)(v77 + 64);
        uint64_t v86 = (char *)v38 + v85;
        unint64_t v324 = *(int *)(v77 + 80);
        uint64_t v87 = *v38;
        uint64_t v88 = v38[1];
        Swift::String v89 = v307;
        *unsigned int v307 = v87;
        v89[1] = v88;
        uint64_t v90 = (char *)v89 + v85;
        uint64_t v91 = sub_10096B7D0();
        int v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32);
        v92(v90, v86, v91);
        uint64_t v93 = swift_allocObject();
        *(_OWORD *)(v93 + 16) = *(_OWORD *)((char *)v326 + v324);
        uint64_t v94 = *v89;
        uint64_t v95 = v89[1];
        id v96 = v322;
        uint64_t v97 = (char *)v322 + *(int *)(v329.n128_u64[0] + 64);
        os_log_type_t v98 = (void *)((char *)v322 + *(int *)(v329.n128_u64[0] + 80));
        *int v322 = v94;
        v96[1] = v95;
        uint64_t v99 = v91;
        unint64_t v77 = v329.n128_u64[0];
        v92(v97, v90, v99);
        uint64_t v84 = 0;
        *os_log_type_t v98 = sub_1004A7B64;
        v98[1] = v93;
        uint64_t v38 = (uint64_t *)v326;
      }
      uint64_t v100 = (uint64_t)v322;
      v79(v322, v84, 1, v77);
      id v101 = v317;
      sub_10001AE98(v100, (uint64_t)v317, (uint64_t *)&unk_100AD6480);
      if (v83((uint64_t *)v101, 1, v77) == 1) {
        break;
      }
      uint64_t v61 = *(int *)(v77 + 64);
      uint64_t v62 = (uint64_t)v315;
      id v63 = (char *)v315 + v61;
      unint64_t v64 = v101[1];
      unint64_t v324 = *v101;
      unint64_t v323 = (unint64_t)v101 + v61;
      uint64_t v65 = *(int *)(v77 + 80);
      Swift::String v67 = *(void (**)(void))((char *)v101 + v65);
      uint64_t v66 = *(void (**)(void))((char *)v101 + v65 + 8);
      os_log_type_t v68 = (void (**)(void))((char *)v315 + v65);
      *long long v315 = v324;
      *(void *)(v62 + 8) = v64;
      uint64_t v69 = sub_10096B7D0();
      uint64_t v70 = *(void *)(v69 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v70 + 32))(v63, v323, v69);
      char *v68 = v67;
      v68[1] = v66;
      id v71 = v316;
      uint64_t v72 = (char *)v316 + *(int *)(v77 + 64);
      Swift::String v73 = (void (**)(void))((char *)v316 + *(int *)(v77 + 80));
      *char v316 = v324;
      v71[1] = v64;
      uint64_t v38 = (uint64_t *)v326;
      Swift::String v74 = v72;
      (*(void (**)(void))(v70 + 16))();
      *Swift::String v73 = v67;
      v73[1] = v66;
      swift_retain();
      id v75 = (id)FPDomainUnavailableError();
      v67();
      swift_release();

      sub_10002B770(v62, (uint64_t *)&unk_100ACC9B0);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v69);
      unint64_t v60 = v325;
      if (!v325) {
        goto LABEL_30;
      }
    }
    swift_release();
    int64_t v13 = v318;
    int64_t v25 = v321;
    int64_t v49 = v298;
    unint64_t v48 = v297;
    if (v297) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v51 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
      goto LABEL_202;
    }
    if (v51 >= v291) {
      goto LABEL_56;
    }
    unint64_t v52 = *(void *)(v290 + 8 * v51);
    int64_t v53 = v49 + 1;
    if (!v52)
    {
      int64_t v53 = v49 + 2;
      if (v49 + 2 >= v291) {
        goto LABEL_56;
      }
      unint64_t v52 = *(void *)(v290 + 8 * v53);
      if (!v52)
      {
        int64_t v53 = v49 + 3;
        if (v49 + 3 >= v291) {
          goto LABEL_56;
        }
        unint64_t v52 = *(void *)(v290 + 8 * v53);
        if (!v52)
        {
          int64_t v53 = v49 + 4;
          if (v49 + 4 >= v291) {
            goto LABEL_56;
          }
          unint64_t v52 = *(void *)(v290 + 8 * v53);
          if (!v52) {
            break;
          }
        }
      }
    }
LABEL_21:
    uint64_t v297 = (v52 - 1) & v52;
    int64_t v298 = v53;
  }
  uint64_t v54 = v49 + 5;
  if (v49 + 5 < v291)
  {
    unint64_t v52 = *(void *)(v290 + 8 * v54);
    if (!v52)
    {
      while (1)
      {
        int64_t v53 = v54 + 1;
        if (__OFADD__(v54, 1)) {
          goto LABEL_199;
        }
        if (v53 >= v291) {
          goto LABEL_56;
        }
        unint64_t v52 = *(void *)(v290 + 8 * v53);
        ++v54;
        if (v52) {
          goto LABEL_21;
        }
      }
    }
    int64_t v53 = v49 + 5;
    goto LABEL_21;
  }
LABEL_56:
  swift_release();
  unint64_t v102 = sub_100099838((uint64_t)_swiftEmptyArrayStorage);
  *uint64_t v285 = v102;
  swift_bridgeObjectRelease();
  os_log_type_t v103 = (unint64_t *)(v286 + qword_100B0B320);
  swift_beginAccess();
  long long v315 = v103;
  int64_t v104 = *v103;
  uint64_t v105 = *(void *)(*v103 + 64);
  char v316 = (unint64_t *)(*v103 + 64);
  uint64_t v106 = 1 << *(unsigned char *)(v104 + 32);
  uint64_t v107 = -1;
  if (v106 < 64) {
    uint64_t v107 = ~(-1 << v106);
  }
  unint64_t v323 = v107 & v105;
  int v317 = (unint64_t *)((unint64_t)(v106 + 63) >> 6);
  v329.n128_u64[0] = v303 + 56;
  __int16 v328 = (unint64_t *)(v303 + 48);
  int64_t v320 = v104;
  swift_bridgeObjectRetain();
  uint64_t v108 = 0;
  int64_t v109 = v331;
LABEL_59:
  if (v323)
  {
    unint64_t v110 = __clz(__rbit64(v323));
    v323 &= v323 - 1;
    int v322 = v108;
    unint64_t v111 = v110 | ((void)v108 << 6);
    goto LABEL_77;
  }
  uint64_t v112 = (uint64_t)v108 + 1;
  if (__OFADD__(v108, 1)) {
    goto LABEL_194;
  }
  if (v112 >= (uint64_t)v317) {
    goto LABEL_87;
  }
  unint64_t v113 = v316[v112];
  uint64_t v114 = (uint64_t)v108 + 1;
  if (v113) {
    goto LABEL_76;
  }
  uint64_t v114 = (uint64_t)v108 + 2;
  if ((uint64_t)((char *)v108 + 2) >= (uint64_t)v317) {
    goto LABEL_87;
  }
  unint64_t v113 = v316[v114];
  if (v113) {
    goto LABEL_76;
  }
  uint64_t v114 = (uint64_t)v108 + 3;
  if ((uint64_t)((char *)v108 + 3) >= (uint64_t)v317) {
    goto LABEL_87;
  }
  unint64_t v113 = v316[v114];
  if (v113) {
    goto LABEL_76;
  }
  uint64_t v114 = (uint64_t)v108 + 4;
  if ((uint64_t)((char *)v108 + 4) >= (uint64_t)v317) {
    goto LABEL_87;
  }
  unint64_t v113 = v316[v114];
  if (v113)
  {
LABEL_76:
    unint64_t v323 = (v113 - 1) & v113;
    int v322 = (void *)v114;
    unint64_t v111 = __clz(__rbit64(v113)) + (v114 << 6);
LABEL_77:
    char v116 = *(unsigned int (***)(uint64_t *, uint64_t, unint64_t))(*(void *)(*(void *)(v320 + 56)
                                                                                            + 8 * v111)
                                                                                + 16);
    unint64_t v324 = *(void *)(*(void *)(v320 + 56) + 8 * v111);
    swift_bridgeObjectRetain();
    unint64_t v117 = 0;
    uint64_t v325 = (uint64_t)v116;
    if (!v116)
    {
LABEL_82:
      char v136 = *(void (**)(void *, void, uint64_t, int64_t))v329.n128_u64[0];
      (*(void (**)(void *, uint64_t, uint64_t, int64_t))v329.n128_u64[0])(v25, 1, 1, v109);
      char v327 = v116;
      goto LABEL_83;
    }
    while (v117 < *(void *)(v324 + 16))
    {
      uint64_t v135 = v303;
      sub_10002B70C(v324+ ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80))+ *(void *)(v303 + 72) * v117, (uint64_t)v25, (uint64_t *)&unk_100AD6F90);
      char v327 = (unsigned int (**)(uint64_t *, uint64_t, unint64_t))(v117 + 1);
      char v136 = *(void (**)(void *, void, uint64_t, int64_t))(v135 + 56);
      v136(v25, 0, 1, v109);
LABEL_83:
      uint64_t v137 = (unsigned int (*)(uint64_t *, uint64_t, int64_t))*v328;
      uint64_t v138 = 1;
      if (((unsigned int (*)(void *, uint64_t, int64_t))*v328)(v25, 1, v109) != 1)
      {
        uint64_t v139 = *(int *)(v109 + 64);
        uint64_t v140 = (char *)v25 + v139;
        __int16 v326 = (void *)*(int *)(v331 + 80);
        uint64_t v141 = v25[1];
        uint64_t v142 = v302;
        uint64_t *v302 = *v25;
        v142[1] = v141;
        int v143 = (char *)v142 + v139;
        uint64_t v144 = sub_10096B7D0();
        uint64_t v145 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32);
        v145(v143, v140, v144);
        uint64_t v146 = swift_allocObject();
        *(_OWORD *)(v146 + 16) = *(_OWORD *)((char *)v326 + (void)v321);
        uint64_t v147 = *v142;
        uint64_t v148 = v319;
        int v149 = (char *)v319 + *(int *)(v331 + 64);
        uint64_t v150 = (void *)((char *)v319 + *(int *)(v331 + 80));
        *unint64_t v319 = v147;
        v148[1] = v141;
        uint64_t v151 = v144;
        int64_t v25 = v321;
        v145(v149, v143, v151);
        uint64_t v138 = 0;
        *uint64_t v150 = sub_1004A7B64;
        v150[1] = v146;
        int64_t v109 = v331;
      }
      uint64_t v152 = (uint64_t)v319;
      v136(v319, v138, 1, v109);
      unsigned int v153 = v311;
      sub_10001AE98(v152, (uint64_t)v311, (uint64_t *)&unk_100AD6470);
      if (v137(v153, 1, v109) == 1)
      {
        swift_bridgeObjectRelease();
        int64_t v13 = v318;
        uint64_t v108 = v322;
        goto LABEL_59;
      }
      uint64_t v118 = *(int *)(v109 + 64);
      uint64_t v119 = (uint64_t)v309;
      uint64_t v120 = (char *)v309 + v118;
      uint64_t v121 = *v153;
      uint64_t v122 = v153[1];
      __int16 v326 = (char *)v153 + v118;
      uint64_t v123 = *(int *)(v331 + 80);
      int v125 = *(void (**)(void))((char *)v153 + v123);
      uint64_t v124 = *(void (**)(void))((char *)v153 + v123 + 8);
      char v126 = (void (**)(void))((char *)v309 + v123);
      *uint64_t v309 = v121;
      *(void *)(v119 + 8) = v122;
      uint64_t v127 = sub_10096B7D0();
      uint64_t v128 = *(void *)(v127 - 8);
      (*(void (**)(char *, void *, uint64_t))(v128 + 32))(v120, v326, v127);
      *char v126 = v125;
      v126[1] = v124;
      char v129 = v310;
      uint64_t v130 = (char *)v310 + *(int *)(v331 + 64);
      unsigned __int8 v131 = (void (**)(void))((char *)v310 + *(int *)(v331 + 80));
      void *v310 = v121;
      v129[1] = v122;
      uint64_t v132 = v130;
      (*(void (**)(void))(v128 + 16))();
      *unsigned __int8 v131 = v125;
      v131[1] = v124;
      swift_retain();
      id v133 = (id)FPDomainUnavailableError();
      v125();
      swift_release();

      int64_t v109 = v331;
      sub_10002B770(v119, (uint64_t *)&unk_100AD6F90);
      uint64_t v134 = v127;
      int64_t v25 = v321;
      (*(void (**)(char *, uint64_t))(v128 + 8))(v132, v134);
      char v116 = (unsigned int (**)(uint64_t *, uint64_t, unint64_t))v325;
      unint64_t v117 = (unint64_t)v327;
      if (v327 == (unsigned int (**)(uint64_t *, uint64_t, unint64_t))v325) {
        goto LABEL_82;
      }
    }
LABEL_180:
    __break(1u);
    goto LABEL_181;
  }
  uint64_t v115 = (char *)v108 + 5;
  if ((uint64_t)((char *)v108 + 5) < (uint64_t)v317)
  {
    unint64_t v113 = v316[(void)v115];
    if (!v113)
    {
      while (1)
      {
        uint64_t v114 = (uint64_t)(v115 + 1);
        if (__OFADD__(v115, 1)) {
          goto LABEL_200;
        }
        if (v114 >= (uint64_t)v317) {
          goto LABEL_87;
        }
        unint64_t v113 = v316[v114];
        ++v115;
        if (v113) {
          goto LABEL_76;
        }
      }
    }
    uint64_t v114 = (uint64_t)v108 + 5;
    goto LABEL_76;
  }
LABEL_87:
  swift_release();
  unint64_t v154 = sub_1000942EC((uint64_t)_swiftEmptyArrayStorage);
  *long long v315 = v154;
  swift_bridgeObjectRelease();
  uint64_t v155 = v286 + qword_100B0B328;
  swift_beginAccess();
  int v317 = (unint64_t *)v155;
  uint64_t v156 = *(void *)v155;
  uint64_t v157 = *(void *)(*(void *)v155 + 64);
  unint64_t v319 = (void *)(*(void *)v155 + 64);
  uint64_t v158 = 1 << *(unsigned char *)(v156 + 32);
  uint64_t v159 = -1;
  if (v158 < 64) {
    uint64_t v159 = ~(-1 << v158);
  }
  unint64_t v323 = v159 & v157;
  int64_t v320 = (unint64_t)(v158 + 63) >> 6;
  int64_t v331 = v300 + 56;
  v329.n128_u64[0] = v300 + 48;
  char v321 = (void *)v156;
  swift_bridgeObjectRetain();
  uint64_t v160 = 0;
  uint64_t v161 = v330;
LABEL_90:
  if (v323)
  {
    unint64_t v162 = __clz(__rbit64(v323));
    v323 &= v323 - 1;
    int v322 = v160;
    unint64_t v163 = v162 | ((void)v160 << 6);
    goto LABEL_108;
  }
  int64_t v164 = (int64_t)v160 + 1;
  if (__OFADD__(v160, 1)) {
    goto LABEL_195;
  }
  if (v164 >= v320) {
    goto LABEL_118;
  }
  unint64_t v165 = v319[v164];
  int64_t v166 = (int64_t)v160 + 1;
  if (v165) {
    goto LABEL_107;
  }
  int64_t v166 = (int64_t)v160 + 2;
  if ((uint64_t)v160 + 2 >= v320) {
    goto LABEL_118;
  }
  unint64_t v165 = v319[v166];
  if (v165) {
    goto LABEL_107;
  }
  int64_t v166 = (int64_t)v160 + 3;
  if ((uint64_t)v160 + 3 >= v320) {
    goto LABEL_118;
  }
  unint64_t v165 = v319[v166];
  if (v165) {
    goto LABEL_107;
  }
  int64_t v166 = (int64_t)v160 + 4;
  if ((uint64_t)v160 + 4 >= v320) {
    goto LABEL_118;
  }
  unint64_t v165 = v319[v166];
  if (v165)
  {
LABEL_107:
    unint64_t v323 = (v165 - 1) & v165;
    int v322 = (void *)v166;
    unint64_t v163 = __clz(__rbit64(v165)) + (v166 << 6);
LABEL_108:
    uint64_t v168 = *(void **)(*(void *)(v321[7] + 8 * v163) + 16);
    unint64_t v324 = *(void *)(v321[7] + 8 * v163);
    swift_bridgeObjectRetain();
    uint64_t v169 = 0;
    __int16 v326 = v168;
    if (!v168)
    {
LABEL_113:
      id v187 = *(unsigned int (***)(uint64_t *, uint64_t, unint64_t))v331;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))v331)(v13, 1, 1, v161);
      __int16 v328 = (unint64_t *)v168;
      goto LABEL_114;
    }
    while ((unint64_t)v169 < *(void *)(v324 + 16))
    {
      uint64_t v186 = v300;
      sub_10002B70C(v324+ ((*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80))+ *(void *)(v300 + 72) * (void)v169, (uint64_t)v13, (uint64_t *)&unk_100AD6F70);
      __int16 v328 = (unint64_t *)((char *)v169 + 1);
      id v187 = *(unsigned int (***)(uint64_t *, uint64_t, unint64_t))(v186 + 56);
      ((void (*)(void *, void, uint64_t, uint64_t))v187)(v13, 0, 1, v161);
LABEL_114:
      uint64_t v188 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))v329.n128_u64[0];
      uint64_t v189 = 1;
      if ((*(unint64_t (**)(void *, uint64_t, uint64_t))v329.n128_u64[0])(v13, 1, v161) != 1)
      {
        uint64_t v190 = *(int *)(v161 + 64);
        uint64_t v191 = (char *)v13 + v190;
        uint64_t v325 = *(int *)(v161 + 80);
        char v327 = v187;
        uint64_t v192 = v13[1];
        unint64_t v193 = v299;
        uint64_t *v299 = *v13;
        v193[1] = v192;
        uint64_t v194 = (char *)v193 + v190;
        uint64_t v195 = sub_10096B7D0();
        unint64_t v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32);
        v196(v194, v191, v195);
        uint64_t v197 = swift_allocObject();
        *(_OWORD *)(v197 + 16) = *(_OWORD *)((char *)v318 + v325);
        uint64_t v198 = *v193;
        uint64_t v199 = v312;
        uint64_t v200 = (char *)v312 + *(int *)(v330 + 64);
        uint64_t v201 = (void *)((char *)v312 + *(int *)(v330 + 80));
        void *v312 = v198;
        v199[1] = v192;
        id v187 = v327;
        v196(v200, v194, v195);
        int64_t v13 = v318;
        uint64_t v189 = 0;
        *uint64_t v201 = sub_1004A7B64;
        v201[1] = v197;
        uint64_t v161 = v330;
      }
      uint64_t v202 = (uint64_t)v312;
      ((void (*)(void *, uint64_t, uint64_t, uint64_t))v187)(v312, v189, 1, v161);
      uint64_t v203 = v308;
      sub_10001AE98(v202, (uint64_t)v308, (uint64_t *)&unk_100AD6460);
      if (v188(v203, 1, v161) == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v160 = v322;
        goto LABEL_90;
      }
      uint64_t v170 = *(int *)(v161 + 64);
      uint64_t v171 = (uint64_t)v304;
      uint64_t v172 = (char *)v304 + v170;
      uint64_t v173 = *v203;
      uint64_t v174 = v203[1];
      char v327 = (unsigned int (**)(uint64_t *, uint64_t, unint64_t))((char *)v203 + v170);
      uint64_t v175 = *(int *)(v330 + 80);
      uint64_t v177 = *(void (**)(void))((char *)v203 + v175);
      uint64_t v176 = *(void (**)(void))((char *)v203 + v175 + 8);
      uint64_t v178 = (void (**)(void))((char *)v304 + v175);
      *char v304 = v173;
      *(void *)(v171 + 8) = v174;
      uint64_t v179 = sub_10096B7D0();
      uint64_t v180 = *(void *)(v179 - 8);
      (*(void (**)(char *, unsigned int (**)(uint64_t *, uint64_t, unint64_t), uint64_t))(v180 + 32))(v172, v327, v179);
      char *v178 = v177;
      v178[1] = v176;
      uint64_t v181 = v305;
      uint64_t v182 = (char *)v305 + *(int *)(v330 + 64);
      unint64_t v183 = (void (**)(void))((char *)v305 + *(int *)(v330 + 80));
      void *v305 = v173;
      v181[1] = v174;
      int64_t v13 = v318;
      uint64_t v184 = v182;
      (*(void (**)(void))(v180 + 16))();
      *unint64_t v183 = v177;
      v183[1] = v176;
      swift_retain();
      id v185 = (id)FPDomainUnavailableError();
      v177();
      swift_release();

      uint64_t v161 = v330;
      sub_10002B770(v171, (uint64_t *)&unk_100AD6F70);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v184, v179);
      uint64_t v168 = v326;
      uint64_t v169 = v328;
      if (v328 == v326) {
        goto LABEL_113;
      }
    }
LABEL_181:
    __break(1u);
LABEL_182:
    swift_release();
    return;
  }
  uint64_t v167 = (char *)v160 + 5;
  if ((uint64_t)v160 + 5 < v320)
  {
    unint64_t v165 = v319[(void)v167];
    if (!v165)
    {
      while (1)
      {
        int64_t v166 = (int64_t)(v167 + 1);
        if (__OFADD__(v167, 1)) {
          goto LABEL_201;
        }
        if (v166 >= v320) {
          goto LABEL_118;
        }
        unint64_t v165 = v319[v166];
        ++v167;
        if (v165) {
          goto LABEL_107;
        }
      }
    }
    int64_t v166 = (int64_t)v160 + 5;
    goto LABEL_107;
  }
LABEL_118:
  swift_release();
  uint64_t v204 = v317;
  *uint64_t v204 = sub_100099A20((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  uint64_t v205 = v286 + qword_100B0B350;
  swift_beginAccess();
  uint64_t v206 = *(void *)v205;
  uint64_t v207 = *(void *)(*(void *)v205 + 16);
  if (v207)
  {
    swift_bridgeObjectRetain();
    uint64_t v208 = v206 + 40;
    do
    {
      char v209 = *(void (**)(id *))(v208 - 8);
      swift_retain();
      id v210 = (id)FPDomainUnavailableError();
      id v337 = v210;
      v209(&v337);
      swift_release();

      v208 += 16;
      --v207;
    }
    while (v207);
    swift_bridgeObjectRelease();
  }
  *(void *)uint64_t v205 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v211 = v286 + qword_100B0B330;
  swift_beginAccess();
  uint64_t v212 = *(void *)v211;
  uint64_t v213 = *(void *)(*(void *)v211 + 16);
  if (v213)
  {
    swift_bridgeObjectRetain();
    uint64_t v214 = v212 + 48;
    do
    {
      unint64_t v215 = *(void *)(v214 - 16);
      uint64_t v216 = *(void (**)(id *))(v214 - 8);
      v214 += 24;
      swift_retain();
      sub_1000CE628(v215);
      id v217 = (id)FPDomainUnavailableError();
      id v336 = v217;
      v216(&v336);

      sub_1004A6318(v215);
      swift_release();
      --v213;
    }
    while (v213);
    swift_bridgeObjectRelease();
  }
  *(void *)uint64_t v211 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  char v218 = (unint64_t *)(v286 + qword_100B0B338);
  swift_beginAccess();
  __int16 v328 = v218;
  int64_t v219 = *v218;
  uint64_t v220 = *(void *)(*v218 + 64);
  v329.n128_u64[0] = *v218 + 64;
  uint64_t v221 = 1 << *(unsigned char *)(v219 + 32);
  uint64_t v222 = -1;
  if (v221 < 64) {
    uint64_t v222 = ~(-1 << v221);
  }
  unint64_t v223 = v222 & v220;
  uint64_t v330 = (unint64_t)(v221 + 63) >> 6;
  int64_t v331 = v219;
  swift_bridgeObjectRetain();
  uint64_t v224 = 0;
  while (2)
  {
    if (v223)
    {
      unint64_t v225 = __clz(__rbit64(v223));
      v223 &= v223 - 1;
      unint64_t v226 = v225 | (v224 << 6);
      goto LABEL_147;
    }
    uint64_t v227 = v224 + 1;
    if (__OFADD__(v224, 1)) {
      goto LABEL_196;
    }
    if (v227 >= v330)
    {
LABEL_151:
      swift_release();
      unint64_t v236 = sub_100099A2C((uint64_t)_swiftEmptyArrayStorage);
      *__int16 v328 = v236;
      swift_bridgeObjectRelease();
      unint64_t v237 = v286 + qword_100B0B358;
      swift_beginAccess();
      v329.n128_u64[0] = v237;
      uint64_t v238 = *(void *)v237;
      uint64_t v239 = *(void *)(*(void *)v237 + 64);
      uint64_t v330 = *(void *)v237 + 64;
      uint64_t v240 = 1 << *(unsigned char *)(v238 + 32);
      uint64_t v241 = -1;
      if (v240 < 64) {
        uint64_t v241 = ~(-1 << v240);
      }
      unint64_t v242 = v241 & v239;
      int64_t v331 = (unint64_t)(v240 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v243 = 0;
      while (1)
      {
        if (v242)
        {
          unint64_t v244 = __clz(__rbit64(v242));
          v242 &= v242 - 1;
          unint64_t v245 = v244 | (v243 << 6);
        }
        else
        {
          int64_t v246 = v243 + 1;
          if (__OFADD__(v243, 1)) {
            goto LABEL_197;
          }
          if (v246 >= v331)
          {
LABEL_176:
            swift_release();
            uint64_t v254 = (unint64_t *)v329.n128_u64[0];
            *uint64_t v254 = sub_1000943F8((uint64_t)_swiftEmptyArrayStorage);
            swift_bridgeObjectRelease();
            uint64_t v255 = v286;
            uint64_t v256 = *(void **)(v286 + qword_100B0B360);
            swift_retain();
            uint64_t v257 = v256;
            uint64_t v258 = v283;
            sub_100845264(v257, v255);
            swift_beginAccess();
            uint64_t v259 = swift_bridgeObjectRetain();
            unsigned int v260 = sub_10057A944(v259);
            swift_bridgeObjectRelease();
            int64_t v261 = v260[2];
            if (!v261) {
              goto LABEL_182;
            }
            id v262 = [objc_allocWithZone((Class)FPLoggerScope) init];
            id v263 = (id)fpfs_current_or_default_log();
            sub_10096B490();
            uint64_t v264 = v262;
            char v265 = sub_10096B470();
            os_log_type_t v266 = sub_10096C5D0();
            BOOL v267 = os_log_type_enabled(v265, v266);
            char v327 = v258;
            int64_t v331 = v261;
            __int16 v326 = v264;
            if (v267)
            {
              uint64_t v268 = (uint8_t *)swift_slowAlloc();
              uint64_t v269 = v260;
              unsigned int v270 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v268 = 138412290;
              id v271 = [v264 enter];
              uint64_t v332 = (uint64_t)v271;
              sub_10096C8C0();
              void *v270 = v271;

              _os_log_impl((void *)&_mh_execute_header, v265, v266, "%@ Running jobs", v268, 0xCu);
              sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
              swift_arrayDestroy();
              unsigned int v260 = v269;
              int64_t v261 = v331;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              char v265 = v264;
            }
            uint64_t v272 = v287;

            uint64_t v273 = *(__n128 (**)(char *, uint64_t))(v289 + 8);
            v289 += 8;
            __n128 v274 = v273(v284, v288);
            uint64_t v275 = 0;
            v274.n128_u64[0] = 136315138;
            __n128 v329 = v274;
            __int16 v328 = (unint64_t *)((char *)&type metadata for Any + 8);
            uint64_t v330 = (uint64_t)v273;
            do
            {
              uint64_t v276 = v260[v275 + 4];
              swift_retain();
              id v277 = (id)fpfs_current_or_default_log();
              sub_10096B490();
              swift_retain();
              uint64_t v278 = sub_10096B470();
              os_log_type_t v279 = sub_10096C5D0();
              if (os_log_type_enabled(v278, v279))
              {
                uint64_t v280 = swift_slowAlloc();
                uint64_t v338 = swift_slowAlloc();
                *(_DWORD *)uint64_t v280 = v329.n128_u32[0];
                if (v276 < 0) {
                  uint64_t v332 = 2650214;
                }
                else {
                  uint64_t v332 = 2650982;
                }
                unint64_t v333 = 0xE300000000000000;
                uint64_t v281 = swift_retain();
                v339._int countAndFlagsBits = sub_1004D3CF0(v281);
                sub_10096BDC0(v339);
                swift_bridgeObjectRelease();
                v340._int countAndFlagsBits = 41;
                v340._object = (void *)0xE100000000000000;
                sub_10096BDC0(v340);
                swift_release();
                *(void *)(v280 + 4) = sub_100719D44(v332, v333, &v338);
                swift_release();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v278, v279, "running job: %s", (uint8_t *)v280, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
                swift_release();

                uint64_t v272 = v287;
                uint64_t v273 = (__n128 (*)(char *, uint64_t))v330;
                ((void (*)(char *, uint64_t))v330)(v287, v288);
                int64_t v261 = v331;
              }
              else
              {

                swift_release_n();
                v273(v272, v288);
              }
              ++v275;
            }
            while (v261 != v275);
            swift_release();
            char v282 = v326;
            sub_1006D6B50(v326);

            return;
          }
          unint64_t v247 = *(void *)(v330 + 8 * v246);
          ++v243;
          if (!v247)
          {
            int64_t v243 = v246 + 1;
            if (v246 + 1 >= v331) {
              goto LABEL_176;
            }
            unint64_t v247 = *(void *)(v330 + 8 * v243);
            if (!v247)
            {
              int64_t v243 = v246 + 2;
              if (v246 + 2 >= v331) {
                goto LABEL_176;
              }
              unint64_t v247 = *(void *)(v330 + 8 * v243);
              if (!v247)
              {
                int64_t v243 = v246 + 3;
                if (v246 + 3 >= v331) {
                  goto LABEL_176;
                }
                unint64_t v247 = *(void *)(v330 + 8 * v243);
                if (!v247)
                {
                  int64_t v248 = v246 + 4;
                  if (v248 >= v331) {
                    goto LABEL_176;
                  }
                  unint64_t v247 = *(void *)(v330 + 8 * v248);
                  if (!v247)
                  {
                    while (1)
                    {
                      int64_t v243 = v248 + 1;
                      if (__OFADD__(v248, 1)) {
                        goto LABEL_203;
                      }
                      if (v243 >= v331) {
                        goto LABEL_176;
                      }
                      unint64_t v247 = *(void *)(v330 + 8 * v243);
                      ++v248;
                      if (v247) {
                        goto LABEL_171;
                      }
                    }
                  }
                  int64_t v243 = v248;
                }
              }
            }
          }
LABEL_171:
          unint64_t v242 = (v247 - 1) & v247;
          unint64_t v245 = __clz(__rbit64(v247)) + (v243 << 6);
        }
        uint64_t v249 = *(void *)(*(void *)(v238 + 56) + 8 * v245);
        uint64_t v250 = *(void *)(v249 + 16);
        if (v250)
        {
          swift_bridgeObjectRetain();
          uint64_t v251 = v249 + 40;
          do
          {
            unsigned int v252 = *(void (**)(id *))(v251 - 8);
            swift_retain();
            id v253 = (id)FPDomainUnavailableError();
            id v334 = v253;
            v252(&v334);
            swift_release();

            v251 += 16;
            --v250;
          }
          while (v250);
          swift_bridgeObjectRelease();
        }
      }
    }
    unint64_t v228 = *(void *)(v329.n128_u64[0] + 8 * v227);
    ++v224;
    if (v228) {
      goto LABEL_146;
    }
    uint64_t v224 = v227 + 1;
    if (v227 + 1 >= v330) {
      goto LABEL_151;
    }
    unint64_t v228 = *(void *)(v329.n128_u64[0] + 8 * v224);
    if (v228) {
      goto LABEL_146;
    }
    uint64_t v224 = v227 + 2;
    if (v227 + 2 >= v330) {
      goto LABEL_151;
    }
    unint64_t v228 = *(void *)(v329.n128_u64[0] + 8 * v224);
    if (v228) {
      goto LABEL_146;
    }
    uint64_t v224 = v227 + 3;
    if (v227 + 3 >= v330) {
      goto LABEL_151;
    }
    unint64_t v228 = *(void *)(v329.n128_u64[0] + 8 * v224);
    if (v228)
    {
LABEL_146:
      unint64_t v223 = (v228 - 1) & v228;
      unint64_t v226 = __clz(__rbit64(v228)) + (v224 << 6);
LABEL_147:
      uint64_t v230 = *(void *)(*(void *)(v331 + 56) + 8 * v226);
      uint64_t v231 = *(void *)(v230 + 16);
      if (v231)
      {
        swift_bridgeObjectRetain();
        uint64_t v232 = v230 + 64;
        do
        {
          unint64_t v233 = *(void *)(v232 - 32);
          char v234 = *(void (**)(id *))(v232 - 8);
          swift_retain();
          sub_1000CE628(v233);
          id v235 = (id)FPDomainUnavailableError();
          id v335 = v235;
          v234(&v335);

          sub_1004A6318(v233);
          swift_release();
          v232 += 40;
          --v231;
        }
        while (v231);
        swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  uint64_t v229 = v227 + 4;
  if (v229 >= v330) {
    goto LABEL_151;
  }
  unint64_t v228 = *(void *)(v329.n128_u64[0] + 8 * v229);
  if (v228)
  {
    uint64_t v224 = v229;
    goto LABEL_146;
  }
  while (1)
  {
    uint64_t v224 = v229 + 1;
    if (__OFADD__(v229, 1)) {
      break;
    }
    if (v224 >= v330) {
      goto LABEL_151;
    }
    unint64_t v228 = *(void *)(v329.n128_u64[0] + 8 * v224);
    ++v229;
    if (v228) {
      goto LABEL_146;
    }
  }
LABEL_202:
  __break(1u);
LABEL_203:
  __break(1u);
}

uint64_t sub_10048D710(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v51 = a7;
  uint64_t v50 = a6;
  int v55 = a5;
  int v56 = a4;
  uint64_t v10 = sub_10096B3D0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v19 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a1;
  id v49 = (id)fpfs_adopt_log();
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v22 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v18, 1, 1, v10);
  uint64_t v53 = 0x61657220636E7973;
  unint64_t v54 = 0xEA00000000002064;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  v57._int countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v57);
  swift_bridgeObjectRelease();
  unint64_t v23 = v54;
  uint64_t v43 = v53;
  sub_10002B70C((uint64_t)v18, (uint64_t)v16, &qword_100AD0830);
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10);
  unint64_t v44 = v18;
  if (v24 == 1)
  {
    id v25 = v22;
    uint64_t v26 = v45;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v16, &qword_100AD0830);
  }
  else
  {
    uint64_t v26 = v45;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v45, v16, v10);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v26, v10);
  *(void *)&v21[*(int *)(v19 + 20)] = v22;
  uint64_t v27 = &v21[*(int *)(v19 + 24)];
  *(void *)uint64_t v27 = "DB queue wait";
  *((void *)v27 + 1) = 13;
  v27[16] = 2;
  id v28 = v22;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100973BB0;
  *(void *)(v29 + 56) = &type metadata for String;
  *(void *)(v29 + 64) = sub_1000240A4();
  *(void *)(v29 + 32) = v43;
  *(void *)(v29 + 40) = v23;
  uint64_t v41 = v29;
  char v40 = 2;
  uint64_t v39 = 2;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v26, v10);
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_10002B770((uint64_t)v44, &qword_100AD0830);
  __chkstk_darwin(v30);
  uint64_t v31 = v47;
  *(&v43 - 6) = (uint64_t)v21;
  *(&v43 - 5) = v31;
  uint64_t v39 = v48;
  char v40 = v56;
  uint64_t v41 = v50;
  uint64_t v42 = v51;
  id v33 = v32;
  uint64_t v34 = v52;
  char v35 = sub_100270D68(0, v55 & 1, (uint64_t)"syncRead(quiet:function:block:)", 31, 2, (uint64_t)sub_1004A5BDC, (uint64_t)(&v43 - 8));
  if (v34)
  {
    sub_1004A6FF0((uint64_t)v21, type metadata accessor for Signpost);
  }
  else
  {

    sub_1004A6FF0((uint64_t)v21, type metadata accessor for Signpost);
  }
  uint64_t v36 = v49;
  id v37 = (id)fpfs_adopt_log();

  return v35 & 1;
}

void sub_10048DC38(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v51 = a8;
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  int v54 = a5;
  int v55 = a4;
  uint64_t v11 = sub_10096B3D0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v44 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = a1;
  id v47 = (id)fpfs_adopt_log();
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  unint64_t v23 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v19, 1, 1, v11);
  uint64_t v52 = 0x61657220636E7973;
  unint64_t v53 = 0xEA00000000002064;
  uint64_t v46 = a2;
  uint64_t v48 = a3;
  v56._int countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v56);
  swift_bridgeObjectRelease();
  unint64_t v24 = v53;
  uint64_t v42 = v52;
  sub_10002B70C((uint64_t)v19, (uint64_t)v17, &qword_100AD0830);
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11);
  uint64_t v43 = v19;
  if (v25 == 1)
  {
    id v26 = v23;
    uint64_t v27 = v44;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v17, &qword_100AD0830);
  }
  else
  {
    uint64_t v27 = v44;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v44, v17, v11);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v27, v11);
  *(void *)&v22[*(int *)(v20 + 20)] = v23;
  id v28 = &v22[*(int *)(v20 + 24)];
  *(void *)id v28 = "DB queue wait";
  *((void *)v28 + 1) = 13;
  unsigned char v28[16] = 2;
  id v29 = v23;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100973BB0;
  *(void *)(v30 + 56) = &type metadata for String;
  *(void *)(v30 + 64) = sub_1000240A4();
  *(void *)(v30 + 32) = v42;
  *(void *)(v30 + 40) = v24;
  uint64_t v39 = v30;
  char v38 = 2;
  uint64_t v37 = 2;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v27, v11);
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_10002B770((uint64_t)v43, &qword_100AD0830);
  __chkstk_darwin(v31);
  uint64_t v32 = v46;
  *(&v41 - 6) = (uint64_t)v22;
  *(&v41 - 5) = v32;
  uint64_t v37 = v48;
  char v38 = v55;
  uint64_t v39 = v49;
  uint64_t v40 = v50;
  id v34 = v33;
  sub_100270A48(0, v54 & 1, (uint64_t)"syncRead(quiet:function:block:)", 31, 2, (uint64_t)sub_1004A6440, (uint64_t)(&v41 - 8));
  sub_1004A6FF0((uint64_t)v22, type metadata accessor for Signpost);

  char v35 = v47;
  id v36 = (id)fpfs_adopt_log();
}

uint64_t sub_10048E158(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6)
{
  void (*v36)(uint64_t *__return_ptr, uint64_t);
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  Swift::String v41;

  id v36 = a5;
  uint64_t v35 = a6;
  LODWORD(v33) = a4;
  uint64_t v32 = a3;
  uint64_t v6 = sub_10096B3D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v34 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096C760();
  sub_10096B3A0();
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v14, 1, 1, v6);
  char v38 = 0x61657220636E7973;
  uint64_t v39 = 0xEA00000000002064;
  v41._int countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v41);
  swift_bridgeObjectRelease();
  unint64_t v19 = v39;
  uint64_t v32 = v38;
  id v33 = v14;
  sub_10002B70C((uint64_t)v14, (uint64_t)v12, &qword_100AD0830);
  uint64_t v20 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    id v21 = v18;
    uint64_t v22 = v34;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v12, &qword_100AD0830);
  }
  else
  {
    uint64_t v22 = v34;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v12, v6);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v17, v22, v6);
  id v34 = (char *)*(int *)(v15 + 20);
  *(void *)&v34[v17] = v18;
  unint64_t v23 = (char *)(v17 + *(int *)(v15 + 24));
  *(void *)unint64_t v23 = "DB queue";
  *((void *)v23 + 1) = 8;
  v23[16] = 2;
  id v24 = v18;
  uint64_t v31 = v20;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100973BB0;
  *(void *)(v25 + 56) = &type metadata for String;
  *(void *)(v25 + 64) = sub_1000240A4();
  *(void *)(v25 + 32) = v32;
  *(void *)(v25 + 40) = v19;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v31);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_10002B770((uint64_t)v33, &qword_100AD0830);
  uint64_t v27 = v37;
  v36(&v40, v26);
  sub_10096C760();
  sub_10096B3A0();
  sub_1004A6FF0(v17, type metadata accessor for Signpost);
  if (!v27) {
    char v28 = v40;
  }
  return v28 & 1;
}

uint64_t sub_10048E60C@<X0>(uint64_t a1@<X2>, int a2@<W3>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v35 = a3;
  LODWORD(v30) = a2;
  uint64_t v29 = a1;
  uint64_t v33 = a5;
  uint64_t v5 = sub_10096B3D0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096C760();
  sub_10096B3A0();
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  uint64_t v36 = 0x61657220636E7973;
  unint64_t v37 = 0xEA00000000002064;
  v38._int countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v38);
  swift_bridgeObjectRelease();
  unint64_t v18 = v37;
  uint64_t v30 = v36;
  sub_10002B70C((uint64_t)v13, (uint64_t)v11, &qword_100AD0830);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  uint64_t v31 = v13;
  if (v19 == 1)
  {
    id v20 = v17;
    id v21 = v32;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v11, &qword_100AD0830);
  }
  else
  {
    id v21 = v32;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v32, v11, v5);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v16, v21, v5);
  uint64_t v32 = (char *)*(int *)(v14 + 20);
  *(void *)&v32[v16] = v17;
  uint64_t v22 = *(int *)(v14 + 24);
  uint64_t v29 = v5;
  unint64_t v23 = (char *)(v16 + v22);
  *(void *)unint64_t v23 = "DB queue";
  *((void *)v23 + 1) = 8;
  v23[16] = 2;
  id v24 = v17;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100973BB0;
  *(void *)(v25 + 56) = &type metadata for String;
  *(void *)(v25 + 64) = sub_1000240A4();
  *(void *)(v25 + 32) = v30;
  *(void *)(v25 + 40) = v18;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v29);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_10002B770((uint64_t)v31, &qword_100AD0830);
  v35(v26);
  sub_10096C760();
  sub_10096B3A0();
  return sub_1004A6FF0(v16, type metadata accessor for Signpost);
}

void *sub_10048EA78(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100AD6F70);
  uint64_t v307 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v324 = (_OWORD *)((char *)v291 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  int64_t v306 = (void *)((char *)v291 - v7);
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100AD6460);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v321 = (void *)((char *)v291 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v9);
  int64_t v320 = (void *)((char *)v291 - v12);
  __chkstk_darwin(v11);
  uint64_t v315 = (uint64_t)v291 - v13;
  uint64_t v352 = sub_10002B7CC((uint64_t *)&unk_100AD6F90);
  uint64_t v311 = *(void *)(v352 - 8);
  uint64_t v14 = __chkstk_darwin(v352);
  unint64_t v333 = (_OWORD *)((char *)v291 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  int v310 = (void *)((char *)v291 - v16);
  uint64_t v17 = sub_10002B7CC((uint64_t *)&unk_100AD6470);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  *(void *)&long long v335 = (char *)v291 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  __int16 v326 = (void *)((char *)v291 - v21);
  __chkstk_darwin(v20);
  unint64_t v23 = (_OWORD *)((char *)v291 - v22);
  uint64_t v24 = sub_10002B7CC((uint64_t *)&unk_100ACC9B0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  __n128 v329 = (char *)v291 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v309 = (void **)((char *)v291 - v28);
  uint64_t v29 = sub_10002B7CC((uint64_t *)&unk_100AD6480);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v32 = (void **)((char *)v291 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = __chkstk_darwin(v30);
  NSFileProviderItemIdentifier v323 = (NSFileProviderItemIdentifier)((char *)v291 - v34);
  __chkstk_darwin(v33);
  uint64_t v318 = (void *)((char *)v291 - v35);
  uint64_t v298 = sub_10002B7CC(&qword_100ACCA78);
  uint64_t v295 = *(void *)(v298 - 8);
  __chkstk_darwin(v298);
  unint64_t v319 = (unsigned __int8 *)v291 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10002B7CC((uint64_t *)&qword_100AD6490);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  uint64_t v302 = (char *)v291 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v299 = (char *)v291 - v40;
  uint64_t v292 = a2;
  uint64_t v41 = (uint64_t *)(a2 + qword_100B0B318);
  uint64_t v42 = (void *)v24;
  uint64_t v43 = v32;
  swift_beginAccess();
  uint64_t v44 = *v41;
  uint64_t v45 = *(void *)(*v41 + 64);
  uint64_t v293 = *v41 + 64;
  uint64_t v46 = 1 << *(unsigned char *)(v44 + 32);
  if (v46 < 64) {
    uint64_t v47 = ~(-1 << v46);
  }
  else {
    uint64_t v47 = -1;
  }
  unint64_t v48 = v47 & v45;
  id v336 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v25 + 56);
  uint64_t v314 = v25;
  *(void *)&long long v334 = v25 + 48;
  int64_t v294 = (unint64_t)(v46 + 63) >> 6;
  v291[0] = v294 - 1;
  uint64_t v296 = v44;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v300 = 0;
  int64_t v312 = 0x80000001009A3DA0;
  uint64_t v330 = a1;
  uint64_t v327 = v4;
  uint64_t v325 = v23;
  id v337 = v42;
  *(void *)&long long v332 = v32;
LABEL_6:
  if (v48)
  {
    uint64_t v301 = (v48 - 1) & v48;
    unint64_t v50 = __clz(__rbit64(v48)) | (v300 << 6);
    uint64_t v51 = (uint64_t)v302;
    uint64_t v52 = (uint64_t)v299;
LABEL_8:
    uint64_t v53 = *(void *)(v296 + 56);
    uint64_t v54 = *(void *)(v296 + 48) + 16 * v50;
    uint64_t v55 = *(void *)v54;
    LOBYTE(v54) = *(unsigned char *)(v54 + 8);
    *(void *)uint64_t v51 = v55;
    *(unsigned char *)(v51 + 8) = v54;
    uint64_t v56 = v53 + *(void *)(v295 + 72) * v50;
    uint64_t v57 = sub_10002B7CC((uint64_t *)&qword_100AD6498);
    uint64_t v58 = v56;
    uint64_t v51 = (uint64_t)v302;
    sub_10002B70C(v58, (uint64_t)&v302[*(int *)(v57 + 48)], &qword_100ACCA78);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v51, 0, 1, v57);
    uint64_t v43 = (void **)v332;
    goto LABEL_27;
  }
  int64_t v59 = v300 + 1;
  uint64_t v51 = (uint64_t)v302;
  uint64_t v52 = (uint64_t)v299;
  if (__OFADD__(v300, 1)) {
    goto LABEL_242;
  }
  if (v59 < v294)
  {
    unint64_t v60 = *(void *)(v293 + 8 * v59);
    if (v60)
    {
LABEL_12:
      uint64_t v301 = (v60 - 1) & v60;
      unint64_t v50 = __clz(__rbit64(v60)) + (v59 << 6);
      int64_t v300 = v59;
      goto LABEL_8;
    }
    int64_t v61 = v300 + 2;
    ++v300;
    if (v59 + 1 < v294)
    {
      unint64_t v60 = *(void *)(v293 + 8 * v61);
      if (v60)
      {
LABEL_15:
        int64_t v59 = v61;
        goto LABEL_12;
      }
      int64_t v300 = v59 + 1;
      if (v59 + 2 < v294)
      {
        unint64_t v60 = *(void *)(v293 + 8 * (v59 + 2));
        if (v60)
        {
          v59 += 2;
          goto LABEL_12;
        }
        int64_t v61 = v59 + 3;
        int64_t v300 = v59 + 2;
        if (v59 + 3 < v294)
        {
          unint64_t v60 = *(void *)(v293 + 8 * v61);
          if (v60) {
            goto LABEL_15;
          }
          while (1)
          {
            int64_t v59 = v61 + 1;
            if (__OFADD__(v61, 1)) {
              goto LABEL_253;
            }
            if (v59 >= v294) {
              break;
            }
            unint64_t v60 = *(void *)(v293 + 8 * v59);
            ++v61;
            if (v60) {
              goto LABEL_12;
            }
          }
          int64_t v300 = v291[0];
        }
      }
    }
  }
  uint64_t v62 = sub_10002B7CC((uint64_t *)&qword_100AD6498);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v51, 1, 1, v62);
  uint64_t v301 = 0;
LABEL_27:
  sub_10001AE98(v51, v52, (uint64_t *)&qword_100AD6490);
  uint64_t v63 = sub_10002B7CC((uint64_t *)&qword_100AD6498);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v52, 1, v63) == 1)
  {
    swift_release();
    char v116 = (uint64_t *)(v292 + qword_100B0B320);
    swift_beginAccess();
    uint64_t v117 = *v116;
    uint64_t v118 = *(void *)(*v116 + 64);
    uint64_t v309 = (void **)(*v116 + 64);
    uint64_t v119 = 1 << *(unsigned char *)(v117 + 32);
    uint64_t v120 = -1;
    if (v119 < 64) {
      uint64_t v120 = ~(-1 << v119);
    }
    unint64_t v121 = v120 & v118;
    int64_t v312 = (unint64_t)(v119 + 63) >> 6;
    id v337 = (void *)(v311 + 56);
    id v336 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v311 + 48);
    NSFileProviderItemIdentifier v323 = NSFileProviderRootContainerItemIdentifier;
    uint64_t v318 = (unint64_t *)NSFileProviderTrashContainerItemIdentifier;
    uint64_t v313 = v117;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    int64_t v122 = 0;
    int64_t v308 = (int64_t)"+ processing requests";
    uint64_t v322 = 0x80000001009A3D60;
    uint64_t v123 = v352;
    uint64_t v124 = (uint64_t *)v335;
LABEL_82:
    if (v121)
    {
      uint64_t v314 = (v121 - 1) & v121;
      int64_t v316 = v122;
      unint64_t v125 = __clz(__rbit64(v121)) | (v122 << 6);
LABEL_98:
      uint64_t v130 = 8 * v125;
      unsigned __int8 v131 = *(unsigned __int8 **)(*(void *)(v313 + 56) + v130);
      uint64_t v132 = *((void *)v131 + 2);
      __n128 v329 = *(char **)(*(void *)(v313 + 48) + v130);
      int v317 = v329;
      unint64_t v319 = v131;
      uint64_t result = (void *)swift_bridgeObjectRetain();
      unint64_t v133 = 0;
      *(void *)&long long v328 = v132;
      while (1)
      {
        if (v133 == v132)
        {
          char v136 = (unsigned int (*)(void *, uint64_t, uint64_t))*v337;
          ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))*v337)(v124, 1, 1, v123);
          *(void *)&long long v334 = v132;
        }
        else
        {
          if (v133 >= *((void *)v319 + 2))
          {
            __break(1u);
            goto LABEL_239;
          }
          uint64_t v137 = v311;
          sub_10002B70C((uint64_t)&v319[((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80))+ *(void *)(v311 + 72) * v133], (uint64_t)v124, (uint64_t *)&unk_100AD6F90);
          *(void *)&long long v334 = v133 + 1;
          char v136 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v137 + 56);
          ((void (*)(uint64_t *, void, uint64_t, uint64_t))v136)(v124, 0, 1, v123);
        }
        uint64_t v138 = *v336;
        uint64_t v139 = 1;
        if ((*v336)(v124, 1, v123) != 1)
        {
          uint64_t v140 = *(int *)(v123 + 64);
          uint64_t v141 = (char *)v124 + v140;
          *(void *)&long long v331 = *(int *)(v123 + 80);
          uint64_t v142 = v124[1];
          int v143 = v310;
          uint64_t *v310 = *v124;
          v143[1] = v142;
          uint64_t v144 = (char *)v143 + v140;
          uint64_t v145 = sub_10096B7D0();
          uint64_t v146 = *(void (**)(void, void, void))(*(void *)(v145 - 8) + 32);
          *(void *)&long long v332 = v136;
          v146(v144, v141, v145);
          uint64_t v147 = swift_allocObject();
          *(_OWORD *)(v147 + 16) = *(_OWORD *)(v335 + v331);
          uint64_t v148 = *v143;
          int v149 = v326;
          uint64_t v150 = (char *)v326 + *(int *)(v352 + 64);
          uint64_t v151 = (uint64_t (**)(uint64_t))((char *)v326 + *(int *)(v352 + 80));
          *__int16 v326 = v148;
          v149[1] = v142;
          uint64_t v4 = v327;
          uint64_t v152 = v144;
          uint64_t v123 = v352;
          uint64_t v153 = v145;
          uint64_t v124 = (uint64_t *)v335;
          v146(v150, v152, v153);
          char v136 = (unsigned int (*)(void *, uint64_t, uint64_t))v332;
          a1 = v330;
          uint64_t v139 = 0;
          *uint64_t v151 = sub_1004A6438;
          v151[1] = (uint64_t (*)(uint64_t))v147;
          unint64_t v23 = v325;
        }
        uint64_t v154 = (uint64_t)v326;
        ((void (*)(void *, uint64_t, uint64_t, uint64_t))v136)(v326, v139, 1, v123);
        sub_10001AE98(v154, (uint64_t)v23, (uint64_t *)&unk_100AD6470);
        if (v138((uint64_t *)v23, 1, v123) == 1)
        {

          uint64_t result = (void *)swift_bridgeObjectRelease();
          int64_t v122 = v316;
          unint64_t v121 = v314;
          goto LABEL_82;
        }
        uint64_t v155 = *(int *)(v123 + 64);
        uint64_t v156 = (char *)v23 + v155;
        uint64_t v157 = *(int *)(v123 + 80);
        uint64_t v158 = v333;
        uint64_t v159 = (char *)v333 + v155;
        long long v332 = *v23;
        *unint64_t v333 = v332;
        uint64_t v160 = sub_10096B7D0();
        uint64_t v161 = *(void (**)(void, void, void))(*(void *)(v160 - 8) + 32);
        long long v331 = *(_OWORD *)((char *)v23 + v157);
        v161(v159, v156, v160);
        *(_OWORD *)((char *)v158 + v157) = v331;
        uint64_t v162 = a1[3];
        uint64_t v163 = a1[4];
        sub_10002689C(a1, v162);
        uint64_t v348 = 0;
        uint64_t v349 = (void *)0xE000000000000000;
        unint64_t v164 = v332;
        sub_1000CE628(v332);
        sub_10096CBD0(22);
        uint64_t v165 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v167 = v166;
        if (v165 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v167 == v168)
        {
          swift_bridgeObjectRelease_n();
LABEL_100:
          object = (void *)0xE400000000000000;
          v135._int countAndFlagsBits = 1953460082;
          goto LABEL_101;
        }
        char v169 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v169) {
          goto LABEL_100;
        }
        uint64_t v170 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v172 = v171;
        if (v170 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v172 == v173) {
          break;
        }
        char v174 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v174) {
          goto LABEL_116;
        }
        v135._int countAndFlagsBits = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        object = v135._object;
LABEL_101:
        v135._object = object;
        sub_10096BDC0(v135);
        swift_bridgeObjectRelease();
        v358._int countAndFlagsBits = 0xD000000000000012;
        v358._object = (void *)v322;
        sub_10096BDC0(v358);
        v359._int countAndFlagsBits = sub_1005255F4(v164);
        sub_10096BDC0(v359);
        swift_bridgeObjectRelease();
        sub_1004A6318(v164);
        sub_10059A0E8(v348, v349, v162, v163);
        swift_bridgeObjectRelease();
        uint64_t result = (void *)sub_10002B770((uint64_t)v333, (uint64_t *)&unk_100AD6F90);
        uint64_t v123 = v352;
        uint64_t v124 = (uint64_t *)v335;
        unint64_t v23 = v325;
        uint64_t v132 = v328;
        unint64_t v133 = v334;
      }
      swift_bridgeObjectRelease_n();
LABEL_116:
      object = (void *)0xE500000000000000;
      v135._int countAndFlagsBits = 0x6873617274;
      goto LABEL_101;
    }
    int64_t v126 = v122 + 1;
    if (__OFADD__(v122, 1)) {
      goto LABEL_241;
    }
    if (v126 < v312)
    {
      unint64_t v127 = (unint64_t)v309[v126];
      int64_t v128 = v122 + 1;
      if (v127) {
        goto LABEL_97;
      }
      int64_t v128 = v122 + 2;
      if (v122 + 2 >= v312) {
        goto LABEL_118;
      }
      unint64_t v127 = (unint64_t)v309[v128];
      if (v127) {
        goto LABEL_97;
      }
      int64_t v128 = v122 + 3;
      if (v122 + 3 >= v312) {
        goto LABEL_118;
      }
      unint64_t v127 = (unint64_t)v309[v128];
      if (v127)
      {
LABEL_97:
        uint64_t v314 = (v127 - 1) & v127;
        int64_t v316 = v128;
        unint64_t v125 = __clz(__rbit64(v127)) + (v128 << 6);
        goto LABEL_98;
      }
      uint64_t v129 = v122 + 4;
      if (v122 + 4 < v312)
      {
        unint64_t v127 = (unint64_t)v309[v129];
        if (v127)
        {
          int64_t v128 = v122 + 4;
          goto LABEL_97;
        }
        while (1)
        {
          int64_t v128 = v129 + 1;
          if (__OFADD__(v129, 1)) {
            goto LABEL_247;
          }
          if (v128 >= v312) {
            break;
          }
          unint64_t v127 = (unint64_t)v309[v128];
          ++v129;
          if (v127) {
            goto LABEL_97;
          }
        }
      }
    }
LABEL_118:
    swift_release();
    uint64_t v175 = (unsigned __int8 **)(v292 + qword_100B0B328);
    swift_beginAccess();
    uint64_t v176 = *v175;
    uint64_t v177 = *((void *)*v175 + 8);
    int v317 = (char *)(*v175 + 64);
    uint64_t v178 = 1 << v176[32];
    uint64_t v179 = -1;
    if (v178 < 64) {
      uint64_t v179 = ~(-1 << v178);
    }
    unint64_t v180 = v179 & v177;
    uint64_t v318 = (unint64_t *)((unint64_t)(v178 + 63) >> 6);
    uint64_t v352 = v307 + 56;
    id v337 = (void *)(v307 + 48);
    unint64_t v319 = v176;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    NSFileProviderItemIdentifier v181 = 0;
    *(void *)&long long v331 = v308 | 0x8000000000000000;
LABEL_122:
    if (v180)
    {
      uint64_t v322 = (v180 - 1) & v180;
      NSFileProviderItemIdentifier v323 = v181;
      unint64_t v182 = __clz(__rbit64(v180)) | ((void)v181 << 6);
LABEL_138:
      uint64_t v187 = *((void *)v319 + 7);
      uint64_t v188 = *((void *)v319 + 6) + 16 * v182;
      uint64_t v189 = *(char **)v188;
      LODWORD(v333) = *(unsigned __int8 *)(v188 + 8);
      uint64_t v190 = *(unsigned int (***)(uint64_t *, uint64_t, uint64_t))(*(void *)(v187 + 8 * v182) + 16);
      *(void *)&long long v328 = *(void *)(v187 + 8 * v182);
      uint64_t result = (void *)swift_bridgeObjectRetain();
      unint64_t v191 = 0;
      __n128 v329 = v189;
      uint64_t v192 = 0x6873617274;
      if (!v189) {
        uint64_t v192 = 1953460082;
      }
      __int16 v326 = (void *)v192;
      unint64_t v193 = 0xE500000000000000;
      if (!v189) {
        unint64_t v193 = 0xE400000000000000;
      }
      uint64_t v325 = (_OWORD *)v193;
      *(void *)&long long v332 = v190;
      while (1)
      {
        unint64_t v196 = v321;
        if ((unsigned int (**)(uint64_t *, uint64_t, uint64_t))v191 == v190)
        {
          uint64_t v197 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))v352;
          (*(void (**)(void *, uint64_t, uint64_t, uint64_t))v352)(v321, 1, 1, v4);
          id v336 = v190;
        }
        else
        {
          if (v191 >= *(void *)(v328 + 16))
          {
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
LABEL_241:
            __break(1u);
LABEL_242:
            __break(1u);
LABEL_243:
            __break(1u);
LABEL_244:
            __break(1u);
LABEL_245:
            __break(1u);
LABEL_246:
            __break(1u);
LABEL_247:
            __break(1u);
LABEL_248:
            __break(1u);
LABEL_249:
            __break(1u);
LABEL_250:
            __break(1u);
LABEL_251:
            __break(1u);
            goto LABEL_252;
          }
          uint64_t v198 = v307;
          sub_10002B70C(v328+ ((*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80))+ *(void *)(v307 + 72) * v191, (uint64_t)v321, (uint64_t *)&unk_100AD6F70);
          id v336 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v191 + 1);
          uint64_t v197 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v198 + 56);
          v197(v196, 0, 1, v4);
        }
        uint64_t v199 = (unsigned int (*)(void *, uint64_t, uint64_t))*v337;
        uint64_t v200 = 1;
        if (((unsigned int (*)(void *, uint64_t, uint64_t))*v337)(v196, 1, v4) != 1)
        {
          uint64_t v201 = *(int *)(v4 + 64);
          uint64_t v202 = v321;
          uint64_t v203 = (char *)v321 + v201;
          *(void *)&long long v334 = *(int *)(v4 + 80);
          uint64_t v204 = v321[1];
          uint64_t v205 = v306;
          *int64_t v306 = *v321;
          v205[1] = v204;
          uint64_t v206 = (char *)v205 + v201;
          uint64_t v207 = sub_10096B7D0();
          *(void *)&long long v335 = v197;
          uint64_t v208 = v207;
          char v209 = *(void (**)(void, void, void))(*(void *)(v207 - 8) + 32);
          v209(v206, v203, v207);
          uint64_t v210 = swift_allocObject();
          *(_OWORD *)(v210 + 16) = *(_OWORD *)((char *)v202 + v334);
          uint64_t v211 = *v205;
          uint64_t v212 = v320;
          uint64_t v213 = (char *)v320 + *(int *)(v327 + 64);
          uint64_t v214 = (void *)((char *)v320 + *(int *)(v327 + 80));
          *int64_t v320 = v211;
          v212[1] = v204;
          a1 = v330;
          uint64_t v215 = v208;
          uint64_t v197 = (void (*)(void *, uint64_t, uint64_t, uint64_t))v335;
          v209(v213, v206, v215);
          uint64_t v4 = v327;
          uint64_t v200 = 0;
          *uint64_t v214 = sub_1004A7B64;
          v214[1] = v210;
        }
        uint64_t v216 = (uint64_t)v320;
        v197(v320, v200, 1, v4);
        uint64_t v217 = v315;
        sub_10001AE98(v216, v315, (uint64_t *)&unk_100AD6460);
        if (v199((void *)v217, 1, v4) == 1)
        {
          uint64_t result = (void *)swift_bridgeObjectRelease();
          NSFileProviderItemIdentifier v181 = v323;
          unint64_t v180 = v322;
          goto LABEL_122;
        }
        uint64_t v218 = *(int *)(v4 + 64);
        int64_t v219 = (long long *)v217;
        uint64_t v220 = v217 + v218;
        uint64_t v221 = *(int *)(v4 + 80);
        uint64_t v222 = v324;
        unint64_t v223 = (char *)v324 + v218;
        long long v335 = *v219;
        _OWORD *v324 = v335;
        uint64_t v224 = sub_10096B7D0();
        unint64_t v225 = *(void (**)(void, void, void))(*(void *)(v224 - 8) + 32);
        long long v334 = *(long long *)((char *)v219 + v221);
        v225(v223, v220, v224);
        *(_OWORD *)((char *)v222 + v221) = v334;
        uint64_t v226 = a1[3];
        uint64_t v227 = a1[4];
        sub_10002689C(a1, v226);
        uint64_t v346 = 0;
        uint64_t v347 = (void *)0xE000000000000000;
        unint64_t v228 = v335;
        sub_1000CE628(v335);
        sub_10096CBD0(22);
        if (!v333) {
          break;
        }
        if (v333 == 1)
        {
          uint64_t v346 = 0x284449656C6966;
          uint64_t v347 = (void *)0xE700000000000000;
          uint64_t v344 = (uint64_t)v329;
LABEL_144:
          v360._int countAndFlagsBits = sub_10096D220();
          sub_10096BDC0(v360);
          swift_bridgeObjectRelease();
          v361._int countAndFlagsBits = 41;
          v361._object = (void *)0xE100000000000000;
          sub_10096BDC0(v361);
          swift_bridgeObjectRelease();
          uint64_t v194 = v346;
          uint64_t v195 = v347;
          goto LABEL_145;
        }
        swift_bridgeObjectRelease();
        uint64_t v194 = (uint64_t)v326;
        uint64_t v195 = v325;
LABEL_145:
        uint64_t v346 = v194;
        uint64_t v347 = v195;
        v362._int countAndFlagsBits = 0xD000000000000012;
        v362._object = (void *)v331;
        sub_10096BDC0(v362);
        v363._int countAndFlagsBits = sub_1005232CC(v228);
        sub_10096BDC0(v363);
        swift_bridgeObjectRelease();
        sub_1004A6318(v228);
        sub_10059A0E8(v346, v347, v226, v227);
        swift_bridgeObjectRelease();
        uint64_t result = (void *)sub_10002B770((uint64_t)v324, (uint64_t *)&unk_100AD6F70);
        uint64_t v190 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))v332;
        unint64_t v191 = (unint64_t)v336;
      }
      uint64_t v346 = 0x284449636F64;
      uint64_t v347 = (void *)0xE600000000000000;
      LODWORD(v344) = v329;
      goto LABEL_144;
    }
    uint64_t v183 = (uint64_t)v181 + 1;
    if (__OFADD__(v181, 1)) {
      goto LABEL_243;
    }
    if (v183 < (uint64_t)v318)
    {
      unint64_t v184 = *(void *)&v317[8 * v183];
      uint64_t v185 = (uint64_t)v181 + 1;
      if (v184) {
        goto LABEL_137;
      }
      uint64_t v185 = (uint64_t)v181 + 2;
      if ((uint64_t)((char *)v181 + 2) < (uint64_t)v318)
      {
        unint64_t v184 = *(void *)&v317[8 * v185];
        if (v184) {
          goto LABEL_137;
        }
        uint64_t v185 = (uint64_t)v181 + 3;
        if ((uint64_t)((char *)v181 + 3) < (uint64_t)v318)
        {
          unint64_t v184 = *(void *)&v317[8 * v185];
          if (!v184)
          {
            uint64_t v186 = (char *)v181 + 4;
            if ((uint64_t)((char *)v181 + 4) < (uint64_t)v318)
            {
              unint64_t v184 = *(void *)&v317[8 * (void)v186];
              if (v184)
              {
                uint64_t v185 = (uint64_t)v181 + 4;
                goto LABEL_137;
              }
              while (1)
              {
                uint64_t v185 = (uint64_t)(v186 + 1);
                if (__OFADD__(v186, 1)) {
                  goto LABEL_248;
                }
                if (v185 >= (uint64_t)v318) {
                  break;
                }
                unint64_t v184 = *(void *)&v317[8 * v185];
                ++v186;
                if (v184) {
                  goto LABEL_137;
                }
              }
            }
            goto LABEL_157;
          }
LABEL_137:
          uint64_t v322 = (v184 - 1) & v184;
          NSFileProviderItemIdentifier v323 = (NSFileProviderItemIdentifier)v185;
          unint64_t v182 = __clz(__rbit64(v184)) + (v185 << 6);
          goto LABEL_138;
        }
      }
    }
LABEL_157:
    swift_release();
    uint64_t v229 = (uint64_t *)(v292 + qword_100B0B338);
    swift_beginAccess();
    uint64_t v230 = *v229;
    uint64_t v231 = *(void *)(*v229 + 64);
    uint64_t v327 = *v229 + 64;
    uint64_t v232 = 1 << *(unsigned char *)(v230 + 32);
    uint64_t v233 = -1;
    if (v232 < 64) {
      uint64_t v233 = ~(-1 << v232);
    }
    unint64_t v234 = v233 & v231;
    *(void *)&long long v328 = (unint64_t)(v232 + 63) >> 6;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v235 = 0;
    __int16 v326 = result;
    do
    {
LABEL_161:
      if (v234)
      {
        unint64_t v236 = __clz(__rbit64(v234));
        v234 &= v234 - 1;
        unint64_t v237 = v236 | (v235 << 6);
      }
      else
      {
        BOOL v238 = __OFADD__(v235++, 1);
        if (v238) {
          goto LABEL_244;
        }
        if (v235 >= (uint64_t)v328) {
          goto LABEL_191;
        }
        unint64_t v239 = *(void *)(v327 + 8 * v235);
        if (!v239)
        {
          uint64_t v240 = v235 + 1;
          if (v235 + 1 >= (uint64_t)v328) {
            goto LABEL_191;
          }
          unint64_t v239 = *(void *)(v327 + 8 * v240);
          if (!v239)
          {
            uint64_t v240 = v235 + 2;
            if (v235 + 2 >= (uint64_t)v328) {
              goto LABEL_191;
            }
            unint64_t v239 = *(void *)(v327 + 8 * v240);
            if (!v239)
            {
              uint64_t v240 = v235 + 3;
              if (v235 + 3 >= (uint64_t)v328) {
                goto LABEL_191;
              }
              unint64_t v239 = *(void *)(v327 + 8 * v240);
              if (!v239)
              {
                while (1)
                {
                  uint64_t v235 = v240 + 1;
                  if (__OFADD__(v240, 1)) {
                    goto LABEL_249;
                  }
                  if (v235 >= (uint64_t)v328) {
                    break;
                  }
                  unint64_t v239 = *(void *)(v327 + 8 * v235);
                  ++v240;
                  if (v239) {
                    goto LABEL_173;
                  }
                }
LABEL_191:
                swift_release();
                uint64_t v257 = (uint64_t *)(v292 + qword_100B0B330);
                swift_beginAccess();
                uint64_t v352 = *v257;
                uint64_t v258 = *(void *)(v352 + 16);
                if (v258)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v259 = 32;
                  do
                  {
                    unint64_t v260 = *(void *)(v352 + v259);
                    uint64_t v261 = v330[3];
                    uint64_t v262 = v330[4];
                    sub_10002689C(v330, v261);
                    uint64_t v342 = 0;
                    int v343 = (void *)0xE000000000000000;
                    sub_1000CE628(v260);
                    sub_10096CBD0(20);
                    swift_bridgeObjectRelease();
                    uint64_t v342 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))0xD000000000000012;
                    int v343 = (void *)0x80000001009A3D80;
                    v370._int countAndFlagsBits = sub_1005232CC(v260);
                    sub_10096BDC0(v370);
                    swift_bridgeObjectRelease();
                    sub_10059A0E8((uint64_t)v342, v343, v261, v262);
                    swift_bridgeObjectRelease();
                    sub_1004A6318(v260);
                    v259 += 24;
                    --v258;
                  }
                  while (v258);
                  swift_bridgeObjectRelease();
                }
                id v263 = (uint64_t *)(v292 + qword_100B0B340);
                swift_beginAccess();
                uint64_t v264 = *v263;
                uint64_t v265 = *(void *)(v264 + 56);
                id v337 = (void *)(v264 + 56);
                uint64_t v266 = 1 << *(unsigned char *)(v264 + 32);
                uint64_t v267 = -1;
                if (v266 < 64) {
                  uint64_t v267 = ~(-1 << v266);
                }
                unint64_t v268 = v267 & v265;
                uint64_t v352 = (unint64_t)(v266 + 63) >> 6;
                swift_bridgeObjectRetain();
                uint64_t v269 = 0;
                while (1)
                {
                  if (v268)
                  {
                    unint64_t v270 = __clz(__rbit64(v268));
                    v268 &= v268 - 1;
                    unint64_t v271 = v270 | (v269 << 6);
                    uint64_t result = v330;
                  }
                  else
                  {
                    BOOL v238 = __OFADD__(v269++, 1);
                    uint64_t result = v330;
                    if (v238) {
                      goto LABEL_245;
                    }
                    if (v269 >= v352) {
                      goto LABEL_216;
                    }
                    unint64_t v275 = v337[v269];
                    if (!v275)
                    {
                      uint64_t v276 = v269 + 1;
                      if (v269 + 1 >= v352) {
                        goto LABEL_216;
                      }
                      unint64_t v275 = v337[v276];
                      if (!v275)
                      {
                        uint64_t v276 = v269 + 2;
                        if (v269 + 2 >= v352) {
                          goto LABEL_216;
                        }
                        unint64_t v275 = v337[v276];
                        if (!v275)
                        {
                          uint64_t v276 = v269 + 3;
                          if (v269 + 3 >= v352) {
                            goto LABEL_216;
                          }
                          unint64_t v275 = v337[v276];
                          if (!v275)
                          {
                            while (1)
                            {
                              uint64_t v269 = v276 + 1;
                              if (__OFADD__(v276, 1)) {
                                goto LABEL_250;
                              }
                              if (v269 >= v352) {
                                break;
                              }
                              unint64_t v275 = v337[v269];
                              ++v276;
                              if (v275) {
                                goto LABEL_211;
                              }
                            }
LABEL_216:
                            swift_release();
                            id v277 = (uint64_t *)(v292 + qword_100B0B348);
                            swift_beginAccess();
                            uint64_t v278 = *v277;
                            uint64_t v279 = *(void *)(v278 + 56);
                            id v337 = (void *)(v278 + 56);
                            uint64_t v280 = 1 << *(unsigned char *)(v278 + 32);
                            uint64_t v281 = -1;
                            if (v280 < 64) {
                              uint64_t v281 = ~(-1 << v280);
                            }
                            unint64_t v282 = v281 & v279;
                            uint64_t v352 = (unint64_t)(v280 + 63) >> 6;
                            swift_bridgeObjectRetain();
                            uint64_t v283 = 0;
                            while (1)
                            {
                              if (v282)
                              {
                                unint64_t v284 = __clz(__rbit64(v282));
                                v282 &= v282 - 1;
                                unint64_t v285 = v284 | (v283 << 6);
                                uint64_t result = v330;
                              }
                              else
                              {
                                BOOL v238 = __OFADD__(v283++, 1);
                                uint64_t result = v330;
                                if (v238) {
                                  goto LABEL_246;
                                }
                                if (v283 >= v352) {
                                  return (void *)swift_release();
                                }
                                unint64_t v289 = v337[v283];
                                if (!v289)
                                {
                                  uint64_t v290 = v283 + 1;
                                  if (v283 + 1 >= v352) {
                                    return (void *)swift_release();
                                  }
                                  unint64_t v289 = v337[v290];
                                  if (!v289)
                                  {
                                    uint64_t v290 = v283 + 2;
                                    if (v283 + 2 >= v352) {
                                      return (void *)swift_release();
                                    }
                                    unint64_t v289 = v337[v290];
                                    if (!v289)
                                    {
                                      uint64_t v290 = v283 + 3;
                                      if (v283 + 3 >= v352) {
                                        return (void *)swift_release();
                                      }
                                      unint64_t v289 = v337[v290];
                                      if (!v289)
                                      {
                                        while (1)
                                        {
                                          uint64_t v283 = v290 + 1;
                                          if (__OFADD__(v290, 1)) {
                                            goto LABEL_251;
                                          }
                                          if (v283 >= v352) {
                                            return (void *)swift_release();
                                          }
                                          unint64_t v289 = v337[v283];
                                          ++v290;
                                          if (v289) {
                                            goto LABEL_232;
                                          }
                                        }
                                      }
                                    }
                                  }
                                  uint64_t v283 = v290;
                                }
LABEL_232:
                                unint64_t v282 = (v289 - 1) & v289;
                                unint64_t v285 = __clz(__rbit64(v289)) + (v283 << 6);
                              }
                              unint64_t v286 = *(void *)(*(void *)(v278 + 48) + 8 * v285);
                              uint64_t v287 = result[3];
                              uint64_t v288 = result[4];
                              sub_10002689C(result, v287);
                              uint64_t v338 = 0;
                              Swift::String v339 = (void *)0xE000000000000000;
                              sub_1000CE628(v286);
                              sub_10096CBD0(17);
                              swift_bridgeObjectRelease();
                              uint64_t v338 = 0x6972726162205046;
                              Swift::String v339 = (void *)0xEF20726F66207265;
                              v372._int countAndFlagsBits = sub_1005232CC(v286);
                              sub_10096BDC0(v372);
                              swift_bridgeObjectRelease();
                              sub_10059A0E8(v338, v339, v287, v288);
                              swift_bridgeObjectRelease();
                              sub_1004A6318(v286);
                            }
                          }
                        }
                      }
                      uint64_t v269 = v276;
                    }
LABEL_211:
                    unint64_t v268 = (v275 - 1) & v275;
                    unint64_t v271 = __clz(__rbit64(v275)) + (v269 << 6);
                  }
                  unint64_t v272 = *(void *)(*(void *)(v264 + 48) + 8 * v271);
                  uint64_t v273 = result[3];
                  uint64_t v274 = result[4];
                  sub_10002689C(result, v273);
                  uint64_t v340 = 0;
                  unsigned __int8 v341 = (void *)0xE000000000000000;
                  sub_1000CE628(v272);
                  sub_10096CBD0(17);
                  swift_bridgeObjectRelease();
                  uint64_t v340 = 0x6972726162205346;
                  unsigned __int8 v341 = (void *)0xEF20726F66207265;
                  v371._int countAndFlagsBits = sub_1005232CC(v272);
                  sub_10096BDC0(v371);
                  swift_bridgeObjectRelease();
                  sub_10059A0E8(v340, v341, v273, v274);
                  swift_bridgeObjectRelease();
                  sub_1004A6318(v272);
                }
              }
            }
          }
          uint64_t v235 = v240;
        }
LABEL_173:
        unint64_t v234 = (v239 - 1) & v239;
        unint64_t v237 = __clz(__rbit64(v239)) + (v235 << 6);
      }
      uint64_t v241 = *(void **)(result[7] + 8 * v237);
      uint64_t v242 = v241[2];
    }
    while (!v242);
    *(void *)&long long v331 = v234;
    *(void *)&long long v332 = v235;
    uint64_t v243 = result[6] + 16 * v237;
    unint64_t v244 = *(unsigned int (***)(uint64_t *, uint64_t, uint64_t))v243;
    int v245 = *(unsigned __int8 *)(v243 + 8);
    swift_bridgeObjectRetain();
    id v336 = v244;
    uint64_t v246 = 0x6873617274;
    if (!v244) {
      uint64_t v246 = 1953460082;
    }
    *(void *)&long long v334 = v246;
    unint64_t v247 = (_OWORD *)0xE500000000000000;
    if (!v244) {
      unint64_t v247 = (_OWORD *)0xE400000000000000;
    }
    unint64_t v333 = v247;
    __n128 v329 = (char *)v241;
    int64_t v248 = v241 + 8;
    LODWORD(v335) = v245;
    while (1)
    {
      unint64_t v251 = *(v248 - 4);
      uint64_t v252 = sub_1004BE7F0(*((unsigned char *)v248 - 24));
      uint64_t v253 = (*(uint64_t (**)(void))(v252 + 176))();
      uint64_t v255 = v254;
      uint64_t v256 = v330[3];
      uint64_t v352 = v330[4];
      id v337 = sub_10002689C(v330, v256);
      if (v245)
      {
        if (v245 != 1)
        {
          sub_1000CE628(v251);
          swift_retain();
          uint64_t v249 = v334;
          uint64_t v250 = v333;
          goto LABEL_182;
        }
        uint64_t v344 = 0x284449656C6966;
        uint64_t v345 = (_OWORD *)0xE700000000000000;
        uint64_t v342 = v336;
        sub_1000CE628(v251);
        swift_retain();
      }
      else
      {
        uint64_t v344 = 0x284449636F64;
        uint64_t v345 = (_OWORD *)0xE600000000000000;
        LODWORD(v342) = v336;
        sub_1000CE628(v251);
        swift_retain();
      }
      v364._int countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v364);
      int v245 = v335;
      swift_bridgeObjectRelease();
      v365._int countAndFlagsBits = 41;
      v365._object = (void *)0xE100000000000000;
      sub_10096BDC0(v365);
      uint64_t v249 = v344;
      uint64_t v250 = v345;
LABEL_182:
      uint64_t v344 = v249;
      uint64_t v345 = v250;
      v366._int countAndFlagsBits = 8250;
      v366._object = (void *)0xE200000000000000;
      sub_10096BDC0(v366);
      v367._int countAndFlagsBits = v253;
      v367._object = v255;
      sub_10096BDC0(v367);
      swift_bridgeObjectRelease();
      v368._int countAndFlagsBits = 0x20726F6620;
      v368._object = (void *)0xE500000000000000;
      sub_10096BDC0(v368);
      v369._int countAndFlagsBits = sub_1005232CC(v251);
      sub_10096BDC0(v369);
      swift_bridgeObjectRelease();
      sub_10059A0E8(v344, v345, v256, v352);
      swift_bridgeObjectRelease();
      sub_1004A6318(v251);
      swift_release();
      v248 += 5;
      if (!--v242)
      {
        swift_bridgeObjectRelease();
        uint64_t result = v326;
        uint64_t v235 = v332;
        unint64_t v234 = v331;
        goto LABEL_161;
      }
    }
  }
  uint64_t v64 = v52 + *(int *)(v63 + 48);
  uint64_t v65 = *(void *)v52;
  LODWORD(v317) = *(unsigned __int8 *)(v52 + 8);
  uint64_t v66 = v319;
  sub_10001AE98(v64, (uint64_t)v319, &qword_100ACCA78);
  int64_t v67 = *(void *)&v66[*(int *)(v298 + 56)];
  uint64_t v68 = *(void *)(v67 + 64);
  uint64_t v303 = v67 + 64;
  uint64_t v69 = 1 << *(unsigned char *)(v67 + 32);
  if (v69 < 64) {
    uint64_t v70 = ~(-1 << v69);
  }
  else {
    uint64_t v70 = -1;
  }
  unint64_t v71 = v70 & v68;
  int64_t v308 = (unint64_t)(v69 + 63) >> 6;
  uint64_t v297 = v308 - 1;
  int64_t v316 = v67;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  uint64_t v322 = 0;
  uint64_t v313 = v65;
  uint64_t v72 = 0x6873617274;
  if (!v65) {
    uint64_t v72 = 1953460082;
  }
  uint64_t v305 = v72;
  unint64_t v73 = 0xE500000000000000;
  if (!v65) {
    unint64_t v73 = 0xE400000000000000;
  }
  char v304 = (void *)v73;
  while (1)
  {
    if (v71)
    {
      *(void *)&long long v331 = (v71 - 1) & v71;
      unint64_t v76 = __clz(__rbit64(v71)) | (v322 << 6);
LABEL_40:
      uint64_t v77 = v314;
      sub_10002B70C(*(void *)(v316 + 56) + *(void *)(v314 + 72) * v76, (uint64_t)v43, (uint64_t *)&unk_100ACC9B0);
      uint64_t v78 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v77 + 56);
      ((void (*)(void **, void, uint64_t, void *))v78)(v43, 0, 1, v42);
      goto LABEL_62;
    }
    int64_t v79 = v322 + 1;
    if (__OFADD__(v322, 1)) {
      goto LABEL_240;
    }
    if (v79 < v308)
    {
      unint64_t v80 = *(void *)(v303 + 8 * v79);
      if (v80) {
        goto LABEL_44;
      }
      uint64_t v81 = v322 + 2;
      ++v322;
      if (v79 + 1 < v308)
      {
        unint64_t v80 = *(void *)(v303 + 8 * v81);
        if (v80) {
          goto LABEL_47;
        }
        uint64_t v322 = v79 + 1;
        if (v79 + 2 < v308)
        {
          unint64_t v80 = *(void *)(v303 + 8 * (v79 + 2));
          if (v80)
          {
            v79 += 2;
            goto LABEL_44;
          }
          uint64_t v322 = v79 + 2;
          if (v79 + 3 < v308)
          {
            unint64_t v80 = *(void *)(v303 + 8 * (v79 + 3));
            if (v80)
            {
              v79 += 3;
              goto LABEL_44;
            }
            uint64_t v81 = v79 + 4;
            uint64_t v322 = v79 + 3;
            if (v79 + 4 < v308) {
              break;
            }
          }
        }
      }
    }
LABEL_61:
    uint64_t v78 = *v336;
    ((void (*)(void **, uint64_t, uint64_t, void *))*v336)(v43, 1, 1, v42);
    *(void *)&long long v331 = 0;
LABEL_62:
    int64_t v82 = *(unsigned int (**)(void, void, void))v334;
    uint64_t v83 = 1;
    if ((*(unsigned int (**)(void **, uint64_t, void *))v334)(v43, 1, v42) != 1)
    {
      uint64_t v84 = *((int *)v42 + 16);
      uint64_t v85 = (char *)v43 + v84;
      *(void *)&long long v328 = *((int *)v42 + 20);
      uint64_t v86 = v43[1];
      uint64_t v87 = v309;
      *uint64_t v309 = *v43;
      v87[1] = v86;
      uint64_t v88 = (char *)v87 + v84;
      uint64_t v89 = sub_10096B7D0();
      uint64_t v90 = *(void (**)(void, void, void))(*(void *)(v89 - 8) + 32);
      v90(v88, v85, v89);
      uint64_t v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = *(_OWORD *)(v332 + v328);
      int v92 = *v87;
      uint64_t v93 = v87[1];
      NSFileProviderItemIdentifier v94 = v323;
      uint64_t v95 = (char *)v323 + *((int *)v337 + 16);
      id v96 = (NSFileProviderItemIdentifier)((char *)v323 + *((int *)v337 + 20));
      *NSFileProviderItemIdentifier v323 = v92;
      v94[1] = v93;
      uint64_t v97 = v88;
      uint64_t v43 = (void **)v332;
      v90(v95, v97, v89);
      uint64_t v42 = v337;
      a1 = v330;
      uint64_t v83 = 0;
      *id v96 = sub_1004A7B64;
      v96[1] = v91;
    }
    NSFileProviderItemIdentifier v98 = v323;
    ((void (*)(NSFileProviderItemIdentifier, uint64_t, uint64_t, void *))v78)(v323, v83, 1, v42);
    uint64_t v99 = (uint64_t)v98;
    uint64_t v100 = v318;
    sub_10001AE98(v99, (uint64_t)v318, (uint64_t *)&unk_100AD6480);
    if (v82(v100, 1, v42) == 1)
    {
      swift_release();
      uint64_t result = (void *)sub_10002B770((uint64_t)v319, &qword_100ACCA78);
      uint64_t v4 = v327;
      unint64_t v23 = v325;
      unint64_t v48 = v301;
      goto LABEL_6;
    }
    unint64_t v102 = *v100;
    unint64_t v101 = v100[1];
    uint64_t v103 = *((int *)v42 + 16);
    int64_t v104 = (char *)v100 + v103;
    uint64_t v105 = *((int *)v42 + 20);
    uint64_t v106 = v100;
    uint64_t v107 = v329;
    uint64_t v108 = &v329[v103];
    *(void *)__n128 v329 = v102;
    *((void *)v107 + 1) = v101;
    uint64_t v109 = sub_10096B7D0();
    unint64_t v110 = *(void (**)(void, void, void))(*(void *)(v109 - 8) + 32);
    long long v328 = *(_OWORD *)((char *)v106 + v105);
    v110(v108, v104, v109);
    *(_OWORD *)&v107[v105] = v328;
    uint64_t v112 = a1[3];
    uint64_t v111 = a1[4];
    sub_10002689C(a1, v112);
    if (!v317)
    {
      uint64_t v350 = 0x284449636F64;
      uint64_t v351 = (void *)0xE600000000000000;
      LODWORD(v348) = v313;
      sub_1000CE628(v102);
      goto LABEL_69;
    }
    if (v317 == 1)
    {
      uint64_t v350 = 0x284449656C6966;
      uint64_t v351 = (void *)0xE700000000000000;
      uint64_t v348 = v313;
      sub_1000CE628(v102);
LABEL_69:
      v355._int countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v355);
      swift_bridgeObjectRelease();
      v356._int countAndFlagsBits = 41;
      v356._object = (void *)0xE100000000000000;
      sub_10096BDC0(v356);
      uint64_t v113 = v350;
      uint64_t v114 = v351;
      uint64_t v42 = v337;
      goto LABEL_71;
    }
    uint64_t v42 = v337;
    sub_1000CE628(v102);
    uint64_t v113 = v305;
    uint64_t v114 = v304;
LABEL_71:
    uint64_t v350 = v113;
    uint64_t v351 = v114;
    v357._int countAndFlagsBits = 8250;
    v357._object = (void *)0xE200000000000000;
    sub_10096BDC0(v357);
    int v115 = *v319;
    if (*v319)
    {
      if (v115 == 1) {
        v75._int countAndFlagsBits = 0x7463697665;
      }
      else {
        v75._int countAndFlagsBits = 0xD000000000000013;
      }
      if (v115 == 1) {
        Swift::String v74 = (void *)0xE500000000000000;
      }
      else {
        Swift::String v74 = (void *)v312;
      }
    }
    else
    {
      Swift::String v74 = (void *)0xEB00000000657A69;
      v75._int countAndFlagsBits = 0x6C6169726574616DLL;
    }
    v75._object = v74;
    sub_10096BDC0(v75);
    swift_bridgeObjectRelease();
    v353._int countAndFlagsBits = 0x20726F6620;
    v353._object = (void *)0xE500000000000000;
    sub_10096BDC0(v353);
    v354._int countAndFlagsBits = sub_1005232CC(v102);
    sub_10096BDC0(v354);
    swift_bridgeObjectRelease();
    sub_1004A6318(v102);
    sub_10059A0E8(v350, v351, v112, v111);
    swift_bridgeObjectRelease();
    uint64_t result = (void *)sub_10002B770((uint64_t)v329, (uint64_t *)&unk_100ACC9B0);
    uint64_t v43 = (void **)v332;
    unint64_t v71 = v331;
  }
  unint64_t v80 = *(void *)(v303 + 8 * v81);
  if (v80)
  {
LABEL_47:
    int64_t v79 = v81;
LABEL_44:
    *(void *)&long long v331 = (v80 - 1) & v80;
    unint64_t v76 = __clz(__rbit64(v80)) + (v79 << 6);
    uint64_t v322 = v79;
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v79 = v81 + 1;
    if (__OFADD__(v81, 1)) {
      break;
    }
    if (v79 >= v308)
    {
      uint64_t v322 = v297;
      goto LABEL_61;
    }
    unint64_t v80 = *(void *)(v303 + 8 * v79);
    ++v81;
    if (v80) {
      goto LABEL_44;
    }
  }
LABEL_252:
  __break(1u);
LABEL_253:
  __break(1u);
  return result;
}

uint64_t sub_10049130C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_10002689C(a2, v6);
  sub_10059A0E8(0xD000000000000015, (void *)0x80000001009A3D40, v6, v7);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  sub_10002689C(a2, v8);
  sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1004A62BC, a1, v8, (uint64_t)&type metadata for () + 8, v9);
  (*(void (**)(void *, uint64_t))(**(void **)(a1 + 16) + 488))(a2, a3);
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  sub_10002689C(a2, v10);
  sub_10059A0E8(0, (void *)0xE000000000000000, v10, v11);
  (*(void (**)(void, void *))(**(void **)(a1 + 24) + 496))(0, a2);
  return sub_1004914B8(a2, a3, (void (*)(void *))sub_1004A62D8);
}

uint64_t sub_1004914B8(void *a1, int a2, void (*a3)(void *))
{
  uint64_t v20 = a3;
  uint64_t v4 = v3;
  int v19 = a2;
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)v3 + 632))();
  uint64_t v18 = 0;
  uint64_t v8 = a1[3];
  uint64_t v7 = a1[4];
  sub_10002689C(a1, v8);
  sub_10096CBD0(27);
  swift_bridgeObjectRelease();
  uint64_t v22 = 0x687370616E73202BLL;
  unint64_t v23 = 0xEB0000000020746FLL;
  uint64_t v9 = sub_10096BCD0();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  v24._int countAndFlagsBits = v9;
  v24._object = v11;
  sub_10096BDC0(v24);
  swift_bridgeObjectRelease();
  v25._int countAndFlagsBits = 10272;
  v25._object = (void *)0xE200000000000000;
  sub_10096BDC0(v25);
  uint64_t v21 = v6;
  sub_10014D284();
  v26._int countAndFlagsBits = sub_10096C9C0();
  sub_10096BDC0(v26);
  swift_bridgeObjectRelease();
  v27._int countAndFlagsBits = 0x73656972746E6520;
  v27._object = (void *)0xEA00000000003A29;
  sub_10096BDC0(v27);
  sub_10059A0E8(0x687370616E73202BLL, (void *)0xEB0000000020746FLL, v8, v7);
  swift_bridgeObjectRelease();
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v14 = sub_10002689C(a1, v12);
  __chkstk_darwin(v14);
  v16[16] = v19 & 1;
  uint64_t v17 = v4;
  return sub_10059A1B8(8224, 0xE200000000000000, v20, (uint64_t)v16, v12, (uint64_t)&type metadata for () + 8, v13);
}

uint64_t sub_1004916FC(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 32) + 16);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 96))(&v8);
  uint64_t v4 = v8;
  char v5 = v9;
  swift_retain();
  uint64_t v6 = sub_1004588C0(a1, v4, v5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v3 + 104))(&v8, v6);
  sub_1004588C0(a1, v8, v9);
  return swift_release();
}

uint64_t sub_1004917C4(void *a1, uint64_t a2)
{
  uint64_t v3 = (_OWORD *)(a2 + qword_100ADA000);
  swift_beginAccess();
  long long v4 = v3[1];
  v7[0] = *v3;
  v7[1] = v4;
  long long v5 = v3[3];
  v7[2] = v3[2];
  v7[3] = v5;
  sub_1004A61D8((uint64_t)v7);
  sub_10048A554(a1, (uint64_t *)&unk_100AD6440, sub_1008D563C, (void (*)(void *))sub_1004A6284, (void (*)(void *))sub_1004A62A0);
  return sub_1004A6230((uint64_t)v7);
}

uint64_t sub_10049188C(void *a1, uint64_t a2, int a3)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_10002689C(a1, v6);
  sub_10059A0E8(0, (void *)0xE000000000000000, v6, v7);
  (*(void (**)(uint64_t, void *))(**(void **)(a2 + 24) + 496))(1, a1);
  return sub_1004914B8(a1, a3, (void (*)(void *))sub_1004A6114);
}

void sub_10049195C(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 40) + 16);
  (*(void (**)(void **__return_ptr))(*(void *)v3 + 96))(&v6);
  long long v4 = v6;
  swift_retain();
  sub_100458568(a1, (uint64_t)v4);

  (*(void (**)(void **__return_ptr))(*(void *)v3 + 104))(&v6);
  long long v5 = v6;
  sub_100458568(a1, (uint64_t)v6);
  swift_release();
}

uint64_t sub_100491A24(uint64_t a1, void *a2, void *a3, void *a4, void (*a5)(void *))
{
  char v9 = (unsigned char *)(a1 + *a3);
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v9 + 16) || v9[16] != 2 || (v9[49] & 1) != 0 || (v9[48] & 1) != 0 || v9[50])
  {
    uint64_t v11 = a2[3];
    uint64_t v12 = a2[4];
    sub_10002689C(a2, v11);
    sub_10059A0E8(0x73746E657665202BLL, a4, v11, v12);
    uint64_t v13 = a2[3];
    uint64_t v14 = a2[4];
    sub_10002689C(a2, v13);
    return sub_10059A1B8(8224, 0xE200000000000000, a5, a1, v13, (uint64_t)&type metadata for () + 8, v14);
  }
  return result;
}

uint64_t sub_100491B48(void *a1, uint64_t a2)
{
  uint64_t v3 = (_OWORD *)(a2 + qword_100ADA008);
  swift_beginAccess();
  long long v4 = v3[1];
  v7[0] = *v3;
  v7[1] = v4;
  long long v5 = v3[3];
  v7[2] = v3[2];
  v7[3] = v5;
  sub_1004A61D8((uint64_t)v7);
  sub_10048A554(a1, (uint64_t *)&unk_100AD73D0, sub_1008D563C, (void (*)(void *))sub_1004A60F8, (void (*)(void *))sub_1004A7B68);
  return sub_1004A6230((uint64_t)v7);
}

void *sub_100491C10(uint64_t a1, int a2)
{
  int v40 = a2;
  uint64_t v39 = a1;
  uint64_t v3 = sub_10096B3D0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v13);
  uint64_t v42 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  uint64_t v38 = v12;
  sub_10002B70C((uint64_t)v12, (uint64_t)v10, &qword_100AD0830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    id v16 = v15;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v10, &qword_100AD0830);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  }
  uint64_t v17 = v6;
  uint64_t v18 = v42;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v42, v17, v3);
  uint64_t v36 = *(int *)(v13 + 20);
  *(void *)&v18[v36] = v15;
  int v19 = &v18[*(int *)(v13 + 24)];
  *(void *)int v19 = "SQLDB: Scan ignored items";
  *((void *)v19 + 1) = 25;
  uint64_t v37 = v19;
  v19[16] = 2;
  id v20 = v15;
  sub_10096C770();
  sub_10096B3A0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
  sub_10002B770((uint64_t)v38, &qword_100AD0830);
  uint64_t v21 = v41;
  uint64_t v22 = *(void **)(v41 + 24);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v39;
  *(void *)(v23 + 16) = v21;
  *(void *)(v23 + 24) = v24;
  *(unsigned char *)(v23 + 32) = v40 & 1;
  *(void *)(v23 + 40) = 200;
  Swift::String v25 = (void *)swift_allocObject();
  v25[2] = sub_1004A5BA0;
  v25[3] = v23;
  v44[4] = sub_1001F8FDC;
  v44[5] = v25;
  v44[0] = _NSConcreteStackBlock;
  v44[1] = (id)1107296256;
  v44[2] = sub_10017090C;
  v44[3] = &unk_100A8AC00;
  Swift::String v26 = _Block_copy(v44);
  swift_retain();
  swift_retain();
  swift_release();
  v44[0] = 0;
  id v27 = [v22 fetchSwift:v26 error:v44];
  _Block_release(v26);
  id v28 = v44[0];
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v17) {
    __break(1u);
  }
  uint64_t v41 = v23;
  if (v27)
  {
    if ([v27 next])
    {
      Swift::String v25 = _swiftEmptyArrayStorage;
      while (1)
      {
        [v27 longAtIndex:0];
        uint64_t v30 = sub_1003FE04C();
        sub_10054AAD4(v27, v30, 1, (uint64_t)v44);
        if (v2) {
          break;
        }
        swift_bridgeObjectRelease();
        memcpy(v43, v44, sizeof(v43));
        sub_10035751C((uint64_t)v43);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::String v25 = sub_1006A4410(0, v25[2] + 1, 1, v25);
        }
        unint64_t v32 = v25[2];
        unint64_t v31 = v25[3];
        if (v32 >= v31 >> 1) {
          Swift::String v25 = sub_1006A4410((void *)(v31 > 1), v32 + 1, 1, v25);
        }
        v25[2] = v32 + 1;
        memcpy(&v25[62 * v32 + 4], v43, 0x1F0uLL);
        sub_1000D3440((uint64_t)v43);
        if (([v27 next] & 1) == 0) {
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      Swift::String v25 = _swiftEmptyArrayStorage;
LABEL_19:
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  sub_10096C760();
  uint64_t v33 = (uint64_t)v42;
  sub_10096B3A0();
  sub_1004A6FF0(v33, type metadata accessor for Signpost);
  swift_release();
  return v25;
}

uint64_t sub_1004922D0(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_10096CBD0(121);
  v24._int countAndFlagsBits = 0x72205443454C4553;
  v24._object = (void *)0xEE00202C4449776FLL;
  sub_10096BDC0(v24);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v10 = *(void **)(a2 + 64);
  swift_bridgeObjectRetain();
  v25._int countAndFlagsBits = v11;
  v25._object = v10;
  sub_10096BDC0(v25);
  swift_bridgeObjectRelease();
  v26._int countAndFlagsBits = 0xD00000000000003ALL;
  v26._object = (void *)0x80000001009A3C00;
  sub_10096BDC0(v26);
  v27._int countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v27);
  swift_bridgeObjectRelease();
  v28._int countAndFlagsBits = 2314861410284020000;
  v28._object = (void *)0xED000020444E4120;
  sub_10096BDC0(v28);
  if (a4)
  {
    uint64_t v18 = (void *)0xE100000000000000;
    v17._int countAndFlagsBits = 49;
  }
  else
  {
    id v12 = a1;
    id v13 = [v12 bindLongParameter:a3];
    uint64_t v14 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v16 = v15;

    v29._int countAndFlagsBits = v14;
    v29._object = v16;
    sub_10096BDC0(v29);

    swift_bridgeObjectRelease();
    v17._int countAndFlagsBits = 0x203E204449776F72;
    uint64_t v18 = (void *)0xE800000000000000;
  }
  v17._object = v18;
  sub_10096BDC0(v17);
  swift_bridgeObjectRelease();
  v30._object = (void *)0x80000001009A3C40;
  v30._int countAndFlagsBits = 0xD00000000000001CLL;
  sub_10096BDC0(v30);
  id v19 = [a1 bindLongParameter:a5];
  uint64_t v20 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v22 = v21;

  v31._int countAndFlagsBits = v20;
  v31._object = v22;
  sub_10096BDC0(v31);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100492500()
{
  uint64_t v1 = *(void **)(v0 + 24);
  aBlock[4] = sub_100750C40;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A8AC28;
  uint64_t v2 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  id v3 = [v1 fetchSwift:v2 error:aBlock];
  _Block_release(v2);
  id v4 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v3)
  {
    LOBYTE(v4) = [v3 next];
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  return v4 & 1;
}

uint64_t sub_100492668(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  if (a2)
  {
    swift_errorRetain();
    a7(a1);
    return sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_release);
  }
  else if (a1)
  {
    id v19 = a4;
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = a3;
    v15[3] = a4;
    v15[4] = a5;
    v15[5] = a6;
    v15[6] = a7;
    v15[7] = a8;
    id v16 = *(void (**)(void **, uint64_t, void, void, uint64_t, uint64_t, uint64_t (*)(), void *))(*(void *)a3 + 144);
    sub_1000D5B30(a1, 0);
    sub_1000D5B30(a1, 0);
    id v17 = a4;
    swift_retain();
    swift_retain();
    swift_retain();
    v16(&v19, a1, 0, 0, a5, a6, sub_1004A6070, v15);
    swift_release();
    sub_10042EAB4(a1, 0, (uint64_t (*)(void))&_swift_release);
    return sub_10042EAB4(a1, 0, (uint64_t (*)(void))&_swift_release);
  }
  else
  {
    return ((uint64_t (*)(void))a7)(0);
  }
}

uint64_t sub_100492808(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), uint64_t a9)
{
  if (a2)
  {
    swift_errorRetain();
    a8(a1);
    return sub_10042EAB4(a1, 1, (uint64_t (*)(void))&_swift_release);
  }
  else if (a1)
  {
    uint64_t v19 = a4;
    char v20 = a5;
    uint64_t v17 = a4;
    LOBYTE(v18) = a5;
    uint64_t v14 = (void *)swift_allocObject();
    void v14[2] = a3;
    sub_1000D3184((uint64_t)&v17, (uint64_t)(v14 + 3));
    v14[5] = a6;
    v14[6] = a7;
    v14[7] = a8;
    v14[8] = a9;
    uint64_t v15 = *(void (**)(uint64_t *, uint64_t, void, void, uint64_t, uint64_t, uint64_t (*)(), void *, uint64_t, int))(*(void *)a3 + 144);
    sub_1000D5B30(a1, 0);
    sub_1000D5B30(a1, 0);
    swift_retain();
    swift_retain();
    swift_retain();
    v15(&v19, a1, 0, 0, a6, a7, sub_1004A5ED0, v14, v17, v18);
    swift_release();
    sub_10042EAB4(a1, 0, (uint64_t (*)(void))&_swift_release);
    return sub_10042EAB4(a1, 0, (uint64_t (*)(void))&_swift_release);
  }
  else
  {
    return ((uint64_t (*)(void))a8)(0);
  }
}

uint64_t sub_1004929B0(unint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_10096CE70();
    if (v4) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_23;
  }
LABEL_3:
  uint64_t v5 = (void **)(a2 + 2);
  uint64_t v28 = v3;
  unint64_t v29 = v3 & 0xC000000000000001;
  uint64_t v6 = 4;
  while (1)
  {
    if (v29) {
      uint64_t v9 = (void *)sub_10096CC30();
    }
    else {
      uint64_t v9 = *(id *)(v3 + 8 * v6);
    }
    a2 = v9;
    uint64_t v10 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v3 = v4;
    id v11 = [v9 itemID];
    id v12 = [v11 identifier];

    swift_beginAccess();
    id v13 = a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a2 = *v5;
    Swift::String v30 = *v5;
    *uint64_t v5 = (void *)0x8000000000000000;
    unint64_t v16 = sub_10031F918(v12);
    uint64_t v17 = a2[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      goto LABEL_20;
    }
    char v20 = v15;
    if (a2[3] < v19) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_10091C1A8();
    }
LABEL_16:
    a2 = (void *)(8 * v16);
    if (v20)
    {
      uint64_t v7 = v30[7];

      *(void *)(v7 + 8 * v16) = v13;
    }
    else
    {
      v30[(v16 >> 6) + 8] |= 1 << v16;
      *(void *)(v30[6] + 8 * v16) = v12;
      *(void *)(v30[7] + 8 * v16) = v13;
      uint64_t v23 = v30[2];
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        goto LABEL_21;
      }
      v30[2] = v25;
      id v26 = v12;
    }
    *uint64_t v5 = v30;

    swift_bridgeObjectRelease();
    swift_endAccess();

    ++v6;
    uint64_t v4 = v3;
    BOOL v8 = v10 == v3;
    uint64_t v3 = v28;
    if (v8) {
      goto LABEL_23;
    }
  }
  sub_100372F94(v19, isUniquelyReferenced_nonNull_native);
  uint64_t v21 = sub_10031F918(v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    goto LABEL_16;
  }
  type metadata accessor for NSFileProviderItemIdentifier(0);
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

uint64_t sub_100492C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VFSItem(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)v37 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return 0;
  }
  id v12 = (void *)(a2 + 16);
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v14 = *(void *)(v8 + 72);
  v37[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v38 = v10;
  while (1)
  {
    uint64_t v39 = v11;
    sub_1004A6134(v13, (uint64_t)v10, type metadata accessor for VFSItem);
    Swift::UInt64 v16 = *(void *)v10;
    char v17 = v10[8];
    swift_beginAccess();
    uint64_t v18 = (uint64_t)v10;
    uint64_t v19 = (uint64_t)v7;
    sub_1004A6134(v18, (uint64_t)v7, type metadata accessor for VFSItem);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int v40 = (void *)*v12;
    uint64_t v21 = v40;
    *id v12 = 0x8000000000000000;
    unint64_t v23 = sub_10031F858(v16, v17);
    uint64_t v24 = v21[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      break;
    }
    char v27 = v22;
    if (v21[3] >= v26)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        Swift::String v30 = v40;
        if (v22) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_100920154();
        Swift::String v30 = v40;
        if (v27) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_10037A6CC(v26, isUniquelyReferenced_nonNull_native);
      unint64_t v28 = sub_10031F858(v16, v17);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_20;
      }
      unint64_t v23 = v28;
      Swift::String v30 = v40;
      if (v27)
      {
LABEL_3:
        uint64_t v15 = v30[7] + v23 * v14;
        uint64_t v7 = (char *)v19;
        sub_1004A5F58(v19, v15);
        goto LABEL_4;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    uint64_t v31 = v30[6] + 16 * v23;
    *(void *)uint64_t v31 = v16;
    *(unsigned char *)(v31 + 8) = v17;
    uint64_t v32 = v30[7] + v23 * v14;
    uint64_t v7 = (char *)v19;
    sub_100011454(v19, v32, type metadata accessor for VFSItem);
    uint64_t v33 = v30[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_19;
    }
    v30[2] = v35;
LABEL_4:
    *id v12 = v30;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v10 = v38;
    sub_1004A6FF0((uint64_t)v38, type metadata accessor for VFSItem);
    v13 += v14;
    uint64_t v11 = v39 - 1;
    if (v39 == 1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

void sub_100492F18(void *a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v9 - 8);
  uint64_t v38 = (unsigned __int8 *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a3 itemID];
  id v12 = [v11 identifier];

  BOOL v34 = a2;
  unint64_t v13 = (unint64_t)sub_1004581D0(v12);

  if (!(v13 >> 62))
  {
    uint64_t v40 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v40) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_10096CE70();
  swift_bridgeObjectRelease();
  uint64_t v40 = v32;
  if (!v32) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v42 = a4 + 1;
  if (__OFADD__(a4, 1))
  {
    __break(1u);
  }
  else if (v40 >= 1)
  {
    uint64_t v39 = v4;
    uint64_t v14 = 0;
    unint64_t v41 = v13 & 0xC000000000000001;
    uint64_t v37 = (void *)0x80000001009A3D00;
    uint64_t v33 = (char *)&type metadata for () + 8;
    uint64_t v15 = v40;
    uint64_t v35 = (void *)v13;
    uint64_t v36 = a1;
    do
    {
      if (v41) {
        id v16 = (id)sub_10096CC30();
      }
      else {
        id v16 = *(id *)(v13 + 8 * v14 + 32);
      }
      char v17 = v16;
      uint64_t v43 = v17;
      uint64_t v19 = a1[3];
      uint64_t v20 = a1[4];
      sub_10002689C(a1, v19);
      if (v42 >= 201)
      {
        sub_10059A0E8(0xD000000000000018, v37, v19, v20);
      }
      else
      {
        id v21 = [v17 description];
        uint64_t v22 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v24 = v23;

        sub_10059A0E8(v22, v24, v19, v20);
        swift_bridgeObjectRelease();
        BOOL v25 = v38;
        FPItem.metadata.getter((uint64_t)v38);
        int v26 = *v25;
        sub_1004A6FF0((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        a1 = v36;
        if (v26 == 1)
        {
          uint64_t v27 = v36[3];
          uint64_t v28 = v36[4];
          char v29 = sub_10002689C(v36, v27);
          __chkstk_darwin(v29);
          uint64_t v30 = (uint64_t)v33;
          *(&v33 - 4) = v34;
          *(&v33 - 3) = (char *)&v43;
          *(&v33 - 2) = (char *)v42;
          uint64_t v31 = v39;
          sub_10059A1B8(32, 0xE100000000000000, (void (*)(void *))sub_1004A7A70, (uint64_t)(&v33 - 6), v27, v30, v28);
          uint64_t v39 = v31;
        }
        unint64_t v13 = (unint64_t)v35;
        uint64_t v15 = v40;
      }
      ++v14;
    }
    while (v15 != v14);
    goto LABEL_17;
  }
  __break(1u);
}

void *sub_100493274(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = type metadata accessor for VFSItem(0);
  uint64_t v9 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)a3;
  char v13 = *(unsigned char *)(a3 + 8);
  uint64_t v30 = a2;
  uint64_t result = sub_100458390(v12, v13);
  uint64_t v15 = result[2];
  if (!v15) {
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v34 = a4 + 1;
  if (__OFADD__(a4, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v33 = v4;
    unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v28 = result;
    uint64_t v17 = (uint64_t)result + v16;
    uint64_t v35 = *(void *)(v9 + 72);
    uint64_t v31 = (void *)0x80000001009A3D00;
    char v29 = (char *)&type metadata for () + 8;
    uint64_t v18 = v34;
    do
    {
      sub_1004A6134(v17, (uint64_t)v11, type metadata accessor for VFSItem);
      uint64_t v20 = a1[3];
      uint64_t v19 = a1[4];
      sub_10002689C(a1, v20);
      if (v18 >= 201)
      {
        sub_10059A0E8(0xD000000000000018, v31, v20, v19);
      }
      else
      {
        uint64_t v21 = sub_100262BFC();
        sub_10059A0E8(v21, v22, v20, v19);
        swift_bridgeObjectRelease();
        if (v11[*(int *)(v32 + 28)] == 1)
        {
          uint64_t v23 = a1[3];
          uint64_t v24 = a1[4];
          BOOL v25 = sub_10002689C(a1, v23);
          __chkstk_darwin(v25);
          uint64_t v26 = (uint64_t)v29;
          *(&v28 - 4) = v30;
          *(&v28 - 3) = v11;
          uint64_t v27 = v33;
          uint64_t v18 = v34;
          *(&v28 - 2) = (void *)v34;
          sub_10059A1B8(32, 0xE100000000000000, (void (*)(void *))sub_1004A7B40, (uint64_t)(&v28 - 6), v23, v26, v24);
          uint64_t v33 = v27;
        }
        else
        {
          uint64_t v18 = v34;
        }
      }
      sub_1004A6FF0((uint64_t)v11, type metadata accessor for VFSItem);
      v17 += v35;
      --v15;
    }
    while (v15);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10049352C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = sub_10002B7CC((uint64_t *)&unk_100AD6420);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_projectBox();
  sub_10002B70C(a1, (uint64_t)v7, (uint64_t *)&unk_100ACEC90);
  uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
  swift_beginAccess();
  sub_1000148B8((uint64_t)v7, v8, (uint64_t *)&unk_100AD6420);
  dispatch_group_leave(a3);
}

uint64_t sub_100493648(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 < 61)
  {
    if (*a4 <= 0)
    {
      uint64_t v28 = a2[3];
      uint64_t v29 = a2[4];
      sub_10002689C(a2, v28);
      sub_10059A0E8(0xD00000000000001BLL, (void *)0x80000001009A3D20, v28, v29);
      return 0;
    }
    uint64_t v53 = *a4;
    uint64_t v55 = (int *)v10;
    sub_10002B70C(a1, (uint64_t)v12, (uint64_t *)&unk_100AD0CC0);
    if (qword_100ACC110 != -1) {
      swift_once();
    }
    uint64_t v15 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v17 = v16;
    BOOL v19 = v15 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v17 == v18;
    uint64_t v54 = a4;
    uint64_t v51 = v4;
    uint64_t v52 = a3;
    if (!v19)
    {
      char v20 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = v55;
      if (v20) {
        goto LABEL_20;
      }
      if (qword_100ACC118 != -1) {
        swift_once();
      }
      uint64_t v22 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v24 = v23;
      if (v22 != _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() || v24 != v25)
      {
        char v27 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = v55;
        if ((v27 & 1) == 0) {
          goto LABEL_25;
        }
        goto LABEL_20;
      }
    }
    uint64_t v21 = v55;
    swift_bridgeObjectRelease_n();
LABEL_20:
    (*(void (**)(void *__return_ptr, char *))(*(void *)v4 + 264))(v58, v12);
    sub_10001AE98((uint64_t)v58, (uint64_t)v56, &qword_100AD0EA0);
    sub_10001AE98((uint64_t)v56, (uint64_t)v57, &qword_100AD0EA0);
    uint64_t v31 = (uint64_t)&v12[v21[13]];
    sub_10001AE98(v31, (uint64_t)v56, &qword_100AD0EA0);
    sub_1000DBD88((uint64_t)v56);
    sub_10001AE98((uint64_t)v57, v31, &qword_100AD0EA0);
    uint64_t v32 = *(void *)v4;
    if (v4[32])
    {
      uint64_t v33 = (*(uint64_t (**)(char *))(v32 + 320))(v12);
      uint64_t v36 = &v12[v21[15]];
      *(void *)uint64_t v36 = v33;
      *((void *)v36 + 1) = v37;
      v36[16] = v35 & 1;
    }
    else
    {
      uint64_t v34 = (*(uint64_t (**)(char *))(v32 + 312))(v12);
      uint64_t v39 = &v12[v21[14]];
      *(void *)uint64_t v39 = v34;
      *((void *)v39 + 1) = v40;
      *((void *)v39 + 2) = v41;
      v39[24] = v38 & 1;
    }
LABEL_25:
    uint64_t v42 = v21;
    uint64_t v43 = a2[3];
    uint64_t v44 = a2[4];
    sub_10002689C(a2, v43);
    uint64_t v45 = sub_1004ADCE0();
    sub_10059A0E8(v45, v46, v43, v44);
    swift_bridgeObjectRelease();
    uint64_t v47 = v54;
    *uint64_t v54 = v53 - 1;
    if (v12[v42[12]] == 1)
    {
      uint64_t v48 = a2[3];
      uint64_t v49 = a2[4];
      unint64_t v50 = sub_10002689C(a2, v48);
      __chkstk_darwin(v50);
      *(&v51 - 4) = v51;
      *(&v51 - 3) = v12;
      *(&v51 - 2) = (unsigned char *)v52;
      *(&v51 - 1) = v47;
      sub_10059A1B8(32, 0xE100000000000000, (void (*)(void *))sub_1004A619C, (uint64_t)(&v51 - 6), v48, (uint64_t)&type metadata for () + 8, v49);
    }
    sub_10002B770((uint64_t)v12, (uint64_t *)&unk_100AD0CC0);
    return 1;
  }
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  sub_10002689C(a2, v13);
  sub_10059A0E8(0xD000000000000018, (void *)0x80000001009A3D00, v13, v14);
  return 1;
}

uint64_t sub_100493B80(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v9 = (int *)sub_10002B7CC(&qword_100ACCB10);
  __chkstk_darwin(v9);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = (char *)&v39 - v11;
  if (a3 < 61)
  {
    uint64_t v15 = *a4;
    if (*a4 <= 0)
    {
      uint64_t v17 = a2[3];
      uint64_t v18 = a2[4];
      sub_10002689C(a2, v17);
      sub_10059A0E8(0xD00000000000001BLL, (void *)0x80000001009A3D20, v17, v18);
      return 0;
    }
    sub_10002B70C(a1, (uint64_t)&v39 - v11, &qword_100ACCB10);
    BOOL v16 = v12[8] != 2 || *(void *)v12 > 1uLL;
    uint64_t v42 = v15;
    uint64_t v43 = a4;
    uint64_t v40 = v4;
    uint64_t v41 = a3;
    if (!v16)
    {
      (*(void (**)(void *__return_ptr, char *))(*(void *)v4 + 264))(v46, v12);
      sub_10001AE98((uint64_t)v46, (uint64_t)v44, &qword_100AD0EA0);
      sub_10001AE98((uint64_t)v44, (uint64_t)v45, &qword_100AD0EA0);
      uint64_t v20 = (uint64_t)&v12[v9[13]];
      sub_10001AE98(v20, (uint64_t)v44, &qword_100AD0EA0);
      sub_1000DBD88((uint64_t)v44);
      sub_10001AE98((uint64_t)v45, v20, &qword_100AD0EA0);
      uint64_t v21 = *(void *)v4;
      if (v4[32])
      {
        uint64_t v22 = (*(uint64_t (**)(char *))(v21 + 320))(v12);
        uint64_t v25 = &v12[v9[15]];
        *(void *)uint64_t v25 = v22;
        *((void *)v25 + 1) = v26;
        v25[16] = v24 & 1;
      }
      else
      {
        uint64_t v23 = (*(uint64_t (**)(char *))(v21 + 312))(v12);
        uint64_t v28 = &v12[v9[14]];
        *(void *)uint64_t v28 = v23;
        *((void *)v28 + 1) = v29;
        *((void *)v28 + 2) = v30;
        v28[24] = v27 & 1;
      }
    }
    uint64_t v32 = a2[3];
    uint64_t v31 = a2[4];
    sub_10002689C(a2, v32);
    uint64_t v33 = sub_1004AD7A8();
    sub_10059A0E8(v33, v34, v32, v31);
    swift_bridgeObjectRelease();
    char v35 = v43;
    *uint64_t v43 = v42 - 1;
    if (v12[v9[12]] == 1)
    {
      uint64_t v36 = a2[3];
      uint64_t v37 = a2[4];
      char v38 = sub_10002689C(a2, v36);
      __chkstk_darwin(v38);
      *(&v39 - 4) = (uint64_t)v40;
      *(&v39 - 3) = (uint64_t)v12;
      *(&v39 - 2) = v41;
      *(&v39 - 1) = (uint64_t)v35;
      sub_10059A1B8(32, 0xE100000000000000, (void (*)(void *))sub_1004A62F8, (uint64_t)(&v39 - 6), v36, (uint64_t)&type metadata for () + 8, v37);
    }
    sub_10002B770((uint64_t)v12, &qword_100ACCB10);
  }
  else
  {
    uint64_t v13 = a2[3];
    uint64_t v14 = a2[4];
    sub_10002689C(a2, v13);
    sub_10059A0E8(0xD000000000000018, (void *)0x80000001009A3D00, v13, v14);
  }
  return 1;
}

void sub_100493F78(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a1;
  uint64_t v25 = a5;
  uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = *a3;
  uint64_t v13 = *(uint64_t (**)(id *))(*(void *)a2 + 688);
  id v14 = v26;
  uint64_t v15 = v13(&v26);

  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return;
  }
  BOOL v17 = __OFADD__(a4, 1);
  uint64_t v18 = a4 + 1;
  if (!v17)
  {
    v23[0] = v15;
    v23[1] = v5;
    uint64_t v19 = v15 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v20 = *(void *)(v10 + 72);
    do
    {
      sub_10002B70C(v19, (uint64_t)v12, (uint64_t *)&unk_100AD0CC0);
      char v22 = sub_100493648(v12, v24, v18, v25);
      sub_10002B770((uint64_t)v12, (uint64_t *)&unk_100AD0CC0);
      if ((v22 & 1) == 0) {
        break;
      }
      v19 += v20;
      --v16;
    }
    while (v16);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_100494138(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v23 = a1;
  uint64_t v9 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *((unsigned char *)a3 + 8);
  uint64_t v24 = *a3;
  char v25 = v13;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(*(void *)a2 + 688))(&v24);
  uint64_t v15 = *(void *)(result + 16);
  if (!v15) {
    return swift_bridgeObjectRelease();
  }
  BOOL v16 = __OFADD__(a4, 1);
  uint64_t v17 = a4 + 1;
  if (!v16)
  {
    v22[1] = result;
    v22[2] = v5;
    uint64_t v18 = result + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v19 = *(void *)(v10 + 72);
    do
    {
      sub_10002B70C(v18, (uint64_t)v12, &qword_100ACCB10);
      char v21 = sub_100493B80(v12, v23, v17, v26);
      sub_10002B770((uint64_t)v12, &qword_100ACCB10);
      if ((v21 & 1) == 0) {
        break;
      }
      v18 += v19;
      --v15;
    }
    while (v15);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1004942F4(void *a1, char a2, void *a3)
{
  uint64_t v42 = a1;
  uint64_t v6 = type metadata accessor for SnapshotCounters();
  __chkstk_darwin(v6 - 8);
  uint64_t v43 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100AD6350);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v46 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v40 = (uint64_t)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = 3000;
  if ((a2 & 1) == 0) {
    uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v49 = v20;
  uint64_t v21 = a3[2];
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v21 + 96))(v48, v17);
  char v22 = (void *)v48[0];
  v47[0] = v48[0];
  uint64_t v23 = *(void (**)(void *, uint64_t))(*a3 + 240);
  uint64_t v44 = *a3 + 240;
  uint64_t v45 = v23;
  v23(v47, 1);
  uint64_t v41 = v13;
  if (v3)
  {
    swift_errorRelease();

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    uint64_t v24 = v42;
LABEL_6:
    uint64_t v26 = (uint64_t *)&unk_100AD6350;
    uint64_t v27 = (uint64_t)v12;
    goto LABEL_8;
  }

  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  uint64_t v24 = v42;
  if (v25 == 1) {
    goto LABEL_6;
  }
  sub_10001AE98((uint64_t)v12, (uint64_t)v19, (uint64_t *)&unk_100AD0CC0);
  sub_100493648((uint64_t)v19, v24, 1, &v49);
  uint64_t v27 = (uint64_t)v19;
  uint64_t v26 = (uint64_t *)&unk_100AD0CC0;
LABEL_8:
  uint64_t v28 = sub_10002B770(v27, v26);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v21 + 104))(v48, v28);
  uint64_t v29 = (void *)v48[0];
  v47[0] = v48[0];
  uint64_t v30 = (uint64_t)v46;
  v45(v47, 1);

  int v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v30, 1, v41);
  uint64_t v32 = (uint64_t)v43;
  if (v31 == 1)
  {
    uint64_t v33 = (uint64_t *)&unk_100AD6350;
    uint64_t v34 = v30;
  }
  else
  {
    uint64_t v35 = v40;
    sub_10001AE98(v30, v40, (uint64_t *)&unk_100AD0CC0);
    sub_100493648(v35, v24, 1, &v49);
    uint64_t v34 = v35;
    uint64_t v33 = (uint64_t *)&unk_100AD0CC0;
  }
  sub_10002B770(v34, v33);
  uint64_t v36 = v24[3];
  uint64_t v37 = v24[4];
  sub_10002689C(v24, v36);
  strcpy((char *)v48, "+ counters: ");
  BYTE5(v48[1]) = 0;
  HIWORD(v48[1]) = -5120;
  uint64_t v38 = (uint64_t)a3 + qword_100B0B5F0;
  swift_beginAccess();
  sub_1004A6134(v38, v32, (uint64_t (*)(void))type metadata accessor for SnapshotCounters);
  v50._int countAndFlagsBits = sub_10085537C();
  sub_10096BDC0(v50);
  swift_bridgeObjectRelease();
  sub_1004A6FF0(v32, (uint64_t (*)(void))type metadata accessor for SnapshotCounters);
  sub_10059A0E8(v48[0], (void *)v48[1], v36, v37);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004947D4(void *a1, char a2, void *a3)
{
  uint64_t v41 = a1;
  uint64_t v6 = type metadata accessor for SnapshotCounters();
  __chkstk_darwin(v6 - 8);
  uint64_t v38 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100AD0CF0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v40 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v37 = (uint64_t)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = 3000;
  if ((a2 & 1) == 0) {
    uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v45 = v20;
  uint64_t v21 = a3[2];
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v21 + 96))(v44, v17);
  uint64_t v42 = v44[0];
  char v43 = v44[1];
  uint64_t v39 = *(void (**)(uint64_t *, uint64_t))(*a3 + 240);
  v39(&v42, 1);
  if (v3)
  {
    swift_errorRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_7:
    uint64_t v23 = sub_10002B770((uint64_t)v12, (uint64_t *)&unk_100AD0CF0);
    goto LABEL_9;
  }
  char v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v36 = v13;
  if (v22(v12, 1, v13) == 1)
  {
    uint64_t v13 = v36;
    goto LABEL_7;
  }
  sub_10001AE98((uint64_t)v12, (uint64_t)v19, &qword_100ACCB10);
  sub_100493B80((uint64_t)v19, v41, 1, &v45);
  uint64_t v23 = sub_10002B770((uint64_t)v19, &qword_100ACCB10);
  uint64_t v13 = v36;
LABEL_9:
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v21 + 104))(v44, v23);
  uint64_t v42 = v44[0];
  char v43 = v44[1];
  uint64_t v24 = (uint64_t)v40;
  v39(&v42, 1);
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v24, 1, v13);
  uint64_t v26 = (uint64_t)v38;
  uint64_t v27 = v41;
  if (v25 == 1)
  {
    uint64_t v28 = (uint64_t *)&unk_100AD0CF0;
    uint64_t v29 = v24;
  }
  else
  {
    uint64_t v30 = v37;
    sub_10001AE98(v24, v37, &qword_100ACCB10);
    sub_100493B80(v30, v27, 1, &v45);
    uint64_t v29 = v30;
    uint64_t v28 = &qword_100ACCB10;
  }
  sub_10002B770(v29, v28);
  uint64_t v31 = v27[3];
  uint64_t v32 = v27[4];
  sub_10002689C(v27, v31);
  strcpy((char *)v44, "+ counters: ");
  BYTE5(v44[1]) = 0;
  HIWORD(v44[1]) = -5120;
  uint64_t v33 = (uint64_t)a3 + qword_100B0B5F0;
  swift_beginAccess();
  sub_1004A6134(v33, v26, (uint64_t (*)(void))type metadata accessor for SnapshotCounters);
  v46._int countAndFlagsBits = sub_10085537C();
  sub_10096BDC0(v46);
  swift_bridgeObjectRelease();
  sub_1004A6FF0(v26, (uint64_t (*)(void))type metadata accessor for SnapshotCounters);
  sub_10059A0E8(v44[0], (void *)v44[1], v31, v32);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100494CBC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_100719D44(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_10096C8C0();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_100494D3C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100494D64(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_10096C8C0();
  *a1 = v5;
  return result;
}

uint64_t sub_100494DBC(uint64_t a1, Swift::UInt64 a2, char a3)
{
  uint64_t v7 = *v3;
  sub_10096D4B0();
  if (a3)
  {
    if (a3 == 1)
    {
      sub_10096D4C0(1uLL);
      sub_10096D4F0(a2);
    }
    else
    {
      if (a2) {
        Swift::UInt v8 = 3;
      }
      else {
        Swift::UInt v8 = 2;
      }
      sub_10096D4C0(v8);
    }
  }
  else
  {
    sub_10096D4C0(0);
    sub_10096D4E0(a2);
  }
  Swift::Int v9 = sub_10096D500();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v7 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_29:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10049709C(a2, a3, v11, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_30;
  }
  uint64_t v12 = ~v10;
  BOOL v13 = a3 == 2;
  BOOL v14 = a2 == 1 && a3 == 2;
  if (a2) {
    BOOL v13 = 0;
  }
  while (1)
  {
    uint64_t v15 = *(void *)(v7 + 48) + 16 * v11;
    uint64_t v16 = *(void *)v15;
    int v17 = *(unsigned __int8 *)(v15 + 8);
    if (!v17) {
      break;
    }
    if (v17 == 1)
    {
      if (a3 == 1 && v16 == a2) {
        goto LABEL_28;
      }
    }
    else if (v16)
    {
      if (v14) {
        goto LABEL_28;
      }
    }
    else if (v13)
    {
      goto LABEL_28;
    }
LABEL_17:
    unint64_t v11 = (v11 + 1) & v12;
    if (((*(void *)(v7 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_29;
    }
  }
  if (a3 || v16 != a2) {
    goto LABEL_17;
  }
LABEL_28:
  uint64_t result = 0;
  uint64_t v19 = *(void *)(*v3 + 48) + 16 * v11;
  a2 = *(void *)v19;
  a3 = *(unsigned char *)(v19 + 8);
LABEL_30:
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = a3;
  return result;
}

uint64_t sub_100494FA0(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_10096D4B0();
  swift_bridgeObjectRetain();
  sub_10096BD50();
  Swift::Int v8 = sub_10096D500();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_10096D2D0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_10096D2D0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10049729C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100495150(void *a1, void *a2)
{
  return sub_10049521C(a1, a2, (void (*)(uint64_t))sub_10092199C, type metadata accessor for URLResourceKey, &qword_100ACCC30, (uint64_t (*)(uint64_t))sub_100923F94);
}

uint64_t sub_100495198(uint64_t *a1, uint64_t a2)
{
  return sub_100495714(a1, a2, (void (*)(uint64_t))sub_1009219A8, (uint64_t)&type metadata for Int, &qword_100AD6390, (uint64_t (*)(uint64_t))sub_100923FA0);
}

uint64_t sub_1004951D4(void *a1, void *a2)
{
  return sub_10049521C(a1, a2, (void (*)(uint64_t))sub_1009219B4, type metadata accessor for NSFileProviderItemIdentifier, (uint64_t *)&unk_100ACC9C0, (uint64_t (*)(uint64_t))sub_100923FAC);
}

uint64_t sub_10049521C(void *a1, void *a2, void (*a3)(uint64_t), void (*a4)(void), uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v7 = v6;
  uint64_t v10 = *v6;
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096D4B0();
  swift_bridgeObjectRetain();
  sub_10096BD50();
  Swift::Int v11 = sub_10096D500();
  swift_bridgeObjectRelease();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *v7;
    *uint64_t v7 = 0x8000000000000000;
    id v28 = a2;
    sub_100497438((uint64_t)v28, v13, isUniquelyReferenced_nonNull_native, a3, a4, a5, a6);
    *uint64_t v7 = v36;
    swift_bridgeObjectRelease();
    *a1 = v28;
    return 1;
  }
  uint64_t v14 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v16 = v15;
  if (v14 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v16 == v17)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      uint64_t v20 = ~v12;
      do
      {
        unint64_t v13 = (v13 + 1) & v20;
        if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v21 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v23 = v22;
        if (v21 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v23 == v24) {
          goto LABEL_16;
        }
        char v26 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v26 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v30 = *(void **)(*(void *)(*v7 + 48) + 8 * v13);
  *a1 = v30;
  id v31 = v30;
  return 0;
}

uint64_t sub_100495458(uint64_t a1, void *a2, Swift::UInt a3, char a4)
{
  int v32 = a4 & 1;
  uint64_t v9 = *v4;
  sub_10096D4B0();
  uint64_t v33 = a2;
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  swift_bridgeObjectRetain();
  sub_10096BD50();
  swift_bridgeObjectRelease();
  if (a4)
  {
    sub_10096D4D0(0);
  }
  else
  {
    sub_10096D4D0(1u);
    sub_10096D4C0(a3);
  }
  Swift::UInt v31 = a3;
  Swift::Int v10 = sub_10096D500();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    do
    {
      uint64_t v14 = *(void *)(v9 + 48) + 24 * v12;
      uint64_t v15 = *(void *)(v14 + 8);
      char v16 = *(unsigned char *)(v14 + 16);
      uint64_t v17 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v19 = v18;
      if (v17 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v19 == v20)
      {
        swift_bridgeObjectRelease_n();
        if (v16) {
          goto LABEL_6;
        }
      }
      else
      {
        char v22 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0) {
          goto LABEL_7;
        }
        if (v16)
        {
LABEL_6:
          if (v32) {
            goto LABEL_18;
          }
          goto LABEL_7;
        }
      }
      if (!v32 && v15 == v31)
      {
LABEL_18:

        swift_bridgeObjectRelease();
        uint64_t v23 = *(void *)(*v30 + 48) + 24 * v12;
        uint64_t v24 = *(void **)v23;
        uint64_t v25 = *(void *)(v23 + 8);
        LOBYTE(v23) = *(unsigned char *)(v23 + 16);
        *(void *)a1 = v24;
        *(void *)(a1 + 8) = v25;
        *(unsigned char *)(a1 + 16) = v23;
        id v26 = v24;
        return 0;
      }
LABEL_7:
      unint64_t v12 = (v12 + 1) & v13;
    }
    while (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v34 = *v30;
  *uint64_t v30 = 0x8000000000000000;
  id v29 = v33;
  sub_10049767C((Swift::Int)v29, v31, v32, v12, isUniquelyReferenced_nonNull_native);
  *uint64_t v30 = v34;
  swift_bridgeObjectRelease();
  *(void *)a1 = v29;
  *(void *)(a1 + 8) = v31;
  uint64_t result = 1;
  *(unsigned char *)(a1 + 16) = v32 != 0;
  return result;
}

uint64_t sub_1004956D8(uint64_t *a1, uint64_t a2)
{
  return sub_100495714(a1, a2, (void (*)(uint64_t))sub_100922024, (uint64_t)&type metadata for UInt64, (uint64_t *)&unk_100AD63D0, (uint64_t (*)(uint64_t))sub_10092431C);
}

uint64_t sub_100495714(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v11 = v6;
  uint64_t v14 = *v6;
  uint64_t v15 = sub_10096D4A0();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  unint64_t v17 = v15 & ~v16;
  if (((*(void *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    sub_1004978DC(a2, v17, isUniquelyReferenced_nonNull_native, a3, a4, a5, a6);
    *uint64_t v11 = v22;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v18 = *(void *)(v14 + 48);
  if (*(void *)(v18 + 8 * v17) != a2)
  {
    uint64_t v19 = ~v16;
    do
    {
      unint64_t v17 = (v17 + 1) & v19;
      if (((*(void *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v18 + 8 * v17) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_100495840(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_10096D4B0();
  uint64_t v35 = v3;
  uint64_t v36 = a1;
  if ((a3 & 0x100) != 0)
  {
    sub_10096D4C0(1uLL);
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    swift_bridgeObjectRetain();
    sub_10009C394(a2, a3, 1);
    sub_10096BD50();
    swift_bridgeObjectRelease();
    sub_1000D30C4(a2, a3, 1);
  }
  else
  {
    sub_10096D4C0(0);
    if ((_BYTE)a3)
    {
      if (a3 == 1)
      {
        sub_10096D4C0(1uLL);
        sub_10096D4F0((Swift::UInt64)a2);
      }
      else
      {
        if (a2) {
          Swift::UInt v8 = 3;
        }
        else {
          Swift::UInt v8 = 2;
        }
        sub_10096D4C0(v8);
      }
    }
    else
    {
      sub_10096D4C0(0);
      sub_10096D4E0((Swift::UInt32)a2);
    }
    swift_bridgeObjectRetain();
  }
  Swift::Int v9 = sub_10096D500();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v7 + 56;
  if (((*(void *)(v7 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v35;
    *uint64_t v35 = 0x8000000000000000;
    sub_10009C394(a2, a3, BYTE1(a3) & 1);
    sub_100497A14((char *)a2, a3 | (((a3 >> 8) & 1) << 8), v11, isUniquelyReferenced_nonNull_native);
    *uint64_t v35 = v38;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v36 = a2;
    *(unsigned char *)(v36 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(v36 + 9) = BYTE1(a3) & 1;
    return result;
  }
  uint64_t v13 = ~v10;
  BOOL v14 = a3 == 2;
  BOOL v15 = a2 == (void *)1 && a3 == 2;
  if (a2) {
    BOOL v14 = 0;
  }
  BOOL v33 = v14;
  BOOL v34 = v15;
  uint64_t v37 = v7;
  while (1)
  {
    uint64_t v16 = 16 * v11;
    uint64_t v17 = *(void *)(v7 + 48) + 16 * v11;
    uint64_t v18 = *(void **)v17;
    uint64_t v19 = *(unsigned __int8 *)(v17 + 8);
    if (*(unsigned char *)(v17 + 9)) {
      break;
    }
    if ((a3 & 0x100) == 0)
    {
      if (*(unsigned char *)(v17 + 8))
      {
        if (v19 == 1)
        {
          if (a3 == 1 && v18 == a2) {
            goto LABEL_40;
          }
        }
        else if (v18)
        {
          if (v34) {
            goto LABEL_40;
          }
        }
        else if (v33)
        {
          goto LABEL_40;
        }
      }
      else if (!(_BYTE)a3 && v18 == a2)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
    }
LABEL_20:
    unint64_t v11 = (v11 + 1) & v13;
    if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_41;
    }
  }
  if ((a3 & 0x100) == 0) {
    goto LABEL_20;
  }
  uint64_t v20 = v12;
  uint64_t v21 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v23 = v22;
  if (v21 != _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() || v23 != v24)
  {
    char v26 = sub_10096D2D0();
    sub_10009C394(v18, v19, 1);
    sub_10009C394(v18, v19, 1);
    sub_10009C394(a2, a3, 1);
    sub_10009C394(v18, v19, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000D30C4(a2, a3, 1);

    sub_1000D30C4(v18, v19, 1);
    sub_1000D30C4(v18, v19, 1);
    uint64_t v12 = v20;
    uint64_t v7 = v37;
    uint64_t v16 = 16 * v11;
    if (v26) {
      goto LABEL_43;
    }
    goto LABEL_20;
  }
  sub_10009C394(v18, v19, 1);
  sub_10009C394(v18, v19, 1);
  sub_10009C394(a2, a3, 1);
  sub_10009C394(v18, v19, 1);
  swift_bridgeObjectRelease_n();
  sub_1000D30C4(a2, a3, 1);

  sub_1000D30C4(v18, v19, 1);
  sub_1000D30C4(v18, v19, 1);
  uint64_t v16 = 16 * v11;
LABEL_43:
  swift_bridgeObjectRelease();
  sub_1000D30C4(a2, a3, 1);
LABEL_44:
  uint64_t v29 = *(void *)(*v35 + 48) + v16;
  uint64_t v30 = *(void **)v29;
  char v31 = *(unsigned char *)(v29 + 9);
  *(void *)uint64_t v36 = *(void *)v29;
  uint64_t v32 = *(unsigned __int8 *)(v29 + 8);
  *(unsigned char *)(v36 + 8) = v32;
  *(unsigned char *)(v36 + 9) = v31;
  sub_10009C394(v30, v32, v31);
  return 0;
}

uint64_t sub_100495CA4(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  uint64_t v10 = *v5;
  sub_10096D4B0();
  swift_bridgeObjectRetain();
  sub_100273638((uint64_t)v50, a2, a3, a4, a5);
  unint64_t v11 = sub_10096D500() & ~(-1 << *(unsigned char *)(v10 + 32));
  uint64_t v45 = v5;
  uint64_t v46 = v10 + 56;
  uint64_t v49 = a3;
  if (((*(void *)(v10 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
    uint64_t v47 = a2;
    char v48 = a5;
    goto LABEL_10;
  }
  uint64_t v43 = -1 << *(unsigned char *)(v10 + 32);
  uint64_t v12 = 32 * v11;
  uint64_t v13 = *(void *)(v10 + 48) + 32 * v11;
  unint64_t v14 = (unint64_t)a4;
  id v15 = *(id *)v13;
  uint64_t v16 = *(void **)(v13 + 8);
  uint64_t v17 = *(void **)(v13 + 16);
  char v18 = *(unsigned char *)(v13 + 24);
  sub_10009C004(*(id *)v13, v16, v17, v18);
  char v19 = sub_1002725E0(v15, v16, v17, v18, (unint64_t)a2, (unint64_t)v49, v14, a5);
  char v20 = a5;
  char v21 = v19;
  uint64_t v22 = v15;
  uint64_t v23 = (void *)v14;
  uint64_t v24 = v49;
  uint64_t v25 = v17;
  char v26 = v45;
  char v27 = v18;
  char v28 = v20;
  sub_1001FAB20(v22, v16, v25, v27);
  if ((v21 & 1) == 0)
  {
    uint64_t v47 = a2;
    uint64_t v29 = v23;
    char v48 = v28;
    unint64_t v11 = (v11 + 1) & ~v43;
    if ((*(void *)(v46 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
    {
      a4 = v23;
      while (1)
      {
        uint64_t v12 = 32 * v11;
        uint64_t v30 = *(void *)(v10 + 48) + 32 * v11;
        id v31 = *(id *)v30;
        uint64_t v32 = *(void **)(v30 + 8);
        BOOL v33 = *(void **)(v30 + 16);
        char v34 = *(unsigned char *)(v30 + 24);
        sub_10009C004(*(id *)v30, v32, v33, v34);
        char v35 = sub_1002725E0(v31, v32, v33, v34, (unint64_t)a2, (unint64_t)v49, (unint64_t)a4, v48);
        sub_1001FAB20(v31, v32, v33, v34);
        if (v35) {
          break;
        }
        unint64_t v11 = (v11 + 1) & ~v43;
        a4 = v29;
        if (((*(void *)(v46 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          goto LABEL_10;
        }
      }
      char v28 = v48;
      uint64_t v23 = v29;
      char v26 = v45;
      uint64_t v24 = v49;
      goto LABEL_12;
    }
    a4 = v23;
LABEL_10:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50[0] = *v45;
    *uint64_t v45 = 0x8000000000000000;
    sub_10009C004(v47, v49, a4, v48);
    sub_100497E18(v47, v49, a4, v48, v11, isUniquelyReferenced_nonNull_native);
    *uint64_t v45 = v50[0];
    swift_bridgeObjectRelease();
    *(void *)a1 = v47;
    *(void *)(a1 + 8) = v49;
    *(void *)(a1 + 16) = a4;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 24) = v48;
    return result;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  sub_1001FAB20(a2, v24, v23, v28);
  uint64_t v38 = *(void *)(*v26 + 48) + v12;
  uint64_t v39 = *(void **)v38;
  uint64_t v40 = *(void **)(v38 + 8);
  uint64_t v41 = *(void **)(v38 + 16);
  *(void *)a1 = *(void *)v38;
  *(void *)(a1 + 8) = v40;
  *(void *)(a1 + 16) = v41;
  char v42 = *(unsigned char *)(v38 + 24);
  *(unsigned char *)(a1 + 24) = v42;
  sub_10009C004(v39, v40, v41, v42);
  return 0;
}

uint64_t sub_100495FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_10096D4B0();
  sub_1002739A4();
  Swift::Int v7 = sub_10096D500();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t i = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if ((*(void *)(v6 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v11 = 48 * i;
    sub_10001AE98(*(void *)(v6 + 48) + 48 * i, (uint64_t)v19, &qword_100ACC9E0);
    if (sub_1002731C8((uint64_t)v19, a2))
    {
LABEL_3:
      uint64_t result = 0;
      uint64_t v13 = *(void *)(*v3 + 48) + v11;
      uint64_t v14 = *(void *)(v13 + 32);
      __int16 v15 = *(_WORD *)(v13 + 40);
      long long v16 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)a1 = *(_OWORD *)v13;
      *(_OWORD *)(a1 + 16) = v16;
      *(void *)(a1 + 32) = v14;
      *(_WORD *)(a1 + 40) = v15;
      return result;
    }
    for (unint64_t i = (i + 1) & ~v8; ((*(void *)(v10 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & ~v8)
    {
      uint64_t v11 = 48 * i;
      sub_10001AE98(*(void *)(v6 + 48) + 48 * i, (uint64_t)v20, &qword_100ACC9E0);
      if (sub_1002731C8((uint64_t)v20, a2)) {
        goto LABEL_3;
      }
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1004980C8(a2, i, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v18;
  swift_bridgeObjectRelease();
  sub_10001AE98(a2, a1, &qword_100ACC9E0);
  return 1;
}

uint64_t sub_100496178(unint64_t *a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_10096D4B0();
  swift_bridgeObjectRetain();
  sub_1008D7138((uint64_t)v18, a2);
  Swift::Int v7 = sub_10096D500();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    unint64_t v10 = *(void *)(*(void *)(v6 + 48) + 8 * v9);
    sub_1000CE628(v10);
    char v11 = sub_1008D8F64(v10, a2);
    sub_1004A6318(v10);
    if (v11)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      sub_1004A6318(a2);
      unint64_t v15 = *(void *)(*(void *)(*v3 + 48) + 8 * v9);
      *a1 = v15;
      sub_1000CE628(v15);
      return 0;
    }
    uint64_t v12 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      unint64_t v13 = *(void *)(*(void *)(v6 + 48) + 8 * v9);
      sub_1000CE628(v13);
      char v14 = sub_1008D8F64(v13, a2);
      sub_1004A6318(v13);
      if (v14) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18[0] = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1000CE628(a2);
  sub_100498294(a2, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v18[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_100496318(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = a1;
  uint64_t v68 = sub_10002B7CC((uint64_t *)&unk_100AD0AA0);
  __chkstk_darwin(v68);
  uint64_t v64 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002B7CC((uint64_t *)&unk_100AD65B0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  int64_t v61 = (void **)((char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v56 - v8;
  uint64_t v10 = sub_10002B7CC((uint64_t *)&unk_100AD0A90);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v14 = (char *)&v56 - v13;
  uint64_t v15 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v67 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v65 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v63 = (uint64_t)&v56 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v57 = (uint64_t)&v56 - v24;
  __chkstk_darwin(v23);
  char v26 = (char *)&v56 - v25;
  uint64_t v27 = *v2;
  sub_10096D4B0();
  uint64_t v69 = a2;
  sub_10002B70C(a2, (uint64_t)v26, &qword_100AD65C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10001AE98((uint64_t)v26, (uint64_t)v9, (uint64_t *)&unk_100AD65B0);
    sub_10096D4C0(1uLL);
    swift_bridgeObjectRetain();
    sub_1008D6D84();
    uint64_t v28 = (uint64_t)v9;
    uint64_t v29 = (uint64_t *)&unk_100AD65B0;
  }
  else
  {
    sub_10001AE98((uint64_t)v26, (uint64_t)v14, (uint64_t *)&unk_100AD0A90);
    sub_10096D4C0(0);
    swift_bridgeObjectRetain();
    sub_1008D68E4();
    uint64_t v28 = (uint64_t)v14;
    uint64_t v29 = (uint64_t *)&unk_100AD0A90;
  }
  sub_10002B770(v28, v29);
  Swift::Int v30 = sub_10096D500();
  uint64_t v31 = -1 << *(unsigned char *)(v27 + 32);
  unint64_t v32 = v30 & ~v31;
  uint64_t v33 = v27 + 56;
  uint64_t v34 = *(void *)(v27 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32;
  uint64_t v58 = v2;
  if (v34)
  {
    uint64_t v35 = ~v31;
    uint64_t v67 = *(void *)(v67 + 72);
    uint64_t v37 = (uint64_t)v64;
    uint64_t v36 = v65;
    uint64_t v62 = ~v31;
    do
    {
      uint64_t v39 = *(void *)(v27 + 48);
      unint64_t v66 = v67 * v32;
      sub_10002B70C(v39 + v67 * v32, (uint64_t)v22, &qword_100AD65C0);
      uint64_t v40 = v37 + *(int *)(v68 + 48);
      sub_10002B70C((uint64_t)v22, v37, &qword_100AD65C0);
      sub_10002B70C(v69, v40, &qword_100AD65C0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10002B70C(v37, v36, &qword_100AD65C0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v41 = v61;
          sub_10001AE98(v40, (uint64_t)v61, (uint64_t *)&unk_100AD65B0);
          char v42 = sub_10075E090(v65, v41);
          uint64_t v43 = (uint64_t)v41;
          uint64_t v36 = v65;
          sub_10002B770(v43, (uint64_t *)&unk_100AD65B0);
          sub_10002B770(v36, (uint64_t *)&unk_100AD65B0);
          uint64_t v38 = &qword_100AD65C0;
          if (v42) {
            goto LABEL_15;
          }
        }
        else
        {
          sub_10002B770(v36, (uint64_t *)&unk_100AD65B0);
          uint64_t v38 = (uint64_t *)&unk_100AD0AA0;
        }
      }
      else
      {
        uint64_t v44 = v22;
        uint64_t v45 = v33;
        uint64_t v46 = v27;
        uint64_t v47 = v63;
        sub_10002B70C(v37, v63, &qword_100AD65C0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_10002B770(v47, (uint64_t *)&unk_100AD0A90);
          uint64_t v38 = (uint64_t *)&unk_100AD0AA0;
          uint64_t v27 = v46;
          uint64_t v33 = v45;
          uint64_t v22 = v44;
          uint64_t v37 = (uint64_t)v64;
          uint64_t v35 = v62;
        }
        else
        {
          uint64_t v48 = v60;
          sub_10001AE98(v40, v60, (uint64_t *)&unk_100AD0A90);
          BOOL v49 = sub_10075D534(v47, v48);
          uint64_t v50 = v48;
          uint64_t v36 = v65;
          sub_10002B770(v50, (uint64_t *)&unk_100AD0A90);
          sub_10002B770(v47, (uint64_t *)&unk_100AD0A90);
          uint64_t v38 = &qword_100AD65C0;
          uint64_t v27 = v46;
          uint64_t v33 = v45;
          uint64_t v22 = v44;
          uint64_t v37 = (uint64_t)v64;
          uint64_t v35 = v62;
          if (v49)
          {
LABEL_15:
            sub_10002B770(v37, &qword_100AD65C0);
            sub_10002B770((uint64_t)v22, &qword_100AD65C0);
            swift_bridgeObjectRelease();
            sub_10002B770(v69, &qword_100AD65C0);
            sub_10002B70C(*(void *)(*v58 + 48) + v66, v59, &qword_100AD65C0);
            return 0;
          }
        }
      }
      sub_10002B770(v37, v38);
      sub_10002B770((uint64_t)v22, &qword_100AD65C0);
      unint64_t v32 = (v32 + 1) & v35;
    }
    while (((*(void *)(v33 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  uint64_t v52 = v58;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v54 = v69;
  uint64_t v55 = v57;
  sub_10002B70C(v69, v57, &qword_100AD65C0);
  uint64_t v70 = *v52;
  *uint64_t v52 = 0x8000000000000000;
  sub_10049842C(v55, v32, isUniquelyReferenced_nonNull_native);
  *uint64_t v52 = v70;
  swift_bridgeObjectRelease();
  sub_10001AE98(v54, v59, &qword_100AD65C0);
  return 1;
}

uint64_t sub_100496994(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_10096CAC0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100011348(0, &qword_100AD62F0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v29;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_10096CAB0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_100921164(v7, result + 1);
    Swift::Int v30 = (void *)v22;
    unint64_t v23 = *(void *)(v22 + 16);
    if (*(void *)(v22 + 24) <= v23)
    {
      uint64_t v27 = v23 + 1;
      id v28 = v8;
      sub_100923298(v27);
      uint64_t v24 = v30;
    }
    else
    {
      uint64_t v24 = (void *)v22;
      id v25 = v8;
    }
    sub_100923C34((uint64_t)v8, v24);
    *uint64_t v3 = (uint64_t)v24;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_10096C820(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100011348(0, &qword_100AD62F0);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_10096C830();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_10096C830();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_100498A10((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v31;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_100496C34(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_10096CAC0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100011348(0, (unint64_t *)&unk_100AD6280);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v29;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_10096CAB0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_100921180(v7, result + 1);
    Swift::Int v30 = (void *)v22;
    unint64_t v23 = *(void *)(v22 + 16);
    if (*(void *)(v22 + 24) <= v23)
    {
      uint64_t v27 = v23 + 1;
      id v28 = v8;
      sub_1009232A4(v27);
      uint64_t v24 = v30;
    }
    else
    {
      uint64_t v24 = (void *)v22;
      id v25 = v8;
    }
    sub_100923C34((uint64_t)v8, v24);
    *uint64_t v3 = (uint64_t)v24;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_10096C820(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100011348(0, (unint64_t *)&unk_100AD6280);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_10096C830();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_10096C830();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_100498BA8((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v31;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_100496ED4(uint64_t a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
  uint64_t v9 = *v4;
  sub_10096D4B0();
  sub_10096D4F0(a2);
  swift_bridgeObjectRetain();
  sub_10096BD50();
  Swift::Int v10 = sub_10096D500();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v9 + 48);
    while (1)
    {
      id v15 = (void *)(v14 + 24 * v12);
      if (*v15 == a2)
      {
        BOOL v16 = v15[1] == a3 && v15[2] == a4;
        if (v16 || (sub_10096D2D0() & 1) != 0) {
          break;
        }
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(*v4 + 48) + 24 * v12;
    uint64_t v18 = *(void *)(v17 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v17;
    *(void *)(a1 + 16) = v18;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_100498D40(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v21;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = a3;
    uint64_t result = 1;
    *(void *)(a1 + 16) = a4;
  }
  return result;
}

Swift::Int sub_10049709C(Swift::Int result, char a2, unint64_t a3, char a4)
{
  Swift::UInt64 v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_36;
  }
  if (a4)
  {
    sub_1009213A0();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_100923C38();
      goto LABEL_36;
    }
    sub_100498EE8();
  }
  uint64_t v10 = *v4;
  sub_10096D4B0();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_10096D4C0(1uLL);
      sub_10096D4F0(v7);
    }
    else
    {
      if (v7) {
        Swift::UInt v11 = 3;
      }
      else {
        Swift::UInt v11 = 2;
      }
      sub_10096D4C0(v11);
    }
  }
  else
  {
    sub_10096D4C0(0);
    sub_10096D4E0(v7);
  }
  uint64_t result = sub_10096D500();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v12;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v13 = ~v12;
    BOOL v14 = a2 == 2;
    BOOL v15 = v7 == 1 && a2 == 2;
    if (v7) {
      BOOL v14 = 0;
    }
    do
    {
      uint64_t v16 = *(void *)(v10 + 48) + 16 * a3;
      uint64_t v17 = *(void *)v16;
      int v18 = *(unsigned __int8 *)(v16 + 8);
      if (v18)
      {
        if (v18 == 1)
        {
          if (a2 == 1 && v17 == v7) {
            goto LABEL_35;
          }
        }
        else if (v17)
        {
          if (v15) {
            goto LABEL_35;
          }
        }
        else if (v14)
        {
          goto LABEL_35;
        }
      }
      else if (!a2 && v17 == v7)
      {
LABEL_35:
        uint64_t result = sub_10096D3B0();
        __break(1u);
        break;
      }
      a3 = (a3 + 1) & v13;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_36:
  uint64_t v19 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v20 = *(void *)(v19 + 48) + 16 * a3;
  *(void *)uint64_t v20 = v7;
  *(unsigned char *)(v20 + 8) = a2;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v23;
  }
  return result;
}

Swift::Int sub_10049729C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1009216BC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100923DE0();
      goto LABEL_22;
    }
    sub_1004991D4();
  }
  uint64_t v11 = *v4;
  sub_10096D4B0();
  sub_10096BD50();
  uint64_t result = sub_10096D500();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    BOOL v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_10096D2D0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_10096D3B0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_10096D2D0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_100497438(uint64_t result, unint64_t a2, char a3, void (*a4)(uint64_t), void (*a5)(void), uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  unint64_t v9 = v7;
  uint64_t v11 = result;
  unint64_t v12 = *(void *)(*v7 + 16);
  unint64_t v13 = *(void *)(*v7 + 24);
  if (v13 > v12 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v14 = v12 + 1;
  if (a3)
  {
    a4(v14);
  }
  else
  {
    if (v13 > v12)
    {
      uint64_t result = a7(v14);
LABEL_22:
      uint64_t v31 = *v9;
      *(void *)(*v9 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v31 + 48) + 8 * a2) = v11;
      uint64_t v32 = *(void *)(v31 + 16);
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (!v33)
      {
        *(void *)(v31 + 16) = v34;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_100499484(v14, a6);
  }
  uint64_t v15 = *v7;
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096D4B0();
  sub_10096BD50();
  Swift::Int v16 = sub_10096D500();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
  a2 = v16 & ~v17;
  if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v18 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v20 = v19;
  if (v18 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v20 == v21)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v23 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
    uint64_t v24 = ~v17;
    do
    {
      a2 = (a2 + 1) & v24;
      if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v25 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v27 = v26;
      if (v25 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v27 == v28) {
        goto LABEL_25;
      }
      char v30 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v30 & 1) == 0);
  }
LABEL_26:
  a5(0);
  uint64_t result = sub_10096D3B0();
  __break(1u);
  return result;
}

Swift::Int sub_10049767C(Swift::Int result, Swift::UInt a2, char a3, unint64_t a4, char a5)
{
  Swift::Int v7 = result;
  unint64_t v8 = *(void *)(*v5 + 16);
  unint64_t v9 = *(void *)(*v5 + 24);
  if (v9 > v8 && (a5 & 1) != 0) {
    goto LABEL_26;
  }
  if (a5)
  {
    sub_100921CD0();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_10092415C();
      goto LABEL_26;
    }
    sub_100499760();
  }
  uint64_t v10 = *v5;
  sub_10096D4B0();
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096BD50();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_10096D4D0(0);
  }
  else
  {
    sub_10096D4D0(1u);
    sub_10096D4C0(a2);
  }
  uint64_t result = sub_10096D500();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a4 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = *(void *)(v10 + 48) + 24 * a4;
      uint64_t v14 = *(void *)(v13 + 8);
      char v15 = *(unsigned char *)(v13 + 16);
      uint64_t v16 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v18 = v17;
      if (v16 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v18 == v19)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        if (v15) {
          goto LABEL_13;
        }
      }
      else
      {
        char v21 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v21 & 1) == 0) {
          goto LABEL_14;
        }
        if (v15)
        {
LABEL_13:
          if (a3) {
            goto LABEL_25;
          }
          goto LABEL_14;
        }
      }
      if ((a3 & 1) == 0 && v14 == a2)
      {
LABEL_25:
        sub_10002B7CC(&qword_100ACE950);
        uint64_t result = sub_10096D3B0();
        __break(1u);
        break;
      }
LABEL_14:
      a4 = (a4 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_26:
  uint64_t v22 = *v27;
  *(void *)(*v27 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v23 = *(void *)(v22 + 48) + 24 * a4;
  *(void *)uint64_t v23 = v7;
  *(void *)(v23 + 8) = a2;
  *(unsigned char *)(v23 + 16) = a3 & 1;
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v26;
  }
  return result;
}

uint64_t sub_1004978DC(uint64_t result, unint64_t a2, char a3, void (*a4)(uint64_t), uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*v7 + 16);
  unint64_t v11 = *(void *)(*v7 + 24);
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    a4(v12);
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = a7(v12);
      goto LABEL_14;
    }
    sub_100499A88(v12, a6);
  }
  uint64_t v13 = *v7;
  uint64_t result = sub_10096D4A0();
  uint64_t v14 = -1 << *(unsigned char *)(v13 + 32);
  a2 = result & ~v14;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v15 = *(void *)(v13 + 48);
    if (*(void *)(v15 + 8 * a2) == v9)
    {
LABEL_13:
      uint64_t result = sub_10096D3B0();
      __break(1u);
    }
    else
    {
      uint64_t v16 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v15 + 8 * a2) == v9) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = v9;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
  return result;
}

void sub_100497A14(char *a1, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v9 = *(void *)(*(void *)v4 + 16);
  unint64_t v10 = *(void *)(*(void *)v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1009222B0();
    }
    else
    {
      if (v10 > v9)
      {
        sub_1009244B8();
        goto LABEL_47;
      }
      sub_100499CE8();
    }
    uint64_t v11 = *(void *)v4;
    sub_10096D4B0();
    if ((a2 & 0x100) != 0)
    {
      sub_10096D4C0(1uLL);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v12 = a1;
      sub_10096BD50();
      swift_bridgeObjectRelease();
      sub_1000D30C4(a1, a2, 1);
    }
    else
    {
      sub_10096D4C0(0);
      if ((_BYTE)a2)
      {
        if (a2 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0((Swift::UInt64)a1);
        }
        else
        {
          if (a1) {
            Swift::UInt v13 = 3;
          }
          else {
            Swift::UInt v13 = 2;
          }
          sub_10096D4C0(v13);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0((Swift::UInt32)a1);
      }
    }
    uint64_t v4 = &v37;
    Swift::Int v14 = sub_10096D500();
    uint64_t v15 = -1 << *(unsigned char *)(v11 + 32);
    a3 = v14 & ~v15;
    uint64_t v16 = v11 + 56;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v17 = ~v15;
      BOOL v18 = a2 == 2;
      BOOL v19 = a1 == (char *)1 && a2 == 2;
      if (a1) {
        BOOL v18 = 0;
      }
      BOOL v33 = v18;
      BOOL v34 = v19;
      uint64_t v36 = v11 + 56;
      do
      {
        uint64_t v20 = *(void *)(v11 + 48) + 16 * a3;
        uint64_t v4 = *(char **)v20;
        uint64_t v5 = *(unsigned __int8 *)(v20 + 8);
        if (*(unsigned char *)(v20 + 9))
        {
          if ((a2 & 0x100) != 0)
          {
            uint64_t v21 = v11;
            uint64_t v22 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
            uint64_t v24 = v23;
            if (v22 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v24 == v25) {
              goto LABEL_50;
            }
            char v27 = sub_10096D2D0();
            sub_10009C394(v4, v5, 1);
            sub_10009C394(v4, v5, 1);
            sub_10009C394(a1, a2, 1);
            sub_10009C394(v4, v5, 1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1000D30C4(a1, a2, 1);

            sub_1000D30C4(v4, v5, 1);
            sub_1000D30C4(v4, v5, 1);
            uint64_t v11 = v21;
            uint64_t v16 = v36;
            if (v27) {
              goto LABEL_51;
            }
          }
        }
        else if ((a2 & 0x100) == 0)
        {
          if (*(unsigned char *)(v20 + 8))
          {
            if (v5 == 1)
            {
              if (a2 == 1 && v4 == a1) {
                goto LABEL_51;
              }
            }
            else if (v4)
            {
              if (v34) {
                goto LABEL_51;
              }
            }
            else if (v33)
            {
              goto LABEL_51;
            }
          }
          else if (!(_BYTE)a2 && v4 == a1)
          {
            goto LABEL_51;
          }
        }
        a3 = (a3 + 1) & v17;
      }
      while (((*(void *)(v16 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_47:
  uint64_t v28 = *v35;
  *(void *)(*v35 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v29 = *(void *)(v28 + 48) + 16 * a3;
  *(void *)uint64_t v29 = a1;
  *(unsigned char *)(v29 + 8) = a2;
  *(unsigned char *)(v29 + 9) = BYTE1(a2) & 1;
  uint64_t v30 = *(void *)(v28 + 16);
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
    __break(1u);
LABEL_50:
    sub_10009C394(v4, v5, 1);
    sub_10009C394(v4, v5, 1);
    sub_10009C394(a1, a2, 1);
    sub_10009C394(v4, v5, 1);
    swift_bridgeObjectRelease_n();
    sub_1000D30C4(a1, a2, 1);

    sub_1000D30C4(v4, v5, 1);
    sub_1000D30C4(v4, v5, 1);
LABEL_51:
    sub_10002B7CC((uint64_t *)&unk_100AD62C0);
    sub_10096D3B0();
    __break(1u);
  }
  else
  {
    *(void *)(v28 + 16) = v32;
  }
}

void sub_100497E18(void *a1, void *a2, void *a3, char a4, unint64_t i, char a6)
{
  unint64_t v12 = *(void *)(*v6 + 16);
  unint64_t v13 = *(void *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0) {
    goto LABEL_14;
  }
  if (a6)
  {
    sub_100922494();
  }
  else
  {
    if (v13 > v12)
    {
      unint64_t v14 = (unint64_t)a1;
      unint64_t v15 = (unint64_t)a2;
      unint64_t v16 = (unint64_t)a3;
      sub_10092467C();
      goto LABEL_15;
    }
    sub_100499EAC();
  }
  uint64_t v17 = *v6;
  sub_10096D4B0();
  sub_100273638((uint64_t)v42, a1, a2, a3, a4);
  unint64_t i = sub_10096D500() & ~(-1 << *(unsigned char *)(v17 + 32));
  uint64_t v41 = v17 + 56;
  if (((*(void *)(v17 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) == 0)
  {
LABEL_14:
    unint64_t v14 = (unint64_t)a1;
    unint64_t v15 = (unint64_t)a2;
    unint64_t v16 = (unint64_t)a3;
    goto LABEL_15;
  }
  uint64_t v37 = -1 << *(unsigned char *)(v17 + 32);
  uint64_t v39 = v17;
  uint64_t v18 = *(void *)(v17 + 48) + 32 * i;
  id v19 = *(id *)v18;
  uint64_t v20 = *(void **)(v18 + 8);
  uint64_t v21 = *(void **)(v18 + 16);
  char v22 = *(unsigned char *)(v18 + 24);
  sub_10009C004(*(id *)v18, v20, v21, v22);
  unint64_t v14 = (unint64_t)a1;
  unint64_t v23 = (unint64_t)a1;
  unint64_t v15 = (unint64_t)a2;
  unint64_t v24 = (unint64_t)a2;
  unint64_t v16 = (unint64_t)a3;
  char v40 = a4;
  char v25 = sub_1002725E0(v19, v20, v21, v22, v23, v24, (unint64_t)a3, a4);
  sub_1001FAB20(v19, v20, v21, v22);
  if (v25) {
    goto LABEL_19;
  }
  for (unint64_t i = (i + 1) & ~v37; ((*(void *)(v41 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; a4 = v40)
  {
    uint64_t v26 = *(void *)(v39 + 48) + 32 * i;
    id v27 = *(id *)v26;
    uint64_t v28 = *(void **)(v26 + 8);
    uint64_t v29 = *(void **)(v26 + 16);
    char v30 = *(unsigned char *)(v26 + 24);
    sub_10009C004(*(id *)v26, v28, v29, v30);
    char v31 = sub_1002725E0(v27, v28, v29, v30, v14, v15, v16, a4);
    sub_1001FAB20(v27, v28, v29, v30);
    if (v31) {
      goto LABEL_19;
    }
    unint64_t i = (i + 1) & ~v37;
  }
LABEL_15:
  uint64_t v32 = *v38;
  *(void *)(*v38 + 8 * (i >> 6) + 56) |= 1 << i;
  uint64_t v33 = *(void *)(v32 + 48) + 32 * i;
  *(void *)uint64_t v33 = v14;
  *(void *)(v33 + 8) = v15;
  *(void *)(v33 + 16) = v16;
  *(unsigned char *)(v33 + 24) = a4;
  uint64_t v34 = *(void *)(v32 + 16);
  BOOL v35 = __OFADD__(v34, 1);
  uint64_t v36 = v34 + 1;
  if (!v35)
  {
    *(void *)(v32 + 16) = v36;
    return;
  }
  __break(1u);
LABEL_19:
  sub_10002B7CC(&qword_100ACE948);
  sub_10096D3B0();
  __break(1u);
}

uint64_t sub_1004980C8(uint64_t a1, unint64_t i, char a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_13;
  }
  if (a3)
  {
    sub_1009227B0();
  }
  else
  {
    if (v8 > v7)
    {
      sub_100924840();
      goto LABEL_13;
    }
    sub_10049A19C();
  }
  uint64_t v9 = *v3;
  sub_10096D4B0();
  sub_1002739A4();
  Swift::Int v10 = sub_10096D500();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t i = v10 & ~v11;
  uint64_t v12 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_10001AE98(*(void *)(v9 + 48) + 48 * i, (uint64_t)v18, &qword_100ACC9E0);
    if (sub_1002731C8((uint64_t)v18, a1)) {
      goto LABEL_16;
    }
    for (unint64_t i = (i + 1) & ~v11; ((*(void *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & ~v11)
    {
      sub_10001AE98(*(void *)(v9 + 48) + 48 * i, (uint64_t)v19, &qword_100ACC9E0);
      if (sub_1002731C8((uint64_t)v19, a1)) {
        goto LABEL_16;
      }
    }
  }
LABEL_13:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  uint64_t result = sub_10001AE98(a1, *(void *)(v13 + 48) + 48 * i, &qword_100ACC9E0);
  uint64_t v15 = *(void *)(v13 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v13 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_16:
  sub_10002B7CC(&qword_100ACC9E0);
  uint64_t result = sub_10096D3B0();
  __break(1u);
  return result;
}

unint64_t sub_100498294(unint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100922D70();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (unint64_t)sub_100924BA0();
      goto LABEL_14;
    }
    sub_10049A710();
  }
  uint64_t v9 = *v3;
  sub_10096D4B0();
  sub_1008D7138((uint64_t)v20, v6);
  uint64_t result = sub_10096D500();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    unint64_t v11 = *(void *)(*(void *)(v9 + 48) + 8 * a2);
    sub_1000CE628(v11);
    char v12 = sub_1008D8F64(v11, v6);
    uint64_t result = sub_1004A6318(v11);
    if (v12)
    {
LABEL_13:
      sub_10002B7CC(&qword_100AD6598);
      uint64_t result = sub_10096D3B0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        unint64_t v14 = *(void *)(*(void *)(v9 + 48) + 8 * a2);
        sub_1000CE628(v14);
        char v15 = sub_1008D8F64(v14, v6);
        uint64_t result = sub_1004A6318(v14);
        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = v6;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

uint64_t sub_10049842C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v65 = a1;
  uint64_t v64 = sub_10002B7CC((uint64_t *)&unk_100AD0AA0);
  __chkstk_darwin(v64);
  unint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100AD65B0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v59 = (void **)((char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v54 - v12;
  uint64_t v14 = sub_10002B7CC((uint64_t *)&unk_100AD0A90);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v58 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v62 = (char *)&v54 - v17;
  uint64_t v18 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v61 = (uint64_t)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v24 = (char *)&v54 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  id v27 = (char *)&v54 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v54 - v28;
  unint64_t v30 = *(void *)(*v4 + 16);
  unint64_t v31 = *(void *)(*v4 + 24);
  uint64_t v55 = v19;
  uint64_t v56 = v4;
  if (v31 <= v30 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_10092302C();
    }
    else
    {
      if (v31 > v30)
      {
        sub_100924D4C();
        goto LABEL_24;
      }
      sub_10049A9A0();
    }
    uint64_t v63 = *v4;
    sub_10096D4B0();
    sub_10002B70C(v65, (uint64_t)v29, &qword_100AD65C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = (uint64_t *)&unk_100AD65B0;
      sub_10001AE98((uint64_t)v29, (uint64_t)v13, (uint64_t *)&unk_100AD65B0);
      sub_10096D4C0(1uLL);
      sub_1008D6D84();
    }
    else
    {
      uint64_t v32 = (uint64_t *)&unk_100AD0A90;
      uint64_t v13 = v62;
      sub_10001AE98((uint64_t)v29, (uint64_t)v62, (uint64_t *)&unk_100AD0A90);
      sub_10096D4C0(0);
      sub_1008D68E4();
    }
    sub_10002B770((uint64_t)v13, v32);
    Swift::Int v33 = sub_10096D500();
    uint64_t v34 = -1 << *(unsigned char *)(v63 + 32);
    a2 = v33 & ~v34;
    uint64_t v62 = (char *)(v63 + 56);
    if ((*(void *)(v63 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v60 = v24;
      uint64_t v35 = ~v34;
      uint64_t v36 = *(void *)(v19 + 72);
      uint64_t v37 = v61;
      uint64_t v57 = v27;
      do
      {
        sub_10002B70C(*(void *)(v63 + 48) + v36 * a2, (uint64_t)v27, &qword_100AD65C0);
        uint64_t v40 = (uint64_t)&v8[*(int *)(v64 + 48)];
        sub_10002B70C((uint64_t)v27, (uint64_t)v8, &qword_100AD65C0);
        sub_10002B70C(v65, v40, &qword_100AD65C0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_10002B70C((uint64_t)v8, v37, &qword_100AD65C0);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            uint64_t v38 = v37;
            uint64_t v39 = (uint64_t *)&unk_100AD65B0;
            goto LABEL_14;
          }
          uint64_t v41 = v59;
          sub_10001AE98(v40, (uint64_t)v59, (uint64_t *)&unk_100AD65B0);
          char v42 = sub_10075E090(v61, v41);
          uint64_t v43 = (uint64_t)v41;
          uint64_t v37 = v61;
          sub_10002B770(v43, (uint64_t *)&unk_100AD65B0);
          uint64_t v44 = v37;
          uint64_t v45 = (uint64_t *)&unk_100AD65B0;
        }
        else
        {
          uint64_t v46 = (uint64_t)v60;
          sub_10002B70C((uint64_t)v8, (uint64_t)v60, &qword_100AD65C0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v38 = v46;
            uint64_t v39 = (uint64_t *)&unk_100AD0A90;
LABEL_14:
            sub_10002B770(v38, v39);
            sub_10002B770((uint64_t)v8, (uint64_t *)&unk_100AD0AA0);
            goto LABEL_15;
          }
          uint64_t v47 = v58;
          sub_10001AE98(v40, v58, (uint64_t *)&unk_100AD0A90);
          char v42 = sub_10075D534(v46, v47);
          uint64_t v48 = v47;
          uint64_t v37 = v61;
          sub_10002B770(v48, (uint64_t *)&unk_100AD0A90);
          uint64_t v44 = v46;
          uint64_t v45 = (uint64_t *)&unk_100AD0A90;
          id v27 = v57;
        }
        sub_10002B770(v44, v45);
        sub_10002B770((uint64_t)v8, &qword_100AD65C0);
        if (v42) {
          goto LABEL_27;
        }
LABEL_15:
        sub_10002B770((uint64_t)v27, &qword_100AD65C0);
        a2 = (a2 + 1) & v35;
      }
      while (((*(void *)&v62[(a2 >> 3) & 0xFFFFFFFFFFFFFF8] >> a2) & 1) != 0);
    }
  }
LABEL_24:
  uint64_t v49 = *v56;
  *(void *)(*v56 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_10001AE98(v65, *(void *)(v49 + 48) + *(void *)(v55 + 72) * a2, &qword_100AD65C0);
  uint64_t v51 = *(void *)(v49 + 16);
  BOOL v52 = __OFADD__(v51, 1);
  uint64_t v53 = v51 + 1;
  if (v52)
  {
    __break(1u);
LABEL_27:
    sub_10002B770((uint64_t)v27, &qword_100AD65C0);
    uint64_t result = sub_10096D3B0();
    __break(1u);
  }
  else
  {
    *(void *)(v49 + 16) = v53;
  }
  return result;
}

void sub_100498A10(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_100923298(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_100924FB4();
      goto LABEL_14;
    }
    sub_10049ABD8(v8, &qword_100AD62F8);
  }
  uint64_t v9 = *v3;
  Swift::Int v10 = sub_10096C820(*(void *)(*v3 + 40));
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100011348(0, &qword_100AD62F0);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_10096C830();

    if (v13)
    {
LABEL_13:
      sub_10096D3B0();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_10096C830();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

void sub_100498BA8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1009232A4(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_100924FC0();
      goto LABEL_14;
    }
    sub_10049ABD8(v8, (uint64_t *)&unk_100ACCC20);
  }
  uint64_t v9 = *v3;
  Swift::Int v10 = sub_10096C820(*(void *)(*v3 + 40));
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100011348(0, (unint64_t *)&unk_100AD6280);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_10096C830();

    if (v13)
    {
LABEL_13:
      sub_10096D3B0();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_10096C830();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

Swift::Int sub_100498D40(Swift::Int result, Swift::UInt64 a2, Swift::UInt64 a3, unint64_t a4, char a5)
{
  unint64_t v6 = v5;
  Swift::UInt64 v10 = result;
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0) {
    goto LABEL_18;
  }
  if (a5)
  {
    sub_10092354C();
  }
  else
  {
    if (v12 > v11)
    {
      uint64_t result = (Swift::Int)sub_100924FCC();
      goto LABEL_18;
    }
    sub_10049AE50();
  }
  uint64_t v13 = *v5;
  sub_10096D4B0();
  sub_10096D4F0(v10);
  sub_10096BD50();
  uint64_t result = sub_10096D500();
  uint64_t v14 = -1 << *(unsigned char *)(v13 + 32);
  a4 = result & ~v14;
  uint64_t v15 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v13 + 48);
    while (1)
    {
      uint64_t v18 = (void *)(v17 + 24 * a4);
      if (*v18 == v10)
      {
        if (v18[1] == a2 && v18[2] == a3) {
          break;
        }
        uint64_t result = sub_10096D2D0();
        if (result) {
          break;
        }
      }
      a4 = (a4 + 1) & v16;
      if (((*(void *)(v15 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) == 0) {
        goto LABEL_18;
      }
    }
    uint64_t result = sub_10096D3B0();
    __break(1u);
  }
LABEL_18:
  uint64_t v20 = *v6;
  *(void *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v21 = (Swift::UInt64 *)(*(void *)(v20 + 48) + 24 * a4);
  *uint64_t v21 = v10;
  v21[1] = a2;
  uint64_t v21[2] = a3;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_100498EE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC(&qword_100AD62B0);
  uint64_t result = sub_10096CB80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_43:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v15 >= v29) {
      goto LABEL_41;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v29) {
        goto LABEL_41;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v29) {
          goto LABEL_41;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
    Swift::UInt64 v19 = *(void *)v18;
    int v20 = *(unsigned __int8 *)(v18 + 8);
    sub_10096D4B0();
    if (v20)
    {
      if (v20 == 1)
      {
        sub_10096D4C0(1uLL);
        sub_10096D4F0(v19);
      }
      else
      {
        if (v19) {
          Swift::UInt v21 = 3;
        }
        else {
          Swift::UInt v21 = 2;
        }
        sub_10096D4C0(v21);
      }
    }
    else
    {
      sub_10096D4C0(0);
      sub_10096D4E0(v19);
    }
    uint64_t result = sub_10096D500();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(void *)uint64_t v12 = v19;
    *(unsigned char *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_41:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_43;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v29) {
      goto LABEL_41;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1004991D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100ACCCB0);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    Swift::UInt64 v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_10096D4B0();
    swift_bridgeObjectRetain();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100499484(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10002B7CC(a2);
  uint64_t v5 = sub_10096CB80();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  int64_t v29 = v2;
  uint64_t v30 = v4 + 56;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v31) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v30 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::UInt64 v19 = *(void **)(*(void *)(v4 + 48) + 8 * v15);
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    sub_10096D4B0();
    id v20 = v19;
    sub_10096BD50();
    Swift::Int v21 = sub_10096D500();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v6 + 48) + 8 * v13) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v31) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100499760()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD6400);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v0;
  uint64_t v31 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  for (i = v2; ; uint64_t v2 = i)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v31 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v31 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
    Swift::UInt64 v19 = *(void **)v18;
    Swift::UInt v20 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    sub_10096D4B0();
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v22 = v19;
    sub_10096BD50();
    swift_bridgeObjectRelease();
    if (v21 == 1)
    {
      sub_10096D4D0(0);
    }
    else
    {
      sub_10096D4D0(1u);
      sub_10096D4C0(v20);
    }
    uint64_t result = sub_10096D500();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
    *(void *)uint64_t v12 = v22;
    *(void *)(v12 + 8) = v20;
    *(unsigned char *)(v12 + 16) = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v31 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100499A88(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10002B7CC(a2);
  uint64_t result = sub_10096CB80();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  BOOL v28 = v3;
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    uint64_t v20 = *(void *)(*(void *)(v4 + 48) + 8 * v16);
    uint64_t result = sub_10096D4A0();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v28;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_100499CE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC(&qword_100AD62B8);
  uint64_t v3 = sub_10096CB80();
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    unint64_t result = swift_release();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v18 = *(void *)(v5 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_6:
    uint64_t v13 = *(void *)(v2 + 48) + 16 * v12;
    id v14 = *(id *)v13;
    int v15 = *(unsigned __int8 *)(v13 + 8);
    int v16 = *(unsigned __int8 *)(v13 + 9);
    sub_10009C394(*(id *)v13, *(unsigned __int8 *)(v13 + 8), *(unsigned char *)(v13 + 9));
    unint64_t result = sub_100923868(v14, v15 | (v16 << 8), v3);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  unint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100499EAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD62D0);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 32 * v14;
    int64_t v19 = *(void **)v18;
    uint64_t v20 = *(void **)(v18 + 8);
    uint64_t v21 = *(void **)(v18 + 16);
    char v22 = *(unsigned char *)(v18 + 24);
    sub_10096D4B0();
    sub_10009C004(v19, v20, v21, v22);
    sub_100273638((uint64_t)v32, v19, v20, v21, v22);
    uint64_t result = sub_10096D500();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 32 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(void *)(v12 + 16) = v21;
    *(unsigned char *)(v12 + 24) = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10049A19C()
{
  uint64_t v1 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD62E0);
  uint64_t result = sub_10096CB80();
  uint64_t v3 = result;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v0 = v3;
    return result;
  }
  int64_t v4 = 0;
  uint64_t v5 = v1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(v1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v1 + 56);
  int64_t v23 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 56;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v23) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v23) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v23) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_24:
    sub_10001AE98(*(void *)(v1 + 48) + 48 * v12, (uint64_t)v24, &qword_100ACC9E0);
    sub_10096D4B0();
    sub_1002739A4();
    uint64_t result = sub_10096D500();
    uint64_t v16 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v9 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v17) & ~*(void *)(v9 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v19 = 0;
      unint64_t v20 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v20 && (v19 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v21 = v18 == v20;
        if (v18 == v20) {
          unint64_t v18 = 0;
        }
        v19 |= v21;
        uint64_t v22 = *(void *)(v9 + 8 * v18);
      }
      while (v22 == -1);
      unint64_t v10 = __clz(__rbit64(~v22)) + (v18 << 6);
    }
    *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t result = sub_10001AE98((uint64_t)v24, *(void *)(v3 + 48) + 48 * v10, &qword_100ACC9E0);
    ++*(void *)(v3 + 16);
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v23)
  {
LABEL_33:
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v23) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10049A450()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD62A0);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_10096D4B0();
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    swift_retain();
    sub_10096BD50();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10096D500();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10049A710()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD65A0);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    unint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_10096D4B0();
    sub_1000CE628(v19);
    sub_1008D7138((uint64_t)v27, v19);
    uint64_t result = sub_10096D500();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10049A9A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10002B7CC(&qword_100AD65C8);
  uint64_t v7 = sub_10096CB80();
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_24:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = v6 + 56;
  uint64_t v10 = -1;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  unint64_t v11 = v10 & *(void *)(v6 + 56);
  int64_t v12 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v12) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_22;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_6:
    sub_10002B70C(*(void *)(v6 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v5, &qword_100AD65C0);
    uint64_t result = sub_1009239CC((uint64_t)v5, v7);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_22:
    uint64_t result = swift_release_n();
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v12) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10049ABD8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10002B7CC(a2);
  uint64_t v5 = sub_10096CB80();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_10096C820(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10049AE50()
{
  uint64_t v1 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD6290);
  uint64_t v2 = sub_10096CB80();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v28 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v9);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    unint64_t v17 = (Swift::UInt64 *)(*(void *)(v1 + 48) + 24 * v13);
    Swift::UInt64 v18 = *v17;
    Swift::UInt64 v19 = v17[1];
    Swift::UInt64 v20 = v17[2];
    sub_10096D4B0();
    sub_10096D4F0(v18);
    swift_bridgeObjectRetain();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    int64_t v11 = (Swift::UInt64 *)(*(void *)(v3 + 48) + 24 * v10);
    *int64_t v11 = v18;
    v11[1] = v19;
    v11[2] = v20;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10049B134(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a2((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    unint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = a2((char *)v10, v7, v5);
    swift_slowDealloc();
  }
  return v4;
}

uint64_t sub_10049B2A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  Swift::UInt64 v18 = (unint64_t *)result;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_17;
    }
    BOOL v13 = __OFADD__(v5++, 1);
    if (v13)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v5 >= v10) {
      return sub_100929330(v18, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    if (!v14) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_17:
    if (*(void *)(*(void *)(a3 + 56) + 8 * v12) == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_10096BD60();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16 >= 3)
      {
        *(unint64_t *)((char *)v18 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        BOOL v13 = __OFADD__(v4++, 1);
        if (v13) {
          goto LABEL_29;
        }
      }
    }
  }
  int64_t v15 = v5 + 1;
  if (v5 + 1 >= v10) {
    return sub_100929330(v18, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v5 + 2;
  if (v5 + 2 >= v10) {
    return sub_100929330(v18, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v5 + 3;
  if (v5 + 3 >= v10) {
    return sub_100929330(v18, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_15:
    int64_t v5 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_100929330(v18, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10049B464(uint64_t result, uint64_t a2, uint64_t a3)
{
  Swift::UInt64 v19 = (unint64_t *)result;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v5 << 6);
LABEL_21:
    if (*(void *)(*(void *)(a3 + 56) + 8 * v13) <= 1uLL)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_10096BD60();
      uint64_t result = swift_bridgeObjectRelease();
      if (v17 > 2) {
        continue;
      }
    }
    *(unint64_t *)((char *)v19 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    if (__OFADD__(v4++, 1)) {
      goto LABEL_27;
    }
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v14 >= v10) {
    return sub_100929330(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v14);
  ++v5;
  if (v15) {
    goto LABEL_20;
  }
  int64_t v5 = v14 + 1;
  if (v14 + 1 >= v10) {
    return sub_100929330(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v5);
  if (v15) {
    goto LABEL_20;
  }
  int64_t v5 = v14 + 2;
  if (v14 + 2 >= v10) {
    return sub_100929330(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v5);
  if (v15)
  {
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_21;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10) {
    return sub_100929330(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_100929330(v19, a2, v4, a3);
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

Swift::Int sub_10049B62C(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_10057C9D0(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_10049B698(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_10049B698(uint64_t *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_10096D210(v3);
  if (result < v3)
  {
    Swift::Int v194 = result;
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1)
    {
LABEL_216:
      Swift::Int result = sub_10096CE10();
      __break(1u);
      return result;
    }
    uint64_t v198 = v1;
    if (v3 < 2)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      __dst = (char *)&_swiftEmptyArrayStorage[4];
      if (v3 != 1)
      {
        unint64_t v12 = _swiftEmptyArrayStorage[2];
        unint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_174:
        unint64_t v184 = v11;
        unint64_t v193 = v8;
        if (v12 >= 2)
        {
          uint64_t v185 = *v2;
          do
          {
            unint64_t v186 = v12 - 2;
            if (v12 < 2) {
              goto LABEL_203;
            }
            if (!v185) {
              goto LABEL_215;
            }
            uint64_t v187 = v184;
            uint64_t v188 = *(void *)&v184[16 * v186 + 32];
            uint64_t v189 = *(void *)&v184[16 * v12 + 24];
            sub_10049C314((char *)(v185 + 24 * v188), (char *)(v185 + 24 * *(void *)&v184[16 * v12 + 16]), (char *)(v185 + 24 * v189), __dst);
            if (v198) {
              break;
            }
            if (v189 < v188) {
              goto LABEL_204;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v187 = sub_100062FFC((uint64_t)v187);
            }
            if (v186 >= *((void *)v187 + 2)) {
              goto LABEL_205;
            }
            uint64_t v190 = &v187[16 * v186 + 32];
            *(void *)uint64_t v190 = v188;
            *((void *)v190 + 1) = v189;
            unint64_t v191 = *((void *)v187 + 2);
            if (v12 > v191) {
              goto LABEL_206;
            }
            memmove(&v187[16 * v12 + 16], &v187[16 * v12 + 32], 16 * (v191 - v12));
            unint64_t v184 = v187;
            *((void *)v187 + 2) = v191 - 1;
            unint64_t v12 = v191 - 1;
          }
          while (v191 > 2);
        }
LABEL_171:
        swift_bridgeObjectRelease();
        v193[2] = 0;
        return swift_bridgeObjectRelease();
      }
      unint64_t v193 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v6 = v5 >> 1;
      sub_10002B7CC((uint64_t *)&unk_100AD6500);
      uint64_t v7 = sub_10096C120();
      *(void *)(v7 + 16) = v6;
      unint64_t v193 = (void *)v7;
      __dst = (char *)(v7 + 32);
    }
    Swift::Int v9 = 0;
    uint64_t v192 = v2;
    uint64_t v10 = *v2;
    unint64_t v11 = (char *)_swiftEmptyArrayStorage;
    Swift::Int v195 = v3;
    while (1)
    {
      Swift::Int v13 = v9 + 1;
      if (v9 + 1 >= v3) {
        goto LABEL_82;
      }
      uint64_t v14 = *(void *)(v10 + 24 * v13 + 16);
      unint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        if (v15 >= 5)
        {
          uint64_t v18 = *(void *)(v14 + 16) & 3;
          if ((v15 & 3) == 0) {
            uint64_t v18 = 4;
          }
          unint64_t v17 = v15 - v18;
          Swift::UInt64 v19 = (const double *)(v14 + 96);
          int64x2_t v20 = 0uLL;
          unint64_t v21 = v17;
          int64x2_t v22 = 0uLL;
          do
          {
            unint64_t v23 = v19 - 8;
            unsigned long long v24 = (unsigned __int128)vld4q_f64(v23);
            unsigned long long v25 = (unsigned __int128)vld4q_f64(v19);
            int64x2_t v20 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v24, v20), (int8x16_t)v24, (int8x16_t)v20);
            int64x2_t v22 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v25, v22), (int8x16_t)v25, (int8x16_t)v22);
            v19 += 16;
            v21 -= 4;
          }
          while (v21);
          int8x16_t v26 = vbslq_s8((int8x16_t)vcgtq_s64(v20, v22), (int8x16_t)v20, (int8x16_t)v22);
          uint64_t v27 = vextq_s8(v26, v26, 8uLL).u64[0];
          int8x8_t v16 = vbsl_s8((int8x8_t)vcgtd_s64(v26.i64[0], v27), *(int8x8_t *)v26.i8, (int8x8_t)v27);
        }
        else
        {
          int8x8_t v16 = 0;
          unint64_t v17 = 0;
        }
        unint64_t v28 = v15 - v17;
        int64_t v29 = (int8x8_t *)(v14 + 32 * v17 + 32);
        do
        {
          int8x8_t v31 = *v29;
          v29 += 4;
          int8x8_t v30 = v31;
          if (*(void *)&v31 > *(void *)&v16) {
            int8x8_t v16 = v30;
          }
          --v28;
        }
        while (v28);
      }
      else
      {
        int8x8_t v16 = 0;
      }
      uint64_t v32 = *(void *)(v10 + 24 * v9 + 16);
      unint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        if (v33 >= 5)
        {
          uint64_t v36 = *(void *)(v32 + 16) & 3;
          if ((v33 & 3) == 0) {
            uint64_t v36 = 4;
          }
          unint64_t v35 = v33 - v36;
          uint64_t v37 = (const double *)(v32 + 96);
          int64x2_t v38 = 0uLL;
          unint64_t v39 = v35;
          int64x2_t v40 = 0uLL;
          do
          {
            uint64_t v41 = v37 - 8;
            unsigned long long v42 = (unsigned __int128)vld4q_f64(v41);
            unsigned long long v43 = (unsigned __int128)vld4q_f64(v37);
            int64x2_t v38 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v42, v38), (int8x16_t)v42, (int8x16_t)v38);
            int64x2_t v40 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v43, v40), (int8x16_t)v43, (int8x16_t)v40);
            v37 += 16;
            v39 -= 4;
          }
          while (v39);
          int8x16_t v44 = vbslq_s8((int8x16_t)vcgtq_s64(v38, v40), (int8x16_t)v38, (int8x16_t)v40);
          uint64_t v45 = vextq_s8(v44, v44, 8uLL).u64[0];
          int8x8_t v34 = vbsl_s8((int8x8_t)vcgtd_s64(v44.i64[0], v45), *(int8x8_t *)v44.i8, (int8x8_t)v45);
        }
        else
        {
          int8x8_t v34 = 0;
          unint64_t v35 = 0;
        }
        unint64_t v46 = v33 - v35;
        uint64_t v47 = (int8x8_t *)(v32 + 32 * v35 + 32);
        do
        {
          int8x8_t v49 = *v47;
          v47 += 4;
          int8x8_t v48 = v49;
          if (*(void *)&v49 > *(void *)&v34) {
            int8x8_t v34 = v48;
          }
          --v46;
        }
        while (v46);
      }
      else
      {
        int8x8_t v34 = 0;
      }
      Swift::Int v13 = v9 + 2;
      if (v9 + 2 >= v3) {
        break;
      }
      do
      {
        uint64_t v50 = *(void *)(v10 + 24 * v13 + 16);
        unint64_t v51 = *(void *)(v50 + 16);
        if (v51)
        {
          if (v51 >= 5)
          {
            uint64_t v54 = *(void *)(v50 + 16) & 3;
            if ((v51 & 3) == 0) {
              uint64_t v54 = 4;
            }
            unint64_t v53 = v51 - v54;
            uint64_t v55 = (const double *)(v50 + 96);
            int64x2_t v56 = 0uLL;
            unint64_t v57 = v53;
            int64x2_t v58 = 0uLL;
            do
            {
              uint64_t v59 = v55 - 8;
              unsigned long long v60 = (unsigned __int128)vld4q_f64(v59);
              unsigned long long v61 = (unsigned __int128)vld4q_f64(v55);
              int64x2_t v56 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v60, v56), (int8x16_t)v60, (int8x16_t)v56);
              int64x2_t v58 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v61, v58), (int8x16_t)v61, (int8x16_t)v58);
              v55 += 16;
              v57 -= 4;
            }
            while (v57);
            int8x16_t v62 = vbslq_s8((int8x16_t)vcgtq_s64(v56, v58), (int8x16_t)v56, (int8x16_t)v58);
            uint64_t v63 = vextq_s8(v62, v62, 8uLL).u64[0];
            int8x8_t v52 = vbsl_s8((int8x8_t)vcgtd_s64(v62.i64[0], v63), *(int8x8_t *)v62.i8, (int8x8_t)v63);
          }
          else
          {
            int8x8_t v52 = 0;
            unint64_t v53 = 0;
          }
          unint64_t v64 = v51 - v53;
          uint64_t v65 = (int8x8_t *)(v50 + 32 * v53 + 32);
          do
          {
            int8x8_t v67 = *v65;
            v65 += 4;
            int8x8_t v66 = v67;
            if (*(void *)&v67 > *(void *)&v52) {
              int8x8_t v52 = v66;
            }
            --v64;
          }
          while (v64);
        }
        else
        {
          int8x8_t v52 = 0;
        }
        unint64_t v68 = *(void *)(v14 + 16);
        if (v68)
        {
          if (v68 >= 5)
          {
            uint64_t v71 = *(void *)(v14 + 16) & 3;
            if ((v68 & 3) == 0) {
              uint64_t v71 = 4;
            }
            unint64_t v70 = v68 - v71;
            uint64_t v72 = (const double *)(v14 + 96);
            int64x2_t v73 = 0uLL;
            unint64_t v74 = v70;
            int64x2_t v75 = 0uLL;
            do
            {
              unint64_t v76 = v72 - 8;
              unsigned long long v77 = (unsigned __int128)vld4q_f64(v76);
              unsigned long long v78 = (unsigned __int128)vld4q_f64(v72);
              int64x2_t v73 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v77, v73), (int8x16_t)v77, (int8x16_t)v73);
              int64x2_t v75 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v78, v75), (int8x16_t)v78, (int8x16_t)v75);
              v72 += 16;
              v74 -= 4;
            }
            while (v74);
            int8x16_t v79 = vbslq_s8((int8x16_t)vcgtq_s64(v73, v75), (int8x16_t)v73, (int8x16_t)v75);
            uint64_t v80 = vextq_s8(v79, v79, 8uLL).u64[0];
            int8x8_t v69 = vbsl_s8((int8x8_t)vcgtd_s64(v79.i64[0], v80), *(int8x8_t *)v79.i8, (int8x8_t)v80);
          }
          else
          {
            int8x8_t v69 = 0;
            unint64_t v70 = 0;
          }
          unint64_t v81 = v68 - v70;
          int64_t v82 = (int8x8_t *)(v14 + 32 * v70 + 32);
          do
          {
            int8x8_t v84 = *v82;
            v82 += 4;
            int8x8_t v83 = v84;
            if (*(void *)&v84 > *(void *)&v69) {
              int8x8_t v69 = v83;
            }
            --v81;
          }
          while (v81);
          if (*(void *)&v34 < *(void *)&v16 == *(void *)&v69 >= *(void *)&v52) {
            goto LABEL_73;
          }
        }
        else if (*(void *)&v34 < *(void *)&v16 == *(void *)&v52 < 1)
        {
          goto LABEL_73;
        }
        ++v13;
        uint64_t v14 = v50;
      }
      while (v13 != v3);
      Swift::Int v13 = v3;
      if (*(void *)&v34 < *(void *)&v16) {
        goto LABEL_74;
      }
LABEL_82:
      if (v13 >= v3) {
        goto LABEL_124;
      }
      if (__OFSUB__(v13, v9)) {
        goto LABEL_207;
      }
      if (v13 - v9 >= v194) {
        goto LABEL_124;
      }
      Swift::Int v94 = v9 + v194;
      if (__OFADD__(v9, v194)) {
        goto LABEL_210;
      }
      if (v94 >= v3) {
        Swift::Int v94 = v3;
      }
      if (v94 < v9)
      {
LABEL_211:
        __break(1u);
LABEL_212:
        __break(1u);
LABEL_213:
        __break(1u);
LABEL_214:
        __break(1u);
LABEL_215:
        __break(1u);
        goto LABEL_216;
      }
      if (v13 != v94)
      {
        while (1)
        {
          uint64_t v95 = *(void *)(v10 + 24 * v13 + 16);
          Swift::Int v96 = v13;
          do
          {
            uint64_t v97 = (uint64_t *)(v10 + 24 * v96);
            uint64_t v98 = *(v97 - 1);
            unint64_t v99 = *(void *)(v95 + 16);
            if (!v99)
            {
              unint64_t v102 = *(void *)(v98 + 16);
              if (!v102) {
                break;
              }
              uint64_t v100 = 0;
LABEL_108:
              if (v102 >= 4)
              {
                uint64_t v118 = v102 & 0x7FFFFFFFFFFFFFFCLL;
                uint64_t v119 = (uint64_t *)(v98 + 128);
                int64x2_t v120 = 0uLL;
                uint64_t v121 = v102 & 0x7FFFFFFFFFFFFFFCLL;
                int64x2_t v122 = 0uLL;
                do
                {
                  v123.i64[0] = *(v119 - 12);
                  v123.i64[1] = *(v119 - 8);
                  v124.i64[0] = *(v119 - 4);
                  v124.i64[1] = *v119;
                  int64x2_t v120 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v123, v120), (int8x16_t)v123, (int8x16_t)v120);
                  int64x2_t v122 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v124, v122), (int8x16_t)v124, (int8x16_t)v122);
                  v119 += 16;
                  v121 -= 4;
                }
                while (v121);
                int8x16_t v125 = vbslq_s8((int8x16_t)vcgtq_s64(v120, v122), (int8x16_t)v120, (int8x16_t)v122);
                uint64_t v126 = vextq_s8(v125, v125, 8uLL).u64[0];
                int8x8_t v117 = vbsl_s8((int8x8_t)vcgtd_s64(v125.i64[0], v126), *(int8x8_t *)v125.i8, (int8x8_t)v126);
                if (v102 != v118) {
                  goto LABEL_113;
                }
              }
              else
              {
                int8x8_t v117 = 0;
                uint64_t v118 = 0;
LABEL_113:
                unint64_t v127 = v102 - v118;
                int64_t v128 = (int8x8_t *)(v98 + 32 * v118 + 32);
                do
                {
                  int8x8_t v130 = *v128;
                  v128 += 4;
                  int8x8_t v129 = v130;
                  if (*(void *)&v130 > *(void *)&v117) {
                    int8x8_t v117 = v129;
                  }
                  --v127;
                }
                while (v127);
              }
              if (*(void *)&v117 >= v100) {
                break;
              }
              goto LABEL_120;
            }
            if (v99 >= 5)
            {
              uint64_t v103 = *(void *)(v95 + 16) & 3;
              if ((v99 & 3) == 0) {
                uint64_t v103 = 4;
              }
              unint64_t v101 = v99 - v103;
              int64x2_t v104 = 0uLL;
              unint64_t v105 = v99 - v103;
              uint64_t v106 = (const double *)(v95 + 96);
              int64x2_t v107 = 0uLL;
              do
              {
                uint64_t v108 = v106 - 8;
                unsigned long long v109 = (unsigned __int128)vld4q_f64(v108);
                unsigned long long v110 = (unsigned __int128)vld4q_f64(v106);
                int64x2_t v104 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v109, v104), (int8x16_t)v109, (int8x16_t)v104);
                int64x2_t v107 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v110, v107), (int8x16_t)v110, (int8x16_t)v107);
                v106 += 16;
                v105 -= 4;
              }
              while (v105);
              int8x16_t v111 = vbslq_s8((int8x16_t)vcgtq_s64(v104, v107), (int8x16_t)v104, (int8x16_t)v107);
              uint64_t v112 = vextq_s8(v111, v111, 8uLL).u64[0];
              uint64_t v100 = (uint64_t)vbsl_s8((int8x8_t)vcgtd_s64(v111.i64[0], v112), *(int8x8_t *)v111.i8, (int8x8_t)v112);
            }
            else
            {
              uint64_t v100 = 0;
              unint64_t v101 = 0;
            }
            unint64_t v113 = v99 - v101;
            uint64_t v114 = (uint64_t *)(v95 + 32 + 32 * v101);
            do
            {
              uint64_t v116 = *v114;
              v114 += 4;
              uint64_t v115 = v116;
              if (v116 > v100) {
                uint64_t v100 = v115;
              }
              --v113;
            }
            while (v113);
            unint64_t v102 = *(void *)(v98 + 16);
            if (v102) {
              goto LABEL_108;
            }
            if (v100 <= 0) {
              break;
            }
LABEL_120:
            if (!v10) {
              goto LABEL_212;
            }
            --v96;
            unsigned __int8 v131 = v97 - 3;
            uint64_t v132 = *v97;
            uint64_t v133 = v97[1];
            *(_OWORD *)uint64_t v97 = *(_OWORD *)(v97 - 3);
            v97[2] = *(v97 - 1);
            *unsigned __int8 v131 = v132;
            v131[1] = v133;
            *(v97 - 1) = v95;
          }
          while (v96 != v9);
          if (++v13 == v94)
          {
            Swift::Int v13 = v94;
            break;
          }
        }
      }
LABEL_124:
      if (v13 < v9) {
        goto LABEL_202;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v11 = sub_100062E1C(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v135 = *((void *)v11 + 2);
      unint64_t v134 = *((void *)v11 + 3);
      unint64_t v12 = v135 + 1;
      if (v135 >= v134 >> 1) {
        unint64_t v11 = sub_100062E1C((char *)(v134 > 1), v135 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v12;
      char v136 = v11 + 32;
      uint64_t v137 = &v11[16 * v135 + 32];
      *(void *)uint64_t v137 = v9;
      *((void *)v137 + 1) = v13;
      Swift::Int v196 = v13;
      if (v135)
      {
        while (1)
        {
          unint64_t v138 = v12 - 1;
          if (v12 >= 4)
          {
            int v143 = &v136[16 * v12];
            uint64_t v144 = *((void *)v143 - 8);
            uint64_t v145 = *((void *)v143 - 7);
            BOOL v149 = __OFSUB__(v145, v144);
            uint64_t v146 = v145 - v144;
            if (v149) {
              goto LABEL_191;
            }
            uint64_t v148 = *((void *)v143 - 6);
            uint64_t v147 = *((void *)v143 - 5);
            BOOL v149 = __OFSUB__(v147, v148);
            uint64_t v141 = v147 - v148;
            char v142 = v149;
            if (v149) {
              goto LABEL_192;
            }
            unint64_t v150 = v12 - 2;
            uint64_t v151 = &v136[16 * v12 - 32];
            uint64_t v153 = *(void *)v151;
            uint64_t v152 = *((void *)v151 + 1);
            BOOL v149 = __OFSUB__(v152, v153);
            uint64_t v154 = v152 - v153;
            if (v149) {
              goto LABEL_194;
            }
            BOOL v149 = __OFADD__(v141, v154);
            uint64_t v155 = v141 + v154;
            if (v149) {
              goto LABEL_197;
            }
            if (v155 >= v146)
            {
              uint64_t v173 = &v136[16 * v138];
              uint64_t v175 = *(void *)v173;
              uint64_t v174 = *((void *)v173 + 1);
              BOOL v149 = __OFSUB__(v174, v175);
              uint64_t v176 = v174 - v175;
              if (v149) {
                goto LABEL_201;
              }
              BOOL v166 = v141 < v176;
              goto LABEL_161;
            }
          }
          else
          {
            if (v12 != 3)
            {
              uint64_t v167 = *((void *)v11 + 4);
              uint64_t v168 = *((void *)v11 + 5);
              BOOL v149 = __OFSUB__(v168, v167);
              uint64_t v160 = v168 - v167;
              char v161 = v149;
              goto LABEL_155;
            }
            uint64_t v140 = *((void *)v11 + 4);
            uint64_t v139 = *((void *)v11 + 5);
            BOOL v149 = __OFSUB__(v139, v140);
            uint64_t v141 = v139 - v140;
            char v142 = v149;
          }
          if (v142) {
            goto LABEL_193;
          }
          unint64_t v150 = v12 - 2;
          uint64_t v156 = &v136[16 * v12 - 32];
          uint64_t v158 = *(void *)v156;
          uint64_t v157 = *((void *)v156 + 1);
          BOOL v159 = __OFSUB__(v157, v158);
          uint64_t v160 = v157 - v158;
          char v161 = v159;
          if (v159) {
            goto LABEL_196;
          }
          uint64_t v162 = &v136[16 * v138];
          uint64_t v164 = *(void *)v162;
          uint64_t v163 = *((void *)v162 + 1);
          BOOL v149 = __OFSUB__(v163, v164);
          uint64_t v165 = v163 - v164;
          if (v149) {
            goto LABEL_199;
          }
          if (__OFADD__(v160, v165)) {
            goto LABEL_200;
          }
          if (v160 + v165 >= v141)
          {
            BOOL v166 = v141 < v165;
LABEL_161:
            if (v166) {
              unint64_t v138 = v150;
            }
            goto LABEL_163;
          }
LABEL_155:
          if (v161) {
            goto LABEL_195;
          }
          char v169 = &v136[16 * v138];
          uint64_t v171 = *(void *)v169;
          uint64_t v170 = *((void *)v169 + 1);
          BOOL v149 = __OFSUB__(v170, v171);
          uint64_t v172 = v170 - v171;
          if (v149) {
            goto LABEL_198;
          }
          if (v172 < v160) {
            goto LABEL_15;
          }
LABEL_163:
          uint64_t v177 = v11;
          unint64_t v178 = v138 - 1;
          if (v138 - 1 >= v12)
          {
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
LABEL_210:
            __break(1u);
            goto LABEL_211;
          }
          if (!v10) {
            goto LABEL_213;
          }
          uint64_t v179 = &v136[16 * v178];
          uint64_t v180 = *(void *)v179;
          NSFileProviderItemIdentifier v181 = &v136[16 * v138];
          uint64_t v182 = *((void *)v181 + 1);
          sub_10049C314((char *)(v10 + 24 * *(void *)v179), (char *)(v10 + 24 * *(void *)v181), (char *)(v10 + 24 * v182), __dst);
          if (v198) {
            goto LABEL_171;
          }
          if (v182 < v180) {
            goto LABEL_188;
          }
          if (v138 > *((void *)v177 + 2)) {
            goto LABEL_189;
          }
          *(void *)uint64_t v179 = v180;
          *(void *)&v136[16 * v178 + 8] = v182;
          unint64_t v183 = *((void *)v177 + 2);
          if (v138 >= v183) {
            goto LABEL_190;
          }
          unint64_t v11 = v177;
          unint64_t v12 = v183 - 1;
          memmove(&v136[16 * v138], v181 + 16, 16 * (v183 - 1 - v138));
          *((void *)v177 + 2) = v183 - 1;
          if (v183 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v12 = 1;
LABEL_15:
      Swift::Int v3 = v195;
      Swift::Int v9 = v196;
      if (v196 >= v195)
      {
        uint64_t v2 = v192;
        uint64_t v8 = v193;
        goto LABEL_174;
      }
    }
LABEL_73:
    if (*(void *)&v34 >= *(void *)&v16) {
      goto LABEL_82;
    }
LABEL_74:
    if (v13 < v9) {
      goto LABEL_209;
    }
    if (v9 < v13)
    {
      uint64_t v85 = 24 * v13;
      uint64_t v86 = 24 * v9;
      Swift::Int v87 = v13;
      Swift::Int v88 = v9;
      while (1)
      {
        if (v88 != --v87)
        {
          if (!v10) {
            goto LABEL_214;
          }
          uint64_t v89 = v10 + v86;
          uint64_t v90 = v10 + v85;
          uint64_t v91 = *(void *)(v10 + v86);
          long long v92 = *(_OWORD *)(v10 + v86 + 8);
          long long v93 = *(_OWORD *)(v10 + v85 - 24);
          *(void *)(v89 + 16) = *(void *)(v10 + v85 - 8);
          *(_OWORD *)uint64_t v89 = v93;
          *(void *)(v90 - 24) = v91;
          *(_OWORD *)(v90 - 16) = v92;
        }
        ++v88;
        v85 -= 24;
        v86 += 24;
        if (v88 >= v87) {
          goto LABEL_82;
        }
      }
    }
    goto LABEL_82;
  }
  if (v3 < 0) {
    goto LABEL_208;
  }
  if (v3) {
    return sub_10049C12C(0, v3, 1, v2);
  }
  return result;
}

uint64_t sub_10049C12C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
LABEL_5:
    uint64_t v5 = *(void *)(v4 + 24 * a3 + 16);
    uint64_t v6 = a3;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v4 + 24 * v6);
      uint64_t v8 = *(v7 - 1);
      unint64_t v9 = *(void *)(v5 + 16);
      if (!v9) {
        break;
      }
      if (v9 >= 5)
      {
        uint64_t v13 = *(void *)(v5 + 16) & 3;
        if ((v9 & 3) == 0) {
          uint64_t v13 = 4;
        }
        unint64_t v11 = v9 - v13;
        int64x2_t v14 = 0uLL;
        unint64_t v15 = v9 - v13;
        int8x8_t v16 = (const double *)(v5 + 96);
        int64x2_t v17 = 0uLL;
        do
        {
          uint64_t v18 = v16 - 8;
          unsigned long long v19 = (unsigned __int128)vld4q_f64(v18);
          unsigned long long v20 = (unsigned __int128)vld4q_f64(v16);
          int64x2_t v14 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v19, v14), (int8x16_t)v19, (int8x16_t)v14);
          int64x2_t v17 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v20, v17), (int8x16_t)v20, (int8x16_t)v17);
          v16 += 16;
          v15 -= 4;
        }
        while (v15);
        int8x16_t v21 = vbslq_s8((int8x16_t)vcgtq_s64(v14, v17), (int8x16_t)v14, (int8x16_t)v17);
        uint64_t v22 = vextq_s8(v21, v21, 8uLL).u64[0];
        uint64_t v10 = (uint64_t)vbsl_s8((int8x8_t)vcgtd_s64(v21.i64[0], v22), *(int8x8_t *)v21.i8, (int8x8_t)v22);
      }
      else
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
      }
      unint64_t v23 = v9 - v11;
      unsigned long long v24 = (uint64_t *)(v5 + 32 + 32 * v11);
      do
      {
        uint64_t v26 = *v24;
        v24 += 4;
        uint64_t v25 = v26;
        if (v26 > v10) {
          uint64_t v10 = v25;
        }
        --v23;
      }
      while (v23);
      unint64_t v12 = *(void *)(v8 + 16);
      if (v12) {
        goto LABEL_21;
      }
      if (v10 <= 0) {
        goto LABEL_4;
      }
LABEL_33:
      if (!v4)
      {
        __break(1u);
        return result;
      }
      --v6;
      uint64_t v41 = v7 - 3;
      uint64_t v42 = *v7;
      uint64_t v43 = v7[1];
      *(_OWORD *)uint64_t v7 = *(_OWORD *)(v7 - 3);
      v7[2] = *(v7 - 1);
      *uint64_t v41 = v42;
      v41[1] = v43;
      *(v7 - 1) = v5;
      if (v6 == result)
      {
LABEL_4:
        if (++a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
    unint64_t v12 = *(void *)(v8 + 16);
    if (!v12) {
      goto LABEL_4;
    }
    uint64_t v10 = 0;
LABEL_21:
    if (v12 >= 4)
    {
      uint64_t v28 = v12 & 0x7FFFFFFFFFFFFFFCLL;
      int64_t v29 = (uint64_t *)(v8 + 128);
      int64x2_t v30 = 0uLL;
      uint64_t v31 = v12 & 0x7FFFFFFFFFFFFFFCLL;
      int64x2_t v32 = 0uLL;
      do
      {
        v33.i64[0] = *(v29 - 12);
        v33.i64[1] = *(v29 - 8);
        v34.i64[0] = *(v29 - 4);
        v34.i64[1] = *v29;
        int64x2_t v30 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v33, v30), (int8x16_t)v33, (int8x16_t)v30);
        int64x2_t v32 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v34, v32), (int8x16_t)v34, (int8x16_t)v32);
        v29 += 16;
        v31 -= 4;
      }
      while (v31);
      int8x16_t v35 = vbslq_s8((int8x16_t)vcgtq_s64(v30, v32), (int8x16_t)v30, (int8x16_t)v32);
      uint64_t v36 = vextq_s8(v35, v35, 8uLL).u64[0];
      int8x8_t v27 = vbsl_s8((int8x8_t)vcgtd_s64(v35.i64[0], v36), *(int8x8_t *)v35.i8, (int8x8_t)v36);
      if (v12 == v28) {
        goto LABEL_30;
      }
    }
    else
    {
      int8x8_t v27 = 0;
      uint64_t v28 = 0;
    }
    unint64_t v37 = v12 - v28;
    int64x2_t v38 = (int8x8_t *)(v8 + 32 * v28 + 32);
    do
    {
      int8x8_t v40 = *v38;
      v38 += 4;
      int8x8_t v39 = v40;
      if (*(void *)&v40 > *(void *)&v27) {
        int8x8_t v27 = v39;
      }
      --v37;
    }
    while (v37);
LABEL_30:
    if (*(void *)&v27 >= v10) {
      goto LABEL_4;
    }
    goto LABEL_33;
  }
  return result;
}

uint64_t sub_10049C314(char *__src, char *a2, char *a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - a2;
  uint64_t v11 = (a3 - a2) / 24;
  long long v93 = __src;
  long long v92 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -23) {
      goto LABEL_90;
    }
    if (__dst != a2 || &a2[24 * v11] <= __dst) {
      memmove(__dst, a2, 24 * v11);
    }
    unint64_t v51 = &v4[24 * v11];
    uint64_t v91 = v51;
    long long v93 = v6;
    if (v7 >= v6 || v10 < 24)
    {
LABEL_89:
      sub_10057C8EC((void **)&v93, &v92, &v91);
      return 1;
    }
    while (1)
    {
      uint64_t v52 = *((void *)v51 - 1);
      uint64_t v53 = *((void *)v6 - 1);
      unint64_t v54 = *(void *)(v52 + 16);
      if (!v54) {
        break;
      }
      if (v54 >= 5)
      {
        uint64_t v59 = *(void *)(v52 + 16) & 3;
        if ((v54 & 3) == 0) {
          uint64_t v59 = 4;
        }
        unint64_t v56 = v54 - v59;
        unsigned long long v60 = (const double *)(v52 + 96);
        int64x2_t v61 = 0uLL;
        unint64_t v62 = v56;
        int64x2_t v63 = 0uLL;
        do
        {
          unint64_t v64 = v60 - 8;
          unsigned long long v65 = (unsigned __int128)vld4q_f64(v64);
          unsigned long long v66 = (unsigned __int128)vld4q_f64(v60);
          int64x2_t v61 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v65, v61), (int8x16_t)v65, (int8x16_t)v61);
          int64x2_t v63 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v66, v63), (int8x16_t)v66, (int8x16_t)v63);
          v60 += 16;
          v62 -= 4;
        }
        while (v62);
        int8x16_t v67 = vbslq_s8((int8x16_t)vcgtq_s64(v61, v63), (int8x16_t)v61, (int8x16_t)v63);
        uint64_t v68 = vextq_s8(v67, v67, 8uLL).u64[0];
        uint64_t v55 = (uint64_t)vbsl_s8((int8x8_t)vcgtd_s64(v67.i64[0], v68), *(int8x8_t *)v67.i8, (int8x8_t)v68);
      }
      else
      {
        uint64_t v55 = 0;
        unint64_t v56 = 0;
      }
      unint64_t v69 = v54 - v56;
      unint64_t v70 = (uint64_t *)(v52 + 32 * v56 + 32);
      do
      {
        uint64_t v72 = *v70;
        v70 += 4;
        uint64_t v71 = v72;
        if (v72 > v55) {
          uint64_t v55 = v71;
        }
        --v69;
      }
      while (v69);
      unint64_t v57 = (unint64_t)(v5 - 24);
      unint64_t v58 = *(void *)(v53 + 16);
      if (v58) {
        goto LABEL_67;
      }
      if (v55 <= 0)
      {
LABEL_77:
        uint64_t v91 = v51 - 24;
        if (v5 < v51 || v57 >= (unint64_t)v51 || v5 != v51)
        {
          long long v87 = *(_OWORD *)(v51 - 24);
          *(void *)(v57 + 16) = *((void *)v51 - 1);
          *(_OWORD *)unint64_t v57 = v87;
        }
        Swift::Int v88 = v6;
        v51 -= 24;
        if (v6 <= v7) {
          goto LABEL_89;
        }
        goto LABEL_88;
      }
LABEL_84:
      Swift::Int v88 = v6 - 24;
      if (v5 != v6 || v57 >= (unint64_t)v6)
      {
        long long v89 = *(_OWORD *)v88;
        *(void *)(v57 + 16) = *((void *)v6 - 1);
        *(_OWORD *)unint64_t v57 = v89;
      }
      long long v93 = v6 - 24;
      if (v88 <= v7) {
        goto LABEL_89;
      }
LABEL_88:
      uint64_t v6 = v88;
      uint64_t v5 = (char *)v57;
      if (v51 <= v4) {
        goto LABEL_89;
      }
    }
    unint64_t v57 = (unint64_t)(v5 - 24);
    unint64_t v58 = *(void *)(v53 + 16);
    if (!v58) {
      goto LABEL_77;
    }
    uint64_t v55 = 0;
LABEL_67:
    if (v58 >= 4)
    {
      uint64_t v74 = v58 & 0x7FFFFFFFFFFFFFFCLL;
      int64x2_t v75 = (uint64_t *)(v53 + 128);
      int64x2_t v76 = 0uLL;
      uint64_t v77 = v58 & 0x7FFFFFFFFFFFFFFCLL;
      int64x2_t v78 = 0uLL;
      do
      {
        v79.i64[0] = *(v75 - 12);
        v79.i64[1] = *(v75 - 8);
        v80.i64[0] = *(v75 - 4);
        v80.i64[1] = *v75;
        int64x2_t v76 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v79, v76), (int8x16_t)v79, (int8x16_t)v76);
        int64x2_t v78 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v80, v78), (int8x16_t)v80, (int8x16_t)v78);
        v75 += 16;
        v77 -= 4;
      }
      while (v77);
      int8x16_t v81 = vbslq_s8((int8x16_t)vcgtq_s64(v76, v78), (int8x16_t)v76, (int8x16_t)v78);
      uint64_t v82 = vextq_s8(v81, v81, 8uLL).u64[0];
      int8x8_t v73 = vbsl_s8((int8x8_t)vcgtd_s64(v81.i64[0], v82), *(int8x8_t *)v81.i8, (int8x8_t)v82);
      if (v58 == v74) {
        goto LABEL_76;
      }
    }
    else
    {
      int8x8_t v73 = 0;
      uint64_t v74 = 0;
    }
    unint64_t v83 = v58 - v74;
    int8x8_t v84 = (int8x8_t *)(v53 + 32 * v74 + 32);
    do
    {
      int8x8_t v86 = *v84;
      v84 += 4;
      int8x8_t v85 = v86;
      if (*(void *)&v86 > *(void *)&v73) {
        int8x8_t v73 = v85;
      }
      --v83;
    }
    while (v83);
LABEL_76:
    if (*(void *)&v73 >= v55) {
      goto LABEL_77;
    }
    goto LABEL_84;
  }
  if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    unint64_t v12 = &v4[24 * v9];
    uint64_t v91 = v12;
    if (v6 < v5 && v8 >= 24)
    {
      uint64_t v13 = v4;
      while (1)
      {
        uint64_t v14 = *((void *)v6 + 2);
        uint64_t v15 = *((void *)v13 + 2);
        unint64_t v16 = *(void *)(v14 + 16);
        if (!v16) {
          break;
        }
        if (v16 >= 5)
        {
          uint64_t v20 = *(void *)(v14 + 16) & 3;
          if ((v16 & 3) == 0) {
            uint64_t v20 = 4;
          }
          unint64_t v18 = v16 - v20;
          int8x16_t v21 = (const double *)(v14 + 96);
          int64x2_t v22 = 0uLL;
          unint64_t v23 = v18;
          int64x2_t v24 = 0uLL;
          do
          {
            uint64_t v25 = v21 - 8;
            unsigned long long v26 = (unsigned __int128)vld4q_f64(v25);
            unsigned long long v27 = (unsigned __int128)vld4q_f64(v21);
            int64x2_t v22 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v26, v22), (int8x16_t)v26, (int8x16_t)v22);
            int64x2_t v24 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v27, v24), (int8x16_t)v27, (int8x16_t)v24);
            v21 += 16;
            v23 -= 4;
          }
          while (v23);
          int8x16_t v28 = vbslq_s8((int8x16_t)vcgtq_s64(v22, v24), (int8x16_t)v22, (int8x16_t)v24);
          uint64_t v29 = vextq_s8(v28, v28, 8uLL).u64[0];
          uint64_t v17 = (uint64_t)vbsl_s8((int8x8_t)vcgtd_s64(v28.i64[0], v29), *(int8x8_t *)v28.i8, (int8x8_t)v29);
        }
        else
        {
          uint64_t v17 = 0;
          unint64_t v18 = 0;
        }
        unint64_t v30 = v16 - v18;
        uint64_t v31 = (uint64_t *)(v14 + 32 * v18 + 32);
        do
        {
          uint64_t v33 = *v31;
          v31 += 4;
          uint64_t v32 = v33;
          if (v33 > v17) {
            uint64_t v17 = v32;
          }
          --v30;
        }
        while (v30);
        unint64_t v19 = *(void *)(v15 + 16);
        if (v19) {
          goto LABEL_24;
        }
        if (v17 > 0)
        {
LABEL_38:
          int8x8_t v49 = v6 + 24;
          int8x8_t v48 = v6;
          if (v7 == v6 && v7 < v49) {
            goto LABEL_43;
          }
          goto LABEL_42;
        }
LABEL_34:
        uint64_t v4 = v13 + 24;
        int8x8_t v48 = v13;
        int8x8_t v49 = v6;
        if (v7 == v13)
        {
          v13 += 24;
          if (v7 < v4) {
            goto LABEL_43;
          }
        }
        else
        {
          v13 += 24;
        }
LABEL_42:
        long long v50 = *(_OWORD *)v48;
        *((void *)v7 + 2) = *((void *)v48 + 2);
        *(_OWORD *)uint64_t v7 = v50;
LABEL_43:
        v7 += 24;
        if (v13 < v12)
        {
          uint64_t v6 = v49;
          if (v49 < v5) {
            continue;
          }
        }
        long long v92 = v4;
        long long v93 = v7;
        goto LABEL_89;
      }
      unint64_t v19 = *(void *)(v15 + 16);
      if (!v19) {
        goto LABEL_34;
      }
      uint64_t v17 = 0;
LABEL_24:
      if (v19 >= 4)
      {
        uint64_t v35 = v19 & 0x7FFFFFFFFFFFFFFCLL;
        uint64_t v36 = (uint64_t *)(v15 + 128);
        int64x2_t v37 = 0uLL;
        uint64_t v38 = v19 & 0x7FFFFFFFFFFFFFFCLL;
        int64x2_t v39 = 0uLL;
        do
        {
          v40.i64[0] = *(v36 - 12);
          v40.i64[1] = *(v36 - 8);
          v41.i64[0] = *(v36 - 4);
          v41.i64[1] = *v36;
          int64x2_t v37 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v40, v37), (int8x16_t)v40, (int8x16_t)v37);
          int64x2_t v39 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v41, v39), (int8x16_t)v41, (int8x16_t)v39);
          v36 += 16;
          v38 -= 4;
        }
        while (v38);
        int8x16_t v42 = vbslq_s8((int8x16_t)vcgtq_s64(v37, v39), (int8x16_t)v37, (int8x16_t)v39);
        uint64_t v43 = vextq_s8(v42, v42, 8uLL).u64[0];
        int8x8_t v34 = vbsl_s8((int8x8_t)vcgtd_s64(v42.i64[0], v43), *(int8x8_t *)v42.i8, (int8x8_t)v43);
        if (v19 == v35) {
          goto LABEL_33;
        }
      }
      else
      {
        int8x8_t v34 = 0;
        uint64_t v35 = 0;
      }
      unint64_t v44 = v19 - v35;
      uint64_t v45 = (int8x8_t *)(v15 + 32 * v35 + 32);
      do
      {
        int8x8_t v47 = *v45;
        v45 += 4;
        int8x8_t v46 = v47;
        if (*(void *)&v47 > *(void *)&v34) {
          int8x8_t v34 = v46;
        }
        --v44;
      }
      while (v44);
LABEL_33:
      if (*(void *)&v34 < v17) {
        goto LABEL_38;
      }
      goto LABEL_34;
    }
    goto LABEL_89;
  }
LABEL_90:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_10049C88C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2)
    {
      uint64_t v4 = 0;
      uint64_t v5 = a1 + 32;
      uint64_t v6 = ~(-1 << *(unsigned char *)(a2 + 32));
      uint64_t v7 = a2 + 56;
      do
      {
        uint64_t v8 = *(void *)(v5 + 8 * v4);
        uint64_t v9 = sub_10096D4A0();
        unint64_t v10 = v9 & v6;
        if ((*(void *)(v7 + (((v9 & (unint64_t)v6) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (v9 & v6)))
        {
          uint64_t v11 = *(void *)(a2 + 48);
          if (*(void *)(v11 + 8 * v10) == v8) {
            return 0;
          }
          while (1)
          {
            unint64_t v10 = (v10 + 1) & v6;
            if (((*(void *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
              break;
            }
            if (*(void *)(v11 + 8 * v10) == v8) {
              return 0;
            }
          }
        }
        ++v4;
      }
      while (v4 != v2);
    }
  }
  return 1;
}

uint64_t sub_10049C970@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10002B7CC(&qword_100ACDA10);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v45[-v8];
  uint64_t v10 = sub_10002B7CC(&qword_100AD6410);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v16 = &v45[-v15];
  if (*(unsigned char *)(v1 + 72) & 1) != 0 || (*(unsigned char *)(v1 + 40)) {
    goto LABEL_19;
  }
  uint64_t v17 = *(void *)(v1 + 64);
  if (v17 != *(void *)(v1 + 32))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v18 = *(void *)(v1 + 56);
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v55 = v7;
  if (v18 == v19)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(&v45[-v15], 1, 1, v3);
    goto LABEL_11;
  }
  if (*(unsigned char *)(v1 + 16))
  {
LABEL_20:
    __break(1u);
    return result;
  }
  if (v18 < *(void *)v1) {
    goto LABEL_16;
  }
  if (v17 != *(_DWORD *)(v1 + 8))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v18 >= v19)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v20 = *(void *)(v1 + 48);
  uint64_t v21 = *(int *)(v3 + 48);
  uint64_t v52 = v4;
  uint64_t v22 = (uint64_t)&v7[v21];
  uint64_t v23 = sub_10014E45C((uint64_t)&v7[v21], v18, v17, 0, v20);
  *(void *)uint64_t v7 = v23;
  v7[8] = v24;
  *(void *)uint64_t v9 = v23;
  v9[8] = v24;
  sub_10002B70C(v22, (uint64_t)&v9[*(int *)(v3 + 48)], &qword_100ACCB10);
  sub_10002B770((uint64_t)v7, &qword_100ACDA10);
  sub_10001AE98((uint64_t)v9, (uint64_t)v16, &qword_100ACDA10);
  uint64_t v25 = *(void *)(v1 + 8);
  uint64_t v49 = *(void *)v1;
  long long v50 = v16;
  unint64_t v51 = v13;
  char v26 = *(unsigned char *)(v1 + 16);
  uint64_t v27 = *(void *)(v1 + 24);
  uint64_t v28 = *(void *)(v1 + 32);
  char v29 = *(unsigned char *)(v1 + 40);
  uint64_t v53 = v3;
  uint64_t v54 = a1;
  uint64_t v31 = *(void *)(v1 + 48);
  uint64_t v30 = *(void *)(v1 + 56);
  uint64_t v32 = *(void *)(v1 + 64);
  uint64_t v33 = *(unsigned __int8 *)(v1 + 72);
  sub_1001302C0(v49, v25, v26);
  sub_1001302C0(v27, v28, v29);
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_10057D6D4(v30, v32, v33, v31);
  uint64_t v47 = v35;
  uint64_t v48 = v34;
  int v46 = v36;
  LOBYTE(v36) = v33;
  a1 = v54;
  sub_100130288(v30, v32, v36);
  uint64_t v37 = v25;
  char v38 = v26;
  uint64_t v13 = v51;
  uint64_t v4 = v52;
  sub_100130288(v49, v37, v38);
  uint64_t v39 = v27;
  unint64_t v16 = v50;
  sub_100130288(v39, v28, v29);
  uint64_t v3 = v53;
  swift_bridgeObjectRelease();
  uint64_t v40 = v47;
  *(void *)(v1 + 56) = v48;
  *(void *)(v1 + 64) = v40;
  *(unsigned char *)(v1 + 72) = v46 & 1;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
LABEL_11:
  int64x2_t v41 = *(void (**)(uint64_t))(v1 + 80);
  sub_10001AE98((uint64_t)v16, (uint64_t)v13, &qword_100AD6410);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
  {
    uint64_t v42 = sub_10002B7CC((uint64_t *)&unk_100ACCB00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(a1, 1, 1, v42);
  }
  else
  {
    uint64_t v43 = (uint64_t)v55;
    sub_10001AE98((uint64_t)v13, (uint64_t)v55, &qword_100ACDA10);
    v41(v43);
    sub_10002B770(v43, &qword_100ACDA10);
    uint64_t v44 = sub_10002B7CC((uint64_t *)&unk_100ACCB00);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(a1, 0, 1, v44);
  }
}

void sub_10049CD88()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void **)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    uint64_t v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      unint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        unint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          unint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            unint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              unint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              uint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                unint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t sub_10049CF1C(uint64_t a1, uint64_t (*a2)(void **))
{
  int64_t v3 = *(void **)a1;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 9);
  char v6 = *(unsigned char *)(a1 + 8);
  if ((v5 & 1) == 0)
  {
    id v7 = v3;
    char v6 = 0;
  }
  uint64_t v10 = v3;
  char v11 = v6;
  char v12 = v5 ^ 1;
  char v8 = a2(&v10);
  sub_10017E788(v3, v4, v5);
  return v8 & 1;
}

uint64_t sub_10049CFA8(uint64_t a1, uint64_t (*a2)(void **))
{
  int64_t v3 = *(void **)a1;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 8);
  int v5 = *(unsigned __int8 *)(a1 + 9);
  char v6 = *(unsigned char *)(a1 + 8);
  if (v5 == 1)
  {
    id v7 = v3;
    char v6 = 0;
  }
  uint64_t v10 = v3;
  char v11 = v6;
  char v12 = v5 ^ 1;
  char v8 = a2(&v10);
  sub_1000D30C4(v3, v4, v5);
  return v8 & 1;
}

id sub_10049D038@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  id v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();

  return v4;
}

void sub_10049D084(uint64_t a1, uint64_t a2, NSObject *a3)
{
  int v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  swift_beginAccess();
  id v7 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v5;
  unsigned __int8 v8 = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a2 + 24) = v6;
  sub_1002201D0(v5, v6);
  sub_1004A6010(v7, v8);
  dispatch_group_leave(a3);
}

uint64_t sub_10049D10C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + qword_100B0B3C0);
  if (v4)
  {
    uint64_t v5[2] = __chkstk_darwin(result);
    v5[3] = v4;
    swift_retain();
    sub_1007D55E8((uint64_t)sub_1004A64E8, (uint64_t)v5);
    uint64_t result = swift_release();
  }
  *a3 = v4 == 0;
  return result;
}

uint64_t sub_10049D1D4(void *a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_10096B480();
  __chkstk_darwin(v8);
  v16[3] = sub_100011348(0, &qword_100AD6418);
  void v16[4] = &off_100A89CC0;
  v16[0] = a1;
  uint64_t v14 = a4;
  uint64_t v15 = v16;
  id v9 = a1;
  sub_10048DC38(a4, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, 0, (uint64_t)sub_1004A5D3C, (uint64_t)v13, v11);
  sub_100489280(v16, a2 & 1, a3 & 1);
  return sub_1000268E0((uint64_t)v16);
}

uint64_t sub_10049D4A4(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  switch(a2)
  {
    case -6:
      return a4 == 250;
    case -5:
      return a4 == 251;
    case -4:
      return a4 == 252;
    case -3:
      return a4 == 253;
    case -2:
      return a4 == 254;
    default:
      if ((a4 + 6) < 5u) {
        return 0;
      }
      if (a2 == -1)
      {
        if (a4 == 0xFF) {
          return 1;
        }
      }
      else if (a4 != 0xFF)
      {
        if (a2)
        {
          if (a2 == 1)
          {
            if (a4 != 1 || a1 != a3) {
              return 0;
            }
          }
          else if (a1)
          {
            if (a4 != 2 || a3 != 1) {
              return 0;
            }
          }
          else if (a4 != 2 || a3)
          {
            return 0;
          }
        }
        else if (a4 || a1 != a3)
        {
          return 0;
        }
        return 1;
      }
      return 0;
  }
}

uint64_t sub_10049D5D4(uint64_t a1, char a2, char a3, void *a4, uint64_t a5, unsigned __int8 a6, char a7, void *a8)
{
  switch(a2)
  {
    case -6:
      if (a6 == 250) {
        goto LABEL_19;
      }
      return 0;
    case -5:
      if (a6 != 251) {
        return 0;
      }
      goto LABEL_19;
    case -4:
      if (a6 != 252) {
        return 0;
      }
      goto LABEL_19;
    case -3:
      if (a6 != 253) {
        return 0;
      }
      goto LABEL_19;
    case -2:
      if (a6 == 254) {
        goto LABEL_19;
      }
      return 0;
    default:
      if ((a6 + 6) < 5u) {
        return 0;
      }
      if (a2 == -1)
      {
        if (a6 == 0xFF) {
          goto LABEL_19;
        }
      }
      else if (a6 != 0xFF)
      {
        if (a2)
        {
          if (a2 == 1)
          {
            if (a6 != 1 || a1 != a5) {
              return 0;
            }
          }
          else if (a1)
          {
            if (a6 != 2 || a5 != 1) {
              return 0;
            }
          }
          else if (a6 != 2 || a5)
          {
            return 0;
          }
        }
        else if (a6 || a1 != a5)
        {
          return 0;
        }
LABEL_19:
        if (a3 == 70)
        {
          if (a7 != 70) {
            return 0;
          }
        }
        else if (a7 == 70 || qword_100984688[a3] != qword_100984688[a7])
        {
          return 0;
        }
        return sub_1006111F4(a4, a8);
      }
      return 0;
  }
}

unint64_t sub_10049D750()
{
  unint64_t result = qword_100AD5CA0;
  if (!qword_100AD5CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5CA0);
  }
  return result;
}

unint64_t sub_10049D7A4()
{
  unint64_t result = qword_100AD5CA8;
  if (!qword_100AD5CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5CA8);
  }
  return result;
}

unint64_t sub_10049D7F8()
{
  unint64_t result = qword_100AD5CB0;
  if (!qword_100AD5CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5CB0);
  }
  return result;
}

unint64_t sub_10049D84C()
{
  unint64_t result = qword_100AD5CB8;
  if (!qword_100AD5CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5CB8);
  }
  return result;
}

uint64_t sub_10049D8A0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v4 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v4 + 8 * v10);
        if (!v18)
        {
          int64_t v10 = v17 + 3;
          if (v17 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v4 + 8 * v10);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    a2(v14, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v8) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10049DA30(void *a1)
{
  uint64_t v2 = type metadata accessor for FPFeedbackManagerState();
  __chkstk_darwin(v2);
  uint64_t v4 = v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 22;
  uint64_t v5 = type metadata accessor for GlobalResourceStore();
  swift_allocObject();
  uint64_t v6 = sub_100437034();
  v14[3] = v5;
  void v14[4] = &off_100A89B40;
  v14[0] = v6;
  sub_10009CA78((uint64_t)v14, (uint64_t)v13);
  sub_10002B7CC(&qword_100AD64B0);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 72) = 0;
  sub_10009CA78((uint64_t)v13, v7 + 16);
  uint64_t v8 = sub_10096B0E0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = *(int *)(v2 + 20);
  *(void *)&v4[v9] = sub_10009333C((uint64_t)_swiftEmptyArrayStorage);
  int64_t v10 = &v4[*(int *)(v2 + 24)];
  *(void *)int64_t v10 = 0;
  v10[8] = 1;
  sub_1000268E0((uint64_t)v13);
  sub_100011454((uint64_t)v4, v7 + *(void *)(*(void *)v7 + 136), (uint64_t (*)(void))type metadata accessor for FPFeedbackManagerState);
  *(void *)(v7 + 56) = 0xD000000000000016;
  *(void *)(v7 + 64) = 0x800000010099D270;
  swift_retain();
  sub_100861AF8();
  sub_1000268E0((uint64_t)v14);
  swift_release();
  swift_beginAccess();
  sub_100863C1C(a1);
  swift_setDeallocating();
  sub_1000268E0(v7 + 16);
  swift_bridgeObjectRelease();
  sub_1004A6FF0(v7 + *(void *)(*(void *)v7 + 136), (uint64_t (*)(void))type metadata accessor for FPFeedbackManagerState);
  return swift_deallocClassInstance();
}

uint64_t sub_10049DE2C(unint64_t a1)
{
  uint64_t v2 = sub_10096CC70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 6) {
    return 0;
  }
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_10096CBD0(33);
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD00000000000001FLL;
  unint64_t v13 = 0x80000001009A3B50;
  v11[1] = a1;
  v14._int countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v14);
  swift_bridgeObjectRelease();
  sub_10096CC60();
  uint64_t v7 = sub_10096CC80();
  swift_allocError();
  uint64_t v9 = v8;
  int64_t v10 = (char *)v8 + *(int *)(sub_10002B7CC(&qword_100ACD518) + 48);
  *uint64_t v9 = &type metadata for ErrorDirection;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v10, v5, v2);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v7 - 8) + 104))(v9, enum case for DecodingError.typeMismatch(_:), v7);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10049E048(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65646F43626F6ALL && a2 == 0xE700000000000000 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646953626F6ALL && a2 == 0xE700000000000000 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001009A2E50)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_10049E268(void *a1)
{
  uint64_t v2 = sub_10002B7CC(&qword_100AD6570);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10049D750();
  sub_10096D570();
  LOBYTE(v11) = 0;
  uint64_t v6 = sub_10096D030();
  char v14 = 1;
  sub_1004A7968();
  sub_10096D040();
  int v7 = v12;
  char v14 = 2;
  sub_1004A79BC();
  sub_10096CFB0();
  int v13 = v7;
  int v8 = v11;
  char v14 = 3;
  sub_1004A7A10();
  sub_10096CFB0();
  v10[3] = v8;
  sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  char v14 = 4;
  sub_100078DBC((unint64_t *)&unk_100ACB9C0);
  sub_10096D040();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000268E0((uint64_t)a1);
  return v6;
}

uint64_t sub_10049E538(char a1)
{
  id v2 = [objc_allocWithZone((Class)FPDConfigurationStore) init];
  uint64_t v3 = v2;
  uint64_t v4 = &selRef_maxFPCKDatabaseChecks;
  if ((a1 & 8) != 0) {
    uint64_t v4 = &selRef_maxFPCKDatabaseChecksDiagnostic;
  }
  signed int v5 = [v2 *v4];

  return v5;
}

id sub_10049E5A4(void *a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, Swift::Bool (__swiftcall *a17)(), Swift::Bool (__swiftcall *a18)())
{
  int64_t v19 = v18;
  uint64_t v96 = a7;
  uint64_t v97 = a8;
  int v98 = a6;
  int v94 = a5;
  uint64_t v93 = a4;
  uint64_t v92 = a3;
  LODWORD(v91) = a2;
  uint64_t v95 = a1;
  uint64_t v20 = sub_10096B480();
  uint64_t v100 = *(void *)(v20 - 8);
  uint64_t v101 = v20;
  __chkstk_darwin(v20);
  unint64_t v99 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v102 = (void *)sub_10096B0E0();
  uint64_t v22 = *(v102 - 1);
  __chkstk_darwin(v102);
  char v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10096B180();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInBackupManifestCheck] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedDownloads] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedUploads] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_multipleHardlinksExtensions] = &_swiftEmptyDictionarySingleton;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetItemPayload] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetItemPayload] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_telemetryReport] = 0;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetErrors] = &_swiftEmptyDictionarySingleton;
  *(void *)&v18[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetErrors] = &_swiftEmptyDictionarySingleton;
  uint64_t v29 = OBJC_IVAR____TtC9libfssync4FPCK_runID;
  uint64_t v30 = v18;
  sub_10096B170();
  uint64_t aBlock = sub_10096B100();
  uint64_t v105 = v31;
  uint64_t v110 = 45;
  unint64_t v111 = 0xE100000000000000;
  sub_10001F9C0();
  uint64_t v32 = (void *)sub_10096C8E0();
  id result = (id)swift_bridgeObjectRelease();
  if (!v32[2])
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v34 = (uint64_t *)&v19[v29];
  uint64_t v36 = v32[4];
  uint64_t v35 = v32[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  *uint64_t v34 = v36;
  v34[1] = v35;
  uint64_t v89 = OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase] = 0;
  uint64_t v37 = OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker] = 0;
  uint64_t v38 = OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker] = 0;
  uint64_t v39 = OBJC_IVAR____TtC9libfssync4FPCK_diskVsFSSnapshotIgnoredFilenames;
  Swift::Int v40 = sub_100044E5C((uint64_t)&off_100A6C9B8);
  swift_arrayDestroy();
  *(void *)&v30[v39] = v40;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_launchOptions] = 0;
  int64x2_t v41 = (uint64_t *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_shouldPause];
  *int64x2_t v41 = 0;
  v41[1] = 0;
  uint64_t v90 = v41;
  uint64_t v42 = (uint64_t *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_sendDiagnostics];
  *uint64_t v42 = 0;
  v42[1] = 0;
  uint64_t v43 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskBrokenInvariantsCounters;
  *(void *)&v30[v43] = sub_10009A37C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v44 = OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskBrokenInvariantsCounters;
  *(void *)&v30[v44] = sub_10009A37C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v45 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskVsFSSnapshotDiffCounters;
  *(void *)&v30[v45] = sub_10009A39C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v46 = OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskVsFSSnapshotDiffCounters;
  *(void *)&v30[v46] = sub_10009A39C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v47 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredFSSnapshotVsFPSnapshotDiffCounters;
  *(void *)&v30[v47] = sub_10009A3BC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v48 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredReconciliationTableBrokenInvariantsCounters;
  *(void *)&v30[v48] = sub_10009A3DC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v49 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredBackupManifestVsFSSnapshotDiffCounters;
  *(void *)&v30[v49] = sub_10009A3FC((uint64_t)_swiftEmptyArrayStorage);
  long long v50 = &v30[OBJC_IVAR____TtC9libfssync4FPCK_providerVersion];
  *(void *)long long v50 = 0x69737265762D6F6ELL;
  *((void *)v50 + 1) = 0xEA00000000006E6FLL;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_skippedLockedItems] = &_swiftEmptySetSingleton;
  unint64_t v51 = &v30[OBJC_IVAR____TtC9libfssync4FPCK_rootURL];
  uint64_t v52 = sub_10096AE50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_rootURLs] = _swiftEmptyArrayStorage;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_detachedRoots] = _swiftEmptyArrayStorage;
  uint64_t v53 = OBJC_IVAR____TtC9libfssync4FPCK_repairStartTime;
  sub_10096B0D0();
  sub_10096B080();
  double v55 = v54;
  id result = (id)(*(uint64_t (**)(char *, void *))(v22 + 8))(v24, v102);
  double v56 = v55 * 1000000000.0;
  if ((~COERCE__INT64(v55 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v56 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v56 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  unint64_t v83 = v34;
  *(void *)&v30[v53] = (uint64_t)v56;
  v30[OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___importIsRunning] = 2;
  Swift::Int v88 = a18;
  long long v87 = a17;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___vendorExcludedFolders] = 0;
  uint64_t v86 = a16;
  uint64_t v85 = a15;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_nilErrorIds] = _swiftEmptyArrayStorage;
  uint64_t v84 = a14;
  unint64_t v57 = v95;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_providerDomainID] = v95;
  *(_DWORD *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_volumeRole] = v91;
  uint64_t v91 = a10;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_domainUserInfo] = v92;
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_reason] = v93;
  v30[OBJC_IVAR____TtC9libfssync4FPCK_usingFPFS] = v94 & 1;
  *(void *)&v30[v89] = v96;
  unint64_t v102 = v57;
  swift_retain();
  swift_release();
  *(void *)&v30[v37] = v97;
  swift_retain();
  swift_release();
  *(void *)&v30[v38] = a9;
  swift_retain();
  swift_release();
  *(void *)&v30[OBJC_IVAR____TtC9libfssync4FPCK_openBackupDatabases] = v91;
  unint64_t v58 = v90;
  uint64_t v59 = *v90;
  *uint64_t v90 = a11;
  v58[1] = a12;
  sub_100031400(a11);
  sub_1000705CC(v59);
  uint64_t v60 = *v42;
  uint64_t v61 = v84;
  *uint64_t v42 = a13;
  v42[1] = v61;
  sub_100031400(a13);
  sub_1000705CC(v60);
  unint64_t v62 = &v30[OBJC_IVAR____TtC9libfssync4FPCK_saveCheckpoint];
  uint64_t v63 = v86;
  *(void *)unint64_t v62 = v85;
  *((void *)v62 + 1) = v63;
  uint64_t v64 = (uint64_t)v87;
  if (v87) {
    unsigned long long v65 = v87;
  }
  else {
    unsigned long long v65 = FPDDomainFPFSBackend.isDeadEnd();
  }
  if (v87) {
    unsigned long long v66 = v88;
  }
  else {
    unsigned long long v66 = 0;
  }
  int8x16_t v67 = (Swift::Bool (__swiftcall **)())&v30[OBJC_IVAR____TtC9libfssync4FPCK_isInvalidated];
  *int8x16_t v67 = v65;
  v67[1] = v66;
  uint64_t v108 = sub_10002BFF4;
  uint64_t v109 = 0;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v105 = 1107296256;
  uint64_t v106 = sub_100006E10;
  int64x2_t v107 = &unk_100A8B628;
  uint64_t v68 = _Block_copy(&aBlock);
  int v69 = v98 & 1;
  swift_retain();
  sub_100031400(v64);
  char IsEnabledForDomainID = FPPinningIsEnabledForDomainID();
  uint64_t v71 = &v30[OBJC_IVAR____TtC9libfssync4FPCK_ioContext];
  *(void *)uint64_t v71 = v68;
  *((_DWORD *)v71 + 2) = v69;
  v71[12] = IsEnabledForDomainID;
  uint64_t v72 = (void (**)())&v30[OBJC_IVAR____TtC9libfssync4FPCK_resultHandler];
  *uint64_t v72 = sub_10045D63C;
  v72[1] = 0;
  id v73 = (id)fpfs_current_or_default_log();
  uint64_t v74 = v99;
  sub_10096B490();
  int64x2_t v75 = v30;
  int64x2_t v76 = sub_10096B470();
  os_log_type_t v77 = sub_10096C590();
  if (os_log_type_enabled(v76, v77))
  {
    int64x2_t v78 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)int64x2_t v78 = 136315138;
    uint64_t v79 = *v83;
    unint64_t v80 = v83[1];
    swift_bridgeObjectRetain();
    uint64_t v110 = sub_100719D44(v79, v80, &aBlock);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v76, v77, "🧹 FPCK initialized with run id %s", v78, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v100 + 8))(v74, v101);
  int8x16_t v81 = (objc_class *)type metadata accessor for FPCK(0);
  v103.receiver = v75;
  v103.super_class = v81;
  return objc_msgSendSuper2(&v103, "init");
}

id sub_10049EFA4(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8, __int16 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, Swift::Bool (__swiftcall *a16)(), Swift::Bool (__swiftcall *a17)())
{
  if ((a9 & 0x100) != 0)
  {
    a8 = sub_10049E538(a5);
    char v20 = v21 & 1;
  }
  else
  {
    char v20 = a9 & 1;
  }
  type metadata accessor for FSSnapshotChecker();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 64) = 0;
  *(unsigned char *)(v22 + 72) = 1;
  *(void *)(v22 + 16) = sub_100095EF4((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v22 + 24) = sub_100095F00((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v22 + 32) = &_swiftEmptySetSingleton;
  *(void *)(v22 + 40) = &_swiftEmptySetSingleton;
  *(void *)(v22 + 48) = a8;
  *(unsigned char *)(v22 + 56) = v20;
  type metadata accessor for FPSnapshotChecker();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 40) = 0;
  *(unsigned char *)(v23 + 48) = 1;
  *(void *)(v23 + 16) = sub_100095F0C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v23 + 24) = sub_100095F18((uint64_t)_swiftEmptyArrayStorage);
  *(unsigned char *)(v23 + 32) = 0;
  objc_allocWithZone((Class)type metadata accessor for FPCK(0));
  sub_100031400(a10);
  sub_100031400(a12);
  swift_retain();
  swift_retain();
  id v24 = a3;
  id v25 = sub_10049E5A4(v24, a2, a4, a5, a6 & 1, a7 & 1, 0, v22, v23, (uint64_t)_swiftEmptyArrayStorage, a10, a11, a12, a13, a14, a15, a16, a17);
  swift_release();
  swift_release();
  sub_1000705CC(a12);
  sub_1000705CC(a10);
  uint64_t v26 = v24;

  swift_release();
  swift_release();
  uint64_t v51 = a1 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(v27 + 63) >> 6;
  id result = v25;
  uint64_t v32 = result;
  int64_t v33 = 0;
  while (1)
  {
    if (v29)
    {
      unint64_t v34 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v35 = v34 | (v33 << 6);
      goto LABEL_8;
    }
    int64_t v43 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v43 >= v30) {
      goto LABEL_24;
    }
    unint64_t v44 = *(void *)(v51 + 8 * v43);
    ++v33;
    if (!v44)
    {
      int64_t v33 = v43 + 1;
      if (v43 + 1 >= v30) {
        goto LABEL_24;
      }
      unint64_t v44 = *(void *)(v51 + 8 * v33);
      if (!v44)
      {
        int64_t v33 = v43 + 2;
        if (v43 + 2 >= v30) {
          goto LABEL_24;
        }
        unint64_t v44 = *(void *)(v51 + 8 * v33);
        if (!v44) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v29 = (v44 - 1) & v44;
    unint64_t v35 = __clz(__rbit64(v44)) + (v33 << 6);
LABEL_8:
    uint64_t v36 = 16 * v35;
    uint64_t v37 = *(void *)(a1 + 48) + v36;
    uint64_t v38 = *(void (**)(void, void))v37;
    uint64_t v39 = *(void *)(v37 + 8);
    Swift::Int v40 = (uint64_t *)(*(void *)(a1 + 56) + v36);
    uint64_t v41 = *v40;
    unint64_t v42 = v40[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10045DBA4(v38, v39, v41, v42, v26);
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
  }
  int64_t v45 = v43 + 3;
  if (v45 >= v30)
  {
LABEL_24:
    swift_release();

    swift_release();
    sub_1000705CC(a12);
    sub_1000705CC(a10);
    swift_release();

    return v32;
  }
  unint64_t v44 = *(void *)(v51 + 8 * v45);
  if (v44)
  {
    int64_t v33 = v45;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v33 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      break;
    }
    if (v33 >= v30) {
      goto LABEL_24;
    }
    unint64_t v44 = *(void *)(v51 + 8 * v33);
    ++v45;
    if (v44) {
      goto LABEL_23;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void **sub_10049F368()
{
  return sub_100487924(v0);
}

uint64_t type metadata accessor for FPCK(uint64_t a1)
{
  return sub_100028978(a1, (uint64_t *)&unk_100AD6050);
}

uint64_t sub_10049F3A4@<X0>(int a1@<W0>, char *a2@<X8>)
{
  return sub_10045A9E4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10049F3C0()
{
  uint64_t v0 = (void *)sub_10096ABE0();
  id v1 = [v0 domain];
  uint64_t v2 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v4 = v3;

  if (v2 == 0xD000000000000021 && v4 == 0x80000001009A3B70)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v6 = (char *)[v0 code];

    char v7 = (unint64_t)(v6 - 3) < 2;
    return v7 & 1;
  }
  char v5 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v5) {
    goto LABEL_5;
  }
  sub_10096A6A0();
  sub_100045CB4();
  if (sub_10096AA60())
  {

    char v7 = 1;
  }
  else
  {
    type metadata accessor for Code(0);
    sub_1004A70C8((unint64_t *)&qword_100ACC8C0, type metadata accessor for Code);
    char v7 = sub_10096AA60();
  }
  return v7 & 1;
}

uint64_t sub_10049F550()
{
  uint64_t v0 = sub_10096BCB0();
  __chkstk_darwin(v0 - 8);
  v48[1] = (char *)v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_10057B830(v2);
  swift_bridgeObjectRelease();
  unint64_t v58 = v3;
  sub_10049B62C(&v58);
  uint64_t v4 = v58[2];
  if (v4 >= 5) {
    uint64_t v4 = 5;
  }
  uint64_t v50 = v4;
  if (!v4) {
    goto LABEL_35;
  }
  uint64_t v48[2] = v58;
  uint64_t v49 = 0;
  uint64_t v5 = 0;
  uint64_t v51 = v58 + 4;
  uint64_t v6 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    int v8 = &v51[3 * v5];
    uint64_t v10 = *v8;
    uint64_t v9 = v8[1];
    uint64_t v11 = v8[2];
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v53 = *v8;
      uint64_t v55 = v5;
      double v56 = v6;
      swift_bridgeObjectRetain_n();
      uint64_t v54 = v9;
      swift_bridgeObjectRetain();
      uint64_t v52 = v11;
      int v13 = (void *)(v11 + 56);
      char v14 = _swiftEmptyArrayStorage;
      while (1)
      {
        uint64_t v15 = *(v13 - 3);
        uint64_t v16 = *(v13 - 2);
        int v57 = *((unsigned __int8 *)v13 - 8);
        char v17 = *((unsigned char *)v13 - 7);
        char v18 = *((unsigned char *)v13 - 6);
        uint64_t v19 = *v13;
        id v20 = objc_allocWithZone((Class)NSNumber);
        swift_bridgeObjectRetain();
        id v21 = [v20 initWithInteger:v15];
        sub_100845F00(2);
        uint64_t v23 = v22;

        if (v23)
        {
          id v24 = [v23 integerValue];

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            goto LABEL_16;
          }
        }
        else
        {
          id v24 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_16:
          }
            char v14 = sub_1006A4300(0, v14[2] + 1, 1, v14);
        }
        unint64_t v26 = v14[2];
        unint64_t v25 = v14[3];
        if (v26 >= v25 >> 1) {
          char v14 = sub_1006A4300((void *)(v25 > 1), v26 + 1, 1, v14);
        }
        void v14[2] = v26 + 1;
        uint64_t v27 = &v14[4 * v26];
        v27[4] = v24;
        v27[5] = v16;
        *((unsigned char *)v27 + 48) = v57;
        *((unsigned char *)v27 + 49) = v17;
        *((unsigned char *)v27 + 50) = v18;
        v13 += 4;
        v27[7] = v19;
        if (!--v12)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v5 = v55;
          uint64_t v6 = v56;
          uint64_t v10 = v53;
          uint64_t v9 = v54;
          goto LABEL_18;
        }
      }
    }
    swift_bridgeObjectRetain();
    char v14 = _swiftEmptyArrayStorage;
LABEL_18:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v58 = v6;
    unint64_t v30 = sub_10000DDD0(v10, v9);
    uint64_t v31 = v6[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32)) {
      break;
    }
    char v34 = v29;
    if (v6[3] >= v33)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v6 = v58;
        if ((v29 & 1) == 0) {
          goto LABEL_25;
        }
      }
      else
      {
        sub_10091F9C0();
        uint64_t v6 = v58;
        if ((v34 & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    else
    {
      sub_1003797AC(v33, isUniquelyReferenced_nonNull_native);
      unint64_t v35 = sub_10000DDD0(v10, v9);
      if ((v34 & 1) != (v36 & 1)) {
        goto LABEL_36;
      }
      unint64_t v30 = v35;
      uint64_t v6 = v58;
      if ((v34 & 1) == 0)
      {
LABEL_25:
        v6[(v30 >> 6) + 8] |= 1 << v30;
        uint64_t v37 = (uint64_t *)(v6[6] + 16 * v30);
        *uint64_t v37 = v10;
        v37[1] = v9;
        *(void *)(v6[7] + 8 * v30) = v14;
        uint64_t v38 = v6[2];
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (v39) {
          goto LABEL_34;
        }
        v6[2] = v40;
        swift_bridgeObjectRetain();
        goto LABEL_6;
      }
    }
    uint64_t v7 = v6[7];
    swift_bridgeObjectRelease();
    *(void *)(v7 + 8 * v30) = v14;
LABEL_6:
    ++v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5 == v50)
    {
      swift_release();
      sub_10096A820();
      swift_allocObject();
      sub_10096A810();
      unint64_t v58 = v6;
      sub_10002B7CC(&qword_100AD64E0);
      sub_1004A7290(&qword_100AD64E8, &qword_100AD64E0, (void (*)(void))sub_1004A7310);
      uint64_t v41 = v49;
      uint64_t v42 = sub_10096A800();
      if (v41)
      {
        swift_release();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      else
      {
        uint64_t v45 = v42;
        unint64_t v46 = v43;
        swift_bridgeObjectRelease();
        sub_10096BC90();
        uint64_t v44 = sub_10096BC50();
        sub_10001E9C0(v45, v46);
        swift_release();
      }
      return v44;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  sub_10096D3C0();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10049FA00(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10 = a1;
  if (a4 | a6)
  {
    sub_10096CBD0(17);
    swift_bridgeObjectRelease();
    v25._int countAndFlagsBits = sub_100609904(a4);
    sub_10096BDC0(v25);
    swift_bridgeObjectRelease();
    v26._int countAndFlagsBits = 32;
    v26._object = (void *)0xE100000000000000;
    sub_10096BDC0(v26);
    v27._int countAndFlagsBits = sub_1006093E4(a6);
    sub_10096BDC0(v27);
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_100072CCC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_100072CCC((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    char v14 = &v11[16 * v13];
    *((void *)v14 + 4) = 0x6578694620859CE2;
    *((void *)v14 + 5) = 0xAC000000203A2064;
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v15 = a3 & ~a4;
  unint64_t v16 = a5 & ~a6;
  if (v15 | v16)
  {
    sub_10096CBD0(16);
    swift_bridgeObjectRelease();
    v28._int countAndFlagsBits = sub_100609904(v15);
    sub_10096BDC0(v28);
    swift_bridgeObjectRelease();
    v29._int countAndFlagsBits = 32;
    v29._object = (void *)0xE100000000000000;
    sub_10096BDC0(v29);
    v30._int countAndFlagsBits = sub_1006093E4(v16);
    sub_10096BDC0(v30);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100072CCC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v18 = *((void *)v11 + 2);
    unint64_t v17 = *((void *)v11 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v11 = sub_100072CCC((char *)(v17 > 1), v18 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v18 + 1;
    uint64_t v19 = &v11[16 * v18];
    *((void *)v19 + 4) = 0x7466654C208C9DE2;
    *((void *)v19 + 5) = 0xAB00000000203A20;
  }
  sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  sub_100025500(qword_100ACE150, (uint64_t *)&unk_100AD5CC0);
  uint64_t v20 = sub_10096BB50();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v31._int countAndFlagsBits = 8250;
  v31._object = (void *)0xE200000000000000;
  sub_10096BDC0(v31);
  swift_bridgeObjectRetain();
  v32._int countAndFlagsBits = v20;
  v32._object = v22;
  sub_10096BDC0(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v33._int countAndFlagsBits = 10;
  v33._object = (void *)0xE100000000000000;
  sub_10096BDC0(v33);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10049FD38(unsigned int a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unsigned int v213 = a1;
  uint64_t v9 = sub_10096B480();
  unint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v203 = (char *)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100AD0CF0);
  __chkstk_darwin(v12 - 8);
  uint64_t v204 = (uint64_t)&v192 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v201 = *(void *)(v14 - 8);
  uint64_t v202 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v192 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (uint64_t)&v192 - v18;
  uint64_t v20 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v20 - 8);
  uint64_t v210 = (char *)&v192 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v5 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked;
  swift_beginAccess();
  uint64_t v24 = *(void *)v22 + 1;
  if (__OFADD__(*(void *)v22, 1))
  {
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
  uint64_t v199 = v17;
  uint64_t v214 = (void *)v22;
  *(void *)uint64_t v22 = v24;
  int v25 = sub_100463698();
  if ((v25 & 1) == 0) {
    return v25 & 1;
  }
  int v197 = v25;
  Swift::String v26 = 0;
  uint64_t v242 = a4;
  uint64_t v215 = *(char ***)(a2 + 16);
  Swift::String v27 = v215[3];
  uint64_t v205 = a2;
  uint64_t v211 = a4;
  unint64_t v194 = v10;
  uint64_t v195 = v9;
  char v209 = v27;
  if ((a4 & 0x4000000000) != 0 && v27)
  {
    sub_10096BDE0();
    sub_10083459C((uint64_t)v235);
    uint64_t v28 = v235[4];
    uint64_t v29 = v235[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v29)
    {
      unint64_t v30 = a3;
      Swift::String v31 = (void *)(v5 + OBJC_IVAR____TtC9libfssync4FPCK_multipleHardlinksExtensions);
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v220[0] = *v31;
      uint64_t v33 = v220[0];
      void *v31 = 0x8000000000000000;
      uint64_t v208 = (void *)v28;
      unint64_t v35 = sub_10000DDD0(v28, v29);
      uint64_t v36 = *(void *)(v33 + 16);
      BOOL v37 = (v34 & 1) == 0;
      uint64_t v38 = v36 + v37;
      if (__OFADD__(v36, v37))
      {
        __break(1u);
        goto LABEL_208;
      }
      LOBYTE(v22) = v34;
      if (*(void *)(v33 + 24) >= v38)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_209;
        }
      }
      else
      {
        sub_100379E04(v38, isUniquelyReferenced_nonNull_native);
        uint64_t v33 = v220[0];
        unint64_t v39 = sub_10000DDD0((uint64_t)v208, v29);
        if ((v22 & 1) != (v40 & 1))
        {
LABEL_235:
          sub_10096D3C0();
          __break(1u);
LABEL_236:
          uint64_t result = sub_10096D3C0();
          __break(1u);
          return result;
        }
        unint64_t v35 = v39;
      }
      while (1)
      {
        a3 = v30;
        void *v31 = v33;
        swift_bridgeObjectRelease();
        uint64_t v41 = *v31;
        swift_bridgeObjectRetain();
        if ((v22 & 1) == 0)
        {
          sub_10038E554(v35, v208, v29, 0, v41);
          swift_bridgeObjectRetain();
        }
        uint64_t v42 = *(void *)(v41 + 56);
        uint64_t v43 = *(void *)(v42 + 8 * v35);
        BOOL v44 = __CFADD__(v43, 1);
        uint64_t v45 = v43 + 1;
        if (!v44) {
          break;
        }
LABEL_208:
        __break(1u);
LABEL_209:
        sub_10091FD8C();
        uint64_t v33 = v220[0];
      }
      *(void *)(v42 + 8 * v35) = v45;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::String v26 = sub_10002E4B4;
    }
    else
    {
      Swift::String v26 = 0;
    }
    a4 = v211;
  }
  uint64_t v241 = a4;
  uint64_t v198 = OBJC_IVAR____TtC9libfssync4FPCK_launchOptions;
  uint64_t v46 = a4;
  if ((*(unsigned char *)(v5 + OBJC_IVAR____TtC9libfssync4FPCK_launchOptions) & 2) != 0)
  {
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    do
    {
      uint64_t v49 = *(uint64_t *)((char *)&off_100A6C9E8 + v47 + 32);
      if ((v49 & ~v48) == 0) {
        uint64_t v49 = 0;
      }
      v48 |= v49;
      v47 += 8;
    }
    while (v47 != 232);
    uint64_t v46 = a4 & ~v48;
    uint64_t v241 = v46;
  }
  unint64_t v192 = a3;
  uint64_t v193 = v19;
  Swift::Int v196 = v26;
  uint64_t v212 = v5;
  unint64_t v10 = 0;
  if (v46)
  {
    uint64_t v50 = v5 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskBrokenInvariantsCounters;
    uint64_t v19 = 1;
    while (1)
    {
      unint64_t v51 = __clz(__rbit64(v46));
      uint64_t v52 = v46 & ~(1 << v51);
      if (((1 << v51) & v46) == 0) {
        uint64_t v52 = v46;
      }
      if (v51 >= 0x40) {
        uint64_t v53 = 0;
      }
      else {
        uint64_t v53 = 1 << v51;
      }
      if (v51 < 0x40) {
        uint64_t v46 = v52;
      }
      swift_beginAccess();
      sub_1000705CC(v10);
      uint64_t v22 = swift_isUniquelyReferenced_nonNull_native();
      v220[0] = *(void *)v50;
      uint64_t v54 = v220[0];
      *(void *)uint64_t v50 = 0x8000000000000000;
      unint64_t v10 = sub_1003204B0(v53);
      uint64_t v56 = *(void *)(v54 + 16);
      BOOL v57 = (v55 & 1) == 0;
      uint64_t v58 = v56 + v57;
      if (__OFADD__(v56, v57)) {
        break;
      }
      char v59 = v55;
      if (*(void *)(v54 + 24) >= v58)
      {
        if ((v22 & 1) == 0)
        {
          sub_10091FF58();
          uint64_t v54 = v220[0];
        }
      }
      else
      {
        sub_10037A144(v58, v22);
        uint64_t v54 = v220[0];
        unint64_t v60 = sub_1003204B0(v53);
        if ((v59 & 1) != (v61 & 1))
        {
          type metadata accessor for BrokenInvariants(0);
          sub_10096D3C0();
          __break(1u);
LABEL_234:
          sub_10096D3C0();
          __break(1u);
          goto LABEL_235;
        }
        unint64_t v10 = v60;
      }
      *(void *)uint64_t v50 = v54;
      swift_bridgeObjectRelease();
      unint64_t v62 = *(void **)v50;
      if (v59)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v62[(v10 >> 6) + 8] |= 1 << v10;
        uint64_t v63 = 8 * v10;
        *(void *)(v62[6] + v63) = v53;
        *(void *)(v62[7] + v63) = 0;
        uint64_t v64 = v62[2];
        uint64_t v53 = v64 + 1;
        uint64_t v65 = __OFADD__(v64, 1);
        swift_bridgeObjectRetain();
        if (v65)
        {
          __break(1u);
LABEL_116:
          uint64_t v207 = (char *)v22;
          id v129 = (id)v22;
          int8x8_t v130 = sub_1004674D0();
          unsigned __int8 v131 = sub_10045757C(v192);
          char v132 = sub_10049C88C((uint64_t)v131, (uint64_t)v130);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v132)
          {
            int v133 = *(unsigned __int8 *)(v50 + 2);
            uint64_t v134 = v193 + *(int *)(v202 + 48);
            int v135 = *(unsigned __int8 *)(v134 + *(int *)(type metadata accessor for ItemMetadata() + 48));
            uint64_t v22 = (uint64_t)v207;
            if (v133 != v135)
            {
              uint64_t v108 = v236;
              if (!v135) {
                goto LABEL_132;
              }
              if ((v236 & 0x1000000000) == 0)
              {
                uint64_t v136 = v236 | 0x1000000000;
                goto LABEL_134;
              }
            }
            goto LABEL_135;
          }
          swift_release();

          goto LABEL_122;
        }
        void v62[2] = v53;
      }
      uint64_t v66 = v62[7];
      uint64_t v67 = *(void *)(v66 + 8 * v10);
      BOOL v68 = __OFADD__(v67, 1);
      uint64_t v69 = v67 + 1;
      if (v68) {
        goto LABEL_112;
      }
      *(void *)(v66 + 8 * v10) = v69;
      swift_endAccess();
      swift_bridgeObjectRelease();
      unint64_t v10 = (unint64_t)sub_10002E4B4;
      if (!v46) {
        goto LABEL_47;
      }
    }
    __break(1u);
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
LABEL_47:
  uint64_t v70 = fpfs_fileattrs_fullpath();
  uint64_t v50 = v205;
  if (v70)
  {
    uint64_t v239 = sub_10096BDE0();
    uint64_t v19 = v212;
  }
  else
  {
    uint64_t v19 = v212;
    if (v209)
    {
      v72._int countAndFlagsBits = sub_10096BDE0();
      strcpy((char *)v235, "unknownPath/");
      BYTE5(v235[1]) = 0;
      HIWORD(v235[1]) = -5120;
    }
    else
    {
      v235[0] = 0;
      v235[1] = 0xE000000000000000;
      sub_10096CBD0(29);
      swift_bridgeObjectRelease();
      v235[0] = 0xD00000000000001BLL;
      v235[1] = 0x80000001009A4110;
      v220[0] = *v214;
      v72._int countAndFlagsBits = sub_10096D220();
    }
    sub_10096BDC0(v72);
    swift_bridgeObjectRelease();
    unint64_t v71 = v235[1];
    uint64_t v239 = v235[0];
  }
  unint64_t v240 = v71;
  uint64_t v73 = (uint64_t)v210;
  if (*(unsigned char *)(v19 + v198) & 8) == 0 || (sub_10045F670())
  {
    uint64_t v214 = 0;
    uint64_t v74 = 0;
    unint64_t v237 = 0;
    unint64_t v238 = 0;
LABEL_56:
    int v75 = 1;
LABEL_57:
    uint64_t v236 = 0;
    if ((*(unsigned char *)(v50 + 1) & 1) == 0 && (*(unsigned char *)(v50 + 10) & 1) == 0)
    {
      v235[0] = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      v235[1] = v76;
      v220[0] = 47;
      v220[1] = 0xE100000000000000;
      sub_10001F9C0();
      uint64_t v77 = sub_10096C8E0();
      swift_bridgeObjectRelease();
      if (*(void *)(v77 + 16)
        && (swift_bridgeObjectRetain(),
            swift_bridgeObjectRelease(),
            (uint64_t v78 = *(void *)(v19 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker)) != 0))
      {
        uint64_t v79 = *v215;
        swift_retain();
        if (sub_10063EE5C((uint64_t)v79, 0, 1, 0, 1))
        {
          LODWORD(v210) = v75;
          char v209 = v74;
          NSString v80 = sub_10096BC00();
          swift_beginAccess();
          uint64_t v81 = *(void *)(v78 + 16);
          swift_bridgeObjectRetain();
          uint64_t v82 = v78;
          uint64_t v83 = sub_10063D7EC((uint64_t)v80, v81);

          swift_bridgeObjectRelease();
          swift_release();
          if (!v83)
          {
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v113 = v19;
            goto LABEL_103;
          }
          uint64_t v22 = (uint64_t)sub_10096BC00();
          swift_bridgeObjectRelease();
          uint64_t v46 = v204;
          sub_10063E1FC(v215, (void *)v22, v204);
          uint64_t v208 = (void *)v82;
          uint64_t v53 = v201;
          int v114 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v46, 1, v202);
          if (v114 != 1)
          {
LABEL_113:
            uint64_t v121 = v46;
            uint64_t v122 = v193;
            sub_10001AE98(v121, v193, &qword_100ACCB10);
            uint64_t v123 = (uint64_t)v199;
            sub_10002B70C(v122, (uint64_t)v199, &qword_100ACCB10);
            unint64_t v124 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
            int8x16_t v125 = (void *)v19;
            uint64_t v126 = swift_allocObject();
            *(void *)(v126 + 16) = v125;
            *(void *)(v126 + 24) = v22;
            sub_10001AE98(v123, v126 + v124, &qword_100ACCB10);
            sub_10002B7CC(&qword_100AD64B8);
            uint64_t v127 = swift_allocObject();
            sub_1004A68A8((uint64_t)v235);
            uint64_t v211 = v127 + 32;
            sub_10001AE98((uint64_t)v235, v127 + 32, (uint64_t *)&unk_100AD64C0);
            *(void *)(v127 + 16) = sub_1004A6890;
            *(void *)(v127 + 24) = v126;
            int v128 = *(unsigned __int8 *)(v50 + 3);
            uint64_t v65 = v125;
            if (v128 != 1) {
              goto LABEL_116;
            }
            swift_release();
LABEL_122:
            swift_release();
            if ((v236 & 0x40000000) == 0) {
              v236 |= 0x40000000uLL;
            }
            sub_10002B770(v193, &qword_100ACCB10);
            uint64_t v113 = v65;
LABEL_103:
            sub_100466E10(&v241, &v236, v113, (uint64_t)&v239, &v242, &v238, &v237);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1000705CC((uint64_t)v196);
            sub_1000705CC(v10);
            unint64_t v111 = (void (*)(void *@<X8>))v209;
            goto LABEL_100;
          }
          sub_10002B770(v46, (uint64_t *)&unk_100AD0CF0);
          uint64_t v9 = (uint64_t)v209;
          if (*(unsigned char *)(v50 + 3)) {
            goto LABEL_147;
          }
          uint64_t v115 = sub_1004674D0();
          uint64_t v116 = sub_10045757C(v192);
          char v117 = sub_10049C88C((uint64_t)v116, (uint64_t)v115);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v117 & 1) == 0) {
            goto LABEL_147;
          }
          if (v215[3]
            && (uint64_t v118 = *(void *)(v19 + OBJC_IVAR____TtC9libfssync4FPCK_diskVsFSSnapshotIgnoredFilenames),
                uint64_t v119 = sub_10096BDE0(),
                LOBYTE(v118) = sub_1000340D8(v119, v120, v118),
                swift_bridgeObjectRelease(),
                (v118 & 1) != 0)
            || (uint64_t v23 = v211, (~v211 & 0x8000000080000) == 0))
          {
            swift_release();

            sub_100466E10(&v241, &v236, v19, (uint64_t)&v239, &v242, &v238, &v237);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1000705CC((uint64_t)v196);
            sub_1000705CC(v10);
            unint64_t v111 = (void (*)(void *@<X8>))v9;
            goto LABEL_100;
          }
LABEL_128:
          if ((v23 & 0x8000000000000) != 0) {
            goto LABEL_147;
          }
          uint64_t v207 = (char *)v22;
          uint64_t v22 = v236;
          if ((v236 & 1) == 0)
          {
            uint64_t v22 = v236 | 1;
            v236 |= 1uLL;
          }
          goto LABEL_148;
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_100466E10(&v241, &v236, v19, (uint64_t)&v239, &v242, &v238, &v237);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000705CC((uint64_t)v196);
    sub_1000705CC(v10);
    unint64_t v111 = (void (*)(void *@<X8>))v74;
    goto LABEL_100;
  }
  type metadata accessor for FSRepair();
  uint64_t v84 = swift_allocObject();
  unint64_t v237 = 0;
  unint64_t v238 = 0;
  uint64_t v214 = (void *)v84;
  if (!v84)
  {
    uint64_t v214 = 0;
    uint64_t v74 = 0;
    goto LABEL_56;
  }
  uint64_t v9 = v211;
  if (!v211)
  {
    int v75 = 0;
    uint64_t v74 = 0;
    goto LABEL_57;
  }
  uint64_t v85 = v19 + OBJC_IVAR____TtC9libfssync4FPCK_rootURL;
  uint64_t v206 = (void *)(v19 + OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskBrokenInvariantsCounters);
  uint64_t v207 = (char *)OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase;
  swift_retain();
  uint64_t v208 = (void *)v85;
  swift_beginAccess();
  char v209 = 0;
  while (1)
  {
    unint64_t v86 = __clz(__rbit64(v9));
    uint64_t v87 = v9 & ~(1 << v86);
    if (((1 << v86) & v9) == 0) {
      uint64_t v87 = v9;
    }
    if (v86 >= 0x40) {
      int64_t v88 = 0;
    }
    else {
      int64_t v88 = 1 << v86;
    }
    if (v86 < 0x40) {
      uint64_t v9 = v87;
    }
    uint64_t v89 = v239;
    unint64_t v90 = v240;
    sub_10002B70C((uint64_t)v208, v73, &qword_100ACA8C0);
    uint64_t v22 = sub_10096AE50();
    uint64_t v91 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v73, 1, v22) == 1)
    {
LABEL_228:
      __break(1u);
      goto LABEL_229;
    }
    uint64_t v19 = *(void *)&v207[v212];
    swift_retain();
    swift_bridgeObjectRetain();
    char v92 = sub_100255314(v88, v213, v215, v89, v90, v73, v19, v211);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v73, v22);
    if (v92) {
      break;
    }
LABEL_67:
    if (!v9)
    {
      swift_release();
      int v75 = 0;
      uint64_t v19 = v212;
      uint64_t v74 = v209;
      uint64_t v50 = v205;
      goto LABEL_57;
    }
  }
  uint64_t v93 = v206;
  swift_beginAccess();
  sub_1000705CC((uint64_t)v209);
  char v94 = swift_isUniquelyReferenced_nonNull_native();
  v220[0] = *v93;
  uint64_t v95 = v220[0];
  *uint64_t v93 = 0x8000000000000000;
  unint64_t v97 = sub_1003204B0(v88);
  uint64_t v98 = *(void *)(v95 + 16);
  uint64_t v23 = (v96 & 1) == 0;
  uint64_t v99 = v98 + v23;
  if (__OFADD__(v98, v23)) {
    goto LABEL_126;
  }
  uint64_t v22 = v96;
  if (*(void *)(v95 + 24) >= v99)
  {
    if ((v94 & 1) == 0)
    {
      sub_10091FF58();
      uint64_t v95 = v220[0];
    }
  }
  else
  {
    sub_10037A144(v99, v94);
    type metadata accessor for BrokenInvariants(0);
    uint64_t v95 = v220[0];
    unint64_t v100 = sub_1003204B0(v88);
    if ((v22 & 1) != (v101 & 1)) {
      goto LABEL_234;
    }
    unint64_t v97 = v100;
  }
  unint64_t v102 = v206;
  *uint64_t v206 = v95;
  swift_bridgeObjectRelease();
  objc_super v103 = (void *)*v102;
  if (v22)
  {
    swift_bridgeObjectRetain();
LABEL_90:
    uint64_t v73 = (uint64_t)v210;
    uint64_t v109 = v103[7];
    uint64_t v110 = *(void *)(v109 + 8 * v97);
    BOOL v68 = __OFADD__(v110, 1);
    uint64_t v23 = v110 + 1;
    if (v68) {
      goto LABEL_127;
    }
    *(void *)(v109 + 8 * v97) = v23;
    swift_endAccess();
    swift_bridgeObjectRelease();
    char v209 = (char *)sub_10002E4B4;
    if ((v88 & ~v238) != 0)
    {
      v238 |= v88;
      char v209 = (char *)sub_10002E4B4;
    }
    goto LABEL_67;
  }
  v103[(v97 >> 6) + 8] |= 1 << v97;
  uint64_t v104 = 8 * v97;
  *(void *)(v103[6] + v104) = v88;
  *(void *)(v103[7] + v104) = 0;
  uint64_t v105 = v103[2];
  uint64_t v106 = v105 + 1;
  BOOL v107 = __OFADD__(v105, 1);
  swift_bridgeObjectRetain();
  if (!v107)
  {
    v103[2] = v106;
    goto LABEL_90;
  }
  __break(1u);
LABEL_132:
  if ((v108 & 0x800000000) == 0)
  {
    uint64_t v136 = v108 | 0x800000000;
LABEL_134:
    uint64_t v236 = v136;
  }
LABEL_135:
  sub_100489E28((uint64_t)v218);
  sub_10001AE98((uint64_t)v218, (uint64_t)v219, &qword_100ACD980);
  sub_10001AE98((uint64_t)v219, (uint64_t)v220, &qword_100ACD980);
  if (sub_1000D3324((uint64_t)v220) != 1)
  {
    sub_10001AE98((uint64_t)v219, (uint64_t)v217, &qword_100ACD980);
    sub_10035751C((uint64_t)v217);
    if (qword_100ACC0F0 != -1) {
      swift_once();
    }
    if ((v222 & (static Fields.all | 0x10)) != 0 || (v221 & 0x51) != 0 || (v230 & (static Fields.all | 0x10)) != 0) {
      goto LABEL_144;
    }
LABEL_214:
    if ((v229 & 0x51) != 0
      || v224 == 1
      || v231 == 1
      || v223 != 3
      || v225 != 6
      || v228 != 3 && (v228 != 4 || v226 & 0xFFFFFFFFFFFFFFFELL | v227))
    {
      goto LABEL_144;
    }
    if (v234 != 3)
    {
      uint64_t v22 = (uint64_t)v207;
      if (v234 == 4)
      {
        unint64_t v190 = v232 & 0xFFFFFFFFFFFFFFFELL | v233;
        sub_1004A6C18((uint64_t)v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
        if (v190) {
          goto LABEL_145;
        }
LABEL_230:
        uint64_t v191 = sub_1004805E8((uint64_t)v215, v193, *(void *)(v212 + v198));
        swift_release();
        swift_setDeallocating();
        sub_10001AE98(v211, (uint64_t)v216, (uint64_t *)&unk_100AD64C0);
        sub_1004A6C18((uint64_t)v216, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1004A68FC);
        swift_deallocClassInstance();
        sub_1004A6C18((uint64_t)v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
        if ((v191 & ~v236) != 0) {
          v236 |= v191;
        }
        sub_10002B770(v193, &qword_100ACCB10);
        uint64_t v19 = v212;
        uint64_t v9 = (uint64_t)v209;
        uint64_t v22 = (uint64_t)v207;
        goto LABEL_147;
      }
LABEL_144:
      sub_1004A6C18((uint64_t)v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
LABEL_145:
      sub_10002B770(v193, &qword_100ACCB10);
      sub_1004A6C18((uint64_t)v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
      swift_setDeallocating();
      swift_release();
      sub_10001AE98(v211, (uint64_t)v216, (uint64_t *)&unk_100AD64C0);
      sub_1004A6C18((uint64_t)v216, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1004A68FC);
      swift_deallocClassInstance();
      goto LABEL_146;
    }
LABEL_229:
    sub_1004A6C18((uint64_t)v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10012EFE8);
    goto LABEL_230;
  }
  swift_release();
  swift_setDeallocating();
  sub_10001AE98(v211, (uint64_t)v217, (uint64_t *)&unk_100AD64C0);
  sub_1004A6C18((uint64_t)v217, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1004A68FC);
  swift_deallocClassInstance();
  if ((v236 & 1) == 0) {
    v236 |= 1uLL;
  }
  sub_10002B770(v193, &qword_100ACCB10);
LABEL_146:
  uint64_t v19 = v212;
  uint64_t v9 = (uint64_t)v209;
LABEL_147:
  uint64_t v207 = (char *)v22;
  uint64_t v22 = v236;
  if (v236)
  {
LABEL_148:
    uint64_t v137 = 0;
    unint64_t v138 = (void *)(v19 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskVsFSSnapshotDiffCounters);
    while (1)
    {
      uint64_t v139 = v19;
      unint64_t v140 = __clz(__rbit64(v22));
      uint64_t v141 = v22 & ~(1 << v140);
      if (((1 << v140) & v22) == 0) {
        uint64_t v141 = v22;
      }
      if (v140 >= 0x40) {
        uint64_t v142 = 0;
      }
      else {
        uint64_t v142 = 1 << v140;
      }
      if (v140 < 0x40) {
        uint64_t v22 = v141;
      }
      swift_beginAccess();
      sub_1000705CC((uint64_t)v137);
      char v143 = swift_isUniquelyReferenced_nonNull_native();
      v220[0] = *v138;
      uint64_t v144 = v220[0];
      *unint64_t v138 = 0x8000000000000000;
      unint64_t v146 = sub_1003204C8(v142);
      uint64_t v147 = *(void *)(v144 + 16);
      BOOL v148 = (v145 & 1) == 0;
      uint64_t v149 = v147 + v148;
      if (__OFADD__(v147, v148))
      {
LABEL_212:
        __break(1u);
LABEL_213:
        __break(1u);
        goto LABEL_214;
      }
      char v150 = v145;
      if (*(void *)(v144 + 24) >= v149)
      {
        if ((v143 & 1) == 0)
        {
          sub_10091FF4C();
          uint64_t v144 = v220[0];
        }
      }
      else
      {
        sub_10037A124(v149, v143);
        uint64_t v144 = v220[0];
        unint64_t v151 = sub_1003204C8(v142);
        if ((v150 & 1) != (v152 & 1)) {
          goto LABEL_236;
        }
        unint64_t v146 = v151;
      }
      uint64_t v19 = v139;
      *unint64_t v138 = v144;
      swift_bridgeObjectRelease();
      uint64_t v153 = (void *)*v138;
      if (v150)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v153[(v146 >> 6) + 8] |= 1 << v146;
        uint64_t v154 = 8 * v146;
        *(void *)(v153[6] + v154) = v142;
        *(void *)(v153[7] + v154) = 0;
        uint64_t v155 = v153[2];
        uint64_t v156 = v155 + 1;
        BOOL v157 = __OFADD__(v155, 1);
        swift_bridgeObjectRetain();
        if (v157)
        {
LABEL_227:
          __break(1u);
          goto LABEL_228;
        }
        v153[2] = v156;
      }
      uint64_t v158 = v153[7];
      uint64_t v159 = *(void *)(v158 + 8 * v146);
      BOOL v68 = __OFADD__(v159, 1);
      uint64_t v160 = v159 + 1;
      uint64_t v9 = (uint64_t)v209;
      if (v68) {
        goto LABEL_213;
      }
      *(void *)(v158 + 8 * v146) = v160;
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v137 = sub_10002E4B4;
      if (!v22)
      {

        char v161 = (char *)sub_10002E4B4;
        goto LABEL_173;
      }
    }
  }

  char v161 = 0;
LABEL_173:
  if (v210)
  {
    uint64_t v162 = 0;
  }
  else
  {
    unint64_t v163 = v236;
    if (v236)
    {
      uint64_t v207 = v161;
      uint64_t v164 = (void *)(v19 + OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskVsFSSnapshotDiffCounters);
      uint64_t v165 = v239;
      uint64_t v22 = v240;
      unint64_t v166 = v237;
      swift_retain();
      uint64_t v162 = 0;
      uint64_t v210 = (char *)v165;
      uint64_t v211 = v22;
      while (1)
      {
        unint64_t v167 = __clz(__rbit64(v163));
        uint64_t v168 = v163 & ~(1 << v167);
        if (((1 << v167) & v163) == 0) {
          uint64_t v168 = v163;
        }
        if (v167 >= 0x40) {
          int64_t v169 = 0;
        }
        else {
          int64_t v169 = 1 << v167;
        }
        if (v167 < 0x40) {
          unint64_t v163 = v168;
        }
        swift_bridgeObjectRetain();
        char v170 = sub_10025B1EC(v169, v213, (uint64_t)v215, v165, v22);
        swift_bridgeObjectRelease();
        if (v170)
        {
          swift_beginAccess();
          sub_1000705CC((uint64_t)v162);
          char v171 = swift_isUniquelyReferenced_nonNull_native();
          v220[0] = *v164;
          uint64_t v172 = v220[0];
          *uint64_t v164 = 0x8000000000000000;
          unint64_t v174 = sub_1003204C8(v169);
          uint64_t v175 = *(void *)(v172 + 16);
          BOOL v176 = (v173 & 1) == 0;
          uint64_t v177 = v175 + v176;
          if (__OFADD__(v175, v176))
          {
            __break(1u);
LABEL_211:
            __break(1u);
            goto LABEL_212;
          }
          char v178 = v173;
          if (*(void *)(v172 + 24) >= v177)
          {
            if ((v171 & 1) == 0)
            {
              sub_10091FF4C();
              uint64_t v172 = v220[0];
            }
          }
          else
          {
            sub_10037A124(v177, v171);
            uint64_t v172 = v220[0];
            unint64_t v179 = sub_1003204C8(v169);
            if ((v178 & 1) != (v180 & 1)) {
              goto LABEL_236;
            }
            unint64_t v174 = v179;
          }
          *uint64_t v164 = v172;
          swift_bridgeObjectRelease();
          NSFileProviderItemIdentifier v181 = (void *)*v164;
          if (v178)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            v181[(v174 >> 6) + 8] |= 1 << v174;
            uint64_t v182 = 8 * v174;
            *(void *)(v181[6] + v182) = v169;
            *(void *)(v181[7] + v182) = 0;
            uint64_t v183 = v181[2];
            uint64_t v184 = v183 + 1;
            BOOL v185 = __OFADD__(v183, 1);
            swift_bridgeObjectRetain();
            if (v185)
            {
              __break(1u);
              goto LABEL_227;
            }
            void v181[2] = v184;
          }
          uint64_t v186 = v181[7];
          uint64_t v187 = *(void *)(v186 + 8 * v174);
          BOOL v68 = __OFADD__(v187, 1);
          uint64_t v188 = v187 + 1;
          uint64_t v22 = v211;
          if (v68) {
            goto LABEL_211;
          }
          *(void *)(v186 + 8 * v174) = v188;
          swift_endAccess();
          swift_bridgeObjectRelease();
          if ((v169 & ~v166) != 0) {
            int64_t v189 = v169;
          }
          else {
            int64_t v189 = 0;
          }
          v166 |= v189;
          uint64_t v162 = sub_10002E4B4;
          uint64_t v165 = (uint64_t)v210;
        }
        if (!v163)
        {
          unint64_t v237 = v166;
          swift_release();
          uint64_t v208 = v214;
          uint64_t v19 = v212;
          uint64_t v9 = (uint64_t)v209;
          char v161 = v207;
          goto LABEL_206;
        }
      }
    }
    uint64_t v162 = 0;
    uint64_t v9 = (uint64_t)v209;
  }
LABEL_206:
  swift_release();
  sub_100466E10(&v241, &v236, v19, (uint64_t)&v239, &v242, &v238, &v237);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000705CC((uint64_t)v196);
  sub_1000705CC(v10);
  sub_1000705CC(v9);
  sub_1000705CC((uint64_t)v161);
  unint64_t v111 = v162;
LABEL_100:
  sub_1000705CC((uint64_t)v111);
  LOBYTE(v25) = v197;
  return v25 & 1;
}