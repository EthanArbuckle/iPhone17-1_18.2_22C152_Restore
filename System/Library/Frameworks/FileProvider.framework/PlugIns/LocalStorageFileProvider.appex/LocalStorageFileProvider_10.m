uint64_t sub_1006660B4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  size_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  size_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  size_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  size_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  size_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t);
  const void *v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  void (*v98)(uint64_t);
  const void *v99;
  int v100;
  size_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  void *v106;
  const void *v107;
  uint64_t v108;
  unint64_t v109;
  const void *v110;
  int v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  unint64_t v117;
  void *v118;
  const void *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t);
  const void *v123;
  int v124;
  void (*v125)(uint64_t);
  const void *v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  size_t v130;
  uint64_t v131;
  void *v132;
  const void *v133;
  void (*v134)(uint64_t);
  const void *v135;
  int v136;
  char v137;
  void *v138;
  const void *v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char *v155;
  unsigned char *v156;
  uint64_t *v157;
  uint64_t v158;
  char *v159;
  unsigned char *v160;
  int v161;
  size_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  size_t v173;
  unint64_t v174;
  size_t v175;
  unint64_t v176;
  size_t v177;
  unint64_t v178;
  void *v179;
  unint64_t v180;
  unint64_t v181;
  void (*v182)(unint64_t, unint64_t, uint64_t);
  void *v183;
  void *v184;
  void *v185;
  void *v186;
  char *v187;
  void *v188;
  id v189;
  int v190;
  uint64_t v191;
  void *v192;
  unint64_t v193;
  unint64_t v194;
  void (*v195)(unint64_t, unint64_t, uint64_t);
  void *v196;
  void *v197;
  void *v198;
  void *v199;
  char *v200;
  void *v201;
  char v202;
  unint64_t *v203;
  unint64_t v204;
  unint64_t *v205;
  unint64_t v206;
  unint64_t *v207;
  unint64_t v208;
  unint64_t *v209;
  unint64_t v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t *v213;
  unint64_t v214;
  size_t v215;
  size_t v216;
  size_t v217;
  size_t v218;
  size_t v219;
  size_t v220;
  void *v221;
  size_t v222;
  const void *v223;
  uint64_t v224;
  size_t v225;
  unint64_t v226;
  unint64_t v227;
  void *v228;
  void *v229;
  unint64_t v230;
  unint64_t v231;
  void (*v232)(unint64_t, unint64_t, uint64_t);
  void *v233;
  void *v234;
  void *v235;
  void *v236;
  void *v237;
  unint64_t v238;
  unint64_t v239;
  uint64_t v240;
  int v241;
  unint64_t v242;
  unint64_t v243;
  void (*v244)(unint64_t, unint64_t, uint64_t);
  size_t v245;
  size_t v246;
  unsigned char *v247;
  unint64_t v248;
  unint64_t v249;
  unint64_t v250;
  unint64_t v251;
  void *v252;
  void *v253;
  unint64_t v254;
  unint64_t v255;
  void *v256;
  const void *v257;
  unsigned int (*v258)(const void *, uint64_t, uint64_t);
  void *v259;
  void *v260;
  unint64_t v261;
  unint64_t v262;
  uint64_t v263;
  void *v264;
  void *v265;
  unint64_t v266;
  uint64_t *v267;
  unint64_t v268;
  uint64_t v269;
  unsigned int v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  unint64_t v274;
  unint64_t v275;
  int v276;
  void *v277;
  void *v278;
  unint64_t v279;
  long long *v280;
  unint64_t v281;
  int v282;
  long long v283;
  long long v284;
  long long v285;
  long long v286;
  long long v287;
  long long v288;
  long long v289;
  long long v290;
  long long v291;
  long long v292;
  long long v293;
  long long v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  id v298;
  void *v299;
  size_t v300;
  const void *v301;
  unint64_t v302;
  uint64_t v303;
  unint64_t v304;
  unint64_t v305;
  void *v306;
  void *v307;
  unint64_t v308;
  unint64_t v309;
  void (*v310)(unint64_t, unint64_t, uint64_t);
  void *v311;
  void *v312;
  void *v313;
  void *v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  int v319;
  size_t v320;
  size_t v321;
  void (*v322)(size_t, size_t, uint64_t);
  size_t v323;
  size_t v324;
  unsigned char *v325;
  unint64_t v326;
  unint64_t v327;
  unint64_t v328;
  unint64_t v329;
  void *v330;
  void *v331;
  unint64_t v332;
  unint64_t v333;
  void *v334;
  const void *v335;
  unsigned int (*v336)(const void *, uint64_t, uint64_t);
  void *v337;
  void *v338;
  unint64_t v339;
  unint64_t v340;
  uint64_t v341;
  void *v342;
  void *v343;
  unint64_t v344;
  uint64_t *v345;
  unint64_t v346;
  uint64_t v347;
  unint64_t v348;
  unint64_t v349;
  uint64_t v350;
  unint64_t v351;
  unint64_t v352;
  int v353;
  void *v354;
  void *v355;
  unint64_t v356;
  long long *v357;
  unint64_t v358;
  int v359;
  long long v360;
  long long v361;
  long long v362;
  long long v363;
  long long v364;
  long long v365;
  long long v366;
  long long v367;
  long long v368;
  long long v369;
  long long v370;
  long long v371;
  unsigned int v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  id v376;
  void *v377;
  size_t v378;
  const void *v379;
  unint64_t v380;
  uint64_t v381;
  size_t v382;
  unint64_t v383;
  unint64_t v384;
  void *v385;
  void *v386;
  unint64_t v387;
  unint64_t v388;
  void (*v389)(unint64_t, unint64_t, uint64_t);
  void *v390;
  void *v391;
  void *v392;
  void *v393;
  void *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  int v398;
  size_t v399;
  size_t v400;
  void (*v401)(size_t, size_t, uint64_t);
  size_t v402;
  size_t v403;
  unsigned char *v404;
  unint64_t v405;
  unint64_t v406;
  unint64_t v407;
  unint64_t v408;
  void *v409;
  void *v410;
  unint64_t v411;
  unint64_t v412;
  void *v413;
  const void *v414;
  unsigned int (*v415)(const void *, uint64_t, uint64_t);
  void *v416;
  void *v417;
  unint64_t v418;
  unint64_t v419;
  uint64_t v420;
  void *v421;
  void *v422;
  unint64_t v423;
  uint64_t *v424;
  unint64_t v425;
  uint64_t v426;
  unsigned int v427;
  unint64_t v428;
  unint64_t v429;
  uint64_t v430;
  unint64_t v431;
  unint64_t v432;
  int v433;
  void *v434;
  void *v435;
  unint64_t v436;
  long long *v437;
  unint64_t v438;
  int v439;
  long long v440;
  long long v441;
  long long v442;
  long long v443;
  long long v444;
  long long v445;
  long long v446;
  long long v447;
  long long v448;
  long long v449;
  long long v450;
  long long v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  id v455;
  void *v456;
  size_t v457;
  const void *v458;
  uint64_t v459;
  uint64_t v460;
  unint64_t v461;
  void *v462;
  void *v463;
  unint64_t v464;
  unint64_t v465;
  void (*v466)(unint64_t, unint64_t, uint64_t);
  void *v467;
  void *v468;
  void *v469;
  void *v470;
  void *v471;
  size_t v472;
  size_t v473;
  uint64_t v474;
  int v475;
  size_t v476;
  size_t v477;
  void (*v478)(size_t, size_t, uint64_t);
  size_t v479;
  size_t v480;
  unsigned char *v481;
  unint64_t v482;
  unint64_t v483;
  unint64_t v484;
  unint64_t v485;
  void *v486;
  void *v487;
  unint64_t v488;
  unint64_t v489;
  void *v490;
  const void *v491;
  unsigned int (*v492)(const void *, uint64_t, uint64_t);
  void *v493;
  void *v494;
  unint64_t v495;
  unint64_t v496;
  uint64_t v497;
  void *v498;
  void *v499;
  unint64_t v500;
  uint64_t *v501;
  unint64_t v502;
  uint64_t v503;
  unsigned int v504;
  unint64_t v505;
  unint64_t v506;
  uint64_t v507;
  unint64_t v508;
  unint64_t v509;
  int v510;
  void *v511;
  void *v512;
  unint64_t v513;
  long long *v514;
  unint64_t v515;
  int v516;
  long long v517;
  long long v518;
  long long v519;
  long long v520;
  long long v521;
  long long v522;
  long long v523;
  long long v524;
  long long v525;
  long long v526;
  long long v527;
  long long v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  id v532;
  void *v533;
  uint64_t v534;
  size_t v535;
  uint64_t v536;
  unint64_t v537;
  unint64_t v538;
  void *v539;
  void *v540;
  unint64_t v541;
  unint64_t v542;
  void (*v543)(unint64_t, unint64_t, uint64_t);
  void *v544;
  void *v545;
  void *v546;
  void *v547;
  void *v548;
  size_t v549;
  size_t v550;
  uint64_t v551;
  int v552;
  size_t v553;
  size_t v554;
  void (*v555)(size_t, size_t, uint64_t);
  size_t v556;
  size_t v557;
  unsigned char *v558;
  unint64_t v559;
  unint64_t v560;
  unint64_t v561;
  unint64_t v562;
  void *v563;
  void *v564;
  unint64_t v565;
  unint64_t v566;
  void *v567;
  const void *v568;
  unsigned int (*v569)(const void *, uint64_t, uint64_t);
  void *v570;
  void *v571;
  unint64_t v572;
  unint64_t v573;
  uint64_t v574;
  void *v575;
  void *v576;
  unint64_t v577;
  uint64_t *v578;
  unint64_t v579;
  uint64_t v580;
  unint64_t v581;
  unint64_t v582;
  uint64_t v583;
  unint64_t v584;
  unint64_t v585;
  int v586;
  void *v587;
  void *v588;
  unint64_t v589;
  unint64_t v590;
  unint64_t v591;
  int v592;
  long long v593;
  long long v594;
  long long v595;
  long long v596;
  long long v597;
  long long v598;
  long long v599;
  long long v600;
  long long v601;
  long long v602;
  long long v603;
  long long v604;
  unsigned int v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  id v609;
  void *v610;
  size_t v611;
  const void *v612;
  uint64_t v613;
  uint64_t v614;
  unint64_t v615;
  void *v616;
  void *v617;
  unint64_t v618;
  unint64_t v619;
  void (*v620)(unint64_t, unint64_t, uint64_t);
  void *v621;
  void *v622;
  void *v623;
  void *v624;
  void *v625;
  size_t v626;
  size_t v627;
  uint64_t v628;
  int v629;
  size_t v630;
  size_t v631;
  void (*v632)(size_t, size_t, uint64_t);
  size_t v633;
  size_t v634;
  unsigned char *v635;
  unint64_t v636;
  unint64_t v637;
  unint64_t v638;
  unint64_t v639;
  void *v640;
  void *v641;
  unint64_t v642;
  unint64_t v643;
  void *v644;
  const void *v645;
  unsigned int (*v646)(const void *, uint64_t, uint64_t);
  void *v647;
  void *v648;
  unint64_t v649;
  unint64_t v650;
  uint64_t v651;
  void *v652;
  void *v653;
  unint64_t v654;
  uint64_t *v655;
  unint64_t v656;
  uint64_t v657;
  unsigned int v658;
  unint64_t v659;
  unint64_t v660;
  uint64_t v661;
  unint64_t v662;
  unint64_t v663;
  int v664;
  void *v665;
  void *v666;
  unint64_t v667;
  long long *v668;
  unint64_t v669;
  int v670;
  long long v671;
  long long v672;
  long long v673;
  long long v674;
  long long v675;
  long long v676;
  long long v677;
  long long v678;
  long long v679;
  long long v680;
  long long v681;
  long long v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  id v686;
  _OWORD *v687;
  long long *v688;
  long long v689;
  unint64_t v690;
  unint64_t v691;
  long long v692;
  void *v693;
  unint64_t v694;
  uint64_t v695;
  void *v696;
  uint64_t v697;
  unint64_t v698;
  unint64_t v699;
  void *v700;
  void *v701;
  void *v702;
  id v703;
  _OWORD *v704;
  long long *v705;
  long long v706;
  unint64_t v707;
  unint64_t v708;
  long long v709;
  void *v710;
  unint64_t v711;
  uint64_t v712;
  void *v713;
  uint64_t v714;
  unint64_t v715;
  unint64_t v716;
  void *v717;
  const void *v718;
  char *v719;
  char *v720;
  void *v721;
  uint64_t v722;
  void *v723;
  unint64_t v724;
  unint64_t v725;
  void (*v726)(unint64_t, unint64_t, uint64_t);
  void *v727;
  void *v728;
  void *v729;
  void *v730;
  void *v731;
  void *v732;
  void *v733;
  id v734;
  _OWORD *v735;
  long long *v736;
  long long v737;
  unint64_t v738;
  unint64_t v739;
  long long v740;
  void *v741;
  unint64_t v742;
  uint64_t v743;
  void *v744;
  uint64_t v745;
  unint64_t v746;
  unint64_t v747;
  void *v748;
  void *v749;
  _OWORD *v750;
  long long *v751;
  long long v752;
  unint64_t v753;
  unint64_t v754;
  long long v755;
  void *v756;
  unint64_t v757;
  uint64_t v758;
  void *v759;
  uint64_t v760;
  unint64_t v761;
  unint64_t v762;
  void *v763;
  void *v764;
  void *v765;
  id v766;
  _OWORD *v767;
  long long *v768;
  long long v769;
  unint64_t v770;
  unint64_t v771;
  long long v772;
  void *v773;
  unint64_t v774;
  uint64_t v775;
  void *v776;
  uint64_t v777;
  unint64_t v778;
  unint64_t v779;
  void *v780;
  const void *v781;
  uint64_t v782;
  char *v783;
  char *v784;
  int v785;
  uint64_t *v786;
  uint64_t v787;
  size_t v788;
  uint64_t v789;
  void *v790;
  unint64_t v791;
  unint64_t v792;
  void (*v793)(unint64_t, unint64_t, uint64_t);
  void *v794;
  void *v795;
  void *v796;
  void *v797;
  void *v798;
  void *v799;
  id v800;
  _OWORD *v801;
  long long *v802;
  long long v803;
  unint64_t v804;
  unint64_t v805;
  long long v806;
  void *v807;
  unint64_t v808;
  uint64_t v809;
  void *v810;
  uint64_t v811;
  unint64_t v812;
  unint64_t v813;
  void *v814;
  void *v815;
  unint64_t v817;
  unint64_t v818;
  size_t v819;
  size_t v820;
  size_t v821;
  size_t v822;
  unsigned int v823;
  unsigned int v824;
  unsigned int v825;
  unsigned int v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  size_t __n;
  unsigned int v844;
  unsigned int v845;
  unint64_t v846;
  unint64_t v847;
  uint64_t v848;
  size_t v849;
  size_t v850;
  uint64_t v851;
  size_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  unsigned int v858;
  unsigned int v859;
  uint64_t v860;
  unsigned int v861;
  unint64_t v862;
  unsigned int v863;
  unsigned int v864;
  uint64_t v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  unsigned int v870;
  unsigned int v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  size_t v877;
  unsigned int v878;
  size_t v879;
  unint64_t v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  uint64_t AssociatedTypeWitness;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  unint64_t v892;
  uint64_t v893;
  void *v894;
  unint64_t v895;
  uint64_t v896;
  unint64_t v897;
  void *v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  const void *v908;
  uint64_t v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  unsigned int v917;
  uint64_t v918;
  unint64_t v919;
  unint64_t v920;
  unint64_t v921;
  size_t v923;
  unint64_t v924;
  unint64_t v925;
  unint64_t v926;
  unint64_t v927;
  uint64_t v928;
  uint64_t v929;
  void *v930;
  unsigned int v931;
  uint64_t v932;
  const void *v933;
  const void *v934;
  const void *v935;
  const void *v936;
  const void *v937;
  size_t v938;
  void *v939;
  void (*v940)(uint64_t);
  uint64_t v941;
  void *v942;
  size_t v943;
  void *v944;
  void *v945;
  size_t v946;
  void *v947;
  unint64_t v949;
  unint64_t v950;
  uint64_t v951;
  unint64_t v952;
  void *v953;
  void *v954;
  size_t v955;
  void *v956;
  unint64_t v957;
  void *v958;

  v3 = *(void *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(void *)(AssociatedTypeWitness - 8);
  v949 = *(void *)(v4 + 64);
  v951 = *(unsigned __int8 *)(v4 + 80);
  v911 = v3;
  v868 = swift_getAssociatedTypeWitness();
  v5 = *(void *)(v868 - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  v856 = swift_getAssociatedTypeWitness();
  v7 = *(void *)(v856 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 | v8 | 7;
  v876 = sub_10096B0E0();
  v10 = *(void *)(v876 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v11 | 7;
  v13 = v9 | v951 | v11;
  v889 = v4;
  v869 = v5;
  v857 = v7;
  v14 = *(_DWORD *)(v7 + 84);
  v824 = v14;
  v859 = *(_DWORD *)(v5 + 84);
  if (v859 > v14) {
    v14 = *(_DWORD *)(v5 + 84);
  }
  v845 = v14;
  if (v14 <= 0x7FFFFFFE) {
    v14 = 2147483646;
  }
  v931 = *(_DWORD *)(v4 + 84);
  v871 = v14;
  if (v14 <= v931) {
    v14 = *(_DWORD *)(v4 + 84);
  }
  v853 = *(void *)(v876 - 8);
  v15 = *(_DWORD *)(v10 + 84);
  if (v15 <= 0x7FFFFFFE) {
    v16 = 2147483646;
  }
  else {
    v16 = v15;
  }
  v917 = v16;
  if (v14 <= v16) {
    v14 = v16;
  }
  v826 = v14;
  if (v14 <= 0x7FFFFFFF) {
    v14 = 0x7FFFFFFF;
  }
  v864 = v14;
  v878 = v15;
  v873 = v949 + v951;
  v905 = v9;
  v874 = v949 + v9;
  v875 = *(void *)(v5 + 64) + 7;
  v855 = v8 + 8;
  v909 = v8;
  v848 = *(void *)(v7 + 64) + 7;
  v938 = ((((v848 + ((v8 + 8 + (v875 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v899 = v11 | 7;
  v928 = v12 + 16;
  v860 = v11 + 12;
  v17 = *(void *)(*(void *)(v876 - 8) + 64);
  v852 = v17 + v11;
  v819 = v17 + 12;
  v18 = (v11
       + 10
       + ((((((v17 + 12 + ((v17 + v11 + ((v11 + 12) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  v877 = v17;
  if (!v15) {
    ++v17;
  }
  v879 = v17;
  v880 = v18;
  v850 = v17 + 7;
  v851 = v11 + 10;
  v927 = ((((((((((v17 + 7 + v18) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v865 = (v12 + 16 + v938 + ((v949 + v9 + ((v949 + v951) & ~v951)) & ~v9)) & ~v12;
  v881 = v9 | v951 | v11;
  v862 = v13 + v949;
  v847 = ((((v865 + v927 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  v19 = v847 + ((v13 + v949) & ~v13);
  v895 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(void *)(a3 + 24);
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(void *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v891 = v21;
  v892 = (v19 + v23) & ~v23;
  v887 = v22;
  v24 = *(_DWORD *)(v22 + 84);
  v25 = *(void *)(v22 + 64);
  if (v24) {
    v26 = *(void *)(v22 + 64);
  }
  else {
    v26 = v25 + 1;
  }
  v923 = v26;
  v866 = swift_getAssociatedTypeWitness();
  v27 = *(void *)(v866 - 8);
  v28 = *(_DWORD *)(v27 + 80) & 0xF8;
  v854 = swift_getAssociatedTypeWitness();
  v29 = *(void *)(v854 - 8);
  v30 = v27;
  v31 = *(unsigned __int8 *)(v29 + 80);
  v32 = v28 | v31 | 7;
  v867 = v27;
  v33 = *(_DWORD *)(v29 + 84);
  v823 = v33;
  v858 = *(_DWORD *)(v27 + 84);
  if (v858 > v33) {
    v33 = *(_DWORD *)(v27 + 84);
  }
  v844 = v33;
  if (v33 <= 0x7FFFFFFE) {
    v34 = 2147483646;
  }
  else {
    v34 = v33;
  }
  v35 = *(void *)(v30 + 64) + 7;
  v36 = v31 + 8;
  v37 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
  v38 = ((((v37 + ((v31 + 8 + (v35 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v39 = ((((((v923 + v32 + v892) & ~v32) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v833 = v949 + v23;
  v849 = v923 + v32;
  v40 = *(void *)(v911 - 8);
  v41 = *(unsigned __int8 *)(v40 + 80);
  v827 = v949 + v41;
  v42 = *(void *)(v40 + 64);
  if (!*(_DWORD *)(v40 + 84)) {
    ++v42;
  }
  v820 = v42;
  v43 = ((v949 + v41) & ~v41) + v42;
  v44 = ((v895 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v949 > v44) {
    v44 = v949;
  }
  if (v39 <= v38 + ((v923 + v32 + ((v949 + v23) & ~v23)) & ~v32) + 16) {
    v39 = v38 + ((v923 + v32 + ((v949 + v23) & ~v23)) & ~v32) + 16;
  }
  if (((v895 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v43) {
    v43 = ((v895 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v44 > v39) {
    v39 = v44;
  }
  if (v39 <= v43) {
    v45 = v43;
  }
  else {
    v45 = v39;
  }
  v46 = v11;
  v47 = v23 | v11 | v32;
  v870 = v34;
  v863 = v24;
  if (v34 <= v24) {
    v48 = v24;
  }
  else {
    v48 = v34;
  }
  if (v48 <= v917) {
    v48 = v917;
  }
  v825 = v48;
  if (v48 <= 0x7FFFFFFF) {
    v48 = 0x7FFFFFFF;
  }
  v861 = v48;
  v918 = v23;
  v893 = v25 + v23;
  if (v931) {
    v49 = v949;
  }
  else {
    v49 = v949 + 1;
  }
  v838 = v20;
  v50 = v9;
  v51 = *(void *)(v20 - 8);
  v52 = *(unsigned __int8 *)(v51 + 80);
  v872 = v25 + v32;
  v53 = (v928 + v38 + ((v25 + v32 + ((v25 + v23) & ~v23)) & ~v32)) & ~v899;
  v54 = v47 + v25;
  v846 = ((((v53 + v927 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  v55 = v846 + ((v47 + v25) & ~v47);
  v56 = v951;
  __n = v49;
  v57 = v49 + v9;
  v58 = ((((((v49 + v50 + ((v55 + v56) & ~v56)) & ~v50) + v938 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v59 = v25 + v951;
  v60 = ((v49 + v50 + ((v25 + v56) & ~v56)) & ~v50) + v938 + 16;
  if (*(_DWORD *)(v51 + 84)) {
    v61 = *(void *)(v51 + 64);
  }
  else {
    v61 = *(void *)(v51 + 64) + 1;
  }
  if (v25 <= ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    v62 = ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    v62 = v25;
  }
  if (v58 <= v60) {
    v63 = v60;
  }
  else {
    v63 = v58;
  }
  v64 = ((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v65 = v25 + v52;
  if (v64 <= (v65 & ~v52) + v61) {
    v64 = (v65 & ~v52) + v61;
  }
  if (v62 <= v63) {
    v62 = v63;
  }
  if (v62 <= v64) {
    v66 = v64;
  }
  else {
    v66 = v62;
  }
  v897 = v45;
  if (v66 + 1 <= v45 + 1) {
    v67 = v45 + 1;
  }
  else {
    v67 = v66 + 1;
  }
  v68 = a2[v67];
  v69 = v68 - 2;
  if (v68 >= 2)
  {
    if (v67 <= 3) {
      v70 = v67;
    }
    else {
      v70 = 4;
    }
    switch(v70)
    {
      case 1:
        v71 = *a2;
        if (v67 < 4) {
          goto LABEL_78;
        }
        goto LABEL_79;
      case 2:
        v71 = *(unsigned __int16 *)a2;
        if (v67 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_78;
      case 3:
        v71 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v67 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_78;
      case 4:
        v71 = *(_DWORD *)a2;
        if (v67 < 4) {
LABEL_78:
        }
          v71 |= v69 << (8 * v67);
LABEL_79:
        v68 = v71 + 2;
        break;
      default:
        break;
    }
  }
  v950 = v67;
  v896 = ~v951;
  v72 = ~v905;
  v73 = ~v909;
  v906 = ~v899;
  v74 = ~v46;
  v910 = ~v918;
  v75 = ~v32;
  v76 = ~v31;
  if (v68 != 1)
  {
    v81 = a2[v45];
    v82 = v81 - 8;
    if (v81 < 8)
    {
      v84 = v889;
      v85 = a1;
      v86 = v881;
    }
    else
    {
      if (v45 <= 3) {
        v83 = v45;
      }
      else {
        v83 = 4;
      }
      v84 = v889;
      v85 = a1;
      v86 = v881;
      switch(v83)
      {
        case 1:
          v87 = *a2;
          if (v45 < 4) {
            goto LABEL_118;
          }
          goto LABEL_122;
        case 2:
          v87 = *(unsigned __int16 *)a2;
          if (v45 < 4) {
            goto LABEL_118;
          }
          goto LABEL_122;
        case 3:
          v87 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v45 < 4) {
            goto LABEL_118;
          }
          goto LABEL_122;
        case 4:
          v87 = *(_DWORD *)a2;
          if (v45 < 4) {
LABEL_118:
          }
            v81 = (v87 | (v82 << (8 * v45))) + 8;
          else {
LABEL_122:
          }
            v81 = v87 + 8;
          break;
        default:
          break;
      }
    }
    v120 = ~v86;
    v121 = ~v41;
    switch(v81)
    {
      case 1u:
        v890 = v75;
        v885 = v76;
        v836 = v73;
        v842 = v35;
        v903 = v36;
        v831 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
        v915 = *(void *)(v854 - 8);
        v955 = v38;
        v822 = ~v46;
        v125 = *(void (**)(uint64_t))(v84 + 16);
        v125(v85);
        v894 = (void *)((v862 + v85) & v120);
        v126 = (const void *)((unint64_t)&a2[v862] & v120);
        if (v931 == v864)
        {
          v127 = (*(uint64_t (**)(const void *))(v84 + 48))(v126);
LABEL_317:
          v150 = v72;
LABEL_318:
          if (v127)
          {
LABEL_319:
            v533 = v894;
            memcpy(v894, v126, v847);
            v534 = v891;
LABEL_320:
            v535 = v879;
            goto LABEL_387;
          }
          v149 = ((unint64_t)v126 + v873) & v896;
          v151 = (v874 + v149) & v150;
LABEL_322:
          v936 = v126;
          v536 = v150;
          ((void (*)(void *, const void *, uint64_t))v125)(v894, v126, AssociatedTypeWitness);
          v537 = ((unint64_t)v894 + v873) & v896;
          ((void (*)(unint64_t, unint64_t, uint64_t))v125)(v537, v149, AssociatedTypeWitness);
          v538 = (v874 + v537) & v536;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v869 + 16))(v538, v151, v868);
          v539 = (void *)((v875 + v538) & 0xFFFFFFFFFFFFFFF8);
          v540 = (void *)((v875 + v151) & 0xFFFFFFFFFFFFFFF8);
          *v539 = *v540;
          v541 = ((unint64_t)v539 + v855) & v836;
          v542 = ((unint64_t)v540 + v855) & v836;
          v543 = *(void (**)(unint64_t, unint64_t, uint64_t))(v857 + 16);
          swift_bridgeObjectRetain();
          v543(v541, v542, v856);
          v544 = (void *)((v848 + v542) & 0xFFFFFFFFFFFFFFF8);
          v545 = (void *)((v848 + v541) & 0xFFFFFFFFFFFFFFF8);
          *v545 = *v544;
          v546 = (void *)(((unint64_t)v545 + 15) & 0xFFFFFFFFFFFFFFF8);
          v547 = (void *)(((unint64_t)v544 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v546 = *v547;
          v546[1] = v547[1];
          v548 = (void *)(v938 + v538);
          *v548 = *(void *)(v938 + v151);
          v548[1] = *(void *)(v938 + v151 + 8);
          v549 = (v928 + v938 + v538) & v906;
          v550 = (v928 + v938 + v151) & v906;
          *(unsigned char *)v549 = *(unsigned char *)v550;
          v551 = v549 | 4;
          v552 = *(_DWORD *)(v550 | 4);
          *(unsigned char *)(v551 + 4) = *(unsigned char *)((v550 | 4) + 4);
          *(_DWORD *)v551 = v552;
          *(_WORD *)(v549 + 10) = *(_WORD *)(v550 + 0xA);
          v553 = (v860 + v549) & v822;
          v554 = (v860 + v550) & v822;
          v555 = *(void (**)(size_t, size_t, uint64_t))(v853 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v555(v553, v554, v876);
          v556 = (v852 + v553) & v822;
          v557 = (v852 + v554) & v822;
          v555(v556, v557, v876);
          v558 = (unsigned char *)(v556 + v877);
          *v558 = *(unsigned char *)(v557 + v877);
          v558[1] = *(unsigned char *)(v557 + v877 + 1);
          v558[2] = *(unsigned char *)(v557 + v877 + 2);
          v558[3] = *(unsigned char *)(v557 + v877 + 3);
          v558[4] = *(unsigned char *)(v557 + v877 + 4);
          v559 = (v556 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
          v560 = (v557 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)v559 = *(void *)v560;
          *(void *)(v559 + 8) = *(void *)(v560 + 8);
          *(unsigned char *)(v559 + 16) = *(unsigned char *)(v560 + 16);
          *(unsigned char *)(v559 + 17) = *(unsigned char *)(v560 + 17);
          *(unsigned char *)(v559 + 18) = *(unsigned char *)(v560 + 18);
          *(unsigned char *)(v559 + 19) = *(unsigned char *)(v560 + 19);
          v561 = (v559 + 27) & 0xFFFFFFFFFFFFFFF8;
          v562 = (v560 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)v561 = *(void *)v562;
          *(unsigned char *)(v561 + 8) = *(unsigned char *)(v562 + 8);
          *(unsigned char *)(v561 + 9) = *(unsigned char *)(v562 + 9);
          *(unsigned char *)(v561 + 10) = *(unsigned char *)(v562 + 10);
          *(unsigned char *)(v561 + 11) = *(unsigned char *)(v562 + 11);
          *(unsigned char *)(v561 + 12) = *(unsigned char *)(v562 + 12);
          v563 = (void *)((v560 + 47) & 0xFFFFFFFFFFFFFFF8);
          v564 = (void *)((v559 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v564 = *v563;
          v565 = ((unint64_t)v564 + 15) & 0xFFFFFFFFFFFFFFF8;
          v566 = ((unint64_t)v563 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)v565 = *(void *)v566;
          *(unsigned char *)(v565 + 8) = *(unsigned char *)(v566 + 8);
          *(unsigned char *)(v565 + 9) = *(unsigned char *)(v566 + 9);
          v567 = (void *)((v851 + v565) & v822);
          v568 = (const void *)((v851 + v566) & v822);
          v569 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v853 + 48);
          swift_bridgeObjectRetain();
          if (v569(v568, 1, v876))
          {
            memcpy(v567, v568, v879);
          }
          else
          {
            v555((size_t)v567, (size_t)v568, v876);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v853 + 56))(v567, 0, 1, v876);
          }
          v570 = (void *)(((unint64_t)v567 + v850) & 0xFFFFFFFFFFFFFFF8);
          v571 = (void *)(((unint64_t)v568 + v850) & 0xFFFFFFFFFFFFFFF8);
          *v570 = *v571;
          v572 = ((unint64_t)v570 + 15) & 0xFFFFFFFFFFFFFFF8;
          v573 = ((unint64_t)v571 + 15) & 0xFFFFFFFFFFFFFFF8;
          v574 = *(void *)v573;
          *(unsigned char *)(v572 + 8) = *(unsigned char *)(v573 + 8);
          *(void *)v572 = v574;
          v575 = (void *)(((unint64_t)v570 + 31) & 0xFFFFFFFFFFFFFFF8);
          v576 = (void *)(((unint64_t)v571 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v575 = *v576;
          v577 = ((unint64_t)v575 + 15) & 0xFFFFFFFFFFFFFFF8;
          v578 = (uint64_t *)(((unint64_t)v576 + 15) & 0xFFFFFFFFFFFFFFF8);
          v579 = v578[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v579 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)v577 = *(_OWORD *)v578;
          }
          else
          {
            v580 = *v578;
            sub_10001EBB0(*v578, v579);
            *(void *)v577 = v580;
            *(void *)(v577 + 8) = v579;
          }
          v581 = (v577 + 19) & 0xFFFFFFFFFFFFFFF8;
          v582 = ((unint64_t)v578 + 19) & 0xFFFFFFFFFFFFFFF8;
          v583 = *(void *)v582;
          *(unsigned char *)(v581 + 8) = *(unsigned char *)(v582 + 8);
          *(void *)v581 = v583;
          *(unsigned char *)(v581 + 9) = *(unsigned char *)(v582 + 9);
          v584 = (v581 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v585 = (v582 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v586 = *(_DWORD *)v585;
          *(unsigned char *)(v584 + 4) = *(unsigned char *)(v585 + 4);
          *(_DWORD *)v584 = v586;
          v587 = (void *)((v581 + 25) & 0xFFFFFFFFFFFFFFF8);
          v588 = (void *)((v582 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v587 = *v588;
          v587[1] = v588[1];
          v589 = v927 + v549;
          v590 = v927 + v550;
          v591 = *(void *)(v927 + v550 + 16);
          if (v591 >= 0xFFFFFFFF) {
            LODWORD(v591) = -1;
          }
          v592 = v591 - 1;
          swift_bridgeObjectRetain();
          if (v592 < 0)
          {
            *(void *)v589 = *(void *)v590;
            *(unsigned char *)(v589 + 8) = *(unsigned char *)(v590 + 8);
            *(unsigned char *)(v589 + 9) = *(unsigned char *)(v590 + 9);
            v606 = *(void *)(v590 + 16);
            swift_errorRetain();
            *(void *)(v589 + 16) = v606;
            v607 = *(void *)(v590 + 24);
            swift_errorRetain();
            *(void *)(v589 + 24) = v607;
            *(unsigned char *)(v589 + 32) = *(unsigned char *)(v590 + 32);
            *(unsigned char *)(v589 + 33) = *(unsigned char *)(v590 + 33);
            *(unsigned char *)(v589 + 34) = *(unsigned char *)(v590 + 34);
            *(void *)(v589 + 40) = *(void *)(v590 + 40);
            *(void *)(v589 + 48) = *(void *)(v590 + 48);
            *(void *)(v589 + 56) = *(void *)(v590 + 56);
            *(void *)(v589 + 64) = *(void *)(v590 + 64);
            *(unsigned char *)(v589 + 72) = *(unsigned char *)(v590 + 72);
            *(void *)(v589 + 80) = *(void *)(v590 + 80);
            *(void *)(v589 + 88) = *(void *)(v590 + 88);
            v945 = *(void **)(v590 + 96);
            *(void *)(v589 + 96) = v945;
            *(unsigned char *)(v589 + 104) = *(unsigned char *)(v590 + 104);
            *(unsigned char *)(v589 + 105) = *(unsigned char *)(v590 + 105);
            *(void *)(v589 + 112) = *(void *)(v590 + 112);
            *(void *)(v589 + 120) = *(void *)(v590 + 120);
            *(void *)(v589 + 128) = *(void *)(v590 + 128);
            *(void *)(v589 + 136) = *(void *)(v590 + 136);
            *(void *)(v589 + 144) = *(void *)(v590 + 144);
            *(void *)(v589 + 152) = *(void *)(v590 + 152);
            *(void *)(v589 + 160) = *(void *)(v590 + 160);
            *(void *)(v589 + 168) = *(void *)(v590 + 168);
            *(unsigned char *)(v589 + 176) = *(unsigned char *)(v590 + 176);
            *(void *)(v589 + 184) = *(void *)(v590 + 184);
            v608 = *(void *)(v590 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v609 = v945;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v608)
            {
              *(void *)(v589 + 192) = v608;
              *(void *)(v589 + 200) = *(void *)(v590 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v589 + 192) = *(_OWORD *)(v590 + 192);
            }
            v605 = v878;
            v534 = v891;
            v533 = v894;
            *(void *)(v589 + 208) = *(void *)(v590 + 208);
            *(void *)(v589 + 216) = *(void *)(v590 + 216);
            *(void *)(v589 + 224) = *(void *)(v590 + 224);
            *(void *)(v589 + 232) = *(void *)(v590 + 232);
            *(void *)(v589 + 240) = *(void *)(v590 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v593 = *(_OWORD *)v590;
            v594 = *(_OWORD *)(v590 + 16);
            v595 = *(_OWORD *)(v590 + 48);
            *(_OWORD *)(v589 + 32) = *(_OWORD *)(v590 + 32);
            *(_OWORD *)(v589 + 48) = v595;
            *(_OWORD *)v589 = v593;
            *(_OWORD *)(v589 + 16) = v594;
            v596 = *(_OWORD *)(v590 + 64);
            v597 = *(_OWORD *)(v590 + 80);
            v598 = *(_OWORD *)(v590 + 112);
            *(_OWORD *)(v589 + 96) = *(_OWORD *)(v590 + 96);
            *(_OWORD *)(v589 + 112) = v598;
            *(_OWORD *)(v589 + 64) = v596;
            *(_OWORD *)(v589 + 80) = v597;
            v599 = *(_OWORD *)(v590 + 128);
            v600 = *(_OWORD *)(v590 + 144);
            v601 = *(_OWORD *)(v590 + 176);
            *(_OWORD *)(v589 + 160) = *(_OWORD *)(v590 + 160);
            *(_OWORD *)(v589 + 176) = v601;
            *(_OWORD *)(v589 + 128) = v599;
            *(_OWORD *)(v589 + 144) = v600;
            v602 = *(_OWORD *)(v590 + 192);
            v603 = *(_OWORD *)(v590 + 208);
            v604 = *(_OWORD *)(v590 + 224);
            *(void *)(v589 + 240) = *(void *)(v590 + 240);
            *(_OWORD *)(v589 + 208) = v603;
            *(_OWORD *)(v589 + 224) = v604;
            *(_OWORD *)(v589 + 192) = v602;
            v605 = v878;
            v534 = v891;
            v533 = v894;
          }
          v767 = (_OWORD *)((v589 + 255) & 0xFFFFFFFFFFFFFFF8);
          v768 = (long long *)((v590 + 255) & 0xFFFFFFFFFFFFFFF8);
          v769 = *v768;
          *(_OWORD *)((char *)v767 + 9) = *(long long *)((char *)v768 + 9);
          *v767 = v769;
          v770 = (v589 + 287) & 0xFFFFFFFFFFFFFFF8;
          v771 = (v590 + 287) & 0xFFFFFFFFFFFFFFF8;
          v772 = *(_OWORD *)v771;
          *(unsigned char *)(v770 + 16) = *(unsigned char *)(v771 + 16);
          *(_OWORD *)v770 = v772;
          v773 = (void *)((v589 + 311) & 0xFFFFFFFFFFFFFFF8);
          v774 = (v590 + 311) & 0xFFFFFFFFFFFFFFF8;
          v775 = *(void *)v774;
          v774 += 15;
          *v773 = v775;
          v776 = (void *)(((unint64_t)v773 + 15) & 0xFFFFFFFFFFFFFFF8);
          v777 = *(void *)(v774 & 0xFFFFFFFFFFFFFFF8);
          v778 = *(void *)((v774 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v777, v778);
          *v776 = v777;
          v776[1] = v778;
          v85 = a1;
          v535 = v877;
          v126 = v936;
          if (!v605) {
            goto LABEL_320;
          }
LABEL_387:
          v779 = ((((v865
                   + ((((((((((v880 + v535 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v780 = (void *)(((unint64_t)v533 + v918 + v779) & v910);
          v781 = (const void *)(((unint64_t)v126 + v918 + v779) & v910);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v887 + 48))(v781, 1, v534))
          {
            memcpy(v780, v781, v923);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v887 + 16))(v780, v781, v534);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v887 + 56))(v780, 0, 1, v534);
          }
          v782 = v842;
          v783 = (char *)(((unint64_t)v780 + v849) & v890);
          v784 = (char *)(((unint64_t)v781 + v849) & v890);
          if (v858 == v870)
          {
            v785 = (*(uint64_t (**)(char *))(v867 + 48))(v784);
          }
          else
          {
            v786 = (uint64_t *)((unint64_t)&v784[v842] & 0xFFFFFFFFFFFFFFF8);
            if (v844 <= 0x7FFFFFFE)
            {
              v787 = *v786;
              if ((unint64_t)*v786 >= 0xFFFFFFFF) {
                LODWORD(v787) = -1;
              }
              v788 = v955;
              if ((v787 + 1) >= 2) {
                goto LABEL_399;
              }
              goto LABEL_401;
            }
            v785 = (*(uint64_t (**)(unint64_t))(v915 + 48))(((unint64_t)v786 + v903) & v885);
          }
          v788 = v955;
          v782 = v842;
          if (v785)
          {
LABEL_399:
            memcpy(v783, v784, v788);
LABEL_402:
            *(void *)&v783[v788] = *(void *)&v784[v788];
            v798 = (void *)((unint64_t)&v783[v788 + 15] & 0xFFFFFFFFFFFFFFF8);
            v799 = (void *)((unint64_t)&v784[v788 + 15] & 0xFFFFFFFFFFFFFFF8);
            *v798 = *v799;
            v201 = *(void **)(((unint64_t)v799 + 15) & 0xFFFFFFFFFFFFFFF8);
            *(void *)(((unint64_t)v798 + 15) & 0xFFFFFFFFFFFFFFF8) = v201;
            v202 = 1;
LABEL_403:
            *(unsigned char *)(v85 + v897) = v202;
            v800 = v201;
            goto LABEL_408;
          }
          v786 = (uint64_t *)((unint64_t)&v784[v842] & 0xFFFFFFFFFFFFFFF8);
LABEL_401:
          v789 = v782;
          (*(void (**)(char *, char *, uint64_t))(v867 + 16))(v783, v784, v866);
          v790 = (void *)((unint64_t)&v783[v789] & 0xFFFFFFFFFFFFFFF8);
          *v790 = *v786;
          v791 = ((unint64_t)v790 + v903) & v885;
          v792 = ((unint64_t)v786 + v903) & v885;
          v793 = *(void (**)(unint64_t, unint64_t, uint64_t))(v915 + 16);
          swift_bridgeObjectRetain();
          v793(v791, v792, v854);
          v794 = (void *)((v831 + v791) & 0xFFFFFFFFFFFFFFF8);
          v795 = (void *)((v831 + v792) & 0xFFFFFFFFFFFFFFF8);
          *v794 = *v795;
          v796 = (void *)(((unint64_t)v794 + 15) & 0xFFFFFFFFFFFFFFF8);
          v797 = (void *)(((unint64_t)v795 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v796 = *v797;
          v796[1] = v797[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_402;
        }
        v149 = ((unint64_t)v126 + v873) & v896;
        v150 = v72;
        v151 = (v874 + v149) & v72;
        if (v871 == v864)
        {
          if (v859 == v871)
          {
            v127 = (*(uint64_t (**)(unint64_t))(v869 + 48))((v874 + v149) & v72);
            goto LABEL_317;
          }
          v211 = (unint64_t *)((v875 + v151) & 0xFFFFFFFFFFFFFFF8);
          if (v845 > 0x7FFFFFFE)
          {
            v127 = (*(uint64_t (**)(unint64_t))(v857 + 48))(((unint64_t)v211 + v855) & v836);
            goto LABEL_317;
          }
          v212 = *v211;
        }
        else
        {
          v175 = v938 + v151;
          if ((v826 & 0x80000000) == 0)
          {
            v176 = *(void *)(v175 + 8);
            if (v176 >= 0xFFFFFFFF) {
              LODWORD(v176) = -1;
            }
            v127 = v176 + 1;
            goto LABEL_318;
          }
          v219 = (v860 + ((v928 + v175) & v906)) & v822;
          if (v878 > 0x7FFFFFFD)
          {
            v127 = (*(uint64_t (**)(size_t))(v853 + 48))(v219);
            goto LABEL_317;
          }
          v212 = *(void *)(((v819 + ((v852 + v219) & v822)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v212 >= 0xFFFFFFFF) {
          LODWORD(v212) = -1;
        }
        if ((v212 + 1) >= 2) {
          goto LABEL_319;
        }
        goto LABEL_322;
      case 2u:
        v128 = v75;
        v886 = v76;
        v129 = v35;
        v904 = v36;
        v832 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
        v916 = *(void *)(v854 - 8);
        v130 = v38;
        (*(void (**)(uint64_t))(v84 + 16))(v85);
        v131 = v85;
        v132 = (void *)((v833 + v85) & v910);
        v133 = (const void *)((unint64_t)&a2[v833] & v910);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v887 + 48))(v133, 1, v891))
        {
          memcpy(v132, v133, v923);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v887 + 16))(v132, v133, v891);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v887 + 56))(v132, 0, 1, v891);
        }
        v159 = (char *)(((unint64_t)v132 + v849) & v128);
        v160 = (unsigned char *)(((unint64_t)v133 + v849) & v128);
        if (v858 == v870)
        {
          v161 = (*(uint64_t (**)(unsigned char *))(v867 + 48))(v160);
          v162 = v130;
          v163 = v129;
          if (!v161) {
            goto LABEL_210;
          }
        }
        else
        {
          v164 = (uint64_t *)((unint64_t)&v160[v129] & 0xFFFFFFFFFFFFFFF8);
          if (v844 > 0x7FFFFFFE)
          {
            v190 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v916 + 48))(((unint64_t)v164 + v904) & v886, v823, v854);
            v163 = v129;
            v162 = v130;
            if (!v190)
            {
LABEL_210:
              v164 = (uint64_t *)((unint64_t)&v160[v163] & 0xFFFFFFFFFFFFFFF8);
              goto LABEL_211;
            }
          }
          else
          {
            v163 = v129;
            v165 = *v164;
            if ((unint64_t)*v164 >= 0xFFFFFFFF) {
              LODWORD(v165) = -1;
            }
            v162 = v130;
            if ((v165 + 1) < 2)
            {
LABEL_211:
              v191 = v163;
              (*(void (**)(char *, unsigned char *, uint64_t))(v867 + 16))(v159, v160, v866);
              v192 = (void *)((unint64_t)&v159[v191] & 0xFFFFFFFFFFFFFFF8);
              *v192 = *v164;
              v193 = ((unint64_t)v192 + v904) & v886;
              v194 = ((unint64_t)v164 + v904) & v886;
              v195 = *(void (**)(unint64_t, unint64_t, uint64_t))(v916 + 16);
              swift_bridgeObjectRetain();
              v195(v193, v194, v854);
              v85 = v131;
              v196 = (void *)((v832 + v193) & 0xFFFFFFFFFFFFFFF8);
              v197 = (void *)((v832 + v194) & 0xFFFFFFFFFFFFFFF8);
              *v196 = *v197;
              v198 = (void *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
              v199 = (void *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v198 = *v199;
              v198[1] = v199[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_212:
              v200 = &v159[v162];
              *v200 = v160[v162];
              v201 = *(void **)&v160[v162 + 8];
              *((void *)v200 + 1) = v201;
              v202 = 2;
              goto LABEL_403;
            }
          }
        }
        memcpy(v159, v160, v162);
        goto LABEL_212;
      case 3u:
        v837 = v73;
        v134 = *(void (**)(uint64_t))(v84 + 16);
        v134(v85);
        v956 = (void *)((v862 + v85) & v120);
        v135 = (const void *)((unint64_t)&a2[v862] & v120);
        if (v931 == v864)
        {
          v136 = (*(uint64_t (**)(const void *))(v84 + 48))(v135);
LABEL_335:
          v153 = v72;
LABEL_336:
          v610 = v956;
          if (v136)
          {
LABEL_337:
            memcpy(v610, v135, v847);
            goto LABEL_338;
          }
          v152 = ((unint64_t)v135 + v873) & v896;
          v154 = (v874 + v152) & v153;
LABEL_340:
          v937 = v135;
          v612 = v135;
          v613 = v153;
          ((void (*)(void *, const void *, uint64_t))v134)(v610, v612, AssociatedTypeWitness);
          v614 = ~v46;
          ((void (*)(unint64_t, unint64_t, uint64_t))v134)(((unint64_t)v610 + v873) & v896, v152, AssociatedTypeWitness);
          v615 = (v874 + (((unint64_t)v610 + v873) & v896)) & v613;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v869 + 16))(v615, v154, v868);
          v616 = (void *)((v875 + v615) & 0xFFFFFFFFFFFFFFF8);
          v617 = (void *)((v875 + v154) & 0xFFFFFFFFFFFFFFF8);
          *v616 = *v617;
          v618 = ((unint64_t)v616 + v855) & v837;
          v619 = ((unint64_t)v617 + v855) & v837;
          v620 = *(void (**)(unint64_t, unint64_t, uint64_t))(v857 + 16);
          swift_bridgeObjectRetain();
          v620(v618, v619, v856);
          v621 = (void *)((v848 + v619) & 0xFFFFFFFFFFFFFFF8);
          v622 = (void *)((v848 + v618) & 0xFFFFFFFFFFFFFFF8);
          *v622 = *v621;
          v623 = (void *)(((unint64_t)v622 + 15) & 0xFFFFFFFFFFFFFFF8);
          v624 = (void *)(((unint64_t)v621 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v623 = *v624;
          v623[1] = v624[1];
          v625 = (void *)(v938 + v615);
          *v625 = *(void *)(v938 + v154);
          v625[1] = *(void *)(v938 + v154 + 8);
          v626 = (v928 + v938 + v615) & v906;
          v627 = (v928 + v938 + v154) & v906;
          *(unsigned char *)v626 = *(unsigned char *)v627;
          v628 = v626 | 4;
          v629 = *(_DWORD *)(v627 | 4);
          *(unsigned char *)(v628 + 4) = *(unsigned char *)((v627 | 4) + 4);
          *(_DWORD *)v628 = v629;
          *(_WORD *)(v626 + 10) = *(_WORD *)(v627 + 0xA);
          v630 = (v860 + v626) & v614;
          v946 = v627;
          v631 = (v860 + v627) & v614;
          v632 = *(void (**)(size_t, size_t, uint64_t))(v853 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v632(v630, v631, v876);
          v633 = (v852 + v630) & v614;
          v634 = (v852 + v631) & v614;
          v632(v633, v634, v876);
          v635 = (unsigned char *)(v633 + v877);
          *v635 = *(unsigned char *)(v634 + v877);
          v635[1] = *(unsigned char *)(v634 + v877 + 1);
          v635[2] = *(unsigned char *)(v634 + v877 + 2);
          v635[3] = *(unsigned char *)(v634 + v877 + 3);
          v635[4] = *(unsigned char *)(v634 + v877 + 4);
          v636 = (v633 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
          v637 = (v634 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)v636 = *(void *)v637;
          *(void *)(v636 + 8) = *(void *)(v637 + 8);
          *(unsigned char *)(v636 + 16) = *(unsigned char *)(v637 + 16);
          *(unsigned char *)(v636 + 17) = *(unsigned char *)(v637 + 17);
          *(unsigned char *)(v636 + 18) = *(unsigned char *)(v637 + 18);
          *(unsigned char *)(v636 + 19) = *(unsigned char *)(v637 + 19);
          v638 = (v636 + 27) & 0xFFFFFFFFFFFFFFF8;
          v639 = (v637 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)v638 = *(void *)v639;
          *(unsigned char *)(v638 + 8) = *(unsigned char *)(v639 + 8);
          *(unsigned char *)(v638 + 9) = *(unsigned char *)(v639 + 9);
          *(unsigned char *)(v638 + 10) = *(unsigned char *)(v639 + 10);
          *(unsigned char *)(v638 + 11) = *(unsigned char *)(v639 + 11);
          *(unsigned char *)(v638 + 12) = *(unsigned char *)(v639 + 12);
          v640 = (void *)((v637 + 47) & 0xFFFFFFFFFFFFFFF8);
          v641 = (void *)((v636 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v641 = *v640;
          v642 = ((unint64_t)v641 + 15) & 0xFFFFFFFFFFFFFFF8;
          v643 = ((unint64_t)v640 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)v642 = *(void *)v643;
          *(unsigned char *)(v642 + 8) = *(unsigned char *)(v643 + 8);
          *(unsigned char *)(v642 + 9) = *(unsigned char *)(v643 + 9);
          v644 = (void *)((v851 + v642) & v614);
          v645 = (const void *)((v851 + v643) & v614);
          v646 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v853 + 48);
          swift_bridgeObjectRetain();
          if (v646(v645, 1, v876))
          {
            memcpy(v644, v645, v879);
          }
          else
          {
            v632((size_t)v644, (size_t)v645, v876);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v853 + 56))(v644, 0, 1, v876);
          }
          v135 = v937;
          v647 = (void *)(((unint64_t)v644 + v850) & 0xFFFFFFFFFFFFFFF8);
          v648 = (void *)(((unint64_t)v645 + v850) & 0xFFFFFFFFFFFFFFF8);
          *v647 = *v648;
          v649 = ((unint64_t)v647 + 15) & 0xFFFFFFFFFFFFFFF8;
          v650 = ((unint64_t)v648 + 15) & 0xFFFFFFFFFFFFFFF8;
          v651 = *(void *)v650;
          *(unsigned char *)(v649 + 8) = *(unsigned char *)(v650 + 8);
          *(void *)v649 = v651;
          v652 = (void *)(((unint64_t)v647 + 31) & 0xFFFFFFFFFFFFFFF8);
          v653 = (void *)(((unint64_t)v648 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v652 = *v653;
          v654 = ((unint64_t)v652 + 15) & 0xFFFFFFFFFFFFFFF8;
          v655 = (uint64_t *)(((unint64_t)v653 + 15) & 0xFFFFFFFFFFFFFFF8);
          v656 = v655[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v656 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)v654 = *(_OWORD *)v655;
          }
          else
          {
            v657 = *v655;
            sub_10001EBB0(*v655, v656);
            *(void *)v654 = v657;
            *(void *)(v654 + 8) = v656;
          }
          v658 = v878;
          v659 = (v654 + 19) & 0xFFFFFFFFFFFFFFF8;
          v660 = ((unint64_t)v655 + 19) & 0xFFFFFFFFFFFFFFF8;
          v661 = *(void *)v660;
          *(unsigned char *)(v659 + 8) = *(unsigned char *)(v660 + 8);
          *(void *)v659 = v661;
          *(unsigned char *)(v659 + 9) = *(unsigned char *)(v660 + 9);
          v662 = (v659 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v663 = (v660 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v664 = *(_DWORD *)v663;
          *(unsigned char *)(v662 + 4) = *(unsigned char *)(v663 + 4);
          *(_DWORD *)v662 = v664;
          v665 = (void *)((v659 + 25) & 0xFFFFFFFFFFFFFFF8);
          v666 = (void *)((v660 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v665 = *v666;
          v665[1] = v666[1];
          v667 = v927 + v626;
          v668 = (long long *)(v927 + v946);
          v669 = *(void *)(v927 + v946 + 16);
          if (v669 >= 0xFFFFFFFF) {
            LODWORD(v669) = -1;
          }
          v670 = v669 - 1;
          swift_bridgeObjectRetain();
          if (v670 < 0)
          {
            *(void *)v667 = *(void *)v668;
            *(unsigned char *)(v667 + 8) = *((unsigned char *)v668 + 8);
            *(unsigned char *)(v667 + 9) = *((unsigned char *)v668 + 9);
            v683 = *((void *)v668 + 2);
            swift_errorRetain();
            *(void *)(v667 + 16) = v683;
            v684 = *((void *)v668 + 3);
            swift_errorRetain();
            *(void *)(v667 + 24) = v684;
            *(unsigned char *)(v667 + 32) = *((unsigned char *)v668 + 32);
            *(unsigned char *)(v667 + 33) = *((unsigned char *)v668 + 33);
            *(unsigned char *)(v667 + 34) = *((unsigned char *)v668 + 34);
            *(void *)(v667 + 40) = *((void *)v668 + 5);
            *(void *)(v667 + 48) = *((void *)v668 + 6);
            *(void *)(v667 + 56) = *((void *)v668 + 7);
            *(void *)(v667 + 64) = *((void *)v668 + 8);
            *(unsigned char *)(v667 + 72) = *((unsigned char *)v668 + 72);
            *(void *)(v667 + 80) = *((void *)v668 + 10);
            *(void *)(v667 + 88) = *((void *)v668 + 11);
            v947 = (void *)*((void *)v668 + 12);
            *(void *)(v667 + 96) = v947;
            *(unsigned char *)(v667 + 104) = *((unsigned char *)v668 + 104);
            *(unsigned char *)(v667 + 105) = *((unsigned char *)v668 + 105);
            *(void *)(v667 + 112) = *((void *)v668 + 14);
            *(void *)(v667 + 120) = *((void *)v668 + 15);
            *(void *)(v667 + 128) = *((void *)v668 + 16);
            *(void *)(v667 + 136) = *((void *)v668 + 17);
            *(void *)(v667 + 144) = *((void *)v668 + 18);
            *(void *)(v667 + 152) = *((void *)v668 + 19);
            *(void *)(v667 + 160) = *((void *)v668 + 20);
            *(void *)(v667 + 168) = *((void *)v668 + 21);
            *(unsigned char *)(v667 + 176) = *((unsigned char *)v668 + 176);
            *(void *)(v667 + 184) = *((void *)v668 + 23);
            v685 = *((void *)v668 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v686 = v947;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v685)
            {
              *(void *)(v667 + 192) = v685;
              *(void *)(v667 + 200) = *((void *)v668 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v667 + 192) = v668[12];
            }
            v658 = v878;
            v135 = v937;
            *(void *)(v667 + 208) = *((void *)v668 + 26);
            *(void *)(v667 + 216) = *((void *)v668 + 27);
            *(void *)(v667 + 224) = *((void *)v668 + 28);
            *(void *)(v667 + 232) = *((void *)v668 + 29);
            *(void *)(v667 + 240) = *((void *)v668 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v671 = *v668;
            v672 = v668[1];
            v673 = v668[3];
            *(_OWORD *)(v667 + 32) = v668[2];
            *(_OWORD *)(v667 + 48) = v673;
            *(_OWORD *)v667 = v671;
            *(_OWORD *)(v667 + 16) = v672;
            v674 = v668[4];
            v675 = v668[5];
            v676 = v668[7];
            *(_OWORD *)(v667 + 96) = v668[6];
            *(_OWORD *)(v667 + 112) = v676;
            *(_OWORD *)(v667 + 64) = v674;
            *(_OWORD *)(v667 + 80) = v675;
            v677 = v668[8];
            v678 = v668[9];
            v679 = v668[11];
            *(_OWORD *)(v667 + 160) = v668[10];
            *(_OWORD *)(v667 + 176) = v679;
            *(_OWORD *)(v667 + 128) = v677;
            *(_OWORD *)(v667 + 144) = v678;
            v680 = v668[12];
            v681 = v668[13];
            v682 = v668[14];
            *(void *)(v667 + 240) = *((void *)v668 + 30);
            *(_OWORD *)(v667 + 208) = v681;
            *(_OWORD *)(v667 + 224) = v682;
            *(_OWORD *)(v667 + 192) = v680;
          }
          v801 = (_OWORD *)((v667 + 255) & 0xFFFFFFFFFFFFFFF8);
          v802 = (long long *)(((unint64_t)v668 + 255) & 0xFFFFFFFFFFFFFFF8);
          v803 = *v802;
          *(_OWORD *)((char *)v801 + 9) = *(long long *)((char *)v802 + 9);
          *v801 = v803;
          v804 = (v667 + 287) & 0xFFFFFFFFFFFFFFF8;
          v805 = ((unint64_t)v668 + 287) & 0xFFFFFFFFFFFFFFF8;
          v806 = *(_OWORD *)v805;
          *(unsigned char *)(v804 + 16) = *(unsigned char *)(v805 + 16);
          *(_OWORD *)v804 = v806;
          v807 = (void *)((v667 + 311) & 0xFFFFFFFFFFFFFFF8);
          v808 = ((unint64_t)v668 + 311) & 0xFFFFFFFFFFFFFFF8;
          v809 = *(void *)v808;
          v808 += 15;
          *v807 = v809;
          v810 = (void *)(((unint64_t)v807 + 15) & 0xFFFFFFFFFFFFFFF8);
          v811 = *(void *)(v808 & 0xFFFFFFFFFFFFFFF8);
          v812 = *(void *)((v808 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v811, v812);
          *v810 = v811;
          v810[1] = v812;
          v611 = v877;
          v610 = v956;
          if (v658)
          {
LABEL_407:
            v813 = ((((v865
                     + ((((((((((v880 + v611 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            v814 = (void *)(((unint64_t)v610 + v813) & 0xFFFFFFFFFFFFFFF8);
            v815 = (void *)(((unint64_t)v135 + v813) & 0xFFFFFFFFFFFFFFF8);
            *v814 = *v815;
            v814[1] = v815[1];
            *(void *)(((unint64_t)v814 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v815 + 23) & 0xFFFFFFFFFFFFFFF8);
            v85 = a1;
            *(unsigned char *)(a1 + v897) = 3;
            swift_bridgeObjectRetain();
            goto LABEL_408;
          }
LABEL_338:
          v611 = v879;
          goto LABEL_407;
        }
        v152 = ((unint64_t)v135 + v873) & v896;
        v153 = v72;
        v154 = (v874 + v152) & v72;
        if (v871 == v864)
        {
          if (v859 == v871)
          {
            v136 = (*(uint64_t (**)(unint64_t))(v869 + 48))((v874 + v152) & v72);
            goto LABEL_335;
          }
          v213 = (unint64_t *)((v875 + v154) & 0xFFFFFFFFFFFFFFF8);
          if (v845 > 0x7FFFFFFE)
          {
            v136 = (*(uint64_t (**)(unint64_t))(v857 + 48))(((unint64_t)v213 + v855) & v837);
            goto LABEL_335;
          }
          v214 = *v213;
        }
        else
        {
          v177 = v938 + v154;
          if ((v826 & 0x80000000) == 0)
          {
            v178 = *(void *)(v177 + 8);
            if (v178 >= 0xFFFFFFFF) {
              LODWORD(v178) = -1;
            }
            v136 = v178 + 1;
            goto LABEL_336;
          }
          v220 = (v860 + ((v928 + v177) & v906)) & v74;
          if (v878 > 0x7FFFFFFD)
          {
            v136 = (*(uint64_t (**)(size_t))(v853 + 48))(v220);
            goto LABEL_335;
          }
          v214 = *(void *)(((v819 + ((v852 + v220) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v214 >= 0xFFFFFFFF) {
          LODWORD(v214) = -1;
        }
        v610 = v956;
        if ((v214 + 1) >= 2) {
          goto LABEL_337;
        }
        goto LABEL_340;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v84 + 16))(v85, a2, AssociatedTypeWitness);
        v137 = 0;
        *(unsigned char *)(v85 + v897) = 4;
        goto LABEL_409;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v84 + 16))(v85, a2, AssociatedTypeWitness);
        v137 = 0;
        *(unsigned char *)(v85 + v897) = 5;
        goto LABEL_409;
      case 6u:
        (*(void (**)(uint64_t))(v84 + 16))(v85);
        v138 = (void *)((v827 + v85) & v121);
        v139 = (const void *)((unint64_t)&a2[v827] & v121);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v139, 1, v911))
        {
          memcpy(v138, v139, v820);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v40 + 16))(v138, v139, v911);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v138, 0, 1, v911);
        }
        v166 = v950;
        v137 = 0;
        *(unsigned char *)(v85 + v897) = 6;
        goto LABEL_410;
      case 7u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v84 + 16))(v85, a2, AssociatedTypeWitness);
        v137 = 0;
        *(unsigned char *)(v85 + v897) = 7;
        goto LABEL_409;
      default:
        v835 = v73;
        v122 = *(void (**)(uint64_t))(v84 + 16);
        v122(v85);
        v954 = (void *)((v862 + v85) & v120);
        v123 = (const void *)((unint64_t)&a2[v862] & v120);
        if (v931 == v864)
        {
          v124 = (*(uint64_t (**)(const void *))(v84 + 48))(v123);
LABEL_299:
          v147 = v72;
LABEL_300:
          v456 = v954;
          if (v124)
          {
LABEL_301:
            memcpy(v456, v123, v847);
            goto LABEL_302;
          }
          v146 = ((unint64_t)v123 + v873) & v896;
          v148 = (v874 + v146) & v147;
LABEL_304:
          v935 = v123;
          v458 = v123;
          v459 = v147;
          ((void (*)(void *, const void *, uint64_t))v122)(v456, v458, AssociatedTypeWitness);
          v460 = ~v46;
          ((void (*)(unint64_t, unint64_t, uint64_t))v122)(((unint64_t)v456 + v873) & v896, v146, AssociatedTypeWitness);
          v461 = (v874 + (((unint64_t)v456 + v873) & v896)) & v459;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v869 + 16))(v461, v148, v868);
          v462 = (void *)((v875 + v461) & 0xFFFFFFFFFFFFFFF8);
          v463 = (void *)((v875 + v148) & 0xFFFFFFFFFFFFFFF8);
          *v462 = *v463;
          v464 = ((unint64_t)v462 + v855) & v835;
          v465 = ((unint64_t)v463 + v855) & v835;
          v466 = *(void (**)(unint64_t, unint64_t, uint64_t))(v857 + 16);
          swift_bridgeObjectRetain();
          v466(v464, v465, v856);
          v467 = (void *)((v848 + v465) & 0xFFFFFFFFFFFFFFF8);
          v468 = (void *)((v848 + v464) & 0xFFFFFFFFFFFFFFF8);
          *v468 = *v467;
          v469 = (void *)(((unint64_t)v468 + 15) & 0xFFFFFFFFFFFFFFF8);
          v470 = (void *)(((unint64_t)v467 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v469 = *v470;
          v469[1] = v470[1];
          v471 = (void *)(v938 + v461);
          *v471 = *(void *)(v938 + v148);
          v471[1] = *(void *)(v938 + v148 + 8);
          v472 = (v928 + v938 + v461) & v906;
          v473 = (v928 + v938 + v148) & v906;
          *(unsigned char *)v472 = *(unsigned char *)v473;
          v474 = v472 | 4;
          v475 = *(_DWORD *)(v473 | 4);
          *(unsigned char *)(v474 + 4) = *(unsigned char *)((v473 | 4) + 4);
          *(_DWORD *)v474 = v475;
          *(_WORD *)(v472 + 10) = *(_WORD *)(v473 + 0xA);
          v476 = (v860 + v472) & v460;
          v943 = v473;
          v477 = (v860 + v473) & v460;
          v478 = *(void (**)(size_t, size_t, uint64_t))(v853 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v478(v476, v477, v876);
          v479 = (v852 + v476) & v460;
          v480 = (v852 + v477) & v460;
          v478(v479, v480, v876);
          v481 = (unsigned char *)(v479 + v877);
          *v481 = *(unsigned char *)(v480 + v877);
          v481[1] = *(unsigned char *)(v480 + v877 + 1);
          v481[2] = *(unsigned char *)(v480 + v877 + 2);
          v481[3] = *(unsigned char *)(v480 + v877 + 3);
          v481[4] = *(unsigned char *)(v480 + v877 + 4);
          v482 = (v479 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
          v483 = (v480 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)v482 = *(void *)v483;
          *(void *)(v482 + 8) = *(void *)(v483 + 8);
          *(unsigned char *)(v482 + 16) = *(unsigned char *)(v483 + 16);
          *(unsigned char *)(v482 + 17) = *(unsigned char *)(v483 + 17);
          *(unsigned char *)(v482 + 18) = *(unsigned char *)(v483 + 18);
          *(unsigned char *)(v482 + 19) = *(unsigned char *)(v483 + 19);
          v484 = (v482 + 27) & 0xFFFFFFFFFFFFFFF8;
          v485 = (v483 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)v484 = *(void *)v485;
          *(unsigned char *)(v484 + 8) = *(unsigned char *)(v485 + 8);
          *(unsigned char *)(v484 + 9) = *(unsigned char *)(v485 + 9);
          *(unsigned char *)(v484 + 10) = *(unsigned char *)(v485 + 10);
          *(unsigned char *)(v484 + 11) = *(unsigned char *)(v485 + 11);
          *(unsigned char *)(v484 + 12) = *(unsigned char *)(v485 + 12);
          v486 = (void *)((v483 + 47) & 0xFFFFFFFFFFFFFFF8);
          v487 = (void *)((v482 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v487 = *v486;
          v488 = ((unint64_t)v487 + 15) & 0xFFFFFFFFFFFFFFF8;
          v489 = ((unint64_t)v486 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)v488 = *(void *)v489;
          *(unsigned char *)(v488 + 8) = *(unsigned char *)(v489 + 8);
          *(unsigned char *)(v488 + 9) = *(unsigned char *)(v489 + 9);
          v490 = (void *)((v851 + v488) & v460);
          v491 = (const void *)((v851 + v489) & v460);
          v492 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v853 + 48);
          swift_bridgeObjectRetain();
          if (v492(v491, 1, v876))
          {
            memcpy(v490, v491, v879);
          }
          else
          {
            v478((size_t)v490, (size_t)v491, v876);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v853 + 56))(v490, 0, 1, v876);
          }
          v123 = v935;
          v493 = (void *)(((unint64_t)v490 + v850) & 0xFFFFFFFFFFFFFFF8);
          v494 = (void *)(((unint64_t)v491 + v850) & 0xFFFFFFFFFFFFFFF8);
          *v493 = *v494;
          v495 = ((unint64_t)v493 + 15) & 0xFFFFFFFFFFFFFFF8;
          v496 = ((unint64_t)v494 + 15) & 0xFFFFFFFFFFFFFFF8;
          v497 = *(void *)v496;
          *(unsigned char *)(v495 + 8) = *(unsigned char *)(v496 + 8);
          *(void *)v495 = v497;
          v498 = (void *)(((unint64_t)v493 + 31) & 0xFFFFFFFFFFFFFFF8);
          v499 = (void *)(((unint64_t)v494 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v498 = *v499;
          v500 = ((unint64_t)v498 + 15) & 0xFFFFFFFFFFFFFFF8;
          v501 = (uint64_t *)(((unint64_t)v499 + 15) & 0xFFFFFFFFFFFFFFF8);
          v502 = v501[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v502 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)v500 = *(_OWORD *)v501;
          }
          else
          {
            v503 = *v501;
            sub_10001EBB0(*v501, v502);
            *(void *)v500 = v503;
            *(void *)(v500 + 8) = v502;
          }
          v504 = v878;
          v505 = (v500 + 19) & 0xFFFFFFFFFFFFFFF8;
          v506 = ((unint64_t)v501 + 19) & 0xFFFFFFFFFFFFFFF8;
          v507 = *(void *)v506;
          *(unsigned char *)(v505 + 8) = *(unsigned char *)(v506 + 8);
          *(void *)v505 = v507;
          *(unsigned char *)(v505 + 9) = *(unsigned char *)(v506 + 9);
          v508 = (v505 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v509 = (v506 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v510 = *(_DWORD *)v509;
          *(unsigned char *)(v508 + 4) = *(unsigned char *)(v509 + 4);
          *(_DWORD *)v508 = v510;
          v511 = (void *)((v505 + 25) & 0xFFFFFFFFFFFFFFF8);
          v512 = (void *)((v506 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v511 = *v512;
          v511[1] = v512[1];
          v513 = v927 + v472;
          v514 = (long long *)(v927 + v943);
          v515 = *(void *)(v927 + v943 + 16);
          if (v515 >= 0xFFFFFFFF) {
            LODWORD(v515) = -1;
          }
          v516 = v515 - 1;
          swift_bridgeObjectRetain();
          if (v516 < 0)
          {
            *(void *)v513 = *(void *)v514;
            *(unsigned char *)(v513 + 8) = *((unsigned char *)v514 + 8);
            *(unsigned char *)(v513 + 9) = *((unsigned char *)v514 + 9);
            v529 = *((void *)v514 + 2);
            swift_errorRetain();
            *(void *)(v513 + 16) = v529;
            v530 = *((void *)v514 + 3);
            swift_errorRetain();
            *(void *)(v513 + 24) = v530;
            *(unsigned char *)(v513 + 32) = *((unsigned char *)v514 + 32);
            *(unsigned char *)(v513 + 33) = *((unsigned char *)v514 + 33);
            *(unsigned char *)(v513 + 34) = *((unsigned char *)v514 + 34);
            *(void *)(v513 + 40) = *((void *)v514 + 5);
            *(void *)(v513 + 48) = *((void *)v514 + 6);
            *(void *)(v513 + 56) = *((void *)v514 + 7);
            *(void *)(v513 + 64) = *((void *)v514 + 8);
            *(unsigned char *)(v513 + 72) = *((unsigned char *)v514 + 72);
            *(void *)(v513 + 80) = *((void *)v514 + 10);
            *(void *)(v513 + 88) = *((void *)v514 + 11);
            v944 = (void *)*((void *)v514 + 12);
            *(void *)(v513 + 96) = v944;
            *(unsigned char *)(v513 + 104) = *((unsigned char *)v514 + 104);
            *(unsigned char *)(v513 + 105) = *((unsigned char *)v514 + 105);
            *(void *)(v513 + 112) = *((void *)v514 + 14);
            *(void *)(v513 + 120) = *((void *)v514 + 15);
            *(void *)(v513 + 128) = *((void *)v514 + 16);
            *(void *)(v513 + 136) = *((void *)v514 + 17);
            *(void *)(v513 + 144) = *((void *)v514 + 18);
            *(void *)(v513 + 152) = *((void *)v514 + 19);
            *(void *)(v513 + 160) = *((void *)v514 + 20);
            *(void *)(v513 + 168) = *((void *)v514 + 21);
            *(unsigned char *)(v513 + 176) = *((unsigned char *)v514 + 176);
            *(void *)(v513 + 184) = *((void *)v514 + 23);
            v531 = *((void *)v514 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v532 = v944;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v531)
            {
              *(void *)(v513 + 192) = v531;
              *(void *)(v513 + 200) = *((void *)v514 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v513 + 192) = v514[12];
            }
            v504 = v878;
            v123 = v935;
            *(void *)(v513 + 208) = *((void *)v514 + 26);
            *(void *)(v513 + 216) = *((void *)v514 + 27);
            *(void *)(v513 + 224) = *((void *)v514 + 28);
            *(void *)(v513 + 232) = *((void *)v514 + 29);
            *(void *)(v513 + 240) = *((void *)v514 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v517 = *v514;
            v518 = v514[1];
            v519 = v514[3];
            *(_OWORD *)(v513 + 32) = v514[2];
            *(_OWORD *)(v513 + 48) = v519;
            *(_OWORD *)v513 = v517;
            *(_OWORD *)(v513 + 16) = v518;
            v520 = v514[4];
            v521 = v514[5];
            v522 = v514[7];
            *(_OWORD *)(v513 + 96) = v514[6];
            *(_OWORD *)(v513 + 112) = v522;
            *(_OWORD *)(v513 + 64) = v520;
            *(_OWORD *)(v513 + 80) = v521;
            v523 = v514[8];
            v524 = v514[9];
            v525 = v514[11];
            *(_OWORD *)(v513 + 160) = v514[10];
            *(_OWORD *)(v513 + 176) = v525;
            *(_OWORD *)(v513 + 128) = v523;
            *(_OWORD *)(v513 + 144) = v524;
            v526 = v514[12];
            v527 = v514[13];
            v528 = v514[14];
            *(void *)(v513 + 240) = *((void *)v514 + 30);
            *(_OWORD *)(v513 + 208) = v527;
            *(_OWORD *)(v513 + 224) = v528;
            *(_OWORD *)(v513 + 192) = v526;
          }
          v750 = (_OWORD *)((v513 + 255) & 0xFFFFFFFFFFFFFFF8);
          v751 = (long long *)(((unint64_t)v514 + 255) & 0xFFFFFFFFFFFFFFF8);
          v752 = *v751;
          *(_OWORD *)((char *)v750 + 9) = *(long long *)((char *)v751 + 9);
          *v750 = v752;
          v753 = (v513 + 287) & 0xFFFFFFFFFFFFFFF8;
          v754 = ((unint64_t)v514 + 287) & 0xFFFFFFFFFFFFFFF8;
          v755 = *(_OWORD *)v754;
          *(unsigned char *)(v753 + 16) = *(unsigned char *)(v754 + 16);
          *(_OWORD *)v753 = v755;
          v756 = (void *)((v513 + 311) & 0xFFFFFFFFFFFFFFF8);
          v757 = ((unint64_t)v514 + 311) & 0xFFFFFFFFFFFFFFF8;
          v758 = *(void *)v757;
          v757 += 15;
          *v756 = v758;
          v759 = (void *)(((unint64_t)v756 + 15) & 0xFFFFFFFFFFFFFFF8);
          v760 = *(void *)(v757 & 0xFFFFFFFFFFFFFFF8);
          v761 = *(void *)((v757 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v760, v761);
          *v759 = v760;
          v759[1] = v761;
          v457 = v877;
          v456 = v954;
          if (v504)
          {
LABEL_383:
            v762 = ((((v865
                     + ((((((((((v880 + v457 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            v763 = (void *)(((unint64_t)v456 + v762) & 0xFFFFFFFFFFFFFFF8);
            v764 = (void *)(((unint64_t)v123 + v762) & 0xFFFFFFFFFFFFFFF8);
            *v763 = *v764;
            v765 = *(void **)(((unint64_t)v764 + 15) & 0xFFFFFFFFFFFFFFF8);
            *(void *)(((unint64_t)v763 + 15) & 0xFFFFFFFFFFFFFFF8) = v765;
            v85 = a1;
            *(unsigned char *)(a1 + v897) = 0;
            v766 = v765;
LABEL_408:
            v137 = 0;
            goto LABEL_409;
          }
LABEL_302:
          v457 = v879;
          goto LABEL_383;
        }
        v146 = ((unint64_t)v123 + v873) & v896;
        v147 = v72;
        v148 = (v874 + v146) & v72;
        if (v871 == v864)
        {
          if (v859 == v871)
          {
            v124 = (*(uint64_t (**)(unint64_t))(v869 + 48))((v874 + v146) & v72);
            goto LABEL_299;
          }
          v209 = (unint64_t *)((v875 + v148) & 0xFFFFFFFFFFFFFFF8);
          if (v845 > 0x7FFFFFFE)
          {
            v124 = (*(uint64_t (**)(unint64_t))(v857 + 48))(((unint64_t)v209 + v855) & v835);
            goto LABEL_299;
          }
          v210 = *v209;
        }
        else
        {
          v173 = v938 + v148;
          if ((v826 & 0x80000000) == 0)
          {
            v174 = *(void *)(v173 + 8);
            if (v174 >= 0xFFFFFFFF) {
              LODWORD(v174) = -1;
            }
            v124 = v174 + 1;
            goto LABEL_300;
          }
          v218 = (v860 + ((v928 + v173) & v906)) & v74;
          if (v878 > 0x7FFFFFFD)
          {
            v124 = (*(uint64_t (**)(size_t))(v853 + 48))(v218);
            goto LABEL_299;
          }
          v210 = *(void *)(((v819 + ((v852 + v218) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v210 >= 0xFFFFFFFF) {
          LODWORD(v210) = -1;
        }
        v456 = v954;
        if ((v210 + 1) >= 2) {
          goto LABEL_301;
        }
        goto LABEL_304;
    }
  }
  v77 = a2[v66];
  v78 = v77 - 8;
  if (v77 >= 8)
  {
    if (v66 <= 3) {
      v79 = v66;
    }
    else {
      v79 = 4;
    }
    switch(v79)
    {
      case 1:
        v80 = *a2;
        if (v66 < 4) {
          goto LABEL_97;
        }
        goto LABEL_101;
      case 2:
        v80 = *(unsigned __int16 *)a2;
        if (v66 < 4) {
          goto LABEL_97;
        }
        goto LABEL_101;
      case 3:
        v80 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v66 < 4) {
          goto LABEL_97;
        }
        goto LABEL_101;
      case 4:
        v80 = *(_DWORD *)a2;
        if (v66 < 4) {
LABEL_97:
        }
          v77 = (v80 | (v78 << (8 * v66))) + 8;
        else {
LABEL_101:
        }
          v77 = v80 + 8;
        break;
      default:
        break;
    }
  }
  v932 = v57;
  v88 = ~v47;
  v89 = ~v52;
  switch(v77)
  {
    case 1u:
      v96 = v75;
      v883 = ~v31;
      v834 = v73;
      v840 = v35;
      v901 = v31 + 8;
      v829 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
      v913 = *(void *)(v854 - 8);
      v97 = ((((v37 + ((v31 + 8 + (v35 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16;
      v821 = v74;
      v920 = v53;
      v925 = v66;
      v98 = *(void (**)(uint64_t))(v887 + 16);
      v98(a1);
      v898 = (void *)((v54 + a1) & v88);
      v99 = (const void *)((unint64_t)&a2[v54] & v88);
      if (v863 == v861)
      {
        v100 = (*(uint64_t (**)(const void *))(v887 + 48))(v99);
        v101 = v938;
        v102 = v97;
        v103 = v96;
LABEL_264:
        if (v100)
        {
LABEL_265:
          v299 = v898;
          memcpy(v898, v99, v846);
          goto LABEL_266;
        }
        v142 = ((unint64_t)v99 + v893) & v910;
        v143 = (v872 + v142) & v103;
LABEL_268:
        v908 = v99;
        v301 = v99;
        v302 = v102;
        v303 = v103;
        ((void (*)(void *, const void *, uint64_t))v98)(v898, v301, v891);
        v304 = ((unint64_t)v898 + v893) & v910;
        ((void (*)(unint64_t, unint64_t, uint64_t))v98)(v304, v142, v891);
        v305 = (v872 + v304) & v303;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v867 + 16))(v305, v143, v866);
        v306 = (void *)((v840 + v305) & 0xFFFFFFFFFFFFFFF8);
        v307 = (void *)((v840 + v143) & 0xFFFFFFFFFFFFFFF8);
        *v306 = *v307;
        v308 = ((unint64_t)v306 + v901) & v883;
        v309 = ((unint64_t)v307 + v901) & v883;
        v310 = *(void (**)(unint64_t, unint64_t, uint64_t))(v913 + 16);
        swift_bridgeObjectRetain();
        v310(v308, v309, v854);
        v311 = (void *)((v829 + v309) & 0xFFFFFFFFFFFFFFF8);
        v312 = (void *)((v829 + v308) & 0xFFFFFFFFFFFFFFF8);
        *v312 = *v311;
        v313 = (void *)(((unint64_t)v312 + 15) & 0xFFFFFFFFFFFFFFF8);
        v314 = (void *)(((unint64_t)v311 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v313 = *v314;
        v313[1] = v314[1];
        v315 = (void *)(v302 + v305);
        *v315 = *(void *)(v302 + v143);
        v315[1] = *(void *)(v302 + v143 + 8);
        v316 = (v928 + v302 + v305) & v906;
        v317 = (v928 + v302 + v143) & v906;
        *(unsigned char *)v316 = *(unsigned char *)v317;
        v318 = v316 | 4;
        v319 = *(_DWORD *)(v317 | 4);
        *(unsigned char *)(v318 + 4) = *(unsigned char *)((v317 | 4) + 4);
        *(_DWORD *)v318 = v319;
        *(_WORD *)(v316 + 10) = *(_WORD *)(v317 + 0xA);
        v320 = (v860 + v316) & v821;
        v929 = v317;
        v321 = (v860 + v317) & v821;
        v322 = *(void (**)(size_t, size_t, uint64_t))(v853 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v322(v320, v321, v876);
        v323 = (v852 + v320) & v821;
        v324 = (v852 + v321) & v821;
        v322(v323, v324, v876);
        v325 = (unsigned char *)(v323 + v877);
        *v325 = *(unsigned char *)(v324 + v877);
        v325[1] = *(unsigned char *)(v324 + v877 + 1);
        v325[2] = *(unsigned char *)(v324 + v877 + 2);
        v325[3] = *(unsigned char *)(v324 + v877 + 3);
        v325[4] = *(unsigned char *)(v324 + v877 + 4);
        v326 = (v323 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
        v327 = (v324 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)v326 = *(void *)v327;
        *(void *)(v326 + 8) = *(void *)(v327 + 8);
        *(unsigned char *)(v326 + 16) = *(unsigned char *)(v327 + 16);
        *(unsigned char *)(v326 + 17) = *(unsigned char *)(v327 + 17);
        *(unsigned char *)(v326 + 18) = *(unsigned char *)(v327 + 18);
        *(unsigned char *)(v326 + 19) = *(unsigned char *)(v327 + 19);
        v328 = (v326 + 27) & 0xFFFFFFFFFFFFFFF8;
        v329 = (v327 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)v328 = *(void *)v329;
        *(unsigned char *)(v328 + 8) = *(unsigned char *)(v329 + 8);
        *(unsigned char *)(v328 + 9) = *(unsigned char *)(v329 + 9);
        *(unsigned char *)(v328 + 10) = *(unsigned char *)(v329 + 10);
        *(unsigned char *)(v328 + 11) = *(unsigned char *)(v329 + 11);
        *(unsigned char *)(v328 + 12) = *(unsigned char *)(v329 + 12);
        v330 = (void *)((v327 + 47) & 0xFFFFFFFFFFFFFFF8);
        v331 = (void *)((v326 + 47) & 0xFFFFFFFFFFFFFFF8);
        *v331 = *v330;
        v332 = ((unint64_t)v331 + 15) & 0xFFFFFFFFFFFFFFF8;
        v333 = ((unint64_t)v330 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)v332 = *(void *)v333;
        *(unsigned char *)(v332 + 8) = *(unsigned char *)(v333 + 8);
        *(unsigned char *)(v332 + 9) = *(unsigned char *)(v333 + 9);
        v334 = (void *)((v851 + v332) & v821);
        v335 = (const void *)((v851 + v333) & v821);
        v336 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v853 + 48);
        swift_bridgeObjectRetain();
        if (v336(v335, 1, v876))
        {
          memcpy(v334, v335, v879);
        }
        else
        {
          v322((size_t)v334, (size_t)v335, v876);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v853 + 56))(v334, 0, 1, v876);
        }
        v337 = (void *)(((unint64_t)v334 + v850) & 0xFFFFFFFFFFFFFFF8);
        v338 = (void *)(((unint64_t)v335 + v850) & 0xFFFFFFFFFFFFFFF8);
        *v337 = *v338;
        v339 = ((unint64_t)v337 + 15) & 0xFFFFFFFFFFFFFFF8;
        v340 = ((unint64_t)v338 + 15) & 0xFFFFFFFFFFFFFFF8;
        v341 = *(void *)v340;
        *(unsigned char *)(v339 + 8) = *(unsigned char *)(v340 + 8);
        *(void *)v339 = v341;
        v342 = (void *)(((unint64_t)v337 + 31) & 0xFFFFFFFFFFFFFFF8);
        v343 = (void *)(((unint64_t)v338 + 31) & 0xFFFFFFFFFFFFFFF8);
        *v342 = *v343;
        v344 = ((unint64_t)v342 + 15) & 0xFFFFFFFFFFFFFFF8;
        v345 = (uint64_t *)(((unint64_t)v343 + 15) & 0xFFFFFFFFFFFFFFF8);
        v346 = v345[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v346 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)v344 = *(_OWORD *)v345;
        }
        else
        {
          v347 = *v345;
          sub_10001EBB0(*v345, v346);
          *(void *)v344 = v347;
          *(void *)(v344 + 8) = v346;
        }
        v99 = v908;
        v348 = (v344 + 19) & 0xFFFFFFFFFFFFFFF8;
        v349 = ((unint64_t)v345 + 19) & 0xFFFFFFFFFFFFFFF8;
        v350 = *(void *)v349;
        *(unsigned char *)(v348 + 8) = *(unsigned char *)(v349 + 8);
        *(void *)v348 = v350;
        *(unsigned char *)(v348 + 9) = *(unsigned char *)(v349 + 9);
        v351 = (v348 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v352 = (v349 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v353 = *(_DWORD *)v352;
        *(unsigned char *)(v351 + 4) = *(unsigned char *)(v352 + 4);
        *(_DWORD *)v351 = v353;
        v354 = (void *)((v348 + 25) & 0xFFFFFFFFFFFFFFF8);
        v355 = (void *)((v349 + 25) & 0xFFFFFFFFFFFFFFF8);
        *v354 = *v355;
        v354[1] = v355[1];
        v356 = v316 + v927;
        v357 = (long long *)(v929 + v927);
        v358 = *(void *)(v929 + v927 + 16);
        if (v358 >= 0xFFFFFFFF) {
          LODWORD(v358) = -1;
        }
        v359 = v358 - 1;
        swift_bridgeObjectRetain();
        if (v359 < 0)
        {
          *(void *)v356 = *(void *)v357;
          *(unsigned char *)(v356 + 8) = *((unsigned char *)v357 + 8);
          *(unsigned char *)(v356 + 9) = *((unsigned char *)v357 + 9);
          v373 = *((void *)v357 + 2);
          swift_errorRetain();
          *(void *)(v356 + 16) = v373;
          v374 = *((void *)v357 + 3);
          swift_errorRetain();
          *(void *)(v356 + 24) = v374;
          *(unsigned char *)(v356 + 32) = *((unsigned char *)v357 + 32);
          *(unsigned char *)(v356 + 33) = *((unsigned char *)v357 + 33);
          *(unsigned char *)(v356 + 34) = *((unsigned char *)v357 + 34);
          *(void *)(v356 + 40) = *((void *)v357 + 5);
          *(void *)(v356 + 48) = *((void *)v357 + 6);
          *(void *)(v356 + 56) = *((void *)v357 + 7);
          *(void *)(v356 + 64) = *((void *)v357 + 8);
          *(unsigned char *)(v356 + 72) = *((unsigned char *)v357 + 72);
          *(void *)(v356 + 80) = *((void *)v357 + 10);
          *(void *)(v356 + 88) = *((void *)v357 + 11);
          v930 = (void *)*((void *)v357 + 12);
          *(void *)(v356 + 96) = v930;
          *(unsigned char *)(v356 + 104) = *((unsigned char *)v357 + 104);
          *(unsigned char *)(v356 + 105) = *((unsigned char *)v357 + 105);
          *(void *)(v356 + 112) = *((void *)v357 + 14);
          *(void *)(v356 + 120) = *((void *)v357 + 15);
          *(void *)(v356 + 128) = *((void *)v357 + 16);
          *(void *)(v356 + 136) = *((void *)v357 + 17);
          *(void *)(v356 + 144) = *((void *)v357 + 18);
          *(void *)(v356 + 152) = *((void *)v357 + 19);
          *(void *)(v356 + 160) = *((void *)v357 + 20);
          *(void *)(v356 + 168) = *((void *)v357 + 21);
          *(unsigned char *)(v356 + 176) = *((unsigned char *)v357 + 176);
          *(void *)(v356 + 184) = *((void *)v357 + 23);
          v375 = *((void *)v357 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v376 = v930;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v375)
          {
            *(void *)(v356 + 192) = v375;
            *(void *)(v356 + 200) = *((void *)v357 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v356 + 192) = v357[12];
          }
          v372 = v878;
          v101 = v938;
          v99 = v908;
          *(void *)(v356 + 208) = *((void *)v357 + 26);
          *(void *)(v356 + 216) = *((void *)v357 + 27);
          *(void *)(v356 + 224) = *((void *)v357 + 28);
          *(void *)(v356 + 232) = *((void *)v357 + 29);
          *(void *)(v356 + 240) = *((void *)v357 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v360 = *v357;
          v361 = v357[1];
          v362 = v357[3];
          *(_OWORD *)(v356 + 32) = v357[2];
          *(_OWORD *)(v356 + 48) = v362;
          *(_OWORD *)v356 = v360;
          *(_OWORD *)(v356 + 16) = v361;
          v363 = v357[4];
          v364 = v357[5];
          v365 = v357[7];
          *(_OWORD *)(v356 + 96) = v357[6];
          *(_OWORD *)(v356 + 112) = v365;
          *(_OWORD *)(v356 + 64) = v363;
          *(_OWORD *)(v356 + 80) = v364;
          v366 = v357[8];
          v367 = v357[9];
          v368 = v357[11];
          *(_OWORD *)(v356 + 160) = v357[10];
          *(_OWORD *)(v356 + 176) = v368;
          *(_OWORD *)(v356 + 128) = v366;
          *(_OWORD *)(v356 + 144) = v367;
          v369 = v357[12];
          v370 = v357[13];
          v371 = v357[14];
          *(void *)(v356 + 240) = *((void *)v357 + 30);
          *(_OWORD *)(v356 + 208) = v370;
          *(_OWORD *)(v356 + 224) = v371;
          *(_OWORD *)(v356 + 192) = v369;
          v372 = v878;
          v101 = v938;
        }
        v704 = (_OWORD *)((v356 + 255) & 0xFFFFFFFFFFFFFFF8);
        v705 = (long long *)(((unint64_t)v357 + 255) & 0xFFFFFFFFFFFFFFF8);
        v706 = *v705;
        *(_OWORD *)((char *)v704 + 9) = *(long long *)((char *)v705 + 9);
        *v704 = v706;
        v707 = (v356 + 287) & 0xFFFFFFFFFFFFFFF8;
        v708 = ((unint64_t)v357 + 287) & 0xFFFFFFFFFFFFFFF8;
        v709 = *(_OWORD *)v708;
        *(unsigned char *)(v707 + 16) = *(unsigned char *)(v708 + 16);
        *(_OWORD *)v707 = v709;
        v710 = (void *)((v356 + 311) & 0xFFFFFFFFFFFFFFF8);
        v711 = ((unint64_t)v357 + 311) & 0xFFFFFFFFFFFFFFF8;
        v712 = *(void *)v711;
        v711 += 15;
        *v710 = v712;
        v713 = (void *)(((unint64_t)v710 + 15) & 0xFFFFFFFFFFFFFFF8);
        v714 = *(void *)(v711 & 0xFFFFFFFFFFFFFFF8);
        v715 = *(void *)((v711 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v714, v715);
        *v713 = v714;
        v713[1] = v715;
        v300 = v877;
        v299 = v898;
        if (v372)
        {
LABEL_359:
          v716 = ((((v920
                   + ((((((((((v880 + v300 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v717 = (void *)(((unint64_t)v299 + v951 + v716) & v896);
          v718 = (const void *)(((unint64_t)v99 + v951 + v716) & v896);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v889 + 48))(v718, 1, AssociatedTypeWitness))
          {
            memcpy(v717, v718, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v889 + 16))(v717, v718, AssociatedTypeWitness);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v889 + 56))(v717, 0, 1, AssociatedTypeWitness);
          }
          v85 = a1;
          v719 = (char *)(((unint64_t)v717 + v932) & v72);
          v720 = (char *)(((unint64_t)v718 + v932) & v72);
          if (v859 == v871)
          {
            if (!(*(unsigned int (**)(char *))(v869 + 48))(v720)) {
              goto LABEL_372;
            }
          }
          else
          {
            v721 = (void *)((unint64_t)&v720[v875] & 0xFFFFFFFFFFFFFFF8);
            if (v845 > 0x7FFFFFFE)
            {
              if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v857 + 48))(((unint64_t)v721 + v855) & v834, v824, v856))
              {
LABEL_372:
                v721 = (void *)((unint64_t)&v720[v875] & 0xFFFFFFFFFFFFFFF8);
LABEL_373:
                (*(void (**)(char *, char *, uint64_t))(v869 + 16))(v719, v720, v868);
                v723 = (void *)((unint64_t)&v719[v875] & 0xFFFFFFFFFFFFFFF8);
                *v723 = *v721;
                v724 = ((unint64_t)v723 + v855) & v834;
                v725 = ((unint64_t)v721 + v855) & v834;
                v726 = *(void (**)(unint64_t, unint64_t, uint64_t))(v857 + 16);
                swift_bridgeObjectRetain();
                v726(v724, v725, v856);
                v727 = (void *)((v848 + v724) & 0xFFFFFFFFFFFFFFF8);
                v728 = (void *)((v848 + v725) & 0xFFFFFFFFFFFFFFF8);
                *v727 = *v728;
                v729 = (void *)(((unint64_t)v727 + 15) & 0xFFFFFFFFFFFFFFF8);
                v730 = (void *)(((unint64_t)v728 + 15) & 0xFFFFFFFFFFFFFFF8);
                *v729 = *v730;
                v729[1] = v730[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_374;
              }
            }
            else
            {
              v722 = *v721;
              if (*v721 >= 0xFFFFFFFFuLL) {
                LODWORD(v722) = -1;
              }
              if ((v722 + 1) < 2) {
                goto LABEL_373;
              }
            }
          }
          memcpy(v719, v720, v101);
LABEL_374:
          *(void *)&v719[v101] = *(void *)&v720[v101];
          v731 = (void *)((unint64_t)&v719[v101 + 15] & 0xFFFFFFFFFFFFFFF8);
          v732 = (void *)((unint64_t)&v720[v101 + 15] & 0xFFFFFFFFFFFFFFF8);
          *v731 = *v732;
          v733 = *(void **)(((unint64_t)v732 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(void *)(((unint64_t)v731 + 15) & 0xFFFFFFFFFFFFFFF8) = v733;
          v137 = 1;
          *(unsigned char *)(a1 + v925) = 1;
          v734 = v733;
          goto LABEL_409;
        }
LABEL_266:
        v300 = v879;
        goto LABEL_359;
      }
      v142 = ((unint64_t)v99 + v893) & v910;
      v103 = v96;
      v143 = (v872 + v142) & v96;
      if (v870 == v861)
      {
        if (v858 == v870)
        {
          v100 = (*(uint64_t (**)(unint64_t))(v867 + 48))((v872 + v142) & v96);
          v103 = v96;
          v101 = v938;
LABEL_263:
          v102 = v97;
          goto LABEL_264;
        }
        v205 = (unint64_t *)((v840 + v143) & 0xFFFFFFFFFFFFFFF8);
        v101 = v938;
        if (v844 <= 0x7FFFFFFE)
        {
          v206 = *v205;
          if (v206 >= 0xFFFFFFFF) {
            LODWORD(v206) = -1;
          }
          v102 = v97;
          if ((v206 + 1) >= 2) {
            goto LABEL_265;
          }
          goto LABEL_268;
        }
        v100 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v913 + 48))(((unint64_t)v205 + v901) & v883, v823, v854);
      }
      else
      {
        v102 = v97;
        v169 = v97 + v143;
        if ((v825 & 0x80000000) == 0)
        {
          v170 = *(void *)(v169 + 8);
          if (v170 >= 0xFFFFFFFF) {
            LODWORD(v170) = -1;
          }
          v100 = v170 + 1;
          v101 = v938;
          goto LABEL_264;
        }
        v216 = (v860 + ((v928 + v169) & v906)) & v821;
        v101 = v938;
        if (v878 <= 0x7FFFFFFD)
        {
          v817 = *(void *)(((v819 + ((v852 + v216) & v821)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v817 >= 0xFFFFFFFF) {
            LODWORD(v817) = -1;
          }
          if ((v817 + 1) >= 2) {
            goto LABEL_265;
          }
          goto LABEL_268;
        }
        v100 = (*(uint64_t (**)(size_t, void, uint64_t))(v853 + 48))(v216, v878, v876);
      }
      v103 = v96;
      goto LABEL_263;
    case 2u:
      v104 = v73;
      v105 = v66;
      v85 = a1;
      (*(void (**)(uint64_t))(v887 + 16))(a1);
      v106 = (void *)((v59 + a1) & v896);
      v107 = (const void *)((unint64_t)&a2[v59] & v896);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v889 + 48))(v107, 1, AssociatedTypeWitness))
      {
        memcpy(v106, v107, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v889 + 16))(v106, v107, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v889 + 56))(v106, 0, 1, AssociatedTypeWitness);
      }
      v155 = (char *)(((unint64_t)v106 + v932) & v72);
      v156 = (unsigned char *)(((unint64_t)v107 + v932) & v72);
      if (v859 == v871)
      {
        if (!(*(unsigned int (**)(unsigned char *))(v869 + 48))(v156)) {
          goto LABEL_205;
        }
      }
      else
      {
        v157 = (uint64_t *)((unint64_t)&v156[v875] & 0xFFFFFFFFFFFFFFF8);
        if (v845 > 0x7FFFFFFE)
        {
          if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v857 + 48))(((unint64_t)v157 + v855) & v104, v824, v856))
          {
LABEL_205:
            v157 = (uint64_t *)((unint64_t)&v156[v875] & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_206;
          }
        }
        else
        {
          v158 = *v157;
          if ((unint64_t)*v157 >= 0xFFFFFFFF) {
            LODWORD(v158) = -1;
          }
          if ((v158 + 1) < 2)
          {
LABEL_206:
            (*(void (**)(char *, unsigned char *, uint64_t))(v869 + 16))(v155, v156, v868);
            v179 = (void *)((unint64_t)&v155[v875] & 0xFFFFFFFFFFFFFFF8);
            *v179 = *v157;
            v180 = ((unint64_t)v179 + v855) & v104;
            v181 = ((unint64_t)v157 + v855) & v104;
            v182 = *(void (**)(unint64_t, unint64_t, uint64_t))(v857 + 16);
            swift_bridgeObjectRetain();
            v182(v180, v181, v856);
            v183 = (void *)((v848 + v180) & 0xFFFFFFFFFFFFFFF8);
            v184 = (void *)((v848 + v181) & 0xFFFFFFFFFFFFFFF8);
            *v183 = *v184;
            v185 = (void *)(((unint64_t)v183 + 15) & 0xFFFFFFFFFFFFFFF8);
            v186 = (void *)(((unint64_t)v184 + 15) & 0xFFFFFFFFFFFFFFF8);
            *v185 = *v186;
            v185[1] = v186[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_207:
            v187 = &v155[v938];
            *v187 = v156[v938];
            v188 = *(void **)&v156[v938 + 8];
            *((void *)v187 + 1) = v188;
            *(unsigned char *)(a1 + v105) = 2;
            v189 = v188;
            goto LABEL_379;
          }
        }
      }
      memcpy(v155, v156, v938);
      goto LABEL_207;
    case 3u:
      v108 = v75;
      v884 = ~v31;
      v841 = v35;
      v902 = v31 + 8;
      v830 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
      v914 = *(void *)(v854 - 8);
      v921 = v53;
      v109 = ((((v37 + ((v31 + 8 + (v35 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v926 = v66;
      v940 = *(void (**)(uint64_t))(v887 + 16);
      v940(a1);
      v953 = (void *)((v54 + a1) & v88);
      v110 = (const void *)((unint64_t)&a2[v54] & v88);
      if (v24 == v861)
      {
        v111 = (*(uint64_t (**)(const void *))(v887 + 48))(v110);
        v112 = v109;
        v113 = v891;
        v114 = v108;
        v85 = a1;
        goto LABEL_282;
      }
      v144 = ((unint64_t)v110 + v893) & v910;
      v114 = v108;
      v145 = (v872 + v144) & v108;
      if (v870 == v861)
      {
        if (v858 == v870)
        {
          v111 = (*(uint64_t (**)(unint64_t))(v867 + 48))((v872 + v144) & v108);
          v114 = v108;
          v112 = v109;
LABEL_190:
          v113 = v891;
          v85 = a1;
          goto LABEL_282;
        }
        v207 = (unint64_t *)((v841 + v145) & 0xFFFFFFFFFFFFFFF8);
        v113 = v891;
        v85 = a1;
        if (v844 <= 0x7FFFFFFE)
        {
          v208 = *v207;
          if (v208 >= 0xFFFFFFFF) {
            LODWORD(v208) = -1;
          }
          v112 = v109;
          if ((v208 + 1) >= 2) {
            goto LABEL_283;
          }
          goto LABEL_286;
        }
        v111 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v914 + 48))(((unint64_t)v207 + v902) & v884, v823, v854);
      }
      else
      {
        v112 = v109;
        v171 = v109 + v145;
        if ((v825 & 0x80000000) == 0)
        {
          v172 = *(void *)(v171 + 8);
          if (v172 >= 0xFFFFFFFF) {
            LODWORD(v172) = -1;
          }
          v111 = v172 + 1;
          goto LABEL_190;
        }
        v217 = (v860 + ((v928 + v171) & v906)) & v74;
        v113 = v891;
        v85 = a1;
        if (v878 <= 0x7FFFFFFD)
        {
          v818 = *(void *)(((v819 + ((v852 + v217) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v818 >= 0xFFFFFFFF) {
            LODWORD(v818) = -1;
          }
          if ((v818 + 1) >= 2) {
            goto LABEL_283;
          }
          goto LABEL_286;
        }
        v111 = (*(uint64_t (**)(size_t, void, uint64_t))(v853 + 48))(v217, v878, v876);
      }
      v114 = v108;
      v112 = v109;
LABEL_282:
      if (v111)
      {
LABEL_283:
        v377 = v953;
        memcpy(v953, v110, v846);
LABEL_284:
        v378 = v879;
        goto LABEL_378;
      }
      v144 = ((unint64_t)v110 + v893) & v910;
      v145 = (v872 + v144) & v114;
LABEL_286:
      v934 = v110;
      v379 = v110;
      v380 = v112;
      v381 = v114;
      ((void (*)(void *, const void *, uint64_t))v940)(v953, v379, v113);
      v382 = v74;
      v383 = ((unint64_t)v953 + v893) & v910;
      ((void (*)(unint64_t, unint64_t, uint64_t))v940)(v383, v144, v113);
      v384 = (v872 + v383) & v381;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v867 + 16))(v384, v145, v866);
      v385 = (void *)((v841 + v384) & 0xFFFFFFFFFFFFFFF8);
      v386 = (void *)((v841 + v145) & 0xFFFFFFFFFFFFFFF8);
      *v385 = *v386;
      v387 = ((unint64_t)v385 + v902) & v884;
      v388 = ((unint64_t)v386 + v902) & v884;
      v389 = *(void (**)(unint64_t, unint64_t, uint64_t))(v914 + 16);
      swift_bridgeObjectRetain();
      v389(v387, v388, v854);
      v390 = (void *)((v830 + v388) & 0xFFFFFFFFFFFFFFF8);
      v391 = (void *)((v830 + v387) & 0xFFFFFFFFFFFFFFF8);
      *v391 = *v390;
      v392 = (void *)(((unint64_t)v391 + 15) & 0xFFFFFFFFFFFFFFF8);
      v393 = (void *)(((unint64_t)v390 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v392 = *v393;
      v392[1] = v393[1];
      v394 = (void *)(v380 + v384);
      *v394 = *(void *)(v380 + v145);
      v394[1] = *(void *)(v380 + v145 + 8);
      v395 = (v928 + v380 + v384) & v906;
      v396 = (v928 + v380 + v145) & v906;
      *(unsigned char *)v395 = *(unsigned char *)v396;
      v397 = v395 | 4;
      v398 = *(_DWORD *)(v396 | 4);
      *(unsigned char *)(v397 + 4) = *(unsigned char *)((v396 | 4) + 4);
      *(_DWORD *)v397 = v398;
      *(_WORD *)(v395 + 10) = *(_WORD *)(v396 + 0xA);
      v399 = (v860 + v395) & v382;
      v941 = v396;
      v400 = (v860 + v396) & v382;
      v401 = *(void (**)(size_t, size_t, uint64_t))(v853 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v401(v399, v400, v876);
      v402 = (v852 + v399) & v382;
      v403 = (v852 + v400) & v382;
      v401(v402, v403, v876);
      v404 = (unsigned char *)(v402 + v877);
      *v404 = *(unsigned char *)(v403 + v877);
      v404[1] = *(unsigned char *)(v403 + v877 + 1);
      v404[2] = *(unsigned char *)(v403 + v877 + 2);
      v404[3] = *(unsigned char *)(v403 + v877 + 3);
      v404[4] = *(unsigned char *)(v403 + v877 + 4);
      v405 = (v402 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
      v406 = (v403 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)v405 = *(void *)v406;
      *(void *)(v405 + 8) = *(void *)(v406 + 8);
      *(unsigned char *)(v405 + 16) = *(unsigned char *)(v406 + 16);
      *(unsigned char *)(v405 + 17) = *(unsigned char *)(v406 + 17);
      *(unsigned char *)(v405 + 18) = *(unsigned char *)(v406 + 18);
      *(unsigned char *)(v405 + 19) = *(unsigned char *)(v406 + 19);
      v407 = (v405 + 27) & 0xFFFFFFFFFFFFFFF8;
      v408 = (v406 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)v407 = *(void *)v408;
      *(unsigned char *)(v407 + 8) = *(unsigned char *)(v408 + 8);
      *(unsigned char *)(v407 + 9) = *(unsigned char *)(v408 + 9);
      *(unsigned char *)(v407 + 10) = *(unsigned char *)(v408 + 10);
      *(unsigned char *)(v407 + 11) = *(unsigned char *)(v408 + 11);
      *(unsigned char *)(v407 + 12) = *(unsigned char *)(v408 + 12);
      v409 = (void *)((v406 + 47) & 0xFFFFFFFFFFFFFFF8);
      v410 = (void *)((v405 + 47) & 0xFFFFFFFFFFFFFFF8);
      *v410 = *v409;
      v411 = ((unint64_t)v410 + 15) & 0xFFFFFFFFFFFFFFF8;
      v412 = ((unint64_t)v409 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)v411 = *(void *)v412;
      *(unsigned char *)(v411 + 8) = *(unsigned char *)(v412 + 8);
      *(unsigned char *)(v411 + 9) = *(unsigned char *)(v412 + 9);
      v413 = (void *)((v851 + v411) & v382);
      v414 = (const void *)((v851 + v412) & v382);
      v415 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v853 + 48);
      swift_bridgeObjectRetain();
      if (v415(v414, 1, v876))
      {
        memcpy(v413, v414, v879);
      }
      else
      {
        v401((size_t)v413, (size_t)v414, v876);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v853 + 56))(v413, 0, 1, v876);
      }
      v416 = (void *)(((unint64_t)v413 + v850) & 0xFFFFFFFFFFFFFFF8);
      v417 = (void *)(((unint64_t)v414 + v850) & 0xFFFFFFFFFFFFFFF8);
      *v416 = *v417;
      v418 = ((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8;
      v419 = ((unint64_t)v417 + 15) & 0xFFFFFFFFFFFFFFF8;
      v420 = *(void *)v419;
      *(unsigned char *)(v418 + 8) = *(unsigned char *)(v419 + 8);
      *(void *)v418 = v420;
      v421 = (void *)(((unint64_t)v416 + 31) & 0xFFFFFFFFFFFFFFF8);
      v422 = (void *)(((unint64_t)v417 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v421 = *v422;
      v423 = ((unint64_t)v421 + 15) & 0xFFFFFFFFFFFFFFF8;
      v424 = (uint64_t *)(((unint64_t)v422 + 15) & 0xFFFFFFFFFFFFFFF8);
      v425 = v424[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v425 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)v423 = *(_OWORD *)v424;
      }
      else
      {
        v426 = *v424;
        sub_10001EBB0(*v424, v425);
        *(void *)v423 = v426;
        *(void *)(v423 + 8) = v425;
      }
      v427 = v878;
      v428 = (v423 + 19) & 0xFFFFFFFFFFFFFFF8;
      v429 = ((unint64_t)v424 + 19) & 0xFFFFFFFFFFFFFFF8;
      v430 = *(void *)v429;
      *(unsigned char *)(v428 + 8) = *(unsigned char *)(v429 + 8);
      *(void *)v428 = v430;
      *(unsigned char *)(v428 + 9) = *(unsigned char *)(v429 + 9);
      v431 = (v428 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v432 = (v429 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v433 = *(_DWORD *)v432;
      *(unsigned char *)(v431 + 4) = *(unsigned char *)(v432 + 4);
      *(_DWORD *)v431 = v433;
      v434 = (void *)((v428 + 25) & 0xFFFFFFFFFFFFFFF8);
      v435 = (void *)((v429 + 25) & 0xFFFFFFFFFFFFFFF8);
      *v434 = *v435;
      v434[1] = v435[1];
      v436 = v395 + v927;
      v437 = (long long *)(v941 + v927);
      v438 = *(void *)(v941 + v927 + 16);
      if (v438 >= 0xFFFFFFFF) {
        LODWORD(v438) = -1;
      }
      v439 = v438 - 1;
      swift_bridgeObjectRetain();
      if (v439 < 0)
      {
        *(void *)v436 = *(void *)v437;
        *(unsigned char *)(v436 + 8) = *((unsigned char *)v437 + 8);
        *(unsigned char *)(v436 + 9) = *((unsigned char *)v437 + 9);
        v452 = *((void *)v437 + 2);
        swift_errorRetain();
        *(void *)(v436 + 16) = v452;
        v453 = *((void *)v437 + 3);
        swift_errorRetain();
        *(void *)(v436 + 24) = v453;
        *(unsigned char *)(v436 + 32) = *((unsigned char *)v437 + 32);
        *(unsigned char *)(v436 + 33) = *((unsigned char *)v437 + 33);
        *(unsigned char *)(v436 + 34) = *((unsigned char *)v437 + 34);
        *(void *)(v436 + 40) = *((void *)v437 + 5);
        *(void *)(v436 + 48) = *((void *)v437 + 6);
        *(void *)(v436 + 56) = *((void *)v437 + 7);
        *(void *)(v436 + 64) = *((void *)v437 + 8);
        *(unsigned char *)(v436 + 72) = *((unsigned char *)v437 + 72);
        *(void *)(v436 + 80) = *((void *)v437 + 10);
        *(void *)(v436 + 88) = *((void *)v437 + 11);
        v942 = (void *)*((void *)v437 + 12);
        *(void *)(v436 + 96) = v942;
        *(unsigned char *)(v436 + 104) = *((unsigned char *)v437 + 104);
        *(unsigned char *)(v436 + 105) = *((unsigned char *)v437 + 105);
        *(void *)(v436 + 112) = *((void *)v437 + 14);
        *(void *)(v436 + 120) = *((void *)v437 + 15);
        *(void *)(v436 + 128) = *((void *)v437 + 16);
        *(void *)(v436 + 136) = *((void *)v437 + 17);
        *(void *)(v436 + 144) = *((void *)v437 + 18);
        *(void *)(v436 + 152) = *((void *)v437 + 19);
        *(void *)(v436 + 160) = *((void *)v437 + 20);
        *(void *)(v436 + 168) = *((void *)v437 + 21);
        *(unsigned char *)(v436 + 176) = *((unsigned char *)v437 + 176);
        *(void *)(v436 + 184) = *((void *)v437 + 23);
        v454 = *((void *)v437 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v455 = v942;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v454)
        {
          *(void *)(v436 + 192) = v454;
          *(void *)(v436 + 200) = *((void *)v437 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v436 + 192) = v437[12];
        }
        v427 = v878;
        v377 = v953;
        *(void *)(v436 + 208) = *((void *)v437 + 26);
        *(void *)(v436 + 216) = *((void *)v437 + 27);
        *(void *)(v436 + 224) = *((void *)v437 + 28);
        *(void *)(v436 + 232) = *((void *)v437 + 29);
        *(void *)(v436 + 240) = *((void *)v437 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v440 = *v437;
        v441 = v437[1];
        v442 = v437[3];
        *(_OWORD *)(v436 + 32) = v437[2];
        *(_OWORD *)(v436 + 48) = v442;
        *(_OWORD *)v436 = v440;
        *(_OWORD *)(v436 + 16) = v441;
        v443 = v437[4];
        v444 = v437[5];
        v445 = v437[7];
        *(_OWORD *)(v436 + 96) = v437[6];
        *(_OWORD *)(v436 + 112) = v445;
        *(_OWORD *)(v436 + 64) = v443;
        *(_OWORD *)(v436 + 80) = v444;
        v446 = v437[8];
        v447 = v437[9];
        v448 = v437[11];
        *(_OWORD *)(v436 + 160) = v437[10];
        *(_OWORD *)(v436 + 176) = v448;
        *(_OWORD *)(v436 + 128) = v446;
        *(_OWORD *)(v436 + 144) = v447;
        v449 = v437[12];
        v450 = v437[13];
        v451 = v437[14];
        *(void *)(v436 + 240) = *((void *)v437 + 30);
        *(_OWORD *)(v436 + 208) = v450;
        *(_OWORD *)(v436 + 224) = v451;
        *(_OWORD *)(v436 + 192) = v449;
        v377 = v953;
      }
      v735 = (_OWORD *)((v436 + 255) & 0xFFFFFFFFFFFFFFF8);
      v736 = (long long *)(((unint64_t)v437 + 255) & 0xFFFFFFFFFFFFFFF8);
      v737 = *v736;
      *(_OWORD *)((char *)v735 + 9) = *(long long *)((char *)v736 + 9);
      *v735 = v737;
      v738 = (v436 + 287) & 0xFFFFFFFFFFFFFFF8;
      v739 = ((unint64_t)v437 + 287) & 0xFFFFFFFFFFFFFFF8;
      v740 = *(_OWORD *)v739;
      *(unsigned char *)(v738 + 16) = *(unsigned char *)(v739 + 16);
      *(_OWORD *)v738 = v740;
      v741 = (void *)((v436 + 311) & 0xFFFFFFFFFFFFFFF8);
      v742 = ((unint64_t)v437 + 311) & 0xFFFFFFFFFFFFFFF8;
      v743 = *(void *)v742;
      v742 += 15;
      *v741 = v743;
      v744 = (void *)(((unint64_t)v741 + 15) & 0xFFFFFFFFFFFFFFF8);
      v745 = *(void *)(v742 & 0xFFFFFFFFFFFFFFF8);
      v746 = *(void *)((v742 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v745, v746);
      *v744 = v745;
      v744[1] = v746;
      v378 = v877;
      v110 = v934;
      v85 = a1;
      if (!v427) {
        goto LABEL_284;
      }
LABEL_378:
      v747 = ((((v921
               + ((((((((((v880 + v378 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v748 = (void *)(((unint64_t)v377 + v747) & 0xFFFFFFFFFFFFFFF8);
      v749 = (void *)(((unint64_t)v110 + v747) & 0xFFFFFFFFFFFFFFF8);
      *v748 = *v749;
      v748[1] = v749[1];
      *(void *)(((unint64_t)v748 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v749 + 23) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v85 + v926) = 3;
      swift_bridgeObjectRetain();
      goto LABEL_379;
    case 4u:
      v115 = v66;
      v85 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v887 + 16))(a1, a2, v891);
      v116 = 4;
      goto LABEL_116;
    case 5u:
      v115 = v66;
      v85 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v887 + 16))(a1, a2, v891);
      v116 = 5;
      goto LABEL_116;
    case 6u:
      v117 = v66;
      v85 = a1;
      (*(void (**)(uint64_t))(v887 + 16))(a1);
      v118 = (void *)((v65 + a1) & v89);
      v119 = (const void *)((unint64_t)&a2[v65] & v89);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v119, 1, v838))
      {
        memcpy(v118, v119, v61);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v118, v119, v838);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v118, 0, 1, v838);
      }
      v166 = v950;
      *(unsigned char *)(a1 + v117) = 6;
      v137 = 1;
      goto LABEL_410;
    case 7u:
      v115 = v66;
      v85 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v887 + 16))(a1, a2, v891);
      v116 = 7;
LABEL_116:
      *(unsigned char *)(v85 + v115) = v116;
      goto LABEL_379;
    default:
      v90 = v75;
      v882 = ~v31;
      v839 = v35;
      v900 = v31 + 8;
      v828 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
      v912 = *(void *)(v854 - 8);
      v919 = v53;
      v952 = ((((v37 + ((v31 + 8 + (v35 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v924 = v66;
      v91 = *(void (**)(uint64_t))(v887 + 16);
      v91(a1);
      v939 = (void *)((v54 + a1) & v88);
      v92 = (const void *)((unint64_t)&a2[v54] & v88);
      if (v24 != v861)
      {
        v140 = ((unint64_t)v92 + v893) & v910;
        v95 = v90;
        v141 = (v872 + v140) & v90;
        if (v870 == v861)
        {
          if (v858 == v870)
          {
            v93 = (*(uint64_t (**)(unint64_t))(v867 + 48))((v872 + v140) & v90);
            v95 = v90;
LABEL_181:
            v94 = v891;
            v85 = a1;
            goto LABEL_245;
          }
          v203 = (unint64_t *)((v839 + v141) & 0xFFFFFFFFFFFFFFF8);
          v94 = v891;
          v85 = a1;
          if (v844 <= 0x7FFFFFFE)
          {
            v204 = *v203;
            goto LABEL_412;
          }
          v93 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v912 + 48))(((unint64_t)v203 + v900) & v882, v823, v854);
        }
        else
        {
          v167 = v952 + v141;
          if ((v825 & 0x80000000) == 0)
          {
            v168 = *(void *)(v167 + 8);
            if (v168 >= 0xFFFFFFFF) {
              LODWORD(v168) = -1;
            }
            v93 = v168 + 1;
            goto LABEL_181;
          }
          v215 = (v860 + ((v928 + v167) & v906)) & v74;
          v94 = v891;
          v85 = a1;
          if (v878 <= 0x7FFFFFFD)
          {
            v204 = *(void *)(((v819 + ((v852 + v215) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_412:
            if (v204 >= 0xFFFFFFFF) {
              LODWORD(v204) = -1;
            }
            if ((v204 + 1) >= 2) {
              goto LABEL_246;
            }
            goto LABEL_249;
          }
          v93 = (*(uint64_t (**)(size_t, void, uint64_t))(v853 + 48))(v215, v878, v876);
        }
        v95 = v90;
        goto LABEL_245;
      }
      v93 = (*(uint64_t (**)(const void *))(v887 + 48))(v92);
      v94 = v891;
      v95 = v90;
      v85 = a1;
LABEL_245:
      if (v93)
      {
LABEL_246:
        v221 = v939;
        memcpy(v939, v92, v846);
LABEL_247:
        v222 = v879;
        goto LABEL_355;
      }
      v140 = ((unint64_t)v92 + v893) & v910;
      v141 = (v872 + v140) & v95;
LABEL_249:
      v933 = v92;
      v223 = v92;
      v224 = v95;
      ((void (*)(void *, const void *, uint64_t))v91)(v939, v223, v94);
      v225 = v74;
      v226 = ((unint64_t)v939 + v893) & v910;
      ((void (*)(unint64_t, unint64_t, uint64_t))v91)(v226, v140, v94);
      v227 = (v872 + v226) & v224;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v867 + 16))(v227, v141, v866);
      v228 = (void *)((v839 + v227) & 0xFFFFFFFFFFFFFFF8);
      v229 = (void *)((v839 + v141) & 0xFFFFFFFFFFFFFFF8);
      *v228 = *v229;
      v230 = ((unint64_t)v228 + v900) & v882;
      v231 = ((unint64_t)v229 + v900) & v882;
      v232 = *(void (**)(unint64_t, unint64_t, uint64_t))(v912 + 16);
      swift_bridgeObjectRetain();
      v232(v230, v231, v854);
      v233 = (void *)((v828 + v231) & 0xFFFFFFFFFFFFFFF8);
      v234 = (void *)((v828 + v230) & 0xFFFFFFFFFFFFFFF8);
      *v234 = *v233;
      v235 = (void *)(((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8);
      v236 = (void *)(((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v235 = *v236;
      v235[1] = v236[1];
      v237 = (void *)(v952 + v227);
      *v237 = *(void *)(v952 + v141);
      v237[1] = *(void *)(v952 + v141 + 8);
      v238 = (v928 + v952 + v227) & v906;
      v239 = (v928 + v952 + v141) & v906;
      *(unsigned char *)v238 = *(unsigned char *)v239;
      v240 = v238 | 4;
      v241 = *(_DWORD *)(v239 | 4);
      *(unsigned char *)(v240 + 4) = *(unsigned char *)((v239 | 4) + 4);
      *(_DWORD *)v240 = v241;
      *(_WORD *)(v238 + 10) = *(_WORD *)(v239 + 0xA);
      v242 = (v860 + v238) & v225;
      v957 = v239;
      v243 = (v860 + v239) & v225;
      v244 = *(void (**)(unint64_t, unint64_t, uint64_t))(v853 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v244(v242, v243, v876);
      v245 = (v852 + v242) & v225;
      v246 = (v852 + v243) & v225;
      v244(v245, v246, v876);
      v247 = (unsigned char *)(v245 + v877);
      *v247 = *(unsigned char *)(v246 + v877);
      v247[1] = *(unsigned char *)(v246 + v877 + 1);
      v247[2] = *(unsigned char *)(v246 + v877 + 2);
      v247[3] = *(unsigned char *)(v246 + v877 + 3);
      v247[4] = *(unsigned char *)(v246 + v877 + 4);
      v248 = (v245 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
      v249 = (v246 + v877 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)v248 = *(void *)v249;
      *(void *)(v248 + 8) = *(void *)(v249 + 8);
      *(unsigned char *)(v248 + 16) = *(unsigned char *)(v249 + 16);
      *(unsigned char *)(v248 + 17) = *(unsigned char *)(v249 + 17);
      *(unsigned char *)(v248 + 18) = *(unsigned char *)(v249 + 18);
      *(unsigned char *)(v248 + 19) = *(unsigned char *)(v249 + 19);
      v250 = (v248 + 27) & 0xFFFFFFFFFFFFFFF8;
      v251 = (v249 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)v250 = *(void *)v251;
      *(unsigned char *)(v250 + 8) = *(unsigned char *)(v251 + 8);
      *(unsigned char *)(v250 + 9) = *(unsigned char *)(v251 + 9);
      *(unsigned char *)(v250 + 10) = *(unsigned char *)(v251 + 10);
      *(unsigned char *)(v250 + 11) = *(unsigned char *)(v251 + 11);
      *(unsigned char *)(v250 + 12) = *(unsigned char *)(v251 + 12);
      v252 = (void *)((v249 + 47) & 0xFFFFFFFFFFFFFFF8);
      v253 = (void *)((v248 + 47) & 0xFFFFFFFFFFFFFFF8);
      *v253 = *v252;
      v254 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
      v255 = ((unint64_t)v252 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)v254 = *(void *)v255;
      *(unsigned char *)(v254 + 8) = *(unsigned char *)(v255 + 8);
      *(unsigned char *)(v254 + 9) = *(unsigned char *)(v255 + 9);
      v256 = (void *)((v851 + v254) & v225);
      v257 = (const void *)((v851 + v255) & v225);
      v258 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v853 + 48);
      swift_bridgeObjectRetain();
      if (v258(v257, 1, v876))
      {
        memcpy(v256, v257, v879);
      }
      else
      {
        v244((unint64_t)v256, (unint64_t)v257, v876);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v853 + 56))(v256, 0, 1, v876);
      }
      v259 = (void *)(((unint64_t)v256 + v850) & 0xFFFFFFFFFFFFFFF8);
      v260 = (void *)(((unint64_t)v257 + v850) & 0xFFFFFFFFFFFFFFF8);
      *v259 = *v260;
      v261 = ((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8;
      v262 = ((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8;
      v263 = *(void *)v262;
      *(unsigned char *)(v261 + 8) = *(unsigned char *)(v262 + 8);
      *(void *)v261 = v263;
      v264 = (void *)(((unint64_t)v259 + 31) & 0xFFFFFFFFFFFFFFF8);
      v265 = (void *)(((unint64_t)v260 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v264 = *v265;
      v266 = ((unint64_t)v264 + 15) & 0xFFFFFFFFFFFFFFF8;
      v267 = (uint64_t *)(((unint64_t)v265 + 15) & 0xFFFFFFFFFFFFFFF8);
      v268 = v267[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v268 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)v266 = *(_OWORD *)v267;
      }
      else
      {
        v269 = *v267;
        sub_10001EBB0(*v267, v268);
        *(void *)v266 = v269;
        *(void *)(v266 + 8) = v268;
      }
      v270 = v878;
      v271 = (v266 + 19) & 0xFFFFFFFFFFFFFFF8;
      v272 = ((unint64_t)v267 + 19) & 0xFFFFFFFFFFFFFFF8;
      v273 = *(void *)v272;
      *(unsigned char *)(v271 + 8) = *(unsigned char *)(v272 + 8);
      *(void *)v271 = v273;
      *(unsigned char *)(v271 + 9) = *(unsigned char *)(v272 + 9);
      v274 = (v271 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v275 = (v272 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v276 = *(_DWORD *)v275;
      *(unsigned char *)(v274 + 4) = *(unsigned char *)(v275 + 4);
      *(_DWORD *)v274 = v276;
      v277 = (void *)((v271 + 25) & 0xFFFFFFFFFFFFFFF8);
      v278 = (void *)((v272 + 25) & 0xFFFFFFFFFFFFFFF8);
      *v277 = *v278;
      v277[1] = v278[1];
      v279 = v238 + v927;
      v280 = (long long *)(v957 + v927);
      v281 = *(void *)(v957 + v927 + 16);
      if (v281 >= 0xFFFFFFFF) {
        LODWORD(v281) = -1;
      }
      v282 = v281 - 1;
      swift_bridgeObjectRetain();
      if (v282 < 0)
      {
        *(void *)v279 = *(void *)v280;
        *(unsigned char *)(v279 + 8) = *((unsigned char *)v280 + 8);
        *(unsigned char *)(v279 + 9) = *((unsigned char *)v280 + 9);
        v295 = *((void *)v280 + 2);
        swift_errorRetain();
        *(void *)(v279 + 16) = v295;
        v296 = *((void *)v280 + 3);
        swift_errorRetain();
        *(void *)(v279 + 24) = v296;
        *(unsigned char *)(v279 + 32) = *((unsigned char *)v280 + 32);
        *(unsigned char *)(v279 + 33) = *((unsigned char *)v280 + 33);
        *(unsigned char *)(v279 + 34) = *((unsigned char *)v280 + 34);
        *(void *)(v279 + 40) = *((void *)v280 + 5);
        *(void *)(v279 + 48) = *((void *)v280 + 6);
        *(void *)(v279 + 56) = *((void *)v280 + 7);
        *(void *)(v279 + 64) = *((void *)v280 + 8);
        *(unsigned char *)(v279 + 72) = *((unsigned char *)v280 + 72);
        *(void *)(v279 + 80) = *((void *)v280 + 10);
        *(void *)(v279 + 88) = *((void *)v280 + 11);
        v958 = (void *)*((void *)v280 + 12);
        *(void *)(v279 + 96) = v958;
        *(unsigned char *)(v279 + 104) = *((unsigned char *)v280 + 104);
        *(unsigned char *)(v279 + 105) = *((unsigned char *)v280 + 105);
        *(void *)(v279 + 112) = *((void *)v280 + 14);
        *(void *)(v279 + 120) = *((void *)v280 + 15);
        *(void *)(v279 + 128) = *((void *)v280 + 16);
        *(void *)(v279 + 136) = *((void *)v280 + 17);
        *(void *)(v279 + 144) = *((void *)v280 + 18);
        *(void *)(v279 + 152) = *((void *)v280 + 19);
        *(void *)(v279 + 160) = *((void *)v280 + 20);
        *(void *)(v279 + 168) = *((void *)v280 + 21);
        *(unsigned char *)(v279 + 176) = *((unsigned char *)v280 + 176);
        *(void *)(v279 + 184) = *((void *)v280 + 23);
        v297 = *((void *)v280 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v298 = v958;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v297)
        {
          *(void *)(v279 + 192) = v297;
          *(void *)(v279 + 200) = *((void *)v280 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v279 + 192) = v280[12];
        }
        v270 = v878;
        v221 = v939;
        *(void *)(v279 + 208) = *((void *)v280 + 26);
        *(void *)(v279 + 216) = *((void *)v280 + 27);
        *(void *)(v279 + 224) = *((void *)v280 + 28);
        *(void *)(v279 + 232) = *((void *)v280 + 29);
        *(void *)(v279 + 240) = *((void *)v280 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v283 = *v280;
        v284 = v280[1];
        v285 = v280[3];
        *(_OWORD *)(v279 + 32) = v280[2];
        *(_OWORD *)(v279 + 48) = v285;
        *(_OWORD *)v279 = v283;
        *(_OWORD *)(v279 + 16) = v284;
        v286 = v280[4];
        v287 = v280[5];
        v288 = v280[7];
        *(_OWORD *)(v279 + 96) = v280[6];
        *(_OWORD *)(v279 + 112) = v288;
        *(_OWORD *)(v279 + 64) = v286;
        *(_OWORD *)(v279 + 80) = v287;
        v289 = v280[8];
        v290 = v280[9];
        v291 = v280[11];
        *(_OWORD *)(v279 + 160) = v280[10];
        *(_OWORD *)(v279 + 176) = v291;
        *(_OWORD *)(v279 + 128) = v289;
        *(_OWORD *)(v279 + 144) = v290;
        v292 = v280[12];
        v293 = v280[13];
        v294 = v280[14];
        *(void *)(v279 + 240) = *((void *)v280 + 30);
        *(_OWORD *)(v279 + 208) = v293;
        *(_OWORD *)(v279 + 224) = v294;
        *(_OWORD *)(v279 + 192) = v292;
        v221 = v939;
      }
      v687 = (_OWORD *)((v279 + 255) & 0xFFFFFFFFFFFFFFF8);
      v688 = (long long *)(((unint64_t)v280 + 255) & 0xFFFFFFFFFFFFFFF8);
      v689 = *v688;
      *(_OWORD *)((char *)v687 + 9) = *(long long *)((char *)v688 + 9);
      *v687 = v689;
      v690 = (v279 + 287) & 0xFFFFFFFFFFFFFFF8;
      v691 = ((unint64_t)v280 + 287) & 0xFFFFFFFFFFFFFFF8;
      v692 = *(_OWORD *)v691;
      *(unsigned char *)(v690 + 16) = *(unsigned char *)(v691 + 16);
      *(_OWORD *)v690 = v692;
      v693 = (void *)((v279 + 311) & 0xFFFFFFFFFFFFFFF8);
      v694 = ((unint64_t)v280 + 311) & 0xFFFFFFFFFFFFFFF8;
      v695 = *(void *)v694;
      v694 += 15;
      *v693 = v695;
      v696 = (void *)(((unint64_t)v693 + 15) & 0xFFFFFFFFFFFFFFF8);
      v697 = *(void *)(v694 & 0xFFFFFFFFFFFFFFF8);
      v698 = *(void *)((v694 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v697, v698);
      *v696 = v697;
      v696[1] = v698;
      v222 = v877;
      v92 = v933;
      v85 = a1;
      if (!v270) {
        goto LABEL_247;
      }
LABEL_355:
      v699 = ((((v919
               + ((((((((((v880 + v222 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v700 = (void *)(((unint64_t)v221 + v699) & 0xFFFFFFFFFFFFFFF8);
      v701 = (void *)(((unint64_t)v92 + v699) & 0xFFFFFFFFFFFFFFF8);
      *v700 = *v701;
      v702 = *(void **)(((unint64_t)v701 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v700 + 15) & 0xFFFFFFFFFFFFFFF8) = v702;
      *(unsigned char *)(v85 + v924) = 0;
      v703 = v702;
LABEL_379:
      v137 = 1;
LABEL_409:
      v166 = v950;
LABEL_410:
      *(unsigned char *)(v85 + v166) = v137;
      return v85;
  }
}

unsigned __int8 *sub_10066B1F4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  v3 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = *(void *)(a3 + 16);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v1036 = *(void *)(v5 + 64);
    uint64_t v1044 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v1007 = v4;
    uint64_t v983 = swift_getAssociatedTypeWitness();
    v1003 = v3;
    uint64_t v6 = *(void *)(v983 - 8);
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v964 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v964 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v957 = sub_10096B0E0();
    uint64_t v11 = *(void *)(v957 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = v12 | 7;
    uint64_t v14 = v10 | v1044 | v12;
    uint64_t v1031 = v5;
    uint64_t v984 = v6;
    uint64_t v965 = v8;
    unsigned int v15 = *(_DWORD *)(v8 + 84);
    unsigned int v967 = *(_DWORD *)(v6 + 84);
    if (v967 > v15) {
      unsigned int v15 = *(_DWORD *)(v6 + 84);
    }
    unsigned int v942 = v15;
    if (v15 <= 0x7FFFFFFE) {
      unsigned int v15 = 2147483646;
    }
    unsigned int v1013 = *(_DWORD *)(v5 + 84);
    unsigned int v985 = v15;
    if (v15 <= v1013) {
      unsigned int v15 = *(_DWORD *)(v5 + 84);
    }
    uint64_t v988 = *(void *)(v957 - 8);
    unsigned int v16 = *(_DWORD *)(v11 + 84);
    if (v16 <= 0x7FFFFFFE) {
      unsigned int v17 = 2147483646;
    }
    else {
      unsigned int v17 = v16;
    }
    unsigned int v1005 = v17;
    if (v15 <= v17) {
      unsigned int v15 = v17;
    }
    unsigned int v934 = v15;
    if (v15 <= 0x7FFFFFFF) {
      unsigned int v15 = 0x7FFFFFFF;
    }
    unsigned int v976 = v15;
    unsigned int v948 = v16;
    uint64_t v979 = v1036 + v1044;
    uint64_t v996 = v10;
    uint64_t v980 = v1036 + v10;
    uint64_t v987 = *(void *)(v6 + 64) + 7;
    uint64_t v963 = v9 + 8;
    uint64_t v1000 = v9;
    uint64_t v947 = *(void *)(v8 + 64) + 7;
    unint64_t v1025 = ((((v947 + ((v9 + 8 + (v987 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16;
    uint64_t v991 = v12 | 7;
    uint64_t v1011 = v13 + 16;
    uint64_t v969 = v12 + 12;
    size_t v18 = *(void *)(*(void *)(v957 - 8) + 64);
    size_t v956 = v18 + v12;
    size_t v943 = v18 + 12;
    unint64_t v19 = (v12
         + 10
         + ((((((v18 + 12 + ((v18 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
    size_t v953 = v18;
    if (!v16) {
      ++v18;
    }
    size_t v977 = v18;
    unint64_t v971 = v19;
    uint64_t v951 = v12 + 10;
    size_t v952 = v18 + 7;
    unint64_t v1010 = ((((((((((v18 + 7 + v19) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 16;
    uint64_t v944 = (v13 + 16 + v1025 + ((v1036 + v10 + ((v1036 + v1044) & ~v1044)) & ~v10)) & ~v13;
    unint64_t v974 = v14 + v1036;
    uint64_t v998 = v10 | v1044 | v12;
    unint64_t v955 = ((((v944 + v1010 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v20 = v955 + ((v14 + v1036) & ~v14);
    unint64_t v993 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v21 = *(void *)(a3 + 24);
    uint64_t v1021 = swift_getAssociatedTypeWitness();
    uint64_t v22 = *(void *)(v1021 - 8);
    uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
    unint64_t v989 = (v20 + v23) & ~v23;
    uint64_t v1009 = v22;
    unsigned int v24 = *(_DWORD *)(v22 + 84);
    unint64_t v25 = *(void *)(v22 + 64);
    if (v24) {
      size_t v26 = *(void *)(v22 + 64);
    }
    else {
      size_t v26 = v25 + 1;
    }
    size_t v1004 = v26;
    uint64_t v981 = swift_getAssociatedTypeWitness();
    uint64_t v27 = *(void *)(v981 - 8);
    int v28 = *(_DWORD *)(v27 + 80) & 0xF8;
    uint64_t v29 = v21;
    uint64_t v30 = swift_getAssociatedTypeWitness();
    uint64_t v31 = v12;
    uint64_t v32 = *(void *)(v30 - 8);
    uint64_t v33 = *(unsigned __int8 *)(v32 + 80);
    uint64_t v34 = v28 | v33 | 7;
    uint64_t v982 = v27;
    unsigned int v35 = *(_DWORD *)(v27 + 84);
    uint64_t v961 = v32;
    uint64_t v962 = v30;
    unsigned int v36 = *(_DWORD *)(v32 + 84);
    if (v35 > v36) {
      unsigned int v36 = *(_DWORD *)(v27 + 84);
    }
    unsigned int v941 = v36;
    if (v36 <= 0x7FFFFFFE) {
      unsigned int v37 = 2147483646;
    }
    else {
      unsigned int v37 = v36;
    }
    uint64_t v986 = *(void *)(v27 + 64) + 7;
    uint64_t v960 = v33 + 8;
    uint64_t v946 = *(void *)(*(void *)(v30 - 8) + 64) + 7;
    unint64_t v38 = ((((v946 + ((v33 + 8 + (v986 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v39 = ((((((v1004 + v34 + v989) & ~v34) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    size_t v40 = v1036;
    uint64_t v41 = v1036 + v23;
    size_t v950 = v1004 + v34;
    uint64_t v42 = *(void *)(v1007 - 8);
    uint64_t v43 = *(unsigned __int8 *)(v42 + 80);
    uint64_t v939 = v1036 + v43;
    if (*(_DWORD *)(v42 + 84)) {
      uint64_t v44 = *(void *)(*(void *)(v1007 - 8) + 64);
    }
    else {
      uint64_t v44 = *(void *)(*(void *)(v1007 - 8) + 64) + 1;
    }
    unint64_t v45 = ((v1036 + v43) & ~v43) + v44;
    unint64_t v46 = ((v993 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v1036 > v46) {
      unint64_t v46 = v1036;
    }
    if (v39 <= v38 + ((v1004 + v34 + ((v1036 + v23) & ~v23)) & ~v34) + 16) {
      unint64_t v39 = v38 + ((v1004 + v34 + ((v1036 + v23) & ~v23)) & ~v34) + 16;
    }
    if (((v993 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v45) {
      unint64_t v45 = ((v993 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v46 > v39) {
      unint64_t v39 = v46;
    }
    if (v39 <= v45) {
      unint64_t v47 = v45;
    }
    else {
      unint64_t v47 = v39;
    }
    uint64_t v48 = v23 | v12 | v34;
    unsigned int v975 = v24;
    if (v37 <= v24) {
      unsigned int v49 = v24;
    }
    else {
      unsigned int v49 = v37;
    }
    uint64_t v50 = v29;
    if (v49 <= v1005) {
      unsigned int v49 = v1005;
    }
    unsigned int v933 = v49;
    if (v49 <= 0x7FFFFFFF) {
      int v51 = 0x7FFFFFFF;
    }
    else {
      int v51 = v49;
    }
    uint64_t v1006 = v23;
    uint64_t v990 = v25 + v23;
    if (!v1013) {
      size_t v40 = v1036 + 1;
    }
    uint64_t v52 = *(void *)(v29 - 8);
    uint64_t v53 = *(unsigned __int8 *)(v52 + 80);
    uint64_t v940 = v52;
    uint64_t v978 = v25 + v34;
    size_t v995 = ((((v946 + ((v33 + 8 + (v986 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    unint64_t v54 = (v1011 + v38 + ((v25 + v34 + ((v25 + v23) & ~v23)) & ~v34)) & ~v991;
    unint64_t v973 = v48 + v25;
    unint64_t __n = ((((v54 + v1010 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v55 = __n + ((v48 + v25) & ~v48);
    uint64_t v938 = v25 + v1044;
    size_t v949 = v40 + v996;
    if (*(_DWORD *)(v52 + 84)) {
      uint64_t v56 = *(void *)(*(void *)(v29 - 8) + 64);
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v29 - 8) + 64) + 1;
    }
    if (v25 <= ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v57 = ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else {
      unint64_t v57 = v25;
    }
    if (((((((v40 + v996 + ((v55 + v1044) & ~v1044)) & ~v996) + v1025 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8 <= ((v40 + v996 + ((v25 + v1044) & ~v1044)) & ~v996) + v1025 + 16)
      unint64_t v58 = ((v40 + v996 + ((v25 + v1044) & ~v1044)) & ~v996) + v1025 + 16;
    else {
      unint64_t v58 = ((((((v40 + v996 + ((v55 + v1044) & ~v1044)) & ~v996) + v1025 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
    }
          + 8;
    unint64_t v59 = ((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v60 = v25 + v53;
    v3 = v1003;
    uint64_t v937 = v60;
    unint64_t v61 = (v60 & ~v53) + v56;
    if (v59 <= v61) {
      unint64_t v59 = v61;
    }
    if (v57 <= v58) {
      unint64_t v57 = v58;
    }
    if (v57 <= v59) {
      unint64_t v62 = v59;
    }
    else {
      unint64_t v62 = v57;
    }
    if (v62 + 1 <= v47 + 1) {
      unint64_t v63 = v47 + 1;
    }
    else {
      unint64_t v63 = v62 + 1;
    }
    unsigned int v64 = v1003[v63];
    unsigned int v65 = v64 - 2;
    if (v64 < 2)
    {
      uint64_t v67 = v1031;
    }
    else
    {
      if (v63 <= 3) {
        uint64_t v66 = v63;
      }
      else {
        uint64_t v66 = 4;
      }
      uint64_t v67 = v1031;
      switch(v66)
      {
        case 1:
          int v68 = *v1003;
          if (v63 < 4) {
            goto LABEL_81;
          }
          goto LABEL_82;
        case 2:
          int v68 = *(unsigned __int16 *)v1003;
          if (v63 >= 4) {
            goto LABEL_82;
          }
          goto LABEL_81;
        case 3:
          int v68 = *(unsigned __int16 *)v1003 | (v1003[2] << 16);
          if (v63 >= 4) {
            goto LABEL_82;
          }
          goto LABEL_81;
        case 4:
          int v68 = *(_DWORD *)v1003;
          if (v63 < 4) {
LABEL_81:
          }
            v68 |= v65 << (8 * v63);
LABEL_82:
          unsigned int v64 = v68 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v972 = ~v998;
    uint64_t v999 = ~v1044;
    uint64_t v1037 = ~v996;
    uint64_t v959 = ~v1000;
    uint64_t v968 = ~v991;
    uint64_t v970 = ~v31;
    uint64_t v997 = ~v1006;
    uint64_t v1001 = ~v34;
    uint64_t v958 = ~v33;
    uint64_t v936 = ~v43;
    uint64_t v992 = ~v48;
    uint64_t v935 = ~v53;
    unsigned int v966 = v35;
    unsigned int v994 = v37;
    unint64_t v945 = v54;
    uint64_t v931 = v41;
    size_t v932 = v40;
    size_t v929 = v56;
    size_t v930 = v44;
    if (v64 == 1)
    {
      unsigned int v69 = v1003[v62];
      unsigned int v70 = v69 - 8;
      if (v69 >= 8)
      {
        if (v62 <= 3) {
          uint64_t v71 = v62;
        }
        else {
          uint64_t v71 = 4;
        }
        switch(v71)
        {
          case 1:
            int v72 = *v1003;
            if (v62 < 4) {
              goto LABEL_99;
            }
            goto LABEL_103;
          case 2:
            int v72 = *(unsigned __int16 *)v1003;
            if (v62 < 4) {
              goto LABEL_99;
            }
            goto LABEL_103;
          case 3:
            int v72 = *(unsigned __int16 *)v1003 | (v1003[2] << 16);
            if (v62 < 4) {
              goto LABEL_99;
            }
            goto LABEL_103;
          case 4:
            int v72 = *(_DWORD *)v1003;
            if (v62 < 4) {
LABEL_99:
            }
              unsigned int v69 = (v72 | (v70 << (8 * v62))) + 8;
            else {
LABEL_103:
            }
              unsigned int v69 = v72 + 8;
            break;
          default:
            break;
        }
      }
      switch(v69)
      {
        case 1u:
          uint64_t v928 = *(void *)(v1007 - 8);
          v93 = *(void (**)(unsigned __int8 *, uint64_t))(v1009 + 8);
          v93(v1003, v1021);
          unint64_t v94 = (unint64_t)&v1003[v973] & v992;
          if (v975 == v51)
          {
            v95 = *(uint64_t (**)(unint64_t))(v1009 + 48);
            unint64_t v96 = (unint64_t)&v1003[v973] & v992;
            goto LABEL_124;
          }
          unint64_t v98 = (v990 + v94) & v997;
          unint64_t v99 = (v978 + v98) & v1001;
          if (v994 == v51)
          {
            if (v966 == v994)
            {
              v95 = *(uint64_t (**)(unint64_t))(v982 + 48);
              unint64_t v96 = (v978 + v98) & v1001;
              goto LABEL_124;
            }
            v314 = (unint64_t *)((v986 + v99) & 0xFFFFFFFFFFFFFFF8);
            if (v941 <= 0x7FFFFFFE)
            {
              unint64_t v315 = *v314;
              goto LABEL_742;
            }
            unint64_t v96 = ((unint64_t)v314 + v960) & v958;
            v95 = *(uint64_t (**)(unint64_t))(v961 + 48);
          }
          else
          {
            size_t v193 = v995 + v99;
            if ((v933 & 0x80000000) == 0)
            {
              unint64_t v194 = *(void *)(v193 + 8);
              if (v194 >= 0xFFFFFFFF) {
                LODWORD(v194) = -1;
              }
              if (v194 == -1)
              {
LABEL_125:
                unint64_t v98 = (v990 + v94) & v997;
                unint64_t v99 = (v978 + v98) & v1001;
LABEL_126:
                unint64_t v918 = v94;
                v93((unsigned __int8 *)v94, v1021);
                v93((unsigned __int8 *)v98, v1021);
                (*(void (**)(unint64_t, uint64_t))(v982 + 8))(v99, v981);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v961 + 8))((v960 + ((v986 + v99) & 0xFFFFFFFFFFFFFFF8)) & v958, v962);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v100 = (v1011 + v995 + v99) & v968;
                v101 = *(void (**)(size_t, uint64_t))(v988 + 8);
                v101((v969 + v100) & v970, v957);
                size_t v102 = (v956 + ((v969 + v100) & v970)) & v970;
                v101(v102, v957);
                swift_bridgeObjectRelease();
                unint64_t v103 = (v951
                      + ((((((v943 + v102) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v970;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v988 + 48))(v103, 1, v957)) {
                  v101(v103, v957);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v104 = (uint64_t *)((((((v952 + v103) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v105 = v104[1];
                if ((v105 & 0x3000000000000000) == 0) {
                  sub_10001E9C0(*v104, v105);
                }
                swift_bridgeObjectRelease();
                size_t v106 = v100 + v1010;
                LODWORD(v107) = -1;
                if (*(void *)(v106 + 16) < 0xFFFFFFFFuLL) {
                  uint64_t v107 = *(void *)(v106 + 16);
                }
                if ((int)v107 - 1 < 0)
                {
                  swift_errorRelease();
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v106 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_1000CF144(*(void *)((((v106 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v106 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                unint64_t v94 = v918;
                goto LABEL_137;
              }
              goto LABEL_137;
            }
            unint64_t v96 = (v969 + ((v1011 + v193) & v968)) & v970;
            if (v948 <= 0x7FFFFFFD)
            {
              unint64_t v315 = *(void *)(((v943 + ((v956 + v96) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_742:
              if (v315 >= 0xFFFFFFFF) {
                LODWORD(v315) = -1;
              }
              if ((v315 + 1) < 2) {
                goto LABEL_126;
              }
LABEL_137:
              unint64_t v108 = (v94 + v1044 + __n) & v999;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1031 + 48))(v108, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v1031 + 8))(v108, AssociatedTypeWitness); {
              unint64_t v109 = (v949 + v108) & v1037;
              }
              if (v967 == v985)
              {
                int v110 = (*(uint64_t (**)(size_t))(v984 + 48))((v949 + v108) & v1037);
LABEL_281:
                unint64_t v183 = v1025;
                if (v110) {
                  goto LABEL_309;
                }
                v180 = (uint64_t *)((v987 + v109) & 0xFFFFFFFFFFFFFFF8);
                goto LABEL_283;
              }
              v180 = (uint64_t *)((v987 + v109) & 0xFFFFFFFFFFFFFFF8);
              if (v942 > 0x7FFFFFFE)
              {
                int v110 = (*(uint64_t (**)(unint64_t))(v965 + 48))(((unint64_t)v180 + v963) & v959);
                goto LABEL_281;
              }
              uint64_t v181 = *v180;
              if ((unint64_t)*v180 >= 0xFFFFFFFF) {
                LODWORD(v181) = -1;
              }
              BOOL v182 = (v181 + 1) >= 2;
              unint64_t v183 = v1025;
              if (!v182)
              {
LABEL_283:
                (*(void (**)(unint64_t, uint64_t))(v984 + 8))(v109, v983);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v965 + 8))(((unint64_t)v180 + v963) & v959, v964);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v183 = v1025;
              }
LABEL_309:
              uint64_t v144 = v109 + v183 + 15;
              goto LABEL_310;
            }
            v95 = *(uint64_t (**)(unint64_t))(v988 + 48);
          }
LABEL_124:
          int v97 = v95(v96);
          unint64_t v94 = (unint64_t)&v1003[v973] & v992;
          if (v97) {
            goto LABEL_137;
          }
          goto LABEL_125;
        case 2u:
          int v921 = v51;
          (*(void (**)(unsigned __int8 *, uint64_t))(v1009 + 8))(v1003, v1021);
          unint64_t v111 = (unint64_t)&v1003[v938] & v999;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v67 + 48))(v111, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v67 + 8))(v111, AssociatedTypeWitness); {
          uint64_t v112 = v42;
          }
          unint64_t v113 = (v949 + v111) & v1037;
          if (v967 == v985)
          {
            int v114 = (*(uint64_t (**)(size_t))(v984 + 48))((v949 + v111) & v1037);
LABEL_285:
            unint64_t v186 = v1025;
            if (v114) {
              goto LABEL_288;
            }
            v184 = (uint64_t *)((v987 + v113) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_287;
          }
          v184 = (uint64_t *)((v987 + v113) & 0xFFFFFFFFFFFFFFF8);
          if (v942 > 0x7FFFFFFE)
          {
            int v114 = (*(uint64_t (**)(unint64_t))(v965 + 48))(((unint64_t)v184 + v963) & v959);
            goto LABEL_285;
          }
          uint64_t v185 = *v184;
          if ((unint64_t)*v184 >= 0xFFFFFFFF) {
            LODWORD(v185) = -1;
          }
          BOOL v182 = (v185 + 1) >= 2;
          unint64_t v186 = v1025;
          if (!v182)
          {
LABEL_287:
            (*(void (**)(unint64_t, uint64_t))(v984 + 8))(v113, v983);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v965 + 8))(((unint64_t)v184 + v963) & v959, v964);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v186 = v1025;
          }
LABEL_288:
          size_t v195 = v113 + v186;
          goto LABEL_317;
        case 3u:
          uint64_t v928 = *(void *)(v1007 - 8);
          v115 = *(void (**)(unsigned __int8 *, uint64_t))(v1009 + 8);
          v115(v1003, v1021);
          unint64_t v116 = (unint64_t)&v1003[v973] & v992;
          if (v975 == v51)
          {
            v117 = *(uint64_t (**)(unint64_t))(v1009 + 48);
            unint64_t v118 = (unint64_t)&v1003[v973] & v992;
            goto LABEL_147;
          }
          unint64_t v120 = (v990 + v116) & v997;
          unint64_t v121 = (v978 + v120) & v1001;
          if (v994 == v51)
          {
            if (v966 == v994)
            {
              v117 = *(uint64_t (**)(unint64_t))(v982 + 48);
              unint64_t v118 = (v978 + v120) & v1001;
              goto LABEL_147;
            }
            v316 = (unint64_t *)((v986 + v121) & 0xFFFFFFFFFFFFFFF8);
            if (v941 <= 0x7FFFFFFE)
            {
              unint64_t v317 = *v316;
              goto LABEL_687;
            }
            unint64_t v118 = ((unint64_t)v316 + v960) & v958;
            v117 = *(uint64_t (**)(unint64_t))(v961 + 48);
          }
          else
          {
            size_t v196 = v995 + v121;
            if ((v933 & 0x80000000) == 0)
            {
              unint64_t v197 = *(void *)(v196 + 8);
              if (v197 >= 0xFFFFFFFF) {
                LODWORD(v197) = -1;
              }
              if (v197 == -1)
              {
LABEL_148:
                unint64_t v120 = (v990 + v116) & v997;
                unint64_t v121 = (v978 + v120) & v1001;
LABEL_149:
                v115((unsigned __int8 *)v116, v1021);
                v115((unsigned __int8 *)v120, v1021);
                (*(void (**)(unint64_t, uint64_t))(v982 + 8))(v121, v981);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v961 + 8))((v960 + ((v986 + v121) & 0xFFFFFFFFFFFFFFF8)) & v958, v962);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v122 = (v1011 + v995 + v121) & v968;
                v123 = *(void (**)(size_t, uint64_t))(v988 + 8);
                v123((v969 + v122) & v970, v957);
                size_t v124 = (v956 + ((v969 + v122) & v970)) & v970;
                v123(v124, v957);
                swift_bridgeObjectRelease();
                unint64_t v125 = (v951
                      + ((((((v943 + v124) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v970;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v988 + 48))(v125, 1, v957)) {
                  v123(v125, v957);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v126 = (uint64_t *)((((((v952 + v125) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v127 = v126[1];
                if ((v127 & 0x3000000000000000) == 0) {
                  sub_10001E9C0(*v126, v127);
                }
                swift_bridgeObjectRelease();
                size_t v128 = v122 + v1010;
                LODWORD(v129) = -1;
                if (*(void *)(v128 + 16) < 0xFFFFFFFFuLL) {
                  uint64_t v129 = *(void *)(v128 + 16);
                }
                if ((int)v129 - 1 < 0)
                {
                  swift_errorRelease();
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v128 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_1000CF144(*(void *)((((v128 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v128 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              }
LABEL_227:
              swift_bridgeObjectRelease();
LABEL_311:
              uint64_t v67 = v1031;
              uint64_t v42 = v928;
              goto LABEL_318;
            }
            unint64_t v118 = (v969 + ((v1011 + v196) & v968)) & v970;
            if (v948 <= 0x7FFFFFFD)
            {
              unint64_t v317 = *(void *)(((v943 + ((v956 + v118) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_687:
              if (v317 >= 0xFFFFFFFF) {
                LODWORD(v317) = -1;
              }
              if ((v317 + 1) < 2) {
                goto LABEL_149;
              }
              goto LABEL_227;
            }
            v117 = *(uint64_t (**)(unint64_t))(v988 + 48);
          }
LABEL_147:
          int v119 = v117(v118);
          unint64_t v116 = (unint64_t)&v1003[v973] & v992;
          if (v119) {
            goto LABEL_227;
          }
          goto LABEL_148;
        case 4u:
        case 5u:
        case 7u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v1009 + 8))(v1003, v1021);
          goto LABEL_318;
        case 6u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v1009 + 8))(v1003, v1021);
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v940 + 48))((unint64_t)&v1003[v937] & v935, 1, v29))(*(void (**)(unint64_t, uint64_t))(v940 + 8))((unint64_t)&v1003[v937] & v935, v29); {
          goto LABEL_318;
          }
        default:
          uint64_t v928 = *(void *)(v1007 - 8);
          v77 = *(void (**)(unsigned __int8 *, uint64_t))(v1009 + 8);
          v77(v1003, v1021);
          unint64_t v78 = (unint64_t)&v1003[v973] & v992;
          if (v975 == v51)
          {
            v79 = *(uint64_t (**)(unint64_t))(v1009 + 48);
            unint64_t v80 = (unint64_t)&v1003[v973] & v992;
            goto LABEL_108;
          }
          unint64_t v82 = (v990 + v78) & v997;
          unint64_t v83 = (v978 + v82) & v1001;
          if (v994 == v51)
          {
            if (v966 == v994)
            {
              v79 = *(uint64_t (**)(unint64_t))(v982 + 48);
              unint64_t v80 = (v978 + v82) & v1001;
              goto LABEL_108;
            }
            v312 = (unint64_t *)((v986 + v83) & 0xFFFFFFFFFFFFFFF8);
            if (v941 <= 0x7FFFFFFE)
            {
              unint64_t v313 = *v312;
              goto LABEL_737;
            }
            unint64_t v80 = ((unint64_t)v312 + v960) & v958;
            v79 = *(uint64_t (**)(unint64_t))(v961 + 48);
          }
          else
          {
            size_t v191 = v995 + v83;
            if ((v933 & 0x80000000) == 0)
            {
              unint64_t v192 = *(void *)(v191 + 8);
              if (v192 >= 0xFFFFFFFF) {
                LODWORD(v192) = -1;
              }
              if (v192 == -1)
              {
LABEL_109:
                unint64_t v82 = (v990 + v78) & v997;
                unint64_t v83 = (v978 + v82) & v1001;
LABEL_110:
                unint64_t v917 = v78;
                v77((unsigned __int8 *)v78, v1021);
                v77((unsigned __int8 *)v82, v1021);
                (*(void (**)(unint64_t, uint64_t))(v982 + 8))(v83, v981);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v961 + 8))((v960 + ((v986 + v83) & 0xFFFFFFFFFFFFFFF8)) & v958, v962);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v84 = (v1011 + v995 + v83) & v968;
                v85 = *(void (**)(size_t, uint64_t))(v988 + 8);
                v85((v969 + v84) & v970, v957);
                size_t v86 = (v956 + ((v969 + v84) & v970)) & v970;
                v85(v86, v957);
                swift_bridgeObjectRelease();
                unint64_t v87 = (v951
                     + ((((((v943 + v86) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v970;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v988 + 48))(v87, 1, v957)) {
                  v85(v87, v957);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v88 = (uint64_t *)((((((v952 + v87) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v89 = v88[1];
                if ((v89 & 0x3000000000000000) == 0) {
                  sub_10001E9C0(*v88, v89);
                }
                swift_bridgeObjectRelease();
                size_t v90 = v84 + v1010;
                LODWORD(v91) = -1;
                if (*(void *)(v90 + 16) < 0xFFFFFFFFuLL) {
                  uint64_t v91 = *(void *)(v90 + 16);
                }
                if ((int)v91 - 1 < 0)
                {
                  swift_errorRelease();
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v90 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_1000CF144(*(void *)((((v90 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v90 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                unint64_t v78 = v917;
                goto LABEL_121;
              }
              goto LABEL_121;
            }
            unint64_t v80 = (v969 + ((v1011 + v191) & v968)) & v970;
            if (v948 <= 0x7FFFFFFD)
            {
              unint64_t v313 = *(void *)(((v943 + ((v956 + v80) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_737:
              if (v313 >= 0xFFFFFFFF) {
                LODWORD(v313) = -1;
              }
              if ((v313 + 1) < 2) {
                goto LABEL_110;
              }
LABEL_121:
              unint64_t v92 = __n;
LABEL_188:
              uint64_t v144 = v78 + v92;
LABEL_310:

              goto LABEL_311;
            }
            v79 = *(uint64_t (**)(unint64_t))(v988 + 48);
          }
LABEL_108:
          int v81 = v79(v80);
          unint64_t v78 = (unint64_t)&v1003[v973] & v992;
          if (v81) {
            goto LABEL_121;
          }
          goto LABEL_109;
      }
    }
    unsigned int v73 = v1003[v47];
    unsigned int v74 = v73 - 8;
    if (v73 >= 8)
    {
      if (v47 <= 3) {
        uint64_t v75 = v47;
      }
      else {
        uint64_t v75 = 4;
      }
      switch(v75)
      {
        case 1:
          int v76 = *v1003;
          if (v47 < 4) {
            goto LABEL_164;
          }
          goto LABEL_168;
        case 2:
          int v76 = *(unsigned __int16 *)v1003;
          if (v47 < 4) {
            goto LABEL_164;
          }
          goto LABEL_168;
        case 3:
          int v76 = *(unsigned __int16 *)v1003 | (v1003[2] << 16);
          if (v47 < 4) {
            goto LABEL_164;
          }
          goto LABEL_168;
        case 4:
          int v76 = *(_DWORD *)v1003;
          if (v47 < 4) {
LABEL_164:
          }
            unsigned int v73 = (v76 | (v74 << (8 * v47))) + 8;
          else {
LABEL_168:
          }
            unsigned int v73 = v76 + 8;
          break;
        default:
          break;
      }
    }
    switch(v73)
    {
      case 1u:
        uint64_t v928 = *(void *)(v1007 - 8);
        v145 = *(void (**)(unsigned __int8 *, uint64_t))(v67 + 8);
        v145(v1003, AssociatedTypeWitness);
        unint64_t v146 = (unint64_t)&v1003[v974] & v972;
        if (v1013 == v976)
        {
          v147 = *(uint64_t (**)(unint64_t))(v67 + 48);
          unint64_t v148 = (unint64_t)&v1003[v974] & v972;
          goto LABEL_191;
        }
        unint64_t v150 = (v979 + v146) & v999;
        unint64_t v151 = (v980 + v150) & v1037;
        if (v985 == v976)
        {
          if (v967 == v985)
          {
            v147 = *(uint64_t (**)(unint64_t))(v984 + 48);
            unint64_t v148 = (v980 + v150) & v1037;
            goto LABEL_191;
          }
          v320 = (unint64_t *)((v987 + v151) & 0xFFFFFFFFFFFFFFF8);
          if (v942 <= 0x7FFFFFFE)
          {
            unint64_t v321 = *v320;
            goto LABEL_697;
          }
          unint64_t v148 = ((unint64_t)v320 + v963) & v959;
          v147 = *(uint64_t (**)(unint64_t))(v965 + 48);
        }
        else
        {
          unint64_t v200 = v1025 + v151;
          if ((v934 & 0x80000000) == 0)
          {
            unint64_t v201 = *(void *)(v200 + 8);
            if (v201 >= 0xFFFFFFFF) {
              LODWORD(v201) = -1;
            }
            if (v201 == -1)
            {
LABEL_192:
              unint64_t v150 = (v979 + v146) & v999;
              unint64_t v151 = (v980 + v150) & v1037;
LABEL_193:
              unint64_t v920 = v146;
              v145((unsigned __int8 *)v146, AssociatedTypeWitness);
              v145((unsigned __int8 *)v150, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v984 + 8))(v151, v983);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v965 + 8))((v963 + ((v987 + v151) & 0xFFFFFFFFFFFFFFF8)) & v959, v964);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v152 = (v1011 + v1025 + v151) & v968;
              v153 = *(void (**)(unint64_t, uint64_t))(v988 + 8);
              v153((v969 + v152) & v970, v957);
              unint64_t v154 = (v956 + ((v969 + v152) & v970)) & v970;
              v153(v154, v957);
              swift_bridgeObjectRelease();
              unint64_t v155 = (v951
                    + ((((((v943 + v154) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v970;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v988 + 48))(v155, 1, v957)) {
                v153(v155, v957);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v156 = (uint64_t *)((((((v952 + v155) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v157 = v156[1];
              if ((v157 & 0x3000000000000000) == 0) {
                sub_10001E9C0(*v156, v157);
              }
              swift_bridgeObjectRelease();
              unint64_t v158 = v1010 + v152;
              LODWORD(v159) = -1;
              if (*(void *)(v158 + 16) < 0xFFFFFFFFuLL) {
                uint64_t v159 = *(void *)(v158 + 16);
              }
              if ((int)v159 - 1 < 0)
              {
                swift_errorRelease();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v158 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1000CF144(*(void *)((((v158 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v158 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              unint64_t v146 = v920;
            }
LABEL_204:
            unint64_t v160 = (v146 + v1006 + v955) & v997;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1009 + 48))(v160, 1, v1021)) {
              (*(void (**)(unint64_t, uint64_t))(v1009 + 8))(v160, v1021);
            }
            unint64_t v109 = (v950 + v160) & v1001;
            if (v966 == v994)
            {
              int v161 = (*(uint64_t (**)(size_t))(v982 + 48))((v950 + v160) & v1001);
            }
            else
            {
              v187 = (uint64_t *)((v986 + v109) & 0xFFFFFFFFFFFFFFF8);
              if (v941 <= 0x7FFFFFFE)
              {
                uint64_t v188 = *v187;
                if ((unint64_t)*v187 >= 0xFFFFFFFF) {
                  LODWORD(v188) = -1;
                }
                if ((v188 + 1) >= 2) {
                  goto LABEL_308;
                }
                goto LABEL_307;
              }
              int v161 = (*(uint64_t (**)(unint64_t))(v961 + 48))(((unint64_t)v187 + v960) & v958);
            }
            if (v161)
            {
LABEL_308:
              unint64_t v183 = v995;
              goto LABEL_309;
            }
            v187 = (uint64_t *)((v986 + v109) & 0xFFFFFFFFFFFFFFF8);
LABEL_307:
            (*(void (**)(unint64_t, uint64_t))(v982 + 8))(v109, v981);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v961 + 8))(((unint64_t)v187 + v960) & v958, v962);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_308;
          }
          unint64_t v148 = (v969 + ((v1011 + v200) & v968)) & v970;
          if (v948 <= 0x7FFFFFFD)
          {
            unint64_t v321 = *(void *)(((v943 + ((v956 + v148) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_697:
            if (v321 >= 0xFFFFFFFF) {
              LODWORD(v321) = -1;
            }
            if ((v321 + 1) < 2) {
              goto LABEL_193;
            }
            goto LABEL_204;
          }
          v147 = *(uint64_t (**)(unint64_t))(v988 + 48);
        }
LABEL_191:
        int v149 = v147(v148);
        unint64_t v146 = (unint64_t)&v1003[v974] & v972;
        if (v149) {
          goto LABEL_204;
        }
        goto LABEL_192;
      case 2u:
        int v921 = v51;
        uint64_t v112 = *(void *)(v1007 - 8);
        (*(void (**)(unsigned __int8 *, uint64_t))(v67 + 8))(v1003, AssociatedTypeWitness);
        unint64_t v162 = (unint64_t)&v1003[v41] & v997;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1009 + 48))(v162, 1, v1021)) {
          (*(void (**)(unint64_t, uint64_t))(v1009 + 8))(v162, v1021);
        }
        size_t v163 = (v950 + v162) & v1001;
        if (v966 == v994)
        {
          int v164 = (*(uint64_t (**)(size_t))(v982 + 48))((v950 + v162) & v1001);
        }
        else
        {
          v189 = (uint64_t *)((v986 + v163) & 0xFFFFFFFFFFFFFFF8);
          if (v941 <= 0x7FFFFFFE)
          {
            uint64_t v190 = *v189;
            if ((unint64_t)*v189 >= 0xFFFFFFFF) {
              LODWORD(v190) = -1;
            }
            if ((v190 + 1) >= 2)
            {
LABEL_316:
              size_t v195 = v995 + v163;
LABEL_317:

              uint64_t v67 = v1031;
              uint64_t v42 = v112;
              int v51 = v921;
LABEL_318:
              unsigned int v202 = a2[v63];
              unsigned int v203 = v202 - 2;
              if (v202 >= 2)
              {
                if (v63 <= 3) {
                  uint64_t v204 = v63;
                }
                else {
                  uint64_t v204 = 4;
                }
                switch(v204)
                {
                  case 1:
                    int v205 = *a2;
                    if (v63 >= 4) {
                      goto LABEL_338;
                    }
                    goto LABEL_326;
                  case 2:
                    int v205 = *(unsigned __int16 *)a2;
                    if (v63 < 4) {
                      goto LABEL_326;
                    }
                    goto LABEL_338;
                  case 3:
                    int v205 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                    if (v63 < 4) {
                      goto LABEL_326;
                    }
                    goto LABEL_338;
                  case 4:
                    int v205 = *(_DWORD *)a2;
                    if (v63 >= 4)
                    {
LABEL_338:
                      if (v205 != -1)
                      {
LABEL_339:
                        unsigned int v210 = a2[v47];
                        unsigned int v211 = v210 - 8;
                        if (v210 < 8)
                        {
                          uint64_t v213 = v988;
                          uint64_t v214 = AssociatedTypeWitness;
                        }
                        else
                        {
                          if (v47 <= 3) {
                            uint64_t v212 = v47;
                          }
                          else {
                            uint64_t v212 = 4;
                          }
                          uint64_t v213 = v988;
                          uint64_t v214 = AssociatedTypeWitness;
                          switch(v212)
                          {
                            case 1:
                              int v215 = *a2;
                              if (v47 < 4) {
                                goto LABEL_372;
                              }
                              goto LABEL_376;
                            case 2:
                              int v215 = *(unsigned __int16 *)a2;
                              if (v47 < 4) {
                                goto LABEL_372;
                              }
                              goto LABEL_376;
                            case 3:
                              int v215 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                              if (v47 < 4) {
                                goto LABEL_372;
                              }
                              goto LABEL_376;
                            case 4:
                              int v215 = *(_DWORD *)a2;
                              if (v47 < 4) {
LABEL_372:
                              }
                                unsigned int v210 = (v215 | (v211 << (8 * v47))) + 8;
                              else {
LABEL_376:
                              }
                                unsigned int v210 = v215 + 8;
                              break;
                            default:
                              break;
                          }
                        }
                        switch(v210)
                        {
                          case 1u:
                            unint64_t v926 = v47;
                            v241 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16);
                            v241(v1003, a2, v214);
                            v1045 = (void *)((unint64_t)&v1003[v974] & v972);
                            v242 = (void *)((unint64_t)&a2[v974] & v972);
                            if (v1013 == v976)
                            {
                              int v243 = (*(uint64_t (**)(unint64_t))(v67 + 48))((unint64_t)&a2[v974] & v972);
LABEL_595:
                              if (v243)
                              {
LABEL_596:
                                unint64_t v637 = (unint64_t)&v1003[v974] & v972;
                                memcpy(v1045, v242, v955);
                                uint64_t v638 = v944;
                                size_t v639 = v995;
                                goto LABEL_597;
                              }
                              unint64_t v261 = ((unint64_t)v242 + v979) & v999;
                              unint64_t v262 = (v980 + v261) & v1037;
LABEL_599:
                              unint64_t v1018 = v63;
                              v241((unsigned __int8 *)v1045, (unsigned __int8 *)v242, v214);
                              unint64_t v641 = ((unint64_t)v1045 + v979) & v999;
                              v241((unsigned __int8 *)v641, (unsigned __int8 *)v261, v214);
                              unint64_t v642 = (v980 + v641) & v1037;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v984 + 16))(v642, v262, v983);
                              v643 = (void *)((v987 + v642) & 0xFFFFFFFFFFFFFFF8);
                              v644 = (void *)((v987 + v262) & 0xFFFFFFFFFFFFFFF8);
                              void *v643 = *v644;
                              unint64_t v645 = ((unint64_t)v643 + v963) & v959;
                              unint64_t v646 = ((unint64_t)v644 + v963) & v959;
                              v647 = *(void (**)(unint64_t, unint64_t, uint64_t))(v965 + 16);
                              swift_bridgeObjectRetain();
                              v647(v645, v646, v964);
                              v648 = (void *)((v947 + v646) & 0xFFFFFFFFFFFFFFF8);
                              v649 = (void *)((v947 + v645) & 0xFFFFFFFFFFFFFFF8);
                              void *v649 = *v648;
                              v650 = (void *)(((unint64_t)v649 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v651 = (void *)(((unint64_t)v648 + 15) & 0xFFFFFFFFFFFFFFF8);
                              void *v650 = *v651;
                              v650[1] = v651[1];
                              v652 = (void *)(v1025 + v642);
                              void *v652 = *(void *)(v1025 + v262);
                              v652[1] = *(void *)(v1025 + v262 + 8);
                              unint64_t v653 = (v1011 + v1025 + v642) & v968;
                              unint64_t v654 = (v1011 + v1025 + v262) & v968;
                              *(unsigned char *)unint64_t v653 = *(unsigned char *)v654;
                              uint64_t v655 = v653 | 4;
                              int v656 = *(_DWORD *)(v654 | 4);
                              *(unsigned char *)(v655 + 4) = *(unsigned char *)((v654 | 4) + 4);
                              *(_DWORD *)uint64_t v655 = v656;
                              *(_WORD *)(v653 + 10) = *(_WORD *)(v654 + 0xA);
                              unint64_t v1040 = v653;
                              unint64_t v657 = (v969 + v653) & v970;
                              unint64_t v1029 = v654;
                              unint64_t v658 = (v969 + v654) & v970;
                              v659 = *(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 16);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              v659(v657, v658, v957);
                              size_t v660 = (v956 + v657) & v970;
                              size_t v661 = (v956 + v658) & v970;
                              v659(v660, v661, v957);
                              v662 = (unsigned char *)(v660 + v953);
                              unsigned char *v662 = *(unsigned char *)(v661 + v953);
                              v662[1] = *(unsigned char *)(v661 + v953 + 1);
                              v662[2] = *(unsigned char *)(v661 + v953 + 2);
                              v662[3] = *(unsigned char *)(v661 + v953 + 3);
                              v662[4] = *(unsigned char *)(v661 + v953 + 4);
                              unint64_t v663 = (v660 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v664 = (v661 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v663 = *(void *)v664;
                              *(void *)(v663 + 8) = *(void *)(v664 + 8);
                              *(unsigned char *)(v663 + 16) = *(unsigned char *)(v664 + 16);
                              *(unsigned char *)(v663 + 17) = *(unsigned char *)(v664 + 17);
                              *(unsigned char *)(v663 + 18) = *(unsigned char *)(v664 + 18);
                              *(unsigned char *)(v663 + 19) = *(unsigned char *)(v664 + 19);
                              unint64_t v665 = (v663 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v666 = (v664 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v665 = *(void *)v666;
                              *(unsigned char *)(v665 + 8) = *(unsigned char *)(v666 + 8);
                              *(unsigned char *)(v665 + 9) = *(unsigned char *)(v666 + 9);
                              *(unsigned char *)(v665 + 10) = *(unsigned char *)(v666 + 10);
                              *(unsigned char *)(v665 + 11) = *(unsigned char *)(v666 + 11);
                              *(unsigned char *)(v665 + 12) = *(unsigned char *)(v666 + 12);
                              v667 = (void *)((v664 + 47) & 0xFFFFFFFFFFFFFFF8);
                              v668 = (void *)((v663 + 47) & 0xFFFFFFFFFFFFFFF8);
                              void *v668 = *v667;
                              unint64_t v669 = ((unint64_t)v668 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v670 = ((unint64_t)v667 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v669 = *(void *)v670;
                              *(unsigned char *)(v669 + 8) = *(unsigned char *)(v670 + 8);
                              *(unsigned char *)(v669 + 9) = *(unsigned char *)(v670 + 9);
                              v671 = (void *)((v951 + v669) & v970);
                              v672 = (const void *)((v951 + v670) & v970);
                              v673 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v213 + 48);
                              swift_bridgeObjectRetain();
                              if (v673(v672, 1, v957))
                              {
                                memcpy(v671, v672, v977);
                              }
                              else
                              {
                                v659((unint64_t)v671, (unint64_t)v672, v957);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v213 + 56))(v671, 0, 1, v957);
                              }
                              size_t v639 = v995;
                              v674 = (void *)(((unint64_t)v671 + v952) & 0xFFFFFFFFFFFFFFF8);
                              v675 = (void *)(((unint64_t)v672 + v952) & 0xFFFFFFFFFFFFFFF8);
                              void *v674 = *v675;
                              unint64_t v676 = ((unint64_t)v674 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v677 = ((unint64_t)v675 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v678 = *(void *)v677;
                              *(unsigned char *)(v676 + 8) = *(unsigned char *)(v677 + 8);
                              *(void *)unint64_t v676 = v678;
                              v679 = (void *)(((unint64_t)v674 + 31) & 0xFFFFFFFFFFFFFFF8);
                              v680 = (void *)(((unint64_t)v675 + 31) & 0xFFFFFFFFFFFFFFF8);
                              void *v679 = *v680;
                              unint64_t v681 = ((unint64_t)v679 + 15) & 0xFFFFFFFFFFFFFFF8;
                              v682 = (uint64_t *)(((unint64_t)v680 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v683 = v682[1];
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              if ((v683 & 0x3000000000000000) != 0)
                              {
                                *(_OWORD *)unint64_t v681 = *(_OWORD *)v682;
                              }
                              else
                              {
                                uint64_t v684 = *v682;
                                sub_10001EBB0(*v682, v683);
                                *(void *)unint64_t v681 = v684;
                                *(void *)(v681 + 8) = v683;
                              }
                              unint64_t v685 = (v681 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v686 = ((unint64_t)v682 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v687 = *(void *)v686;
                              *(unsigned char *)(v685 + 8) = *(unsigned char *)(v686 + 8);
                              *(void *)unint64_t v685 = v687;
                              *(unsigned char *)(v685 + 9) = *(unsigned char *)(v686 + 9);
                              unint64_t v688 = (v685 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v689 = (v686 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              int v690 = *(_DWORD *)v689;
                              *(unsigned char *)(v688 + 4) = *(unsigned char *)(v689 + 4);
                              *(_DWORD *)unint64_t v688 = v690;
                              v691 = (void *)((v685 + 25) & 0xFFFFFFFFFFFFFFF8);
                              v692 = (void *)((v686 + 25) & 0xFFFFFFFFFFFFFFF8);
                              void *v691 = *v692;
                              v691[1] = v692[1];
                              unint64_t v693 = v1010 + v1040;
                              v694 = (long long *)(v1010 + v1029);
                              unint64_t v695 = *(void *)(v1010 + v1029 + 16);
                              if (v695 >= 0xFFFFFFFF) {
                                LODWORD(v695) = -1;
                              }
                              int v696 = v695 - 1;
                              swift_bridgeObjectRetain();
                              if (v696 < 0)
                              {
                                *(void *)unint64_t v693 = *(void *)v694;
                                *(unsigned char *)(v693 + 8) = *((unsigned char *)v694 + 8);
                                *(unsigned char *)(v693 + 9) = *((unsigned char *)v694 + 9);
                                uint64_t v710 = *((void *)v694 + 2);
                                swift_errorRetain();
                                *(void *)(v693 + 16) = v710;
                                uint64_t v711 = *((void *)v694 + 3);
                                swift_errorRetain();
                                *(void *)(v693 + 24) = v711;
                                *(unsigned char *)(v693 + 32) = *((unsigned char *)v694 + 32);
                                *(unsigned char *)(v693 + 33) = *((unsigned char *)v694 + 33);
                                *(unsigned char *)(v693 + 34) = *((unsigned char *)v694 + 34);
                                *(void *)(v693 + 40) = *((void *)v694 + 5);
                                *(void *)(v693 + 48) = *((void *)v694 + 6);
                                *(void *)(v693 + 56) = *((void *)v694 + 7);
                                *(void *)(v693 + 64) = *((void *)v694 + 8);
                                *(unsigned char *)(v693 + 72) = *((unsigned char *)v694 + 72);
                                *(void *)(v693 + 80) = *((void *)v694 + 10);
                                *(void *)(v693 + 88) = *((void *)v694 + 11);
                                v1041 = (void *)*((void *)v694 + 12);
                                *(void *)(v693 + 96) = v1041;
                                *(unsigned char *)(v693 + 104) = *((unsigned char *)v694 + 104);
                                *(unsigned char *)(v693 + 105) = *((unsigned char *)v694 + 105);
                                *(void *)(v693 + 112) = *((void *)v694 + 14);
                                *(void *)(v693 + 120) = *((void *)v694 + 15);
                                *(void *)(v693 + 128) = *((void *)v694 + 16);
                                *(void *)(v693 + 136) = *((void *)v694 + 17);
                                *(void *)(v693 + 144) = *((void *)v694 + 18);
                                *(void *)(v693 + 152) = *((void *)v694 + 19);
                                *(void *)(v693 + 160) = *((void *)v694 + 20);
                                *(void *)(v693 + 168) = *((void *)v694 + 21);
                                *(unsigned char *)(v693 + 176) = *((unsigned char *)v694 + 176);
                                *(void *)(v693 + 184) = *((void *)v694 + 23);
                                uint64_t v712 = *((void *)v694 + 24);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                id v713 = v1041;
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                if (v712)
                                {
                                  *(void *)(v693 + 192) = v712;
                                  *(void *)(v693 + 200) = *((void *)v694 + 25);
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRetain();
                                }
                                else
                                {
                                  *(_OWORD *)(v693 + 192) = v694[12];
                                }
                                v3 = v1003;
                                unint64_t v63 = v1018;
                                unsigned int v709 = v948;
                                uint64_t v638 = v944;
                                size_t v639 = v995;
                                *(void *)(v693 + 208) = *((void *)v694 + 26);
                                *(void *)(v693 + 216) = *((void *)v694 + 27);
                                *(void *)(v693 + 224) = *((void *)v694 + 28);
                                *(void *)(v693 + 232) = *((void *)v694 + 29);
                                *(void *)(v693 + 240) = *((void *)v694 + 30);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                              }
                              else
                              {
                                long long v697 = *v694;
                                long long v698 = v694[1];
                                long long v699 = v694[3];
                                *(_OWORD *)(v693 + 32) = v694[2];
                                *(_OWORD *)(v693 + 48) = v699;
                                *(_OWORD *)unint64_t v693 = v697;
                                *(_OWORD *)(v693 + 16) = v698;
                                long long v700 = v694[4];
                                long long v701 = v694[5];
                                long long v702 = v694[7];
                                *(_OWORD *)(v693 + 96) = v694[6];
                                *(_OWORD *)(v693 + 112) = v702;
                                *(_OWORD *)(v693 + 64) = v700;
                                *(_OWORD *)(v693 + 80) = v701;
                                long long v703 = v694[8];
                                long long v704 = v694[9];
                                long long v705 = v694[11];
                                *(_OWORD *)(v693 + 160) = v694[10];
                                *(_OWORD *)(v693 + 176) = v705;
                                *(_OWORD *)(v693 + 128) = v703;
                                *(_OWORD *)(v693 + 144) = v704;
                                long long v706 = v694[12];
                                long long v707 = v694[13];
                                long long v708 = v694[14];
                                *(void *)(v693 + 240) = *((void *)v694 + 30);
                                *(_OWORD *)(v693 + 208) = v707;
                                *(_OWORD *)(v693 + 224) = v708;
                                *(_OWORD *)(v693 + 192) = v706;
                                unint64_t v63 = v1018;
                                unsigned int v709 = v948;
                                uint64_t v638 = v944;
                              }
                              v870 = (_OWORD *)((v693 + 255) & 0xFFFFFFFFFFFFFFF8);
                              v871 = (long long *)(((unint64_t)v694 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v872 = *v871;
                              *(_OWORD *)((char *)v870 + 9) = *(long long *)((char *)v871 + 9);
                              _OWORD *v870 = v872;
                              unint64_t v873 = (v693 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v874 = ((unint64_t)v694 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v875 = *(_OWORD *)v874;
                              *(unsigned char *)(v873 + 16) = *(unsigned char *)(v874 + 16);
                              *(_OWORD *)unint64_t v873 = v875;
                              v876 = (void *)((v693 + 311) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v877 = ((unint64_t)v694 + 311) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v878 = *(void *)v877;
                              v877 += 15;
                              void *v876 = v878;
                              v879 = (void *)(((unint64_t)v876 + 15) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v880 = *(void *)(v877 & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v881 = *(void *)((v877 & 0xFFFFFFFFFFFFFFF8) + 8);
                              sub_10018B584(v880, v881);
                              void *v879 = v880;
                              v879[1] = v881;
                              size_t v640 = v953;
                              v242 = (void *)((unint64_t)&a2[v974] & v972);
                              unint64_t v637 = (unint64_t)&v1003[v974] & v972;
                              if (v709)
                              {
LABEL_662:
                                unint64_t v882 = ((((v638
                                         + ((((((((((v971 + v640 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                v883 = (void *)((v637 + v1006 + v882) & v997);
                                v884 = (const void *)(((unint64_t)v242 + v1006 + v882) & v997);
                                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1009 + 48))(v884, 1, v1021))
                                {
                                  memcpy(v883, v884, v1004);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v1009 + 16))(v883, v884, v1021);
                                  (*(void (**)(void *, void, uint64_t, uint64_t))(v1009 + 56))(v883, 0, 1, v1021);
                                }
                                v885 = (char *)(((unint64_t)v883 + v950) & v1001);
                                v886 = (char *)(((unint64_t)v884 + v950) & v1001);
                                if (v966 == v994)
                                {
                                  int v887 = (*(uint64_t (**)(char *))(v982 + 48))(v886);
                                }
                                else
                                {
                                  v888 = (uint64_t *)((unint64_t)&v886[v986] & 0xFFFFFFFFFFFFFFF8);
                                  if (v941 <= 0x7FFFFFFE)
                                  {
                                    uint64_t v889 = *v888;
                                    if ((unint64_t)*v888 >= 0xFFFFFFFF) {
                                      LODWORD(v889) = -1;
                                    }
                                    if ((v889 + 1) >= 2) {
                                      goto LABEL_674;
                                    }
                                    goto LABEL_676;
                                  }
                                  int v887 = (*(uint64_t (**)(unint64_t))(v961 + 48))(((unint64_t)v888
                                                                                                  + v960) & v958);
                                }
                                if (v887)
                                {
LABEL_674:
                                  memcpy(v885, v886, v639);
LABEL_677:
                                  *(void *)&v885[v639] = *(void *)&v886[v639];
                                  v898 = (void *)((unint64_t)&v885[v639 + 15] & 0xFFFFFFFFFFFFFFF8);
                                  v899 = (void *)((unint64_t)&v886[v639 + 15] & 0xFFFFFFFFFFFFFFF8);
                                  void *v898 = *v899;
                                  v311 = *(void **)(((unint64_t)v899 + 15) & 0xFFFFFFFFFFFFFFF8);
                                  *(void *)(((unint64_t)v898 + 15) & 0xFFFFFFFFFFFFFFF8) = v311;
                                  v3[v926] = 1;
                                  goto LABEL_678;
                                }
                                v888 = (uint64_t *)((unint64_t)&v886[v986] & 0xFFFFFFFFFFFFFFF8);
LABEL_676:
                                (*(void (**)(char *, char *, uint64_t))(v982 + 16))(v885, v886, v981);
                                v890 = (void *)((unint64_t)&v885[v986] & 0xFFFFFFFFFFFFFFF8);
                                void *v890 = *v888;
                                unint64_t v891 = ((unint64_t)v890 + v960) & v958;
                                unint64_t v892 = ((unint64_t)v888 + v960) & v958;
                                v893 = *(void (**)(unint64_t, unint64_t, uint64_t))(v961 + 16);
                                swift_bridgeObjectRetain();
                                v893(v891, v892, v962);
                                v894 = (void *)((v946 + v891) & 0xFFFFFFFFFFFFFFF8);
                                v895 = (void *)((v946 + v892) & 0xFFFFFFFFFFFFFFF8);
                                void *v894 = *v895;
                                v896 = (void *)(((unint64_t)v894 + 15) & 0xFFFFFFFFFFFFFFF8);
                                v897 = (void *)(((unint64_t)v895 + 15) & 0xFFFFFFFFFFFFFFF8);
                                void *v896 = *v897;
                                v896[1] = v897[1];
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                goto LABEL_677;
                              }
LABEL_597:
                              size_t v640 = v977;
                              goto LABEL_662;
                            }
                            unint64_t v261 = ((unint64_t)v242 + v979) & v999;
                            unint64_t v262 = (v980 + v261) & v1037;
                            if (v985 == v976)
                            {
                              if (v967 == v985)
                              {
                                int v243 = (*(uint64_t (**)(unint64_t))(v984 + 48))((v980 + v261) & v1037);
                                goto LABEL_595;
                              }
                              v332 = (unint64_t *)((v987 + v262) & 0xFFFFFFFFFFFFFFF8);
                              if (v942 > 0x7FFFFFFE)
                              {
                                int v243 = (*(uint64_t (**)(unint64_t))(v965 + 48))(((unint64_t)v332
                                                                                                + v963) & v959);
                                goto LABEL_595;
                              }
                              unint64_t v333 = *v332;
                            }
                            else
                            {
                              unint64_t v286 = v1025 + v262;
                              if ((v934 & 0x80000000) == 0)
                              {
                                unint64_t v287 = *(void *)(v286 + 8);
                                if (v287 >= 0xFFFFFFFF) {
                                  LODWORD(v287) = -1;
                                }
                                int v243 = v287 + 1;
                                goto LABEL_595;
                              }
                              uint64_t v341 = (v969 + ((v1011 + v286) & v968)) & v970;
                              if (v948 > 0x7FFFFFFD)
                              {
                                int v243 = (*(uint64_t (**)(uint64_t))(v213 + 48))(v341);
                                goto LABEL_595;
                              }
                              unint64_t v333 = *(void *)(((v943 + ((v956 + v341) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v333 >= 0xFFFFFFFF) {
                              LODWORD(v333) = -1;
                            }
                            if ((v333 + 1) >= 2) {
                              goto LABEL_596;
                            }
                            goto LABEL_599;
                          case 2u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1003, a2, v214);
                            v244 = (void *)((unint64_t)&v1003[v931] & v997);
                            v245 = (const void *)((unint64_t)&a2[v931] & v997);
                            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1009 + 48))(v245, 1, v1021))
                            {
                              memcpy(v244, v245, v1004);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1009 + 16))(v244, v245, v1021);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v1009 + 56))(v244, 0, 1, v1021);
                            }
                            v271 = (char *)(((unint64_t)v244 + v950) & v1001);
                            v272 = (char *)(((unint64_t)v245 + v950) & v1001);
                            if (v966 == v994)
                            {
                              int v273 = (*(uint64_t (**)(char *))(v982 + 48))(v272);
                            }
                            else
                            {
                              v274 = (uint64_t *)((unint64_t)&v272[v986] & 0xFFFFFFFFFFFFFFF8);
                              if (v941 <= 0x7FFFFFFE)
                              {
                                uint64_t v275 = *v274;
                                if ((unint64_t)*v274 >= 0xFFFFFFFF) {
                                  LODWORD(v275) = -1;
                                }
                                if ((v275 + 1) >= 2) {
                                  goto LABEL_468;
                                }
                                goto LABEL_470;
                              }
                              int v273 = (*(uint64_t (**)(unint64_t))(v961 + 48))(((unint64_t)v274
                                                                                              + v960) & v958);
                            }
                            if (v273)
                            {
LABEL_468:
                              memcpy(v271, v272, v995);
                              goto LABEL_471;
                            }
                            v274 = (uint64_t *)((unint64_t)&v272[v986] & 0xFFFFFFFFFFFFFFF8);
LABEL_470:
                            (*(void (**)(char *, char *, uint64_t))(v982 + 16))(v271, v272, v981);
                            v302 = (void *)((unint64_t)&v271[v986] & 0xFFFFFFFFFFFFFFF8);
                            void *v302 = *v274;
                            unint64_t v303 = ((unint64_t)v302 + v960) & v958;
                            unint64_t v304 = ((unint64_t)v274 + v960) & v958;
                            v305 = *(void (**)(unint64_t, unint64_t, uint64_t))(v961 + 16);
                            swift_bridgeObjectRetain();
                            v305(v303, v304, v962);
                            v306 = (void *)((v946 + v303) & 0xFFFFFFFFFFFFFFF8);
                            v307 = (void *)((v946 + v304) & 0xFFFFFFFFFFFFFFF8);
                            void *v306 = *v307;
                            v308 = (void *)(((unint64_t)v306 + 15) & 0xFFFFFFFFFFFFFFF8);
                            v309 = (void *)(((unint64_t)v307 + 15) & 0xFFFFFFFFFFFFFFF8);
                            void *v308 = *v309;
                            v308[1] = v309[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
LABEL_471:
                            v310 = &v271[v995];
                            char *v310 = v272[v995];
                            v311 = *(void **)&v272[v995 + 8];
                            *((void *)v310 + 1) = v311;
                            v1003[v47] = 2;
LABEL_678:
                            id v900 = v311;
                            goto LABEL_683;
                          case 3u:
                            unint64_t v927 = v47;
                            v246 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16);
                            v246(v1003, a2, v214);
                            v247 = (void *)((unint64_t)&v1003[v974] & v972);
                            v248 = (void *)((unint64_t)&a2[v974] & v972);
                            if (v1013 == v976)
                            {
                              int v249 = (*(uint64_t (**)(void *))(v67 + 48))(v248);
                              goto LABEL_612;
                            }
                            unint64_t v263 = ((unint64_t)v248 + v979) & v999;
                            unint64_t v264 = (v980 + v263) & v1037;
                            if (v985 == v976)
                            {
                              if (v967 == v985)
                              {
                                int v249 = (*(uint64_t (**)(unint64_t))(v984 + 48))((v980 + v263) & v1037);
                                goto LABEL_612;
                              }
                              v334 = (unint64_t *)((v987 + v264) & 0xFFFFFFFFFFFFFFF8);
                              if (v942 <= 0x7FFFFFFE)
                              {
                                unint64_t v335 = *v334;
                                goto LABEL_732;
                              }
                              int v249 = (*(uint64_t (**)(unint64_t))(v965 + 48))(((unint64_t)v334
                                                                                              + v963) & v959);
                            }
                            else
                            {
                              unint64_t v288 = v1025 + v264;
                              if ((v934 & 0x80000000) != 0)
                              {
                                uint64_t v342 = (v969 + ((v1011 + v288) & v968)) & v970;
                                if (v948 <= 0x7FFFFFFD)
                                {
                                  unint64_t v335 = *(void *)(((v943 + ((v956 + v342) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_732:
                                  if (v335 >= 0xFFFFFFFF) {
                                    LODWORD(v335) = -1;
                                  }
                                  if ((v335 + 1) >= 2) {
                                    goto LABEL_613;
                                  }
                                  goto LABEL_616;
                                }
                                int v249 = (*(uint64_t (**)(uint64_t))(v213 + 48))(v342);
                              }
                              else
                              {
                                unint64_t v289 = *(void *)(v288 + 8);
                                if (v289 >= 0xFFFFFFFF) {
                                  LODWORD(v289) = -1;
                                }
                                int v249 = v289 + 1;
                              }
                            }
LABEL_612:
                            if (v249)
                            {
LABEL_613:
                              memcpy(v247, v248, v955);
LABEL_614:
                              size_t v714 = v977;
                              goto LABEL_682;
                            }
                            unint64_t v263 = ((unint64_t)v248 + v979) & v999;
                            unint64_t v264 = (v980 + v263) & v1037;
LABEL_616:
                            unint64_t v1019 = v63;
                            v246((unsigned __int8 *)v247, (unsigned __int8 *)v248, v214);
                            v246((unsigned __int8 *)(((unint64_t)v247 + v979) & v999), (unsigned __int8 *)v263, v214);
                            unint64_t v715 = (v980 + (((unint64_t)v247 + v979) & v999)) & v1037;
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v984 + 16))(v715, v264, v983);
                            v716 = (void *)((v987 + v715) & 0xFFFFFFFFFFFFFFF8);
                            v717 = (void *)((v987 + v264) & 0xFFFFFFFFFFFFFFF8);
                            void *v716 = *v717;
                            unint64_t v718 = ((unint64_t)v716 + v963) & v959;
                            unint64_t v719 = ((unint64_t)v717 + v963) & v959;
                            v720 = *(void (**)(unint64_t, unint64_t, uint64_t))(v965 + 16);
                            swift_bridgeObjectRetain();
                            v720(v718, v719, v964);
                            v721 = (void *)((v947 + v719) & 0xFFFFFFFFFFFFFFF8);
                            v722 = (void *)((v947 + v718) & 0xFFFFFFFFFFFFFFF8);
                            void *v722 = *v721;
                            v723 = (void *)(((unint64_t)v722 + 15) & 0xFFFFFFFFFFFFFFF8);
                            v724 = (void *)(((unint64_t)v721 + 15) & 0xFFFFFFFFFFFFFFF8);
                            void *v723 = *v724;
                            v723[1] = v724[1];
                            v725 = (void *)(v1025 + v715);
                            void *v725 = *(void *)(v1025 + v264);
                            v725[1] = *(void *)(v1025 + v264 + 8);
                            unint64_t v726 = (v1011 + v1025 + v715) & v968;
                            unint64_t v727 = (v1011 + v1025 + v264) & v968;
                            *(unsigned char *)unint64_t v726 = *(unsigned char *)v727;
                            uint64_t v728 = v726 | 4;
                            int v729 = *(_DWORD *)(v727 | 4);
                            *(unsigned char *)(v728 + 4) = *(unsigned char *)((v727 | 4) + 4);
                            *(_DWORD *)uint64_t v728 = v729;
                            *(_WORD *)(v726 + 10) = *(_WORD *)(v727 + 0xA);
                            unint64_t v1042 = v726;
                            unint64_t v730 = (v969 + v726) & v970;
                            unint64_t v1030 = v727;
                            unint64_t v731 = (v969 + v727) & v970;
                            v732 = *(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 16);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            v732(v730, v731, v957);
                            size_t v733 = (v956 + v730) & v970;
                            size_t v734 = (v956 + v731) & v970;
                            v732(v733, v734, v957);
                            v735 = (unsigned char *)(v733 + v953);
                            unsigned char *v735 = *(unsigned char *)(v734 + v953);
                            v735[1] = *(unsigned char *)(v734 + v953 + 1);
                            v735[2] = *(unsigned char *)(v734 + v953 + 2);
                            v735[3] = *(unsigned char *)(v734 + v953 + 3);
                            v735[4] = *(unsigned char *)(v734 + v953 + 4);
                            unint64_t v736 = (v733 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v737 = (v734 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                            *(void *)unint64_t v736 = *(void *)v737;
                            *(void *)(v736 + 8) = *(void *)(v737 + 8);
                            *(unsigned char *)(v736 + 16) = *(unsigned char *)(v737 + 16);
                            *(unsigned char *)(v736 + 17) = *(unsigned char *)(v737 + 17);
                            *(unsigned char *)(v736 + 18) = *(unsigned char *)(v737 + 18);
                            *(unsigned char *)(v736 + 19) = *(unsigned char *)(v737 + 19);
                            unint64_t v738 = (v736 + 27) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v739 = (v737 + 27) & 0xFFFFFFFFFFFFFFF8;
                            *(void *)unint64_t v738 = *(void *)v739;
                            *(unsigned char *)(v738 + 8) = *(unsigned char *)(v739 + 8);
                            *(unsigned char *)(v738 + 9) = *(unsigned char *)(v739 + 9);
                            *(unsigned char *)(v738 + 10) = *(unsigned char *)(v739 + 10);
                            *(unsigned char *)(v738 + 11) = *(unsigned char *)(v739 + 11);
                            *(unsigned char *)(v738 + 12) = *(unsigned char *)(v739 + 12);
                            v740 = (void *)((v737 + 47) & 0xFFFFFFFFFFFFFFF8);
                            v741 = (void *)((v736 + 47) & 0xFFFFFFFFFFFFFFF8);
                            void *v741 = *v740;
                            unint64_t v742 = ((unint64_t)v741 + 15) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v743 = ((unint64_t)v740 + 15) & 0xFFFFFFFFFFFFFFF8;
                            *(void *)unint64_t v742 = *(void *)v743;
                            *(unsigned char *)(v742 + 8) = *(unsigned char *)(v743 + 8);
                            *(unsigned char *)(v742 + 9) = *(unsigned char *)(v743 + 9);
                            v744 = (void *)((v951 + v742) & v970);
                            v745 = (const void *)((v951 + v743) & v970);
                            v746 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v213 + 48);
                            swift_bridgeObjectRetain();
                            if (v746(v745, 1, v957))
                            {
                              memcpy(v744, v745, v977);
                            }
                            else
                            {
                              v732((unint64_t)v744, (unint64_t)v745, v957);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v213 + 56))(v744, 0, 1, v957);
                            }
                            v747 = (void *)(((unint64_t)v744 + v952) & 0xFFFFFFFFFFFFFFF8);
                            v748 = (void *)(((unint64_t)v745 + v952) & 0xFFFFFFFFFFFFFFF8);
                            void *v747 = *v748;
                            unint64_t v749 = ((unint64_t)v747 + 15) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v750 = ((unint64_t)v748 + 15) & 0xFFFFFFFFFFFFFFF8;
                            uint64_t v751 = *(void *)v750;
                            *(unsigned char *)(v749 + 8) = *(unsigned char *)(v750 + 8);
                            *(void *)unint64_t v749 = v751;
                            v752 = (void *)(((unint64_t)v747 + 31) & 0xFFFFFFFFFFFFFFF8);
                            v753 = (void *)(((unint64_t)v748 + 31) & 0xFFFFFFFFFFFFFFF8);
                            void *v752 = *v753;
                            unint64_t v754 = ((unint64_t)v752 + 15) & 0xFFFFFFFFFFFFFFF8;
                            v755 = (uint64_t *)(((unint64_t)v753 + 15) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v756 = v755[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            if ((v756 & 0x3000000000000000) != 0)
                            {
                              *(_OWORD *)unint64_t v754 = *(_OWORD *)v755;
                            }
                            else
                            {
                              uint64_t v757 = *v755;
                              sub_10001EBB0(*v755, v756);
                              *(void *)unint64_t v754 = v757;
                              *(void *)(v754 + 8) = v756;
                            }
                            unsigned int v758 = v948;
                            v247 = (void *)((unint64_t)&v1003[v974] & v972);
                            unint64_t v759 = (v754 + 19) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v760 = ((unint64_t)v755 + 19) & 0xFFFFFFFFFFFFFFF8;
                            uint64_t v761 = *(void *)v760;
                            *(unsigned char *)(v759 + 8) = *(unsigned char *)(v760 + 8);
                            *(void *)unint64_t v759 = v761;
                            *(unsigned char *)(v759 + 9) = *(unsigned char *)(v760 + 9);
                            unint64_t v762 = (v759 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                            unint64_t v763 = (v760 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                            int v764 = *(_DWORD *)v763;
                            *(unsigned char *)(v762 + 4) = *(unsigned char *)(v763 + 4);
                            *(_DWORD *)unint64_t v762 = v764;
                            v765 = (void *)((v759 + 25) & 0xFFFFFFFFFFFFFFF8);
                            v766 = (void *)((v760 + 25) & 0xFFFFFFFFFFFFFFF8);
                            void *v765 = *v766;
                            v765[1] = v766[1];
                            unint64_t v767 = v1010 + v1042;
                            v768 = (long long *)(v1010 + v1030);
                            unint64_t v769 = *(void *)(v1010 + v1030 + 16);
                            if (v769 >= 0xFFFFFFFF) {
                              LODWORD(v769) = -1;
                            }
                            int v770 = v769 - 1;
                            swift_bridgeObjectRetain();
                            if (v770 < 0)
                            {
                              *(void *)unint64_t v767 = *(void *)v768;
                              *(unsigned char *)(v767 + 8) = *((unsigned char *)v768 + 8);
                              *(unsigned char *)(v767 + 9) = *((unsigned char *)v768 + 9);
                              uint64_t v783 = *((void *)v768 + 2);
                              swift_errorRetain();
                              *(void *)(v767 + 16) = v783;
                              uint64_t v784 = *((void *)v768 + 3);
                              swift_errorRetain();
                              *(void *)(v767 + 24) = v784;
                              *(unsigned char *)(v767 + 32) = *((unsigned char *)v768 + 32);
                              *(unsigned char *)(v767 + 33) = *((unsigned char *)v768 + 33);
                              *(unsigned char *)(v767 + 34) = *((unsigned char *)v768 + 34);
                              *(void *)(v767 + 40) = *((void *)v768 + 5);
                              *(void *)(v767 + 48) = *((void *)v768 + 6);
                              *(void *)(v767 + 56) = *((void *)v768 + 7);
                              *(void *)(v767 + 64) = *((void *)v768 + 8);
                              *(unsigned char *)(v767 + 72) = *((unsigned char *)v768 + 72);
                              *(void *)(v767 + 80) = *((void *)v768 + 10);
                              *(void *)(v767 + 88) = *((void *)v768 + 11);
                              v1043 = (void *)*((void *)v768 + 12);
                              *(void *)(v767 + 96) = v1043;
                              *(unsigned char *)(v767 + 104) = *((unsigned char *)v768 + 104);
                              *(unsigned char *)(v767 + 105) = *((unsigned char *)v768 + 105);
                              *(void *)(v767 + 112) = *((void *)v768 + 14);
                              *(void *)(v767 + 120) = *((void *)v768 + 15);
                              *(void *)(v767 + 128) = *((void *)v768 + 16);
                              *(void *)(v767 + 136) = *((void *)v768 + 17);
                              *(void *)(v767 + 144) = *((void *)v768 + 18);
                              *(void *)(v767 + 152) = *((void *)v768 + 19);
                              *(void *)(v767 + 160) = *((void *)v768 + 20);
                              *(void *)(v767 + 168) = *((void *)v768 + 21);
                              *(unsigned char *)(v767 + 176) = *((unsigned char *)v768 + 176);
                              *(void *)(v767 + 184) = *((void *)v768 + 23);
                              uint64_t v785 = *((void *)v768 + 24);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              id v786 = v1043;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              if (v785)
                              {
                                *(void *)(v767 + 192) = v785;
                                *(void *)(v767 + 200) = *((void *)v768 + 25);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                              }
                              else
                              {
                                *(_OWORD *)(v767 + 192) = v768[12];
                              }
                              v3 = v1003;
                              unint64_t v63 = v1019;
                              unsigned int v758 = v948;
                              v247 = (void *)((unint64_t)&v1003[v974] & v972);
                              *(void *)(v767 + 208) = *((void *)v768 + 26);
                              *(void *)(v767 + 216) = *((void *)v768 + 27);
                              *(void *)(v767 + 224) = *((void *)v768 + 28);
                              *(void *)(v767 + 232) = *((void *)v768 + 29);
                              *(void *)(v767 + 240) = *((void *)v768 + 30);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                            }
                            else
                            {
                              long long v771 = *v768;
                              long long v772 = v768[1];
                              long long v773 = v768[3];
                              *(_OWORD *)(v767 + 32) = v768[2];
                              *(_OWORD *)(v767 + 48) = v773;
                              *(_OWORD *)unint64_t v767 = v771;
                              *(_OWORD *)(v767 + 16) = v772;
                              long long v774 = v768[4];
                              long long v775 = v768[5];
                              long long v776 = v768[7];
                              *(_OWORD *)(v767 + 96) = v768[6];
                              *(_OWORD *)(v767 + 112) = v776;
                              *(_OWORD *)(v767 + 64) = v774;
                              *(_OWORD *)(v767 + 80) = v775;
                              long long v777 = v768[8];
                              long long v778 = v768[9];
                              long long v779 = v768[11];
                              *(_OWORD *)(v767 + 160) = v768[10];
                              *(_OWORD *)(v767 + 176) = v779;
                              *(_OWORD *)(v767 + 128) = v777;
                              *(_OWORD *)(v767 + 144) = v778;
                              long long v780 = v768[12];
                              long long v781 = v768[13];
                              long long v782 = v768[14];
                              *(void *)(v767 + 240) = *((void *)v768 + 30);
                              *(_OWORD *)(v767 + 208) = v781;
                              *(_OWORD *)(v767 + 224) = v782;
                              *(_OWORD *)(v767 + 192) = v780;
                              unint64_t v63 = v1019;
                            }
                            v901 = (_OWORD *)((v767 + 255) & 0xFFFFFFFFFFFFFFF8);
                            v902 = (long long *)(((unint64_t)v768 + 255) & 0xFFFFFFFFFFFFFFF8);
                            long long v903 = *v902;
                            *(_OWORD *)((char *)v901 + 9) = *(long long *)((char *)v902 + 9);
                            _OWORD *v901 = v903;
                            unint64_t v904 = (v767 + 287) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v905 = ((unint64_t)v768 + 287) & 0xFFFFFFFFFFFFFFF8;
                            long long v906 = *(_OWORD *)v905;
                            *(unsigned char *)(v904 + 16) = *(unsigned char *)(v905 + 16);
                            *(_OWORD *)unint64_t v904 = v906;
                            v907 = (void *)((v767 + 311) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v908 = ((unint64_t)v768 + 311) & 0xFFFFFFFFFFFFFFF8;
                            uint64_t v909 = *(void *)v908;
                            v908 += 15;
                            void *v907 = v909;
                            v910 = (void *)(((unint64_t)v907 + 15) & 0xFFFFFFFFFFFFFFF8);
                            uint64_t v911 = *(void *)(v908 & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v912 = *(void *)((v908 & 0xFFFFFFFFFFFFFFF8) + 8);
                            sub_10018B584(v911, v912);
                            void *v910 = v911;
                            v910[1] = v912;
                            size_t v714 = v953;
                            v248 = (void *)((unint64_t)&a2[v974] & v972);
                            if (!v758) {
                              goto LABEL_614;
                            }
LABEL_682:
                            unint64_t v913 = ((((v944
                                     + ((((((((((v971 + v714 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                           + 15) & 0xFFFFFFFFFFFFFFF8)
                                         + 19) & 0xFFFFFFFFFFFFFFF8)
                                       + 25) & 0xFFFFFFFFFFFFFFF8)
                                     + 327) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 16;
                            v914 = (void *)(((unint64_t)v247 + v913) & 0xFFFFFFFFFFFFFFF8);
                            v915 = (void *)(((unint64_t)v248 + v913) & 0xFFFFFFFFFFFFFFF8);
                            void *v914 = *v915;
                            v914[1] = v915[1];
                            *(void *)(((unint64_t)v914 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v915 + 23) & 0xFFFFFFFFFFFFFFF8);
                            v3[v927] = 3;
                            swift_bridgeObjectRetain();
                            goto LABEL_683;
                          case 4u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1003, a2, v214);
                            char v250 = 0;
                            v1003[v47] = 4;
                            goto LABEL_684;
                          case 5u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1003, a2, v214);
                            char v250 = 0;
                            v1003[v47] = 5;
                            goto LABEL_684;
                          case 6u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1003, a2, v214);
                            v251 = (void *)((unint64_t)&v1003[v939] & v936);
                            v252 = (const void *)((unint64_t)&a2[v939] & v936);
                            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v252, 1, v1007))
                            {
                              memcpy(v251, v252, v930);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v251, v252, v1007);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v251, 0, 1, v1007);
                            }
                            char v250 = 0;
                            v1003[v47] = 6;
                            goto LABEL_684;
                          case 7u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1003, a2, v214);
                            char v250 = 0;
                            v1003[v47] = 7;
                            goto LABEL_684;
                          default:
                            unint64_t v925 = v47;
                            v237 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16);
                            v237(v1003, a2, v214);
                            v238 = (void *)((unint64_t)&v1003[v974] & v972);
                            v239 = (void *)((unint64_t)&a2[v974] & v972);
                            if (v1013 == v976)
                            {
                              int v240 = (*(uint64_t (**)(void *))(v67 + 48))(v239);
LABEL_578:
                              if (v240)
                              {
LABEL_579:
                                memcpy(v238, v239, v955);
                                goto LABEL_580;
                              }
                              unint64_t v259 = ((unint64_t)v239 + v979) & v999;
                              unint64_t v260 = (v980 + v259) & v1037;
LABEL_582:
                              unint64_t v1017 = v63;
                              v237((unsigned __int8 *)v238, (unsigned __int8 *)v239, v214);
                              v237((unsigned __int8 *)(((unint64_t)v238 + v979) & v999), (unsigned __int8 *)v259, v214);
                              unint64_t v565 = (v980 + (((unint64_t)v238 + v979) & v999)) & v1037;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v984 + 16))(v565, v260, v983);
                              v566 = (void *)((v987 + v565) & 0xFFFFFFFFFFFFFFF8);
                              v567 = (void *)((v987 + v260) & 0xFFFFFFFFFFFFFFF8);
                              void *v566 = *v567;
                              unint64_t v568 = ((unint64_t)v566 + v963) & v959;
                              unint64_t v569 = ((unint64_t)v567 + v963) & v959;
                              v570 = *(void (**)(unint64_t, unint64_t, uint64_t))(v965 + 16);
                              swift_bridgeObjectRetain();
                              v570(v568, v569, v964);
                              v571 = (void *)((v947 + v569) & 0xFFFFFFFFFFFFFFF8);
                              v572 = (void *)((v947 + v568) & 0xFFFFFFFFFFFFFFF8);
                              void *v572 = *v571;
                              v573 = (void *)(((unint64_t)v572 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v574 = (void *)(((unint64_t)v571 + 15) & 0xFFFFFFFFFFFFFFF8);
                              void *v573 = *v574;
                              v573[1] = v574[1];
                              v575 = (void *)(v1025 + v565);
                              void *v575 = *(void *)(v1025 + v260);
                              v575[1] = *(void *)(v1025 + v260 + 8);
                              unint64_t v576 = (v1011 + v1025 + v565) & v968;
                              unint64_t v577 = (v1011 + v1025 + v260) & v968;
                              *(unsigned char *)unint64_t v576 = *(unsigned char *)v577;
                              uint64_t v578 = v576 | 4;
                              int v579 = *(_DWORD *)(v577 | 4);
                              *(unsigned char *)(v578 + 4) = *(unsigned char *)((v577 | 4) + 4);
                              *(_DWORD *)uint64_t v578 = v579;
                              *(_WORD *)(v576 + 10) = *(_WORD *)(v577 + 0xA);
                              unint64_t v1038 = v576;
                              unint64_t v580 = (v969 + v576) & v970;
                              unint64_t v1028 = v577;
                              unint64_t v581 = (v969 + v577) & v970;
                              v582 = *(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 16);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              v582(v580, v581, v957);
                              size_t v583 = (v956 + v580) & v970;
                              size_t v584 = (v956 + v581) & v970;
                              v582(v583, v584, v957);
                              v585 = (unsigned char *)(v583 + v953);
                              unsigned char *v585 = *(unsigned char *)(v584 + v953);
                              v585[1] = *(unsigned char *)(v584 + v953 + 1);
                              v585[2] = *(unsigned char *)(v584 + v953 + 2);
                              v585[3] = *(unsigned char *)(v584 + v953 + 3);
                              v585[4] = *(unsigned char *)(v584 + v953 + 4);
                              unint64_t v586 = (v583 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v587 = (v584 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v586 = *(void *)v587;
                              *(void *)(v586 + 8) = *(void *)(v587 + 8);
                              *(unsigned char *)(v586 + 16) = *(unsigned char *)(v587 + 16);
                              *(unsigned char *)(v586 + 17) = *(unsigned char *)(v587 + 17);
                              *(unsigned char *)(v586 + 18) = *(unsigned char *)(v587 + 18);
                              *(unsigned char *)(v586 + 19) = *(unsigned char *)(v587 + 19);
                              unint64_t v588 = (v586 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v589 = (v587 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v588 = *(void *)v589;
                              *(unsigned char *)(v588 + 8) = *(unsigned char *)(v589 + 8);
                              *(unsigned char *)(v588 + 9) = *(unsigned char *)(v589 + 9);
                              *(unsigned char *)(v588 + 10) = *(unsigned char *)(v589 + 10);
                              *(unsigned char *)(v588 + 11) = *(unsigned char *)(v589 + 11);
                              *(unsigned char *)(v588 + 12) = *(unsigned char *)(v589 + 12);
                              v590 = (void *)((v587 + 47) & 0xFFFFFFFFFFFFFFF8);
                              v591 = (void *)((v586 + 47) & 0xFFFFFFFFFFFFFFF8);
                              void *v591 = *v590;
                              unint64_t v592 = ((unint64_t)v591 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v593 = ((unint64_t)v590 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v592 = *(void *)v593;
                              *(unsigned char *)(v592 + 8) = *(unsigned char *)(v593 + 8);
                              *(unsigned char *)(v592 + 9) = *(unsigned char *)(v593 + 9);
                              v594 = (void *)((v951 + v592) & v970);
                              v595 = (const void *)((v951 + v593) & v970);
                              v596 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v213 + 48);
                              swift_bridgeObjectRetain();
                              if (v596(v595, 1, v957))
                              {
                                memcpy(v594, v595, v977);
                              }
                              else
                              {
                                v582((unint64_t)v594, (unint64_t)v595, v957);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v213 + 56))(v594, 0, 1, v957);
                              }
                              v597 = (void *)(((unint64_t)v594 + v952) & 0xFFFFFFFFFFFFFFF8);
                              v598 = (void *)(((unint64_t)v595 + v952) & 0xFFFFFFFFFFFFFFF8);
                              void *v597 = *v598;
                              unint64_t v599 = ((unint64_t)v597 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v600 = ((unint64_t)v598 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v601 = *(void *)v600;
                              *(unsigned char *)(v599 + 8) = *(unsigned char *)(v600 + 8);
                              *(void *)unint64_t v599 = v601;
                              v602 = (void *)(((unint64_t)v597 + 31) & 0xFFFFFFFFFFFFFFF8);
                              v603 = (void *)(((unint64_t)v598 + 31) & 0xFFFFFFFFFFFFFFF8);
                              void *v602 = *v603;
                              unint64_t v604 = ((unint64_t)v602 + 15) & 0xFFFFFFFFFFFFFFF8;
                              v605 = (uint64_t *)(((unint64_t)v603 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v606 = v605[1];
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              if ((v606 & 0x3000000000000000) != 0)
                              {
                                *(_OWORD *)unint64_t v604 = *(_OWORD *)v605;
                              }
                              else
                              {
                                uint64_t v607 = *v605;
                                sub_10001EBB0(*v605, v606);
                                *(void *)unint64_t v604 = v607;
                                *(void *)(v604 + 8) = v606;
                              }
                              unsigned int v608 = v948;
                              v238 = (void *)((unint64_t)&v1003[v974] & v972);
                              unint64_t v609 = (v604 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v610 = ((unint64_t)v605 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v611 = *(void *)v610;
                              *(unsigned char *)(v609 + 8) = *(unsigned char *)(v610 + 8);
                              *(void *)unint64_t v609 = v611;
                              *(unsigned char *)(v609 + 9) = *(unsigned char *)(v610 + 9);
                              unint64_t v612 = (v609 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v613 = (v610 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              int v614 = *(_DWORD *)v613;
                              *(unsigned char *)(v612 + 4) = *(unsigned char *)(v613 + 4);
                              *(_DWORD *)unint64_t v612 = v614;
                              v615 = (void *)((v609 + 25) & 0xFFFFFFFFFFFFFFF8);
                              v616 = (void *)((v610 + 25) & 0xFFFFFFFFFFFFFFF8);
                              void *v615 = *v616;
                              v615[1] = v616[1];
                              unint64_t v617 = v1010 + v1038;
                              v618 = (long long *)(v1010 + v1028);
                              unint64_t v619 = *(void *)(v1010 + v1028 + 16);
                              if (v619 >= 0xFFFFFFFF) {
                                LODWORD(v619) = -1;
                              }
                              int v620 = v619 - 1;
                              swift_bridgeObjectRetain();
                              if (v620 < 0)
                              {
                                *(void *)unint64_t v617 = *(void *)v618;
                                *(unsigned char *)(v617 + 8) = *((unsigned char *)v618 + 8);
                                *(unsigned char *)(v617 + 9) = *((unsigned char *)v618 + 9);
                                uint64_t v633 = *((void *)v618 + 2);
                                swift_errorRetain();
                                *(void *)(v617 + 16) = v633;
                                uint64_t v634 = *((void *)v618 + 3);
                                swift_errorRetain();
                                *(void *)(v617 + 24) = v634;
                                *(unsigned char *)(v617 + 32) = *((unsigned char *)v618 + 32);
                                *(unsigned char *)(v617 + 33) = *((unsigned char *)v618 + 33);
                                *(unsigned char *)(v617 + 34) = *((unsigned char *)v618 + 34);
                                *(void *)(v617 + 40) = *((void *)v618 + 5);
                                *(void *)(v617 + 48) = *((void *)v618 + 6);
                                *(void *)(v617 + 56) = *((void *)v618 + 7);
                                *(void *)(v617 + 64) = *((void *)v618 + 8);
                                *(unsigned char *)(v617 + 72) = *((unsigned char *)v618 + 72);
                                *(void *)(v617 + 80) = *((void *)v618 + 10);
                                *(void *)(v617 + 88) = *((void *)v618 + 11);
                                v1039 = (void *)*((void *)v618 + 12);
                                *(void *)(v617 + 96) = v1039;
                                *(unsigned char *)(v617 + 104) = *((unsigned char *)v618 + 104);
                                *(unsigned char *)(v617 + 105) = *((unsigned char *)v618 + 105);
                                *(void *)(v617 + 112) = *((void *)v618 + 14);
                                *(void *)(v617 + 120) = *((void *)v618 + 15);
                                *(void *)(v617 + 128) = *((void *)v618 + 16);
                                *(void *)(v617 + 136) = *((void *)v618 + 17);
                                *(void *)(v617 + 144) = *((void *)v618 + 18);
                                *(void *)(v617 + 152) = *((void *)v618 + 19);
                                *(void *)(v617 + 160) = *((void *)v618 + 20);
                                *(void *)(v617 + 168) = *((void *)v618 + 21);
                                *(unsigned char *)(v617 + 176) = *((unsigned char *)v618 + 176);
                                *(void *)(v617 + 184) = *((void *)v618 + 23);
                                uint64_t v635 = *((void *)v618 + 24);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                id v636 = v1039;
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                if (v635)
                                {
                                  *(void *)(v617 + 192) = v635;
                                  *(void *)(v617 + 200) = *((void *)v618 + 25);
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRetain();
                                }
                                else
                                {
                                  *(_OWORD *)(v617 + 192) = v618[12];
                                }
                                v3 = v1003;
                                unint64_t v63 = v1017;
                                unsigned int v608 = v948;
                                v238 = (void *)((unint64_t)&v1003[v974] & v972);
                                *(void *)(v617 + 208) = *((void *)v618 + 26);
                                *(void *)(v617 + 216) = *((void *)v618 + 27);
                                *(void *)(v617 + 224) = *((void *)v618 + 28);
                                *(void *)(v617 + 232) = *((void *)v618 + 29);
                                *(void *)(v617 + 240) = *((void *)v618 + 30);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                              }
                              else
                              {
                                long long v621 = *v618;
                                long long v622 = v618[1];
                                long long v623 = v618[3];
                                *(_OWORD *)(v617 + 32) = v618[2];
                                *(_OWORD *)(v617 + 48) = v623;
                                *(_OWORD *)unint64_t v617 = v621;
                                *(_OWORD *)(v617 + 16) = v622;
                                long long v624 = v618[4];
                                long long v625 = v618[5];
                                long long v626 = v618[7];
                                *(_OWORD *)(v617 + 96) = v618[6];
                                *(_OWORD *)(v617 + 112) = v626;
                                *(_OWORD *)(v617 + 64) = v624;
                                *(_OWORD *)(v617 + 80) = v625;
                                long long v627 = v618[8];
                                long long v628 = v618[9];
                                long long v629 = v618[11];
                                *(_OWORD *)(v617 + 160) = v618[10];
                                *(_OWORD *)(v617 + 176) = v629;
                                *(_OWORD *)(v617 + 128) = v627;
                                *(_OWORD *)(v617 + 144) = v628;
                                long long v630 = v618[12];
                                long long v631 = v618[13];
                                long long v632 = v618[14];
                                *(void *)(v617 + 240) = *((void *)v618 + 30);
                                *(_OWORD *)(v617 + 208) = v631;
                                *(_OWORD *)(v617 + 224) = v632;
                                *(_OWORD *)(v617 + 192) = v630;
                                unint64_t v63 = v1017;
                              }
                              v853 = (_OWORD *)((v617 + 255) & 0xFFFFFFFFFFFFFFF8);
                              v854 = (long long *)(((unint64_t)v618 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v855 = *v854;
                              *(_OWORD *)((char *)v853 + 9) = *(long long *)((char *)v854 + 9);
                              _OWORD *v853 = v855;
                              unint64_t v856 = (v617 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v857 = ((unint64_t)v618 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v858 = *(_OWORD *)v857;
                              *(unsigned char *)(v856 + 16) = *(unsigned char *)(v857 + 16);
                              *(_OWORD *)unint64_t v856 = v858;
                              v859 = (void *)((v617 + 311) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v860 = ((unint64_t)v618 + 311) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v861 = *(void *)v860;
                              v860 += 15;
                              void *v859 = v861;
                              v862 = (void *)(((unint64_t)v859 + 15) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v863 = *(void *)(v860 & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v864 = *(void *)((v860 & 0xFFFFFFFFFFFFFFF8) + 8);
                              sub_10018B584(v863, v864);
                              void *v862 = v863;
                              v862[1] = v864;
                              size_t v564 = v953;
                              v239 = (void *)((unint64_t)&a2[v974] & v972);
                              if (v608)
                              {
LABEL_658:
                                unint64_t v865 = ((((v944
                                         + ((((((((((v971 + v564 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                v866 = (void *)(((unint64_t)v238 + v865) & 0xFFFFFFFFFFFFFFF8);
                                v867 = (void *)(((unint64_t)v239 + v865) & 0xFFFFFFFFFFFFFFF8);
                                void *v866 = *v867;
                                v868 = *(void **)(((unint64_t)v867 + 15) & 0xFFFFFFFFFFFFFFF8);
                                *(void *)(((unint64_t)v866 + 15) & 0xFFFFFFFFFFFFFFF8) = v868;
                                v3[v925] = 0;
                                id v869 = v868;
LABEL_683:
                                char v250 = 0;
                                goto LABEL_684;
                              }
LABEL_580:
                              size_t v564 = v977;
                              goto LABEL_658;
                            }
                            unint64_t v259 = ((unint64_t)v239 + v979) & v999;
                            unint64_t v260 = (v980 + v259) & v1037;
                            if (v985 == v976)
                            {
                              if (v967 == v985)
                              {
                                int v240 = (*(uint64_t (**)(unint64_t))(v984 + 48))((v980 + v259) & v1037);
                                goto LABEL_578;
                              }
                              v330 = (unint64_t *)((v987 + v260) & 0xFFFFFFFFFFFFFFF8);
                              if (v942 > 0x7FFFFFFE)
                              {
                                int v240 = (*(uint64_t (**)(unint64_t))(v965 + 48))(((unint64_t)v330
                                                                                                + v963) & v959);
                                goto LABEL_578;
                              }
                              unint64_t v331 = *v330;
                            }
                            else
                            {
                              unint64_t v284 = v1025 + v260;
                              if ((v934 & 0x80000000) == 0)
                              {
                                unint64_t v285 = *(void *)(v284 + 8);
                                if (v285 >= 0xFFFFFFFF) {
                                  LODWORD(v285) = -1;
                                }
                                int v240 = v285 + 1;
                                goto LABEL_578;
                              }
                              uint64_t v340 = (v969 + ((v1011 + v284) & v968)) & v970;
                              if (v948 > 0x7FFFFFFD)
                              {
                                int v240 = (*(uint64_t (**)(uint64_t))(v213 + 48))(v340);
                                goto LABEL_578;
                              }
                              unint64_t v331 = *(void *)(((v943 + ((v956 + v340) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v331 >= 0xFFFFFFFF) {
                              LODWORD(v331) = -1;
                            }
                            if ((v331 + 1) >= 2) {
                              goto LABEL_579;
                            }
                            goto LABEL_582;
                        }
                      }
                      goto LABEL_328;
                    }
LABEL_326:
                    unsigned int v202 = (v205 | (v203 << (8 * v63))) + 2;
                    break;
                  default:
                    break;
                }
              }
              if (v202 != 1) {
                goto LABEL_339;
              }
LABEL_328:
              unsigned int v206 = a2[v62];
              unsigned int v207 = v206 - 8;
              if (v206 >= 8)
              {
                if (v62 <= 3) {
                  uint64_t v208 = v62;
                }
                else {
                  uint64_t v208 = 4;
                }
                switch(v208)
                {
                  case 1:
                    int v209 = *a2;
                    if (v62 < 4) {
                      goto LABEL_348;
                    }
                    goto LABEL_352;
                  case 2:
                    int v209 = *(unsigned __int16 *)a2;
                    if (v62 < 4) {
                      goto LABEL_348;
                    }
                    goto LABEL_352;
                  case 3:
                    int v209 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                    if (v62 < 4) {
                      goto LABEL_348;
                    }
                    goto LABEL_352;
                  case 4:
                    int v209 = *(_DWORD *)a2;
                    if (v62 < 4) {
LABEL_348:
                    }
                      unsigned int v206 = (v209 | (v207 << (8 * v62))) + 8;
                    else {
LABEL_352:
                    }
                      unsigned int v206 = v209 + 8;
                    break;
                  default:
                    break;
                }
              }
              switch(v206)
              {
                case 1u:
                  v220 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1009 + 16);
                  v220(v1003, a2, v1021);
                  v221 = (void *)((unint64_t)&a2[v973] & v992);
                  v1008 = v221;
                  if (v975 == v51)
                  {
                    int v222 = (*(uint64_t (**)(unint64_t))(v1009 + 48))((unint64_t)&a2[v973] & v992);
LABEL_358:
                    v221 = (void *)((unint64_t)&a2[v973] & v992);
                    goto LABEL_359;
                  }
                  unint64_t v255 = ((unint64_t)v221 + v990) & v997;
                  unint64_t v256 = (v978 + v255) & v1001;
                  if (v994 == v51)
                  {
                    if (v966 == v994)
                    {
                      int v222 = (*(uint64_t (**)(unint64_t))(v982 + 48))((v978 + v255) & v1001);
                      goto LABEL_358;
                    }
                    v326 = (unint64_t *)((v986 + v256) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v223 = AssociatedTypeWitness;
                    v224 = (void *)((unint64_t)&v1003[v973] & v992);
                    if (v941 <= 0x7FFFFFFE)
                    {
                      unint64_t v327 = *v326;
                      goto LABEL_712;
                    }
                    int v338 = (*(uint64_t (**)(unint64_t))(v961 + 48))(((unint64_t)v326 + v960) & v958);
                  }
                  else
                  {
                    size_t v280 = v995 + v256;
                    if ((v933 & 0x80000000) == 0)
                    {
                      unint64_t v281 = *(void *)(v280 + 8);
                      if (v281 >= 0xFFFFFFFF) {
                        LODWORD(v281) = -1;
                      }
                      int v222 = v281 + 1;
LABEL_359:
                      uint64_t v223 = AssociatedTypeWitness;
                      v224 = (void *)((unint64_t)&v1003[v973] & v992);
                      if (v222)
                      {
LABEL_360:
                        memcpy(v224, v221, __n);
                        unint64_t v225 = v971;
LABEL_361:
                        size_t v226 = v977;
                        goto LABEL_635;
                      }
                      goto LABEL_546;
                    }
                    size_t v337 = (v969 + ((v1011 + v280) & v968)) & v970;
                    uint64_t v223 = AssociatedTypeWitness;
                    v224 = (void *)((unint64_t)&v1003[v973] & v992);
                    if (v948 <= 0x7FFFFFFD)
                    {
                      unint64_t v327 = *(void *)(((v943 + ((v956 + v337) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_712:
                      if (v327 >= 0xFFFFFFFF) {
                        LODWORD(v327) = -1;
                      }
                      if ((v327 + 1) >= 2) {
                        goto LABEL_360;
                      }
LABEL_547:
                      unint64_t v924 = v62;
                      unint64_t v1015 = v63;
                      v220((unsigned __int8 *)v224, (unsigned __int8 *)v221, v1021);
                      unint64_t v417 = ((unint64_t)v224 + v990) & v997;
                      v220((unsigned __int8 *)v417, (unsigned __int8 *)v255, v1021);
                      unint64_t v418 = (v978 + v417) & v1001;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v982 + 16))(v418, v256, v981);
                      v419 = (void *)((v986 + v418) & 0xFFFFFFFFFFFFFFF8);
                      v420 = (void *)((v986 + v256) & 0xFFFFFFFFFFFFFFF8);
                      void *v419 = *v420;
                      unint64_t v421 = ((unint64_t)v419 + v960) & v958;
                      unint64_t v422 = ((unint64_t)v420 + v960) & v958;
                      v423 = *(void (**)(unint64_t, unint64_t, uint64_t))(v961 + 16);
                      swift_bridgeObjectRetain();
                      v423(v421, v422, v962);
                      v424 = (void *)((v946 + v422) & 0xFFFFFFFFFFFFFFF8);
                      v425 = (void *)((v946 + v421) & 0xFFFFFFFFFFFFFFF8);
                      void *v425 = *v424;
                      v426 = (void *)(((unint64_t)v425 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v427 = (void *)(((unint64_t)v424 + 15) & 0xFFFFFFFFFFFFFFF8);
                      void *v426 = *v427;
                      v426[1] = v427[1];
                      v428 = (void *)(v995 + v418);
                      void *v428 = *(void *)(v995 + v256);
                      v428[1] = *(void *)(v995 + v256 + 8);
                      size_t v429 = (v1011 + v995 + v418) & v968;
                      size_t v430 = (v1011 + v995 + v256) & v968;
                      *(unsigned char *)size_t v429 = *(unsigned char *)v430;
                      uint64_t v431 = v429 | 4;
                      int v432 = *(_DWORD *)(v430 | 4);
                      *(unsigned char *)(v431 + 4) = *(unsigned char *)((v430 | 4) + 4);
                      *(_DWORD *)uint64_t v431 = v432;
                      *(_WORD *)(v429 + 10) = *(_WORD *)(v430 + 0xA);
                      size_t v1022 = v429;
                      size_t v433 = (v969 + v429) & v970;
                      size_t v1012 = v430;
                      size_t v434 = (v969 + v430) & v970;
                      v435 = *(void (**)(size_t, size_t, uint64_t))(v988 + 16);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v435(v433, v434, v957);
                      size_t v436 = (v956 + v433) & v970;
                      size_t v437 = (v956 + v434) & v970;
                      v435(v436, v437, v957);
                      v438 = (unsigned char *)(v436 + v953);
                      unsigned char *v438 = *(unsigned char *)(v437 + v953);
                      v438[1] = *(unsigned char *)(v437 + v953 + 1);
                      v438[2] = *(unsigned char *)(v437 + v953 + 2);
                      v438[3] = *(unsigned char *)(v437 + v953 + 3);
                      v438[4] = *(unsigned char *)(v437 + v953 + 4);
                      unint64_t v439 = (v436 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v440 = (v437 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v439 = *(void *)v440;
                      *(void *)(v439 + 8) = *(void *)(v440 + 8);
                      *(unsigned char *)(v439 + 16) = *(unsigned char *)(v440 + 16);
                      *(unsigned char *)(v439 + 17) = *(unsigned char *)(v440 + 17);
                      *(unsigned char *)(v439 + 18) = *(unsigned char *)(v440 + 18);
                      *(unsigned char *)(v439 + 19) = *(unsigned char *)(v440 + 19);
                      unint64_t v441 = (v439 + 27) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v442 = (v440 + 27) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v441 = *(void *)v442;
                      *(unsigned char *)(v441 + 8) = *(unsigned char *)(v442 + 8);
                      *(unsigned char *)(v441 + 9) = *(unsigned char *)(v442 + 9);
                      *(unsigned char *)(v441 + 10) = *(unsigned char *)(v442 + 10);
                      *(unsigned char *)(v441 + 11) = *(unsigned char *)(v442 + 11);
                      *(unsigned char *)(v441 + 12) = *(unsigned char *)(v442 + 12);
                      v443 = (void *)((v440 + 47) & 0xFFFFFFFFFFFFFFF8);
                      v444 = (void *)((v439 + 47) & 0xFFFFFFFFFFFFFFF8);
                      void *v444 = *v443;
                      unint64_t v445 = ((unint64_t)v444 + 15) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v446 = ((unint64_t)v443 + 15) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v445 = *(void *)v446;
                      *(unsigned char *)(v445 + 8) = *(unsigned char *)(v446 + 8);
                      *(unsigned char *)(v445 + 9) = *(unsigned char *)(v446 + 9);
                      v447 = (void *)((v951 + v445) & v970);
                      v448 = (const void *)((v951 + v446) & v970);
                      v449 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v988 + 48);
                      swift_bridgeObjectRetain();
                      if (v449(v448, 1, v957))
                      {
                        memcpy(v447, v448, v977);
                      }
                      else
                      {
                        v435((size_t)v447, (size_t)v448, v957);
                        (*(void (**)(void *, void, uint64_t, uint64_t))(v988 + 56))(v447, 0, 1, v957);
                      }
                      unint64_t v62 = v924;
                      v450 = (void *)(((unint64_t)v447 + v952) & 0xFFFFFFFFFFFFFFF8);
                      v451 = (void *)(((unint64_t)v448 + v952) & 0xFFFFFFFFFFFFFFF8);
                      void *v450 = *v451;
                      unint64_t v452 = ((unint64_t)v450 + 15) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v453 = ((unint64_t)v451 + 15) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v454 = *(void *)v453;
                      *(unsigned char *)(v452 + 8) = *(unsigned char *)(v453 + 8);
                      *(void *)unint64_t v452 = v454;
                      v455 = (void *)(((unint64_t)v450 + 31) & 0xFFFFFFFFFFFFFFF8);
                      v456 = (void *)(((unint64_t)v451 + 31) & 0xFFFFFFFFFFFFFFF8);
                      void *v455 = *v456;
                      unint64_t v457 = ((unint64_t)v455 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v458 = (uint64_t *)(((unint64_t)v456 + 15) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v459 = v458[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      if ((v459 & 0x3000000000000000) != 0)
                      {
                        *(_OWORD *)unint64_t v457 = *(_OWORD *)v458;
                      }
                      else
                      {
                        uint64_t v460 = *v458;
                        sub_10001EBB0(*v458, v459);
                        *(void *)unint64_t v457 = v460;
                        *(void *)(v457 + 8) = v459;
                      }
                      uint64_t v223 = AssociatedTypeWitness;
                      unint64_t v461 = (v457 + 19) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v462 = ((unint64_t)v458 + 19) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v463 = *(void *)v462;
                      *(unsigned char *)(v461 + 8) = *(unsigned char *)(v462 + 8);
                      *(void *)unint64_t v461 = v463;
                      *(unsigned char *)(v461 + 9) = *(unsigned char *)(v462 + 9);
                      unint64_t v464 = (v461 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      unint64_t v465 = (v462 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      int v466 = *(_DWORD *)v465;
                      *(unsigned char *)(v464 + 4) = *(unsigned char *)(v465 + 4);
                      *(_DWORD *)unint64_t v464 = v466;
                      v467 = (void *)((v461 + 25) & 0xFFFFFFFFFFFFFFF8);
                      v468 = (void *)((v462 + 25) & 0xFFFFFFFFFFFFFFF8);
                      void *v467 = *v468;
                      v467[1] = v468[1];
                      size_t v469 = v1022 + v1010;
                      v470 = (long long *)(v1012 + v1010);
                      unint64_t v471 = *(void *)(v1012 + v1010 + 16);
                      if (v471 >= 0xFFFFFFFF) {
                        LODWORD(v471) = -1;
                      }
                      int v472 = v471 - 1;
                      swift_bridgeObjectRetain();
                      if (v472 < 0)
                      {
                        *(void *)size_t v469 = *(void *)v470;
                        *(unsigned char *)(v469 + 8) = *((unsigned char *)v470 + 8);
                        *(unsigned char *)(v469 + 9) = *((unsigned char *)v470 + 9);
                        uint64_t v486 = *((void *)v470 + 2);
                        swift_errorRetain();
                        *(void *)(v469 + 16) = v486;
                        uint64_t v487 = *((void *)v470 + 3);
                        swift_errorRetain();
                        *(void *)(v469 + 24) = v487;
                        *(unsigned char *)(v469 + 32) = *((unsigned char *)v470 + 32);
                        *(unsigned char *)(v469 + 33) = *((unsigned char *)v470 + 33);
                        *(unsigned char *)(v469 + 34) = *((unsigned char *)v470 + 34);
                        *(void *)(v469 + 40) = *((void *)v470 + 5);
                        *(void *)(v469 + 48) = *((void *)v470 + 6);
                        *(void *)(v469 + 56) = *((void *)v470 + 7);
                        *(void *)(v469 + 64) = *((void *)v470 + 8);
                        *(unsigned char *)(v469 + 72) = *((unsigned char *)v470 + 72);
                        *(void *)(v469 + 80) = *((void *)v470 + 10);
                        *(void *)(v469 + 88) = *((void *)v470 + 11);
                        v1023 = (void *)*((void *)v470 + 12);
                        *(void *)(v469 + 96) = v1023;
                        *(unsigned char *)(v469 + 104) = *((unsigned char *)v470 + 104);
                        *(unsigned char *)(v469 + 105) = *((unsigned char *)v470 + 105);
                        *(void *)(v469 + 112) = *((void *)v470 + 14);
                        *(void *)(v469 + 120) = *((void *)v470 + 15);
                        *(void *)(v469 + 128) = *((void *)v470 + 16);
                        *(void *)(v469 + 136) = *((void *)v470 + 17);
                        *(void *)(v469 + 144) = *((void *)v470 + 18);
                        *(void *)(v469 + 152) = *((void *)v470 + 19);
                        *(void *)(v469 + 160) = *((void *)v470 + 20);
                        *(void *)(v469 + 168) = *((void *)v470 + 21);
                        *(unsigned char *)(v469 + 176) = *((unsigned char *)v470 + 176);
                        *(void *)(v469 + 184) = *((void *)v470 + 23);
                        uint64_t v488 = *((void *)v470 + 24);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        id v489 = v1023;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        if (v488)
                        {
                          *(void *)(v469 + 192) = v488;
                          *(void *)(v469 + 200) = *((void *)v470 + 25);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                        }
                        else
                        {
                          *(_OWORD *)(v469 + 192) = v470[12];
                        }
                        v3 = v1003;
                        unint64_t v63 = v1015;
                        unint64_t v225 = v971;
                        unsigned int v485 = v948;
                        unint64_t v62 = v924;
                        uint64_t v223 = AssociatedTypeWitness;
                        *(void *)(v469 + 208) = *((void *)v470 + 26);
                        *(void *)(v469 + 216) = *((void *)v470 + 27);
                        *(void *)(v469 + 224) = *((void *)v470 + 28);
                        *(void *)(v469 + 232) = *((void *)v470 + 29);
                        *(void *)(v469 + 240) = *((void *)v470 + 30);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                      }
                      else
                      {
                        long long v473 = *v470;
                        long long v474 = v470[1];
                        long long v475 = v470[3];
                        *(_OWORD *)(v469 + 32) = v470[2];
                        *(_OWORD *)(v469 + 48) = v475;
                        *(_OWORD *)size_t v469 = v473;
                        *(_OWORD *)(v469 + 16) = v474;
                        long long v476 = v470[4];
                        long long v477 = v470[5];
                        long long v478 = v470[7];
                        *(_OWORD *)(v469 + 96) = v470[6];
                        *(_OWORD *)(v469 + 112) = v478;
                        *(_OWORD *)(v469 + 64) = v476;
                        *(_OWORD *)(v469 + 80) = v477;
                        long long v479 = v470[8];
                        long long v480 = v470[9];
                        long long v481 = v470[11];
                        *(_OWORD *)(v469 + 160) = v470[10];
                        *(_OWORD *)(v469 + 176) = v481;
                        *(_OWORD *)(v469 + 128) = v479;
                        *(_OWORD *)(v469 + 144) = v480;
                        long long v482 = v470[12];
                        long long v483 = v470[13];
                        long long v484 = v470[14];
                        *(void *)(v469 + 240) = *((void *)v470 + 30);
                        *(_OWORD *)(v469 + 208) = v483;
                        *(_OWORD *)(v469 + 224) = v484;
                        *(_OWORD *)(v469 + 192) = v482;
                        unint64_t v63 = v1015;
                        unint64_t v225 = v971;
                        unsigned int v485 = v948;
                      }
                      v804 = (_OWORD *)((v469 + 255) & 0xFFFFFFFFFFFFFFF8);
                      v805 = (long long *)(((unint64_t)v470 + 255) & 0xFFFFFFFFFFFFFFF8);
                      long long v806 = *v805;
                      *(_OWORD *)((char *)v804 + 9) = *(long long *)((char *)v805 + 9);
                      _OWORD *v804 = v806;
                      unint64_t v807 = (v469 + 287) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v808 = ((unint64_t)v470 + 287) & 0xFFFFFFFFFFFFFFF8;
                      long long v809 = *(_OWORD *)v808;
                      *(unsigned char *)(v807 + 16) = *(unsigned char *)(v808 + 16);
                      *(_OWORD *)unint64_t v807 = v809;
                      v810 = (void *)((v469 + 311) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v811 = ((unint64_t)v470 + 311) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v812 = *(void *)v811;
                      v811 += 15;
                      void *v810 = v812;
                      v813 = (void *)(((unint64_t)v810 + 15) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v814 = *(void *)(v811 & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v815 = *(void *)((v811 & 0xFFFFFFFFFFFFFFF8) + 8);
                      sub_10018B584(v814, v815);
                      void *v813 = v814;
                      v813[1] = v815;
                      size_t v226 = v953;
                      v224 = (void *)((unint64_t)&v1003[v973] & v992);
                      if (!v485) {
                        goto LABEL_361;
                      }
LABEL_635:
                      unint64_t v816 = ((((v945
                               + ((((((((((v225 + v226 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 19) & 0xFFFFFFFFFFFFFFF8)
                                 + 25) & 0xFFFFFFFFFFFFFFF8)
                               + 327) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 16;
                      v817 = (void *)(((unint64_t)v224 + v1044 + v816) & v999);
                      v818 = (const void *)(((unint64_t)v1008 + v1044 + v816) & v999);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1031 + 48))(v818, 1, v223))
                      {
                        memcpy(v817, v818, v932);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1031 + 16))(v817, v818, v223);
                        (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v817, 0, 1, v223);
                      }
                      v819 = (char *)(((unint64_t)v817 + v949) & v1037);
                      v820 = (char *)(((unint64_t)v818 + v949) & v1037);
                      if (v967 == v985)
                      {
                        int v821 = (*(uint64_t (**)(unint64_t))(v984 + 48))(((unint64_t)v818 + v949) & v1037);
                      }
                      else
                      {
                        v822 = (uint64_t *)((unint64_t)&v820[v987] & 0xFFFFFFFFFFFFFFF8);
                        if (v942 <= 0x7FFFFFFE)
                        {
                          uint64_t v823 = *v822;
                          if ((unint64_t)*v822 >= 0xFFFFFFFF) {
                            LODWORD(v823) = -1;
                          }
                          size_t v824 = v1025;
                          if ((v823 + 1) >= 2) {
                            goto LABEL_647;
                          }
                          goto LABEL_649;
                        }
                        int v821 = (*(uint64_t (**)(unint64_t))(v965 + 48))(((unint64_t)v822 + v963) & v959);
                      }
                      size_t v824 = v1025;
                      if (v821)
                      {
LABEL_647:
                        size_t v825 = v824;
                        memcpy(v819, v820, v824);
LABEL_650:
                        *(void *)&v819[v825] = *(void *)&v820[v825];
                        v834 = (void *)((unint64_t)&v819[v825 + 15] & 0xFFFFFFFFFFFFFFF8);
                        v835 = (void *)((unint64_t)&v820[v825 + 15] & 0xFFFFFFFFFFFFFFF8);
                        void *v834 = *v835;
                        v836 = *(void **)(((unint64_t)v835 + 15) & 0xFFFFFFFFFFFFFFF8);
                        *(void *)(((unint64_t)v834 + 15) & 0xFFFFFFFFFFFFFFF8) = v836;
                        char v250 = 1;
                        v3[v62] = 1;
                        id v837 = v836;
                        goto LABEL_684;
                      }
                      v822 = (uint64_t *)((unint64_t)&v820[v987] & 0xFFFFFFFFFFFFFFF8);
LABEL_649:
                      size_t v825 = v824;
                      (*(void (**)(char *, char *, uint64_t))(v984 + 16))(v819, v820, v983);
                      v826 = (void *)((unint64_t)&v819[v987] & 0xFFFFFFFFFFFFFFF8);
                      void *v826 = *v822;
                      unint64_t v827 = ((unint64_t)v826 + v963) & v959;
                      unint64_t v828 = ((unint64_t)v822 + v963) & v959;
                      v829 = *(void (**)(unint64_t, unint64_t, uint64_t))(v965 + 16);
                      swift_bridgeObjectRetain();
                      v829(v827, v828, v964);
                      v830 = (void *)((v947 + v827) & 0xFFFFFFFFFFFFFFF8);
                      v831 = (void *)((v947 + v828) & 0xFFFFFFFFFFFFFFF8);
                      void *v830 = *v831;
                      v832 = (void *)(((unint64_t)v830 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v833 = (void *)(((unint64_t)v831 + 15) & 0xFFFFFFFFFFFFFFF8);
                      void *v832 = *v833;
                      v832[1] = v833[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      goto LABEL_650;
                    }
                    int v338 = (*(uint64_t (**)(size_t))(v988 + 48))(v337);
                  }
                  v221 = (void *)((unint64_t)&a2[v973] & v992);
                  if (v338) {
                    goto LABEL_360;
                  }
LABEL_546:
                  unint64_t v255 = ((unint64_t)v221 + v990) & v997;
                  unint64_t v256 = (v978 + v255) & v1001;
                  goto LABEL_547;
                case 2u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1009 + 16))(v1003, a2, v1021);
                  v227 = (void *)((unint64_t)&v1003[v938] & v999);
                  v228 = (const void *)((unint64_t)&a2[v938] & v999);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48))(v228, 1, AssociatedTypeWitness))
                  {
                    memcpy(v227, v228, v932);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v67 + 16))(v227, v228, AssociatedTypeWitness);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v227, 0, 1, AssociatedTypeWitness);
                  }
                  v265 = (char *)(((unint64_t)v227 + v949) & v1037);
                  v266 = (char *)(((unint64_t)v228 + v949) & v1037);
                  if (v967 == v985)
                  {
                    int v267 = (*(uint64_t (**)(char *))(v984 + 48))(v266);
                  }
                  else
                  {
                    v268 = (uint64_t *)((unint64_t)&v266[v987] & 0xFFFFFFFFFFFFFFF8);
                    if (v942 <= 0x7FFFFFFE)
                    {
                      uint64_t v269 = *v268;
                      if ((unint64_t)*v268 >= 0xFFFFFFFF) {
                        LODWORD(v269) = -1;
                      }
                      size_t v270 = v1025;
                      if ((v269 + 1) >= 2) {
                        goto LABEL_462;
                      }
                      goto LABEL_464;
                    }
                    int v267 = (*(uint64_t (**)(unint64_t))(v965 + 48))(((unint64_t)v268 + v963) & v959);
                  }
                  size_t v270 = v1025;
                  if (v267)
                  {
LABEL_462:
                    size_t v290 = v270;
                    memcpy(v265, v266, v270);
LABEL_465:
                    v299 = &v265[v290];
                    char *v299 = v266[v290];
                    v300 = *(void **)&v266[v290 + 8];
                    *((void *)v299 + 1) = v300;
                    v1003[v62] = 2;
                    id v301 = v300;
                    goto LABEL_428;
                  }
                  v268 = (uint64_t *)((unint64_t)&v266[v987] & 0xFFFFFFFFFFFFFFF8);
LABEL_464:
                  size_t v290 = v270;
                  (*(void (**)(char *, char *, uint64_t))(v984 + 16))(v265, v266, v983);
                  v291 = (void *)((unint64_t)&v265[v987] & 0xFFFFFFFFFFFFFFF8);
                  void *v291 = *v268;
                  unint64_t v292 = ((unint64_t)v291 + v963) & v959;
                  unint64_t v293 = ((unint64_t)v268 + v963) & v959;
                  v294 = *(void (**)(unint64_t, unint64_t, uint64_t))(v965 + 16);
                  swift_bridgeObjectRetain();
                  v294(v292, v293, v964);
                  v295 = (void *)((v947 + v292) & 0xFFFFFFFFFFFFFFF8);
                  v296 = (void *)((v947 + v293) & 0xFFFFFFFFFFFFFFF8);
                  void *v295 = *v296;
                  v297 = (void *)(((unint64_t)v295 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v298 = (void *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8);
                  void *v297 = *v298;
                  v297[1] = v298[1];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_465;
                case 3u:
                  v229 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1009 + 16);
                  v229(v1003, a2, v1021);
                  v230 = (void *)((unint64_t)&v1003[v973] & v992);
                  v231 = (void *)((unint64_t)&a2[v973] & v992);
                  unint64_t v923 = v62;
                  if (v975 == v51)
                  {
                    int v232 = (*(uint64_t (**)(unint64_t))(v1009 + 48))((unint64_t)&a2[v973] & v992);
LABEL_560:
                    v231 = (void *)((unint64_t)&a2[v973] & v992);
LABEL_561:
                    if (v232)
                    {
LABEL_562:
                      memcpy(v230, v231, __n);
                      unint64_t v490 = v923;
LABEL_563:
                      size_t v491 = v977;
                      goto LABEL_654;
                    }
                    unint64_t v257 = ((unint64_t)v231 + v990) & v997;
                    unint64_t v258 = (v978 + v257) & v1001;
                    goto LABEL_565;
                  }
                  unint64_t v257 = ((unint64_t)v231 + v990) & v997;
                  unint64_t v258 = (v978 + v257) & v1001;
                  if (v994 == v51)
                  {
                    if (v966 == v994)
                    {
                      int v232 = (*(uint64_t (**)(unint64_t))(v982 + 48))((v978 + v257) & v1001);
                      goto LABEL_560;
                    }
                    v328 = (unint64_t *)((v986 + v258) & 0xFFFFFFFFFFFFFFF8);
                    if (v941 > 0x7FFFFFFE)
                    {
                      int v232 = (*(uint64_t (**)(unint64_t))(v961 + 48))(((unint64_t)v328 + v960) & v958);
                      goto LABEL_560;
                    }
                    unint64_t v329 = *v328;
                  }
                  else
                  {
                    size_t v282 = v995 + v258;
                    if ((v933 & 0x80000000) == 0)
                    {
                      unint64_t v283 = *(void *)(v282 + 8);
                      if (v283 >= 0xFFFFFFFF) {
                        LODWORD(v283) = -1;
                      }
                      int v232 = v283 + 1;
                      goto LABEL_561;
                    }
                    size_t v339 = (v969 + ((v1011 + v282) & v968)) & v970;
                    if (v948 > 0x7FFFFFFD)
                    {
                      int v232 = (*(uint64_t (**)(size_t))(v988 + 48))(v339);
                      goto LABEL_560;
                    }
                    unint64_t v329 = *(void *)(((v943 + ((v956 + v339) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v329 >= 0xFFFFFFFF) {
                    LODWORD(v329) = -1;
                  }
                  if ((v329 + 1) >= 2) {
                    goto LABEL_562;
                  }
LABEL_565:
                  unint64_t v1016 = v63;
                  v229((unsigned __int8 *)v230, (unsigned __int8 *)v231, v1021);
                  v229((unsigned __int8 *)(((unint64_t)v230 + v990) & v997), (unsigned __int8 *)v257, v1021);
                  unint64_t v492 = (v978 + (((unint64_t)v230 + v990) & v997)) & v1001;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v982 + 16))(v492, v258, v981);
                  v493 = (void *)((v986 + v492) & 0xFFFFFFFFFFFFFFF8);
                  v494 = (void *)((v986 + v258) & 0xFFFFFFFFFFFFFFF8);
                  void *v493 = *v494;
                  unint64_t v495 = ((unint64_t)v493 + v960) & v958;
                  unint64_t v496 = ((unint64_t)v494 + v960) & v958;
                  v497 = *(void (**)(unint64_t, unint64_t, uint64_t))(v961 + 16);
                  swift_bridgeObjectRetain();
                  v497(v495, v496, v962);
                  v498 = (void *)((v946 + v496) & 0xFFFFFFFFFFFFFFF8);
                  v499 = (void *)((v946 + v495) & 0xFFFFFFFFFFFFFFF8);
                  void *v499 = *v498;
                  v500 = (void *)(((unint64_t)v499 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v501 = (void *)(((unint64_t)v498 + 15) & 0xFFFFFFFFFFFFFFF8);
                  void *v500 = *v501;
                  v500[1] = v501[1];
                  v502 = (void *)(v995 + v492);
                  void *v502 = *(void *)(v995 + v258);
                  v502[1] = *(void *)(v995 + v258 + 8);
                  size_t v503 = (v1011 + v995 + v492) & v968;
                  size_t v504 = (v1011 + v995 + v258) & v968;
                  *(unsigned char *)size_t v503 = *(unsigned char *)v504;
                  uint64_t v505 = v503 | 4;
                  int v506 = *(_DWORD *)(v504 | 4);
                  *(unsigned char *)(v505 + 4) = *(unsigned char *)((v504 | 4) + 4);
                  *(_DWORD *)uint64_t v505 = v506;
                  *(_WORD *)(v503 + 10) = *(_WORD *)(v504 + 0xA);
                  size_t v1034 = v503;
                  size_t v507 = (v969 + v503) & v970;
                  size_t v1027 = v504;
                  size_t v508 = (v969 + v504) & v970;
                  v509 = *(void (**)(size_t, size_t, uint64_t))(v988 + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v509(v507, v508, v957);
                  size_t v510 = (v956 + v507) & v970;
                  size_t v511 = (v956 + v508) & v970;
                  v509(v510, v511, v957);
                  v512 = (unsigned char *)(v510 + v953);
                  unsigned char *v512 = *(unsigned char *)(v511 + v953);
                  v512[1] = *(unsigned char *)(v511 + v953 + 1);
                  v512[2] = *(unsigned char *)(v511 + v953 + 2);
                  v512[3] = *(unsigned char *)(v511 + v953 + 3);
                  v512[4] = *(unsigned char *)(v511 + v953 + 4);
                  unint64_t v513 = (v510 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v514 = (v511 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v513 = *(void *)v514;
                  *(void *)(v513 + 8) = *(void *)(v514 + 8);
                  *(unsigned char *)(v513 + 16) = *(unsigned char *)(v514 + 16);
                  *(unsigned char *)(v513 + 17) = *(unsigned char *)(v514 + 17);
                  *(unsigned char *)(v513 + 18) = *(unsigned char *)(v514 + 18);
                  *(unsigned char *)(v513 + 19) = *(unsigned char *)(v514 + 19);
                  unint64_t v515 = (v513 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v516 = (v514 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v515 = *(void *)v516;
                  *(unsigned char *)(v515 + 8) = *(unsigned char *)(v516 + 8);
                  *(unsigned char *)(v515 + 9) = *(unsigned char *)(v516 + 9);
                  *(unsigned char *)(v515 + 10) = *(unsigned char *)(v516 + 10);
                  *(unsigned char *)(v515 + 11) = *(unsigned char *)(v516 + 11);
                  *(unsigned char *)(v515 + 12) = *(unsigned char *)(v516 + 12);
                  v517 = (void *)((v514 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v518 = (void *)((v513 + 47) & 0xFFFFFFFFFFFFFFF8);
                  void *v518 = *v517;
                  unint64_t v519 = ((unint64_t)v518 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v520 = ((unint64_t)v517 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v519 = *(void *)v520;
                  *(unsigned char *)(v519 + 8) = *(unsigned char *)(v520 + 8);
                  *(unsigned char *)(v519 + 9) = *(unsigned char *)(v520 + 9);
                  v521 = (void *)((v951 + v519) & v970);
                  v522 = (const void *)((v951 + v520) & v970);
                  v523 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v988 + 48);
                  swift_bridgeObjectRetain();
                  if (v523(v522, 1, v957))
                  {
                    memcpy(v521, v522, v977);
                  }
                  else
                  {
                    v509((size_t)v521, (size_t)v522, v957);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v988 + 56))(v521, 0, 1, v957);
                  }
                  unint64_t v490 = v923;
                  v524 = (void *)(((unint64_t)v521 + v952) & 0xFFFFFFFFFFFFFFF8);
                  v525 = (void *)(((unint64_t)v522 + v952) & 0xFFFFFFFFFFFFFFF8);
                  void *v524 = *v525;
                  unint64_t v526 = ((unint64_t)v524 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v527 = ((unint64_t)v525 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v528 = *(void *)v527;
                  *(unsigned char *)(v526 + 8) = *(unsigned char *)(v527 + 8);
                  *(void *)unint64_t v526 = v528;
                  v529 = (void *)(((unint64_t)v524 + 31) & 0xFFFFFFFFFFFFFFF8);
                  v530 = (void *)(((unint64_t)v525 + 31) & 0xFFFFFFFFFFFFFFF8);
                  void *v529 = *v530;
                  unint64_t v531 = ((unint64_t)v529 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v532 = (uint64_t *)(((unint64_t)v530 + 15) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v533 = v532[1];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if ((v533 & 0x3000000000000000) != 0)
                  {
                    *(_OWORD *)unint64_t v531 = *(_OWORD *)v532;
                  }
                  else
                  {
                    uint64_t v534 = *v532;
                    sub_10001EBB0(*v532, v533);
                    *(void *)unint64_t v531 = v534;
                    *(void *)(v531 + 8) = v533;
                  }
                  unsigned int v535 = v948;
                  v230 = (void *)((unint64_t)&v1003[v973] & v992);
                  unint64_t v536 = (v531 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v537 = ((unint64_t)v532 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v538 = *(void *)v537;
                  *(unsigned char *)(v536 + 8) = *(unsigned char *)(v537 + 8);
                  *(void *)unint64_t v536 = v538;
                  *(unsigned char *)(v536 + 9) = *(unsigned char *)(v537 + 9);
                  unint64_t v539 = (v536 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v540 = (v537 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  int v541 = *(_DWORD *)v540;
                  *(unsigned char *)(v539 + 4) = *(unsigned char *)(v540 + 4);
                  *(_DWORD *)unint64_t v539 = v541;
                  v542 = (void *)((v536 + 25) & 0xFFFFFFFFFFFFFFF8);
                  v543 = (void *)((v537 + 25) & 0xFFFFFFFFFFFFFFF8);
                  void *v542 = *v543;
                  v542[1] = v543[1];
                  size_t v544 = v1034 + v1010;
                  v545 = (long long *)(v1027 + v1010);
                  unint64_t v546 = *(void *)(v1027 + v1010 + 16);
                  if (v546 >= 0xFFFFFFFF) {
                    LODWORD(v546) = -1;
                  }
                  int v547 = v546 - 1;
                  swift_bridgeObjectRetain();
                  if (v547 < 0)
                  {
                    *(void *)size_t v544 = *(void *)v545;
                    *(unsigned char *)(v544 + 8) = *((unsigned char *)v545 + 8);
                    *(unsigned char *)(v544 + 9) = *((unsigned char *)v545 + 9);
                    uint64_t v560 = *((void *)v545 + 2);
                    swift_errorRetain();
                    *(void *)(v544 + 16) = v560;
                    uint64_t v561 = *((void *)v545 + 3);
                    swift_errorRetain();
                    *(void *)(v544 + 24) = v561;
                    *(unsigned char *)(v544 + 32) = *((unsigned char *)v545 + 32);
                    *(unsigned char *)(v544 + 33) = *((unsigned char *)v545 + 33);
                    *(unsigned char *)(v544 + 34) = *((unsigned char *)v545 + 34);
                    *(void *)(v544 + 40) = *((void *)v545 + 5);
                    *(void *)(v544 + 48) = *((void *)v545 + 6);
                    *(void *)(v544 + 56) = *((void *)v545 + 7);
                    *(void *)(v544 + 64) = *((void *)v545 + 8);
                    *(unsigned char *)(v544 + 72) = *((unsigned char *)v545 + 72);
                    *(void *)(v544 + 80) = *((void *)v545 + 10);
                    *(void *)(v544 + 88) = *((void *)v545 + 11);
                    v1035 = (void *)*((void *)v545 + 12);
                    *(void *)(v544 + 96) = v1035;
                    *(unsigned char *)(v544 + 104) = *((unsigned char *)v545 + 104);
                    *(unsigned char *)(v544 + 105) = *((unsigned char *)v545 + 105);
                    *(void *)(v544 + 112) = *((void *)v545 + 14);
                    *(void *)(v544 + 120) = *((void *)v545 + 15);
                    *(void *)(v544 + 128) = *((void *)v545 + 16);
                    *(void *)(v544 + 136) = *((void *)v545 + 17);
                    *(void *)(v544 + 144) = *((void *)v545 + 18);
                    *(void *)(v544 + 152) = *((void *)v545 + 19);
                    *(void *)(v544 + 160) = *((void *)v545 + 20);
                    *(void *)(v544 + 168) = *((void *)v545 + 21);
                    *(unsigned char *)(v544 + 176) = *((unsigned char *)v545 + 176);
                    *(void *)(v544 + 184) = *((void *)v545 + 23);
                    uint64_t v562 = *((void *)v545 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    id v563 = v1035;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v562)
                    {
                      *(void *)(v544 + 192) = v562;
                      *(void *)(v544 + 200) = *((void *)v545 + 25);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v544 + 192) = v545[12];
                    }
                    v3 = v1003;
                    unint64_t v63 = v1016;
                    unsigned int v535 = v948;
                    unint64_t v490 = v923;
                    v230 = (void *)((unint64_t)&v1003[v973] & v992);
                    *(void *)(v544 + 208) = *((void *)v545 + 26);
                    *(void *)(v544 + 216) = *((void *)v545 + 27);
                    *(void *)(v544 + 224) = *((void *)v545 + 28);
                    *(void *)(v544 + 232) = *((void *)v545 + 29);
                    *(void *)(v544 + 240) = *((void *)v545 + 30);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v548 = *v545;
                    long long v549 = v545[1];
                    long long v550 = v545[3];
                    *(_OWORD *)(v544 + 32) = v545[2];
                    *(_OWORD *)(v544 + 48) = v550;
                    *(_OWORD *)size_t v544 = v548;
                    *(_OWORD *)(v544 + 16) = v549;
                    long long v551 = v545[4];
                    long long v552 = v545[5];
                    long long v553 = v545[7];
                    *(_OWORD *)(v544 + 96) = v545[6];
                    *(_OWORD *)(v544 + 112) = v553;
                    *(_OWORD *)(v544 + 64) = v551;
                    *(_OWORD *)(v544 + 80) = v552;
                    long long v554 = v545[8];
                    long long v555 = v545[9];
                    long long v556 = v545[11];
                    *(_OWORD *)(v544 + 160) = v545[10];
                    *(_OWORD *)(v544 + 176) = v556;
                    *(_OWORD *)(v544 + 128) = v554;
                    *(_OWORD *)(v544 + 144) = v555;
                    long long v557 = v545[12];
                    long long v558 = v545[13];
                    long long v559 = v545[14];
                    *(void *)(v544 + 240) = *((void *)v545 + 30);
                    *(_OWORD *)(v544 + 208) = v558;
                    *(_OWORD *)(v544 + 224) = v559;
                    *(_OWORD *)(v544 + 192) = v557;
                    unint64_t v63 = v1016;
                  }
                  v838 = (_OWORD *)((v544 + 255) & 0xFFFFFFFFFFFFFFF8);
                  v839 = (long long *)(((unint64_t)v545 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v840 = *v839;
                  *(_OWORD *)((char *)v838 + 9) = *(long long *)((char *)v839 + 9);
                  _OWORD *v838 = v840;
                  unint64_t v841 = (v544 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v842 = ((unint64_t)v545 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v843 = *(_OWORD *)v842;
                  *(unsigned char *)(v841 + 16) = *(unsigned char *)(v842 + 16);
                  *(_OWORD *)unint64_t v841 = v843;
                  v844 = (void *)((v544 + 311) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v845 = ((unint64_t)v545 + 311) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v846 = *(void *)v845;
                  v845 += 15;
                  void *v844 = v846;
                  v847 = (void *)(((unint64_t)v844 + 15) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v848 = *(void *)(v845 & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v849 = *(void *)((v845 & 0xFFFFFFFFFFFFFFF8) + 8);
                  sub_10018B584(v848, v849);
                  void *v847 = v848;
                  v847[1] = v849;
                  size_t v491 = v953;
                  if (!v535) {
                    goto LABEL_563;
                  }
LABEL_654:
                  unint64_t v850 = ((((v945
                           + ((((((((((v971 + v491 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                               + 19) & 0xFFFFFFFFFFFFFFF8)
                             + 25) & 0xFFFFFFFFFFFFFFF8)
                           + 327) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 16;
                  v851 = (void *)(((unint64_t)v230 + v850) & 0xFFFFFFFFFFFFFFF8);
                  v852 = (void *)((((unint64_t)&a2[v973] & v992) + v850) & 0xFFFFFFFFFFFFFFF8);
                  void *v851 = *v852;
                  v851[1] = v852[1];
                  *(void *)(((unint64_t)v851 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v852
                                                                                                 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v3[v490] = 3;
                  swift_bridgeObjectRetain();
LABEL_428:
                  char v250 = 1;
LABEL_684:
                  v3[v63] = v250;
                  return v3;
                case 4u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1009 + 16))(v1003, a2, v1021);
                  char v233 = 4;
                  goto LABEL_427;
                case 5u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1009 + 16))(v1003, a2, v1021);
                  char v233 = 5;
                  goto LABEL_427;
                case 6u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1009 + 16))(v1003, a2, v1021);
                  v234 = (void *)((unint64_t)&v1003[v937] & v935);
                  uint64_t v235 = v50;
                  v236 = (const void *)((unint64_t)&a2[v937] & v935);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v940 + 48))(v236, 1, v235))
                  {
                    memcpy(v234, v236, v929);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v940 + 16))(v234, v236, v235);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v940 + 56))(v234, 0, 1, v235);
                  }
                  char v233 = 6;
                  goto LABEL_427;
                case 7u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1009 + 16))(v1003, a2, v1021);
                  char v233 = 7;
LABEL_427:
                  v1003[v62] = v233;
                  goto LABEL_428;
                default:
                  unint64_t v922 = v62;
                  v216 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1009 + 16);
                  v216(v1003, a2, v1021);
                  v217 = (void *)((unint64_t)&v1003[v973] & v992);
                  v218 = (void *)((unint64_t)&a2[v973] & v992);
                  if (v975 == v51)
                  {
                    int v219 = (*(uint64_t (**)(unint64_t))(v1009 + 48))((unint64_t)&a2[v973] & v992);
LABEL_527:
                    v218 = (void *)((unint64_t)&a2[v973] & v992);
LABEL_528:
                    if (v219)
                    {
LABEL_529:
                      memcpy(v217, v218, __n);
                      unint64_t v343 = v922;
                      goto LABEL_530;
                    }
                    unint64_t v253 = ((unint64_t)v218 + v990) & v997;
                    unint64_t v254 = (v978 + v253) & v1001;
LABEL_532:
                    unint64_t v1014 = v63;
                    v216((unsigned __int8 *)v217, (unsigned __int8 *)v218, v1021);
                    v216((unsigned __int8 *)(((unint64_t)v217 + v990) & v997), (unsigned __int8 *)v253, v1021);
                    unint64_t v345 = (v978 + (((unint64_t)v217 + v990) & v997)) & v1001;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v982 + 16))(v345, v254, v981);
                    v346 = (void *)((v986 + v345) & 0xFFFFFFFFFFFFFFF8);
                    v347 = (void *)((v986 + v254) & 0xFFFFFFFFFFFFFFF8);
                    void *v346 = *v347;
                    unint64_t v348 = ((unint64_t)v346 + v960) & v958;
                    unint64_t v349 = ((unint64_t)v347 + v960) & v958;
                    v350 = *(void (**)(unint64_t, unint64_t, uint64_t))(v961 + 16);
                    swift_bridgeObjectRetain();
                    v350(v348, v349, v962);
                    v351 = (void *)((v946 + v349) & 0xFFFFFFFFFFFFFFF8);
                    v352 = (void *)((v946 + v348) & 0xFFFFFFFFFFFFFFF8);
                    void *v352 = *v351;
                    v353 = (void *)(((unint64_t)v352 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v354 = (void *)(((unint64_t)v351 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v353 = *v354;
                    v353[1] = v354[1];
                    v355 = (void *)(v995 + v345);
                    void *v355 = *(void *)(v995 + v254);
                    v355[1] = *(void *)(v995 + v254 + 8);
                    size_t v356 = (v1011 + v995 + v345) & v968;
                    size_t v357 = (v1011 + v995 + v254) & v968;
                    *(unsigned char *)size_t v356 = *(unsigned char *)v357;
                    uint64_t v358 = v356 | 4;
                    int v359 = *(_DWORD *)(v357 | 4);
                    *(unsigned char *)(v358 + 4) = *(unsigned char *)((v357 | 4) + 4);
                    *(_DWORD *)uint64_t v358 = v359;
                    *(_WORD *)(v356 + 10) = *(_WORD *)(v357 + 0xA);
                    size_t v1032 = v356;
                    size_t v360 = (v969 + v356) & v970;
                    size_t v1026 = v357;
                    size_t v361 = (v969 + v357) & v970;
                    v362 = *(void (**)(size_t, size_t, uint64_t))(v988 + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v362(v360, v361, v957);
                    size_t v363 = (v956 + v360) & v970;
                    size_t v364 = (v956 + v361) & v970;
                    v362(v363, v364, v957);
                    v365 = (unsigned char *)(v363 + v953);
                    unsigned char *v365 = *(unsigned char *)(v364 + v953);
                    v365[1] = *(unsigned char *)(v364 + v953 + 1);
                    v365[2] = *(unsigned char *)(v364 + v953 + 2);
                    v365[3] = *(unsigned char *)(v364 + v953 + 3);
                    v365[4] = *(unsigned char *)(v364 + v953 + 4);
                    unint64_t v366 = (v363 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v367 = (v364 + v953 + 12) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v366 = *(void *)v367;
                    *(void *)(v366 + 8) = *(void *)(v367 + 8);
                    *(unsigned char *)(v366 + 16) = *(unsigned char *)(v367 + 16);
                    *(unsigned char *)(v366 + 17) = *(unsigned char *)(v367 + 17);
                    *(unsigned char *)(v366 + 18) = *(unsigned char *)(v367 + 18);
                    *(unsigned char *)(v366 + 19) = *(unsigned char *)(v367 + 19);
                    unint64_t v368 = (v366 + 27) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v369 = (v367 + 27) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v368 = *(void *)v369;
                    *(unsigned char *)(v368 + 8) = *(unsigned char *)(v369 + 8);
                    *(unsigned char *)(v368 + 9) = *(unsigned char *)(v369 + 9);
                    *(unsigned char *)(v368 + 10) = *(unsigned char *)(v369 + 10);
                    *(unsigned char *)(v368 + 11) = *(unsigned char *)(v369 + 11);
                    *(unsigned char *)(v368 + 12) = *(unsigned char *)(v369 + 12);
                    v370 = (void *)((v367 + 47) & 0xFFFFFFFFFFFFFFF8);
                    v371 = (void *)((v366 + 47) & 0xFFFFFFFFFFFFFFF8);
                    void *v371 = *v370;
                    unint64_t v372 = ((unint64_t)v371 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v373 = ((unint64_t)v370 + 15) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v372 = *(void *)v373;
                    *(unsigned char *)(v372 + 8) = *(unsigned char *)(v373 + 8);
                    *(unsigned char *)(v372 + 9) = *(unsigned char *)(v373 + 9);
                    v374 = (void *)((v951 + v372) & v970);
                    v375 = (const void *)((v951 + v373) & v970);
                    v376 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v988 + 48);
                    swift_bridgeObjectRetain();
                    if (v376(v375, 1, v957))
                    {
                      memcpy(v374, v375, v977);
                    }
                    else
                    {
                      v362((size_t)v374, (size_t)v375, v957);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v988 + 56))(v374, 0, 1, v957);
                    }
                    unint64_t v343 = v922;
                    v377 = (void *)(((unint64_t)v374 + v952) & 0xFFFFFFFFFFFFFFF8);
                    v378 = (void *)(((unint64_t)v375 + v952) & 0xFFFFFFFFFFFFFFF8);
                    void *v377 = *v378;
                    unint64_t v379 = ((unint64_t)v377 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v380 = ((unint64_t)v378 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v381 = *(void *)v380;
                    *(unsigned char *)(v379 + 8) = *(unsigned char *)(v380 + 8);
                    *(void *)unint64_t v379 = v381;
                    v382 = (void *)(((unint64_t)v377 + 31) & 0xFFFFFFFFFFFFFFF8);
                    v383 = (void *)(((unint64_t)v378 + 31) & 0xFFFFFFFFFFFFFFF8);
                    void *v382 = *v383;
                    unint64_t v384 = ((unint64_t)v382 + 15) & 0xFFFFFFFFFFFFFFF8;
                    v385 = (uint64_t *)(((unint64_t)v383 + 15) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v386 = v385[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if ((v386 & 0x3000000000000000) != 0)
                    {
                      *(_OWORD *)unint64_t v384 = *(_OWORD *)v385;
                    }
                    else
                    {
                      uint64_t v387 = *v385;
                      sub_10001EBB0(*v385, v386);
                      *(void *)unint64_t v384 = v387;
                      *(void *)(v384 + 8) = v386;
                    }
                    unsigned int v388 = v948;
                    v217 = (void *)((unint64_t)&v1003[v973] & v992);
                    unint64_t v389 = (v384 + 19) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v390 = ((unint64_t)v385 + 19) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v391 = *(void *)v390;
                    *(unsigned char *)(v389 + 8) = *(unsigned char *)(v390 + 8);
                    *(void *)unint64_t v389 = v391;
                    *(unsigned char *)(v389 + 9) = *(unsigned char *)(v390 + 9);
                    unint64_t v392 = (v389 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    unint64_t v393 = (v390 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    int v394 = *(_DWORD *)v393;
                    *(unsigned char *)(v392 + 4) = *(unsigned char *)(v393 + 4);
                    *(_DWORD *)unint64_t v392 = v394;
                    v395 = (void *)((v389 + 25) & 0xFFFFFFFFFFFFFFF8);
                    v396 = (void *)((v390 + 25) & 0xFFFFFFFFFFFFFFF8);
                    void *v395 = *v396;
                    v395[1] = v396[1];
                    size_t v397 = v1032 + v1010;
                    v398 = (long long *)(v1026 + v1010);
                    unint64_t v399 = *(void *)(v1026 + v1010 + 16);
                    if (v399 >= 0xFFFFFFFF) {
                      LODWORD(v399) = -1;
                    }
                    int v400 = v399 - 1;
                    swift_bridgeObjectRetain();
                    if (v400 < 0)
                    {
                      *(void *)size_t v397 = *(void *)v398;
                      *(unsigned char *)(v397 + 8) = *((unsigned char *)v398 + 8);
                      *(unsigned char *)(v397 + 9) = *((unsigned char *)v398 + 9);
                      uint64_t v413 = *((void *)v398 + 2);
                      swift_errorRetain();
                      *(void *)(v397 + 16) = v413;
                      uint64_t v414 = *((void *)v398 + 3);
                      swift_errorRetain();
                      *(void *)(v397 + 24) = v414;
                      *(unsigned char *)(v397 + 32) = *((unsigned char *)v398 + 32);
                      *(unsigned char *)(v397 + 33) = *((unsigned char *)v398 + 33);
                      *(unsigned char *)(v397 + 34) = *((unsigned char *)v398 + 34);
                      *(void *)(v397 + 40) = *((void *)v398 + 5);
                      *(void *)(v397 + 48) = *((void *)v398 + 6);
                      *(void *)(v397 + 56) = *((void *)v398 + 7);
                      *(void *)(v397 + 64) = *((void *)v398 + 8);
                      *(unsigned char *)(v397 + 72) = *((unsigned char *)v398 + 72);
                      *(void *)(v397 + 80) = *((void *)v398 + 10);
                      *(void *)(v397 + 88) = *((void *)v398 + 11);
                      v1033 = (void *)*((void *)v398 + 12);
                      *(void *)(v397 + 96) = v1033;
                      *(unsigned char *)(v397 + 104) = *((unsigned char *)v398 + 104);
                      *(unsigned char *)(v397 + 105) = *((unsigned char *)v398 + 105);
                      *(void *)(v397 + 112) = *((void *)v398 + 14);
                      *(void *)(v397 + 120) = *((void *)v398 + 15);
                      *(void *)(v397 + 128) = *((void *)v398 + 16);
                      *(void *)(v397 + 136) = *((void *)v398 + 17);
                      *(void *)(v397 + 144) = *((void *)v398 + 18);
                      *(void *)(v397 + 152) = *((void *)v398 + 19);
                      *(void *)(v397 + 160) = *((void *)v398 + 20);
                      *(void *)(v397 + 168) = *((void *)v398 + 21);
                      *(unsigned char *)(v397 + 176) = *((unsigned char *)v398 + 176);
                      *(void *)(v397 + 184) = *((void *)v398 + 23);
                      uint64_t v415 = *((void *)v398 + 24);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      id v416 = v1033;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      if (v415)
                      {
                        *(void *)(v397 + 192) = v415;
                        *(void *)(v397 + 200) = *((void *)v398 + 25);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                      }
                      else
                      {
                        *(_OWORD *)(v397 + 192) = v398[12];
                      }
                      v3 = v1003;
                      unint64_t v63 = v1014;
                      unsigned int v388 = v948;
                      unint64_t v343 = v922;
                      v217 = (void *)((unint64_t)&v1003[v973] & v992);
                      *(void *)(v397 + 208) = *((void *)v398 + 26);
                      *(void *)(v397 + 216) = *((void *)v398 + 27);
                      *(void *)(v397 + 224) = *((void *)v398 + 28);
                      *(void *)(v397 + 232) = *((void *)v398 + 29);
                      *(void *)(v397 + 240) = *((void *)v398 + 30);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      long long v401 = *v398;
                      long long v402 = v398[1];
                      long long v403 = v398[3];
                      *(_OWORD *)(v397 + 32) = v398[2];
                      *(_OWORD *)(v397 + 48) = v403;
                      *(_OWORD *)size_t v397 = v401;
                      *(_OWORD *)(v397 + 16) = v402;
                      long long v404 = v398[4];
                      long long v405 = v398[5];
                      long long v406 = v398[7];
                      *(_OWORD *)(v397 + 96) = v398[6];
                      *(_OWORD *)(v397 + 112) = v406;
                      *(_OWORD *)(v397 + 64) = v404;
                      *(_OWORD *)(v397 + 80) = v405;
                      long long v407 = v398[8];
                      long long v408 = v398[9];
                      long long v409 = v398[11];
                      *(_OWORD *)(v397 + 160) = v398[10];
                      *(_OWORD *)(v397 + 176) = v409;
                      *(_OWORD *)(v397 + 128) = v407;
                      *(_OWORD *)(v397 + 144) = v408;
                      long long v410 = v398[12];
                      long long v411 = v398[13];
                      long long v412 = v398[14];
                      *(void *)(v397 + 240) = *((void *)v398 + 30);
                      *(_OWORD *)(v397 + 208) = v411;
                      *(_OWORD *)(v397 + 224) = v412;
                      *(_OWORD *)(v397 + 192) = v410;
                      unint64_t v63 = v1014;
                    }
                    v787 = (_OWORD *)((v397 + 255) & 0xFFFFFFFFFFFFFFF8);
                    v788 = (long long *)(((unint64_t)v398 + 255) & 0xFFFFFFFFFFFFFFF8);
                    long long v789 = *v788;
                    *(_OWORD *)((char *)v787 + 9) = *(long long *)((char *)v788 + 9);
                    _OWORD *v787 = v789;
                    unint64_t v790 = (v397 + 287) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v791 = ((unint64_t)v398 + 287) & 0xFFFFFFFFFFFFFFF8;
                    long long v792 = *(_OWORD *)v791;
                    *(unsigned char *)(v790 + 16) = *(unsigned char *)(v791 + 16);
                    *(_OWORD *)unint64_t v790 = v792;
                    v793 = (void *)((v397 + 311) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v794 = ((unint64_t)v398 + 311) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v795 = *(void *)v794;
                    v794 += 15;
                    void *v793 = v795;
                    v796 = (void *)(((unint64_t)v793 + 15) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v797 = *(void *)(v794 & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v798 = *(void *)((v794 & 0xFFFFFFFFFFFFFFF8) + 8);
                    sub_10018B584(v797, v798);
                    void *v796 = v797;
                    v796[1] = v798;
                    size_t v344 = v953;
                    if (v388)
                    {
LABEL_631:
                      unint64_t v799 = ((((v945
                               + ((((((((((v971 + v344 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 19) & 0xFFFFFFFFFFFFFFF8)
                                 + 25) & 0xFFFFFFFFFFFFFFF8)
                               + 327) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 16;
                      v800 = (void *)(((unint64_t)v217 + v799) & 0xFFFFFFFFFFFFFFF8);
                      v801 = (void *)((((unint64_t)&a2[v973] & v992) + v799) & 0xFFFFFFFFFFFFFFF8);
                      void *v800 = *v801;
                      v802 = *(void **)(((unint64_t)v801 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *(void *)(((unint64_t)v800 + 15) & 0xFFFFFFFFFFFFFFF8) = v802;
                      v3[v343] = 0;
                      id v803 = v802;
                      goto LABEL_428;
                    }
LABEL_530:
                    size_t v344 = v977;
                    goto LABEL_631;
                  }
                  unint64_t v253 = ((unint64_t)v218 + v990) & v997;
                  unint64_t v254 = (v978 + v253) & v1001;
                  if (v994 == v51)
                  {
                    if (v966 == v994)
                    {
                      int v219 = (*(uint64_t (**)(unint64_t))(v982 + 48))((v978 + v253) & v1001);
                      goto LABEL_527;
                    }
                    v324 = (unint64_t *)((v986 + v254) & 0xFFFFFFFFFFFFFFF8);
                    if (v941 > 0x7FFFFFFE)
                    {
                      int v219 = (*(uint64_t (**)(unint64_t))(v961 + 48))(((unint64_t)v324 + v960) & v958);
                      goto LABEL_527;
                    }
                    unint64_t v325 = *v324;
                  }
                  else
                  {
                    size_t v278 = v995 + v254;
                    if ((v933 & 0x80000000) == 0)
                    {
                      unint64_t v279 = *(void *)(v278 + 8);
                      if (v279 >= 0xFFFFFFFF) {
                        LODWORD(v279) = -1;
                      }
                      int v219 = v279 + 1;
                      goto LABEL_528;
                    }
                    size_t v336 = (v969 + ((v1011 + v278) & v968)) & v970;
                    if (v948 > 0x7FFFFFFD)
                    {
                      int v219 = (*(uint64_t (**)(size_t))(v988 + 48))(v336);
                      goto LABEL_527;
                    }
                    unint64_t v325 = *(void *)(((v943 + ((v956 + v336) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v325 >= 0xFFFFFFFF) {
                    LODWORD(v325) = -1;
                  }
                  if ((v325 + 1) >= 2) {
                    goto LABEL_529;
                  }
                  goto LABEL_532;
              }
            }
LABEL_315:
            (*(void (**)(size_t, uint64_t))(v982 + 8))(v163, v981);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v961 + 8))(((unint64_t)v189 + v960) & v958, v962);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_316;
          }
          int v164 = (*(uint64_t (**)(unint64_t))(v961 + 48))(((unint64_t)v189 + v960) & v958);
        }
        if (v164) {
          goto LABEL_316;
        }
        v189 = (uint64_t *)((v986 + v163) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_315;
      case 3u:
        uint64_t v928 = *(void *)(v1007 - 8);
        v165 = *(void (**)(unsigned __int8 *, uint64_t))(v67 + 8);
        v165(v1003, AssociatedTypeWitness);
        unint64_t v166 = (unint64_t)&v1003[v974] & v972;
        if (v1013 == v976)
        {
          v167 = *(uint64_t (**)(unint64_t))(v67 + 48);
          unint64_t v168 = (unint64_t)&v1003[v974] & v972;
          goto LABEL_214;
        }
        unint64_t v170 = (v979 + v166) & v999;
        unint64_t v171 = (v980 + v170) & v1037;
        if (v985 == v976)
        {
          if (v967 == v985)
          {
            v167 = *(uint64_t (**)(unint64_t))(v984 + 48);
            unint64_t v168 = (v980 + v170) & v1037;
            goto LABEL_214;
          }
          v322 = (unint64_t *)((v987 + v171) & 0xFFFFFFFFFFFFFFF8);
          if (v942 <= 0x7FFFFFFE)
          {
            unint64_t v323 = *v322;
            goto LABEL_702;
          }
          unint64_t v168 = ((unint64_t)v322 + v963) & v959;
          v167 = *(uint64_t (**)(unint64_t))(v965 + 48);
        }
        else
        {
          unint64_t v276 = v1025 + v171;
          if ((v934 & 0x80000000) == 0)
          {
            unint64_t v277 = *(void *)(v276 + 8);
            if (v277 >= 0xFFFFFFFF) {
              LODWORD(v277) = -1;
            }
            if (v277 != -1) {
              goto LABEL_227;
            }
            goto LABEL_215;
          }
          unint64_t v168 = (v969 + ((v1011 + v276) & v968)) & v970;
          if (v948 <= 0x7FFFFFFD)
          {
            unint64_t v323 = *(void *)(((v943 + ((v956 + v168) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_702:
            if (v323 >= 0xFFFFFFFF) {
              LODWORD(v323) = -1;
            }
            if ((v323 + 1) >= 2) {
              goto LABEL_227;
            }
LABEL_216:
            v165((unsigned __int8 *)v166, AssociatedTypeWitness);
            v165((unsigned __int8 *)v170, AssociatedTypeWitness);
            (*(void (**)(unint64_t, uint64_t))(v984 + 8))(v171, v983);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v965 + 8))((v963 + ((v987 + v171) & 0xFFFFFFFFFFFFFFF8)) & v959, v964);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v172 = (v1011 + v1025 + v171) & v968;
            v173 = *(void (**)(unint64_t, uint64_t))(v988 + 8);
            v173((v969 + v172) & v970, v957);
            unint64_t v174 = (v956 + ((v969 + v172) & v970)) & v970;
            v173(v174, v957);
            swift_bridgeObjectRelease();
            unint64_t v175 = (v951
                  + ((((((v943 + v174) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v970;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v988 + 48))(v175, 1, v957)) {
              v173(v175, v957);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v176 = (uint64_t *)((((((v952 + v175) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v177 = v176[1];
            if ((v177 & 0x3000000000000000) == 0) {
              sub_10001E9C0(*v176, v177);
            }
            swift_bridgeObjectRelease();
            unint64_t v178 = v1010 + v172;
            LODWORD(v179) = -1;
            if (*(void *)(v178 + 16) < 0xFFFFFFFFuLL) {
              uint64_t v179 = *(void *)(v178 + 16);
            }
            if ((int)v179 - 1 < 0)
            {
              swift_errorRelease();
              swift_errorRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v178 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_1000CF144(*(void *)((((v178 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v178 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            goto LABEL_227;
          }
          v167 = *(uint64_t (**)(unint64_t))(v988 + 48);
        }
LABEL_214:
        int v169 = v167(v168);
        unint64_t v166 = (unint64_t)&v1003[v974] & v972;
        if (v169) {
          goto LABEL_227;
        }
LABEL_215:
        unint64_t v170 = (v979 + v166) & v999;
        unint64_t v171 = (v980 + v170) & v1037;
        goto LABEL_216;
      case 4u:
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v67 + 8))(v1003, AssociatedTypeWitness);
        goto LABEL_318;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v67 + 8))(v1003, AssociatedTypeWitness);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v42 + 48))((unint64_t)&v1003[v939] & v936, 1, v1007))(*(void (**)(unint64_t, uint64_t))(v42 + 8))((unint64_t)&v1003[v939] & v936, v1007); {
        goto LABEL_318;
        }
      default:
        uint64_t v928 = *(void *)(v1007 - 8);
        v130 = *(void (**)(unsigned __int8 *, uint64_t))(v67 + 8);
        v130(v1003, AssociatedTypeWitness);
        unint64_t v78 = (unint64_t)&v1003[v974] & v972;
        if (v1013 == v976)
        {
          v131 = *(uint64_t (**)(unint64_t))(v67 + 48);
          unint64_t v132 = (unint64_t)&v1003[v974] & v972;
          goto LABEL_174;
        }
        unint64_t v134 = (v979 + v78) & v999;
        unint64_t v135 = (v980 + v134) & v1037;
        if (v985 == v976)
        {
          if (v967 == v985)
          {
            v131 = *(uint64_t (**)(unint64_t))(v984 + 48);
            unint64_t v132 = (v980 + v134) & v1037;
            goto LABEL_174;
          }
          v318 = (unint64_t *)((v987 + v135) & 0xFFFFFFFFFFFFFFF8);
          if (v942 <= 0x7FFFFFFE)
          {
            unint64_t v319 = *v318;
            goto LABEL_692;
          }
          unint64_t v132 = ((unint64_t)v318 + v963) & v959;
          v131 = *(uint64_t (**)(unint64_t))(v965 + 48);
        }
        else
        {
          unint64_t v198 = v1025 + v135;
          if ((v934 & 0x80000000) == 0)
          {
            unint64_t v199 = *(void *)(v198 + 8);
            if (v199 >= 0xFFFFFFFF) {
              LODWORD(v199) = -1;
            }
            if (v199 == -1)
            {
LABEL_175:
              unint64_t v134 = (v979 + v78) & v999;
              unint64_t v135 = (v980 + v134) & v1037;
LABEL_176:
              unint64_t v919 = v78;
              v130((unsigned __int8 *)v78, AssociatedTypeWitness);
              v130((unsigned __int8 *)v134, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v984 + 8))(v135, v983);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v965 + 8))((v963 + ((v987 + v135) & 0xFFFFFFFFFFFFFFF8)) & v959, v964);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v136 = (v1011 + v1025 + v135) & v968;
              v137 = *(void (**)(unint64_t, uint64_t))(v988 + 8);
              v137((v969 + v136) & v970, v957);
              unint64_t v138 = (v956 + ((v969 + v136) & v970)) & v970;
              v137(v138, v957);
              swift_bridgeObjectRelease();
              unint64_t v139 = (v951
                    + ((((((v943 + v138) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v970;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v988 + 48))(v139, 1, v957)) {
                v137(v139, v957);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v140 = (uint64_t *)((((((v952 + v139) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v141 = v140[1];
              if ((v141 & 0x3000000000000000) == 0) {
                sub_10001E9C0(*v140, v141);
              }
              swift_bridgeObjectRelease();
              unint64_t v142 = v1010 + v136;
              LODWORD(v143) = -1;
              if (*(void *)(v142 + 16) < 0xFFFFFFFFuLL) {
                uint64_t v143 = *(void *)(v142 + 16);
              }
              if ((int)v143 - 1 < 0)
              {
                swift_errorRelease();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v142 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1000CF144(*(void *)((((v142 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v142 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              unint64_t v78 = v919;
            }
LABEL_187:
            unint64_t v92 = ((((v944 + v1010 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
            goto LABEL_188;
          }
          unint64_t v132 = (v969 + ((v1011 + v198) & v968)) & v970;
          if (v948 <= 0x7FFFFFFD)
          {
            unint64_t v319 = *(void *)(((v943 + ((v956 + v132) & v970)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_692:
            if (v319 >= 0xFFFFFFFF) {
              LODWORD(v319) = -1;
            }
            if ((v319 + 1) < 2) {
              goto LABEL_176;
            }
            goto LABEL_187;
          }
          v131 = *(uint64_t (**)(unint64_t))(v988 + 48);
        }
LABEL_174:
        int v133 = v131(v132);
        unint64_t v78 = (unint64_t)&v1003[v974] & v972;
        if (v133) {
          goto LABEL_187;
        }
        goto LABEL_175;
    }
  }
  return v3;
}

uint64_t sub_100672610(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v795 = *(void *)(v4 + 64);
  uint64_t v797 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v767 = v3;
  uint64_t v724 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v724 - 8);
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v711 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v711 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 | v8 | 7;
  uint64_t v733 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v733 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v11 | 7;
  uint64_t v13 = v9 | v797 | v11;
  uint64_t v745 = v4;
  uint64_t v725 = v5;
  uint64_t v712 = v7;
  unsigned int v14 = *(_DWORD *)(v7 + 84);
  unsigned int v683 = v14;
  unsigned int v714 = *(_DWORD *)(v5 + 84);
  if (v714 > v14) {
    unsigned int v14 = *(_DWORD *)(v5 + 84);
  }
  unsigned int v700 = v14;
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  unsigned int v785 = *(_DWORD *)(v4 + 84);
  unsigned int v727 = v14;
  if (v14 <= v785) {
    unsigned int v14 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v734 = *(void *)(v733 - 8);
  unsigned int v15 = *(_DWORD *)(v10 + 84);
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v15;
  }
  unsigned int v773 = v16;
  if (v14 <= v16) {
    unsigned int v14 = v16;
  }
  unsigned int v685 = v14;
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  unsigned int v721 = v14;
  unsigned int v715 = v15;
  uint64_t v729 = v795 + v797;
  uint64_t v760 = v9;
  uint64_t v731 = v795 + v9;
  uint64_t v728 = *(void *)(v5 + 64) + 7;
  uint64_t v710 = v8 + 8;
  uint64_t v703 = *(void *)(v7 + 64) + 7;
  size_t v792 = ((((v703 + ((v8 + 8 + (v728 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v754 = v11 | 7;
  uint64_t v784 = v12 + 16;
  uint64_t v716 = v11 + 12;
  size_t v17 = *(void *)(*(void *)(v733 - 8) + 64);
  size_t v708 = v17 + v11;
  size_t v680 = v17 + 12;
  unint64_t v18 = (v11
       + 10
       + ((((((v17 + 12 + ((v17 + v11 + ((v11 + 12) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  size_t v735 = v17;
  if (!v15) {
    ++v17;
  }
  size_t v736 = v17;
  unint64_t v737 = v18;
  size_t v706 = v17 + 7;
  uint64_t v707 = v11 + 10;
  unint64_t v783 = ((((((((((v17 + 7 + v18) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v717 = (v12 + 16 + v792 + ((v795 + v9 + ((v795 + v797) & ~v797)) & ~v9)) & ~v12;
  uint64_t v738 = v9 | v797 | v11;
  unint64_t v719 = v13 + v795;
  unint64_t v702 = ((((v717 + v783 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v19 = v702 + ((v13 + v795) & ~v13);
  unint64_t v750 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)(a3 + 24);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v747 = v21;
  unint64_t v748 = (v19 + v23) & ~v23;
  uint64_t v744 = v22;
  unsigned int v24 = *(_DWORD *)(v22 + 84);
  unint64_t v25 = *(void *)(v22 + 64);
  if (v24) {
    size_t v26 = *(void *)(v22 + 64);
  }
  else {
    size_t v26 = v25 + 1;
  }
  size_t v777 = v26;
  uint64_t v722 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v722 - 8);
  int v28 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v709 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v709 - 8);
  uint64_t v30 = v27;
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = v28 | v31 | 7;
  uint64_t v723 = v27;
  unsigned int v33 = *(_DWORD *)(v29 + 84);
  unsigned int v682 = v33;
  unsigned int v713 = *(_DWORD *)(v27 + 84);
  if (v713 > v33) {
    unsigned int v33 = *(_DWORD *)(v27 + 84);
  }
  unsigned int v699 = v33;
  if (v33 <= 0x7FFFFFFE) {
    unsigned int v34 = 2147483646;
  }
  else {
    unsigned int v34 = v33;
  }
  uint64_t v732 = *(void *)(v30 + 64) + 7;
  uint64_t v35 = v31 + 8;
  uint64_t v36 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
  unint64_t v37 = ((((v36 + ((v31 + 8 + (v732 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v38 = ((((((v777 + v32 + v748) & ~v32) + v37 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v687 = v795 + v23;
  size_t v705 = v777 + v32;
  uint64_t v39 = *(void *)(v767 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v686 = v795 + v40;
  size_t v41 = *(void *)(v39 + 64);
  if (!*(_DWORD *)(v39 + 84)) {
    ++v41;
  }
  size_t v681 = v41;
  unint64_t v42 = ((v795 + v40) & ~v40) + v41;
  unint64_t v43 = ((v750 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v795 > v43) {
    unint64_t v43 = v795;
  }
  if (v38 <= v37 + ((v777 + v32 + ((v795 + v23) & ~v23)) & ~v32) + 16) {
    unint64_t v38 = v37 + ((v777 + v32 + ((v795 + v23) & ~v23)) & ~v32) + 16;
  }
  if (((v750 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v42) {
    unint64_t v42 = ((v750 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v43 > v38) {
    unint64_t v38 = v43;
  }
  if (v38 <= v42) {
    unint64_t v44 = v42;
  }
  else {
    unint64_t v44 = v38;
  }
  uint64_t v45 = v11;
  uint64_t v46 = v23 | v11 | v32;
  unsigned int v726 = v34;
  unsigned int v720 = v24;
  if (v34 <= v24) {
    unsigned int v47 = v24;
  }
  else {
    unsigned int v47 = v34;
  }
  if (v47 <= v773) {
    unsigned int v47 = v773;
  }
  unsigned int v684 = v47;
  if (v47 <= 0x7FFFFFFF) {
    unsigned int v47 = 0x7FFFFFFF;
  }
  unsigned int v718 = v47;
  uint64_t v774 = v23;
  uint64_t v751 = v25 + v23;
  unint64_t v48 = (v25 + v23) & ~v23;
  if (v785) {
    size_t v49 = v795;
  }
  else {
    size_t v49 = v795 + 1;
  }
  uint64_t v692 = v20;
  uint64_t v50 = *(void *)(v20 - 8);
  uint64_t v51 = *(unsigned __int8 *)(v50 + 80);
  uint64_t v749 = v25 + v32;
  unint64_t v52 = (v784 + v37 + ((v25 + v32 + v48) & ~v32)) & ~v754;
  unint64_t v53 = v46 + v25;
  unint64_t v701 = ((((v52 + v783 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v54 = v701 + ((v46 + v25) & ~v46);
  size_t __n = v49;
  uint64_t v55 = v25 + v797;
  size_t v704 = v49 + v760;
  if (*(_DWORD *)(v50 + 84)) {
    size_t v56 = *(void *)(*(void *)(v20 - 8) + 64);
  }
  else {
    size_t v56 = *(void *)(*(void *)(v20 - 8) + 64) + 1;
  }
  if (v25 <= ((v54 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v57 = ((v54 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v57 = v25;
  }
  if (((((((v49 + v760 + ((v54 + v797) & ~v797)) & ~v760) + v792 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 <= ((v49 + v760 + ((v25 + v797) & ~v797)) & ~v760) + v792 + 16)
    unint64_t v58 = ((v49 + v760 + ((v25 + v797) & ~v797)) & ~v760) + v792 + 16;
  else {
    unint64_t v58 = ((((((v49 + v760 + ((v54 + v797) & ~v797)) & ~v760) + v792 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
  }
        + 8;
  unint64_t v59 = ((v54 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v60 = v25 + v51;
  if (v59 <= (v60 & ~v51) + v56) {
    unint64_t v59 = (v60 & ~v51) + v56;
  }
  if (v57 <= v58) {
    unint64_t v57 = v58;
  }
  if (v57 <= v59) {
    unint64_t v61 = v59;
  }
  else {
    unint64_t v61 = v57;
  }
  unint64_t v62 = v44;
  if (v61 + 1 <= v44 + 1) {
    unint64_t v63 = v44 + 1;
  }
  else {
    unint64_t v63 = v61 + 1;
  }
  unsigned int v64 = a2[v63];
  unsigned int v65 = v64 - 2;
  if (v64 >= 2)
  {
    if (v63 <= 3) {
      uint64_t v66 = v63;
    }
    else {
      uint64_t v66 = 4;
    }
    switch(v66)
    {
      case 1:
        int v67 = *a2;
        if (v63 < 4) {
          goto LABEL_78;
        }
        goto LABEL_79;
      case 2:
        int v67 = *(unsigned __int16 *)a2;
        if (v63 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_78;
      case 3:
        int v67 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v63 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_78;
      case 4:
        int v67 = *(_DWORD *)a2;
        if (v63 < 4) {
LABEL_78:
        }
          v67 |= v65 << (8 * v63);
LABEL_79:
        unsigned int v64 = v67 + 2;
        break;
      default:
        break;
    }
  }
  unint64_t v796 = v63;
  uint64_t v753 = ~v797;
  uint64_t v68 = ~v760;
  uint64_t v69 = ~v8;
  uint64_t v761 = ~v754;
  uint64_t v70 = ~v45;
  uint64_t v764 = ~v774;
  uint64_t v71 = ~v32;
  uint64_t v72 = ~v31;
  if (v64 != 1)
  {
    unint64_t v78 = v62;
    unsigned int v79 = a2[v62];
    unsigned int v80 = v79 - 8;
    if (v79 < 8)
    {
      uint64_t v82 = a1;
      uint64_t v83 = v738;
    }
    else
    {
      if (v62 <= 3) {
        uint64_t v81 = v62;
      }
      else {
        uint64_t v81 = 4;
      }
      uint64_t v82 = a1;
      uint64_t v83 = v738;
      switch(v81)
      {
        case 1:
          int v84 = *a2;
          if (v62 < 4) {
            goto LABEL_120;
          }
          goto LABEL_122;
        case 2:
          int v84 = *(unsigned __int16 *)a2;
          if (v62 >= 4) {
            goto LABEL_122;
          }
          goto LABEL_120;
        case 3:
          int v84 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v62 < 4) {
            goto LABEL_120;
          }
          goto LABEL_122;
        case 4:
          int v84 = *(_DWORD *)a2;
          if (v62 < 4) {
LABEL_120:
          }
            unsigned int v79 = (v84 | (v80 << (8 * v62))) + 8;
          else {
LABEL_122:
          }
            unsigned int v79 = v84 + 8;
          break;
        default:
          break;
      }
    }
    uint64_t v119 = ~v83;
    uint64_t v120 = ~v40;
    switch(v79)
    {
      case 1u:
        uint64_t v752 = v71;
        uint64_t v742 = v72;
        uint64_t v690 = v69;
        uint64_t v758 = v35;
        uint64_t v696 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
        uint64_t v771 = *(void *)(v709 - 8);
        size_t v677 = v37;
        unint64_t v800 = v78;
        size_t v124 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32);
        v124(v82, a2, AssociatedTypeWitness);
        v766 = (void *)((v719 + v82) & v119);
        unint64_t v125 = (void *)((unint64_t)&a2[v719] & v119);
        if (v785 == v721)
        {
          int v126 = (*(uint64_t (**)(void *))(v745 + 48))(v125);
LABEL_300:
          uint64_t v148 = v68;
LABEL_301:
          if (v126)
          {
LABEL_302:
            unint64_t v515 = v766;
            memcpy(v766, v125, v702);
            size_t v517 = v736;
            unint64_t v516 = v737;
            uint64_t v518 = v717;
            goto LABEL_303;
          }
          unint64_t v147 = ((unint64_t)v125 + v729) & v753;
          unint64_t v149 = (v731 + v147) & v148;
LABEL_305:
          unint64_t v790 = v125;
          uint64_t v520 = v148;
          v124((uint64_t)v766, (unsigned __int8 *)v125, AssociatedTypeWitness);
          unint64_t v521 = ((unint64_t)v766 + v729) & v753;
          v124(v521, (unsigned __int8 *)v147, AssociatedTypeWitness);
          unint64_t v522 = (v731 + v521) & v520;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 32))(v522, v149, v724);
          v523 = (void *)((v728 + v522) & 0xFFFFFFFFFFFFFFF8);
          v524 = (void *)((v728 + v149) & 0xFFFFFFFFFFFFFFF8);
          void *v523 = *v524;
          unint64_t v525 = ((unint64_t)v523 + v710) & v690;
          unint64_t v526 = ((unint64_t)v524 + v710) & v690;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v525, v526, v711);
          unint64_t v527 = (void *)((v703 + v525) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v528 = (void *)((v703 + v526) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v527 = *v528;
          *(_OWORD *)(((unint64_t)v527 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v528 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v792 + v522) = *(_OWORD *)(v792 + v149);
          size_t v529 = (v784 + v792 + v522) & v761;
          size_t v530 = (v784 + v792 + v149) & v761;
          *(unsigned char *)size_t v529 = *(unsigned char *)v530;
          uint64_t v531 = v529 | 4;
          int v532 = *(_DWORD *)(v530 | 4);
          *(unsigned char *)(v531 + 4) = *(unsigned char *)((v530 | 4) + 4);
          *(_DWORD *)uint64_t v531 = v532;
          *(_WORD *)(v529 + 10) = *(_WORD *)(v530 + 0xA);
          unint64_t v533 = *(void (**)(size_t, size_t, uint64_t))(v734 + 32);
          v533((v716 + v529) & v70, (v716 + v530) & v70, v733);
          size_t v534 = (v708 + ((v716 + v529) & v70)) & v70;
          size_t v535 = (v708 + ((v716 + v530) & v70)) & v70;
          v533(v534, v535, v733);
          unint64_t v536 = (unsigned char *)(v534 + v735);
          *unint64_t v536 = *(unsigned char *)(v535 + v735);
          v536[1] = *(unsigned char *)(v535 + v735 + 1);
          v536[2] = *(unsigned char *)(v535 + v735 + 2);
          v536[3] = *(unsigned char *)(v535 + v735 + 3);
          v536[4] = *(unsigned char *)(v535 + v735 + 4);
          unint64_t v537 = (v534 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v538 = (v535 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v537 = *(_OWORD *)v538;
          *(unsigned char *)(v537 + 16) = *(unsigned char *)(v538 + 16);
          *(unsigned char *)(v537 + 17) = *(unsigned char *)(v538 + 17);
          *(unsigned char *)(v537 + 18) = *(unsigned char *)(v538 + 18);
          *(unsigned char *)(v537 + 19) = *(unsigned char *)(v538 + 19);
          unint64_t v539 = (v537 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v540 = (v538 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v539 = *(void *)v540;
          *(unsigned char *)(v539 + 8) = *(unsigned char *)(v540 + 8);
          *(unsigned char *)(v539 + 9) = *(unsigned char *)(v540 + 9);
          *(unsigned char *)(v539 + 10) = *(unsigned char *)(v540 + 10);
          *(unsigned char *)(v539 + 11) = *(unsigned char *)(v540 + 11);
          *(unsigned char *)(v539 + 12) = *(unsigned char *)(v540 + 12);
          int v541 = (void *)((v538 + 47) & 0xFFFFFFFFFFFFFFF8);
          v542 = (void *)((v537 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v542 = *v541;
          unint64_t v543 = ((unint64_t)v542 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v544 = ((unint64_t)v541 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v543 = *(void *)v544;
          *(unsigned char *)(v543 + 8) = *(unsigned char *)(v544 + 8);
          *(unsigned char *)(v543 + 9) = *(unsigned char *)(v544 + 9);
          v545 = (void *)((v707 + v543) & v70);
          unint64_t v546 = (const void *)((v707 + v544) & v70);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v734 + 48))(v546, 1, v733))
          {
            size_t v517 = v736;
            memcpy(v545, v546, v736);
          }
          else
          {
            v533((size_t)v545, (size_t)v546, v733);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v734 + 56))(v545, 0, 1, v733);
            size_t v517 = v736;
          }
          unint64_t v516 = v737;
          size_t v519 = v735;
          uint64_t v518 = v717;
          unint64_t v515 = v766;
          int v547 = (void *)(((unint64_t)v545 + v706) & 0xFFFFFFFFFFFFFFF8);
          long long v548 = (void *)(((unint64_t)v546 + v706) & 0xFFFFFFFFFFFFFFF8);
          *int v547 = *v548;
          unint64_t v549 = ((unint64_t)v547 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v550 = ((unint64_t)v548 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v551 = *(void *)v550;
          *(unsigned char *)(v549 + 8) = *(unsigned char *)(v550 + 8);
          *(void *)unint64_t v549 = v551;
          long long v552 = (void *)(((unint64_t)v547 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v553 = (void *)(((unint64_t)v548 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v552 = *v553;
          long long v554 = (_OWORD *)(((unint64_t)v552 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v555 = (_OWORD *)(((unint64_t)v553 + 15) & 0xFFFFFFFFFFFFFFF8);
          *long long v554 = *v555;
          unint64_t v556 = ((unint64_t)v554 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v557 = ((unint64_t)v555 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v558 = *(void *)v557;
          *(unsigned char *)(v556 + 8) = *(unsigned char *)(v557 + 8);
          *(void *)unint64_t v556 = v558;
          *(unsigned char *)(v556 + 9) = *(unsigned char *)(v557 + 9);
          unint64_t v559 = (v556 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v560 = (v557 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v551) = *(_DWORD *)v560;
          *(unsigned char *)(v559 + 4) = *(unsigned char *)(v560 + 4);
          *(_DWORD *)unint64_t v559 = v551;
          *(_OWORD *)((v556 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v557 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v561 = v783 + v529;
          long long v562 = *(_OWORD *)(v783 + v530 + 112);
          long long v564 = *(_OWORD *)(v783 + v530 + 64);
          long long v563 = *(_OWORD *)(v783 + v530 + 80);
          *(_OWORD *)(v561 + 96) = *(_OWORD *)(v783 + v530 + 96);
          *(_OWORD *)(v561 + 112) = v562;
          *(_OWORD *)(v561 + 64) = v564;
          *(_OWORD *)(v561 + 80) = v563;
          long long v565 = *(_OWORD *)(v783 + v530 + 176);
          long long v567 = *(_OWORD *)(v783 + v530 + 128);
          long long v566 = *(_OWORD *)(v783 + v530 + 144);
          *(_OWORD *)(v561 + 160) = *(_OWORD *)(v783 + v530 + 160);
          *(_OWORD *)(v561 + 176) = v565;
          *(_OWORD *)(v561 + 128) = v567;
          *(_OWORD *)(v561 + 144) = v566;
          long long v569 = *(_OWORD *)(v783 + v530 + 208);
          long long v568 = *(_OWORD *)(v783 + v530 + 224);
          long long v570 = *(_OWORD *)(v783 + v530 + 192);
          *(void *)(v561 + 240) = *(void *)(v783 + v530 + 240);
          *(_OWORD *)(v561 + 208) = v569;
          *(_OWORD *)(v561 + 224) = v568;
          *(_OWORD *)(v561 + 192) = v570;
          long long v571 = *(_OWORD *)(v783 + v530);
          long long v572 = *(_OWORD *)(v783 + v530 + 16);
          long long v573 = *(_OWORD *)(v783 + v530 + 48);
          *(_OWORD *)(v561 + 32) = *(_OWORD *)(v783 + v530 + 32);
          *(_OWORD *)(v561 + 48) = v573;
          *(_OWORD *)unint64_t v561 = v571;
          *(_OWORD *)(v561 + 16) = v572;
          v574 = (_OWORD *)((v783 + v529 + 255) & 0xFFFFFFFFFFFFFFF8);
          v575 = (long long *)((v783 + v530 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v576 = *v575;
          *(_OWORD *)((char *)v574 + 9) = *(long long *)((char *)v575 + 9);
          _OWORD *v574 = v576;
          unint64_t v577 = (v783 + v529 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v578 = (v783 + v530 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v579 = *(_OWORD *)v578;
          *(unsigned char *)(v577 + 16) = *(unsigned char *)(v578 + 16);
          *(_OWORD *)unint64_t v577 = v579;
          unint64_t v580 = (void *)((v783 + v529 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v581 = (void *)((v783 + v530 + 311) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v580 = *v581;
          *(_OWORD *)(((unint64_t)v580 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v581 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v125 = v790;
          if (v715)
          {
LABEL_309:
            unint64_t v582 = ((((v518
                     + ((((((((((v516 + v519 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            size_t v583 = (void *)(((unint64_t)v515 + v774 + v582) & v764);
            size_t v584 = (const void *)(((unint64_t)v125 + v774 + v582) & v764);
            unint64_t v78 = v800;
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v744 + 48))(v584, 1, v747))
            {
              memcpy(v583, v584, v777);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v744 + 32))(v583, v584, v747);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v744 + 56))(v583, 0, 1, v747);
            }
            uint64_t v585 = v732;
            unint64_t v586 = (char *)(((unint64_t)v583 + v705) & v752);
            unint64_t v587 = (char *)(((unint64_t)v584 + v705) & v752);
            if (v713 == v726)
            {
              int v588 = (*(uint64_t (**)(char *))(v723 + 48))(v587);
            }
            else
            {
              unint64_t v589 = (uint64_t *)((unint64_t)&v587[v732] & 0xFFFFFFFFFFFFFFF8);
              if (v699 <= 0x7FFFFFFE)
              {
                uint64_t v590 = *v589;
                if ((unint64_t)*v589 >= 0xFFFFFFFF) {
                  LODWORD(v590) = -1;
                }
                size_t v591 = v677;
                if ((v590 + 1) >= 2) {
                  goto LABEL_321;
                }
                goto LABEL_323;
              }
              int v588 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v589 + v758) & v742);
            }
            size_t v591 = v677;
            uint64_t v585 = v732;
            if (v588)
            {
LABEL_321:
              memcpy(v586, v587, v591);
LABEL_324:
              char v114 = 0;
              *(void *)&v586[v591] = *(void *)&v587[v591];
              v598 = (void *)((unint64_t)&v586[v591 + 15] & 0xFFFFFFFFFFFFFFF8);
              unint64_t v599 = (void *)((unint64_t)&v587[v591 + 15] & 0xFFFFFFFFFFFFFFF8);
              void *v598 = *v599;
              *(void *)(((unint64_t)v598 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v599
                                                                                             + 15) & 0xFFFFFFFFFFFFFFF8);
              char v115 = 1;
              goto LABEL_336;
            }
            unint64_t v589 = (uint64_t *)((unint64_t)&v587[v732] & 0xFFFFFFFFFFFFFFF8);
LABEL_323:
            uint64_t v592 = v585;
            (*(void (**)(char *, char *, uint64_t))(v723 + 32))(v586, v587, v722);
            unint64_t v593 = (void *)((unint64_t)&v586[v592] & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v593 = *v589;
            unint64_t v594 = ((unint64_t)v593 + v758) & v742;
            unint64_t v595 = ((unint64_t)v589 + v758) & v742;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v771 + 32))(v594, v595, v709);
            unint64_t v596 = v696 + v594;
            unint64_t v78 = v800;
            v596 &= 0xFFFFFFFFFFFFFFF8;
            v597 = (void *)((v696 + v595) & 0xFFFFFFFFFFFFFFF8);
            *(void *)unint64_t v596 = *v597;
            *(_OWORD *)((v596 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v597 + 15) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_324;
          }
LABEL_303:
          size_t v519 = v517;
          goto LABEL_309;
        }
        unint64_t v147 = ((unint64_t)v125 + v729) & v753;
        uint64_t v148 = v68;
        unint64_t v149 = (v731 + v147) & v68;
        if (v727 == v721)
        {
          if (v714 == v727)
          {
            int v126 = (*(uint64_t (**)(unint64_t))(v725 + 48))((v731 + v147) & v68);
            goto LABEL_300;
          }
          uint64_t v208 = (unint64_t *)((v728 + v149) & 0xFFFFFFFFFFFFFFF8);
          if (v700 > 0x7FFFFFFE)
          {
            int v126 = (*(uint64_t (**)(unint64_t))(v712 + 48))(((unint64_t)v208 + v710) & v690);
            goto LABEL_300;
          }
          unint64_t v209 = *v208;
        }
        else
        {
          size_t v179 = v792 + v149;
          if ((v685 & 0x80000000) == 0)
          {
            unint64_t v180 = *(void *)(v179 + 8);
            if (v180 >= 0xFFFFFFFF) {
              LODWORD(v180) = -1;
            }
            int v126 = v180 + 1;
            goto LABEL_301;
          }
          size_t v217 = (v716 + ((v784 + v179) & v761)) & v70;
          if (v715 > 0x7FFFFFFD)
          {
            int v126 = (*(uint64_t (**)(size_t))(v734 + 48))(v217);
            goto LABEL_300;
          }
          unint64_t v209 = *(void *)(((v680 + ((v708 + v217) & v70)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v209 >= 0xFFFFFFFF) {
          LODWORD(v209) = -1;
        }
        if ((v209 + 1) >= 2) {
          goto LABEL_302;
        }
        goto LABEL_305;
      case 2u:
        uint64_t v127 = v71;
        uint64_t v743 = v72;
        uint64_t v759 = v35;
        uint64_t v697 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
        uint64_t v772 = *(void *)(v709 - 8);
        size_t v128 = v37;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        uint64_t v129 = (void *)((v687 + v82) & v764);
        v130 = (const void *)((unint64_t)&a2[v687] & v764);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v744 + 48))(v130, 1, v747))
        {
          memcpy(v129, v130, v777);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v744 + 32))(v129, v130, v747);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v744 + 56))(v129, 0, 1, v747);
        }
        unint64_t v157 = (char *)(((unint64_t)v129 + v705) & v127);
        unint64_t v158 = (char *)(((unint64_t)v130 + v705) & v127);
        if (v713 == v726)
        {
          int v159 = (*(uint64_t (**)(char *))(v723 + 48))(v158);
          size_t v160 = v128;
          uint64_t v161 = v732;
          if (!v159) {
            goto LABEL_212;
          }
        }
        else
        {
          unint64_t v162 = (void *)((unint64_t)&v158[v732] & 0xFFFFFFFFFFFFFFF8);
          if (v699 > 0x7FFFFFFE)
          {
            int v189 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v772 + 48))(((unint64_t)v162 + v759) & v743, v682, v709);
            uint64_t v161 = v732;
            size_t v160 = v128;
            if (!v189)
            {
LABEL_212:
              unint64_t v162 = (void *)((unint64_t)&v158[v161] & 0xFFFFFFFFFFFFFFF8);
LABEL_213:
              uint64_t v190 = v161;
              (*(void (**)(char *, char *, uint64_t))(v723 + 32))(v157, v158, v722);
              size_t v191 = (void *)((unint64_t)&v157[v190] & 0xFFFFFFFFFFFFFFF8);
              *size_t v191 = *v162;
              unint64_t v192 = v78;
              unint64_t v193 = ((unint64_t)v191 + v759) & v743;
              unint64_t v194 = ((unint64_t)v162 + v759) & v743;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v772 + 32))(v193, v194, v709);
              unint64_t v195 = v697 + v193;
              unint64_t v78 = v192;
              v195 &= 0xFFFFFFFFFFFFFFF8;
              size_t v196 = (void *)((v697 + v194) & 0xFFFFFFFFFFFFFFF8);
              *(void *)unint64_t v195 = *v196;
              *(_OWORD *)((v195 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
              goto LABEL_214;
            }
          }
          else
          {
            uint64_t v161 = v732;
            uint64_t v163 = *v162;
            if (*v162 >= 0xFFFFFFFFuLL) {
              LODWORD(v163) = -1;
            }
            size_t v160 = v128;
            if ((v163 + 1) < 2) {
              goto LABEL_213;
            }
          }
        }
        memcpy(v157, v158, v160);
LABEL_214:
        char v114 = 0;
        unint64_t v197 = &v157[v160];
        *unint64_t v197 = v158[v160];
        *((void *)v197 + 1) = *(void *)&v158[v160 + 8];
        char v115 = 2;
        goto LABEL_336;
      case 3u:
        uint64_t v691 = v69;
        v131 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32);
        v131(v82, a2, AssociatedTypeWitness);
        long long v782 = (void *)((v719 + v82) & v119);
        unint64_t v132 = (void *)((unint64_t)&a2[v719] & v119);
        if (v785 == v721)
        {
          int v133 = (*(uint64_t (**)(void *))(v745 + 48))(v132);
LABEL_326:
          uint64_t v151 = v68;
LABEL_327:
          unint64_t v600 = v782;
          if (v133)
          {
LABEL_328:
            memcpy(v600, v132, v702);
            size_t v602 = v736;
            unint64_t v601 = v737;
            uint64_t v603 = v717;
LABEL_329:
            size_t v604 = v602;
LABEL_335:
            char v114 = 0;
            unint64_t v667 = ((((v603
                     + ((((((((((v601 + v604 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            v668 = (_OWORD *)(((unint64_t)v600 + v667) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v669 = (_OWORD *)(((unint64_t)v132 + v667) & 0xFFFFFFFFFFFFFFF8);
            _OWORD *v668 = *v669;
            *(void *)(((unint64_t)v668 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v669 + 23) & 0xFFFFFFFFFFFFFFF8);
            char v115 = 3;
            goto LABEL_336;
          }
          unint64_t v150 = ((unint64_t)v132 + v729) & v753;
          unint64_t v152 = (v731 + v150) & v151;
LABEL_331:
          unint64_t v802 = v78;
          unint64_t v791 = v132;
          uint64_t v605 = v151;
          v131((uint64_t)v600, (unsigned __int8 *)v132, AssociatedTypeWitness);
          unint64_t v606 = ((unint64_t)v600 + v729) & v753;
          v131(v606, (unsigned __int8 *)v150, AssociatedTypeWitness);
          unint64_t v607 = (v731 + v606) & v605;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 32))(v607, v152, v724);
          unsigned int v608 = (void *)((v728 + v607) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v609 = (void *)((v728 + v152) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v608 = *v609;
          unint64_t v610 = ((unint64_t)v608 + v710) & v691;
          unint64_t v611 = ((unint64_t)v609 + v710) & v691;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v610, v611, v711);
          unint64_t v612 = (void *)((v703 + v610) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v613 = (void *)((v703 + v611) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v612 = *v613;
          *(_OWORD *)(((unint64_t)v612 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v613 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v792 + v607) = *(_OWORD *)(v792 + v152);
          size_t v614 = (v784 + v792 + v607) & v761;
          size_t v615 = (v784 + v792 + v152) & v761;
          *(unsigned char *)size_t v614 = *(unsigned char *)v615;
          uint64_t v616 = v614 | 4;
          int v617 = *(_DWORD *)(v615 | 4);
          *(unsigned char *)(v616 + 4) = *(unsigned char *)((v615 | 4) + 4);
          *(_DWORD *)uint64_t v616 = v617;
          *(_WORD *)(v614 + 10) = *(_WORD *)(v615 + 0xA);
          v618 = *(void (**)(size_t, size_t, uint64_t))(v734 + 32);
          v618((v716 + v614) & v70, (v716 + v615) & v70, v733);
          size_t v619 = (v708 + ((v716 + v614) & v70)) & v70;
          size_t v620 = (v708 + ((v716 + v615) & v70)) & v70;
          v618(v619, v620, v733);
          long long v621 = (unsigned char *)(v619 + v735);
          *long long v621 = *(unsigned char *)(v620 + v735);
          v621[1] = *(unsigned char *)(v620 + v735 + 1);
          v621[2] = *(unsigned char *)(v620 + v735 + 2);
          v621[3] = *(unsigned char *)(v620 + v735 + 3);
          v621[4] = *(unsigned char *)(v620 + v735 + 4);
          unint64_t v622 = (v619 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v623 = (v620 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v622 = *(_OWORD *)v623;
          *(unsigned char *)(v622 + 16) = *(unsigned char *)(v623 + 16);
          *(unsigned char *)(v622 + 17) = *(unsigned char *)(v623 + 17);
          *(unsigned char *)(v622 + 18) = *(unsigned char *)(v623 + 18);
          *(unsigned char *)(v622 + 19) = *(unsigned char *)(v623 + 19);
          unint64_t v624 = (v622 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v625 = (v623 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v624 = *(void *)v625;
          *(unsigned char *)(v624 + 8) = *(unsigned char *)(v625 + 8);
          *(unsigned char *)(v624 + 9) = *(unsigned char *)(v625 + 9);
          *(unsigned char *)(v624 + 10) = *(unsigned char *)(v625 + 10);
          *(unsigned char *)(v624 + 11) = *(unsigned char *)(v625 + 11);
          *(unsigned char *)(v624 + 12) = *(unsigned char *)(v625 + 12);
          long long v626 = (void *)((v623 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v627 = (void *)((v622 + 47) & 0xFFFFFFFFFFFFFFF8);
          *long long v627 = *v626;
          unint64_t v628 = ((unint64_t)v627 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v629 = ((unint64_t)v626 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v628 = *(void *)v629;
          *(unsigned char *)(v628 + 8) = *(unsigned char *)(v629 + 8);
          *(unsigned char *)(v628 + 9) = *(unsigned char *)(v629 + 9);
          long long v630 = (void *)((v707 + v628) & v70);
          long long v631 = (const void *)((v707 + v629) & v70);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v734 + 48))(v631, 1, v733))
          {
            size_t v602 = v736;
            memcpy(v630, v631, v736);
          }
          else
          {
            v618((size_t)v630, (size_t)v631, v733);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v734 + 56))(v630, 0, 1, v733);
            size_t v602 = v736;
          }
          unint64_t v601 = v737;
          size_t v604 = v735;
          unint64_t v78 = v802;
          uint64_t v603 = v717;
          long long v632 = (void *)(((unint64_t)v630 + v706) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v633 = (void *)(((unint64_t)v631 + v706) & 0xFFFFFFFFFFFFFFF8);
          *long long v632 = *v633;
          unint64_t v634 = ((unint64_t)v632 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v635 = ((unint64_t)v633 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v636 = *(void *)v635;
          *(unsigned char *)(v634 + 8) = *(unsigned char *)(v635 + 8);
          *(void *)unint64_t v634 = v636;
          unint64_t v637 = (void *)(((unint64_t)v632 + 31) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v638 = (void *)(((unint64_t)v633 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v637 = *v638;
          size_t v639 = (_OWORD *)(((unint64_t)v637 + 15) & 0xFFFFFFFFFFFFFFF8);
          size_t v640 = (_OWORD *)(((unint64_t)v638 + 15) & 0xFFFFFFFFFFFFFFF8);
          *size_t v639 = *v640;
          unint64_t v641 = ((unint64_t)v639 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v642 = ((unint64_t)v640 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v643 = *(void *)v642;
          *(unsigned char *)(v641 + 8) = *(unsigned char *)(v642 + 8);
          *(void *)unint64_t v641 = v643;
          *(unsigned char *)(v641 + 9) = *(unsigned char *)(v642 + 9);
          unint64_t v644 = (v641 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v645 = (v642 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v636) = *(_DWORD *)v645;
          *(unsigned char *)(v644 + 4) = *(unsigned char *)(v645 + 4);
          *(_DWORD *)unint64_t v644 = v636;
          *(_OWORD *)((v641 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v642 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v646 = v783 + v614;
          long long v647 = *(_OWORD *)(v783 + v615 + 112);
          long long v649 = *(_OWORD *)(v783 + v615 + 64);
          long long v648 = *(_OWORD *)(v783 + v615 + 80);
          *(_OWORD *)(v646 + 96) = *(_OWORD *)(v783 + v615 + 96);
          *(_OWORD *)(v646 + 112) = v647;
          *(_OWORD *)(v646 + 64) = v649;
          *(_OWORD *)(v646 + 80) = v648;
          long long v650 = *(_OWORD *)(v783 + v615 + 176);
          long long v652 = *(_OWORD *)(v783 + v615 + 128);
          long long v651 = *(_OWORD *)(v783 + v615 + 144);
          *(_OWORD *)(v646 + 160) = *(_OWORD *)(v783 + v615 + 160);
          *(_OWORD *)(v646 + 176) = v650;
          *(_OWORD *)(v646 + 128) = v652;
          *(_OWORD *)(v646 + 144) = v651;
          long long v654 = *(_OWORD *)(v783 + v615 + 208);
          long long v653 = *(_OWORD *)(v783 + v615 + 224);
          long long v655 = *(_OWORD *)(v783 + v615 + 192);
          *(void *)(v646 + 240) = *(void *)(v783 + v615 + 240);
          *(_OWORD *)(v646 + 208) = v654;
          *(_OWORD *)(v646 + 224) = v653;
          *(_OWORD *)(v646 + 192) = v655;
          long long v656 = *(_OWORD *)(v783 + v615);
          long long v657 = *(_OWORD *)(v783 + v615 + 16);
          long long v658 = *(_OWORD *)(v783 + v615 + 48);
          *(_OWORD *)(v646 + 32) = *(_OWORD *)(v783 + v615 + 32);
          *(_OWORD *)(v646 + 48) = v658;
          *(_OWORD *)unint64_t v646 = v656;
          *(_OWORD *)(v646 + 16) = v657;
          v659 = (_OWORD *)((v783 + v614 + 255) & 0xFFFFFFFFFFFFFFF8);
          size_t v660 = (long long *)((v783 + v615 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v661 = *v660;
          *(_OWORD *)((char *)v659 + 9) = *(long long *)((char *)v660 + 9);
          _OWORD *v659 = v661;
          unint64_t v662 = (v783 + v614 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v663 = (v783 + v615 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v664 = *(_OWORD *)v663;
          *(unsigned char *)(v662 + 16) = *(unsigned char *)(v663 + 16);
          *(_OWORD *)unint64_t v662 = v664;
          unint64_t v665 = (void *)((v783 + v614 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v666 = (void *)((v783 + v615 + 311) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v665 = *v666;
          *(_OWORD *)(((unint64_t)v665 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v666 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v600 = v782;
          unint64_t v132 = v791;
          if (v715) {
            goto LABEL_335;
          }
          goto LABEL_329;
        }
        unint64_t v150 = ((unint64_t)v132 + v729) & v753;
        uint64_t v151 = v68;
        unint64_t v152 = (v731 + v150) & v68;
        if (v727 == v721)
        {
          if (v714 == v727)
          {
            int v133 = (*(uint64_t (**)(unint64_t))(v725 + 48))((v731 + v150) & v68);
            goto LABEL_326;
          }
          unsigned int v210 = (unint64_t *)((v728 + v152) & 0xFFFFFFFFFFFFFFF8);
          if (v700 > 0x7FFFFFFE)
          {
            int v133 = (*(uint64_t (**)(unint64_t))(v712 + 48))(((unint64_t)v210 + v710) & v691);
            goto LABEL_326;
          }
          unint64_t v211 = *v210;
        }
        else
        {
          size_t v181 = v792 + v152;
          if ((v685 & 0x80000000) == 0)
          {
            unint64_t v182 = *(void *)(v181 + 8);
            if (v182 >= 0xFFFFFFFF) {
              LODWORD(v182) = -1;
            }
            int v133 = v182 + 1;
            goto LABEL_327;
          }
          size_t v218 = (v716 + ((v784 + v181) & v761)) & v70;
          if (v715 > 0x7FFFFFFD)
          {
            int v133 = (*(uint64_t (**)(size_t))(v734 + 48))(v218);
            goto LABEL_326;
          }
          unint64_t v211 = *(void *)(((v680 + ((v708 + v218) & v70)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v211 >= 0xFFFFFFFF) {
          LODWORD(v211) = -1;
        }
        unint64_t v600 = v782;
        if ((v211 + 1) >= 2) {
          goto LABEL_328;
        }
        goto LABEL_331;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        char v114 = 0;
        char v115 = 4;
        goto LABEL_336;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        char v114 = 0;
        char v115 = 5;
        goto LABEL_336;
      case 6u:
        unint64_t v134 = v78;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        unint64_t v135 = (void *)((v686 + v82) & v120);
        unint64_t v136 = (const void *)((unint64_t)&a2[v686] & v120);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v136, 1, v767))
        {
          memcpy(v135, v136, v681);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v135, v136, v767);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v135, 0, 1, v767);
        }
        char v114 = 0;
        char v115 = 6;
        unint64_t v78 = v134;
        goto LABEL_336;
      case 7u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        char v114 = 0;
LABEL_137:
        char v115 = 7;
        goto LABEL_336;
      default:
        uint64_t v689 = v69;
        unint64_t v121 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32);
        v121(v82, a2, AssociatedTypeWitness);
        long long v781 = (void *)((v719 + v82) & v119);
        size_t v122 = (void *)((unint64_t)&a2[v719] & v119);
        if (v785 == v721)
        {
          int v123 = (*(uint64_t (**)(void *))(v745 + 48))(v122);
LABEL_289:
          uint64_t v145 = v68;
LABEL_290:
          unint64_t v445 = v781;
          if (v123)
          {
LABEL_291:
            memcpy(v445, v122, v702);
            size_t v447 = v736;
            unint64_t v446 = v737;
            uint64_t v448 = v717;
LABEL_292:
            size_t v449 = v447;
LABEL_298:
            char v115 = 0;
            char v114 = 0;
            unint64_t v512 = ((((v448
                     + ((((((((((v446 + v449 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            unint64_t v513 = (void *)(((unint64_t)v445 + v512) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v514 = (void *)(((unint64_t)v122 + v512) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v513 = *v514;
            *(void *)(((unint64_t)v513 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v514 + 15) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_336;
          }
          unint64_t v144 = ((unint64_t)v122 + v729) & v753;
          unint64_t v146 = (v731 + v144) & v145;
LABEL_294:
          unint64_t v801 = v78;
          long long v789 = v122;
          uint64_t v450 = v145;
          v121((uint64_t)v445, (unsigned __int8 *)v122, AssociatedTypeWitness);
          unint64_t v451 = ((unint64_t)v445 + v729) & v753;
          v121(v451, (unsigned __int8 *)v144, AssociatedTypeWitness);
          unint64_t v452 = (v731 + v451) & v450;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 32))(v452, v146, v724);
          unint64_t v453 = (void *)((v728 + v452) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v454 = (void *)((v728 + v146) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v453 = *v454;
          unint64_t v455 = ((unint64_t)v453 + v710) & v689;
          unint64_t v456 = ((unint64_t)v454 + v710) & v689;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v455, v456, v711);
          unint64_t v457 = (void *)((v703 + v455) & 0xFFFFFFFFFFFFFFF8);
          v458 = (void *)((v703 + v456) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v457 = *v458;
          *(_OWORD *)(((unint64_t)v457 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v792 + v452) = *(_OWORD *)(v792 + v146);
          size_t v459 = (v784 + v792 + v452) & v761;
          size_t v460 = (v784 + v792 + v146) & v761;
          *(unsigned char *)size_t v459 = *(unsigned char *)v460;
          uint64_t v461 = v459 | 4;
          int v462 = *(_DWORD *)(v460 | 4);
          *(unsigned char *)(v461 + 4) = *(unsigned char *)((v460 | 4) + 4);
          *(_DWORD *)uint64_t v461 = v462;
          *(_WORD *)(v459 + 10) = *(_WORD *)(v460 + 0xA);
          uint64_t v463 = *(void (**)(size_t, size_t, uint64_t))(v734 + 32);
          v463((v716 + v459) & v70, (v716 + v460) & v70, v733);
          size_t v464 = (v708 + ((v716 + v459) & v70)) & v70;
          size_t v465 = (v708 + ((v716 + v460) & v70)) & v70;
          v463(v464, v465, v733);
          int v466 = (unsigned char *)(v464 + v735);
          *int v466 = *(unsigned char *)(v465 + v735);
          v466[1] = *(unsigned char *)(v465 + v735 + 1);
          v466[2] = *(unsigned char *)(v465 + v735 + 2);
          v466[3] = *(unsigned char *)(v465 + v735 + 3);
          v466[4] = *(unsigned char *)(v465 + v735 + 4);
          unint64_t v467 = (v464 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v468 = (v465 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v467 = *(_OWORD *)v468;
          *(unsigned char *)(v467 + 16) = *(unsigned char *)(v468 + 16);
          *(unsigned char *)(v467 + 17) = *(unsigned char *)(v468 + 17);
          *(unsigned char *)(v467 + 18) = *(unsigned char *)(v468 + 18);
          *(unsigned char *)(v467 + 19) = *(unsigned char *)(v468 + 19);
          unint64_t v469 = (v467 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v470 = (v468 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v469 = *(void *)v470;
          *(unsigned char *)(v469 + 8) = *(unsigned char *)(v470 + 8);
          *(unsigned char *)(v469 + 9) = *(unsigned char *)(v470 + 9);
          *(unsigned char *)(v469 + 10) = *(unsigned char *)(v470 + 10);
          *(unsigned char *)(v469 + 11) = *(unsigned char *)(v470 + 11);
          *(unsigned char *)(v469 + 12) = *(unsigned char *)(v470 + 12);
          unint64_t v471 = (void *)((v468 + 47) & 0xFFFFFFFFFFFFFFF8);
          int v472 = (void *)((v467 + 47) & 0xFFFFFFFFFFFFFFF8);
          *int v472 = *v471;
          unint64_t v473 = ((unint64_t)v472 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v474 = ((unint64_t)v471 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v473 = *(void *)v474;
          *(unsigned char *)(v473 + 8) = *(unsigned char *)(v474 + 8);
          *(unsigned char *)(v473 + 9) = *(unsigned char *)(v474 + 9);
          long long v475 = (void *)((v707 + v473) & v70);
          long long v476 = (const void *)((v707 + v474) & v70);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v734 + 48))(v476, 1, v733))
          {
            size_t v447 = v736;
            memcpy(v475, v476, v736);
          }
          else
          {
            v463((size_t)v475, (size_t)v476, v733);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v734 + 56))(v475, 0, 1, v733);
            size_t v447 = v736;
          }
          unint64_t v446 = v737;
          size_t v449 = v735;
          unint64_t v78 = v801;
          uint64_t v448 = v717;
          long long v477 = (void *)(((unint64_t)v475 + v706) & 0xFFFFFFFFFFFFFFF8);
          long long v478 = (void *)(((unint64_t)v476 + v706) & 0xFFFFFFFFFFFFFFF8);
          *long long v477 = *v478;
          unint64_t v479 = ((unint64_t)v477 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v480 = ((unint64_t)v478 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v481 = *(void *)v480;
          *(unsigned char *)(v479 + 8) = *(unsigned char *)(v480 + 8);
          *(void *)unint64_t v479 = v481;
          long long v482 = (void *)(((unint64_t)v477 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v483 = (void *)(((unint64_t)v478 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v482 = *v483;
          long long v484 = (_OWORD *)(((unint64_t)v482 + 15) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v485 = (_OWORD *)(((unint64_t)v483 + 15) & 0xFFFFFFFFFFFFFFF8);
          *long long v484 = *v485;
          unint64_t v486 = ((unint64_t)v484 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v487 = ((unint64_t)v485 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v488 = *(void *)v487;
          *(unsigned char *)(v486 + 8) = *(unsigned char *)(v487 + 8);
          *(void *)unint64_t v486 = v488;
          *(unsigned char *)(v486 + 9) = *(unsigned char *)(v487 + 9);
          unint64_t v489 = (v486 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v490 = (v487 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v481) = *(_DWORD *)v490;
          *(unsigned char *)(v489 + 4) = *(unsigned char *)(v490 + 4);
          *(_DWORD *)unint64_t v489 = v481;
          *(_OWORD *)((v486 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v487 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v491 = v783 + v459;
          long long v492 = *(_OWORD *)(v783 + v460 + 112);
          long long v494 = *(_OWORD *)(v783 + v460 + 64);
          long long v493 = *(_OWORD *)(v783 + v460 + 80);
          *(_OWORD *)(v491 + 96) = *(_OWORD *)(v783 + v460 + 96);
          *(_OWORD *)(v491 + 112) = v492;
          *(_OWORD *)(v491 + 64) = v494;
          *(_OWORD *)(v491 + 80) = v493;
          long long v495 = *(_OWORD *)(v783 + v460 + 176);
          long long v497 = *(_OWORD *)(v783 + v460 + 128);
          long long v496 = *(_OWORD *)(v783 + v460 + 144);
          *(_OWORD *)(v491 + 160) = *(_OWORD *)(v783 + v460 + 160);
          *(_OWORD *)(v491 + 176) = v495;
          *(_OWORD *)(v491 + 128) = v497;
          *(_OWORD *)(v491 + 144) = v496;
          long long v499 = *(_OWORD *)(v783 + v460 + 208);
          long long v498 = *(_OWORD *)(v783 + v460 + 224);
          long long v500 = *(_OWORD *)(v783 + v460 + 192);
          *(void *)(v491 + 240) = *(void *)(v783 + v460 + 240);
          *(_OWORD *)(v491 + 208) = v499;
          *(_OWORD *)(v491 + 224) = v498;
          *(_OWORD *)(v491 + 192) = v500;
          long long v501 = *(_OWORD *)(v783 + v460);
          long long v502 = *(_OWORD *)(v783 + v460 + 16);
          long long v503 = *(_OWORD *)(v783 + v460 + 48);
          *(_OWORD *)(v491 + 32) = *(_OWORD *)(v783 + v460 + 32);
          *(_OWORD *)(v491 + 48) = v503;
          *(_OWORD *)unint64_t v491 = v501;
          *(_OWORD *)(v491 + 16) = v502;
          size_t v504 = (_OWORD *)((v783 + v459 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v505 = (long long *)((v783 + v460 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v506 = *v505;
          *(_OWORD *)((char *)v504 + 9) = *(long long *)((char *)v505 + 9);
          *size_t v504 = v506;
          unint64_t v507 = (v783 + v459 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v508 = (v783 + v460 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v509 = *(_OWORD *)v508;
          *(unsigned char *)(v507 + 16) = *(unsigned char *)(v508 + 16);
          *(_OWORD *)unint64_t v507 = v509;
          size_t v510 = (void *)((v783 + v459 + 311) & 0xFFFFFFFFFFFFFFF8);
          size_t v511 = (void *)((v783 + v460 + 311) & 0xFFFFFFFFFFFFFFF8);
          *size_t v510 = *v511;
          *(_OWORD *)(((unint64_t)v510 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v511 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v445 = v781;
          size_t v122 = v789;
          if (v715) {
            goto LABEL_298;
          }
          goto LABEL_292;
        }
        unint64_t v144 = ((unint64_t)v122 + v729) & v753;
        uint64_t v145 = v68;
        unint64_t v146 = (v731 + v144) & v68;
        if (v727 == v721)
        {
          if (v714 == v727)
          {
            int v123 = (*(uint64_t (**)(unint64_t))(v725 + 48))((v731 + v144) & v68);
            goto LABEL_289;
          }
          unsigned int v206 = (unint64_t *)((v728 + v146) & 0xFFFFFFFFFFFFFFF8);
          if (v700 > 0x7FFFFFFE)
          {
            int v123 = (*(uint64_t (**)(unint64_t))(v712 + 48))(((unint64_t)v206 + v710) & v689);
            goto LABEL_289;
          }
          unint64_t v207 = *v206;
        }
        else
        {
          size_t v177 = v792 + v146;
          if ((v685 & 0x80000000) == 0)
          {
            unint64_t v178 = *(void *)(v177 + 8);
            if (v178 >= 0xFFFFFFFF) {
              LODWORD(v178) = -1;
            }
            int v123 = v178 + 1;
            goto LABEL_290;
          }
          size_t v216 = (v716 + ((v784 + v177) & v761)) & v70;
          if (v715 > 0x7FFFFFFD)
          {
            int v123 = (*(uint64_t (**)(size_t))(v734 + 48))(v216);
            goto LABEL_289;
          }
          unint64_t v207 = *(void *)(((v680 + ((v708 + v216) & v70)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v207 >= 0xFFFFFFFF) {
          LODWORD(v207) = -1;
        }
        unint64_t v445 = v781;
        if ((v207 + 1) >= 2) {
          goto LABEL_291;
        }
        goto LABEL_294;
    }
  }
  unsigned int v73 = a2[v61];
  unsigned int v74 = v73 - 8;
  if (v73 < 8)
  {
    uint64_t v76 = v747;
  }
  else
  {
    if (v61 <= 3) {
      uint64_t v75 = v61;
    }
    else {
      uint64_t v75 = 4;
    }
    uint64_t v76 = v747;
    switch(v75)
    {
      case 1:
        int v77 = *a2;
        if (v61 < 4) {
          goto LABEL_100;
        }
        goto LABEL_102;
      case 2:
        int v77 = *(unsigned __int16 *)a2;
        if (v61 >= 4) {
          goto LABEL_102;
        }
        goto LABEL_100;
      case 3:
        int v77 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v61 < 4) {
          goto LABEL_100;
        }
        goto LABEL_102;
      case 4:
        int v77 = *(_DWORD *)a2;
        if (v61 < 4) {
LABEL_100:
        }
          unsigned int v73 = (v77 | (v74 << (8 * v61))) + 8;
        else {
LABEL_102:
        }
          unsigned int v73 = v77 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v85 = ~v46;
  uint64_t v86 = ~v51;
  switch(v73)
  {
    case 1u:
      uint64_t v93 = v71;
      uint64_t v740 = ~v31;
      uint64_t v688 = v69;
      unint64_t v779 = v52;
      uint64_t v756 = v31 + 8;
      uint64_t v694 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
      uint64_t v769 = *(void *)(v709 - 8);
      unint64_t v94 = ((((v36 + ((v31 + 8 + (v732 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16;
      unint64_t v787 = v61;
      uint64_t v82 = a1;
      unint64_t v730 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32);
      v730(a1, a2, v76);
      long long v775 = (char *)((v53 + a1) & v85);
      v95 = (void *)((unint64_t)&a2[v53] & v85);
      uint64_t v674 = v70;
      if (v720 == v718)
      {
        int v96 = (*(uint64_t (**)(void *))(v744 + 48))(v95);
        uint64_t v98 = v733;
        uint64_t v97 = v734;
        size_t v99 = v94;
        uint64_t v100 = v93;
        goto LABEL_186;
      }
      unint64_t v140 = ((unint64_t)v95 + v751) & v764;
      uint64_t v100 = v93;
      unint64_t v141 = (v749 + v140) & v93;
      if (v726 == v718)
      {
        uint64_t v98 = v733;
        uint64_t v97 = v734;
        if (v713 == v726)
        {
          int v96 = (*(uint64_t (**)(unint64_t))(v723 + 48))((v749 + v140) & v93);
          uint64_t v100 = v93;
          size_t v99 = v94;
          goto LABEL_186;
        }
        unint64_t v200 = (unint64_t *)((v732 + v141) & 0xFFFFFFFFFFFFFFF8);
        int v169 = v775;
        if (v699 <= 0x7FFFFFFE)
        {
          unint64_t v201 = *v200;
          if (v201 >= 0xFFFFFFFF) {
            LODWORD(v201) = -1;
          }
          BOOL v202 = (v201 + 1) >= 2;
          size_t v99 = v94;
          goto LABEL_346;
        }
        int v214 = (*(uint64_t (**)(unint64_t))(v769 + 48))(((unint64_t)v200 + v756) & v740);
LABEL_255:
        uint64_t v100 = v93;
        size_t v99 = v94;
        uint64_t v168 = v797;
        if (v214) {
          goto LABEL_187;
        }
LABEL_256:
        unint64_t v140 = ((unint64_t)v95 + v751) & v764;
        unint64_t v141 = (v749 + v140) & v100;
        goto LABEL_257;
      }
      size_t v99 = v94;
      unint64_t v166 = v94 + v141;
      uint64_t v98 = v733;
      uint64_t v97 = v734;
      if ((v684 & 0x80000000) == 0)
      {
        unint64_t v167 = *(void *)(v166 + 8);
        if (v167 >= 0xFFFFFFFF) {
          LODWORD(v167) = -1;
        }
        int v96 = v167 + 1;
LABEL_186:
        uint64_t v168 = v797;
        int v169 = v775;
        if (v96)
        {
LABEL_187:
          memcpy(v169, v95, v701);
          size_t v171 = v736;
          unint64_t v170 = v737;
          uint64_t v172 = v728;
          unint64_t v173 = v779;
LABEL_188:
          size_t v174 = v171;
          goto LABEL_261;
        }
        goto LABEL_256;
      }
      uint64_t v213 = (v716 + ((v784 + v166) & v761)) & v674;
      int v169 = v775;
      if (v715 > 0x7FFFFFFD)
      {
        int v214 = (*(uint64_t (**)(uint64_t))(v734 + 48))(v213);
        goto LABEL_255;
      }
      unint64_t v671 = *(void *)(((v680 + ((v708 + v213) & v674)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v671 >= 0xFFFFFFFF) {
        LODWORD(v671) = -1;
      }
      BOOL v202 = (v671 + 1) >= 2;
LABEL_346:
      uint64_t v168 = v797;
      if (v202) {
        goto LABEL_187;
      }
LABEL_257:
      size_t v678 = v99;
      unint64_t v763 = v95;
      uint64_t v291 = v100;
      v730((uint64_t)v169, (unsigned __int8 *)v95, v747);
      unint64_t v292 = (unint64_t)&v169[v751];
      uint64_t v293 = v97;
      unint64_t v294 = v292 & v764;
      v730(v292 & v764, (unsigned __int8 *)v140, v747);
      uint64_t v295 = v98;
      unint64_t v296 = (v749 + v294) & v291;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v723 + 32))(v296, v141, v722);
      v297 = (void *)((v732 + v296) & 0xFFFFFFFFFFFFFFF8);
      v298 = (void *)((v732 + v141) & 0xFFFFFFFFFFFFFFF8);
      void *v297 = *v298;
      unint64_t v299 = ((unint64_t)v297 + v756) & v740;
      unint64_t v300 = ((unint64_t)v298 + v756) & v740;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v769 + 32))(v299, v300, v709);
      id v301 = (void *)((v694 + v299) & 0xFFFFFFFFFFFFFFF8);
      v302 = (void *)((v694 + v300) & 0xFFFFFFFFFFFFFFF8);
      *id v301 = *v302;
      *(_OWORD *)(((unint64_t)v301 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v302 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v303 = v293;
      *(_OWORD *)(v678 + v296) = *(_OWORD *)(v678 + v141);
      size_t v304 = (v784 + v678 + v296) & v761;
      size_t v305 = (v784 + v678 + v141) & v761;
      *(unsigned char *)size_t v304 = *(unsigned char *)v305;
      uint64_t v306 = v304 | 4;
      int v307 = *(_DWORD *)(v305 | 4);
      *(unsigned char *)(v306 + 4) = *(unsigned char *)((v305 | 4) + 4);
      *(_DWORD *)uint64_t v306 = v307;
      *(_WORD *)(v304 + 10) = *(_WORD *)(v305 + 0xA);
      v308 = *(void (**)(size_t, size_t, uint64_t))(v303 + 32);
      v308((v716 + v304) & v674, (v716 + v305) & v674, v295);
      size_t v309 = (v708 + ((v716 + v304) & v674)) & v674;
      size_t v310 = (v708 + ((v716 + v305) & v674)) & v674;
      v308(v309, v310, v295);
      v311 = (unsigned char *)(v309 + v735);
      unsigned char *v311 = *(unsigned char *)(v310 + v735);
      v311[1] = *(unsigned char *)(v310 + v735 + 1);
      v311[2] = *(unsigned char *)(v310 + v735 + 2);
      v311[3] = *(unsigned char *)(v310 + v735 + 3);
      v311[4] = *(unsigned char *)(v310 + v735 + 4);
      unint64_t v312 = (v309 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v313 = (v310 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v312 = *(_OWORD *)v313;
      *(unsigned char *)(v312 + 16) = *(unsigned char *)(v313 + 16);
      *(unsigned char *)(v312 + 17) = *(unsigned char *)(v313 + 17);
      *(unsigned char *)(v312 + 18) = *(unsigned char *)(v313 + 18);
      *(unsigned char *)(v312 + 19) = *(unsigned char *)(v313 + 19);
      unint64_t v314 = (v312 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v315 = (v313 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v314 = *(void *)v315;
      *(unsigned char *)(v314 + 8) = *(unsigned char *)(v315 + 8);
      *(unsigned char *)(v314 + 9) = *(unsigned char *)(v315 + 9);
      *(unsigned char *)(v314 + 10) = *(unsigned char *)(v315 + 10);
      *(unsigned char *)(v314 + 11) = *(unsigned char *)(v315 + 11);
      *(unsigned char *)(v314 + 12) = *(unsigned char *)(v315 + 12);
      v316 = (void *)((v313 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v317 = (void *)((v312 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v317 = *v316;
      unint64_t v318 = ((unint64_t)v317 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v319 = ((unint64_t)v316 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v318 = *(void *)v319;
      *(unsigned char *)(v318 + 8) = *(unsigned char *)(v319 + 8);
      *(unsigned char *)(v318 + 9) = *(unsigned char *)(v319 + 9);
      v320 = (void *)((v707 + v318) & v674);
      unint64_t v321 = (const void *)((v707 + v319) & v674);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v303 + 48))(v321, 1, v295))
      {
        size_t v171 = v736;
        memcpy(v320, v321, v736);
      }
      else
      {
        v308((size_t)v320, (size_t)v321, v295);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v303 + 56))(v320, 0, 1, v295);
        size_t v171 = v736;
      }
      unint64_t v170 = v737;
      size_t v174 = v735;
      unint64_t v173 = v779;
      uint64_t v172 = v728;
      uint64_t v168 = v797;
      v322 = (void *)(((unint64_t)v320 + v706) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v323 = (void *)(((unint64_t)v321 + v706) & 0xFFFFFFFFFFFFFFF8);
      void *v322 = *v323;
      unint64_t v324 = ((unint64_t)v322 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v325 = ((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v326 = *(void *)v325;
      *(unsigned char *)(v324 + 8) = *(unsigned char *)(v325 + 8);
      *(void *)unint64_t v324 = v326;
      unint64_t v327 = (void *)(((unint64_t)v322 + 31) & 0xFFFFFFFFFFFFFFF8);
      v328 = (void *)(((unint64_t)v323 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v327 = *v328;
      unint64_t v329 = (_OWORD *)(((unint64_t)v327 + 15) & 0xFFFFFFFFFFFFFFF8);
      v330 = (_OWORD *)(((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v329 = *v330;
      unint64_t v331 = ((unint64_t)v329 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v332 = ((unint64_t)v330 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v333 = *(void *)v332;
      *(unsigned char *)(v331 + 8) = *(unsigned char *)(v332 + 8);
      *(void *)unint64_t v331 = v333;
      *(unsigned char *)(v331 + 9) = *(unsigned char *)(v332 + 9);
      unint64_t v334 = (v331 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v335 = (v332 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v326) = *(_DWORD *)v335;
      *(unsigned char *)(v334 + 4) = *(unsigned char *)(v335 + 4);
      *(_DWORD *)unint64_t v334 = v326;
      *(_OWORD *)((v331 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v332 + 25) & 0xFFFFFFFFFFFFFFF8);
      size_t v336 = v304 + v783;
      long long v337 = *(_OWORD *)(v305 + v783 + 112);
      long long v339 = *(_OWORD *)(v305 + v783 + 64);
      long long v338 = *(_OWORD *)(v305 + v783 + 80);
      *(_OWORD *)(v336 + 96) = *(_OWORD *)(v305 + v783 + 96);
      *(_OWORD *)(v336 + 112) = v337;
      *(_OWORD *)(v336 + 64) = v339;
      *(_OWORD *)(v336 + 80) = v338;
      long long v340 = *(_OWORD *)(v305 + v783 + 176);
      long long v342 = *(_OWORD *)(v305 + v783 + 128);
      long long v341 = *(_OWORD *)(v305 + v783 + 144);
      *(_OWORD *)(v336 + 160) = *(_OWORD *)(v305 + v783 + 160);
      *(_OWORD *)(v336 + 176) = v340;
      *(_OWORD *)(v336 + 128) = v342;
      *(_OWORD *)(v336 + 144) = v341;
      long long v344 = *(_OWORD *)(v305 + v783 + 208);
      long long v343 = *(_OWORD *)(v305 + v783 + 224);
      long long v345 = *(_OWORD *)(v305 + v783 + 192);
      *(void *)(v336 + 240) = *(void *)(v305 + v783 + 240);
      *(_OWORD *)(v336 + 208) = v344;
      *(_OWORD *)(v336 + 224) = v343;
      *(_OWORD *)(v336 + 192) = v345;
      long long v346 = *(_OWORD *)(v305 + v783);
      long long v347 = *(_OWORD *)(v305 + v783 + 16);
      long long v348 = *(_OWORD *)(v305 + v783 + 48);
      *(_OWORD *)(v336 + 32) = *(_OWORD *)(v305 + v783 + 32);
      *(_OWORD *)(v336 + 48) = v348;
      *(_OWORD *)size_t v336 = v346;
      *(_OWORD *)(v336 + 16) = v347;
      unint64_t v349 = (_OWORD *)((v304 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
      v350 = (long long *)((v305 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v351 = *v350;
      *(_OWORD *)((char *)v349 + 9) = *(long long *)((char *)v350 + 9);
      *unint64_t v349 = v351;
      unint64_t v352 = (v304 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v353 = (v305 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v354 = *(_OWORD *)v353;
      *(unsigned char *)(v352 + 16) = *(unsigned char *)(v353 + 16);
      *(_OWORD *)unint64_t v352 = v354;
      v355 = (void *)((v304 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
      size_t v356 = (void *)((v305 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
      void *v355 = *v356;
      *(_OWORD *)(((unint64_t)v355 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v356 + 15) & 0xFFFFFFFFFFFFFFF8);
      v95 = v763;
      int v169 = v775;
      if (!v715) {
        goto LABEL_188;
      }
LABEL_261:
      unint64_t v357 = ((((v173
               + ((((((((((v170 + v174 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v358 = (void *)((unint64_t)&v169[v168 + v357] & v753);
      int v359 = (const void *)(((unint64_t)v95 + v168 + v357) & v753);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v745 + 48))(v359, 1, AssociatedTypeWitness))
      {
        memcpy(v358, v359, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v745 + 32))(v358, v359, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v745 + 56))(v358, 0, 1, AssociatedTypeWitness);
      }
      unint64_t v360 = v796;
      size_t v361 = (char *)(((unint64_t)v358 + v704) & v68);
      v362 = (char *)(((unint64_t)v359 + v704) & v68);
      if (v714 == v727)
      {
        if (!(*(unsigned int (**)(char *))(v725 + 48))(v362)) {
          goto LABEL_274;
        }
      }
      else
      {
        size_t v363 = (void *)((unint64_t)&v362[v172] & 0xFFFFFFFFFFFFFFF8);
        if (v700 > 0x7FFFFFFE)
        {
          if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v712 + 48))(((unint64_t)v363 + v710) & v688, v683, v711))
          {
LABEL_274:
            size_t v363 = (void *)((unint64_t)&v362[v172] & 0xFFFFFFFFFFFFFFF8);
LABEL_275:
            (*(void (**)(char *, char *, uint64_t))(v725 + 32))(v361, v362, v724);
            v365 = (void *)((unint64_t)&v361[v172] & 0xFFFFFFFFFFFFFFF8);
            void *v365 = *v363;
            unint64_t v366 = ((unint64_t)v365 + v710) & v688;
            unint64_t v367 = ((unint64_t)v363 + v710) & v688;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v366, v367, v711);
            unint64_t v368 = (void *)((v703 + v366) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v369 = (void *)((v703 + v367) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v368 = *v369;
            *(_OWORD *)(((unint64_t)v368 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v369 + 15) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_276;
          }
        }
        else
        {
          uint64_t v364 = *v363;
          if (*v363 >= 0xFFFFFFFFuLL) {
            LODWORD(v364) = -1;
          }
          if ((v364 + 1) < 2) {
            goto LABEL_275;
          }
        }
      }
      memcpy(v361, v362, v792);
LABEL_276:
      *(void *)&v361[v792] = *(void *)&v362[v792];
      v370 = (void *)((unint64_t)&v361[v792 + 15] & 0xFFFFFFFFFFFFFFF8);
      v371 = (void *)((unint64_t)&v362[v792 + 15] & 0xFFFFFFFFFFFFFFF8);
      void *v370 = *v371;
      *(void *)(((unint64_t)v370 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v371 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v115 = 1;
      unint64_t v78 = v787;
      char v114 = 1;
LABEL_337:
      *(unsigned char *)(v82 + v78) = v115;
      *(unsigned char *)(v82 + v360) = v114;
      return v82;
    case 2u:
      uint64_t v101 = v69;
      unint64_t v102 = v61;
      uint64_t v82 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      unint64_t v103 = (void *)((v55 + a1) & v753);
      v104 = (const void *)((unint64_t)&a2[v55] & v753);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v745 + 48))(v104, 1, AssociatedTypeWitness))
      {
        memcpy(v103, v104, v49);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v745 + 32))(v103, v104, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v745 + 56))(v103, 0, 1, AssociatedTypeWitness);
      }
      v153 = (char *)(((unint64_t)v103 + v704) & v68);
      unint64_t v154 = (unsigned char *)(((unint64_t)v104 + v704) & v68);
      if (v714 == v727)
      {
        if (!(*(unsigned int (**)(unsigned char *))(v725 + 48))(v154)) {
          goto LABEL_207;
        }
      }
      else
      {
        unint64_t v155 = (uint64_t *)((unint64_t)&v154[v728] & 0xFFFFFFFFFFFFFFF8);
        if (v700 > 0x7FFFFFFE)
        {
          if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v712 + 48))(((unint64_t)v155 + v710) & v101, v683, v711))
          {
LABEL_207:
            unint64_t v155 = (uint64_t *)((unint64_t)&v154[v728] & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_208;
          }
        }
        else
        {
          uint64_t v156 = *v155;
          if ((unint64_t)*v155 >= 0xFFFFFFFF) {
            LODWORD(v156) = -1;
          }
          if ((v156 + 1) < 2)
          {
LABEL_208:
            (*(void (**)(char *, unsigned char *, uint64_t))(v725 + 32))(v153, v154, v724);
            unint64_t v183 = (void *)((unint64_t)&v153[v728] & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v183 = *v155;
            unint64_t v184 = ((unint64_t)v183 + v710) & v101;
            unint64_t v185 = ((unint64_t)v155 + v710) & v101;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v184, v185, v711);
            unint64_t v186 = (void *)((v703 + v184) & 0xFFFFFFFFFFFFFFF8);
            v187 = (void *)((v703 + v185) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v186 = *v187;
            *(_OWORD *)(((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_209:
            uint64_t v188 = &v153[v792];
            *uint64_t v188 = v154[v792];
            *((void *)v188 + 1) = *(void *)&v154[v792 + 8];
            char v114 = 1;
            char v115 = 2;
            unint64_t v78 = v102;
            goto LABEL_336;
          }
        }
      }
      memcpy(v153, v154, v792);
      goto LABEL_209;
    case 3u:
      uint64_t v105 = v71;
      uint64_t v741 = ~v31;
      unint64_t v780 = v52;
      uint64_t v757 = v31 + 8;
      uint64_t v695 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
      uint64_t v770 = *(void *)(v709 - 8);
      unint64_t v106 = ((((v36 + ((v31 + 8 + (v732 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v675 = ~v45;
      unint64_t v788 = v61;
      uint64_t v107 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32);
      uint64_t v82 = a1;
      v107(a1, a2, v76);
      unint64_t v799 = (char *)((v53 + a1) & v85);
      unint64_t v108 = (void *)((unint64_t)&a2[v53] & v85);
      if (v720 == v718)
      {
        int v109 = (*(uint64_t (**)(void *))(v744 + 48))(v108);
        uint64_t v110 = v733;
        uint64_t v111 = v734;
        size_t v112 = v106;
        uint64_t v113 = v105;
LABEL_279:
        unint64_t v372 = v799;
        if (v109)
        {
LABEL_280:
          memcpy(v372, v108, v701);
          size_t v374 = v736;
          unint64_t v373 = v737;
          unint64_t v375 = v788;
          unint64_t v376 = v780;
LABEL_281:
          size_t v377 = v374;
          goto LABEL_287;
        }
        unint64_t v142 = ((unint64_t)v108 + v751) & v764;
        unint64_t v143 = (v749 + v142) & v113;
        goto LABEL_283;
      }
      unint64_t v142 = ((unint64_t)v108 + v751) & v764;
      uint64_t v113 = v105;
      unint64_t v143 = (v749 + v142) & v105;
      if (v726 == v718)
      {
        uint64_t v110 = v733;
        uint64_t v111 = v734;
        if (v713 == v726)
        {
          int v109 = (*(uint64_t (**)(unint64_t))(v723 + 48))((v749 + v142) & v105);
LABEL_278:
          uint64_t v113 = v105;
          size_t v112 = v106;
          goto LABEL_279;
        }
        unsigned int v203 = (unint64_t *)((v732 + v143) & 0xFFFFFFFFFFFFFFF8);
        if (v699 > 0x7FFFFFFE)
        {
          int v109 = (*(uint64_t (**)(unint64_t))(v770 + 48))(((unint64_t)v203 + v757) & v741);
          goto LABEL_278;
        }
        unint64_t v204 = *v203;
        if (v204 >= 0xFFFFFFFF) {
          LODWORD(v204) = -1;
        }
        BOOL v205 = (v204 + 1) >= 2;
        size_t v112 = v106;
      }
      else
      {
        size_t v112 = v106;
        unint64_t v175 = v106 + v143;
        uint64_t v110 = v733;
        uint64_t v111 = v734;
        if ((v684 & 0x80000000) == 0)
        {
          unint64_t v176 = *(void *)(v175 + 8);
          if (v176 >= 0xFFFFFFFF) {
            LODWORD(v176) = -1;
          }
          int v109 = v176 + 1;
          goto LABEL_279;
        }
        uint64_t v215 = (v716 + ((v784 + v175) & v761)) & v675;
        if (v715 > 0x7FFFFFFD)
        {
          int v109 = (*(uint64_t (**)(uint64_t))(v734 + 48))(v215);
          goto LABEL_278;
        }
        unint64_t v672 = *(void *)(((v680 + ((v708 + v215) & v675)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v672 >= 0xFFFFFFFF) {
          LODWORD(v672) = -1;
        }
        BOOL v205 = (v672 + 1) >= 2;
      }
      unint64_t v372 = v799;
      if (v205) {
        goto LABEL_280;
      }
LABEL_283:
      size_t v679 = v112;
      unint64_t v794 = v108;
      uint64_t v378 = v113;
      v107((uint64_t)v372, (unsigned __int8 *)v108, v747);
      unint64_t v379 = (unint64_t)&v372[v751];
      uint64_t v380 = v110;
      unint64_t v381 = v379 & v764;
      v107(v379 & v764, (unsigned __int8 *)v142, v747);
      unint64_t v382 = (v749 + v381) & v378;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v723 + 32))(v382, v143, v722);
      v383 = (void *)((v732 + v382) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v384 = (void *)((v732 + v143) & 0xFFFFFFFFFFFFFFF8);
      void *v383 = *v384;
      unint64_t v385 = ((unint64_t)v383 + v757) & v741;
      unint64_t v386 = ((unint64_t)v384 + v757) & v741;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v770 + 32))(v385, v386, v709);
      uint64_t v387 = (void *)((v695 + v385) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v388 = (void *)((v695 + v386) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v387 = *v388;
      *(_OWORD *)(((unint64_t)v387 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v679 + v382) = *(_OWORD *)(v679 + v143);
      size_t v389 = (v784 + v679 + v382) & v761;
      size_t v390 = (v784 + v679 + v143) & v761;
      *(unsigned char *)size_t v389 = *(unsigned char *)v390;
      uint64_t v391 = v389 | 4;
      int v392 = *(_DWORD *)(v390 | 4);
      *(unsigned char *)(v391 + 4) = *(unsigned char *)((v390 | 4) + 4);
      *(_DWORD *)uint64_t v391 = v392;
      *(_WORD *)(v389 + 10) = *(_WORD *)(v390 + 0xA);
      unint64_t v393 = *(void (**)(size_t, size_t, uint64_t))(v111 + 32);
      v393((v716 + v389) & v675, (v716 + v390) & v675, v380);
      size_t v394 = (v708 + ((v716 + v389) & v675)) & v675;
      size_t v395 = (v708 + ((v716 + v390) & v675)) & v675;
      v393(v394, v395, v380);
      v396 = (unsigned char *)(v394 + v735);
      unsigned char *v396 = *(unsigned char *)(v395 + v735);
      v396[1] = *(unsigned char *)(v395 + v735 + 1);
      v396[2] = *(unsigned char *)(v395 + v735 + 2);
      v396[3] = *(unsigned char *)(v395 + v735 + 3);
      v396[4] = *(unsigned char *)(v395 + v735 + 4);
      unint64_t v397 = (v394 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v398 = (v395 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v397 = *(_OWORD *)v398;
      *(unsigned char *)(v397 + 16) = *(unsigned char *)(v398 + 16);
      *(unsigned char *)(v397 + 17) = *(unsigned char *)(v398 + 17);
      *(unsigned char *)(v397 + 18) = *(unsigned char *)(v398 + 18);
      *(unsigned char *)(v397 + 19) = *(unsigned char *)(v398 + 19);
      unint64_t v399 = (v397 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v400 = (v398 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v399 = *(void *)v400;
      *(unsigned char *)(v399 + 8) = *(unsigned char *)(v400 + 8);
      *(unsigned char *)(v399 + 9) = *(unsigned char *)(v400 + 9);
      *(unsigned char *)(v399 + 10) = *(unsigned char *)(v400 + 10);
      *(unsigned char *)(v399 + 11) = *(unsigned char *)(v400 + 11);
      *(unsigned char *)(v399 + 12) = *(unsigned char *)(v400 + 12);
      long long v401 = (void *)((v398 + 47) & 0xFFFFFFFFFFFFFFF8);
      long long v402 = (void *)((v397 + 47) & 0xFFFFFFFFFFFFFFF8);
      *long long v402 = *v401;
      unint64_t v403 = ((unint64_t)v402 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v404 = ((unint64_t)v401 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v403 = *(void *)v404;
      *(unsigned char *)(v403 + 8) = *(unsigned char *)(v404 + 8);
      *(unsigned char *)(v403 + 9) = *(unsigned char *)(v404 + 9);
      long long v405 = (void *)((v707 + v403) & v675);
      long long v406 = (const void *)((v707 + v404) & v675);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v111 + 48))(v406, 1, v380))
      {
        size_t v374 = v736;
        memcpy(v405, v406, v736);
      }
      else
      {
        v393((size_t)v405, (size_t)v406, v380);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v405, 0, 1, v380);
        size_t v374 = v736;
      }
      unint64_t v373 = v737;
      size_t v377 = v735;
      unint64_t v376 = v780;
      unint64_t v375 = v788;
      unint64_t v372 = v799;
      long long v407 = (void *)(((unint64_t)v405 + v706) & 0xFFFFFFFFFFFFFFF8);
      long long v408 = (void *)(((unint64_t)v406 + v706) & 0xFFFFFFFFFFFFFFF8);
      *long long v407 = *v408;
      unint64_t v409 = ((unint64_t)v407 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v410 = ((unint64_t)v408 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v411 = *(void *)v410;
      *(unsigned char *)(v409 + 8) = *(unsigned char *)(v410 + 8);
      *(void *)unint64_t v409 = v411;
      long long v412 = (void *)(((unint64_t)v407 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v413 = (void *)(((unint64_t)v408 + 31) & 0xFFFFFFFFFFFFFFF8);
      *long long v412 = *v413;
      uint64_t v414 = (_OWORD *)(((unint64_t)v412 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v415 = (_OWORD *)(((unint64_t)v413 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v414 = *v415;
      unint64_t v416 = ((unint64_t)v414 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v417 = ((unint64_t)v415 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v418 = *(void *)v417;
      *(unsigned char *)(v416 + 8) = *(unsigned char *)(v417 + 8);
      *(void *)unint64_t v416 = v418;
      *(unsigned char *)(v416 + 9) = *(unsigned char *)(v417 + 9);
      unint64_t v419 = (v416 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v420 = (v417 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v411) = *(_DWORD *)v420;
      *(unsigned char *)(v419 + 4) = *(unsigned char *)(v420 + 4);
      *(_DWORD *)unint64_t v419 = v411;
      *(_OWORD *)((v416 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v417 + 25) & 0xFFFFFFFFFFFFFFF8);
      size_t v421 = v389 + v783;
      long long v422 = *(_OWORD *)(v390 + v783 + 112);
      long long v424 = *(_OWORD *)(v390 + v783 + 64);
      long long v423 = *(_OWORD *)(v390 + v783 + 80);
      *(_OWORD *)(v421 + 96) = *(_OWORD *)(v390 + v783 + 96);
      *(_OWORD *)(v421 + 112) = v422;
      *(_OWORD *)(v421 + 64) = v424;
      *(_OWORD *)(v421 + 80) = v423;
      long long v425 = *(_OWORD *)(v390 + v783 + 176);
      long long v427 = *(_OWORD *)(v390 + v783 + 128);
      long long v426 = *(_OWORD *)(v390 + v783 + 144);
      *(_OWORD *)(v421 + 160) = *(_OWORD *)(v390 + v783 + 160);
      *(_OWORD *)(v421 + 176) = v425;
      *(_OWORD *)(v421 + 128) = v427;
      *(_OWORD *)(v421 + 144) = v426;
      long long v429 = *(_OWORD *)(v390 + v783 + 208);
      long long v428 = *(_OWORD *)(v390 + v783 + 224);
      long long v430 = *(_OWORD *)(v390 + v783 + 192);
      *(void *)(v421 + 240) = *(void *)(v390 + v783 + 240);
      *(_OWORD *)(v421 + 208) = v429;
      *(_OWORD *)(v421 + 224) = v428;
      *(_OWORD *)(v421 + 192) = v430;
      long long v431 = *(_OWORD *)(v390 + v783);
      long long v432 = *(_OWORD *)(v390 + v783 + 16);
      long long v433 = *(_OWORD *)(v390 + v783 + 48);
      *(_OWORD *)(v421 + 32) = *(_OWORD *)(v390 + v783 + 32);
      *(_OWORD *)(v421 + 48) = v433;
      *(_OWORD *)size_t v421 = v431;
      *(_OWORD *)(v421 + 16) = v432;
      size_t v434 = (_OWORD *)((v389 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
      v435 = (long long *)((v390 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v436 = *v435;
      *(_OWORD *)((char *)v434 + 9) = *(long long *)((char *)v435 + 9);
      *size_t v434 = v436;
      unint64_t v437 = (v389 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v438 = (v390 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v439 = *(_OWORD *)v438;
      *(unsigned char *)(v437 + 16) = *(unsigned char *)(v438 + 16);
      *(_OWORD *)unint64_t v437 = v439;
      unint64_t v440 = (void *)((v389 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v441 = (void *)((v390 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v440 = *v441;
      *(_OWORD *)(((unint64_t)v440 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v441 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v108 = v794;
      if (!v715) {
        goto LABEL_281;
      }
LABEL_287:
      unint64_t v442 = ((((v376
               + ((((((((((v373 + v377 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v443 = (_OWORD *)((unint64_t)&v372[v442] & 0xFFFFFFFFFFFFFFF8);
      v444 = (_OWORD *)(((unint64_t)v108 + v442) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v443 = *v444;
      *(void *)(((unint64_t)v443 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v444 + 23) & 0xFFFFFFFFFFFFFFF8);
      char v114 = 1;
      char v115 = 3;
      unint64_t v78 = v375;
LABEL_336:
      unint64_t v360 = v796;
      goto LABEL_337;
    case 4u:
      uint64_t v82 = a1;
      unint64_t v78 = v61;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      char v114 = 1;
      char v115 = 4;
      goto LABEL_336;
    case 5u:
      uint64_t v82 = a1;
      unint64_t v78 = v61;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      char v114 = 1;
      char v115 = 5;
      goto LABEL_336;
    case 6u:
      unint64_t v116 = v61;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      v117 = (void *)((v60 + a1) & v86);
      unint64_t v118 = (const void *)((unint64_t)&a2[v60] & v86);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v118, 1, v692))
      {
        memcpy(v117, v118, v56);
        char v114 = 1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v50 + 32))(v117, v118, v692);
        char v114 = 1;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v117, 0, 1, v692);
      }
      char v115 = 6;
      unint64_t v78 = v116;
      uint64_t v82 = a1;
      goto LABEL_336;
    case 7u:
      uint64_t v82 = a1;
      unint64_t v78 = v61;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      char v114 = 1;
      goto LABEL_137;
    default:
      uint64_t v87 = v71;
      uint64_t v739 = ~v31;
      unint64_t v778 = v52;
      uint64_t v755 = v31 + 8;
      uint64_t v693 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
      uint64_t v768 = *(void *)(v709 - 8);
      uint64_t v673 = ~v45;
      size_t v676 = ((((v36 + ((v31 + 8 + (v732 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v786 = v61;
      v88 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32);
      uint64_t v82 = a1;
      v88(a1, a2, v76);
      unint64_t v798 = (void *)((v53 + a1) & v85);
      unint64_t v89 = (void *)((unint64_t)&a2[v53] & v85);
      if (v720 == v718)
      {
        int v90 = (*(uint64_t (**)(void *))(v744 + 48))(v89);
        uint64_t v92 = v733;
        uint64_t v91 = v734;
LABEL_244:
        uint64_t v138 = v87;
LABEL_245:
        if (v90)
        {
LABEL_246:
          int v219 = v798;
          memcpy(v798, v89, v701);
          size_t v221 = v736;
          unint64_t v220 = v737;
          unint64_t v222 = v786;
          unint64_t v223 = v778;
          goto LABEL_247;
        }
        unint64_t v137 = ((unint64_t)v89 + v751) & v764;
        unint64_t v139 = (v749 + v137) & v138;
LABEL_249:
        v793 = v89;
        uint64_t v225 = v138;
        v88((uint64_t)v798, (unsigned __int8 *)v89, v747);
        uint64_t v226 = v91;
        unint64_t v227 = ((unint64_t)v798 + v751) & v764;
        v88(v227, (unsigned __int8 *)v137, v747);
        unint64_t v228 = (v749 + v227) & v225;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v723 + 32))(v228, v139, v722);
        v229 = (void *)((v732 + v228) & 0xFFFFFFFFFFFFFFF8);
        v230 = (void *)((v732 + v139) & 0xFFFFFFFFFFFFFFF8);
        void *v229 = *v230;
        unint64_t v231 = ((unint64_t)v229 + v755) & v739;
        unint64_t v232 = ((unint64_t)v230 + v755) & v739;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v768 + 32))(v231, v232, v709);
        char v233 = (void *)((v693 + v231) & 0xFFFFFFFFFFFFFFF8);
        v234 = (void *)((v693 + v232) & 0xFFFFFFFFFFFFFFF8);
        *char v233 = *v234;
        *(_OWORD *)(((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v676 + v228) = *(_OWORD *)(v676 + v139);
        size_t v235 = (v784 + v676 + v228) & v761;
        size_t v236 = (v784 + v676 + v139) & v761;
        *(unsigned char *)size_t v235 = *(unsigned char *)v236;
        uint64_t v237 = v235 | 4;
        int v238 = *(_DWORD *)(v236 | 4);
        *(unsigned char *)(v237 + 4) = *(unsigned char *)((v236 | 4) + 4);
        *(_DWORD *)uint64_t v237 = v238;
        *(_WORD *)(v235 + 10) = *(_WORD *)(v236 + 0xA);
        v239 = *(void (**)(size_t, size_t, uint64_t))(v226 + 32);
        v239((v716 + v235) & v673, (v716 + v236) & v673, v92);
        size_t v240 = (v708 + ((v716 + v235) & v673)) & v673;
        size_t v241 = (v708 + ((v716 + v236) & v673)) & v673;
        v239(v240, v241, v92);
        v242 = (unsigned char *)(v240 + v735);
        unsigned char *v242 = *(unsigned char *)(v241 + v735);
        v242[1] = *(unsigned char *)(v241 + v735 + 1);
        v242[2] = *(unsigned char *)(v241 + v735 + 2);
        v242[3] = *(unsigned char *)(v241 + v735 + 3);
        v242[4] = *(unsigned char *)(v241 + v735 + 4);
        unint64_t v243 = (v240 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v244 = (v241 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v243 = *(_OWORD *)v244;
        *(unsigned char *)(v243 + 16) = *(unsigned char *)(v244 + 16);
        *(unsigned char *)(v243 + 17) = *(unsigned char *)(v244 + 17);
        *(unsigned char *)(v243 + 18) = *(unsigned char *)(v244 + 18);
        *(unsigned char *)(v243 + 19) = *(unsigned char *)(v244 + 19);
        unint64_t v245 = (v243 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v246 = (v244 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v245 = *(void *)v246;
        *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
        *(unsigned char *)(v245 + 9) = *(unsigned char *)(v246 + 9);
        *(unsigned char *)(v245 + 10) = *(unsigned char *)(v246 + 10);
        *(unsigned char *)(v245 + 11) = *(unsigned char *)(v246 + 11);
        *(unsigned char *)(v245 + 12) = *(unsigned char *)(v246 + 12);
        v247 = (void *)((v244 + 47) & 0xFFFFFFFFFFFFFFF8);
        v248 = (void *)((v243 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v248 = *v247;
        unint64_t v249 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v250 = ((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v249 = *(void *)v250;
        *(unsigned char *)(v249 + 8) = *(unsigned char *)(v250 + 8);
        *(unsigned char *)(v249 + 9) = *(unsigned char *)(v250 + 9);
        v251 = (void *)((v707 + v249) & v673);
        v252 = (const void *)((v707 + v250) & v673);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v226 + 48))(v252, 1, v92))
        {
          size_t v221 = v736;
          memcpy(v251, v252, v736);
        }
        else
        {
          v239((size_t)v251, (size_t)v252, v92);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v226 + 56))(v251, 0, 1, v92);
          size_t v221 = v736;
        }
        unint64_t v220 = v737;
        size_t v224 = v735;
        unint64_t v223 = v778;
        unint64_t v222 = v786;
        int v219 = v798;
        unint64_t v253 = (void *)(((unint64_t)v251 + v706) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v254 = (void *)(((unint64_t)v252 + v706) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v253 = *v254;
        unint64_t v255 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v257 = *(void *)v256;
        *(unsigned char *)(v255 + 8) = *(unsigned char *)(v256 + 8);
        *(void *)unint64_t v255 = v257;
        unint64_t v258 = (void *)(((unint64_t)v253 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v259 = (void *)(((unint64_t)v254 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v258 = *v259;
        unint64_t v260 = (_OWORD *)(((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v261 = (_OWORD *)(((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v260 = *v261;
        unint64_t v262 = ((unint64_t)v260 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v263 = ((unint64_t)v261 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v264 = *(void *)v263;
        *(unsigned char *)(v262 + 8) = *(unsigned char *)(v263 + 8);
        *(void *)unint64_t v262 = v264;
        *(unsigned char *)(v262 + 9) = *(unsigned char *)(v263 + 9);
        unint64_t v265 = (v262 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v266 = (v263 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v257) = *(_DWORD *)v266;
        *(unsigned char *)(v265 + 4) = *(unsigned char *)(v266 + 4);
        *(_DWORD *)unint64_t v265 = v257;
        *(_OWORD *)((v262 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v263 + 25) & 0xFFFFFFFFFFFFFFF8);
        size_t v267 = v235 + v783;
        long long v268 = *(_OWORD *)(v236 + v783 + 112);
        long long v270 = *(_OWORD *)(v236 + v783 + 64);
        long long v269 = *(_OWORD *)(v236 + v783 + 80);
        *(_OWORD *)(v267 + 96) = *(_OWORD *)(v236 + v783 + 96);
        *(_OWORD *)(v267 + 112) = v268;
        *(_OWORD *)(v267 + 64) = v270;
        *(_OWORD *)(v267 + 80) = v269;
        long long v271 = *(_OWORD *)(v236 + v783 + 176);
        long long v273 = *(_OWORD *)(v236 + v783 + 128);
        long long v272 = *(_OWORD *)(v236 + v783 + 144);
        *(_OWORD *)(v267 + 160) = *(_OWORD *)(v236 + v783 + 160);
        *(_OWORD *)(v267 + 176) = v271;
        *(_OWORD *)(v267 + 128) = v273;
        *(_OWORD *)(v267 + 144) = v272;
        long long v275 = *(_OWORD *)(v236 + v783 + 208);
        long long v274 = *(_OWORD *)(v236 + v783 + 224);
        long long v276 = *(_OWORD *)(v236 + v783 + 192);
        *(void *)(v267 + 240) = *(void *)(v236 + v783 + 240);
        *(_OWORD *)(v267 + 208) = v275;
        *(_OWORD *)(v267 + 224) = v274;
        *(_OWORD *)(v267 + 192) = v276;
        long long v277 = *(_OWORD *)(v236 + v783);
        long long v278 = *(_OWORD *)(v236 + v783 + 16);
        long long v279 = *(_OWORD *)(v236 + v783 + 48);
        *(_OWORD *)(v267 + 32) = *(_OWORD *)(v236 + v783 + 32);
        *(_OWORD *)(v267 + 48) = v279;
        *(_OWORD *)size_t v267 = v277;
        *(_OWORD *)(v267 + 16) = v278;
        size_t v280 = (_OWORD *)((v235 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v281 = (long long *)((v236 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v282 = *v281;
        *(_OWORD *)((char *)v280 + 9) = *(long long *)((char *)v281 + 9);
        *size_t v280 = v282;
        unint64_t v283 = (v235 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v284 = (v236 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v285 = *(_OWORD *)v284;
        *(unsigned char *)(v283 + 16) = *(unsigned char *)(v284 + 16);
        *(_OWORD *)unint64_t v283 = v285;
        unint64_t v286 = (void *)((v235 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v287 = (void *)((v236 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v286 = *v287;
        *(_OWORD *)(((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v287 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v89 = v793;
        if (v715)
        {
LABEL_253:
          char v115 = 0;
          unint64_t v288 = ((((v223
                   + ((((((((((v220 + v224 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          unint64_t v289 = (void *)(((unint64_t)v219 + v288) & 0xFFFFFFFFFFFFFFF8);
          size_t v290 = (void *)(((unint64_t)v89 + v288) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v289 = *v290;
          *(void *)(((unint64_t)v289 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v114 = 1;
          unint64_t v78 = v222;
          goto LABEL_336;
        }
LABEL_247:
        size_t v224 = v221;
        goto LABEL_253;
      }
      unint64_t v137 = ((unint64_t)v89 + v751) & v764;
      uint64_t v138 = v87;
      unint64_t v139 = (v749 + v137) & v87;
      if (v726 == v718)
      {
        uint64_t v92 = v733;
        uint64_t v91 = v734;
        if (v713 == v726)
        {
          int v90 = (*(uint64_t (**)(unint64_t))(v723 + 48))((v749 + v137) & v87);
          goto LABEL_244;
        }
        unint64_t v198 = (unint64_t *)((v732 + v139) & 0xFFFFFFFFFFFFFFF8);
        if (v699 > 0x7FFFFFFE)
        {
          int v90 = (*(uint64_t (**)(unint64_t))(v768 + 48))(((unint64_t)v198 + v755) & v739);
          goto LABEL_244;
        }
        unint64_t v199 = *v198;
      }
      else
      {
        size_t v164 = v676 + v139;
        uint64_t v92 = v733;
        uint64_t v91 = v734;
        if ((v684 & 0x80000000) == 0)
        {
          unint64_t v165 = *(void *)(v164 + 8);
          if (v165 >= 0xFFFFFFFF) {
            LODWORD(v165) = -1;
          }
          int v90 = v165 + 1;
          goto LABEL_245;
        }
        size_t v212 = (v716 + ((v784 + v164) & v761)) & v673;
        if (v715 > 0x7FFFFFFD)
        {
          int v90 = (*(uint64_t (**)(size_t))(v734 + 48))(v212);
          goto LABEL_244;
        }
        unint64_t v199 = *(void *)(((v680 + ((v708 + v212) & v673)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v199 >= 0xFFFFFFFF) {
        LODWORD(v199) = -1;
      }
      if ((v199 + 1) >= 2) {
        goto LABEL_246;
      }
      goto LABEL_249;
  }
}

unsigned __int8 *sub_10067687C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(void *)(a3 + 16);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v866 = *(void *)(v4 + 64);
    uint64_t v868 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v859 = v3;
    uint64_t v827 = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(v827 - 8);
    int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
    uint64_t v809 = swift_getAssociatedTypeWitness();
    uint64_t v7 = *(void *)(v809 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v6 | v8 | 7;
    uint64_t v802 = sub_10096B0E0();
    uint64_t v10 = *(void *)(v802 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v12 = v11 | 7;
    uint64_t v13 = v9 | v868 | v11;
    uint64_t v851 = v4;
    uint64_t v828 = v5;
    uint64_t v810 = v7;
    unsigned int v14 = *(_DWORD *)(v7 + 84);
    unsigned int v812 = *(_DWORD *)(v5 + 84);
    if (v812 > v14) {
      unsigned int v14 = *(_DWORD *)(v5 + 84);
    }
    unsigned int v787 = v14;
    if (v14 <= 0x7FFFFFFE) {
      unsigned int v14 = 2147483646;
    }
    unsigned int v854 = *(_DWORD *)(v4 + 84);
    unsigned int v830 = v14;
    if (v14 <= v854) {
      unsigned int v14 = *(_DWORD *)(v4 + 84);
    }
    uint64_t v829 = *(void *)(v802 - 8);
    unsigned int v15 = *(_DWORD *)(v10 + 84);
    if (v15 <= 0x7FFFFFFE) {
      unsigned int v16 = 2147483646;
    }
    else {
      unsigned int v16 = *(_DWORD *)(v10 + 84);
    }
    unsigned int v848 = v16;
    if (v14 <= v16) {
      unsigned int v14 = v16;
    }
    unsigned int v777 = v14;
    if (v14 <= 0x7FFFFFFF) {
      unsigned int v14 = 0x7FFFFFFF;
    }
    unsigned int v821 = v14;
    unsigned int v791 = *(_DWORD *)(v10 + 84);
    uint64_t v823 = v866 + v868;
    uint64_t v838 = v9;
    uint64_t v824 = v866 + v9;
    uint64_t v832 = *(void *)(v5 + 64) + 7;
    uint64_t v808 = v8 + 8;
    uint64_t v844 = v8;
    uint64_t v793 = *(void *)(v7 + 64) + 7;
    size_t v858 = ((((v793 + ((v8 + 8 + (v832 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v840 = v11 | 7;
    uint64_t v853 = v12 + 16;
    uint64_t v814 = v11 + 12;
    size_t v17 = *(void *)(v10 + 64);
    size_t v801 = v17 + v11;
    size_t v788 = v17 + 12;
    size_t v796 = v17;
    uint64_t v797 = v11 + 10;
    unint64_t v18 = (v11
         + 10
         + ((((((v17 + 12 + ((v17 + v11 + ((v11 + 12) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
    if (!v15) {
      ++v17;
    }
    size_t v822 = v17;
    unint64_t v815 = v18;
    size_t v798 = v17 + 7;
    unint64_t v850 = ((((((((((v17 + 7 + v18) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v790 = (v12 + 16 + v858 + ((v866 + v9 + ((v866 + v868) & ~v868)) & ~v9)) & ~v12;
    unint64_t v820 = v13 + v866;
    uint64_t v842 = v9 | v868 | v11;
    unint64_t v800 = ((((v790 + v850 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v19 = v800 + ((v13 + v866) & ~v13);
    unint64_t v835 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(void *)(a3 + 24);
    uint64_t v856 = swift_getAssociatedTypeWitness();
    uint64_t v21 = *(void *)(v856 - 8);
    uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
    unint64_t v833 = (v19 + v22) & ~v22;
    uint64_t v852 = v21;
    unsigned int v23 = *(_DWORD *)(v21 + 84);
    unint64_t v24 = *(void *)(v21 + 64);
    if (v23) {
      size_t v25 = *(void *)(v21 + 64);
    }
    else {
      size_t v25 = v24 + 1;
    }
    size_t v847 = v25;
    uint64_t v825 = swift_getAssociatedTypeWitness();
    uint64_t v26 = *(void *)(v825 - 8);
    int v27 = *(_DWORD *)(v26 + 80) & 0xF8;
    uint64_t v28 = swift_getAssociatedTypeWitness();
    uint64_t v29 = v11;
    uint64_t v30 = *(void *)(v28 - 8);
    uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
    uint64_t v32 = v27 | v31 | 7;
    uint64_t v826 = v26;
    unsigned int v33 = *(_DWORD *)(v26 + 84);
    uint64_t v806 = v30;
    uint64_t v807 = v28;
    unsigned int v34 = *(_DWORD *)(v30 + 84);
    unsigned int v774 = v34;
    if (v33 > v34) {
      unsigned int v34 = *(_DWORD *)(v26 + 84);
    }
    unsigned int v786 = v34;
    if (v34 <= 0x7FFFFFFE) {
      unsigned int v35 = 2147483646;
    }
    else {
      unsigned int v35 = v34;
    }
    uint64_t v831 = *(void *)(v26 + 64) + 7;
    uint64_t v805 = v31 + 8;
    uint64_t v792 = *(void *)(*(void *)(v28 - 8) + 64) + 7;
    size_t v36 = ((((v792 + ((v31 + 8 + (v831 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v37 = ((((((v847 + v32 + v833) & ~v32) + v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    size_t v38 = v866;
    uint64_t v39 = v866 + v22;
    size_t v795 = v847 + v32;
    uint64_t v40 = *(void *)(v859 - 8);
    uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
    uint64_t v782 = v866 + v41;
    if (*(_DWORD *)(v40 + 84)) {
      uint64_t v42 = *(void *)(*(void *)(v859 - 8) + 64);
    }
    else {
      uint64_t v42 = *(void *)(*(void *)(v859 - 8) + 64) + 1;
    }
    unint64_t v43 = ((v866 + v41) & ~v41) + v42;
    unint64_t v44 = ((v835 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v866 > v44) {
      unint64_t v44 = v866;
    }
    if (v37 <= v36 + ((v847 + v32 + ((v866 + v22) & ~v22)) & ~v32) + 16) {
      unint64_t v37 = v36 + ((v847 + v32 + ((v866 + v22) & ~v22)) & ~v32) + 16;
    }
    if (((v835 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v43) {
      unint64_t v43 = ((v835 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v44 > v37) {
      unint64_t v37 = v44;
    }
    if (v37 <= v43) {
      unint64_t v45 = v43;
    }
    else {
      unint64_t v45 = v37;
    }
    uint64_t v46 = v22 | v11 | v32;
    unsigned int v834 = v23;
    if (v35 <= v23) {
      unsigned int v47 = v23;
    }
    else {
      unsigned int v47 = v35;
    }
    uint64_t v48 = v20;
    if (v47 <= v848) {
      unsigned int v47 = v848;
    }
    unsigned int v776 = v47;
    if (v47 <= 0x7FFFFFFF) {
      int v49 = 0x7FFFFFFF;
    }
    else {
      int v49 = v47;
    }
    uint64_t v849 = v22;
    uint64_t v837 = v24 + v22;
    if (!v854) {
      size_t v38 = v866 + 1;
    }
    uint64_t v50 = *(void *)(v20 - 8);
    uint64_t v51 = *(unsigned __int8 *)(v50 + 80);
    uint64_t v785 = v50;
    uint64_t v836 = v24 + v32;
    size_t v52 = (v853 + v36 + ((v24 + v32 + ((v24 + v22) & ~v22)) & ~v32)) & ~v840;
    unint64_t v818 = v46 + v24;
    unint64_t v799 = ((((v52 + v850 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v53 = v799 + ((v46 + v24) & ~v46);
    uint64_t v781 = v24 + v868;
    size_t v794 = v38 + v838;
    if (*(_DWORD *)(v50 + 84)) {
      uint64_t v54 = *(void *)(*(void *)(v20 - 8) + 64);
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v20 - 8) + 64) + 1;
    }
    if (v24 <= ((v53 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v55 = ((v53 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else {
      unint64_t v55 = v24;
    }
    if (((((((v38 + v838 + ((v53 + v868) & ~v868)) & ~v838) + v858 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8 <= ((v38 + v838 + ((v24 + v868) & ~v868)) & ~v838) + v858 + 16)
      unint64_t v56 = ((v38 + v838 + ((v24 + v868) & ~v868)) & ~v838) + v858 + 16;
    else {
      unint64_t v56 = ((((((v38 + v838 + ((v53 + v868) & ~v868)) & ~v838) + v858 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
    }
          + 8;
    unint64_t v57 = ((v53 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v780 = v24 + v51;
    if (v57 <= ((v24 + v51) & ~v51) + v54) {
      unint64_t v57 = ((v24 + v51) & ~v51) + v54;
    }
    if (v55 <= v56) {
      unint64_t v55 = v56;
    }
    if (v55 <= v57) {
      unint64_t v58 = v57;
    }
    else {
      unint64_t v58 = v55;
    }
    if (v58 + 1 <= v45 + 1) {
      unint64_t v59 = v45 + 1;
    }
    else {
      unint64_t v59 = v58 + 1;
    }
    unsigned int v60 = a1[v59];
    unsigned int v61 = v60 - 2;
    if (v60 >= 2)
    {
      if (v59 <= 3) {
        uint64_t v62 = v59;
      }
      else {
        uint64_t v62 = 4;
      }
      switch(v62)
      {
        case 1:
          int v63 = *a1;
          if (v59 < 4) {
            goto LABEL_80;
          }
          goto LABEL_81;
        case 2:
          int v63 = *(unsigned __int16 *)a1;
          if (v59 >= 4) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 3:
          int v63 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v59 >= 4) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 4:
          int v63 = *(_DWORD *)a1;
          if (v59 < 4) {
LABEL_80:
          }
            v63 |= v61 << (8 * v59);
LABEL_81:
          unsigned int v60 = v63 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v817 = ~v842;
    uint64_t v843 = ~v868;
    uint64_t v867 = ~v838;
    uint64_t v804 = ~v844;
    uint64_t v813 = ~v840;
    uint64_t v64 = ~v11;
    uint64_t v841 = ~v22;
    uint64_t v845 = ~v32;
    uint64_t v803 = ~v31;
    uint64_t v779 = ~v41;
    uint64_t v816 = ~v46;
    uint64_t v778 = ~v51;
    unsigned int v811 = v33;
    unsigned int v839 = v35;
    int v819 = v49;
    size_t v789 = v52;
    uint64_t v772 = v39;
    size_t __n = v38;
    uint64_t v775 = *(void *)(v859 - 8);
    size_t v770 = v54;
    size_t v771 = v42;
    if (v60 == 1)
    {
      unsigned int v65 = a1[v58];
      unsigned int v66 = v65 - 8;
      if (v65 >= 8)
      {
        if (v58 <= 3) {
          uint64_t v67 = v58;
        }
        else {
          uint64_t v67 = 4;
        }
        switch(v67)
        {
          case 1:
            int v68 = *a1;
            if (v58 < 4) {
              goto LABEL_98;
            }
            goto LABEL_102;
          case 2:
            int v68 = *(unsigned __int16 *)a1;
            if (v58 < 4) {
              goto LABEL_98;
            }
            goto LABEL_102;
          case 3:
            int v68 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v58 < 4) {
              goto LABEL_98;
            }
            goto LABEL_102;
          case 4:
            int v68 = *(_DWORD *)a1;
            if (v58 < 4) {
LABEL_98:
            }
              unsigned int v65 = (v68 | (v66 << (8 * v58))) + 8;
            else {
LABEL_102:
            }
              unsigned int v65 = v68 + 8;
            break;
          default:
            break;
        }
      }
      switch(v65)
      {
        case 1u:
          unint64_t v761 = v45;
          unint64_t v89 = *(void (**)(unsigned __int8 *, uint64_t))(v852 + 8);
          v89(a1, v856);
          unint64_t v90 = (unint64_t)&a1[v818] & v816;
          if (v834 == v819)
          {
            uint64_t v91 = *(uint64_t (**)(unint64_t))(v852 + 48);
            unint64_t v92 = (unint64_t)&a1[v818] & v816;
            goto LABEL_123;
          }
          unint64_t v94 = (v837 + v90) & v841;
          unint64_t v95 = (v836 + v94) & v845;
          if (v839 == v819)
          {
            if (v811 == v839)
            {
              uint64_t v91 = *(uint64_t (**)(unint64_t))(v826 + 48);
              unint64_t v92 = (v836 + v94) & v845;
              goto LABEL_123;
            }
            uint64_t v291 = (unint64_t *)((v831 + v95) & 0xFFFFFFFFFFFFFFF8);
            if (v786 <= 0x7FFFFFFE)
            {
              unint64_t v292 = *v291;
              goto LABEL_667;
            }
            unint64_t v92 = ((unint64_t)v291 + v805) & v803;
            uint64_t v91 = *(uint64_t (**)(unint64_t))(v806 + 48);
          }
          else
          {
            size_t v184 = v36 + v95;
            if ((v776 & 0x80000000) == 0)
            {
              unint64_t v185 = *(void *)(v184 + 8);
              if (v185 >= 0xFFFFFFFF) {
                LODWORD(v185) = -1;
              }
              if (v185 == -1)
              {
LABEL_124:
                unint64_t v94 = (v837 + v90) & v841;
                unint64_t v95 = (v836 + v94) & v845;
LABEL_125:
                unint64_t v756 = v90;
                v89((unsigned __int8 *)v90, v856);
                v89((unsigned __int8 *)v94, v856);
                (*(void (**)(unint64_t, uint64_t))(v826 + 8))(v95, v825);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v806 + 8))((v805 + ((v831 + v95) & 0xFFFFFFFFFFFFFFF8)) & v803, v807);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v96 = (v853 + v36 + v95) & v813;
                uint64_t v97 = *(void (**)(size_t, uint64_t))(v829 + 8);
                v97((v814 + v96) & v64, v802);
                size_t v98 = (v801 + ((v814 + v96) & v64)) & v64;
                v97(v98, v802);
                swift_bridgeObjectRelease();
                unint64_t v99 = (v797
                     + ((((((v788 + v98) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v64;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v829 + 48))(v99, 1, v802)) {
                  v97(v99, v802);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v100 = (uint64_t *)((((((v798 + v99) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v101 = v100[1];
                if ((v101 & 0x3000000000000000) == 0) {
                  sub_10001E9C0(*v100, v101);
                }
                swift_bridgeObjectRelease();
                size_t v102 = v96 + v850;
                LODWORD(v103) = -1;
                if (*(void *)(v102 + 16) < 0xFFFFFFFFuLL) {
                  uint64_t v103 = *(void *)(v102 + 16);
                }
                uint64_t v64 = ~v29;
                if ((int)v103 - 1 < 0)
                {
                  swift_errorRelease();
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v102 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_1000CF144(*(void *)((((v102 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v102 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                unint64_t v90 = v756;
              }
LABEL_136:
              unint64_t v104 = (v90 + v868 + v799) & v843;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v851 + 48))(v104, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v851 + 8))(v104, AssociatedTypeWitness); {
              unint64_t v105 = (v794 + v104) & v867;
              }
              unint64_t v45 = v761;
              if (v812 == v830)
              {
                int v106 = (*(uint64_t (**)(unint64_t))(v828 + 48))(v105);
              }
              else
              {
                size_t v174 = (uint64_t *)((v832 + v105) & 0xFFFFFFFFFFFFFFF8);
                if (v787 <= 0x7FFFFFFE)
                {
                  uint64_t v175 = *v174;
                  if ((unint64_t)*v174 >= 0xFFFFFFFF) {
                    LODWORD(v175) = -1;
                  }
                  if ((v175 + 1) >= 2) {
                    goto LABEL_282;
                  }
                  goto LABEL_281;
                }
                int v106 = (*(uint64_t (**)(unint64_t))(v810 + 48))(((unint64_t)v174 + v808) & v804);
              }
              if (v106)
              {
LABEL_282:
                size_t v186 = v105 + v858;
                goto LABEL_308;
              }
              size_t v174 = (uint64_t *)((v832 + v105) & 0xFFFFFFFFFFFFFFF8);
LABEL_281:
              (*(void (**)(unint64_t, uint64_t))(v828 + 8))(v105, v827);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v810 + 8))(((unint64_t)v174 + v808) & v804, v809);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_282;
            }
            unint64_t v92 = (v814 + ((v853 + v184) & v813)) & v64;
            if (v791 <= 0x7FFFFFFD)
            {
              unint64_t v292 = *(void *)(((v788 + ((v801 + v92) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_667:
              if (v292 >= 0xFFFFFFFF) {
                LODWORD(v292) = -1;
              }
              if ((v292 + 1) < 2) {
                goto LABEL_125;
              }
              goto LABEL_136;
            }
            uint64_t v91 = *(uint64_t (**)(unint64_t))(v829 + 48);
          }
LABEL_123:
          int v93 = v91(v92);
          unint64_t v90 = (unint64_t)&a1[v818] & v816;
          if (v93) {
            goto LABEL_136;
          }
          goto LABEL_124;
        case 2u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v852 + 8))(a1, v856);
          unint64_t v107 = (unint64_t)&a1[v781] & v843;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v851 + 48))(v107, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v851 + 8))(v107, AssociatedTypeWitness); {
          unint64_t v108 = (v794 + v107) & v867;
          }
          if (v812 == v830)
          {
            int v109 = (*(uint64_t (**)(unint64_t))(v828 + 48))(v108);
LABEL_284:
            if (v109) {
              goto LABEL_287;
            }
            unint64_t v176 = (uint64_t *)((v832 + v108) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_286;
          }
          unint64_t v176 = (uint64_t *)((v832 + v108) & 0xFFFFFFFFFFFFFFF8);
          if (v787 > 0x7FFFFFFE)
          {
            int v109 = (*(uint64_t (**)(unint64_t))(v810 + 48))(((unint64_t)v176 + v808) & v804);
            goto LABEL_284;
          }
          uint64_t v177 = *v176;
          if ((unint64_t)*v176 >= 0xFFFFFFFF) {
            LODWORD(v177) = -1;
          }
          if ((v177 + 1) < 2)
          {
LABEL_286:
            (*(void (**)(unint64_t, uint64_t))(v828 + 8))(v108, v827);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v810 + 8))(((unint64_t)v176 + v808) & v804, v809);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_287:
          size_t v187 = v108 + v858;
          goto LABEL_314;
        case 3u:
          size_t v783 = v36;
          unint64_t v760 = v45;
          uint64_t v766 = ~v29;
          uint64_t v110 = *(void (**)(unsigned __int8 *, uint64_t))(v852 + 8);
          v110(a1, v856);
          unint64_t v111 = (unint64_t)&a1[v818] & v816;
          if (v834 == v819)
          {
            size_t v112 = *(uint64_t (**)(unint64_t))(v852 + 48);
            unint64_t v113 = (unint64_t)&a1[v818] & v816;
            goto LABEL_146;
          }
          unint64_t v115 = (v837 + v111) & v841;
          unint64_t v116 = (v836 + v115) & v845;
          if (v839 == v819)
          {
            if (v811 == v839)
            {
              size_t v112 = *(uint64_t (**)(unint64_t))(v826 + 48);
              unint64_t v113 = (v836 + v115) & v845;
              goto LABEL_146;
            }
            uint64_t v293 = (unint64_t *)((v831 + v116) & 0xFFFFFFFFFFFFFFF8);
            if (v786 <= 0x7FFFFFFE)
            {
              unint64_t v294 = *v293;
              goto LABEL_612;
            }
            unint64_t v113 = ((unint64_t)v293 + v805) & v803;
            size_t v112 = *(uint64_t (**)(unint64_t))(v806 + 48);
          }
          else
          {
            size_t v188 = v36 + v116;
            if ((v776 & 0x80000000) == 0)
            {
              unint64_t v189 = *(void *)(v188 + 8);
              if (v189 >= 0xFFFFFFFF) {
                LODWORD(v189) = -1;
              }
              if (v189 == -1)
              {
LABEL_147:
                unint64_t v115 = (v837 + v111) & v841;
                unint64_t v116 = (v836 + v115) & v845;
LABEL_148:
                v110((unsigned __int8 *)v111, v856);
                v110((unsigned __int8 *)v115, v856);
                (*(void (**)(unint64_t, uint64_t))(v826 + 8))(v116, v825);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v806 + 8))((v805 + ((v831 + v116) & 0xFFFFFFFFFFFFFFF8)) & v803, v807);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v117 = (v853 + v36 + v116) & v813;
                unint64_t v118 = *(void (**)(size_t, uint64_t))(v829 + 8);
                v118((v814 + v117) & v766, v802);
                size_t v119 = (v801 + ((v814 + v117) & v766)) & v766;
                v118(v119, v802);
                swift_bridgeObjectRelease();
                unint64_t v120 = (v797
                      + ((((((v788 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v766;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v829 + 48))(v120, 1, v802)) {
                  v118(v120, v802);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v121 = (uint64_t *)((((((v798 + v120) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v122 = v121[1];
                if ((v122 & 0x3000000000000000) == 0) {
                  sub_10001E9C0(*v121, v122);
                }
                swift_bridgeObjectRelease();
                size_t v123 = v117 + v850;
                LODWORD(v124) = -1;
                if (*(void *)(v123 + 16) < 0xFFFFFFFFuLL) {
                  uint64_t v124 = *(void *)(v123 + 16);
                }
                if ((int)v124 - 1 < 0)
                {
                  swift_errorRelease();
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v123 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_1000CF144(*(void *)((((v123 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v123 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                goto LABEL_226;
              }
              goto LABEL_226;
            }
            unint64_t v113 = (v814 + ((v853 + v188) & v813)) & v766;
            if (v791 <= 0x7FFFFFFD)
            {
              unint64_t v294 = *(void *)(((v788 + ((v801 + v113) & v766)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_612:
              if (v294 >= 0xFFFFFFFF) {
                LODWORD(v294) = -1;
              }
              if ((v294 + 1) < 2) {
                goto LABEL_148;
              }
              goto LABEL_226;
            }
            size_t v112 = *(uint64_t (**)(unint64_t))(v829 + 48);
          }
LABEL_146:
          int v114 = v112(v113);
          unint64_t v111 = (unint64_t)&a1[v818] & v816;
          if (v114) {
            goto LABEL_226;
          }
          goto LABEL_147;
        case 4u:
        case 5u:
        case 7u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v852 + 8))(a1, v856);
          goto LABEL_316;
        case 6u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v852 + 8))(a1, v856);
          unint64_t v125 = (unint64_t)&a1[v780] & v778;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v785 + 48))(v125, 1, v20)) {
            (*(void (**)(unint64_t, uint64_t))(v785 + 8))(v125, v20);
          }
          goto LABEL_316;
        default:
          size_t v783 = v36;
          unint64_t v760 = v45;
          uint64_t v766 = ~v29;
          unsigned int v73 = *(void (**)(unsigned __int8 *, uint64_t))(v852 + 8);
          v73(a1, v856);
          unint64_t v74 = (unint64_t)&a1[v818] & v816;
          if (v834 == v819)
          {
            uint64_t v75 = *(uint64_t (**)(unint64_t))(v852 + 48);
            unint64_t v76 = (unint64_t)&a1[v818] & v816;
            goto LABEL_107;
          }
          unint64_t v78 = (v837 + v74) & v841;
          unint64_t v79 = (v836 + v78) & v845;
          if (v839 == v819)
          {
            if (v811 == v839)
            {
              uint64_t v75 = *(uint64_t (**)(unint64_t))(v826 + 48);
              unint64_t v76 = (v836 + v78) & v845;
              goto LABEL_107;
            }
            unint64_t v289 = (unint64_t *)((v831 + v79) & 0xFFFFFFFFFFFFFFF8);
            if (v786 <= 0x7FFFFFFE)
            {
              unint64_t v290 = *v289;
              goto LABEL_662;
            }
            unint64_t v76 = ((unint64_t)v289 + v805) & v803;
            uint64_t v75 = *(uint64_t (**)(unint64_t))(v806 + 48);
          }
          else
          {
            size_t v182 = v36 + v79;
            if ((v776 & 0x80000000) == 0)
            {
              unint64_t v183 = *(void *)(v182 + 8);
              if (v183 >= 0xFFFFFFFF) {
                LODWORD(v183) = -1;
              }
              if (v183 == -1)
              {
LABEL_108:
                unint64_t v78 = (v837 + v74) & v841;
                unint64_t v79 = (v836 + v78) & v845;
LABEL_109:
                unint64_t v755 = v74;
                v73((unsigned __int8 *)v74, v856);
                v73((unsigned __int8 *)v78, v856);
                (*(void (**)(unint64_t, uint64_t))(v826 + 8))(v79, v825);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v806 + 8))((v805 + ((v831 + v79) & 0xFFFFFFFFFFFFFFF8)) & v803, v807);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v80 = (v853 + v36 + v79) & v813;
                uint64_t v81 = *(void (**)(size_t, uint64_t))(v829 + 8);
                v81((v814 + v80) & v766, v802);
                size_t v82 = (v801 + ((v814 + v80) & v766)) & v766;
                v81(v82, v802);
                swift_bridgeObjectRelease();
                unint64_t v83 = (v797
                     + ((((((v788 + v82) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v766;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v829 + 48))(v83, 1, v802)) {
                  v81(v83, v802);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                int v84 = (uint64_t *)((((((v798 + v83) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v85 = v84[1];
                if ((v85 & 0x3000000000000000) == 0) {
                  sub_10001E9C0(*v84, v85);
                }
                swift_bridgeObjectRelease();
                size_t v86 = v80 + v850;
                LODWORD(v87) = -1;
                if (*(void *)(v86 + 16) < 0xFFFFFFFFuLL) {
                  uint64_t v87 = *(void *)(v86 + 16);
                }
                if ((int)v87 - 1 < 0)
                {
                  swift_errorRelease();
                  swift_errorRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v86 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_1000CF144(*(void *)((((v86 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v86 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                unint64_t v74 = v755;
                goto LABEL_120;
              }
              goto LABEL_120;
            }
            unint64_t v76 = (v814 + ((v853 + v182) & v813)) & v766;
            if (v791 <= 0x7FFFFFFD)
            {
              unint64_t v290 = *(void *)(((v788 + ((v801 + v76) & v766)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_662:
              if (v290 >= 0xFFFFFFFF) {
                LODWORD(v290) = -1;
              }
              if ((v290 + 1) < 2) {
                goto LABEL_109;
              }
LABEL_120:
              unint64_t v88 = v74 + v799;
LABEL_187:

LABEL_227:
              unint64_t v45 = v760;
              uint64_t v64 = v766;
              size_t v36 = v783;
              goto LABEL_316;
            }
            uint64_t v75 = *(uint64_t (**)(unint64_t))(v829 + 48);
          }
LABEL_107:
          int v77 = v75(v76);
          unint64_t v74 = (unint64_t)&a1[v818] & v816;
          if (v77) {
            goto LABEL_120;
          }
          goto LABEL_108;
      }
    }
    unsigned int v69 = a1[v45];
    unsigned int v70 = v69 - 8;
    if (v69 >= 8)
    {
      if (v45 <= 3) {
        uint64_t v71 = v45;
      }
      else {
        uint64_t v71 = 4;
      }
      switch(v71)
      {
        case 1:
          int v72 = *a1;
          if (v45 < 4) {
            goto LABEL_163;
          }
          goto LABEL_167;
        case 2:
          int v72 = *(unsigned __int16 *)a1;
          if (v45 < 4) {
            goto LABEL_163;
          }
          goto LABEL_167;
        case 3:
          int v72 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v45 < 4) {
            goto LABEL_163;
          }
          goto LABEL_167;
        case 4:
          int v72 = *(_DWORD *)a1;
          if (v45 < 4) {
LABEL_163:
          }
            unsigned int v69 = (v72 | (v70 << (8 * v45))) + 8;
          else {
LABEL_167:
          }
            unsigned int v69 = v72 + 8;
          break;
        default:
          break;
      }
    }
    switch(v69)
    {
      case 1u:
        unint64_t v762 = v45;
        unint64_t v139 = *(void (**)(unsigned __int8 *, uint64_t))(v851 + 8);
        v139(a1, AssociatedTypeWitness);
        unint64_t v140 = (unint64_t)&a1[v820] & v817;
        if (v854 == v821)
        {
          unint64_t v141 = *(uint64_t (**)(unint64_t))(v851 + 48);
          unint64_t v142 = (unint64_t)&a1[v820] & v817;
          goto LABEL_190;
        }
        unint64_t v144 = (v823 + v140) & v843;
        unint64_t v145 = (v824 + v144) & v867;
        if (v830 == v821)
        {
          if (v812 == v830)
          {
            unint64_t v141 = *(uint64_t (**)(unint64_t))(v828 + 48);
            unint64_t v142 = (v824 + v144) & v867;
            goto LABEL_190;
          }
          v297 = (unint64_t *)((v832 + v145) & 0xFFFFFFFFFFFFFFF8);
          if (v787 <= 0x7FFFFFFE)
          {
            unint64_t v298 = *v297;
            goto LABEL_622;
          }
          unint64_t v142 = ((unint64_t)v297 + v808) & v804;
          unint64_t v141 = *(uint64_t (**)(unint64_t))(v810 + 48);
        }
        else
        {
          size_t v192 = v858 + v145;
          if ((v777 & 0x80000000) == 0)
          {
            unint64_t v193 = *(void *)(v192 + 8);
            if (v193 >= 0xFFFFFFFF) {
              LODWORD(v193) = -1;
            }
            if (v193 == -1)
            {
LABEL_191:
              unint64_t v144 = (v823 + v140) & v843;
              unint64_t v145 = (v824 + v144) & v867;
LABEL_192:
              unint64_t v757 = v140;
              v139((unsigned __int8 *)v140, AssociatedTypeWitness);
              v139((unsigned __int8 *)v144, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v828 + 8))(v145, v827);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v810 + 8))((v808 + ((v832 + v145) & 0xFFFFFFFFFFFFFFF8)) & v804, v809);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              size_t v146 = (v853 + v858 + v145) & v813;
              unint64_t v147 = *(void (**)(size_t, uint64_t))(v829 + 8);
              v147((v814 + v146) & v64, v802);
              size_t v148 = (v801 + ((v814 + v146) & v64)) & v64;
              v147(v148, v802);
              swift_bridgeObjectRelease();
              unint64_t v149 = (v797
                    + ((((((v788 + v148) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v64;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v829 + 48))(v149, 1, v802)) {
                v147(v149, v802);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v150 = (uint64_t *)((((((v798 + v149) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v151 = v150[1];
              if ((v151 & 0x3000000000000000) == 0) {
                sub_10001E9C0(*v150, v151);
              }
              swift_bridgeObjectRelease();
              unint64_t v152 = v850 + v146;
              LODWORD(v153) = -1;
              if (*(void *)(v152 + 16) < 0xFFFFFFFFuLL) {
                uint64_t v153 = *(void *)(v152 + 16);
              }
              uint64_t v64 = ~v29;
              if ((int)v153 - 1 < 0)
              {
                swift_errorRelease();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v152 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1000CF144(*(void *)((((v152 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v152 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              unint64_t v140 = v757;
            }
LABEL_203:
            unint64_t v154 = (v140 + v22 + v800) & v841;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v852 + 48))(v154, 1, v856)) {
              (*(void (**)(unint64_t, uint64_t))(v852 + 8))(v154, v856);
            }
            size_t v155 = (v795 + v154) & v845;
            if (v811 == v839)
            {
              int v156 = (*(uint64_t (**)(size_t))(v826 + 48))(v155);
              unint64_t v45 = v762;
            }
            else
            {
              unint64_t v178 = (uint64_t *)((v831 + v155) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v45 = v762;
              if (v786 <= 0x7FFFFFFE)
              {
                uint64_t v179 = *v178;
                if ((unint64_t)*v178 >= 0xFFFFFFFF) {
                  LODWORD(v179) = -1;
                }
                if ((v179 + 1) >= 2) {
                  goto LABEL_307;
                }
                goto LABEL_306;
              }
              int v156 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v806 + 48))(((unint64_t)v178 + v805) & v803, v774, v807);
            }
            if (v156) {
              goto LABEL_307;
            }
            unint64_t v178 = (uint64_t *)((v831 + v155) & 0xFFFFFFFFFFFFFFF8);
LABEL_306:
            (*(void (**)(size_t, uint64_t))(v826 + 8))(v155, v825);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v806 + 8))(((unint64_t)v178 + v805) & v803, v807);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_307:
            size_t v186 = v155 + v36;
LABEL_308:
            unint64_t v194 = *(void **)((((v186 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_315;
          }
          unint64_t v142 = (v814 + ((v853 + v192) & v813)) & v64;
          if (v791 <= 0x7FFFFFFD)
          {
            unint64_t v298 = *(void *)(((v788 + ((v801 + v142) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_622:
            if (v298 >= 0xFFFFFFFF) {
              LODWORD(v298) = -1;
            }
            if ((v298 + 1) < 2) {
              goto LABEL_192;
            }
            goto LABEL_203;
          }
          unint64_t v141 = *(uint64_t (**)(unint64_t))(v829 + 48);
        }
LABEL_190:
        int v143 = v141(v142);
        unint64_t v140 = (unint64_t)&a1[v820] & v817;
        if (v143) {
          goto LABEL_203;
        }
        goto LABEL_191;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v851 + 8))(a1, AssociatedTypeWitness);
        unint64_t v157 = (unint64_t)&a1[v39] & v841;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v852 + 48))(v157, 1, v856)) {
          (*(void (**)(unint64_t, uint64_t))(v852 + 8))(v157, v856);
        }
        size_t v158 = (v795 + v157) & v845;
        if (v811 == v839)
        {
          int v159 = (*(uint64_t (**)(size_t))(v826 + 48))(v158);
        }
        else
        {
          unint64_t v180 = (uint64_t *)((v831 + v158) & 0xFFFFFFFFFFFFFFF8);
          if (v786 <= 0x7FFFFFFE)
          {
            uint64_t v181 = *v180;
            if ((unint64_t)*v180 >= 0xFFFFFFFF) {
              LODWORD(v181) = -1;
            }
            if ((v181 + 1) >= 2)
            {
LABEL_313:
              size_t v187 = v36 + v158;
LABEL_314:
              unint64_t v194 = *(void **)(v187 + 8);
LABEL_315:

LABEL_316:
              unsigned int v195 = a2[v59];
              unsigned int v196 = v195 - 2;
              if (v195 >= 2)
              {
                if (v59 <= 3) {
                  uint64_t v197 = v59;
                }
                else {
                  uint64_t v197 = 4;
                }
                switch(v197)
                {
                  case 1:
                    int v198 = *a2;
                    if (v59 >= 4) {
                      goto LABEL_336;
                    }
                    goto LABEL_324;
                  case 2:
                    int v198 = *(unsigned __int16 *)a2;
                    if (v59 < 4) {
                      goto LABEL_324;
                    }
                    goto LABEL_336;
                  case 3:
                    int v198 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                    if (v59 < 4) {
                      goto LABEL_324;
                    }
                    goto LABEL_336;
                  case 4:
                    int v198 = *(_DWORD *)a2;
                    if (v59 >= 4)
                    {
LABEL_336:
                      if (v198 != -1)
                      {
LABEL_337:
                        unsigned int v203 = a2[v45];
                        unsigned int v204 = v203 - 8;
                        if (v203 < 8)
                        {
                          uint64_t v206 = v859;
                        }
                        else
                        {
                          if (v45 <= 3) {
                            uint64_t v205 = v45;
                          }
                          else {
                            uint64_t v205 = 4;
                          }
                          uint64_t v206 = v859;
                          switch(v205)
                          {
                            case 1:
                              int v207 = *a2;
                              if (v45 < 4) {
                                goto LABEL_367;
                              }
                              goto LABEL_371;
                            case 2:
                              int v207 = *(unsigned __int16 *)a2;
                              if (v45 < 4) {
                                goto LABEL_367;
                              }
                              goto LABEL_371;
                            case 3:
                              int v207 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                              if (v45 < 4) {
                                goto LABEL_367;
                              }
                              goto LABEL_371;
                            case 4:
                              int v207 = *(_DWORD *)a2;
                              if (v45 < 4) {
LABEL_367:
                              }
                                unsigned int v203 = (v207 | (v204 << (8 * v45))) + 8;
                              else {
LABEL_371:
                              }
                                unsigned int v203 = v207 + 8;
                              break;
                            default:
                              break;
                          }
                        }
                        switch(v203)
                        {
                          case 1u:
                            size_t v784 = v36;
                            unint64_t v231 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v851 + 32);
                            v231(a1, a2, AssociatedTypeWitness);
                            long long v872 = (void *)((unint64_t)&a1[v820] & v817);
                            unint64_t v232 = (void *)((unint64_t)&a2[v820] & v817);
                            if (v854 == v821)
                            {
                              int v233 = (*(uint64_t (**)(unint64_t))(v851 + 48))((unint64_t)&a2[v820] & v817);
LABEL_577:
                              if (v233)
                              {
LABEL_578:
                                unint64_t v607 = (unint64_t)&a1[v820] & v817;
                                memcpy(v872, v232, v800);
                                unint64_t v608 = v815;
                                uint64_t v609 = v790;
                                goto LABEL_579;
                              }
                              unint64_t v249 = ((unint64_t)v232 + v823) & v843;
                              unint64_t v250 = (v824 + v249) & v867;
LABEL_581:
                              unint64_t v764 = v45;
                              unint64_t v864 = v59;
                              v231((unsigned __int8 *)v872, (unsigned __int8 *)v232, AssociatedTypeWitness);
                              unint64_t v611 = ((unint64_t)v872 + v823) & v843;
                              v231((unsigned __int8 *)v611, (unsigned __int8 *)v249, AssociatedTypeWitness);
                              unint64_t v612 = (v824 + v611) & v867;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v828 + 32))(v612, v250, v827);
                              unint64_t v613 = (void *)((v832 + v612) & 0xFFFFFFFFFFFFFFF8);
                              size_t v614 = (void *)((v832 + v250) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v613 = *v614;
                              unint64_t v615 = ((unint64_t)v613 + v808) & v804;
                              uint64_t v616 = v64;
                              unint64_t v617 = ((unint64_t)v614 + v808) & v804;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v810 + 32))(v615, v617, v809);
                              v618 = (void *)((v793 + v615) & 0xFFFFFFFFFFFFFFF8);
                              size_t v619 = (void *)((v793 + v617) & 0xFFFFFFFFFFFFFFF8);
                              void *v618 = *v619;
                              *(_OWORD *)(((unint64_t)v618 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v619 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *(_OWORD *)(v858 + v612) = *(_OWORD *)(v858 + v250);
                              size_t v620 = (v853 + v858 + v612) & v813;
                              size_t v621 = (v853 + v858 + v250) & v813;
                              *(unsigned char *)size_t v620 = *(unsigned char *)v621;
                              uint64_t v622 = v620 | 4;
                              int v623 = *(_DWORD *)(v621 | 4);
                              *(unsigned char *)(v622 + 4) = *(unsigned char *)((v621 | 4) + 4);
                              *(_DWORD *)uint64_t v622 = v623;
                              *(_WORD *)(v620 + 10) = *(_WORD *)(v621 + 0xA);
                              unint64_t v624 = *(void (**)(size_t, size_t, uint64_t))(v829 + 32);
                              v624((v814 + v620) & v616, (v814 + v621) & v616, v802);
                              size_t v625 = (v801 + ((v814 + v620) & v616)) & v616;
                              size_t v626 = (v801 + ((v814 + v621) & v616)) & v616;
                              v624(v625, v626, v802);
                              size_t v610 = v796;
                              long long v627 = (unsigned char *)(v625 + v796);
                              *long long v627 = *(unsigned char *)(v626 + v796);
                              v627[1] = *(unsigned char *)(v626 + v796 + 1);
                              v627[2] = *(unsigned char *)(v626 + v796 + 2);
                              v627[3] = *(unsigned char *)(v626 + v796 + 3);
                              v627[4] = *(unsigned char *)(v626 + v796 + 4);
                              unint64_t v628 = (v625 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v629 = (v626 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(_OWORD *)unint64_t v628 = *(_OWORD *)v629;
                              *(unsigned char *)(v628 + 16) = *(unsigned char *)(v629 + 16);
                              *(unsigned char *)(v628 + 17) = *(unsigned char *)(v629 + 17);
                              *(unsigned char *)(v628 + 18) = *(unsigned char *)(v629 + 18);
                              *(unsigned char *)(v628 + 19) = *(unsigned char *)(v629 + 19);
                              unint64_t v630 = (v628 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v631 = (v629 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v630 = *(void *)v631;
                              *(unsigned char *)(v630 + 8) = *(unsigned char *)(v631 + 8);
                              *(unsigned char *)(v630 + 9) = *(unsigned char *)(v631 + 9);
                              *(unsigned char *)(v630 + 10) = *(unsigned char *)(v631 + 10);
                              *(unsigned char *)(v630 + 11) = *(unsigned char *)(v631 + 11);
                              *(unsigned char *)(v630 + 12) = *(unsigned char *)(v631 + 12);
                              long long v632 = (void *)((v629 + 47) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v633 = (void *)((v628 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *uint64_t v633 = *v632;
                              unint64_t v634 = ((unint64_t)v633 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v635 = ((unint64_t)v632 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v634 = *(void *)v635;
                              *(unsigned char *)(v634 + 8) = *(unsigned char *)(v635 + 8);
                              *(unsigned char *)(v634 + 9) = *(unsigned char *)(v635 + 9);
                              uint64_t v636 = (void *)((v797 + v634) & v616);
                              unint64_t v637 = (const void *)((v797 + v635) & v616);
                              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v829 + 48))(v637, 1, v802))
                              {
                                memcpy(v636, v637, v822);
                              }
                              else
                              {
                                v624((size_t)v636, (size_t)v637, v802);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v829 + 56))(v636, 0, 1, v802);
                              }
                              unint64_t v59 = v864;
                              unint64_t v608 = v815;
                              uint64_t v609 = v790;
                              unint64_t v607 = (unint64_t)&a1[v820] & v817;
                              uint64_t v638 = (void *)(((unint64_t)v636 + v798) & 0xFFFFFFFFFFFFFFF8);
                              size_t v639 = (void *)(((unint64_t)v637 + v798) & 0xFFFFFFFFFFFFFFF8);
                              *uint64_t v638 = *v639;
                              unint64_t v640 = ((unint64_t)v638 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v641 = ((unint64_t)v639 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v642 = *(void *)v641;
                              *(unsigned char *)(v640 + 8) = *(unsigned char *)(v641 + 8);
                              *(void *)unint64_t v640 = v642;
                              uint64_t v643 = (void *)(((unint64_t)v638 + 31) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v644 = (void *)(((unint64_t)v639 + 31) & 0xFFFFFFFFFFFFFFF8);
                              void *v643 = *v644;
                              unint64_t v645 = (_OWORD *)(((unint64_t)v643 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v646 = (_OWORD *)(((unint64_t)v644 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v645 = *v646;
                              unint64_t v647 = ((unint64_t)v645 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v648 = ((unint64_t)v646 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v649 = *(void *)v648;
                              *(unsigned char *)(v647 + 8) = *(unsigned char *)(v648 + 8);
                              *(void *)unint64_t v647 = v649;
                              *(unsigned char *)(v647 + 9) = *(unsigned char *)(v648 + 9);
                              unint64_t v650 = (v647 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v651 = (v648 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              LODWORD(v642) = *(_DWORD *)v651;
                              *(unsigned char *)(v650 + 4) = *(unsigned char *)(v651 + 4);
                              *(_DWORD *)unint64_t v650 = v642;
                              *(_OWORD *)((v647 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v648 + 25) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v652 = v850 + v620;
                              long long v653 = *(_OWORD *)(v850 + v621 + 112);
                              long long v655 = *(_OWORD *)(v850 + v621 + 64);
                              long long v654 = *(_OWORD *)(v850 + v621 + 80);
                              *(_OWORD *)(v652 + 96) = *(_OWORD *)(v850 + v621 + 96);
                              *(_OWORD *)(v652 + 112) = v653;
                              *(_OWORD *)(v652 + 64) = v655;
                              *(_OWORD *)(v652 + 80) = v654;
                              long long v656 = *(_OWORD *)(v850 + v621 + 176);
                              long long v658 = *(_OWORD *)(v850 + v621 + 128);
                              long long v657 = *(_OWORD *)(v850 + v621 + 144);
                              *(_OWORD *)(v652 + 160) = *(_OWORD *)(v850 + v621 + 160);
                              *(_OWORD *)(v652 + 176) = v656;
                              *(_OWORD *)(v652 + 128) = v658;
                              *(_OWORD *)(v652 + 144) = v657;
                              long long v660 = *(_OWORD *)(v850 + v621 + 208);
                              long long v659 = *(_OWORD *)(v850 + v621 + 224);
                              long long v661 = *(_OWORD *)(v850 + v621 + 192);
                              *(void *)(v652 + 240) = *(void *)(v850 + v621 + 240);
                              *(_OWORD *)(v652 + 208) = v660;
                              *(_OWORD *)(v652 + 224) = v659;
                              *(_OWORD *)(v652 + 192) = v661;
                              long long v662 = *(_OWORD *)(v850 + v621);
                              long long v663 = *(_OWORD *)(v850 + v621 + 16);
                              long long v664 = *(_OWORD *)(v850 + v621 + 48);
                              *(_OWORD *)(v652 + 32) = *(_OWORD *)(v850 + v621 + 32);
                              *(_OWORD *)(v652 + 48) = v664;
                              *(_OWORD *)unint64_t v652 = v662;
                              *(_OWORD *)(v652 + 16) = v663;
                              unint64_t v665 = (_OWORD *)((v850 + v620 + 255) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v666 = (long long *)((v850 + v621 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v667 = *v666;
                              *(_OWORD *)((char *)v665 + 9) = *(long long *)((char *)v666 + 9);
                              *unint64_t v665 = v667;
                              unint64_t v668 = (v850 + v620 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v669 = (v850 + v621 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v670 = *(_OWORD *)v669;
                              *(unsigned char *)(v668 + 16) = *(unsigned char *)(v669 + 16);
                              *(_OWORD *)unint64_t v668 = v670;
                              unint64_t v671 = (void *)((v850 + v620 + 311) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v672 = (void *)((v850 + v621 + 311) & 0xFFFFFFFFFFFFFFF8);
                              void *v671 = *v672;
                              *(_OWORD *)(((unint64_t)v671 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v672 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v45 = v764;
                              if (v791)
                              {
LABEL_585:
                                unint64_t v673 = ((((v609
                                         + ((((((((((v608 + v610 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                uint64_t v674 = (void *)((v607 + v849 + v673) & v841);
                                uint64_t v675 = (const void *)(((unint64_t)v232 + v849 + v673) & v841);
                                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v852 + 48))(v675, 1, v856))
                                {
                                  memcpy(v674, v675, v847);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v852 + 32))(v674, v675, v856);
                                  (*(void (**)(void *, void, uint64_t, uint64_t))(v852 + 56))(v674, 0, 1, v856);
                                }
                                size_t v676 = (char *)(((unint64_t)v674 + v795) & v845);
                                size_t v677 = (char *)(((unint64_t)v675 + v795) & v845);
                                if (v811 == v839)
                                {
                                  int v678 = (*(uint64_t (**)(char *))(v826 + 48))(v677);
                                }
                                else
                                {
                                  size_t v679 = (uint64_t *)((unint64_t)&v677[v831] & 0xFFFFFFFFFFFFFFF8);
                                  if (v786 <= 0x7FFFFFFE)
                                  {
                                    uint64_t v680 = *v679;
                                    if ((unint64_t)*v679 >= 0xFFFFFFFF) {
                                      LODWORD(v680) = -1;
                                    }
                                    if ((v680 + 1) >= 2) {
                                      goto LABEL_597;
                                    }
                                    goto LABEL_599;
                                  }
                                  int v678 = (*(uint64_t (**)(unint64_t))(v806 + 48))(((unint64_t)v679
                                                                                                  + v805) & v803);
                                }
                                if (v678)
                                {
LABEL_597:
                                  size_t v681 = v784;
                                  memcpy(v676, v677, v784);
LABEL_600:
                                  char v223 = 0;
                                  *(void *)&v676[v681] = *(void *)&v677[v681];
                                  uint64_t v686 = (void *)((unint64_t)&v676[v681 + 15] & 0xFFFFFFFFFFFFFFF8);
                                  uint64_t v687 = (void *)((unint64_t)&v677[v681 + 15] & 0xFFFFFFFFFFFFFFF8);
                                  *uint64_t v686 = *v687;
                                  *(void *)(((unint64_t)v686 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v687 + 15) & 0xFFFFFFFFFFFFFFF8);
                                  char v224 = 1;
                                  goto LABEL_459;
                                }
                                size_t v679 = (uint64_t *)((unint64_t)&v677[v831] & 0xFFFFFFFFFFFFFFF8);
LABEL_599:
                                (*(void (**)(char *, char *, uint64_t))(v826 + 32))(v676, v677, v825);
                                unsigned int v682 = (void *)((unint64_t)&v676[v831] & 0xFFFFFFFFFFFFFFF8);
                                void *v682 = *v679;
                                unint64_t v683 = ((unint64_t)v682 + v805) & v803;
                                (*(void (**)(unint64_t, unint64_t, uint64_t))(v806 + 32))(v683, ((unint64_t)v679 + v805) & v803, v807);
                                unsigned int v684 = (void *)((v792 + v683) & 0xFFFFFFFFFFFFFFF8);
                                unsigned int v685 = (void *)((v792 + (((unint64_t)v679 + v805) & v803)) & 0xFFFFFFFFFFFFFFF8);
                                *unsigned int v684 = *v685;
                                *(_OWORD *)(((unint64_t)v684 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v685 + 15) & 0xFFFFFFFFFFFFFFF8);
                                size_t v681 = v784;
                                goto LABEL_600;
                              }
LABEL_579:
                              size_t v610 = v822;
                              goto LABEL_585;
                            }
                            unint64_t v249 = ((unint64_t)v232 + v823) & v843;
                            unint64_t v250 = (v824 + v249) & v867;
                            if (v830 == v821)
                            {
                              if (v812 == v830)
                              {
                                int v233 = (*(uint64_t (**)(unint64_t))(v828 + 48))((v824 + v249) & v867);
                                goto LABEL_577;
                              }
                              size_t v309 = (unint64_t *)((v832 + v250) & 0xFFFFFFFFFFFFFFF8);
                              if (v787 > 0x7FFFFFFE)
                              {
                                int v233 = (*(uint64_t (**)(unint64_t))(v810 + 48))(((unint64_t)v309
                                                                                                + v808) & v804);
                                goto LABEL_577;
                              }
                              unint64_t v310 = *v309;
                            }
                            else
                            {
                              size_t v273 = v858 + v250;
                              if ((v777 & 0x80000000) == 0)
                              {
                                unint64_t v274 = *(void *)(v273 + 8);
                                if (v274 >= 0xFFFFFFFF) {
                                  LODWORD(v274) = -1;
                                }
                                int v233 = v274 + 1;
                                goto LABEL_577;
                              }
                              size_t v319 = (v814 + ((v853 + v273) & v813)) & v64;
                              if (v791 > 0x7FFFFFFD)
                              {
                                int v233 = (*(uint64_t (**)(size_t))(v829 + 48))(v319);
                                goto LABEL_577;
                              }
                              unint64_t v310 = *(void *)(((v788 + ((v801 + v319) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v310 >= 0xFFFFFFFF) {
                              LODWORD(v310) = -1;
                            }
                            if ((v310 + 1) >= 2) {
                              goto LABEL_578;
                            }
                            goto LABEL_581;
                          case 2u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v851 + 32))(a1, a2, AssociatedTypeWitness);
                            v234 = (void *)((unint64_t)&a1[v772] & v841);
                            size_t v235 = (const void *)((unint64_t)&a2[v772] & v841);
                            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v852 + 48))(v235, 1, v856))
                            {
                              memcpy(v234, v235, v847);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v852 + 32))(v234, v235, v856);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v852 + 56))(v234, 0, 1, v856);
                            }
                            unint64_t v258 = (char *)(((unint64_t)v234 + v795) & v845);
                            unint64_t v259 = (char *)(((unint64_t)v235 + v795) & v845);
                            if (v811 == v839)
                            {
                              int v260 = (*(uint64_t (**)(char *))(v826 + 48))(v259);
                            }
                            else
                            {
                              unint64_t v261 = (uint64_t *)((unint64_t)&v259[v831] & 0xFFFFFFFFFFFFFFF8);
                              if (v786 <= 0x7FFFFFFE)
                              {
                                uint64_t v262 = *v261;
                                if ((unint64_t)*v261 >= 0xFFFFFFFF) {
                                  LODWORD(v262) = -1;
                                }
                                if ((v262 + 1) >= 2) {
                                  goto LABEL_463;
                                }
                                goto LABEL_465;
                              }
                              int v260 = (*(uint64_t (**)(unint64_t))(v806 + 48))(((unint64_t)v261
                                                                                              + v805) & v803);
                            }
                            if (v260)
                            {
LABEL_463:
                              memcpy(v258, v259, v36);
LABEL_466:
                              char v223 = 0;
                              unint64_t v288 = &v258[v36];
                              *unint64_t v288 = v259[v36];
                              *((void *)v288 + 1) = *(void *)&v259[v36 + 8];
                              char v224 = 2;
LABEL_459:
                              a1[v45] = v224;
                              a1[v59] = v223;
                              return a1;
                            }
                            unint64_t v261 = (uint64_t *)((unint64_t)&v259[v831] & 0xFFFFFFFFFFFFFFF8);
LABEL_465:
                            (*(void (**)(char *, char *, uint64_t))(v826 + 32))(v258, v259, v825);
                            unint64_t v284 = (void *)((unint64_t)&v258[v831] & 0xFFFFFFFFFFFFFFF8);
                            *unint64_t v284 = *v261;
                            unint64_t v285 = ((unint64_t)v284 + v805) & v803;
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v806 + 32))(v285, ((unint64_t)v261 + v805) & v803, v807);
                            unint64_t v286 = (void *)((v792 + v285) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v287 = (void *)((v792 + (((unint64_t)v261 + v805) & v803)) & 0xFFFFFFFFFFFFFFF8);
                            *unint64_t v286 = *v287;
                            *(_OWORD *)(((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v287 + 15) & 0xFFFFFFFFFFFFFFF8);
                            goto LABEL_466;
                          case 3u:
                            size_t v236 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v851 + 32);
                            v236(a1, a2, AssociatedTypeWitness);
                            uint64_t v237 = (void *)((unint64_t)&a1[v820] & v817);
                            unint64_t v873 = (void *)((unint64_t)&a2[v820] & v817);
                            if (v854 == v821)
                            {
                              int v238 = (*(uint64_t (**)(void))(v851 + 48))();
LABEL_602:
                              if (v238)
                              {
LABEL_603:
                                unint64_t v688 = (unint64_t)&a2[v820] & v817;
                                memcpy(v237, v873, v800);
                                unint64_t v689 = v815;
                                uint64_t v690 = v790;
LABEL_604:
                                size_t v691 = v822;
LABEL_610:
                                char v223 = 0;
                                unint64_t v752 = ((((v690
                                         + ((((((((((v689 + v691 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                uint64_t v753 = (_OWORD *)(((unint64_t)v237 + v752) & 0xFFFFFFFFFFFFFFF8);
                                uint64_t v754 = (_OWORD *)((v688 + v752) & 0xFFFFFFFFFFFFFFF8);
                                _OWORD *v753 = *v754;
                                *(void *)(((unint64_t)v753 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v754 + 23) & 0xFFFFFFFFFFFFFFF8);
                                char v224 = 3;
                                goto LABEL_459;
                              }
                              unint64_t v251 = ((unint64_t)v873 + v823) & v843;
                              unint64_t v252 = (v824 + v251) & v867;
LABEL_606:
                              unint64_t v765 = v45;
                              unint64_t v865 = v59;
                              v236((unsigned __int8 *)v237, (unsigned __int8 *)v873, AssociatedTypeWitness);
                              v236((unsigned __int8 *)(((unint64_t)v237 + v823) & v843), (unsigned __int8 *)v251, AssociatedTypeWitness);
                              unint64_t v692 = (v824 + (((unint64_t)v237 + v823) & v843)) & v867;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v828 + 32))(v692, v252, v827);
                              uint64_t v693 = (void *)((v832 + v692) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v694 = (void *)((v832 + v252) & 0xFFFFFFFFFFFFFFF8);
                              *uint64_t v693 = *v694;
                              unint64_t v695 = ((unint64_t)v693 + v808) & v804;
                              unint64_t v696 = ((unint64_t)v694 + v808) & v804;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v810 + 32))(v695, v696, v809);
                              uint64_t v697 = (void *)((v793 + v695) & 0xFFFFFFFFFFFFFFF8);
                              long long v698 = (void *)((v793 + v696) & 0xFFFFFFFFFFFFFFF8);
                              *uint64_t v697 = *v698;
                              *(_OWORD *)(((unint64_t)v697 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v698 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *(_OWORD *)(v858 + v692) = *(_OWORD *)(v858 + v252);
                              size_t v699 = (v853 + v858 + v692) & v813;
                              size_t v700 = (v853 + v858 + v252) & v813;
                              *(unsigned char *)size_t v699 = *(unsigned char *)v700;
                              uint64_t v701 = v699 | 4;
                              int v702 = *(_DWORD *)(v700 | 4);
                              *(unsigned char *)(v701 + 4) = *(unsigned char *)((v700 | 4) + 4);
                              *(_DWORD *)uint64_t v701 = v702;
                              *(_WORD *)(v699 + 10) = *(_WORD *)(v700 + 0xA);
                              uint64_t v703 = *(void (**)(size_t, size_t, uint64_t))(v829 + 32);
                              v703((v814 + v699) & v64, (v814 + v700) & v64, v802);
                              size_t v704 = (v801 + ((v814 + v699) & v64)) & v64;
                              size_t v705 = (v801 + ((v814 + v700) & v64)) & v64;
                              v703(v704, v705, v802);
                              size_t v706 = (unsigned char *)(v704 + v796);
                              *size_t v706 = *(unsigned char *)(v705 + v796);
                              v706[1] = *(unsigned char *)(v705 + v796 + 1);
                              v706[2] = *(unsigned char *)(v705 + v796 + 2);
                              v706[3] = *(unsigned char *)(v705 + v796 + 3);
                              v706[4] = *(unsigned char *)(v705 + v796 + 4);
                              unint64_t v707 = (v704 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v708 = (v705 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(_OWORD *)unint64_t v707 = *(_OWORD *)v708;
                              *(unsigned char *)(v707 + 16) = *(unsigned char *)(v708 + 16);
                              *(unsigned char *)(v707 + 17) = *(unsigned char *)(v708 + 17);
                              *(unsigned char *)(v707 + 18) = *(unsigned char *)(v708 + 18);
                              *(unsigned char *)(v707 + 19) = *(unsigned char *)(v708 + 19);
                              unint64_t v709 = (v707 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v710 = (v708 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v709 = *(void *)v710;
                              *(unsigned char *)(v709 + 8) = *(unsigned char *)(v710 + 8);
                              *(unsigned char *)(v709 + 9) = *(unsigned char *)(v710 + 9);
                              *(unsigned char *)(v709 + 10) = *(unsigned char *)(v710 + 10);
                              *(unsigned char *)(v709 + 11) = *(unsigned char *)(v710 + 11);
                              *(unsigned char *)(v709 + 12) = *(unsigned char *)(v710 + 12);
                              uint64_t v711 = (void *)((v708 + 47) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v712 = (void *)((v707 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *uint64_t v712 = *v711;
                              unint64_t v713 = ((unint64_t)v712 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v714 = ((unint64_t)v711 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v713 = *(void *)v714;
                              *(unsigned char *)(v713 + 8) = *(unsigned char *)(v714 + 8);
                              *(unsigned char *)(v713 + 9) = *(unsigned char *)(v714 + 9);
                              unsigned int v715 = (void *)((v797 + v713) & v64);
                              uint64_t v716 = (const void *)((v797 + v714) & v64);
                              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v829 + 48))(v716, 1, v802))
                              {
                                memcpy(v715, v716, v822);
                              }
                              else
                              {
                                v703((size_t)v715, (size_t)v716, v802);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v829 + 56))(v715, 0, 1, v802);
                              }
                              unint64_t v59 = v865;
                              unint64_t v689 = v815;
                              size_t v691 = v796;
                              uint64_t v690 = v790;
                              uint64_t v717 = (void *)(((unint64_t)v715 + v798) & 0xFFFFFFFFFFFFFFF8);
                              unsigned int v718 = (void *)(((unint64_t)v716 + v798) & 0xFFFFFFFFFFFFFFF8);
                              void *v717 = *v718;
                              unint64_t v719 = ((unint64_t)v717 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v720 = ((unint64_t)v718 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v721 = *(void *)v720;
                              *(unsigned char *)(v719 + 8) = *(unsigned char *)(v720 + 8);
                              *(void *)unint64_t v719 = v721;
                              uint64_t v722 = (void *)(((unint64_t)v717 + 31) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v723 = (void *)(((unint64_t)v718 + 31) & 0xFFFFFFFFFFFFFFF8);
                              void *v722 = *v723;
                              uint64_t v724 = (_OWORD *)(((unint64_t)v722 + 15) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v725 = (_OWORD *)(((unint64_t)v723 + 15) & 0xFFFFFFFFFFFFFFF8);
                              _OWORD *v724 = *v725;
                              unint64_t v726 = ((unint64_t)v724 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v727 = ((unint64_t)v725 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v728 = *(void *)v727;
                              *(unsigned char *)(v726 + 8) = *(unsigned char *)(v727 + 8);
                              *(void *)unint64_t v726 = v728;
                              *(unsigned char *)(v726 + 9) = *(unsigned char *)(v727 + 9);
                              unint64_t v729 = (v726 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v730 = (v727 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              LODWORD(v721) = *(_DWORD *)v730;
                              *(unsigned char *)(v729 + 4) = *(unsigned char *)(v730 + 4);
                              *(_DWORD *)unint64_t v729 = v721;
                              *(_OWORD *)((v726 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v727 + 25) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v731 = v850 + v699;
                              long long v732 = *(_OWORD *)(v850 + v700 + 112);
                              long long v734 = *(_OWORD *)(v850 + v700 + 64);
                              long long v733 = *(_OWORD *)(v850 + v700 + 80);
                              *(_OWORD *)(v731 + 96) = *(_OWORD *)(v850 + v700 + 96);
                              *(_OWORD *)(v731 + 112) = v732;
                              *(_OWORD *)(v731 + 64) = v734;
                              *(_OWORD *)(v731 + 80) = v733;
                              long long v735 = *(_OWORD *)(v850 + v700 + 176);
                              long long v737 = *(_OWORD *)(v850 + v700 + 128);
                              long long v736 = *(_OWORD *)(v850 + v700 + 144);
                              *(_OWORD *)(v731 + 160) = *(_OWORD *)(v850 + v700 + 160);
                              *(_OWORD *)(v731 + 176) = v735;
                              *(_OWORD *)(v731 + 128) = v737;
                              *(_OWORD *)(v731 + 144) = v736;
                              long long v739 = *(_OWORD *)(v850 + v700 + 208);
                              long long v738 = *(_OWORD *)(v850 + v700 + 224);
                              long long v740 = *(_OWORD *)(v850 + v700 + 192);
                              *(void *)(v731 + 240) = *(void *)(v850 + v700 + 240);
                              *(_OWORD *)(v731 + 208) = v739;
                              *(_OWORD *)(v731 + 224) = v738;
                              *(_OWORD *)(v731 + 192) = v740;
                              long long v741 = *(_OWORD *)(v850 + v700);
                              long long v742 = *(_OWORD *)(v850 + v700 + 16);
                              long long v743 = *(_OWORD *)(v850 + v700 + 48);
                              *(_OWORD *)(v731 + 32) = *(_OWORD *)(v850 + v700 + 32);
                              *(_OWORD *)(v731 + 48) = v743;
                              *(_OWORD *)unint64_t v731 = v741;
                              *(_OWORD *)(v731 + 16) = v742;
                              uint64_t v744 = (_OWORD *)((v850 + v699 + 255) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v745 = (long long *)((v850 + v700 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v746 = *v745;
                              *(_OWORD *)((char *)v744 + 9) = *(long long *)((char *)v745 + 9);
                              _OWORD *v744 = v746;
                              unint64_t v747 = (v850 + v699 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v748 = (v850 + v700 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v749 = *(_OWORD *)v748;
                              *(unsigned char *)(v747 + 16) = *(unsigned char *)(v748 + 16);
                              *(_OWORD *)unint64_t v747 = v749;
                              unint64_t v750 = (void *)((v850 + v699 + 311) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v751 = (void *)((v850 + v700 + 311) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v750 = *v751;
                              *(_OWORD *)(((unint64_t)v750 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v751 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v45 = v765;
                              unint64_t v688 = (unint64_t)&a2[v820] & v817;
                              if (v791) {
                                goto LABEL_610;
                              }
                              goto LABEL_604;
                            }
                            unint64_t v251 = (v823 + ((unint64_t)&a2[v820] & v817)) & v843;
                            unint64_t v252 = (v824 + v251) & v867;
                            if (v830 == v821)
                            {
                              if (v812 == v830)
                              {
                                int v238 = (*(uint64_t (**)(unint64_t))(v828 + 48))((v824 + v251) & v867);
                                goto LABEL_602;
                              }
                              v311 = (unint64_t *)((v832 + v252) & 0xFFFFFFFFFFFFFFF8);
                              if (v787 > 0x7FFFFFFE)
                              {
                                int v238 = (*(uint64_t (**)(unint64_t))(v810 + 48))(((unint64_t)v311
                                                                                                + v808) & v804);
                                goto LABEL_602;
                              }
                              unint64_t v312 = *v311;
                            }
                            else
                            {
                              size_t v275 = v858 + v252;
                              if ((v777 & 0x80000000) == 0)
                              {
                                unint64_t v276 = *(void *)(v275 + 8);
                                if (v276 >= 0xFFFFFFFF) {
                                  LODWORD(v276) = -1;
                                }
                                int v238 = v276 + 1;
                                goto LABEL_602;
                              }
                              size_t v320 = (v814 + ((v853 + v275) & v813)) & v64;
                              if (v791 > 0x7FFFFFFD)
                              {
                                int v238 = (*(uint64_t (**)(size_t))(v829 + 48))(v320);
                                goto LABEL_602;
                              }
                              unint64_t v312 = *(void *)(((v788 + ((v801 + v320) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v312 >= 0xFFFFFFFF) {
                              LODWORD(v312) = -1;
                            }
                            if ((v312 + 1) >= 2) {
                              goto LABEL_603;
                            }
                            goto LABEL_606;
                          case 4u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v851 + 32))(a1, a2, AssociatedTypeWitness);
                            char v223 = 0;
                            char v224 = 4;
                            goto LABEL_459;
                          case 5u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v851 + 32))(a1, a2, AssociatedTypeWitness);
                            char v223 = 0;
                            char v224 = 5;
                            goto LABEL_459;
                          case 6u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v851 + 32))(a1, a2, AssociatedTypeWitness);
                            v239 = (void *)((unint64_t)&a1[v782] & v779);
                            size_t v240 = (const void *)((unint64_t)&a2[v782] & v779);
                            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v775 + 48))(v240, 1, v206))
                            {
                              memcpy(v239, v240, v771);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v775 + 32))(v239, v240, v206);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v775 + 56))(v239, 0, 1, v206);
                            }
                            char v223 = 0;
                            char v224 = 6;
                            goto LABEL_459;
                          case 7u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v851 + 32))(a1, a2, AssociatedTypeWitness);
                            char v223 = 0;
                            char v224 = 7;
                            goto LABEL_459;
                          default:
                            unint64_t v228 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v851 + 32);
                            v228(a1, a2, AssociatedTypeWitness);
                            v229 = (void *)((unint64_t)&a1[v820] & v817);
                            v871 = (void *)((unint64_t)&a2[v820] & v817);
                            if (v854 == v821)
                            {
                              int v230 = (*(uint64_t (**)(void))(v851 + 48))();
LABEL_567:
                              if (v230)
                              {
LABEL_568:
                                unint64_t v540 = (unint64_t)&a2[v820] & v817;
                                memcpy(v229, v871, v800);
                                unint64_t v541 = v815;
                                uint64_t v542 = v790;
LABEL_569:
                                size_t v543 = v822;
LABEL_575:
                                char v224 = 0;
                                char v223 = 0;
                                unint64_t v604 = ((((v542
                                         + ((((((((((v541 + v543 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                uint64_t v605 = (void *)(((unint64_t)v229 + v604) & 0xFFFFFFFFFFFFFFF8);
                                unint64_t v606 = (void *)((v540 + v604) & 0xFFFFFFFFFFFFFFF8);
                                void *v605 = *v606;
                                *(void *)(((unint64_t)v605 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v606 + 15) & 0xFFFFFFFFFFFFFFF8);
                                goto LABEL_459;
                              }
                              unint64_t v247 = ((unint64_t)v871 + v823) & v843;
                              unint64_t v248 = (v824 + v247) & v867;
LABEL_571:
                              unint64_t v763 = v45;
                              unint64_t v863 = v59;
                              v228((unsigned __int8 *)v229, (unsigned __int8 *)v871, AssociatedTypeWitness);
                              v228((unsigned __int8 *)(((unint64_t)v229 + v823) & v843), (unsigned __int8 *)v247, AssociatedTypeWitness);
                              unint64_t v544 = (v824 + (((unint64_t)v229 + v823) & v843)) & v867;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v828 + 32))(v544, v248, v827);
                              v545 = (void *)((v832 + v544) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v546 = (void *)((v832 + v248) & 0xFFFFFFFFFFFFFFF8);
                              void *v545 = *v546;
                              unint64_t v547 = ((unint64_t)v545 + v808) & v804;
                              unint64_t v548 = ((unint64_t)v546 + v808) & v804;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v810 + 32))(v547, v548, v809);
                              unint64_t v549 = (void *)((v793 + v547) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v550 = (void *)((v793 + v548) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v549 = *v550;
                              *(_OWORD *)(((unint64_t)v549 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v550 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *(_OWORD *)(v858 + v544) = *(_OWORD *)(v858 + v248);
                              size_t v551 = (v853 + v858 + v544) & v813;
                              size_t v552 = (v853 + v858 + v248) & v813;
                              *(unsigned char *)size_t v551 = *(unsigned char *)v552;
                              uint64_t v553 = v551 | 4;
                              int v554 = *(_DWORD *)(v552 | 4);
                              *(unsigned char *)(v553 + 4) = *(unsigned char *)((v552 | 4) + 4);
                              *(_DWORD *)uint64_t v553 = v554;
                              *(_WORD *)(v551 + 10) = *(_WORD *)(v552 + 0xA);
                              long long v555 = *(void (**)(size_t, size_t, uint64_t))(v829 + 32);
                              v555((v814 + v551) & v64, (v814 + v552) & v64, v802);
                              size_t v556 = (v801 + ((v814 + v551) & v64)) & v64;
                              size_t v557 = (v801 + ((v814 + v552) & v64)) & v64;
                              v555(v556, v557, v802);
                              uint64_t v558 = (unsigned char *)(v556 + v796);
                              *uint64_t v558 = *(unsigned char *)(v557 + v796);
                              v558[1] = *(unsigned char *)(v557 + v796 + 1);
                              v558[2] = *(unsigned char *)(v557 + v796 + 2);
                              v558[3] = *(unsigned char *)(v557 + v796 + 3);
                              v558[4] = *(unsigned char *)(v557 + v796 + 4);
                              unint64_t v559 = (v556 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v560 = (v557 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(_OWORD *)unint64_t v559 = *(_OWORD *)v560;
                              *(unsigned char *)(v559 + 16) = *(unsigned char *)(v560 + 16);
                              *(unsigned char *)(v559 + 17) = *(unsigned char *)(v560 + 17);
                              *(unsigned char *)(v559 + 18) = *(unsigned char *)(v560 + 18);
                              *(unsigned char *)(v559 + 19) = *(unsigned char *)(v560 + 19);
                              unint64_t v561 = (v559 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v562 = (v560 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v561 = *(void *)v562;
                              *(unsigned char *)(v561 + 8) = *(unsigned char *)(v562 + 8);
                              *(unsigned char *)(v561 + 9) = *(unsigned char *)(v562 + 9);
                              *(unsigned char *)(v561 + 10) = *(unsigned char *)(v562 + 10);
                              *(unsigned char *)(v561 + 11) = *(unsigned char *)(v562 + 11);
                              *(unsigned char *)(v561 + 12) = *(unsigned char *)(v562 + 12);
                              long long v563 = (void *)((v560 + 47) & 0xFFFFFFFFFFFFFFF8);
                              long long v564 = (void *)((v559 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *long long v564 = *v563;
                              unint64_t v565 = ((unint64_t)v564 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v566 = ((unint64_t)v563 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v565 = *(void *)v566;
                              *(unsigned char *)(v565 + 8) = *(unsigned char *)(v566 + 8);
                              *(unsigned char *)(v565 + 9) = *(unsigned char *)(v566 + 9);
                              long long v567 = (void *)((v797 + v565) & v64);
                              long long v568 = (const void *)((v797 + v566) & v64);
                              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v829 + 48))(v568, 1, v802))
                              {
                                memcpy(v567, v568, v822);
                              }
                              else
                              {
                                v555((size_t)v567, (size_t)v568, v802);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v829 + 56))(v567, 0, 1, v802);
                              }
                              unint64_t v59 = v863;
                              unint64_t v541 = v815;
                              size_t v543 = v796;
                              uint64_t v542 = v790;
                              long long v569 = (void *)(((unint64_t)v567 + v798) & 0xFFFFFFFFFFFFFFF8);
                              long long v570 = (void *)(((unint64_t)v568 + v798) & 0xFFFFFFFFFFFFFFF8);
                              *long long v569 = *v570;
                              unint64_t v571 = ((unint64_t)v569 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v572 = ((unint64_t)v570 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v573 = *(void *)v572;
                              *(unsigned char *)(v571 + 8) = *(unsigned char *)(v572 + 8);
                              *(void *)unint64_t v571 = v573;
                              v574 = (void *)(((unint64_t)v569 + 31) & 0xFFFFFFFFFFFFFFF8);
                              v575 = (void *)(((unint64_t)v570 + 31) & 0xFFFFFFFFFFFFFFF8);
                              void *v574 = *v575;
                              long long v576 = (_OWORD *)(((unint64_t)v574 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v577 = (_OWORD *)(((unint64_t)v575 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *long long v576 = *v577;
                              unint64_t v578 = ((unint64_t)v576 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v579 = ((unint64_t)v577 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v580 = *(void *)v579;
                              *(unsigned char *)(v578 + 8) = *(unsigned char *)(v579 + 8);
                              *(void *)unint64_t v578 = v580;
                              *(unsigned char *)(v578 + 9) = *(unsigned char *)(v579 + 9);
                              unint64_t v581 = (v578 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v582 = (v579 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              LODWORD(v573) = *(_DWORD *)v582;
                              *(unsigned char *)(v581 + 4) = *(unsigned char *)(v582 + 4);
                              *(_DWORD *)unint64_t v581 = v573;
                              *(_OWORD *)((v578 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v579 + 25) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v583 = v850 + v551;
                              long long v584 = *(_OWORD *)(v850 + v552 + 112);
                              long long v586 = *(_OWORD *)(v850 + v552 + 64);
                              long long v585 = *(_OWORD *)(v850 + v552 + 80);
                              *(_OWORD *)(v583 + 96) = *(_OWORD *)(v850 + v552 + 96);
                              *(_OWORD *)(v583 + 112) = v584;
                              *(_OWORD *)(v583 + 64) = v586;
                              *(_OWORD *)(v583 + 80) = v585;
                              long long v587 = *(_OWORD *)(v850 + v552 + 176);
                              long long v589 = *(_OWORD *)(v850 + v552 + 128);
                              long long v588 = *(_OWORD *)(v850 + v552 + 144);
                              *(_OWORD *)(v583 + 160) = *(_OWORD *)(v850 + v552 + 160);
                              *(_OWORD *)(v583 + 176) = v587;
                              *(_OWORD *)(v583 + 128) = v589;
                              *(_OWORD *)(v583 + 144) = v588;
                              long long v591 = *(_OWORD *)(v850 + v552 + 208);
                              long long v590 = *(_OWORD *)(v850 + v552 + 224);
                              long long v592 = *(_OWORD *)(v850 + v552 + 192);
                              *(void *)(v583 + 240) = *(void *)(v850 + v552 + 240);
                              *(_OWORD *)(v583 + 208) = v591;
                              *(_OWORD *)(v583 + 224) = v590;
                              *(_OWORD *)(v583 + 192) = v592;
                              long long v593 = *(_OWORD *)(v850 + v552);
                              long long v594 = *(_OWORD *)(v850 + v552 + 16);
                              long long v595 = *(_OWORD *)(v850 + v552 + 48);
                              *(_OWORD *)(v583 + 32) = *(_OWORD *)(v850 + v552 + 32);
                              *(_OWORD *)(v583 + 48) = v595;
                              *(_OWORD *)unint64_t v583 = v593;
                              *(_OWORD *)(v583 + 16) = v594;
                              unint64_t v596 = (_OWORD *)((v850 + v551 + 255) & 0xFFFFFFFFFFFFFFF8);
                              v597 = (long long *)((v850 + v552 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v598 = *v597;
                              *(_OWORD *)((char *)v596 + 9) = *(long long *)((char *)v597 + 9);
                              *unint64_t v596 = v598;
                              unint64_t v599 = (v850 + v551 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v600 = (v850 + v552 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v601 = *(_OWORD *)v600;
                              *(unsigned char *)(v599 + 16) = *(unsigned char *)(v600 + 16);
                              *(_OWORD *)unint64_t v599 = v601;
                              size_t v602 = (void *)((v850 + v551 + 311) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v603 = (void *)((v850 + v552 + 311) & 0xFFFFFFFFFFFFFFF8);
                              void *v602 = *v603;
                              *(_OWORD *)(((unint64_t)v602 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v603 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v45 = v763;
                              unint64_t v540 = (unint64_t)&a2[v820] & v817;
                              if (v791) {
                                goto LABEL_575;
                              }
                              goto LABEL_569;
                            }
                            unint64_t v247 = (v823 + ((unint64_t)&a2[v820] & v817)) & v843;
                            unint64_t v248 = (v824 + v247) & v867;
                            if (v830 == v821)
                            {
                              if (v812 == v830)
                              {
                                int v230 = (*(uint64_t (**)(unint64_t))(v828 + 48))((v824 + v247) & v867);
                                goto LABEL_567;
                              }
                              int v307 = (unint64_t *)((v832 + v248) & 0xFFFFFFFFFFFFFFF8);
                              if (v787 > 0x7FFFFFFE)
                              {
                                int v230 = (*(uint64_t (**)(unint64_t))(v810 + 48))(((unint64_t)v307
                                                                                                + v808) & v804);
                                goto LABEL_567;
                              }
                              unint64_t v308 = *v307;
                            }
                            else
                            {
                              size_t v271 = v858 + v248;
                              if ((v777 & 0x80000000) == 0)
                              {
                                unint64_t v272 = *(void *)(v271 + 8);
                                if (v272 >= 0xFFFFFFFF) {
                                  LODWORD(v272) = -1;
                                }
                                int v230 = v272 + 1;
                                goto LABEL_567;
                              }
                              size_t v318 = (v814 + ((v853 + v271) & v813)) & v64;
                              if (v791 > 0x7FFFFFFD)
                              {
                                int v230 = (*(uint64_t (**)(size_t))(v829 + 48))(v318);
                                goto LABEL_567;
                              }
                              unint64_t v308 = *(void *)(((v788 + ((v801 + v318) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v308 >= 0xFFFFFFFF) {
                              LODWORD(v308) = -1;
                            }
                            if ((v308 + 1) >= 2) {
                              goto LABEL_568;
                            }
                            goto LABEL_571;
                        }
                      }
                      goto LABEL_326;
                    }
LABEL_324:
                    unsigned int v195 = (v198 | (v196 << (8 * v59))) + 2;
                    break;
                  default:
                    break;
                }
              }
              if (v195 != 1) {
                goto LABEL_337;
              }
LABEL_326:
              unsigned int v199 = a2[v58];
              unsigned int v200 = v199 - 8;
              if (v199 >= 8)
              {
                if (v58 <= 3) {
                  uint64_t v201 = v58;
                }
                else {
                  uint64_t v201 = 4;
                }
                switch(v201)
                {
                  case 1:
                    int v202 = *a2;
                    if (v58 < 4) {
                      goto LABEL_346;
                    }
                    goto LABEL_350;
                  case 2:
                    int v202 = *(unsigned __int16 *)a2;
                    if (v58 < 4) {
                      goto LABEL_346;
                    }
                    goto LABEL_350;
                  case 3:
                    int v202 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                    if (v58 < 4) {
                      goto LABEL_346;
                    }
                    goto LABEL_350;
                  case 4:
                    int v202 = *(_DWORD *)a2;
                    if (v58 < 4) {
LABEL_346:
                    }
                      unsigned int v199 = (v202 | (v200 << (8 * v58))) + 8;
                    else {
LABEL_350:
                    }
                      unsigned int v199 = v202 + 8;
                    break;
                  default:
                    break;
                }
              }
              switch(v199)
              {
                case 1u:
                  uint64_t v768 = v64;
                  size_t v212 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v852 + 32);
                  v212(a1, a2, v856);
                  uint64_t v213 = (void *)((unint64_t)&a2[v818] & v816);
                  if (v834 == v819)
                  {
                    int v214 = (*(uint64_t (**)(unint64_t))(v852 + 48))((unint64_t)&a2[v818] & v816);
                    uint64_t v215 = v829;
                    size_t v216 = (void *)((unint64_t)&a1[v818] & v816);
LABEL_532:
                    if (v214)
                    {
LABEL_533:
                      memcpy(v216, v213, v799);
                      unint64_t v390 = v815;
                      uint64_t v391 = AssociatedTypeWitness;
                      size_t v392 = v789;
                      uint64_t v393 = v851;
LABEL_534:
                      size_t v394 = v822;
                      goto LABEL_540;
                    }
                    unint64_t v243 = ((unint64_t)v213 + v837) & v841;
                    unint64_t v244 = (v836 + v243) & v845;
LABEL_536:
                    unint64_t v861 = v59;
                    v212((unsigned __int8 *)v216, (unsigned __int8 *)v213, v856);
                    unint64_t v395 = ((unint64_t)v216 + v837) & v841;
                    v212((unsigned __int8 *)v395, (unsigned __int8 *)v243, v856);
                    unint64_t v396 = (v836 + v395) & v845;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v826 + 32))(v396, v244, v825);
                    unint64_t v397 = (void *)((v831 + v396) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v398 = (void *)((v831 + v244) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v397 = *v398;
                    unint64_t v399 = ((unint64_t)v397 + v805) & v803;
                    unint64_t v400 = ((unint64_t)v398 + v805) & v803;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v806 + 32))(v399, v400, v807);
                    long long v401 = (void *)((v792 + v399) & 0xFFFFFFFFFFFFFFF8);
                    long long v402 = (void *)((v792 + v400) & 0xFFFFFFFFFFFFFFF8);
                    *long long v401 = *v402;
                    *(_OWORD *)(((unint64_t)v401 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v402 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *(_OWORD *)(v36 + v396) = *(_OWORD *)(v36 + v244);
                    size_t v403 = (v853 + v36 + v396) & v813;
                    size_t v404 = (v853 + v36 + v244) & v813;
                    *(unsigned char *)size_t v403 = *(unsigned char *)v404;
                    uint64_t v405 = v403 | 4;
                    int v406 = *(_DWORD *)(v404 | 4);
                    *(unsigned char *)(v405 + 4) = *(unsigned char *)((v404 | 4) + 4);
                    *(_DWORD *)uint64_t v405 = v406;
                    *(_WORD *)(v403 + 10) = *(_WORD *)(v404 + 0xA);
                    long long v407 = *(void (**)(size_t, size_t, uint64_t))(v215 + 32);
                    v407((v814 + v403) & v768, (v814 + v404) & v768, v802);
                    size_t v408 = (v801 + ((v814 + v403) & v768)) & v768;
                    size_t v409 = (v801 + ((v814 + v404) & v768)) & v768;
                    v407(v408, v409, v802);
                    unint64_t v410 = (unsigned char *)(v408 + v796);
                    *unint64_t v410 = *(unsigned char *)(v409 + v796);
                    v410[1] = *(unsigned char *)(v409 + v796 + 1);
                    v410[2] = *(unsigned char *)(v409 + v796 + 2);
                    v410[3] = *(unsigned char *)(v409 + v796 + 3);
                    v410[4] = *(unsigned char *)(v409 + v796 + 4);
                    unint64_t v411 = (v408 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v412 = (v409 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                    *(_OWORD *)unint64_t v411 = *(_OWORD *)v412;
                    *(unsigned char *)(v411 + 16) = *(unsigned char *)(v412 + 16);
                    *(unsigned char *)(v411 + 17) = *(unsigned char *)(v412 + 17);
                    *(unsigned char *)(v411 + 18) = *(unsigned char *)(v412 + 18);
                    *(unsigned char *)(v411 + 19) = *(unsigned char *)(v412 + 19);
                    unint64_t v413 = (v411 + 27) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v414 = (v412 + 27) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v413 = *(void *)v414;
                    *(unsigned char *)(v413 + 8) = *(unsigned char *)(v414 + 8);
                    *(unsigned char *)(v413 + 9) = *(unsigned char *)(v414 + 9);
                    *(unsigned char *)(v413 + 10) = *(unsigned char *)(v414 + 10);
                    *(unsigned char *)(v413 + 11) = *(unsigned char *)(v414 + 11);
                    *(unsigned char *)(v413 + 12) = *(unsigned char *)(v414 + 12);
                    uint64_t v415 = (void *)((v412 + 47) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v416 = (void *)((v411 + 47) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v416 = *v415;
                    unint64_t v417 = ((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v418 = ((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v417 = *(void *)v418;
                    *(unsigned char *)(v417 + 8) = *(unsigned char *)(v418 + 8);
                    *(unsigned char *)(v417 + 9) = *(unsigned char *)(v418 + 9);
                    unint64_t v419 = (void *)((v797 + v417) & v768);
                    unint64_t v420 = (const void *)((v797 + v418) & v768);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v215 + 48))(v420, 1, v802))
                    {
                      memcpy(v419, v420, v822);
                    }
                    else
                    {
                      v407((size_t)v419, (size_t)v420, v802);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v215 + 56))(v419, 0, 1, v802);
                    }
                    unint64_t v59 = v861;
                    unint64_t v390 = v815;
                    size_t v394 = v796;
                    uint64_t v391 = AssociatedTypeWitness;
                    size_t v392 = v789;
                    uint64_t v393 = v851;
                    size_t v421 = (void *)(((unint64_t)v419 + v798) & 0xFFFFFFFFFFFFFFF8);
                    long long v422 = (void *)(((unint64_t)v420 + v798) & 0xFFFFFFFFFFFFFFF8);
                    *size_t v421 = *v422;
                    unint64_t v423 = ((unint64_t)v421 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v424 = ((unint64_t)v422 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v425 = *(void *)v424;
                    *(unsigned char *)(v423 + 8) = *(unsigned char *)(v424 + 8);
                    *(void *)unint64_t v423 = v425;
                    long long v426 = (void *)(((unint64_t)v421 + 31) & 0xFFFFFFFFFFFFFFF8);
                    long long v427 = (void *)(((unint64_t)v422 + 31) & 0xFFFFFFFFFFFFFFF8);
                    void *v426 = *v427;
                    long long v428 = (_OWORD *)(((unint64_t)v426 + 15) & 0xFFFFFFFFFFFFFFF8);
                    long long v429 = (_OWORD *)(((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8);
                    _OWORD *v428 = *v429;
                    unint64_t v430 = ((unint64_t)v428 + 19) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v431 = ((unint64_t)v429 + 19) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v432 = *(void *)v431;
                    *(unsigned char *)(v430 + 8) = *(unsigned char *)(v431 + 8);
                    *(void *)unint64_t v430 = v432;
                    *(unsigned char *)(v430 + 9) = *(unsigned char *)(v431 + 9);
                    unint64_t v433 = (v430 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    unint64_t v434 = (v431 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    LODWORD(v425) = *(_DWORD *)v434;
                    *(unsigned char *)(v433 + 4) = *(unsigned char *)(v434 + 4);
                    *(_DWORD *)unint64_t v433 = v425;
                    *(_OWORD *)((v430 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v431 + 25) & 0xFFFFFFFFFFFFFFF8);
                    size_t v435 = v403 + v850;
                    long long v436 = *(_OWORD *)(v404 + v850 + 112);
                    long long v438 = *(_OWORD *)(v404 + v850 + 64);
                    long long v437 = *(_OWORD *)(v404 + v850 + 80);
                    *(_OWORD *)(v435 + 96) = *(_OWORD *)(v404 + v850 + 96);
                    *(_OWORD *)(v435 + 112) = v436;
                    *(_OWORD *)(v435 + 64) = v438;
                    *(_OWORD *)(v435 + 80) = v437;
                    long long v439 = *(_OWORD *)(v404 + v850 + 176);
                    long long v441 = *(_OWORD *)(v404 + v850 + 128);
                    long long v440 = *(_OWORD *)(v404 + v850 + 144);
                    *(_OWORD *)(v435 + 160) = *(_OWORD *)(v404 + v850 + 160);
                    *(_OWORD *)(v435 + 176) = v439;
                    *(_OWORD *)(v435 + 128) = v441;
                    *(_OWORD *)(v435 + 144) = v440;
                    long long v443 = *(_OWORD *)(v404 + v850 + 208);
                    long long v442 = *(_OWORD *)(v404 + v850 + 224);
                    long long v444 = *(_OWORD *)(v404 + v850 + 192);
                    *(void *)(v435 + 240) = *(void *)(v404 + v850 + 240);
                    *(_OWORD *)(v435 + 208) = v443;
                    *(_OWORD *)(v435 + 224) = v442;
                    *(_OWORD *)(v435 + 192) = v444;
                    long long v445 = *(_OWORD *)(v404 + v850);
                    long long v446 = *(_OWORD *)(v404 + v850 + 16);
                    long long v447 = *(_OWORD *)(v404 + v850 + 48);
                    *(_OWORD *)(v435 + 32) = *(_OWORD *)(v404 + v850 + 32);
                    *(_OWORD *)(v435 + 48) = v447;
                    *(_OWORD *)size_t v435 = v445;
                    *(_OWORD *)(v435 + 16) = v446;
                    uint64_t v448 = (_OWORD *)((v403 + v850 + 255) & 0xFFFFFFFFFFFFFFF8);
                    size_t v449 = (long long *)((v404 + v850 + 255) & 0xFFFFFFFFFFFFFFF8);
                    long long v450 = *v449;
                    *(_OWORD *)((char *)v448 + 9) = *(long long *)((char *)v449 + 9);
                    _OWORD *v448 = v450;
                    unint64_t v451 = (v403 + v850 + 287) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v452 = (v404 + v850 + 287) & 0xFFFFFFFFFFFFFFF8;
                    long long v453 = *(_OWORD *)v452;
                    *(unsigned char *)(v451 + 16) = *(unsigned char *)(v452 + 16);
                    *(_OWORD *)unint64_t v451 = v453;
                    uint64_t v454 = (void *)((v403 + v850 + 311) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v455 = (void *)((v404 + v850 + 311) & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v454 = *v455;
                    *(_OWORD *)(((unint64_t)v454 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v455 + 15) & 0xFFFFFFFFFFFFFFF8);
                    size_t v216 = (void *)((unint64_t)&a1[v818] & v816);
                    if (!v791) {
                      goto LABEL_534;
                    }
LABEL_540:
                    unint64_t v456 = ((((v392
                             + ((((((((((v390 + v394 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    unint64_t v457 = (void *)(((unint64_t)v216 + v868 + v456) & v843);
                    v458 = (const void *)(((unint64_t)v213 + v868 + v456) & v843);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v393 + 48))(v458, 1, v391))
                    {
                      memcpy(v457, v458, __n);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v393 + 32))(v457, v458, v391);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v393 + 56))(v457, 0, 1, v391);
                    }
                    size_t v459 = (char *)(((unint64_t)v457 + v794) & v867);
                    size_t v460 = (char *)(((unint64_t)v458 + v794) & v867);
                    if (v812 == v830)
                    {
                      int v461 = (*(uint64_t (**)(unint64_t))(v828 + 48))(((unint64_t)v458 + v794) & v867);
                    }
                    else
                    {
                      int v462 = (uint64_t *)((unint64_t)&v460[v832] & 0xFFFFFFFFFFFFFFF8);
                      if (v787 <= 0x7FFFFFFE)
                      {
                        uint64_t v463 = *v462;
                        if ((unint64_t)*v462 >= 0xFFFFFFFF) {
                          LODWORD(v463) = -1;
                        }
                        if ((v463 + 1) >= 2) {
                          goto LABEL_552;
                        }
                        goto LABEL_554;
                      }
                      int v461 = (*(uint64_t (**)(unint64_t))(v810 + 48))(((unint64_t)v462 + v808) & v804);
                    }
                    if (v461)
                    {
LABEL_552:
                      size_t v464 = v858;
                      memcpy(v459, v460, v858);
LABEL_555:
                      *(void *)&v459[v464] = *(void *)&v460[v464];
                      unint64_t v469 = (void *)((unint64_t)&v459[v464 + 15] & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v470 = (void *)((unint64_t)&v460[v464 + 15] & 0xFFFFFFFFFFFFFFF8);
                      *unint64_t v469 = *v470;
                      *(void *)(((unint64_t)v469 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v470 + 15) & 0xFFFFFFFFFFFFFFF8);
                      char v224 = 1;
                      unint64_t v45 = v58;
                      char v223 = 1;
                      goto LABEL_459;
                    }
                    int v462 = (uint64_t *)((unint64_t)&v460[v832] & 0xFFFFFFFFFFFFFFF8);
LABEL_554:
                    (*(void (**)(char *, char *, uint64_t))(v828 + 32))(v459, v460, v827);
                    size_t v465 = (void *)((unint64_t)&v459[v832] & 0xFFFFFFFFFFFFFFF8);
                    *size_t v465 = *v462;
                    unint64_t v466 = ((unint64_t)v465 + v808) & v804;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v810 + 32))(v466, ((unint64_t)v462 + v808) & v804, v809);
                    unint64_t v467 = (void *)((v793 + v466) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v468 = (void *)((v793 + (((unint64_t)v462 + v808) & v804)) & 0xFFFFFFFFFFFFFFF8);
                    void *v467 = *v468;
                    *(_OWORD *)(((unint64_t)v467 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v468 + 15) & 0xFFFFFFFFFFFFFFF8);
                    size_t v464 = v858;
                    goto LABEL_555;
                  }
                  unint64_t v243 = ((unint64_t)v213 + v837) & v841;
                  unint64_t v244 = (v836 + v243) & v845;
                  uint64_t v215 = v829;
                  if (v839 == v819)
                  {
                    if (v811 == v839)
                    {
                      int v214 = (*(uint64_t (**)(unint64_t))(v826 + 48))((v836 + v243) & v845);
                      size_t v216 = (void *)((unint64_t)&a1[v818] & v816);
                      goto LABEL_532;
                    }
                    uint64_t v303 = (unint64_t *)((v831 + v244) & 0xFFFFFFFFFFFFFFF8);
                    size_t v216 = (void *)((unint64_t)&a1[v818] & v816);
                    if (v786 > 0x7FFFFFFE)
                    {
                      int v214 = (*(uint64_t (**)(unint64_t))(v806 + 48))(((unint64_t)v303 + v805) & v803);
                      goto LABEL_532;
                    }
                    unint64_t v304 = *v303;
                  }
                  else
                  {
                    size_t v267 = v36 + v244;
                    if ((v776 & 0x80000000) == 0)
                    {
                      unint64_t v268 = *(void *)(v267 + 8);
                      if (v268 >= 0xFFFFFFFF) {
                        LODWORD(v268) = -1;
                      }
                      int v214 = v268 + 1;
                      size_t v216 = (void *)((unint64_t)&a1[v818] & v816);
                      goto LABEL_532;
                    }
                    size_t v216 = (void *)((unint64_t)&a1[v818] & v816);
                    size_t v316 = (v814 + ((v853 + v267) & v813)) & v768;
                    if (v791 > 0x7FFFFFFD)
                    {
                      int v214 = (*(uint64_t (**)(size_t))(v829 + 48))(v316);
                      goto LABEL_532;
                    }
                    unint64_t v304 = *(void *)(((v788 + ((v801 + v316) & v768)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v304 >= 0xFFFFFFFF) {
                    LODWORD(v304) = -1;
                  }
                  if ((v304 + 1) >= 2) {
                    goto LABEL_533;
                  }
                  goto LABEL_536;
                case 2u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v852 + 32))(a1, a2, v856);
                  size_t v217 = (void *)((unint64_t)&a1[v781] & v843);
                  size_t v218 = (const void *)((unint64_t)&a2[v781] & v843);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v851 + 48))(v218, 1, AssociatedTypeWitness))
                  {
                    memcpy(v217, v218, __n);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v851 + 32))(v217, v218, AssociatedTypeWitness);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v851 + 56))(v217, 0, 1, AssociatedTypeWitness);
                  }
                  unint64_t v253 = (char *)(((unint64_t)v217 + v794) & v867);
                  unint64_t v254 = (char *)(((unint64_t)v218 + v794) & v867);
                  if (v812 == v830)
                  {
                    int v255 = (*(uint64_t (**)(char *))(v828 + 48))(v254);
                  }
                  else
                  {
                    unint64_t v256 = (uint64_t *)((unint64_t)&v254[v832] & 0xFFFFFFFFFFFFFFF8);
                    if (v787 <= 0x7FFFFFFE)
                    {
                      uint64_t v257 = *v256;
                      if ((unint64_t)*v256 >= 0xFFFFFFFF) {
                        LODWORD(v257) = -1;
                      }
                      if ((v257 + 1) >= 2) {
                        goto LABEL_454;
                      }
                      goto LABEL_456;
                    }
                    int v255 = (*(uint64_t (**)(unint64_t))(v810 + 48))(((unint64_t)v256 + v808) & v804);
                  }
                  if (v255)
                  {
LABEL_454:
                    size_t v277 = v858;
                    memcpy(v253, v254, v858);
LABEL_457:
                    long long v282 = &v253[v277];
                    *long long v282 = v254[v277];
                    *((void *)v282 + 1) = *(void *)&v254[v277 + 8];
                    char v223 = 1;
                    char v224 = 2;
                    goto LABEL_458;
                  }
                  unint64_t v256 = (uint64_t *)((unint64_t)&v254[v832] & 0xFFFFFFFFFFFFFFF8);
LABEL_456:
                  (*(void (**)(char *, char *, uint64_t))(v828 + 32))(v253, v254, v827);
                  long long v278 = (void *)((unint64_t)&v253[v832] & 0xFFFFFFFFFFFFFFF8);
                  *long long v278 = *v256;
                  unint64_t v279 = ((unint64_t)v278 + v808) & v804;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v810 + 32))(v279, ((unint64_t)v256 + v808) & v804, v809);
                  size_t v280 = (void *)((v793 + v279) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v281 = (void *)((v793 + (((unint64_t)v256 + v808) & v804)) & 0xFFFFFFFFFFFFFFF8);
                  *size_t v280 = *v281;
                  *(_OWORD *)(((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v281
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  size_t v277 = v858;
                  goto LABEL_457;
                case 3u:
                  uint64_t v769 = v64;
                  int v219 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v852 + 32);
                  v219(a1, a2, v856);
                  v870 = (void *)((unint64_t)&a1[v818] & v816);
                  unint64_t v220 = (void *)((unint64_t)&a2[v818] & v816);
                  unint64_t v759 = v58;
                  if (v834 == v819)
                  {
                    int v221 = (*(uint64_t (**)(void *))(v852 + 48))(v220);
                    uint64_t v222 = v829;
LABEL_557:
                    if (v221)
                    {
LABEL_558:
                      unint64_t v471 = (unint64_t)&a1[v818] & v816;
                      memcpy(v870, v220, v799);
                      unint64_t v472 = v815;
                      unint64_t v473 = v759;
                      size_t v474 = v789;
                      goto LABEL_559;
                    }
                    unint64_t v245 = ((unint64_t)v220 + v837) & v841;
                    unint64_t v246 = (v836 + v245) & v845;
LABEL_561:
                    unint64_t v862 = v59;
                    v219((unsigned __int8 *)v870, (unsigned __int8 *)v220, v856);
                    unint64_t v476 = ((unint64_t)v870 + v837) & v841;
                    v219((unsigned __int8 *)v476, (unsigned __int8 *)v245, v856);
                    unint64_t v477 = (v836 + v476) & v845;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v826 + 32))(v477, v246, v825);
                    long long v478 = (void *)((v831 + v477) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v479 = (void *)((v831 + v246) & 0xFFFFFFFFFFFFFFF8);
                    *long long v478 = *v479;
                    unint64_t v480 = ((unint64_t)v478 + v805) & v803;
                    unint64_t v481 = ((unint64_t)v479 + v805) & v803;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v806 + 32))(v480, v481, v807);
                    long long v482 = (void *)((v792 + v480) & 0xFFFFFFFFFFFFFFF8);
                    long long v483 = (void *)((v792 + v481) & 0xFFFFFFFFFFFFFFF8);
                    *long long v482 = *v483;
                    *(_OWORD *)(((unint64_t)v482 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v483 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *(_OWORD *)(v36 + v477) = *(_OWORD *)(v36 + v246);
                    size_t v484 = (v853 + v36 + v477) & v813;
                    size_t v485 = (v853 + v36 + v246) & v813;
                    *(unsigned char *)size_t v484 = *(unsigned char *)v485;
                    uint64_t v486 = v484 | 4;
                    int v487 = *(_DWORD *)(v485 | 4);
                    *(unsigned char *)(v486 + 4) = *(unsigned char *)((v485 | 4) + 4);
                    *(_DWORD *)uint64_t v486 = v487;
                    *(_WORD *)(v484 + 10) = *(_WORD *)(v485 + 0xA);
                    uint64_t v488 = *(void (**)(size_t, size_t, uint64_t))(v222 + 32);
                    v488((v814 + v484) & v769, (v814 + v485) & v769, v802);
                    size_t v489 = (v801 + ((v814 + v484) & v769)) & v769;
                    size_t v490 = (v801 + ((v814 + v485) & v769)) & v769;
                    v488(v489, v490, v802);
                    unint64_t v491 = (unsigned char *)(v489 + v796);
                    *unint64_t v491 = *(unsigned char *)(v490 + v796);
                    v491[1] = *(unsigned char *)(v490 + v796 + 1);
                    v491[2] = *(unsigned char *)(v490 + v796 + 2);
                    v491[3] = *(unsigned char *)(v490 + v796 + 3);
                    v491[4] = *(unsigned char *)(v490 + v796 + 4);
                    unint64_t v492 = (v489 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v493 = (v490 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                    *(_OWORD *)unint64_t v492 = *(_OWORD *)v493;
                    *(unsigned char *)(v492 + 16) = *(unsigned char *)(v493 + 16);
                    *(unsigned char *)(v492 + 17) = *(unsigned char *)(v493 + 17);
                    *(unsigned char *)(v492 + 18) = *(unsigned char *)(v493 + 18);
                    *(unsigned char *)(v492 + 19) = *(unsigned char *)(v493 + 19);
                    unint64_t v494 = (v492 + 27) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v495 = (v493 + 27) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v494 = *(void *)v495;
                    *(unsigned char *)(v494 + 8) = *(unsigned char *)(v495 + 8);
                    *(unsigned char *)(v494 + 9) = *(unsigned char *)(v495 + 9);
                    *(unsigned char *)(v494 + 10) = *(unsigned char *)(v495 + 10);
                    *(unsigned char *)(v494 + 11) = *(unsigned char *)(v495 + 11);
                    *(unsigned char *)(v494 + 12) = *(unsigned char *)(v495 + 12);
                    long long v496 = (void *)((v493 + 47) & 0xFFFFFFFFFFFFFFF8);
                    long long v497 = (void *)((v492 + 47) & 0xFFFFFFFFFFFFFFF8);
                    *long long v497 = *v496;
                    unint64_t v498 = ((unint64_t)v497 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v499 = ((unint64_t)v496 + 15) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v498 = *(void *)v499;
                    *(unsigned char *)(v498 + 8) = *(unsigned char *)(v499 + 8);
                    *(unsigned char *)(v498 + 9) = *(unsigned char *)(v499 + 9);
                    long long v500 = (void *)((v797 + v498) & v769);
                    long long v501 = (const void *)((v797 + v499) & v769);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v222 + 48))(v501, 1, v802))
                    {
                      memcpy(v500, v501, v822);
                    }
                    else
                    {
                      v488((size_t)v500, (size_t)v501, v802);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v222 + 56))(v500, 0, 1, v802);
                    }
                    unint64_t v59 = v862;
                    unint64_t v472 = v815;
                    size_t v475 = v796;
                    unint64_t v473 = v759;
                    size_t v474 = v789;
                    unint64_t v471 = (unint64_t)&a1[v818] & v816;
                    long long v502 = (void *)(((unint64_t)v500 + v798) & 0xFFFFFFFFFFFFFFF8);
                    long long v503 = (void *)(((unint64_t)v501 + v798) & 0xFFFFFFFFFFFFFFF8);
                    void *v502 = *v503;
                    unint64_t v504 = ((unint64_t)v502 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v505 = ((unint64_t)v503 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v506 = *(void *)v505;
                    *(unsigned char *)(v504 + 8) = *(unsigned char *)(v505 + 8);
                    *(void *)unint64_t v504 = v506;
                    unint64_t v507 = (void *)(((unint64_t)v502 + 31) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v508 = (void *)(((unint64_t)v503 + 31) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v507 = *v508;
                    long long v509 = (_OWORD *)(((unint64_t)v507 + 15) & 0xFFFFFFFFFFFFFFF8);
                    size_t v510 = (_OWORD *)(((unint64_t)v508 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *long long v509 = *v510;
                    unint64_t v511 = ((unint64_t)v509 + 19) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v512 = ((unint64_t)v510 + 19) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v513 = *(void *)v512;
                    *(unsigned char *)(v511 + 8) = *(unsigned char *)(v512 + 8);
                    *(void *)unint64_t v511 = v513;
                    *(unsigned char *)(v511 + 9) = *(unsigned char *)(v512 + 9);
                    unint64_t v514 = (v511 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    unint64_t v515 = (v512 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    LODWORD(v506) = *(_DWORD *)v515;
                    *(unsigned char *)(v514 + 4) = *(unsigned char *)(v515 + 4);
                    *(_DWORD *)unint64_t v514 = v506;
                    *(_OWORD *)((v511 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v512 + 25) & 0xFFFFFFFFFFFFFFF8);
                    size_t v516 = v484 + v850;
                    long long v517 = *(_OWORD *)(v485 + v850 + 112);
                    long long v519 = *(_OWORD *)(v485 + v850 + 64);
                    long long v518 = *(_OWORD *)(v485 + v850 + 80);
                    *(_OWORD *)(v516 + 96) = *(_OWORD *)(v485 + v850 + 96);
                    *(_OWORD *)(v516 + 112) = v517;
                    *(_OWORD *)(v516 + 64) = v519;
                    *(_OWORD *)(v516 + 80) = v518;
                    long long v520 = *(_OWORD *)(v485 + v850 + 176);
                    long long v522 = *(_OWORD *)(v485 + v850 + 128);
                    long long v521 = *(_OWORD *)(v485 + v850 + 144);
                    *(_OWORD *)(v516 + 160) = *(_OWORD *)(v485 + v850 + 160);
                    *(_OWORD *)(v516 + 176) = v520;
                    *(_OWORD *)(v516 + 128) = v522;
                    *(_OWORD *)(v516 + 144) = v521;
                    long long v524 = *(_OWORD *)(v485 + v850 + 208);
                    long long v523 = *(_OWORD *)(v485 + v850 + 224);
                    long long v525 = *(_OWORD *)(v485 + v850 + 192);
                    *(void *)(v516 + 240) = *(void *)(v485 + v850 + 240);
                    *(_OWORD *)(v516 + 208) = v524;
                    *(_OWORD *)(v516 + 224) = v523;
                    *(_OWORD *)(v516 + 192) = v525;
                    long long v526 = *(_OWORD *)(v485 + v850);
                    long long v527 = *(_OWORD *)(v485 + v850 + 16);
                    long long v528 = *(_OWORD *)(v485 + v850 + 48);
                    *(_OWORD *)(v516 + 32) = *(_OWORD *)(v485 + v850 + 32);
                    *(_OWORD *)(v516 + 48) = v528;
                    *(_OWORD *)size_t v516 = v526;
                    *(_OWORD *)(v516 + 16) = v527;
                    size_t v529 = (_OWORD *)((v484 + v850 + 255) & 0xFFFFFFFFFFFFFFF8);
                    size_t v530 = (long long *)((v485 + v850 + 255) & 0xFFFFFFFFFFFFFFF8);
                    long long v531 = *v530;
                    *(_OWORD *)((char *)v529 + 9) = *(long long *)((char *)v530 + 9);
                    _OWORD *v529 = v531;
                    unint64_t v532 = (v484 + v850 + 287) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v533 = (v485 + v850 + 287) & 0xFFFFFFFFFFFFFFF8;
                    long long v534 = *(_OWORD *)v533;
                    *(unsigned char *)(v532 + 16) = *(unsigned char *)(v533 + 16);
                    *(_OWORD *)unint64_t v532 = v534;
                    size_t v535 = (void *)((v484 + v850 + 311) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v536 = (void *)((v485 + v850 + 311) & 0xFFFFFFFFFFFFFFF8);
                    *size_t v535 = *v536;
                    *(_OWORD *)(((unint64_t)v535 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v536 + 15) & 0xFFFFFFFFFFFFFFF8);
                    if (v791)
                    {
LABEL_565:
                      unint64_t v537 = ((((v474
                               + ((((((((((v472 + v475 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 19) & 0xFFFFFFFFFFFFFFF8)
                                 + 25) & 0xFFFFFFFFFFFFFFF8)
                               + 327) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 16;
                      unint64_t v538 = (_OWORD *)((v471 + v537) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v539 = (_OWORD *)(((unint64_t)v220 + v537) & 0xFFFFFFFFFFFFFFF8);
                      *unint64_t v538 = *v539;
                      *(void *)(((unint64_t)v538 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v539 + 23) & 0xFFFFFFFFFFFFFFF8);
                      char v223 = 1;
                      char v224 = 3;
                      unint64_t v45 = v473;
                      goto LABEL_459;
                    }
LABEL_559:
                    size_t v475 = v822;
                    goto LABEL_565;
                  }
                  unint64_t v245 = ((unint64_t)v220 + v837) & v841;
                  unint64_t v246 = (v836 + v245) & v845;
                  uint64_t v222 = v829;
                  if (v839 == v819)
                  {
                    if (v811 == v839)
                    {
                      int v221 = (*(uint64_t (**)(unint64_t))(v826 + 48))((v836 + v245) & v845);
                      goto LABEL_557;
                    }
                    size_t v305 = (unint64_t *)((v831 + v246) & 0xFFFFFFFFFFFFFFF8);
                    if (v786 > 0x7FFFFFFE)
                    {
                      int v221 = (*(uint64_t (**)(unint64_t))(v806 + 48))(((unint64_t)v305 + v805) & v803);
                      goto LABEL_557;
                    }
                    unint64_t v306 = *v305;
                  }
                  else
                  {
                    size_t v269 = v36 + v246;
                    if ((v776 & 0x80000000) == 0)
                    {
                      unint64_t v270 = *(void *)(v269 + 8);
                      if (v270 >= 0xFFFFFFFF) {
                        LODWORD(v270) = -1;
                      }
                      int v221 = v270 + 1;
                      goto LABEL_557;
                    }
                    size_t v317 = (v814 + ((v853 + v269) & v813)) & v769;
                    if (v791 > 0x7FFFFFFD)
                    {
                      int v221 = (*(uint64_t (**)(size_t))(v829 + 48))(v317);
                      goto LABEL_557;
                    }
                    unint64_t v306 = *(void *)(((v788 + ((v801 + v317) & v769)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v306 >= 0xFFFFFFFF) {
                    LODWORD(v306) = -1;
                  }
                  if ((v306 + 1) >= 2) {
                    goto LABEL_558;
                  }
                  goto LABEL_561;
                case 4u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v852 + 32))(a1, a2, v856);
                  char v223 = 1;
                  char v224 = 4;
                  goto LABEL_458;
                case 5u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v852 + 32))(a1, a2, v856);
                  char v223 = 1;
                  char v224 = 5;
                  goto LABEL_458;
                case 6u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v852 + 32))(a1, a2, v856);
                  uint64_t v225 = (void *)((unint64_t)&a1[v780] & v778);
                  uint64_t v226 = v48;
                  unint64_t v227 = (const void *)((unint64_t)&a2[v780] & v778);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v785 + 48))(v227, 1, v226))
                  {
                    memcpy(v225, v227, v770);
                    char v223 = 1;
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v785 + 32))(v225, v227, v226);
                    char v223 = 1;
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v785 + 56))(v225, 0, 1, v226);
                  }
                  char v224 = 6;
                  goto LABEL_458;
                case 7u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v852 + 32))(a1, a2, v856);
                  char v223 = 1;
                  char v224 = 7;
LABEL_458:
                  unint64_t v45 = v58;
                  goto LABEL_459;
                default:
                  uint64_t v767 = v64;
                  unint64_t v758 = v58;
                  uint64_t v208 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v852 + 32);
                  v208(a1, a2, v856);
                  id v869 = (void *)((unint64_t)&a1[v818] & v816);
                  unint64_t v209 = (void *)((unint64_t)&a2[v818] & v816);
                  if (v834 == v819)
                  {
                    int v210 = (*(uint64_t (**)(void *))(v852 + 48))(v209);
                    uint64_t v211 = v829;
LABEL_522:
                    if (v210)
                    {
LABEL_523:
                      unint64_t v321 = (unint64_t)&a1[v818] & v816;
                      memcpy(v869, v209, v799);
                      unint64_t v322 = v815;
                      unint64_t v323 = v758;
                      size_t v324 = v789;
                      goto LABEL_524;
                    }
                    unint64_t v241 = ((unint64_t)v209 + v837) & v841;
                    unint64_t v242 = (v836 + v241) & v845;
LABEL_526:
                    unint64_t v860 = v59;
                    v208((unsigned __int8 *)v869, (unsigned __int8 *)v209, v856);
                    unint64_t v326 = ((unint64_t)v869 + v837) & v841;
                    v208((unsigned __int8 *)v326, (unsigned __int8 *)v241, v856);
                    unint64_t v327 = (v836 + v326) & v845;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v826 + 32))(v327, v242, v825);
                    v328 = (void *)((v831 + v327) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v329 = (void *)((v831 + v242) & 0xFFFFFFFFFFFFFFF8);
                    void *v328 = *v329;
                    unint64_t v330 = ((unint64_t)v328 + v805) & v803;
                    unint64_t v331 = ((unint64_t)v329 + v805) & v803;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v806 + 32))(v330, v331, v807);
                    unint64_t v332 = (void *)((v792 + v330) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v333 = (void *)((v792 + v331) & 0xFFFFFFFFFFFFFFF8);
                    void *v332 = *v333;
                    *(_OWORD *)(((unint64_t)v332 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v333 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *(_OWORD *)(v36 + v327) = *(_OWORD *)(v36 + v242);
                    size_t v334 = (v853 + v36 + v327) & v813;
                    size_t v335 = (v853 + v36 + v242) & v813;
                    *(unsigned char *)size_t v334 = *(unsigned char *)v335;
                    uint64_t v336 = v334 | 4;
                    int v337 = *(_DWORD *)(v335 | 4);
                    *(unsigned char *)(v336 + 4) = *(unsigned char *)((v335 | 4) + 4);
                    *(_DWORD *)uint64_t v336 = v337;
                    *(_WORD *)(v334 + 10) = *(_WORD *)(v335 + 0xA);
                    long long v338 = *(void (**)(size_t, size_t, uint64_t))(v211 + 32);
                    v338((v814 + v334) & v767, (v814 + v335) & v767, v802);
                    size_t v339 = (v801 + ((v814 + v334) & v767)) & v767;
                    size_t v340 = (v801 + ((v814 + v335) & v767)) & v767;
                    v338(v339, v340, v802);
                    long long v341 = (unsigned char *)(v339 + v796);
                    *long long v341 = *(unsigned char *)(v340 + v796);
                    v341[1] = *(unsigned char *)(v340 + v796 + 1);
                    v341[2] = *(unsigned char *)(v340 + v796 + 2);
                    v341[3] = *(unsigned char *)(v340 + v796 + 3);
                    v341[4] = *(unsigned char *)(v340 + v796 + 4);
                    unint64_t v342 = (v339 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v343 = (v340 + v796 + 12) & 0xFFFFFFFFFFFFFFF8;
                    *(_OWORD *)unint64_t v342 = *(_OWORD *)v343;
                    *(unsigned char *)(v342 + 16) = *(unsigned char *)(v343 + 16);
                    *(unsigned char *)(v342 + 17) = *(unsigned char *)(v343 + 17);
                    *(unsigned char *)(v342 + 18) = *(unsigned char *)(v343 + 18);
                    *(unsigned char *)(v342 + 19) = *(unsigned char *)(v343 + 19);
                    unint64_t v344 = (v342 + 27) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v345 = (v343 + 27) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v344 = *(void *)v345;
                    *(unsigned char *)(v344 + 8) = *(unsigned char *)(v345 + 8);
                    *(unsigned char *)(v344 + 9) = *(unsigned char *)(v345 + 9);
                    *(unsigned char *)(v344 + 10) = *(unsigned char *)(v345 + 10);
                    *(unsigned char *)(v344 + 11) = *(unsigned char *)(v345 + 11);
                    *(unsigned char *)(v344 + 12) = *(unsigned char *)(v345 + 12);
                    long long v346 = (void *)((v343 + 47) & 0xFFFFFFFFFFFFFFF8);
                    long long v347 = (void *)((v342 + 47) & 0xFFFFFFFFFFFFFFF8);
                    void *v347 = *v346;
                    unint64_t v348 = ((unint64_t)v347 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v349 = ((unint64_t)v346 + 15) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v348 = *(void *)v349;
                    *(unsigned char *)(v348 + 8) = *(unsigned char *)(v349 + 8);
                    *(unsigned char *)(v348 + 9) = *(unsigned char *)(v349 + 9);
                    v350 = (void *)((v797 + v348) & v767);
                    long long v351 = (const void *)((v797 + v349) & v767);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v211 + 48))(v351, 1, v802))
                    {
                      memcpy(v350, v351, v822);
                    }
                    else
                    {
                      v338((size_t)v350, (size_t)v351, v802);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v211 + 56))(v350, 0, 1, v802);
                    }
                    unint64_t v59 = v860;
                    unint64_t v322 = v815;
                    size_t v325 = v796;
                    unint64_t v323 = v758;
                    size_t v324 = v789;
                    unint64_t v321 = (unint64_t)&a1[v818] & v816;
                    unint64_t v352 = (void *)(((unint64_t)v350 + v798) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v353 = (void *)(((unint64_t)v351 + v798) & 0xFFFFFFFFFFFFFFF8);
                    void *v352 = *v353;
                    unint64_t v354 = ((unint64_t)v352 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v355 = ((unint64_t)v353 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v356 = *(void *)v355;
                    *(unsigned char *)(v354 + 8) = *(unsigned char *)(v355 + 8);
                    *(void *)unint64_t v354 = v356;
                    unint64_t v357 = (void *)(((unint64_t)v352 + 31) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v358 = (void *)(((unint64_t)v353 + 31) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v357 = *v358;
                    int v359 = (_OWORD *)(((unint64_t)v357 + 15) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v360 = (_OWORD *)(((unint64_t)v358 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *int v359 = *v360;
                    unint64_t v361 = ((unint64_t)v359 + 19) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v362 = ((unint64_t)v360 + 19) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v363 = *(void *)v362;
                    *(unsigned char *)(v361 + 8) = *(unsigned char *)(v362 + 8);
                    *(void *)unint64_t v361 = v363;
                    *(unsigned char *)(v361 + 9) = *(unsigned char *)(v362 + 9);
                    unint64_t v364 = (v361 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    unint64_t v365 = (v362 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    LODWORD(v356) = *(_DWORD *)v365;
                    *(unsigned char *)(v364 + 4) = *(unsigned char *)(v365 + 4);
                    *(_DWORD *)unint64_t v364 = v356;
                    *(_OWORD *)((v361 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v362 + 25) & 0xFFFFFFFFFFFFFFF8);
                    size_t v366 = v334 + v850;
                    long long v367 = *(_OWORD *)(v335 + v850 + 112);
                    long long v369 = *(_OWORD *)(v335 + v850 + 64);
                    long long v368 = *(_OWORD *)(v335 + v850 + 80);
                    *(_OWORD *)(v366 + 96) = *(_OWORD *)(v335 + v850 + 96);
                    *(_OWORD *)(v366 + 112) = v367;
                    *(_OWORD *)(v366 + 64) = v369;
                    *(_OWORD *)(v366 + 80) = v368;
                    long long v370 = *(_OWORD *)(v335 + v850 + 176);
                    long long v372 = *(_OWORD *)(v335 + v850 + 128);
                    long long v371 = *(_OWORD *)(v335 + v850 + 144);
                    *(_OWORD *)(v366 + 160) = *(_OWORD *)(v335 + v850 + 160);
                    *(_OWORD *)(v366 + 176) = v370;
                    *(_OWORD *)(v366 + 128) = v372;
                    *(_OWORD *)(v366 + 144) = v371;
                    long long v374 = *(_OWORD *)(v335 + v850 + 208);
                    long long v373 = *(_OWORD *)(v335 + v850 + 224);
                    long long v375 = *(_OWORD *)(v335 + v850 + 192);
                    *(void *)(v366 + 240) = *(void *)(v335 + v850 + 240);
                    *(_OWORD *)(v366 + 208) = v374;
                    *(_OWORD *)(v366 + 224) = v373;
                    *(_OWORD *)(v366 + 192) = v375;
                    long long v376 = *(_OWORD *)(v335 + v850);
                    long long v377 = *(_OWORD *)(v335 + v850 + 16);
                    long long v378 = *(_OWORD *)(v335 + v850 + 48);
                    *(_OWORD *)(v366 + 32) = *(_OWORD *)(v335 + v850 + 32);
                    *(_OWORD *)(v366 + 48) = v378;
                    *(_OWORD *)size_t v366 = v376;
                    *(_OWORD *)(v366 + 16) = v377;
                    unint64_t v379 = (_OWORD *)((v334 + v850 + 255) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v380 = (long long *)((v335 + v850 + 255) & 0xFFFFFFFFFFFFFFF8);
                    long long v381 = *v380;
                    *(_OWORD *)((char *)v379 + 9) = *(long long *)((char *)v380 + 9);
                    *unint64_t v379 = v381;
                    unint64_t v382 = (v334 + v850 + 287) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v383 = (v335 + v850 + 287) & 0xFFFFFFFFFFFFFFF8;
                    long long v384 = *(_OWORD *)v383;
                    *(unsigned char *)(v382 + 16) = *(unsigned char *)(v383 + 16);
                    *(_OWORD *)unint64_t v382 = v384;
                    unint64_t v385 = (void *)((v334 + v850 + 311) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v386 = (void *)((v335 + v850 + 311) & 0xFFFFFFFFFFFFFFF8);
                    void *v385 = *v386;
                    *(_OWORD *)(((unint64_t)v385 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v386 + 15) & 0xFFFFFFFFFFFFFFF8);
                    if (v791)
                    {
LABEL_530:
                      char v224 = 0;
                      unint64_t v387 = ((((v324
                               + ((((((((((v322 + v325 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 19) & 0xFFFFFFFFFFFFFFF8)
                                 + 25) & 0xFFFFFFFFFFFFFFF8)
                               + 327) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 16;
                      unsigned int v388 = (void *)((v321 + v387) & 0xFFFFFFFFFFFFFFF8);
                      size_t v389 = (void *)(((unint64_t)v209 + v387) & 0xFFFFFFFFFFFFFFF8);
                      *unsigned int v388 = *v389;
                      *(void *)(((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v389 + 15) & 0xFFFFFFFFFFFFFFF8);
                      char v223 = 1;
                      unint64_t v45 = v323;
                      goto LABEL_459;
                    }
LABEL_524:
                    size_t v325 = v822;
                    goto LABEL_530;
                  }
                  unint64_t v241 = ((unint64_t)v209 + v837) & v841;
                  unint64_t v242 = (v836 + v241) & v845;
                  uint64_t v211 = v829;
                  if (v839 == v819)
                  {
                    if (v811 == v839)
                    {
                      int v210 = (*(uint64_t (**)(unint64_t))(v826 + 48))((v836 + v241) & v845);
                      goto LABEL_522;
                    }
                    id v301 = (unint64_t *)((v831 + v242) & 0xFFFFFFFFFFFFFFF8);
                    if (v786 > 0x7FFFFFFE)
                    {
                      int v210 = (*(uint64_t (**)(unint64_t))(v806 + 48))(((unint64_t)v301 + v805) & v803);
                      goto LABEL_522;
                    }
                    unint64_t v302 = *v301;
                  }
                  else
                  {
                    size_t v265 = v36 + v242;
                    if ((v776 & 0x80000000) == 0)
                    {
                      unint64_t v266 = *(void *)(v265 + 8);
                      if (v266 >= 0xFFFFFFFF) {
                        LODWORD(v266) = -1;
                      }
                      int v210 = v266 + 1;
                      goto LABEL_522;
                    }
                    size_t v315 = (v814 + ((v853 + v265) & v813)) & v767;
                    if (v791 > 0x7FFFFFFD)
                    {
                      int v210 = (*(uint64_t (**)(size_t))(v829 + 48))(v315);
                      goto LABEL_522;
                    }
                    unint64_t v302 = *(void *)(((v788 + ((v801 + v315) & v767)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v302 >= 0xFFFFFFFF) {
                    LODWORD(v302) = -1;
                  }
                  if ((v302 + 1) >= 2) {
                    goto LABEL_523;
                  }
                  goto LABEL_526;
              }
            }
LABEL_312:
            (*(void (**)(size_t, uint64_t))(v826 + 8))(v158, v825);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v806 + 8))(((unint64_t)v180 + v805) & v803, v807);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_313;
          }
          int v159 = (*(uint64_t (**)(unint64_t))(v806 + 48))(((unint64_t)v180 + v805) & v803);
        }
        if (v159) {
          goto LABEL_313;
        }
        unint64_t v180 = (uint64_t *)((v831 + v158) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_312;
      case 3u:
        size_t v783 = v36;
        unint64_t v760 = v45;
        uint64_t v766 = ~v29;
        size_t v160 = *(void (**)(unsigned __int8 *, uint64_t))(v851 + 8);
        v160(a1, AssociatedTypeWitness);
        unint64_t v161 = (unint64_t)&a1[v820] & v817;
        if (v854 == v821)
        {
          int v162 = (*(uint64_t (**)(unint64_t))(v851 + 48))((unint64_t)&a1[v820] & v817);
          goto LABEL_213;
        }
        unint64_t v163 = (v823 + v161) & v843;
        unint64_t v164 = (v824 + v163) & v867;
        if (v830 == v821)
        {
          if (v812 == v830)
          {
            int v162 = (*(uint64_t (**)(unint64_t))(v828 + 48))((v824 + v163) & v867);
            goto LABEL_213;
          }
          unint64_t v299 = (unint64_t *)((v832 + v164) & 0xFFFFFFFFFFFFFFF8);
          if (v787 <= 0x7FFFFFFE)
          {
            unint64_t v300 = *v299;
            goto LABEL_627;
          }
          int v162 = (*(uint64_t (**)(unint64_t))(v810 + 48))(((unint64_t)v299 + v808) & v804);
        }
        else
        {
          size_t v263 = v858 + v164;
          if ((v777 & 0x80000000) == 0)
          {
            unint64_t v264 = *(void *)(v263 + 8);
            if (v264 >= 0xFFFFFFFF) {
              LODWORD(v264) = -1;
            }
            if (v264 == -1)
            {
LABEL_214:
              unint64_t v163 = (v823 + v161) & v843;
              unint64_t v164 = (v824 + v163) & v867;
LABEL_215:
              v160((unsigned __int8 *)v161, AssociatedTypeWitness);
              v160((unsigned __int8 *)v163, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v828 + 8))(v164, v827);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v810 + 8))((v808 + ((v832 + v164) & 0xFFFFFFFFFFFFFFF8)) & v804, v809);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              size_t v165 = (v853 + v858 + v164) & v813;
              unint64_t v166 = *(void (**)(size_t, uint64_t))(v829 + 8);
              v166((v814 + v165) & v766, v802);
              size_t v167 = (v801 + ((v814 + v165) & v766)) & v766;
              v166(v167, v802);
              swift_bridgeObjectRelease();
              unint64_t v168 = (v797
                    + ((((((v788 + v167) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v766;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v829 + 48))(v168, 1, v802)) {
                v166(v168, v802);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int v169 = (uint64_t *)((((((v798 + v168) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v170 = v169[1];
              if ((v170 & 0x3000000000000000) == 0) {
                sub_10001E9C0(*v169, v170);
              }
              swift_bridgeObjectRelease();
              unint64_t v171 = v850 + v165;
              LODWORD(v172) = -1;
              if (*(void *)(v171 + 16) < 0xFFFFFFFFuLL) {
                uint64_t v172 = *(void *)(v171 + 16);
              }
              if ((int)v172 - 1 < 0)
              {
                swift_errorRelease();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v171 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1000CF144(*(void *)((((v171 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v171 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_226:
            swift_bridgeObjectRelease();
            goto LABEL_227;
          }
          size_t v314 = (v814 + ((v853 + v263) & v813)) & v766;
          if (v791 <= 0x7FFFFFFD)
          {
            unint64_t v300 = *(void *)(((v788 + ((v801 + v314) & v766)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_627:
            if (v300 >= 0xFFFFFFFF) {
              LODWORD(v300) = -1;
            }
            if ((v300 + 1) < 2) {
              goto LABEL_215;
            }
            goto LABEL_226;
          }
          int v162 = (*(uint64_t (**)(size_t))(v829 + 48))(v314);
        }
LABEL_213:
        if (v162) {
          goto LABEL_226;
        }
        goto LABEL_214;
      case 4u:
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v851 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_316;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v851 + 8))(a1, AssociatedTypeWitness);
        unint64_t v173 = (unint64_t)&a1[v782] & v779;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v40 + 48))(v173, 1, v859)) {
          (*(void (**)(unint64_t, uint64_t))(v40 + 8))(v173, v859);
        }
        goto LABEL_316;
      default:
        size_t v783 = v36;
        unint64_t v760 = v45;
        uint64_t v766 = ~v29;
        int v126 = *(void (**)(unsigned __int8 *, uint64_t))(v851 + 8);
        v126(a1, AssociatedTypeWitness);
        unint64_t v127 = (unint64_t)&a1[v820] & v817;
        if (v854 == v821)
        {
          int v128 = (*(uint64_t (**)(unint64_t))(v851 + 48))((unint64_t)&a1[v820] & v817);
          goto LABEL_173;
        }
        unint64_t v129 = (v823 + v127) & v843;
        unint64_t v130 = (v824 + v129) & v867;
        if (v830 == v821)
        {
          if (v812 == v830)
          {
            int v128 = (*(uint64_t (**)(unint64_t))(v828 + 48))((v824 + v129) & v867);
            goto LABEL_173;
          }
          uint64_t v295 = (unint64_t *)((v832 + v130) & 0xFFFFFFFFFFFFFFF8);
          if (v787 <= 0x7FFFFFFE)
          {
            unint64_t v296 = *v295;
            goto LABEL_617;
          }
          int v128 = (*(uint64_t (**)(unint64_t))(v810 + 48))(((unint64_t)v295 + v808) & v804);
        }
        else
        {
          size_t v190 = v858 + v130;
          if ((v777 & 0x80000000) == 0)
          {
            unint64_t v191 = *(void *)(v190 + 8);
            if (v191 >= 0xFFFFFFFF) {
              LODWORD(v191) = -1;
            }
            if (v191 == -1)
            {
LABEL_174:
              unint64_t v129 = (v823 + v127) & v843;
              unint64_t v130 = (v824 + v129) & v867;
LABEL_175:
              v126((unsigned __int8 *)v127, AssociatedTypeWitness);
              v126((unsigned __int8 *)v129, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v828 + 8))(v130, v827);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v810 + 8))((v808 + ((v832 + v130) & 0xFFFFFFFFFFFFFFF8)) & v804, v809);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              size_t v131 = (v853 + v858 + v130) & v813;
              unint64_t v132 = *(void (**)(size_t, uint64_t))(v829 + 8);
              v132((v814 + v131) & v766, v802);
              size_t v133 = (v801 + ((v814 + v131) & v766)) & v766;
              v132(v133, v802);
              swift_bridgeObjectRelease();
              unint64_t v134 = (v797
                    + ((((((v788 + v133) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v766;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v829 + 48))(v134, 1, v802)) {
                v132(v134, v802);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v135 = (uint64_t *)((((((v798 + v134) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v136 = v135[1];
              if ((v136 & 0x3000000000000000) == 0) {
                sub_10001E9C0(*v135, v136);
              }
              swift_bridgeObjectRelease();
              unint64_t v137 = v850 + v131;
              LODWORD(v138) = -1;
              if (*(void *)(v137 + 16) < 0xFFFFFFFFuLL) {
                uint64_t v138 = *(void *)(v137 + 16);
              }
              if ((int)v138 - 1 < 0)
              {
                swift_errorRelease();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v137 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1000CF144(*(void *)((((v137 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v137 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_186:
            unint64_t v88 = v127 + v800;
            goto LABEL_187;
          }
          size_t v313 = (v814 + ((v853 + v190) & v813)) & v766;
          if (v791 <= 0x7FFFFFFD)
          {
            unint64_t v296 = *(void *)(((v788 + ((v801 + v313) & v766)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_617:
            if (v296 >= 0xFFFFFFFF) {
              LODWORD(v296) = -1;
            }
            if ((v296 + 1) < 2) {
              goto LABEL_175;
            }
            goto LABEL_186;
          }
          int v128 = (*(uint64_t (**)(size_t))(v829 + 48))(v313);
        }
LABEL_173:
        if (v128) {
          goto LABEL_186;
        }
        goto LABEL_174;
    }
  }
  return a1;
}

uint64_t sub_10067CE78(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v74 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v68 = v4;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v74;
  unint64_t v69 = ((v11 | v14 | v13) + v6) & ~(v11 | v14 | v13);
  int v71 = *(_DWORD *)(v5 + 84);
  int v65 = *(_DWORD *)(v12 + 84);
  unint64_t v72 = ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v70 = (v13 | 7) + 16;
  uint64_t v67 = (v70 + ((((v6 + v14) & ~v14) + v6 + v11) & ~v11) + v72) & ~(v13 | 7);
  uint64_t v66 = *(void *)(v12 + 64);
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  int v64 = *(_DWORD *)(v16 + 84);
  unint64_t v18 = *(void *)(v16 + 64);
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  uint64_t v21 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v22 = *(void *)(v68 - 8);
  uint64_t v23 = *(void *)(v15 - 8);
  if (v65) {
    uint64_t v24 = 7;
  }
  else {
    uint64_t v24 = 8;
  }
  uint64_t v25 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v26 = v20 & 0xF8 | v25 | 7;
  unint64_t v27 = ((((*(void *)(v21 + 64) + ((v25 + ((*(void *)(v19 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v25) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v29 = ((((((((((v24
                + v66
                + ((v13
                  + ((((((v66 + ((((v13 + 12) | v13) + v66) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v30 = v69 + ((((v29 + v67) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = v30 + v17;
  unint64_t v32 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = (v31 + 16) & ~v17;
  if (v64) {
    unint64_t v34 = v18;
  }
  else {
    unint64_t v34 = v18 + 1;
  }
  uint64_t v35 = v34 + v26;
  unint64_t v36 = ((((((v35 + v33) & ~v26) + v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= ((v32 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v36 = ((v32 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v28 = (v6 + v17) & ~v17;
  if (v27 + ((v35 + v28) & ~v26) + 16 > v36) {
    unint64_t v36 = v27 + ((v35 + v28) & ~v26) + 16;
  }
  unint64_t v37 = ((v32 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v37 <= v36) {
    unint64_t v37 = v36;
  }
  if (v6 > v37) {
    unint64_t v37 = v6;
  }
  unint64_t v38 = ((v17 | v13 | v26) + v18) & ~(v17 | v13 | v26);
  uint64_t v39 = (v70 + ((((v18 + v17) & ~v17) + v18 + v26) & ~v26) + v27) & ~(v13 | 7);
  if (*(_DWORD *)(v22 + 84)) {
    uint64_t v40 = *(void *)(*(void *)(v68 - 8) + 64);
  }
  else {
    uint64_t v40 = *(void *)(*(void *)(v68 - 8) + 64) + 1;
  }
  unint64_t v41 = v40 + ((v6 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  if (v41 <= v37) {
    unint64_t v41 = v37;
  }
  if (v6 > v41) {
    unint64_t v41 = v6;
  }
  unint64_t v42 = (v18 + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  int v43 = *(_DWORD *)(v23 + 84);
  uint64_t v44 = *(void *)(*(void *)(v15 - 8) + 64);
  unint64_t v45 = v38 + ((((v29 + v39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v46 = v45 + v74;
  unint64_t v47 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = (v46 + 16) & ~v74;
  if (v71) {
    unint64_t v49 = v6;
  }
  else {
    unint64_t v49 = v6 + 1;
  }
  uint64_t v50 = v49 + v11;
  unint64_t v51 = ((((((v50 + v48) & ~v11) + v72 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v51 <= ((v47 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v51 = ((v47 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (((v50 + ((v18 + v74) & ~v74)) & ~v11) + v72 + 16 > v51) {
    unint64_t v51 = ((v50 + ((v18 + v74) & ~v74)) & ~v11) + v72 + 16;
  }
  unint64_t v52 = ((v47 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v52 <= v51) {
    unint64_t v52 = v51;
  }
  if (v18 > v52) {
    unint64_t v52 = v18;
  }
  if (!v43) {
    ++v44;
  }
  unint64_t v53 = v44 + v42;
  if (v53 <= v52) {
    unint64_t v53 = v52;
  }
  if (v18 > v53) {
    unint64_t v53 = v18;
  }
  unint64_t v54 = v53 + 1;
  if (v54 <= v41 + 1) {
    unint64_t v55 = v41 + 1;
  }
  else {
    unint64_t v55 = v54;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_61;
  }
  unint64_t v56 = v55 + 1;
  char v57 = 8 * (v55 + 1);
  if ((v55 + 1) <= 3)
  {
    unsigned int v60 = ((a2 + ~(-1 << v57) - 254) >> v57) + 1;
    if (HIWORD(v60))
    {
      int v58 = *(_DWORD *)((char *)a1 + v56);
      if (!v58) {
        goto LABEL_61;
      }
      goto LABEL_53;
    }
    if (v60 > 0xFF)
    {
      int v58 = *(unsigned __int16 *)((char *)a1 + v56);
      if (!*(unsigned __int16 *)((char *)a1 + v56)) {
        goto LABEL_61;
      }
      goto LABEL_53;
    }
    if (v60 < 2)
    {
LABEL_61:
      unsigned int v62 = *((unsigned __int8 *)a1 + v55);
      if (v62 >= 2) {
        return (v62 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v58 = *((unsigned __int8 *)a1 + v56);
  if (!*((unsigned char *)a1 + v56)) {
    goto LABEL_61;
  }
LABEL_53:
  int v61 = (v58 - 1) << v57;
  if (v56 > 3) {
    int v61 = 0;
  }
  if (v56)
  {
    if (v56 > 3) {
      LODWORD(v56) = 4;
    }
    switch((int)v56)
    {
      case 2:
        LODWORD(v56) = *a1;
        break;
      case 3:
        LODWORD(v56) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v56) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v56) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v56 | v61) + 255;
}

void sub_10067D680(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v74 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v74;
  unint64_t v66 = ((v11 | v14 | v13) + v6) & ~(v11 | v14 | v13);
  int v68 = *(_DWORD *)(v5 + 84);
  int v61 = *(_DWORD *)(v12 + 84);
  uint64_t v70 = v11;
  unint64_t v69 = ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v67 = (v13 | 7) + 16;
  uint64_t v65 = (v67 + ((((v6 + v14) & ~v14) + v6 + v11) & ~v11) + v69) & ~(v13 | 7);
  uint64_t v62 = *(void *)(v12 + 64);
  uint64_t v15 = *(void *)(a4 + 24);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  int v64 = *(_DWORD *)(v16 + 84);
  unint64_t v18 = *(void *)(v16 + 64);
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  uint64_t v21 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = *(void *)(v15 - 8);
  if (v61) {
    uint64_t v24 = 7;
  }
  else {
    uint64_t v24 = 8;
  }
  uint64_t v25 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v26 = v20 & 0xF8 | v25 | 7;
  unint64_t v27 = ((((*(void *)(v21 + 64) + ((v25 + ((*(void *)(v19 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v25) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = ((((((((((v24
                + v62
                + ((v13
                  + ((((((v62 + ((((v13 + 12) | v13) + v62) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v29 = v66 + ((((v28 + v65) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = v29 + v17;
  unint64_t v31 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = (v30 + 16) & ~v17;
  if (v64) {
    unint64_t v33 = v18;
  }
  else {
    unint64_t v33 = v18 + 1;
  }
  uint64_t v34 = v33 + v26;
  unint64_t v35 = ((((((v34 + v32) & ~v26) + v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v35 <= ((v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v35 = ((v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v27 + ((v34 + ((v6 + v17) & ~v17)) & ~v26) + 16 > v35) {
    unint64_t v35 = v27 + ((v34 + ((v6 + v17) & ~v17)) & ~v26) + 16;
  }
  unint64_t v36 = ((v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= v35) {
    unint64_t v36 = v35;
  }
  if (v6 > v36) {
    unint64_t v36 = v6;
  }
  unint64_t v37 = ((v17 | v13 | v26) + v18) & ~(v17 | v13 | v26);
  uint64_t v38 = (v67 + ((((v18 + v17) & ~v17) + v18 + v26) & ~v26) + v27) & ~(v13 | 7);
  if (*(_DWORD *)(v22 + 84)) {
    uint64_t v39 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  else {
    uint64_t v39 = *(void *)(*(void *)(v4 - 8) + 64) + 1;
  }
  unint64_t v40 = v39 + ((v6 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  if (v40 <= v36) {
    unint64_t v40 = v36;
  }
  if (v6 > v40) {
    unint64_t v40 = v6;
  }
  unint64_t v41 = (v18 + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  int v42 = *(_DWORD *)(v23 + 84);
  uint64_t v43 = *(void *)(*(void *)(v15 - 8) + 64);
  unint64_t v44 = v37 + ((((v28 + v38) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = v44 + v74;
  unint64_t v46 = (v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v47 = (v45 + 16) & ~v74;
  if (v68) {
    unint64_t v48 = v6;
  }
  else {
    unint64_t v48 = v6 + 1;
  }
  uint64_t v49 = v48 + v70;
  unint64_t v50 = ((((((v49 + v47) & ~v70) + v69 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v50 <= ((v46 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v50 = ((v46 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (((v49 + ((v18 + v74) & ~v74)) & ~v70) + v69 + 16 > v50) {
    unint64_t v50 = ((v49 + ((v18 + v74) & ~v74)) & ~v70) + v69 + 16;
  }
  unint64_t v51 = ((v46 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v51 <= v50) {
    unint64_t v51 = v50;
  }
  if (v18 > v51) {
    unint64_t v51 = v18;
  }
  if (!v42) {
    ++v43;
  }
  unint64_t v52 = v43 + v41;
  if (v52 <= v51) {
    unint64_t v52 = v51;
  }
  if (v18 > v52) {
    unint64_t v52 = v18;
  }
  unint64_t v53 = v52 + 1;
  if (v53 <= v40 + 1) {
    unint64_t v53 = v40 + 1;
  }
  size_t v54 = v53 + 1;
  if (a3 < 0xFF)
  {
    int v56 = 0;
    unint64_t v55 = a1;
  }
  else
  {
    unint64_t v55 = a1;
    if (v54 <= 3)
    {
      unsigned int v59 = ((a3 + ~(-1 << (8 * v54)) - 254) >> (8 * v54)) + 1;
      if (HIWORD(v59))
      {
        int v56 = 4;
      }
      else if (v59 >= 0x100)
      {
        int v56 = 2;
      }
      else
      {
        int v56 = v59 > 1;
      }
    }
    else
    {
      int v56 = 1;
    }
  }
  if (a2 > 0xFE)
  {
    unsigned int v57 = a2 - 255;
    if (v54 < 4)
    {
      int v58 = (v57 >> (8 * v54)) + 1;
      if (v53 != -1)
      {
        int v60 = v57 & ~(-1 << (8 * v54));
        bzero(v55, v54);
        if (v54 == 3)
        {
          *(_WORD *)unint64_t v55 = v60;
          v55[2] = BYTE2(v60);
        }
        else if (v54 == 2)
        {
          *(_WORD *)unint64_t v55 = v60;
        }
        else
        {
          *unint64_t v55 = v60;
        }
      }
    }
    else
    {
      bzero(v55, v53 + 1);
      *(_DWORD *)unint64_t v55 = v57;
      int v58 = 1;
    }
    switch(v56)
    {
      case 1:
        v55[v54] = v58;
        break;
      case 2:
        *(_WORD *)&v55[v54] = v58;
        break;
      case 3:
LABEL_72:
        __break(1u);
        JUMPOUT(0x10067DEECLL);
      case 4:
        *(_DWORD *)&v55[v54] = v58;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v56)
    {
      case 1:
        v55[v54] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_61;
      case 2:
        *(_WORD *)&v55[v54] = 0;
        goto LABEL_60;
      case 3:
        goto LABEL_72;
      case 4:
        *(_DWORD *)&v55[v54] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_61;
      default:
LABEL_60:
        if (a2) {
LABEL_61:
        }
          v55[v53] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_10067DF14(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v56 = v2;
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v11 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v57 = v5;
  uint64_t v58 = v10;
  int v59 = *(_DWORD *)(v3 + 84);
  unint64_t v55 = ((((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v54 = (v12 | 7) + 16;
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = 7;
  if (!*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = 8;
  }
  unint64_t v53 = ((((((((((v14
                + v13
                + ((v12
                  + ((((((v13 + ((((v12 + 12) | v12) + v13) & ~v12) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v15 = (((v10 | v5 | v12) + v4) & ~(v10 | v5 | v12))
      + ((((v53
          + ((v54
            + ((((v4 + v5) & ~v5) + v4 + v10) & ~v10)
            + ((((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v17 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = *(void *)(v17 + 64);
  if (*(_DWORD *)(v17 + 84)) {
    unint64_t v21 = *(void *)(v17 + 64);
  }
  else {
    unint64_t v21 = v20 + 1;
  }
  unint64_t v51 = v21;
  uint64_t v22 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  uint64_t v24 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = v23 | v25 | 7;
  unint64_t v27 = ((((*(void *)(v24 + 64) + ((v25 + ((*(void *)(v22 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v25) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = ((((((v51 + v26 + ((v15 + v18 + 16) & ~v18)) & ~v26) + v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v29 = *(void *)(v56 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  if (!*(_DWORD *)(v29 + 84)) {
    ++v30;
  }
  unint64_t v31 = v30 + ((v4 + *(unsigned __int8 *)(v29 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  unint64_t v32 = ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 > v32) {
    unint64_t v32 = v4;
  }
  if (v28 <= v27 + ((v51 + v26 + ((v4 + v18) & ~v18)) & ~v26) + 16) {
    unint64_t v28 = v27 + ((v51 + v26 + ((v4 + v18) & ~v18)) & ~v26) + 16;
  }
  if (((v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v31) {
    unint64_t v31 = ((v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v32 > v28) {
    unint64_t v28 = v32;
  }
  if (v28 <= v31) {
    unint64_t v28 = v31;
  }
  unint64_t v33 = (((v18 | v12 | v26) + v20) & ~(v18 | v12 | v26))
      + ((((v53 + ((v54 + ((((v20 + v18) & ~v18) + v20 + v26) & ~v26) + v27) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v34 = v33 + v57;
  unint64_t v35 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = ((v35 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v37 = (v34 + 16) & ~v57;
  if (v59) {
    unint64_t v38 = v4;
  }
  else {
    unint64_t v38 = v4 + 1;
  }
  uint64_t v39 = v38 + v58;
  unint64_t v40 = ((((((v39 + v37) & ~v58) + v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v41 = ((v39 + ((v20 + v57) & ~v57)) & ~v58) + v55 + 16;
  unint64_t v42 = ((v35 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v43 = *(void *)(v16 - 8);
  unint64_t v44 = (v20 + *(unsigned __int8 *)(v43 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v45 = *(void *)(v43 + 64);
  if (!*(_DWORD *)(v43 + 84)) {
    ++v45;
  }
  unint64_t v46 = v45 + v44;
  if (v20 > v36) {
    unint64_t v36 = v20;
  }
  if (v40 <= v41) {
    unint64_t v40 = v41;
  }
  if (v42 > v46) {
    unint64_t v46 = v42;
  }
  if (v36 > v40) {
    unint64_t v40 = v36;
  }
  if (v40 > v46) {
    unint64_t v46 = v40;
  }
  unint64_t v47 = v46 + 1;
  if (v47 <= v28 + 1) {
    unint64_t v47 = v28 + 1;
  }
  uint64_t result = a1[v47];
  if (result >= 2)
  {
    if (v47 <= 3) {
      uint64_t v49 = v47;
    }
    else {
      uint64_t v49 = 4;
    }
    switch(v49)
    {
      case 1:
        int v50 = *a1;
        if (v47 < 4) {
          goto LABEL_45;
        }
        goto LABEL_47;
      case 2:
        int v50 = *(unsigned __int16 *)a1;
        if (v47 >= 4) {
          goto LABEL_47;
        }
        goto LABEL_45;
      case 3:
        int v50 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v47 < 4) {
          goto LABEL_45;
        }
        goto LABEL_47;
      case 4:
        int v50 = *(_DWORD *)a1;
        if (v47 < 4) {
LABEL_45:
        }
          uint64_t result = (v50 | ((result - 2) << (8 * v47))) + 2;
        else {
LABEL_47:
        }
          uint64_t result = (v50 + 2);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_10067E678(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v60 = v3;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v59 = v6;
  int v62 = *(_DWORD *)(v4 + 84);
  uint64_t v61 = v11;
  unint64_t v58 = ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v57 = (v13 | 7) + 16;
  uint64_t v14 = *(void *)(v12 + 64);
  uint64_t v15 = 7;
  if (!*(_DWORD *)(v12 + 84)) {
    uint64_t v15 = 8;
  }
  unint64_t v56 = ((((((((((v15
                + v14
                + ((v13
                  + ((((((v14 + ((((v13 + 12) | v13) + v14) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v16 = (((v11 | v6 | v13) + v5) & ~(v11 | v6 | v13))
      + ((((v56
          + ((v57
            + ((((v5 + v6) & ~v6) + v5 + v11) & ~v11)
            + ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16) & ~(v13 | 7))) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = *(void *)(a3 + 24);
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  unint64_t v55 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = *(void *)(v18 + 64);
  if (*(_DWORD *)(v18 + 84)) {
    unint64_t v21 = *(void *)(v18 + 64);
  }
  else {
    unint64_t v21 = v20 + 1;
  }
  unint64_t v53 = v21;
  uint64_t v22 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  uint64_t v24 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = v23 | v25 | 7;
  unint64_t v27 = ((((*(void *)(v24 + 64) + ((v25 + ((*(void *)(v22 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v25) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = ((((((v53 + v26 + ((v16 + v19 + 16) & ~v19)) & ~v26) + v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v28 <= ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v28 = ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v29 = v27 + ((v53 + v26 + ((v5 + v19) & ~v19)) & ~v26) + 16;
  if (v29 <= v28) {
    unint64_t v29 = v28;
  }
  if (((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v29) {
    unint64_t v29 = ((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v5 <= v29) {
    unint64_t v30 = v29;
  }
  else {
    unint64_t v30 = v5;
  }
  uint64_t v31 = *(void *)(v60 - 8);
  uint64_t v32 = *(void *)(v31 + 64);
  if (!*(_DWORD *)(v31 + 84)) {
    ++v32;
  }
  unint64_t v33 = v32 + ((v5 + *(unsigned __int8 *)(v31 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  if (v33 <= v30) {
    unint64_t v33 = v30;
  }
  if (v5 <= v33) {
    unint64_t v34 = v33;
  }
  else {
    unint64_t v34 = v5;
  }
  unint64_t v35 = (((v19 | v13 | v26) + v20) & ~(v19 | v13 | v26))
      + ((((v56 + ((v57 + ((((v20 + v19) & ~v19) + v20 + v26) & ~v26) + v27) & ~(v13 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = v35 + v59;
  unint64_t v37 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = (v36 + 16) & ~v59;
  if (v62) {
    unint64_t v39 = v5;
  }
  else {
    unint64_t v39 = v5 + 1;
  }
  uint64_t v40 = v39 + v61;
  unint64_t v41 = ((((((v40 + v38) & ~v61) + v58 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v41 <= ((v37 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v41 = ((v37 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (((v40 + ((v20 + v59) & ~v59)) & ~v61) + v58 + 16 > v41) {
    unint64_t v41 = ((v40 + ((v20 + v59) & ~v59)) & ~v61) + v58 + 16;
  }
  unint64_t v42 = ((v37 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v42 <= v41) {
    unint64_t v42 = v41;
  }
  if (v20 <= v42) {
    unint64_t v43 = v42;
  }
  else {
    unint64_t v43 = v20;
  }
  uint64_t v44 = *(void *)(v17 - 8);
  unint64_t v45 = (v20 + *(unsigned __int8 *)(v44 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v46 = *(void *)(v44 + 64);
  if (!*(_DWORD *)(v44 + 84)) {
    ++v46;
  }
  unint64_t v47 = v46 + v45;
  if (v47 <= v43) {
    unint64_t v47 = v43;
  }
  if (v20 > v47) {
    unint64_t v47 = v20;
  }
  unint64_t v48 = v47 + 1;
  if (v48 <= v34 + 1) {
    size_t v49 = v34 + 1;
  }
  else {
    size_t v49 = v48;
  }
  if (a2 > 1)
  {
    if (v49 <= 3) {
      char v50 = ((a2 - 2) >> (8 * v49)) + 2;
    }
    else {
      char v50 = 2;
    }
    if (v49 <= 3) {
      int v51 = (a2 - 2) & ~(-1 << (8 * v49));
    }
    else {
      int v51 = a2 - 2;
    }
    a1[v49] = v50;
    if (v49 >= 4) {
      int v52 = 4;
    }
    else {
      int v52 = v49;
    }
    bzero(a1, v49);
    switch(v52)
    {
      case 2:
        *(_WORD *)a1 = v51;
        break;
      case 3:
        *(_WORD *)a1 = v51;
        a1[2] = BYTE2(v51);
        break;
      case 4:
        *(_DWORD *)a1 = v51;
        break;
      default:
        *a1 = v51;
        break;
    }
  }
  else
  {
    a1[v49] = a2;
  }
}

uint64_t type metadata accessor for TestingOperation()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DirectionalTestingOperation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10067EE34()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    uint64_t v15 = v2;
    type metadata accessor for SnapshotItem();
    uint64_t result = sub_10096C890();
    if (v3 <= 0x3F)
    {
      uint64_t v4 = *(void *)(result - 8) + 64;
      uint64_t v17 = (char *)&value witness table for Builtin.Int64 + 64;
      uint64_t v18 = "\b";
      swift_getTupleTypeLayout();
      uint64_t v24 = &v23;
      uint64_t v15 = v2;
      uint64_t v16 = v4;
      swift_getAssociatedTypeWitness();
      uint64_t result = sub_10096C890();
      if (v5 <= 0x3F)
      {
        uint64_t v17 = (char *)(*(void *)(result - 8) + 64);
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v12 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v14 = swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
        uint64_t result = sub_10096C890();
        if (v6 <= 0x3F)
        {
          unint64_t v20 = (char *)&value witness table for Builtin.Int64 + 64;
          unint64_t v21 = "\b";
          swift_getTupleTypeLayout();
          uint64_t v25 = &v22;
          uint64_t v19 = "\b";
          swift_getTupleTypeLayout();
          uint64_t v26 = &v10;
          uint64_t v15 = v2;
          uint64_t v16 = v4;
          uint64_t v17 = (char *)&unk_1009890C0;
          uint64_t v18 = (char *)&value witness table for Builtin.Int64 + 64;
          swift_getTupleTypeLayout();
          unint64_t v27 = &v9;
          uint64_t v28 = v2;
          uint64_t v29 = v2;
          uint64_t result = sub_10096C890();
          if (v7 <= 0x3F)
          {
            swift_getTupleTypeLayout2();
            unint64_t v30 = &v8;
            uint64_t v31 = v2;
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

void *sub_10067F1B0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v500 = *(void *)(v4 + 64);
  int v496 = *(_DWORD *)(v4 + 80);
  uint64_t v514 = v3;
  uint64_t v450 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v450 - 8);
  int v492 = *(_DWORD *)(v5 + 80);
  uint64_t v444 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v444 - 8);
  int v489 = *(_DWORD *)(v6 + 80);
  uint64_t v7 = v492 & 0xF8 | v489 | 7u;
  uint64_t v455 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v455 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v460 = v8;
  int v486 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v486 | 7;
  unint64_t v11 = v7 | v496 | (unint64_t)v486;
  uint64_t v449 = v5;
  uint64_t v443 = v6;
  unsigned int v12 = *(_DWORD *)(v6 + 84);
  unsigned int v435 = *(_DWORD *)(v5 + 84);
  if (v435 > v12) {
    unsigned int v12 = *(_DWORD *)(v5 + 84);
  }
  unsigned int v433 = v12;
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  unsigned int v447 = v12;
  unsigned int v464 = *(_DWORD *)(v4 + 84);
  if (v12 <= v464) {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  if (v12 > v13) {
    unsigned int v13 = v12;
  }
  unsigned int v434 = v13;
  if (v13 <= 0x7FFFFFFF) {
    int v14 = 0x7FFFFFFF;
  }
  else {
    int v14 = v13;
  }
  int v463 = v14;
  unsigned int v451 = *(_DWORD *)(v8 + 84);
  unint64_t v467 = v500 + v496;
  uint64_t v468 = v500 + v7;
  uint64_t v448 = *(void *)(v5 + 64) + 7;
  uint64_t v442 = v489 + 8;
  uint64_t v438 = *(void *)(v6 + 64) + 7;
  uint64_t v445 = v10 + 16;
  unint64_t v456 = ((((v438 + ((v442 + (v448 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v489)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v473 = *(_DWORD *)(v8 + 80) | 7;
  uint64_t v446 = v486 + 12;
  size_t v15 = *(void *)(*(void *)(v455 - 8) + 64);
  size_t v441 = v15 + v486;
  size_t v432 = v15 + 12;
  uint64_t v439 = v486 + 10;
  uint64_t v476 = *(_DWORD *)(v8 + 80);
  unint64_t v16 = (v439
       + ((((((v15
             + 12
             + ((v441 + (v446 & ~(unint64_t)v486)) & ~(unint64_t)v486)) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v486;
  size_t v459 = v15;
  if (!v9) {
    ++v15;
  }
  size_t v465 = v15;
  unint64_t v466 = v16;
  unint64_t v461 = (v10
        + 16
        + ((v500 + v7 + ((v500 + v496) & ~(unint64_t)v496)) & ~v7)
        + v456) & ~v10;
  size_t v436 = v15 + 7;
  unint64_t v437 = ((((((((((v15 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v505 = v7 | v496 | (unint64_t)*(_DWORD *)(v8 + 80);
  unint64_t v462 = v11 + v500;
  unint64_t v454 = ((((v461 + v437 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = v454 + ((v11 + v500) & ~v11);
  unint64_t v502 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v457 = v19;
  uint64_t v458 = v18;
  int v483 = *(_DWORD *)(v19 + 80);
  unint64_t v510 = (v17 + v483) & ~(unint64_t)v483;
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v20 = *(void *)(v19 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v19 + 64) + 1;
  }
  uint64_t v453 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v453 - 8);
  int v480 = *(_DWORD *)(v21 + 80);
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(_DWORD *)(v23 + 80);
  unint64_t v25 = v480 & 0xF8 | v24 | 7;
  uint64_t v452 = v21;
  uint64_t v26 = *(unsigned int *)(v21 + 84);
  if (v26 <= *(_DWORD *)(v23 + 84)) {
    unsigned int v27 = *(_DWORD *)(v23 + 84);
  }
  else {
    unsigned int v27 = *(_DWORD *)(v21 + 84);
  }
  if (v27 <= 0x7FFFFFFE) {
    int v28 = 2147483646;
  }
  else {
    int v28 = v27;
  }
  uint64_t v29 = *(void *)(v21 + 64) + 7;
  uint64_t v30 = v24 + 8;
  unint64_t v31 = ((((*(void *)(*(void *)(v22 - 8) + 64) + 7 + ((v24 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v24)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t __n = v20;
  unint64_t v32 = v20 + v25;
  unint64_t v33 = ((((((v20 + v25 + v510) & ~v25) + v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v34 = v500 + v483;
  uint64_t v35 = *(void *)(v514 - 8);
  unint64_t v36 = v31 + ((v20 + v25 + (v34 & ~(unint64_t)v483)) & ~v25) + 16;
  uint64_t v37 = *(_DWORD *)(v35 + 80);
  if (*(_DWORD *)(v35 + 84)) {
    size_t v38 = *(void *)(*(void *)(v514 - 8) + 64);
  }
  else {
    size_t v38 = *(void *)(*(void *)(v514 - 8) + 64) + 1;
  }
  unint64_t v39 = ((v502 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v500 > v39) {
    unint64_t v39 = v500;
  }
  uint64_t v40 = v500 + v37;
  if (v33 <= v36) {
    unint64_t v33 = v31 + ((v32 + (v34 & ~(unint64_t)v483)) & ~v25) + 16;
  }
  unint64_t v41 = (v40 & ~v37) + v38;
  if (((v502 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v41) {
    unint64_t v41 = ((v502 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v39 > v33) {
    unint64_t v33 = v39;
  }
  if (v33 <= v41) {
    unint64_t v42 = v41;
  }
  else {
    unint64_t v42 = v33;
  }
  uint64_t v511 = v483;
  unint64_t v43 = v505 | v483 | v25 | v37;
  if (v43 != 7
    || ((v492 | v496 | v489 | v486 | v483 | v480 | *(_DWORD *)(v23 + 80) | *(_DWORD *)(v35 + 80)) & 0x100000) != 0
    || v42 + 1 > 0x18)
  {
    uint64_t v51 = *(void *)a2;
    *a1 = *(void *)a2;
    int v52 = (void *)(v51 + ((v43 + 16) & ~v43));
    swift_retain();
    return v52;
  }
  unsigned int v44 = a2[v42];
  unsigned int v45 = v44 - 8;
  if (v44 < 8)
  {
    uint64_t v48 = v489;
    uint64_t v47 = v496;
    uint64_t v49 = v492 & 0xF8 | v489 | 7u;
  }
  else
  {
    if (v42 <= 3) {
      uint64_t v46 = v42;
    }
    else {
      uint64_t v46 = 4;
    }
    uint64_t v48 = v489;
    uint64_t v47 = v496;
    uint64_t v49 = v492 & 0xF8 | v489 | 7u;
    switch(v46)
    {
      case 1:
        int v50 = *a2;
        if (v42 < 4) {
          goto LABEL_58;
        }
        goto LABEL_59;
      case 2:
        int v50 = *(unsigned __int16 *)a2;
        if (v42 >= 4) {
          goto LABEL_59;
        }
        goto LABEL_58;
      case 3:
        int v50 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v42 >= 4) {
          goto LABEL_59;
        }
        goto LABEL_58;
      case 4:
        int v50 = *(_DWORD *)a2;
        if (v42 < 4) {
LABEL_58:
        }
          v50 |= v45 << (8 * v42);
LABEL_59:
        unsigned int v44 = v50 + 8;
        break;
      default:
        break;
    }
  }
  unint64_t v503 = v32;
  int v504 = v28;
  unsigned int v501 = v27;
  unint64_t v54 = ~v505;
  uint64_t v55 = ~v47;
  uint64_t v506 = ~v49;
  uint64_t v56 = ~v48;
  uint64_t v57 = ~v476;
  uint64_t v58 = ~v25;
  uint64_t v59 = ~v24;
  uint64_t v60 = ~v37;
  switch(v44)
  {
    case 1u:
      uint64_t v494 = v56;
      uint64_t v66 = ~v473;
      unint64_t v471 = ~(unint64_t)v483;
      uint64_t v431 = v58;
      uint64_t v477 = v59;
      uint64_t v498 = v57;
      unsigned int v470 = *(_DWORD *)(v23 + 84);
      uint64_t v472 = v29;
      uint64_t v474 = *(void *)(*(void *)(v22 - 8) + 64) + 7;
      uint64_t v484 = v30;
      uint64_t v487 = *(void *)(v22 - 8);
      uint64_t v490 = v22;
      size_t v481 = v31;
      unint64_t v516 = v42;
      unint64_t v430 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16);
      v430(a1, a2, AssociatedTypeWitness);
      uint64_t v67 = (void *)(((unint64_t)a1 + v462) & v54);
      int v68 = (unsigned __int8 *)((unint64_t)&a2[v462] & v54);
      long long v521 = v68;
      if (v464 == v463)
      {
        int v69 = (*(uint64_t (**)(void))(v4 + 48))();
        uint64_t v70 = v455;
        goto LABEL_104;
      }
      unint64_t v88 = (unint64_t)&v68[v467] & v55;
      unint64_t v89 = (v468 + v88) & v506;
      uint64_t v70 = v455;
      if (v447 == v463)
      {
        if (v435 == v447)
        {
          int v69 = (*(uint64_t (**)(unint64_t))(v5 + 48))((v468 + v88) & v506);
          goto LABEL_104;
        }
        unint64_t v130 = (unint64_t *)((v448 + v89) & 0xFFFFFFFFFFFFFFF8);
        int v52 = a1;
        if (v433 <= 0x7FFFFFFE)
        {
          unint64_t v131 = *v130;
          if (v131 >= 0xFFFFFFFF) {
            LODWORD(v131) = -1;
          }
          uint64_t v106 = v66;
          if ((v131 + 1) >= 2) {
            goto LABEL_105;
          }
LABEL_159:
          v430(v67, v521, AssociatedTypeWitness);
          unint64_t v469 = v67;
          v430((void *)(((unint64_t)v67 + v467) & v55), (unsigned __int8 *)v88, AssociatedTypeWitness);
          unint64_t v214 = (v468 + (((unint64_t)v67 + v467) & v55)) & v506;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v449 + 16))(v214, v89, v450);
          uint64_t v215 = (void *)((v448 + v214) & 0xFFFFFFFFFFFFFFF8);
          size_t v216 = (void *)((v448 + v89) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v215 = *v216;
          unint64_t v217 = ((unint64_t)v215 + v442) & v494;
          unint64_t v218 = ((unint64_t)v216 + v442) & v494;
          int v219 = *(void (**)(unint64_t, unint64_t, uint64_t))(v443 + 16);
          swift_bridgeObjectRetain();
          v219(v217, v218, v444);
          unint64_t v220 = (void *)((v438 + v218) & 0xFFFFFFFFFFFFFFF8);
          int v221 = (void *)((v438 + v217) & 0xFFFFFFFFFFFFFFF8);
          void *v221 = *v220;
          uint64_t v222 = (void *)(((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v223 = (void *)(((unint64_t)v220 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v222 = *v223;
          v222[1] = v223[1];
          char v224 = (void *)(v456 + v214);
          void *v224 = *(void *)(v456 + v89);
          v224[1] = *(void *)(v456 + v89 + 8);
          unint64_t v225 = (v445 + v456 + v214) & v106;
          unint64_t v226 = (v445 + v456 + v89) & v106;
          *(unsigned char *)unint64_t v225 = *(unsigned char *)v226;
          uint64_t v227 = v225 | 4;
          int v228 = *(_DWORD *)(v226 | 4);
          *(unsigned char *)(v227 + 4) = *(unsigned char *)((v226 | 4) + 4);
          *(_DWORD *)uint64_t v227 = v228;
          *(_WORD *)(v225 + 10) = *(_WORD *)(v226 + 10);
          unint64_t v508 = v225;
          uint64_t v229 = (v446 + v225) & v498;
          uint64_t v230 = (v446 + v226) & v498;
          unint64_t v231 = *(void (**)(uint64_t, uint64_t, uint64_t))(v460 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v231(v229, v230, v70);
          uint64_t v232 = (v441 + v229) & v498;
          uint64_t v233 = (v441 + v230) & v498;
          v231(v232, v233, v70);
          v234 = (unsigned char *)(v232 + v459);
          unsigned char *v234 = *(unsigned char *)(v233 + v459);
          v234[1] = *(unsigned char *)(v233 + v459 + 1);
          v234[2] = *(unsigned char *)(v233 + v459 + 2);
          v234[3] = *(unsigned char *)(v233 + v459 + 3);
          v234[4] = *(unsigned char *)(v233 + v459 + 4);
          unint64_t v235 = (v232 + v459 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v236 = (v233 + v459 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v235 = *(void *)v236;
          *(void *)(v235 + 8) = *(void *)(v236 + 8);
          *(unsigned char *)(v235 + 16) = *(unsigned char *)(v236 + 16);
          *(unsigned char *)(v235 + 17) = *(unsigned char *)(v236 + 17);
          *(unsigned char *)(v235 + 18) = *(unsigned char *)(v236 + 18);
          *(unsigned char *)(v235 + 19) = *(unsigned char *)(v236 + 19);
          unint64_t v237 = (v235 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v238 = (v236 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v237 = *(void *)v238;
          *(unsigned char *)(v237 + 8) = *(unsigned char *)(v238 + 8);
          *(unsigned char *)(v237 + 9) = *(unsigned char *)(v238 + 9);
          *(unsigned char *)(v237 + 10) = *(unsigned char *)(v238 + 10);
          *(unsigned char *)(v237 + 11) = *(unsigned char *)(v238 + 11);
          *(unsigned char *)(v237 + 12) = *(unsigned char *)(v238 + 12);
          v239 = (void *)((v236 + 47) & 0xFFFFFFFFFFFFFFF8);
          size_t v240 = (void *)((v235 + 47) & 0xFFFFFFFFFFFFFFF8);
          *size_t v240 = *v239;
          unint64_t v241 = ((unint64_t)v240 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v242 = ((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v241 = *(void *)v242;
          *(unsigned char *)(v241 + 8) = *(unsigned char *)(v242 + 8);
          *(unsigned char *)(v241 + 9) = *(unsigned char *)(v242 + 9);
          unint64_t v243 = (void *)((v439 + v241) & v498);
          unint64_t v244 = (const void *)((v439 + v242) & v498);
          unint64_t v245 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v460 + 48);
          swift_bridgeObjectRetain();
          if (v245(v244, 1, v70))
          {
            memcpy(v243, v244, v465);
          }
          else
          {
            v231((uint64_t)v243, (uint64_t)v244, v70);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v460 + 56))(v243, 0, 1, v70);
          }
          unint64_t v246 = (void *)(((unint64_t)v243 + v436) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v247 = (void *)(((unint64_t)v244 + v436) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v246 = *v247;
          unint64_t v248 = ((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v249 = ((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v250 = *(void *)v249;
          *(unsigned char *)(v248 + 8) = *(unsigned char *)(v249 + 8);
          *(void *)unint64_t v248 = v250;
          unint64_t v251 = (void *)(((unint64_t)v246 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v252 = (void *)(((unint64_t)v247 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v251 = *v252;
          unint64_t v253 = ((unint64_t)v251 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v254 = (uint64_t *)(((unint64_t)v252 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v255 = v254[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v255 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v253 = *(_OWORD *)v254;
          }
          else
          {
            uint64_t v256 = *v254;
            sub_10001EBB0(*v254, v255);
            *(void *)unint64_t v253 = v256;
            *(void *)(v253 + 8) = v255;
          }
          unsigned int v257 = v451;
          unint64_t v258 = (v253 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v259 = ((unint64_t)v254 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v260 = *(void *)v259;
          *(unsigned char *)(v258 + 8) = *(unsigned char *)(v259 + 8);
          *(void *)unint64_t v258 = v260;
          *(unsigned char *)(v258 + 9) = *(unsigned char *)(v259 + 9);
          unint64_t v261 = (v258 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v262 = (v259 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v263 = *(_DWORD *)v262;
          *(unsigned char *)(v261 + 4) = *(unsigned char *)(v262 + 4);
          *(_DWORD *)unint64_t v261 = v263;
          unint64_t v264 = (void *)((v258 + 25) & 0xFFFFFFFFFFFFFFF8);
          size_t v265 = (void *)((v259 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v264 = *v265;
          v264[1] = v265[1];
          unint64_t v266 = v437 + v508;
          unint64_t v267 = v437 + v226;
          unint64_t v268 = *(void *)(v267 + 16);
          if (v268 >= 0xFFFFFFFF) {
            LODWORD(v268) = -1;
          }
          int v269 = v268 - 1;
          swift_bridgeObjectRetain();
          if (v269 < 0)
          {
            *(void *)unint64_t v266 = *(void *)v267;
            *(unsigned char *)(v266 + 8) = *(unsigned char *)(v267 + 8);
            *(unsigned char *)(v266 + 9) = *(unsigned char *)(v267 + 9);
            uint64_t v282 = *(void *)(v267 + 16);
            swift_errorRetain();
            *(void *)(v266 + 16) = v282;
            uint64_t v283 = *(void *)(v267 + 24);
            swift_errorRetain();
            *(void *)(v266 + 24) = v283;
            *(unsigned char *)(v266 + 32) = *(unsigned char *)(v267 + 32);
            *(unsigned char *)(v266 + 33) = *(unsigned char *)(v267 + 33);
            *(unsigned char *)(v266 + 34) = *(unsigned char *)(v267 + 34);
            *(void *)(v266 + 40) = *(void *)(v267 + 40);
            *(void *)(v266 + 48) = *(void *)(v267 + 48);
            *(void *)(v266 + 56) = *(void *)(v267 + 56);
            *(void *)(v266 + 64) = *(void *)(v267 + 64);
            *(unsigned char *)(v266 + 72) = *(unsigned char *)(v267 + 72);
            *(void *)(v266 + 80) = *(void *)(v267 + 80);
            *(void *)(v266 + 88) = *(void *)(v267 + 88);
            unint64_t v284 = *(void **)(v267 + 96);
            *(void *)(v266 + 96) = v284;
            *(unsigned char *)(v266 + 104) = *(unsigned char *)(v267 + 104);
            *(unsigned char *)(v266 + 105) = *(unsigned char *)(v267 + 105);
            *(void *)(v266 + 112) = *(void *)(v267 + 112);
            *(void *)(v266 + 120) = *(void *)(v267 + 120);
            *(void *)(v266 + 128) = *(void *)(v267 + 128);
            *(void *)(v266 + 136) = *(void *)(v267 + 136);
            *(void *)(v266 + 144) = *(void *)(v267 + 144);
            *(void *)(v266 + 152) = *(void *)(v267 + 152);
            *(void *)(v266 + 160) = *(void *)(v267 + 160);
            *(void *)(v266 + 168) = *(void *)(v267 + 168);
            *(unsigned char *)(v266 + 176) = *(unsigned char *)(v267 + 176);
            *(void *)(v266 + 184) = *(void *)(v267 + 184);
            uint64_t v285 = *(void *)(v267 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v286 = v284;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v285)
            {
              *(void *)(v266 + 192) = v285;
              *(void *)(v266 + 200) = *(void *)(v267 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v266 + 192) = *(_OWORD *)(v267 + 192);
            }
            unsigned int v257 = v451;
            size_t v108 = v459;
            *(void *)(v266 + 208) = *(void *)(v267 + 208);
            *(void *)(v266 + 216) = *(void *)(v267 + 216);
            *(void *)(v266 + 224) = *(void *)(v267 + 224);
            *(void *)(v266 + 232) = *(void *)(v267 + 232);
            *(void *)(v266 + 240) = *(void *)(v267 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v270 = *(_OWORD *)v267;
            long long v271 = *(_OWORD *)(v267 + 16);
            long long v272 = *(_OWORD *)(v267 + 48);
            *(_OWORD *)(v266 + 32) = *(_OWORD *)(v267 + 32);
            *(_OWORD *)(v266 + 48) = v272;
            *(_OWORD *)unint64_t v266 = v270;
            *(_OWORD *)(v266 + 16) = v271;
            long long v273 = *(_OWORD *)(v267 + 64);
            long long v274 = *(_OWORD *)(v267 + 80);
            long long v275 = *(_OWORD *)(v267 + 112);
            *(_OWORD *)(v266 + 96) = *(_OWORD *)(v267 + 96);
            *(_OWORD *)(v266 + 112) = v275;
            *(_OWORD *)(v266 + 64) = v273;
            *(_OWORD *)(v266 + 80) = v274;
            long long v276 = *(_OWORD *)(v267 + 128);
            long long v277 = *(_OWORD *)(v267 + 144);
            long long v278 = *(_OWORD *)(v267 + 176);
            *(_OWORD *)(v266 + 160) = *(_OWORD *)(v267 + 160);
            *(_OWORD *)(v266 + 176) = v278;
            *(_OWORD *)(v266 + 128) = v276;
            *(_OWORD *)(v266 + 144) = v277;
            long long v279 = *(_OWORD *)(v267 + 192);
            long long v280 = *(_OWORD *)(v267 + 208);
            long long v281 = *(_OWORD *)(v267 + 224);
            *(void *)(v266 + 240) = *(void *)(v267 + 240);
            *(_OWORD *)(v266 + 208) = v280;
            *(_OWORD *)(v266 + 224) = v281;
            *(_OWORD *)(v266 + 192) = v279;
            size_t v108 = v459;
          }
          long long v378 = (_OWORD *)((v266 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v379 = (long long *)((v267 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v380 = *v379;
          *(_OWORD *)((char *)v378 + 9) = *(long long *)((char *)v379 + 9);
          _OWORD *v378 = v380;
          unint64_t v381 = (v266 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v382 = (v267 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v383 = *(_OWORD *)v382;
          *(unsigned char *)(v381 + 16) = *(unsigned char *)(v382 + 16);
          *(_OWORD *)unint64_t v381 = v383;
          long long v384 = (void *)((v266 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v385 = (v267 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v386 = *(void *)v385;
          v385 += 15;
          *long long v384 = v386;
          unint64_t v387 = (void *)(((unint64_t)v384 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v388 = *(void *)(v385 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v389 = *(void *)((v385 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v388, v389);
          *unint64_t v387 = v388;
          v387[1] = v389;
          int v52 = a1;
          unint64_t v107 = v521;
          uint64_t v67 = v469;
          if (v257)
          {
LABEL_193:
            unint64_t v390 = ((((v461
                     + ((((((((((v466 + v108 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            uint64_t v391 = (void *)(((unint64_t)v67 + v511 + v390) & v471);
            size_t v392 = (const void *)((unint64_t)&v107[v511 + v390] & v471);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v457 + 48))(v392, 1, v458))
            {
              memcpy(v391, v392, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v457 + 16))(v391, v392, v458);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v457 + 56))(v391, 0, 1, v458);
            }
            uint64_t v393 = v472;
            size_t v394 = (char *)(((unint64_t)v391 + v503) & v431);
            unint64_t v395 = (char *)(((unint64_t)v392 + v503) & v431);
            if (v26 == v504)
            {
              int v396 = (*(uint64_t (**)(char *, void, uint64_t))(v452 + 48))(v395, v26, v453);
            }
            else
            {
              unint64_t v397 = (uint64_t *)((unint64_t)&v395[v472] & 0xFFFFFFFFFFFFFFF8);
              if (v501 <= 0x7FFFFFFE)
              {
                uint64_t v398 = *v397;
                if ((unint64_t)*v397 >= 0xFFFFFFFF) {
                  LODWORD(v398) = -1;
                }
                if ((v398 + 1) >= 2) {
                  goto LABEL_205;
                }
                goto LABEL_207;
              }
              int v396 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v487 + 48))(((unint64_t)v397 + v484) & v477, v470, v490);
            }
            uint64_t v393 = v472;
            if (v396)
            {
LABEL_205:
              size_t v399 = v481;
              memcpy(v394, v395, v481);
LABEL_208:
              *(void *)&v394[v399] = *(void *)&v395[v399];
              size_t v409 = (void *)((unint64_t)&v394[v399 + 15] & 0xFFFFFFFFFFFFFFF8);
              unint64_t v410 = (void *)((unint64_t)&v395[v399 + 15] & 0xFFFFFFFFFFFFFFF8);
              *size_t v409 = *v410;
              int v126 = *(void **)(((unint64_t)v410 + 15) & 0xFFFFFFFFFFFFFFF8);
              *(void *)(((unint64_t)v409 + 15) & 0xFFFFFFFFFFFFFFF8) = v126;
              char v127 = 1;
              goto LABEL_209;
            }
            unint64_t v397 = (uint64_t *)((unint64_t)&v395[v472] & 0xFFFFFFFFFFFFFFF8);
LABEL_207:
            uint64_t v400 = v393;
            (*(void (**)(char *, char *, uint64_t))(v452 + 16))(v394, v395, v453);
            long long v401 = (void *)((unint64_t)&v394[v400] & 0xFFFFFFFFFFFFFFF8);
            *long long v401 = *v397;
            unint64_t v402 = ((unint64_t)v401 + v484) & v477;
            unint64_t v403 = ((unint64_t)v397 + v484) & v477;
            size_t v404 = *(void (**)(unint64_t, unint64_t, uint64_t))(v487 + 16);
            swift_bridgeObjectRetain();
            v404(v402, v403, v490);
            uint64_t v405 = (void *)((v474 + v402) & 0xFFFFFFFFFFFFFFF8);
            int v406 = (void *)((v474 + v403) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v405 = *v406;
            long long v407 = (void *)(((unint64_t)v405 + 15) & 0xFFFFFFFFFFFFFFF8);
            size_t v408 = (void *)(((unint64_t)v406 + 15) & 0xFFFFFFFFFFFFFFF8);
            *long long v407 = *v408;
            v407[1] = v408[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            size_t v399 = v481;
            goto LABEL_208;
          }
LABEL_106:
          size_t v108 = v465;
          goto LABEL_193;
        }
        int v139 = (*(uint64_t (**)(unint64_t))(v443 + 48))(((unint64_t)v130 + v442) & v494);
      }
      else
      {
        unint64_t v104 = v456 + v89;
        if ((v434 & 0x80000000) == 0)
        {
          unint64_t v105 = *(void *)(v104 + 8);
          if (v105 >= 0xFFFFFFFF) {
            LODWORD(v105) = -1;
          }
          int v69 = v105 + 1;
LABEL_104:
          uint64_t v106 = v66;
          int v52 = a1;
          if (v69)
          {
LABEL_105:
            unint64_t v107 = v521;
            memcpy(v67, v521, v454);
            goto LABEL_106;
          }
          goto LABEL_158;
        }
        uint64_t v138 = (v446 + ((v445 + v104) & v66)) & v498;
        int v52 = a1;
        if (v451 <= 0x7FFFFFFD)
        {
          uint64_t v106 = v66;
          unint64_t v429 = *(void *)(((v432 + ((v441 + v138) & v498)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v429 >= 0xFFFFFFFF) {
            LODWORD(v429) = -1;
          }
          if ((v429 + 1) >= 2) {
            goto LABEL_105;
          }
          goto LABEL_159;
        }
        int v139 = (*(uint64_t (**)(uint64_t))(v460 + 48))(v138);
      }
      uint64_t v106 = v66;
      if (v139) {
        goto LABEL_105;
      }
LABEL_158:
      unint64_t v88 = (unint64_t)&v521[v467] & v55;
      unint64_t v89 = (v468 + v88) & v506;
      goto LABEL_159;
    case 2u:
      uint64_t v71 = v58;
      uint64_t v475 = *(void *)(*(void *)(v22 - 8) + 64) + 7;
      uint64_t v478 = v59;
      uint64_t v72 = *(unsigned int *)(v23 + 84);
      uint64_t v73 = v29;
      uint64_t v485 = v30;
      uint64_t v488 = *(void *)(v22 - 8);
      uint64_t v491 = v22;
      size_t v482 = v31;
      unint64_t v516 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      uint64_t v74 = (void *)(((unint64_t)a1 + v34) & ~v511);
      uint64_t v75 = (const void *)((unint64_t)&a2[v34] & ~v511);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v457 + 48))(v75, 1, v458))
      {
        memcpy(v74, v75, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v457 + 16))(v74, v75, v458);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v457 + 56))(v74, 0, 1, v458);
      }
      unint64_t v92 = (char *)(((unint64_t)v74 + v503) & v71);
      int v93 = (char *)(((unint64_t)v75 + v503) & v71);
      if (v26 == v504)
      {
        int v94 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v452 + 48))(v93, v26, v453);
      }
      else
      {
        unint64_t v95 = (uint64_t *)((unint64_t)&v93[v73] & 0xFFFFFFFFFFFFFFF8);
        if (v501 <= 0x7FFFFFFE)
        {
          uint64_t v96 = v73;
          uint64_t v97 = *v95;
          if ((unint64_t)*v95 >= 0xFFFFFFFF) {
            LODWORD(v97) = -1;
          }
          if ((v97 + 1) >= 2) {
            goto LABEL_116;
          }
          goto LABEL_118;
        }
        int v94 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v488 + 48))(((unint64_t)v95 + v485) & v478, v72, v491);
      }
      uint64_t v96 = v73;
      if (v94)
      {
LABEL_116:
        size_t v115 = v482;
        memcpy(v92, v93, v482);
        goto LABEL_119;
      }
      unint64_t v95 = (uint64_t *)((unint64_t)&v93[v73] & 0xFFFFFFFFFFFFFFF8);
LABEL_118:
      uint64_t v116 = v96;
      (*(void (**)(char *, char *, uint64_t))(v452 + 16))(v92, v93, v453);
      size_t v117 = (void *)((unint64_t)&v92[v116] & 0xFFFFFFFFFFFFFFF8);
      void *v117 = *v95;
      unint64_t v118 = ((unint64_t)v117 + v485) & v478;
      unint64_t v119 = ((unint64_t)v95 + v485) & v478;
      unint64_t v120 = *(void (**)(unint64_t, unint64_t, uint64_t))(v488 + 16);
      swift_bridgeObjectRetain();
      v120(v118, v119, v491);
      unint64_t v121 = (void *)((v475 + v118) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v122 = (void *)((v475 + v119) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v121 = *v122;
      size_t v123 = (void *)(((unint64_t)v121 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v124 = (void *)(((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8);
      *size_t v123 = *v124;
      v123[1] = v124[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v115 = v482;
LABEL_119:
      unint64_t v125 = &v92[v115];
      *unint64_t v125 = v93[v115];
      int v126 = *(void **)&v93[v115 + 8];
      *((void *)v125 + 1) = v126;
      char v127 = 2;
LABEL_209:
      *((unsigned char *)v52 + v516) = v127;
      id v411 = v126;
      return v52;
    case 3u:
      uint64_t v495 = v56;
      uint64_t v499 = ~v476;
      unint64_t v517 = v42;
      unint64_t v76 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16);
      int v77 = a2;
      v76(a1, a2, AssociatedTypeWitness);
      uint64_t v513 = (void *)(((unint64_t)a1 + v462) & v54);
      unint64_t v78 = (void *)((unint64_t)&a2[v462] & v54);
      long long v522 = v78;
      if (v464 == v463)
      {
        int v79 = (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&v77[v462] & v54);
        unint64_t v78 = v522;
        uint64_t v80 = v460;
        goto LABEL_111;
      }
      unint64_t v90 = ((unint64_t)v78 + v467) & v55;
      unint64_t v91 = (v468 + v90) & v506;
      uint64_t v80 = v460;
      if (v447 == v463)
      {
        if (v435 == v447)
        {
          int v79 = (*(uint64_t (**)(unint64_t))(v5 + 48))((v468 + v90) & v506);
          unint64_t v78 = v522;
          goto LABEL_111;
        }
        unint64_t v132 = (unint64_t *)((v448 + v91) & 0xFFFFFFFFFFFFFFF8);
        int v52 = a1;
        if (v433 <= 0x7FFFFFFE)
        {
          unint64_t v133 = *v132;
          if (v133 >= 0xFFFFFFFF) {
            LODWORD(v133) = -1;
          }
          uint64_t v111 = ~v473;
          if ((v133 + 1) >= 2) {
            goto LABEL_112;
          }
          goto LABEL_174;
        }
        int v135 = (*(uint64_t (**)(unint64_t))(v443 + 48))(((unint64_t)v132 + v442) & v495);
LABEL_172:
        unint64_t v78 = v522;
        uint64_t v111 = ~v473;
        if (v135) {
          goto LABEL_112;
        }
LABEL_173:
        unint64_t v90 = ((unint64_t)v78 + v467) & v55;
        unint64_t v91 = (v468 + v90) & v506;
        goto LABEL_174;
      }
      unint64_t v109 = v456 + v91;
      if ((v434 & 0x80000000) == 0)
      {
        unint64_t v110 = *(void *)(v109 + 8);
        if (v110 >= 0xFFFFFFFF) {
          LODWORD(v110) = -1;
        }
        int v79 = v110 + 1;
LABEL_111:
        uint64_t v111 = ~v473;
        int v52 = a1;
        if (v79)
        {
LABEL_112:
          size_t v112 = v513;
          memcpy(v513, v78, v454);
          unint64_t v113 = v461;
LABEL_113:
          size_t v114 = v465;
          goto LABEL_213;
        }
        goto LABEL_173;
      }
      uint64_t v134 = (v446 + ((v445 + v109) & ~v473)) & v499;
      int v52 = a1;
      if (v451 > 0x7FFFFFFD)
      {
        int v135 = (*(uint64_t (**)(uint64_t))(v460 + 48))(v134);
        goto LABEL_172;
      }
      uint64_t v111 = ~v473;
      unint64_t v427 = *(void *)(((v432 + ((v441 + v134) & v499)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v427 >= 0xFFFFFFFF) {
        LODWORD(v427) = -1;
      }
      if ((v427 + 1) >= 2) {
        goto LABEL_112;
      }
LABEL_174:
      uint64_t v287 = v111;
      v76(v513, (unsigned __int8 *)v78, AssociatedTypeWitness);
      v76((void *)(((unint64_t)v513 + v467) & v55), (unsigned __int8 *)v90, AssociatedTypeWitness);
      unint64_t v288 = (v468 + (((unint64_t)v513 + v467) & v55)) & v506;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v449 + 16))(v288, v91, v450);
      unint64_t v289 = (void *)((v448 + v288) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v290 = (void *)((v448 + v91) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v289 = *v290;
      unint64_t v291 = ((unint64_t)v289 + v442) & v495;
      unint64_t v292 = ((unint64_t)v290 + v442) & v495;
      uint64_t v293 = *(void (**)(unint64_t, unint64_t, uint64_t))(v443 + 16);
      swift_bridgeObjectRetain();
      v293(v291, v292, v444);
      unint64_t v294 = (void *)((v438 + v292) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v295 = (void *)((v438 + v291) & 0xFFFFFFFFFFFFFFF8);
      void *v295 = *v294;
      unint64_t v296 = (void *)(((unint64_t)v295 + 15) & 0xFFFFFFFFFFFFFFF8);
      v297 = (void *)(((unint64_t)v294 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v296 = *v297;
      v296[1] = v297[1];
      unint64_t v298 = (void *)(v456 + v288);
      unint64_t v299 = v456 + v91;
      void *v298 = *(void *)(v456 + v91);
      v298[1] = *(void *)(v456 + v91 + 8);
      unint64_t v300 = (v445 + v456 + v288) & v287;
      uint64_t v301 = (v445 + v299) & v287;
      *(unsigned char *)unint64_t v300 = *(unsigned char *)v301;
      uint64_t v302 = v300 | 4;
      int v303 = *(_DWORD *)(v301 | 4);
      *(unsigned char *)(v302 + 4) = *(unsigned char *)((v301 | 4) + 4);
      *(_DWORD *)uint64_t v302 = v303;
      *(_WORD *)(v300 + 10) = *(_WORD *)(v301 + 10);
      uint64_t v304 = (v446 + v300) & v499;
      uint64_t v305 = (v446 + v301) & v499;
      unint64_t v306 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v306(v304, v305, v455);
      uint64_t v307 = (v441 + v304) & v499;
      uint64_t v308 = (v441 + v305) & v499;
      v306(v307, v308, v455);
      size_t v309 = (unsigned char *)(v307 + v459);
      unsigned char *v309 = *(unsigned char *)(v308 + v459);
      v309[1] = *(unsigned char *)(v308 + v459 + 1);
      v309[2] = *(unsigned char *)(v308 + v459 + 2);
      v309[3] = *(unsigned char *)(v308 + v459 + 3);
      v309[4] = *(unsigned char *)(v308 + v459 + 4);
      unint64_t v310 = (v307 + v459 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v311 = (v308 + v459 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v310 = *(void *)v311;
      *(void *)(v310 + 8) = *(void *)(v311 + 8);
      *(unsigned char *)(v310 + 16) = *(unsigned char *)(v311 + 16);
      *(unsigned char *)(v310 + 17) = *(unsigned char *)(v311 + 17);
      *(unsigned char *)(v310 + 18) = *(unsigned char *)(v311 + 18);
      *(unsigned char *)(v310 + 19) = *(unsigned char *)(v311 + 19);
      unint64_t v312 = (v310 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v313 = (v311 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v312 = *(void *)v313;
      *(unsigned char *)(v312 + 8) = *(unsigned char *)(v313 + 8);
      *(unsigned char *)(v312 + 9) = *(unsigned char *)(v313 + 9);
      *(unsigned char *)(v312 + 10) = *(unsigned char *)(v313 + 10);
      *(unsigned char *)(v312 + 11) = *(unsigned char *)(v313 + 11);
      *(unsigned char *)(v312 + 12) = *(unsigned char *)(v313 + 12);
      size_t v314 = (void *)((v311 + 47) & 0xFFFFFFFFFFFFFFF8);
      size_t v315 = (void *)((v310 + 47) & 0xFFFFFFFFFFFFFFF8);
      *size_t v315 = *v314;
      unint64_t v316 = ((unint64_t)v315 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v317 = ((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v316 = *(void *)v317;
      *(unsigned char *)(v316 + 8) = *(unsigned char *)(v317 + 8);
      *(unsigned char *)(v316 + 9) = *(unsigned char *)(v317 + 9);
      size_t v318 = (void *)((v439 + v316) & v499);
      size_t v319 = (const void *)((v439 + v317) & v499);
      size_t v320 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v80 + 48);
      swift_bridgeObjectRetain();
      if (v320(v319, 1, v455))
      {
        memcpy(v318, v319, v465);
      }
      else
      {
        v306((uint64_t)v318, (uint64_t)v319, v455);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v318, 0, 1, v455);
      }
      unint64_t v321 = (void *)(((unint64_t)v318 + v436) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v322 = (void *)(((unint64_t)v319 + v436) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v321 = *v322;
      unint64_t v323 = ((unint64_t)v321 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v324 = ((unint64_t)v322 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v325 = *(void *)v324;
      *(unsigned char *)(v323 + 8) = *(unsigned char *)(v324 + 8);
      *(void *)unint64_t v323 = v325;
      unint64_t v326 = (void *)(((unint64_t)v321 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v327 = (void *)(((unint64_t)v322 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v326 = *v327;
      unint64_t v328 = ((unint64_t)v326 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v329 = (uint64_t *)(((unint64_t)v327 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v330 = v329[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v330 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v328 = *(_OWORD *)v329;
      }
      else
      {
        uint64_t v331 = *v329;
        sub_10001EBB0(*v329, v330);
        *(void *)unint64_t v328 = v331;
        *(void *)(v328 + 8) = v330;
      }
      unint64_t v332 = (v328 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v333 = ((unint64_t)v329 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v334 = *(void *)v333;
      *(unsigned char *)(v332 + 8) = *(unsigned char *)(v333 + 8);
      *(void *)unint64_t v332 = v334;
      *(unsigned char *)(v332 + 9) = *(unsigned char *)(v333 + 9);
      unint64_t v335 = (v332 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v336 = (v333 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v337 = *(_DWORD *)v336;
      *(unsigned char *)(v335 + 4) = *(unsigned char *)(v336 + 4);
      *(_DWORD *)unint64_t v335 = v337;
      long long v338 = (void *)((v332 + 25) & 0xFFFFFFFFFFFFFFF8);
      size_t v339 = (void *)((v333 + 25) & 0xFFFFFFFFFFFFFFF8);
      *long long v338 = *v339;
      v338[1] = v339[1];
      unint64_t v340 = v437 + v300;
      long long v341 = (long long *)(v437 + v301);
      unint64_t v342 = *((void *)v341 + 2);
      if (v342 >= 0xFFFFFFFF) {
        LODWORD(v342) = -1;
      }
      int v343 = v342 - 1;
      swift_bridgeObjectRetain();
      if (v343 < 0)
      {
        *(void *)unint64_t v340 = *(void *)v341;
        *(unsigned char *)(v340 + 8) = *((unsigned char *)v341 + 8);
        *(unsigned char *)(v340 + 9) = *((unsigned char *)v341 + 9);
        uint64_t v357 = *((void *)v341 + 2);
        swift_errorRetain();
        *(void *)(v340 + 16) = v357;
        uint64_t v358 = *((void *)v341 + 3);
        swift_errorRetain();
        *(void *)(v340 + 24) = v358;
        *(unsigned char *)(v340 + 32) = *((unsigned char *)v341 + 32);
        *(unsigned char *)(v340 + 33) = *((unsigned char *)v341 + 33);
        *(unsigned char *)(v340 + 34) = *((unsigned char *)v341 + 34);
        *(void *)(v340 + 40) = *((void *)v341 + 5);
        *(void *)(v340 + 48) = *((void *)v341 + 6);
        *(void *)(v340 + 56) = *((void *)v341 + 7);
        *(void *)(v340 + 64) = *((void *)v341 + 8);
        *(unsigned char *)(v340 + 72) = *((unsigned char *)v341 + 72);
        *(void *)(v340 + 80) = *((void *)v341 + 10);
        *(void *)(v340 + 88) = *((void *)v341 + 11);
        long long v509 = (void *)*((void *)v341 + 12);
        *(void *)(v340 + 96) = v509;
        *(unsigned char *)(v340 + 104) = *((unsigned char *)v341 + 104);
        *(unsigned char *)(v340 + 105) = *((unsigned char *)v341 + 105);
        *(void *)(v340 + 112) = *((void *)v341 + 14);
        *(void *)(v340 + 120) = *((void *)v341 + 15);
        *(void *)(v340 + 128) = *((void *)v341 + 16);
        *(void *)(v340 + 136) = *((void *)v341 + 17);
        *(void *)(v340 + 144) = *((void *)v341 + 18);
        *(void *)(v340 + 152) = *((void *)v341 + 19);
        *(void *)(v340 + 160) = *((void *)v341 + 20);
        *(void *)(v340 + 168) = *((void *)v341 + 21);
        *(unsigned char *)(v340 + 176) = *((unsigned char *)v341 + 176);
        *(void *)(v340 + 184) = *((void *)v341 + 23);
        uint64_t v359 = *((void *)v341 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v360 = v509;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v359)
        {
          *(void *)(v340 + 192) = v359;
          *(void *)(v340 + 200) = *((void *)v341 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v340 + 192) = v341[12];
        }
        unint64_t v113 = v461;
        unsigned int v356 = v451;
        *(void *)(v340 + 208) = *((void *)v341 + 26);
        *(void *)(v340 + 216) = *((void *)v341 + 27);
        *(void *)(v340 + 224) = *((void *)v341 + 28);
        *(void *)(v340 + 232) = *((void *)v341 + 29);
        *(void *)(v340 + 240) = *((void *)v341 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v344 = *v341;
        long long v345 = v341[1];
        long long v346 = v341[3];
        *(_OWORD *)(v340 + 32) = v341[2];
        *(_OWORD *)(v340 + 48) = v346;
        *(_OWORD *)unint64_t v340 = v344;
        *(_OWORD *)(v340 + 16) = v345;
        long long v347 = v341[4];
        long long v348 = v341[5];
        long long v349 = v341[7];
        *(_OWORD *)(v340 + 96) = v341[6];
        *(_OWORD *)(v340 + 112) = v349;
        *(_OWORD *)(v340 + 64) = v347;
        *(_OWORD *)(v340 + 80) = v348;
        long long v350 = v341[8];
        long long v351 = v341[9];
        long long v352 = v341[11];
        *(_OWORD *)(v340 + 160) = v341[10];
        *(_OWORD *)(v340 + 176) = v352;
        *(_OWORD *)(v340 + 128) = v350;
        *(_OWORD *)(v340 + 144) = v351;
        long long v353 = v341[12];
        long long v354 = v341[13];
        long long v355 = v341[14];
        *(void *)(v340 + 240) = *((void *)v341 + 30);
        *(_OWORD *)(v340 + 208) = v354;
        *(_OWORD *)(v340 + 224) = v355;
        *(_OWORD *)(v340 + 192) = v353;
        unint64_t v113 = v461;
        unsigned int v356 = v451;
      }
      unint64_t v412 = (_OWORD *)((v340 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v413 = (long long *)(((unint64_t)v341 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v414 = *v413;
      *(_OWORD *)((char *)v412 + 9) = *(long long *)((char *)v413 + 9);
      *unint64_t v412 = v414;
      unint64_t v415 = (v340 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v416 = ((unint64_t)v341 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v417 = *(_OWORD *)v416;
      *(unsigned char *)(v415 + 16) = *(unsigned char *)(v416 + 16);
      *(_OWORD *)unint64_t v415 = v417;
      unint64_t v418 = (void *)((v340 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v419 = ((unint64_t)v341 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v420 = *(void *)v419;
      v419 += 15;
      *unint64_t v418 = v420;
      size_t v421 = (void *)(((unint64_t)v418 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v422 = *(void *)(v419 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v423 = *(void *)((v419 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v422, v423);
      *size_t v421 = v422;
      v421[1] = v423;
      int v52 = a1;
      size_t v114 = v459;
      size_t v112 = v513;
      if (!v356) {
        goto LABEL_113;
      }
LABEL_213:
      unint64_t v424 = ((((v113
               + ((((((((((v466 + v114 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v425 = (void *)(((unint64_t)v112 + v424) & 0xFFFFFFFFFFFFFFF8);
      long long v426 = (void *)(((unint64_t)v522 + v424) & 0xFFFFFFFFFFFFFFF8);
      void *v425 = *v426;
      v425[1] = v426[1];
      *(void *)(((unint64_t)v425 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v426 + 23) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v52 + v517) = 3;
      swift_bridgeObjectRetain();
      return v52;
    case 4u:
      unint64_t v81 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v81) = 4;
      return v52;
    case 5u:
      unint64_t v82 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v82) = 5;
      return v52;
    case 6u:
      unint64_t v83 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      int v84 = (const void *)((unint64_t)&a2[v40] & v60);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v84, 1, v514))
      {
        memcpy((void *)(((unint64_t)a1 + v40) & v60), v84, v38);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v35 + 16))(((unint64_t)a1 + v40) & v60, v84, v514);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v35 + 56))(((unint64_t)a1 + v40) & v60, 0, 1, v514);
      }
      *((unsigned char *)a1 + v83) = 6;
      return v52;
    case 7u:
      unint64_t v85 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v85) = 7;
      return v52;
    default:
      uint64_t v493 = v56;
      uint64_t v497 = ~v476;
      unint64_t v515 = v42;
      uint64_t v61 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16);
      int v62 = a2;
      v61(a1, a2, AssociatedTypeWitness);
      unint64_t v512 = (void *)(((unint64_t)a1 + v462) & v54);
      int v63 = (void *)((unint64_t)&a2[v462] & v54);
      long long v520 = v63;
      if (v464 == v463)
      {
        int v64 = (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&v62[v462] & v54);
        int v63 = v520;
        uint64_t v65 = v460;
        goto LABEL_97;
      }
      unint64_t v86 = ((unint64_t)v63 + v467) & v55;
      unint64_t v87 = (v468 + v86) & v506;
      uint64_t v65 = v460;
      if (v447 == v463)
      {
        if (v435 == v447)
        {
          int v64 = (*(uint64_t (**)(unint64_t))(v5 + 48))((v468 + v86) & v506);
          int v63 = v520;
          goto LABEL_97;
        }
        int v128 = (unint64_t *)((v448 + v87) & 0xFFFFFFFFFFFFFFF8);
        int v52 = a1;
        if (v433 <= 0x7FFFFFFE)
        {
          unint64_t v129 = *v128;
          if (v129 >= 0xFFFFFFFF) {
            LODWORD(v129) = -1;
          }
          uint64_t v100 = ~v473;
          if ((v129 + 1) >= 2) {
            goto LABEL_98;
          }
LABEL_144:
          uint64_t v140 = v100;
          v61(v512, (unsigned __int8 *)v63, AssociatedTypeWitness);
          v61((void *)(((unint64_t)v512 + v467) & v55), (unsigned __int8 *)v86, AssociatedTypeWitness);
          unint64_t v141 = (v468 + (((unint64_t)v512 + v467) & v55)) & v506;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v449 + 16))(v141, v87, v450);
          unint64_t v142 = (void *)((v448 + v141) & 0xFFFFFFFFFFFFFFF8);
          int v143 = (void *)((v448 + v87) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v142 = *v143;
          unint64_t v144 = ((unint64_t)v142 + v442) & v493;
          unint64_t v145 = ((unint64_t)v143 + v442) & v493;
          size_t v146 = *(void (**)(unint64_t, unint64_t, uint64_t))(v443 + 16);
          swift_bridgeObjectRetain();
          v146(v144, v145, v444);
          unint64_t v147 = (void *)((v438 + v145) & 0xFFFFFFFFFFFFFFF8);
          size_t v148 = (void *)((v438 + v144) & 0xFFFFFFFFFFFFFFF8);
          *size_t v148 = *v147;
          unint64_t v149 = (void *)(((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v150 = (void *)(((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v149 = *v150;
          v149[1] = v150[1];
          unint64_t v151 = (void *)(v456 + v141);
          unint64_t v152 = v456 + v87;
          *unint64_t v151 = *(void *)(v456 + v87);
          v151[1] = *(void *)(v456 + v87 + 8);
          unint64_t v153 = (v445 + v456 + v141) & v140;
          uint64_t v154 = (v445 + v152) & v140;
          *(unsigned char *)unint64_t v153 = *(unsigned char *)v154;
          uint64_t v155 = v153 | 4;
          int v156 = *(_DWORD *)(v154 | 4);
          *(unsigned char *)(v155 + 4) = *(unsigned char *)((v154 | 4) + 4);
          *(_DWORD *)uint64_t v155 = v156;
          *(_WORD *)(v153 + 10) = *(_WORD *)(v154 + 10);
          uint64_t v157 = (v446 + v153) & v497;
          uint64_t v158 = (v446 + v154) & v497;
          int v159 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v159(v157, v158, v455);
          uint64_t v160 = (v441 + v157) & v497;
          uint64_t v161 = (v441 + v158) & v497;
          v159(v160, v161, v455);
          int v162 = (unsigned char *)(v160 + v459);
          *int v162 = *(unsigned char *)(v161 + v459);
          v162[1] = *(unsigned char *)(v161 + v459 + 1);
          v162[2] = *(unsigned char *)(v161 + v459 + 2);
          v162[3] = *(unsigned char *)(v161 + v459 + 3);
          v162[4] = *(unsigned char *)(v161 + v459 + 4);
          unint64_t v163 = (v160 + v459 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v164 = (v161 + v459 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v163 = *(void *)v164;
          *(void *)(v163 + 8) = *(void *)(v164 + 8);
          *(unsigned char *)(v163 + 16) = *(unsigned char *)(v164 + 16);
          *(unsigned char *)(v163 + 17) = *(unsigned char *)(v164 + 17);
          *(unsigned char *)(v163 + 18) = *(unsigned char *)(v164 + 18);
          *(unsigned char *)(v163 + 19) = *(unsigned char *)(v164 + 19);
          unint64_t v165 = (v163 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v166 = (v164 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v165 = *(void *)v166;
          *(unsigned char *)(v165 + 8) = *(unsigned char *)(v166 + 8);
          *(unsigned char *)(v165 + 9) = *(unsigned char *)(v166 + 9);
          *(unsigned char *)(v165 + 10) = *(unsigned char *)(v166 + 10);
          *(unsigned char *)(v165 + 11) = *(unsigned char *)(v166 + 11);
          *(unsigned char *)(v165 + 12) = *(unsigned char *)(v166 + 12);
          size_t v167 = (void *)((v164 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v168 = (void *)((v163 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v168 = *v167;
          unint64_t v169 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v170 = ((unint64_t)v167 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v169 = *(void *)v170;
          *(unsigned char *)(v169 + 8) = *(unsigned char *)(v170 + 8);
          *(unsigned char *)(v169 + 9) = *(unsigned char *)(v170 + 9);
          unint64_t v171 = (void *)((v439 + v169) & v497);
          uint64_t v172 = (const void *)((v439 + v170) & v497);
          unint64_t v173 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48);
          swift_bridgeObjectRetain();
          if (v173(v172, 1, v455))
          {
            memcpy(v171, v172, v465);
          }
          else
          {
            v159((uint64_t)v171, (uint64_t)v172, v455);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v171, 0, 1, v455);
          }
          size_t v174 = (void *)(((unint64_t)v171 + v436) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v175 = (void *)(((unint64_t)v172 + v436) & 0xFFFFFFFFFFFFFFF8);
          *size_t v174 = *v175;
          unint64_t v176 = ((unint64_t)v174 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v177 = ((unint64_t)v175 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v178 = *(void *)v177;
          *(unsigned char *)(v176 + 8) = *(unsigned char *)(v177 + 8);
          *(void *)unint64_t v176 = v178;
          uint64_t v179 = (void *)(((unint64_t)v174 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v180 = (void *)(((unint64_t)v175 + 31) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v179 = *v180;
          unint64_t v181 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
          size_t v182 = (uint64_t *)(((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v183 = v182[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v183 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v181 = *(_OWORD *)v182;
          }
          else
          {
            uint64_t v184 = *v182;
            sub_10001EBB0(*v182, v183);
            *(void *)unint64_t v181 = v184;
            *(void *)(v181 + 8) = v183;
          }
          unint64_t v185 = (v181 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v186 = ((unint64_t)v182 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v187 = *(void *)v186;
          *(unsigned char *)(v185 + 8) = *(unsigned char *)(v186 + 8);
          *(void *)unint64_t v185 = v187;
          *(unsigned char *)(v185 + 9) = *(unsigned char *)(v186 + 9);
          unint64_t v188 = (v185 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v189 = (v186 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v190 = *(_DWORD *)v189;
          *(unsigned char *)(v188 + 4) = *(unsigned char *)(v189 + 4);
          *(_DWORD *)unint64_t v188 = v190;
          unint64_t v191 = (void *)((v185 + 25) & 0xFFFFFFFFFFFFFFF8);
          size_t v192 = (void *)((v186 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v191 = *v192;
          v191[1] = v192[1];
          unint64_t v193 = v437 + v153;
          unint64_t v194 = (long long *)(v437 + v154);
          unint64_t v195 = *((void *)v194 + 2);
          if (v195 >= 0xFFFFFFFF) {
            LODWORD(v195) = -1;
          }
          int v196 = v195 - 1;
          swift_bridgeObjectRetain();
          if (v196 < 0)
          {
            *(void *)unint64_t v193 = *(void *)v194;
            *(unsigned char *)(v193 + 8) = *((unsigned char *)v194 + 8);
            *(unsigned char *)(v193 + 9) = *((unsigned char *)v194 + 9);
            uint64_t v210 = *((void *)v194 + 2);
            swift_errorRetain();
            *(void *)(v193 + 16) = v210;
            uint64_t v211 = *((void *)v194 + 3);
            swift_errorRetain();
            *(void *)(v193 + 24) = v211;
            *(unsigned char *)(v193 + 32) = *((unsigned char *)v194 + 32);
            *(unsigned char *)(v193 + 33) = *((unsigned char *)v194 + 33);
            *(unsigned char *)(v193 + 34) = *((unsigned char *)v194 + 34);
            *(void *)(v193 + 40) = *((void *)v194 + 5);
            *(void *)(v193 + 48) = *((void *)v194 + 6);
            *(void *)(v193 + 56) = *((void *)v194 + 7);
            *(void *)(v193 + 64) = *((void *)v194 + 8);
            *(unsigned char *)(v193 + 72) = *((unsigned char *)v194 + 72);
            *(void *)(v193 + 80) = *((void *)v194 + 10);
            *(void *)(v193 + 88) = *((void *)v194 + 11);
            unint64_t v507 = (void *)*((void *)v194 + 12);
            *(void *)(v193 + 96) = v507;
            *(unsigned char *)(v193 + 104) = *((unsigned char *)v194 + 104);
            *(unsigned char *)(v193 + 105) = *((unsigned char *)v194 + 105);
            *(void *)(v193 + 112) = *((void *)v194 + 14);
            *(void *)(v193 + 120) = *((void *)v194 + 15);
            *(void *)(v193 + 128) = *((void *)v194 + 16);
            *(void *)(v193 + 136) = *((void *)v194 + 17);
            *(void *)(v193 + 144) = *((void *)v194 + 18);
            *(void *)(v193 + 152) = *((void *)v194 + 19);
            *(void *)(v193 + 160) = *((void *)v194 + 20);
            *(void *)(v193 + 168) = *((void *)v194 + 21);
            *(unsigned char *)(v193 + 176) = *((unsigned char *)v194 + 176);
            *(void *)(v193 + 184) = *((void *)v194 + 23);
            uint64_t v212 = *((void *)v194 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v213 = v507;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v212)
            {
              *(void *)(v193 + 192) = v212;
              *(void *)(v193 + 200) = *((void *)v194 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v193 + 192) = v194[12];
            }
            unint64_t v102 = v461;
            unsigned int v209 = v451;
            *(void *)(v193 + 208) = *((void *)v194 + 26);
            *(void *)(v193 + 216) = *((void *)v194 + 27);
            *(void *)(v193 + 224) = *((void *)v194 + 28);
            *(void *)(v193 + 232) = *((void *)v194 + 29);
            *(void *)(v193 + 240) = *((void *)v194 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v197 = *v194;
            long long v198 = v194[1];
            long long v199 = v194[3];
            *(_OWORD *)(v193 + 32) = v194[2];
            *(_OWORD *)(v193 + 48) = v199;
            *(_OWORD *)unint64_t v193 = v197;
            *(_OWORD *)(v193 + 16) = v198;
            long long v200 = v194[4];
            long long v201 = v194[5];
            long long v202 = v194[7];
            *(_OWORD *)(v193 + 96) = v194[6];
            *(_OWORD *)(v193 + 112) = v202;
            *(_OWORD *)(v193 + 64) = v200;
            *(_OWORD *)(v193 + 80) = v201;
            long long v203 = v194[8];
            long long v204 = v194[9];
            long long v205 = v194[11];
            *(_OWORD *)(v193 + 160) = v194[10];
            *(_OWORD *)(v193 + 176) = v205;
            *(_OWORD *)(v193 + 128) = v203;
            *(_OWORD *)(v193 + 144) = v204;
            long long v206 = v194[12];
            long long v207 = v194[13];
            long long v208 = v194[14];
            *(void *)(v193 + 240) = *((void *)v194 + 30);
            *(_OWORD *)(v193 + 208) = v207;
            *(_OWORD *)(v193 + 224) = v208;
            *(_OWORD *)(v193 + 192) = v206;
            unint64_t v102 = v461;
            unsigned int v209 = v451;
          }
          unint64_t v361 = (_OWORD *)((v193 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v362 = (long long *)(((unint64_t)v194 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v363 = *v362;
          *(_OWORD *)((char *)v361 + 9) = *(long long *)((char *)v362 + 9);
          *unint64_t v361 = v363;
          unint64_t v364 = (v193 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v365 = ((unint64_t)v194 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v366 = *(_OWORD *)v365;
          *(unsigned char *)(v364 + 16) = *(unsigned char *)(v365 + 16);
          *(_OWORD *)unint64_t v364 = v366;
          long long v367 = (void *)((v193 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v368 = ((unint64_t)v194 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v369 = *(void *)v368;
          v368 += 15;
          *long long v367 = v369;
          long long v370 = (void *)(((unint64_t)v367 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v371 = *(void *)(v368 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v372 = *(void *)((v368 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v371, v372);
          void *v370 = v371;
          v370[1] = v372;
          int v52 = a1;
          size_t v103 = v459;
          unint64_t v101 = v512;
          if (v209)
          {
LABEL_189:
            unint64_t v373 = ((((v102
                     + ((((((((((v466 + v103 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            long long v374 = (void *)(((unint64_t)v101 + v373) & 0xFFFFFFFFFFFFFFF8);
            long long v375 = (void *)(((unint64_t)v520 + v373) & 0xFFFFFFFFFFFFFFF8);
            void *v374 = *v375;
            long long v376 = *(void **)(((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFFFF8);
            *(void *)(((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFFFF8) = v376;
            *((unsigned char *)v52 + v515) = 0;
            id v377 = v376;
            return v52;
          }
LABEL_99:
          size_t v103 = v465;
          goto LABEL_189;
        }
        int v137 = (*(uint64_t (**)(unint64_t))(v443 + 48))(((unint64_t)v128 + v442) & v493);
      }
      else
      {
        unint64_t v98 = v456 + v87;
        if ((v434 & 0x80000000) == 0)
        {
          unint64_t v99 = *(void *)(v98 + 8);
          if (v99 >= 0xFFFFFFFF) {
            LODWORD(v99) = -1;
          }
          int v64 = v99 + 1;
LABEL_97:
          uint64_t v100 = ~v473;
          int v52 = a1;
          if (v64)
          {
LABEL_98:
            unint64_t v101 = v512;
            memcpy(v512, v63, v454);
            unint64_t v102 = v461;
            goto LABEL_99;
          }
          goto LABEL_143;
        }
        uint64_t v136 = (v446 + ((v445 + v98) & ~v473)) & v497;
        int v52 = a1;
        if (v451 <= 0x7FFFFFFD)
        {
          uint64_t v100 = ~v473;
          unint64_t v428 = *(void *)(((v432 + ((v441 + v136) & v497)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v428 >= 0xFFFFFFFF) {
            LODWORD(v428) = -1;
          }
          if ((v428 + 1) >= 2) {
            goto LABEL_98;
          }
          goto LABEL_144;
        }
        int v137 = (*(uint64_t (**)(uint64_t))(v460 + 48))(v136);
      }
      int v63 = v520;
      uint64_t v100 = ~v473;
      if (v137) {
        goto LABEL_98;
      }
LABEL_143:
      unint64_t v86 = ((unint64_t)v63 + v467) & v55;
      unint64_t v87 = (v468 + v86) & v506;
      goto LABEL_144;
  }
}

void sub_100681D30(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v210 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v208 = *(void *)(v210 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v210 + 80);
  uint64_t v199 = v2;
  uint64_t v170 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v170 - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v162 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v162 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v159 = sub_10096B0E0();
  uint64_t v9 = *(void *)(v159 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = v8 | v3 | v10;
  unint64_t v180 = v12 + v208;
  uint64_t v184 = v12;
  unint64_t v13 = (v12 + v208) & ~v12;
  uint64_t v169 = v4;
  uint64_t v161 = v6;
  unsigned int v14 = *(_DWORD *)(v6 + 84);
  unsigned int v152 = *(_DWORD *)(v4 + 84);
  if (v152 > v14) {
    unsigned int v14 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v150 = v14;
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  unsigned int v167 = v14;
  unsigned int v182 = *(_DWORD *)(v210 + 84);
  if (v14 <= v182) {
    unsigned int v14 = *(_DWORD *)(v210 + 84);
  }
  uint64_t v158 = *(void *)(v159 - 8);
  unsigned int v15 = *(_DWORD *)(v9 + 84);
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v9 + 84);
  }
  if (v14 > v16) {
    unsigned int v16 = v14;
  }
  unsigned int v151 = v16;
  if (v16 <= 0x7FFFFFFF) {
    int v17 = 0x7FFFFFFF;
  }
  else {
    int v17 = v16;
  }
  int v181 = v17;
  unsigned int v149 = *(_DWORD *)(v9 + 84);
  uint64_t v178 = v208 + v3;
  uint64_t v188 = v3;
  uint64_t v179 = v208 + v8;
  uint64_t v168 = *(void *)(v4 + 64) + 7;
  uint64_t v160 = v7 + 8;
  uint64_t v186 = v7;
  unint64_t v173 = ((((*(void *)(v6 + 64) + 7 + ((v7 + 8 + (v168 & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v165 = v11 + 16;
  uint64_t v202 = v10 | 7;
  uint64_t v166 = v10 + 12;
  uint64_t v18 = *(void *)(*(void *)(v159 - 8) + 64);
  uint64_t v156 = v18 + v10;
  uint64_t v157 = v18 + 12;
  unint64_t v19 = (v10
       + 10
       + ((((((v18 + 12 + ((v18 + v10 + ((v10 + 12) & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  if (!v15) {
    ++v18;
  }
  uint64_t v153 = v10 + 10;
  uint64_t v154 = v18 + 7;
  unint64_t v155 = ((((((((((v18 + 7 + v19) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v183 = ((((((v11 + 16 + v173 + ((v208 + v8 + ((v208 + v3) & ~v3)) & ~v8)) & ~v11) + v155 + 311) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v20 = v183 + v13;
  unint64_t v192 = (v183 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v176 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v176 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v197 = (v20 + v22) & ~v22;
  uint64_t v175 = v21;
  if (*(_DWORD *)(v21 + 84)) {
    uint64_t v23 = *(void *)(v21 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v21 + 64) + 1;
  }
  uint64_t v191 = v23;
  uint64_t v172 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v172 - 8);
  uint64_t v25 = v24;
  int v26 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v27 = v22;
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v171 = v24;
  unsigned int v174 = *(_DWORD *)(v24 + 84);
  if (v174 <= *(_DWORD *)(v29 + 84)) {
    unsigned int v31 = *(_DWORD *)(v29 + 84);
  }
  else {
    unsigned int v31 = *(_DWORD *)(v24 + 84);
  }
  if (v31 <= 0x7FFFFFFE) {
    int v32 = 2147483646;
  }
  else {
    int v32 = v31;
  }
  uint64_t v33 = *(void *)(v199 - 8);
  uint64_t v34 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v163 = v33;
  uint64_t v35 = *(void *)(v33 + 64);
  uint64_t v36 = v26 | v30 | 7;
  uint64_t v37 = *(void *)(v24 + 64) + 7;
  unint64_t v38 = ((((*(void *)(*(void *)(v28 - 8) + 64) + 7 + ((v30 + 8 + (v37 & 0xFFFFFFFFFFFFFFF8)) & ~v30)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v39 = v191 + v36;
  unint64_t v40 = ((((((v191 + v36 + v197) & ~v36) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v41 = v208 + v22;
  unint64_t v177 = v38;
  unint64_t v42 = v38 + ((v191 + v36 + ((v208 + v22) & ~v22)) & ~v36) + 16;
  uint64_t v43 = v208 + v34;
  if (!*(_DWORD *)(v33 + 84)) {
    ++v35;
  }
  unint64_t v44 = v35 + ((v208 + v34) & ~v34);
  unint64_t v45 = ((v192 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v208 > v45) {
    unint64_t v45 = v208;
  }
  if (v40 <= v42) {
    unint64_t v40 = v42;
  }
  if (((v192 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= v44) {
    unint64_t v46 = v44;
  }
  else {
    unint64_t v46 = ((v192 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v45 > v40) {
    unint64_t v40 = v45;
  }
  if (v40 > v46) {
    unint64_t v46 = v40;
  }
  uint64_t v47 = a1;
  unsigned int v48 = a1[v46];
  unsigned int v49 = v48 - 8;
  if (v48 < 8)
  {
    uint64_t v51 = AssociatedTypeWitness;
    uint64_t v52 = v184;
    uint64_t v53 = v186;
  }
  else
  {
    if (v46 <= 3) {
      uint64_t v50 = v46;
    }
    else {
      uint64_t v50 = 4;
    }
    uint64_t v51 = AssociatedTypeWitness;
    uint64_t v52 = v184;
    uint64_t v53 = v186;
    switch(v50)
    {
      case 1:
        int v54 = *a1;
        if (v46 < 4) {
          goto LABEL_52;
        }
        goto LABEL_53;
      case 2:
        int v54 = *(unsigned __int16 *)a1;
        if (v46 >= 4) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 3:
        int v54 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v46 >= 4) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 4:
        int v54 = *(_DWORD *)a1;
        if (v46 < 4) {
LABEL_52:
        }
          v54 |= v49 << (8 * v46);
LABEL_53:
        unsigned int v48 = v54 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v55 = ~v52;
  uint64_t v198 = ~v188;
  uint64_t v209 = ~v8;
  uint64_t v56 = ~v53;
  uint64_t v57 = ~v34;
  switch(v48)
  {
    case 1u:
      uint64_t v164 = ~v36;
      uint64_t v147 = v56;
      uint64_t v187 = v37;
      int v185 = v32;
      uint64_t v195 = ~v30;
      unsigned int v193 = v31;
      uint64_t v65 = ~v202;
      uint64_t v200 = v30 + 8;
      uint64_t v148 = ~v10;
      uint64_t v203 = *(void *)(v28 - 8);
      uint64_t v206 = v28;
      uint64_t v66 = *(void (**)(void))(v210 + 8);
      v66();
      unint64_t v67 = (unint64_t)&a1[v180] & v55;
      if (v182 == v181)
      {
        int v68 = (*(uint64_t (**)(unint64_t))(v210 + 48))((unint64_t)&a1[v180] & v55);
LABEL_140:
        uint64_t v101 = v65;
        unint64_t v119 = v177;
        if (v68) {
          goto LABEL_153;
        }
        unint64_t v82 = (v178 + v67) & v198;
        unint64_t v83 = (v179 + v82) & v209;
LABEL_142:
        uint64_t v120 = v101;
        ((void (*)(unint64_t, uint64_t))v66)(v67, v51);
        ((void (*)(unint64_t, uint64_t))v66)(v82, v51);
        (*(void (**)(unint64_t, uint64_t))(v169 + 8))(v83, v170);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v161 + 8))((v160 + ((v168 + v83) & 0xFFFFFFFFFFFFFFF8)) & v147, v162);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v121 = (v165 + v173 + v83) & v120;
        unint64_t v122 = *(void (**)(unint64_t, uint64_t))(v158 + 8);
        v122((v166 + v121) & v148, v159);
        unint64_t v123 = (v156 + ((v166 + v121) & v148)) & v148;
        v122(v123, v159);
        swift_bridgeObjectRelease();
        unint64_t v124 = (v153
              + ((((((v157 + v123) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v148;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v158 + 48))(v124, 1, v159)) {
          v122(v124, v159);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v125 = (uint64_t *)((((((v154 + v124) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v126 = v125[1];
        if ((v126 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v125, v126);
        }
        swift_bridgeObjectRelease();
        unint64_t v127 = v155 + v121;
        LODWORD(v128) = -1;
        if (*(void *)(v155 + v121 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v128 = *(void *)(v155 + v121 + 16);
        }
        unint64_t v119 = v177;
        if ((int)v128 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v127 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v127 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v127 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
LABEL_153:
        unint64_t v129 = (v67 + v27 + v183) & ~v27;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v175 + 48))(v129, 1, v176)) {
          (*(void (**)(unint64_t, uint64_t))(v175 + 8))(v129, v176);
        }
        unint64_t v130 = (v39 + v129) & v164;
        if (v174 == v185)
        {
          int v131 = (*(uint64_t (**)(unint64_t))(v171 + 48))(v130);
        }
        else
        {
          unint64_t v132 = (uint64_t *)((v187 + v130) & 0xFFFFFFFFFFFFFFF8);
          if (v193 <= 0x7FFFFFFE)
          {
            uint64_t v133 = *v132;
            if ((unint64_t)*v132 >= 0xFFFFFFFF) {
              LODWORD(v133) = -1;
            }
            if ((v133 + 1) >= 2) {
              goto LABEL_166;
            }
            goto LABEL_165;
          }
          int v131 = (*(uint64_t (**)(unint64_t))(v203 + 48))(((unint64_t)v132 + v200) & v195);
        }
        if (v131)
        {
LABEL_166:
          uint64_t v118 = v130 + v119 + 15;
          goto LABEL_167;
        }
        unint64_t v132 = (uint64_t *)((v187 + v130) & 0xFFFFFFFFFFFFFFF8);
LABEL_165:
        (*(void (**)(unint64_t, uint64_t))(v171 + 8))(v130, v172);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v203 + 8))(((unint64_t)v132 + v200) & v195, v206);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_166;
      }
      unint64_t v82 = (v178 + v67) & v198;
      unint64_t v83 = (v179 + v82) & v209;
      if (v167 == v181)
      {
        if (v152 == v167)
        {
          int v68 = (*(uint64_t (**)(unint64_t))(v169 + 48))((v179 + v82) & v209);
          goto LABEL_140;
        }
        unint64_t v98 = (unint64_t *)((v168 + v83) & 0xFFFFFFFFFFFFFFF8);
        if (v150 > 0x7FFFFFFE)
        {
          int v68 = (*(uint64_t (**)(unint64_t))(v161 + 48))(((unint64_t)v98 + v160) & v147);
          goto LABEL_140;
        }
        unint64_t v99 = *v98;
        if (v99 >= 0xFFFFFFFF) {
          LODWORD(v99) = -1;
        }
        BOOL v100 = (v99 + 1) >= 2;
        uint64_t v101 = v65;
      }
      else
      {
        unint64_t v90 = v173 + v83;
        if ((v151 & 0x80000000) == 0)
        {
          unint64_t v91 = *(void *)(v90 + 8);
          if (v91 >= 0xFFFFFFFF) {
            LODWORD(v91) = -1;
          }
          int v68 = v91 + 1;
          goto LABEL_140;
        }
        uint64_t v107 = (v166 + ((v165 + v90) & v65)) & v148;
        if (v149 > 0x7FFFFFFD)
        {
          int v68 = (*(uint64_t (**)(uint64_t))(v158 + 48))(v107);
          goto LABEL_140;
        }
        uint64_t v101 = v65;
        unint64_t v146 = *(void *)(((v157 + ((v156 + v107) & v148)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v146 >= 0xFFFFFFFF) {
          LODWORD(v146) = -1;
        }
        BOOL v100 = (v146 + 1) >= 2;
      }
      unint64_t v119 = v177;
      if (v100) {
        goto LABEL_153;
      }
      goto LABEL_142;
    case 2u:
      uint64_t v69 = ~v36;
      int v70 = v32;
      uint64_t v196 = ~v30;
      unsigned int v194 = v31;
      uint64_t v71 = v37;
      unsigned int v190 = *(_DWORD *)(v29 + 84);
      uint64_t v201 = v30 + 8;
      uint64_t v204 = *(void *)(v28 - 8);
      uint64_t v207 = v28;
      (*(void (**)(void))(v210 + 8))();
      unint64_t v72 = (unint64_t)&a1[v41] & ~v27;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v175 + 48))(v72, 1, v176)) {
        (*(void (**)(unint64_t, uint64_t))(v175 + 8))(v72, v176);
      }
      unint64_t v73 = (v39 + v72) & v69;
      if (v174 == v70)
      {
        unint64_t v74 = v177;
        if ((*(unsigned int (**)(unint64_t))(v25 + 48))(v73)) {
          goto LABEL_99;
        }
LABEL_97:
        int v84 = (uint64_t *)((v71 + v73) & 0xFFFFFFFFFFFFFFF8);
LABEL_98:
        (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v73, v172);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v204 + 8))(((unint64_t)v84 + v201) & v196, v207);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_99;
      }
      int v84 = (uint64_t *)((v71 + v73) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v74 = v177;
      if (v194 > 0x7FFFFFFE)
      {
        if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v204 + 48))(((unint64_t)v84 + v201) & v196, v190, v207))
        {
          goto LABEL_99;
        }
        goto LABEL_97;
      }
      uint64_t v85 = *v84;
      if ((unint64_t)*v84 >= 0xFFFFFFFF) {
        LODWORD(v85) = -1;
      }
      if ((v85 + 1) < 2) {
        goto LABEL_98;
      }
LABEL_99:
      unint64_t v92 = *(void **)(v74 + v73 + 8);
      goto LABEL_168;
    case 3u:
      uint64_t v75 = v56;
      uint64_t v76 = ~v10;
      int v77 = *(void (**)(void))(v210 + 8);
      v77();
      unint64_t v78 = (unint64_t)&a1[v180] & v55;
      if (v182 == v181)
      {
        int v79 = (*(uint64_t (**)(unint64_t))(v210 + 48))((unint64_t)&a1[v180] & v55);
LABEL_172:
        uint64_t v104 = ~v202;
        if (v79) {
          goto LABEL_185;
        }
        unint64_t v86 = (v178 + v78) & v198;
        unint64_t v87 = (v179 + v86) & v209;
        goto LABEL_174;
      }
      unint64_t v86 = (v178 + v78) & v198;
      unint64_t v87 = (v179 + v86) & v209;
      if (v167 == v181)
      {
        if (v152 == v167)
        {
          int v79 = (*(uint64_t (**)(unint64_t))(v169 + 48))((v179 + v86) & v209);
          goto LABEL_172;
        }
        unint64_t v102 = (unint64_t *)((v168 + v87) & 0xFFFFFFFFFFFFFFF8);
        if (v150 > 0x7FFFFFFE)
        {
          int v79 = (*(uint64_t (**)(unint64_t))(v161 + 48))(((unint64_t)v102 + v160) & v75);
          goto LABEL_172;
        }
        unint64_t v103 = *v102;
        if (v103 >= 0xFFFFFFFF) {
          LODWORD(v103) = -1;
        }
        uint64_t v104 = ~v202;
        if ((v103 + 1) >= 2) {
          goto LABEL_185;
        }
      }
      else
      {
        unint64_t v93 = v173 + v87;
        if ((v151 & 0x80000000) == 0)
        {
          unint64_t v94 = *(void *)(v93 + 8);
          if (v94 >= 0xFFFFFFFF) {
            LODWORD(v94) = -1;
          }
          int v79 = v94 + 1;
          goto LABEL_172;
        }
        uint64_t v105 = (v166 + ((v165 + v93) & ~v202)) & v76;
        if (v149 > 0x7FFFFFFD)
        {
          int v79 = (*(uint64_t (**)(uint64_t))(v158 + 48))(v105);
          goto LABEL_172;
        }
        uint64_t v104 = ~v202;
        unint64_t v144 = *(void *)(((v157 + ((v156 + v105) & v76)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v144 >= 0xFFFFFFFF) {
          LODWORD(v144) = -1;
        }
        if ((v144 + 1) >= 2)
        {
LABEL_185:
          swift_bridgeObjectRelease();
          return;
        }
      }
LABEL_174:
      uint64_t v134 = v104;
      ((void (*)(unint64_t, uint64_t))v77)(v78, v51);
      ((void (*)(unint64_t, uint64_t))v77)(v86, v51);
      (*(void (**)(unint64_t, uint64_t))(v169 + 8))(v87, v170);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v161 + 8))((v160 + ((v168 + v87) & 0xFFFFFFFFFFFFFFF8)) & v75, v162);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v135 = (v165 + v173 + v87) & v134;
      unint64_t v136 = (v166 + v135) & v76;
      int v137 = *(void (**)(unint64_t, uint64_t))(v158 + 8);
      v137(v136, v159);
      unint64_t v138 = (v156 + v136) & v76;
      v137(v138, v159);
      swift_bridgeObjectRelease();
      unint64_t v139 = (v153
            + ((((((v157 + v138) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v76;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v158 + 48))(v139, 1, v159)) {
        v137(v139, v159);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v140 = (uint64_t *)((((((v154 + v139) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v141 = v140[1];
      if ((v141 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v140, v141);
      }
      swift_bridgeObjectRelease();
      unint64_t v142 = v155 + v135;
      LODWORD(v143) = -1;
      if (*(void *)(v155 + v135 + 16) < 0xFFFFFFFFuLL) {
        uint64_t v143 = *(void *)(v155 + v135 + 16);
      }
      if ((int)v143 - 1 < 0)
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v142 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1000CF144(*(void *)((((v142 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v142 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      goto LABEL_185;
    case 4u:
    case 5u:
    case 7u:
      uint64_t v58 = *(void (**)(unsigned __int8 *, uint64_t))(v210 + 8);
      uint64_t v59 = v51;
      goto LABEL_57;
    case 6u:
      (*(void (**)(void))(v210 + 8))();
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v163 + 48))((unint64_t)&a1[v43] & v57, 1, v199))
      {
        return;
      }
      uint64_t v58 = *(void (**)(unsigned __int8 *, uint64_t))(v163 + 8);
      uint64_t v47 = (unsigned __int8 *)((unint64_t)&a1[v43] & v57);
      uint64_t v59 = v199;
LABEL_57:
      v58(v47, v59);
      return;
    default:
      uint64_t v60 = v56;
      uint64_t v61 = ~v10;
      int v62 = *(void (**)(void))(v210 + 8);
      v62();
      unint64_t v63 = (unint64_t)&a1[v180] & v55;
      if (v182 == v181)
      {
        int v64 = (*(uint64_t (**)(unint64_t))(v210 + 48))((unint64_t)&a1[v180] & v55);
LABEL_125:
        uint64_t v97 = ~v202;
        if (v64) {
          goto LABEL_138;
        }
        unint64_t v80 = (v178 + v63) & v198;
        unint64_t v81 = (v179 + v80) & v209;
        goto LABEL_127;
      }
      unint64_t v80 = (v178 + v63) & v198;
      unint64_t v81 = (v179 + v80) & v209;
      if (v167 != v181)
      {
        unint64_t v88 = v173 + v81;
        if ((v151 & 0x80000000) == 0)
        {
          unint64_t v89 = *(void *)(v88 + 8);
          if (v89 >= 0xFFFFFFFF) {
            LODWORD(v89) = -1;
          }
          int v64 = v89 + 1;
          goto LABEL_125;
        }
        uint64_t v106 = (v166 + ((v165 + v88) & ~v202)) & v61;
        if (v149 > 0x7FFFFFFD)
        {
          int v64 = (*(uint64_t (**)(uint64_t))(v158 + 48))(v106);
          goto LABEL_125;
        }
        uint64_t v97 = ~v202;
        unint64_t v145 = *(void *)(((v157 + ((v156 + v106) & v61)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v145 >= 0xFFFFFFFF) {
          LODWORD(v145) = -1;
        }
        if ((v145 + 1) >= 2) {
          goto LABEL_138;
        }
LABEL_127:
        uint64_t v108 = v97;
        ((void (*)(unint64_t, uint64_t))v62)(v63, v51);
        ((void (*)(unint64_t, uint64_t))v62)(v80, v51);
        (*(void (**)(unint64_t, uint64_t))(v169 + 8))(v81, v170);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v161 + 8))((v160 + ((v168 + v81) & 0xFFFFFFFFFFFFFFF8)) & v60, v162);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v109 = (v165 + v173 + v81) & v108;
        unint64_t v110 = (v166 + v109) & v61;
        uint64_t v111 = *(void (**)(unint64_t, uint64_t))(v158 + 8);
        v111(v110, v159);
        unint64_t v112 = (v156 + v110) & v61;
        v111(v112, v159);
        swift_bridgeObjectRelease();
        unint64_t v113 = (v153
              + ((((((v157 + v112) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v61;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v158 + 48))(v113, 1, v159)) {
          v111(v113, v159);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        size_t v114 = (uint64_t *)((((((v154 + v113) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v115 = v114[1];
        if ((v115 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v114, v115);
        }
        swift_bridgeObjectRelease();
        unint64_t v116 = v155 + v109;
        LODWORD(v117) = -1;
        if (*(void *)(v155 + v109 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v117 = *(void *)(v155 + v109 + 16);
        }
        if ((int)v117 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v116 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v116 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v116 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        goto LABEL_138;
      }
      if (v152 == v167)
      {
        int v64 = (*(uint64_t (**)(unint64_t))(v169 + 48))((v179 + v80) & v209);
        goto LABEL_125;
      }
      unint64_t v95 = (unint64_t *)((v168 + v81) & 0xFFFFFFFFFFFFFFF8);
      if (v150 > 0x7FFFFFFE)
      {
        int v64 = (*(uint64_t (**)(unint64_t))(v161 + 48))(((unint64_t)v95 + v160) & v60);
        goto LABEL_125;
      }
      unint64_t v96 = *v95;
      if (v96 >= 0xFFFFFFFF) {
        LODWORD(v96) = -1;
      }
      uint64_t v97 = ~v202;
      if ((v96 + 1) < 2) {
        goto LABEL_127;
      }
LABEL_138:
      uint64_t v118 = v63 + v183;
LABEL_167:
      unint64_t v92 = *(void **)(((v118 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_168:

      return;
  }
}

uint64_t sub_100683668(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v519 = *(void *)(v4 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v497 = v3;
  uint64_t v463 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v463 - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v456 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v456 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v472 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v472 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = v10 | v5 | v12;
  uint64_t v482 = v4;
  uint64_t v462 = v6;
  uint64_t v455 = v8;
  unsigned int v15 = *(_DWORD *)(v8 + 84);
  unsigned int v447 = *(_DWORD *)(v6 + 84);
  if (v447 > v15) {
    unsigned int v15 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v445 = v15;
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  unsigned int v460 = v15;
  unsigned int v478 = *(_DWORD *)(v4 + 84);
  if (v15 <= v478) {
    unsigned int v15 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v467 = *(void *)(v472 - 8);
  unsigned int v16 = *(_DWORD *)(v11 + 84);
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v11 + 84);
  }
  if (v15 > v17) {
    unsigned int v17 = v15;
  }
  unsigned int v446 = v17;
  if (v17 <= 0x7FFFFFFF) {
    int v18 = 0x7FFFFFFF;
  }
  else {
    int v18 = v17;
  }
  int v477 = v18;
  unsigned int v457 = v16;
  uint64_t v481 = v519 + v5;
  uint64_t v488 = v5;
  uint64_t v479 = v519 + v10;
  uint64_t v506 = v10;
  unint64_t v19 = (v519 + v10 + ((v519 + v5) & ~v5)) & ~v10;
  uint64_t v20 = v12;
  uint64_t v461 = *(void *)(v6 + 64) + 7;
  uint64_t v454 = v9 + 8;
  uint64_t v450 = *(void *)(v8 + 64) + 7;
  unint64_t v468 = ((((v450 + ((v9 + 8 + (v461 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v458 = v13 + 16;
  uint64_t v503 = v12 | 7;
  uint64_t v459 = v12 + 12;
  size_t v21 = *(void *)(*(void *)(v472 - 8) + 64);
  size_t v453 = v21 + v12;
  size_t v444 = v21 + 12;
  uint64_t v451 = v12 + 10;
  unint64_t v22 = (v12
       + 10
       + ((((((v21 + 12 + ((v21 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  size_t v473 = v21;
  if (!v16) {
    ++v21;
  }
  size_t v480 = v21;
  unint64_t v475 = v22;
  size_t v448 = v21 + 7;
  uint64_t v474 = (v13 + 16 + v468 + v19) & ~v13;
  unint64_t v449 = ((((((((((v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v483 = v14;
  unint64_t v476 = v14 + v519;
  unint64_t v466 = ((((v474 + v449 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v23 = v466 + ((v14 + v519) & ~v14);
  unint64_t v491 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v471 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v471 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v509 = (v23 + v25) & ~v25;
  uint64_t v470 = v24;
  if (*(_DWORD *)(v24 + 84)) {
    uint64_t v26 = *(void *)(v24 + 64);
  }
  else {
    uint64_t v26 = *(void *)(v24 + 64) + 1;
  }
  uint64_t v465 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v465 - 8);
  uint64_t v28 = v27;
  int v29 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = v29 | v32 | 7;
  uint64_t v464 = v27;
  if (*(_DWORD *)(v27 + 84) <= *(_DWORD *)(v31 + 84)) {
    unsigned int v34 = *(_DWORD *)(v31 + 84);
  }
  else {
    unsigned int v34 = *(_DWORD *)(v27 + 84);
  }
  if (v34 <= 0x7FFFFFFE) {
    int v35 = 2147483646;
  }
  else {
    int v35 = v34;
  }
  uint64_t v36 = *(void *)(v27 + 64) + 7;
  uint64_t v37 = v32 + 8;
  unint64_t v38 = ((((*(void *)(*(void *)(v30 - 8) + 64) + 7 + ((v32 + 8 + (v36 & 0xFFFFFFFFFFFFFFF8)) & ~v32)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t __n = v26;
  unint64_t v39 = ((((((v26 + v33 + v509) & ~v33) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v40 = *(void *)(v497 - 8);
  uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v42 = v519 + v25;
  uint64_t v510 = v25;
  uint64_t v469 = v26 + v33;
  if (*(_DWORD *)(v40 + 84)) {
    size_t v43 = *(void *)(*(void *)(v497 - 8) + 64);
  }
  else {
    size_t v43 = *(void *)(*(void *)(v497 - 8) + 64) + 1;
  }
  unint64_t v44 = ((v491 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v519 > v44) {
    unint64_t v44 = v519;
  }
  uint64_t v45 = v519 + v41;
  if (v39 <= v38 + ((v26 + v33 + ((v519 + v25) & ~v25)) & ~v33) + 16) {
    unint64_t v39 = v38 + ((v26 + v33 + ((v519 + v25) & ~v25)) & ~v33) + 16;
  }
  unint64_t v46 = (v45 & ~v41) + v43;
  if (((v491 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v46) {
    unint64_t v46 = ((v491 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v44 <= v39) {
    unint64_t v44 = v39;
  }
  if (v44 <= v46) {
    unint64_t v47 = v46;
  }
  else {
    unint64_t v47 = v44;
  }
  unsigned int v48 = a2;
  unsigned int v49 = a2[v47];
  unsigned int v50 = v49 - 8;
  if (v49 < 8)
  {
    uint64_t v53 = v9;
    uint64_t v52 = v488;
    uint64_t v54 = v483;
  }
  else
  {
    if (v47 <= 3) {
      uint64_t v51 = v47;
    }
    else {
      uint64_t v51 = 4;
    }
    uint64_t v53 = v9;
    uint64_t v52 = v488;
    uint64_t v54 = v483;
    switch(v51)
    {
      case 1:
        int v55 = *a2;
        if (v47 < 4) {
          goto LABEL_53;
        }
        goto LABEL_54;
      case 2:
        int v55 = *(unsigned __int16 *)a2;
        if (v47 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 3:
        int v55 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v47 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 4:
        int v55 = *(_DWORD *)a2;
        if (v47 < 4) {
LABEL_53:
        }
          v55 |= v50 << (8 * v47);
LABEL_54:
        unsigned int v49 = v55 + 8;
        break;
      default:
        break;
    }
  }
  unint64_t v520 = v47;
  uint64_t v56 = ~v54;
  uint64_t v57 = ~v52;
  uint64_t v507 = ~v506;
  uint64_t v58 = ~v53;
  uint64_t v59 = ~v20;
  uint64_t v60 = ~v33;
  uint64_t v61 = ~v32;
  uint64_t v62 = ~v41;
  switch(v49)
  {
    case 1u:
      uint64_t v499 = v58;
      uint64_t v68 = ~v503;
      uint64_t v438 = ~v510;
      uint64_t v434 = v60;
      unsigned int v435 = v34;
      uint64_t v442 = v61;
      unsigned int v436 = *(_DWORD *)(v28 + 84);
      unsigned int v437 = *(_DWORD *)(v31 + 84);
      uint64_t v504 = v36;
      uint64_t v484 = v37;
      uint64_t v440 = *(void *)(*(void *)(v30 - 8) + 64) + 7;
      uint64_t v486 = *(void *)(v30 - 8);
      uint64_t v489 = v30;
      size_t v492 = v38;
      uint64_t v69 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v482 + 16);
      uint64_t v64 = a1;
      v69(a1, a2, AssociatedTypeWitness);
      __dst = (void *)((v476 + a1) & v56);
      int v70 = (void *)((unint64_t)&a2[v476] & v56);
      unint64_t v502 = v70;
      uint64_t v495 = v59;
      if (v478 == v477)
      {
        int v71 = (*(uint64_t (**)(unint64_t))(v482 + 48))((unint64_t)&v48[v476] & v56);
        int v70 = v502;
        uint64_t v72 = v467;
        uint64_t v73 = v479;
        goto LABEL_149;
      }
      unint64_t v89 = ((unint64_t)v70 + v481) & v57;
      uint64_t v73 = v479;
      unint64_t v90 = (v479 + v89) & v507;
      uint64_t v72 = v467;
      if (v460 == v477)
      {
        if (v447 == v460)
        {
          int v71 = (*(uint64_t (**)(unint64_t))(v462 + 48))((v479 + v89) & v507);
        }
        else
        {
          unint64_t v123 = (unint64_t *)((v461 + v90) & 0xFFFFFFFFFFFFFFF8);
          if (v445 <= 0x7FFFFFFE)
          {
            unint64_t v124 = *v123;
            if (v124 >= 0xFFFFFFFF) {
              LODWORD(v124) = -1;
            }
            uint64_t v125 = v68;
            if ((v124 + 1) >= 2) {
              goto LABEL_150;
            }
            goto LABEL_153;
          }
          int v71 = (*(uint64_t (**)(unint64_t))(v455 + 48))(((unint64_t)v123 + v454) & v499);
        }
        goto LABEL_148;
      }
      unint64_t v103 = v468 + v90;
      if ((v446 & 0x80000000) != 0)
      {
        uint64_t v131 = (v459 + ((v458 + v103) & v68)) & v59;
        if (v457 <= 0x7FFFFFFD)
        {
          uint64_t v125 = v68;
          unint64_t v431 = *(void *)(((v444 + ((v453 + v131) & v59)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v431 >= 0xFFFFFFFF) {
            LODWORD(v431) = -1;
          }
          if ((v431 + 1) >= 2) {
            goto LABEL_150;
          }
          goto LABEL_153;
        }
        int v71 = (*(uint64_t (**)(uint64_t))(v467 + 48))(v131);
LABEL_148:
        int v70 = v502;
        goto LABEL_149;
      }
      unint64_t v104 = *(void *)(v103 + 8);
      if (v104 >= 0xFFFFFFFF) {
        LODWORD(v104) = -1;
      }
      int v71 = v104 + 1;
LABEL_149:
      uint64_t v125 = v68;
      if (v71)
      {
LABEL_150:
        uint64_t v207 = __dst;
        memcpy(__dst, v70, v466);
        unint64_t v208 = v520;
        uint64_t v209 = v474;
        unint64_t v210 = v475;
LABEL_151:
        size_t v211 = v480;
        goto LABEL_189;
      }
      unint64_t v89 = ((unint64_t)v70 + v481) & v57;
      unint64_t v90 = (v73 + v89) & v507;
LABEL_153:
      uint64_t v212 = v125;
      v69((uint64_t)__dst, (unsigned __int8 *)v70, AssociatedTypeWitness);
      uint64_t v213 = v72;
      unint64_t v214 = ((unint64_t)__dst + v481) & v57;
      v69(v214, (unsigned __int8 *)v89, AssociatedTypeWitness);
      unint64_t v215 = (v73 + v214) & v507;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v462 + 16))(v215, v90, v463);
      size_t v216 = (void *)((v461 + v215) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v217 = (void *)((v461 + v90) & 0xFFFFFFFFFFFFFFF8);
      *size_t v216 = *v217;
      unint64_t v218 = ((unint64_t)v216 + v454) & v499;
      unint64_t v219 = ((unint64_t)v217 + v454) & v499;
      unint64_t v220 = *(void (**)(unint64_t, unint64_t, uint64_t))(v455 + 16);
      swift_bridgeObjectRetain();
      v220(v218, v219, v456);
      int v221 = (void *)((v450 + v219) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v222 = (void *)((v450 + v218) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v222 = *v221;
      char v223 = (void *)(((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v224 = (void *)(((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8);
      *char v223 = *v224;
      v223[1] = v224[1];
      unint64_t v225 = (void *)(v468 + v215);
      *unint64_t v225 = *(void *)(v468 + v90);
      v225[1] = *(void *)(v468 + v90 + 8);
      unint64_t v226 = (v458 + v468 + v215) & v212;
      unint64_t v227 = (v458 + v468 + v90) & v212;
      *(unsigned char *)unint64_t v226 = *(unsigned char *)v227;
      uint64_t v228 = v226 | 4;
      int v229 = *(_DWORD *)(v227 | 4);
      *(unsigned char *)(v228 + 4) = *(unsigned char *)((v227 | 4) + 4);
      *(_DWORD *)uint64_t v228 = v229;
      *(_WORD *)(v226 + 10) = *(_WORD *)(v227 + 0xA);
      unint64_t v230 = (v459 + v226) & v495;
      unint64_t v231 = (v459 + v227) & v495;
      uint64_t v232 = *(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v232(v230, v231, v472);
      size_t v233 = (v453 + v230) & v495;
      size_t v234 = (v453 + v231) & v495;
      v232(v233, v234, v472);
      unint64_t v235 = (unsigned char *)(v233 + v473);
      *unint64_t v235 = *(unsigned char *)(v234 + v473);
      v235[1] = *(unsigned char *)(v234 + v473 + 1);
      v235[2] = *(unsigned char *)(v234 + v473 + 2);
      v235[3] = *(unsigned char *)(v234 + v473 + 3);
      v235[4] = *(unsigned char *)(v234 + v473 + 4);
      unint64_t v236 = (v233 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v237 = (v234 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v236 = *(void *)v237;
      *(void *)(v236 + 8) = *(void *)(v237 + 8);
      *(unsigned char *)(v236 + 16) = *(unsigned char *)(v237 + 16);
      *(unsigned char *)(v236 + 17) = *(unsigned char *)(v237 + 17);
      *(unsigned char *)(v236 + 18) = *(unsigned char *)(v237 + 18);
      *(unsigned char *)(v236 + 19) = *(unsigned char *)(v237 + 19);
      unint64_t v238 = (v236 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v239 = (v237 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v238 = *(void *)v239;
      *(unsigned char *)(v238 + 8) = *(unsigned char *)(v239 + 8);
      *(unsigned char *)(v238 + 9) = *(unsigned char *)(v239 + 9);
      *(unsigned char *)(v238 + 10) = *(unsigned char *)(v239 + 10);
      *(unsigned char *)(v238 + 11) = *(unsigned char *)(v239 + 11);
      *(unsigned char *)(v238 + 12) = *(unsigned char *)(v239 + 12);
      size_t v240 = (void *)((v237 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v241 = (void *)((v236 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v241 = *v240;
      unint64_t v242 = ((unint64_t)v241 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v243 = ((unint64_t)v240 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v242 = *(void *)v243;
      *(unsigned char *)(v242 + 8) = *(unsigned char *)(v243 + 8);
      *(unsigned char *)(v242 + 9) = *(unsigned char *)(v243 + 9);
      unint64_t v244 = (void *)((v451 + v242) & v495);
      unint64_t v245 = (const void *)((v451 + v243) & v495);
      unint64_t v246 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v213 + 48);
      swift_bridgeObjectRetain();
      if (v246(v245, 1, v472))
      {
        memcpy(v244, v245, v480);
      }
      else
      {
        v232((unint64_t)v244, (unint64_t)v245, v472);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v213 + 56))(v244, 0, 1, v472);
      }
      unint64_t v247 = (void *)(((unint64_t)v244 + v448) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v248 = (void *)(((unint64_t)v245 + v448) & 0xFFFFFFFFFFFFFFF8);
      void *v247 = *v248;
      unint64_t v249 = ((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v250 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v251 = *(void *)v250;
      *(unsigned char *)(v249 + 8) = *(unsigned char *)(v250 + 8);
      *(void *)unint64_t v249 = v251;
      unint64_t v252 = (void *)(((unint64_t)v247 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v253 = (void *)(((unint64_t)v248 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v252 = *v253;
      unint64_t v254 = ((unint64_t)v252 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v255 = (uint64_t *)(((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v256 = v255[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v256 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v254 = *(_OWORD *)v255;
      }
      else
      {
        uint64_t v257 = *v255;
        sub_10001EBB0(*v255, v256);
        *(void *)unint64_t v254 = v257;
        *(void *)(v254 + 8) = v256;
      }
      unint64_t v258 = (v254 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v259 = ((unint64_t)v255 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v260 = *(void *)v259;
      *(unsigned char *)(v258 + 8) = *(unsigned char *)(v259 + 8);
      *(void *)unint64_t v258 = v260;
      *(unsigned char *)(v258 + 9) = *(unsigned char *)(v259 + 9);
      unint64_t v261 = (v258 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v262 = (v259 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v263 = *(_DWORD *)v262;
      *(unsigned char *)(v261 + 4) = *(unsigned char *)(v262 + 4);
      *(_DWORD *)unint64_t v261 = v263;
      unint64_t v264 = (void *)((v258 + 25) & 0xFFFFFFFFFFFFFFF8);
      size_t v265 = (void *)((v259 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v264 = *v265;
      v264[1] = v265[1];
      unint64_t v266 = v449 + v226;
      unint64_t v267 = v449 + v227;
      unint64_t v268 = *(void *)(v267 + 16);
      if (v268 >= 0xFFFFFFFF) {
        LODWORD(v268) = -1;
      }
      int v269 = v268 - 1;
      swift_bridgeObjectRetain();
      if (v269 < 0)
      {
        *(void *)unint64_t v266 = *(void *)v267;
        *(unsigned char *)(v266 + 8) = *(unsigned char *)(v267 + 8);
        *(unsigned char *)(v266 + 9) = *(unsigned char *)(v267 + 9);
        uint64_t v283 = *(void *)(v267 + 16);
        swift_errorRetain();
        *(void *)(v266 + 16) = v283;
        uint64_t v284 = *(void *)(v267 + 24);
        swift_errorRetain();
        *(void *)(v266 + 24) = v284;
        *(unsigned char *)(v266 + 32) = *(unsigned char *)(v267 + 32);
        *(unsigned char *)(v266 + 33) = *(unsigned char *)(v267 + 33);
        *(unsigned char *)(v266 + 34) = *(unsigned char *)(v267 + 34);
        *(void *)(v266 + 40) = *(void *)(v267 + 40);
        *(void *)(v266 + 48) = *(void *)(v267 + 48);
        *(void *)(v266 + 56) = *(void *)(v267 + 56);
        *(void *)(v266 + 64) = *(void *)(v267 + 64);
        *(unsigned char *)(v266 + 72) = *(unsigned char *)(v267 + 72);
        *(void *)(v266 + 80) = *(void *)(v267 + 80);
        *(void *)(v266 + 88) = *(void *)(v267 + 88);
        uint64_t v285 = *(void **)(v267 + 96);
        *(void *)(v266 + 96) = v285;
        *(unsigned char *)(v266 + 104) = *(unsigned char *)(v267 + 104);
        *(unsigned char *)(v266 + 105) = *(unsigned char *)(v267 + 105);
        *(void *)(v266 + 112) = *(void *)(v267 + 112);
        *(void *)(v266 + 120) = *(void *)(v267 + 120);
        *(void *)(v266 + 128) = *(void *)(v267 + 128);
        *(void *)(v266 + 136) = *(void *)(v267 + 136);
        *(void *)(v266 + 144) = *(void *)(v267 + 144);
        *(void *)(v266 + 152) = *(void *)(v267 + 152);
        *(void *)(v266 + 160) = *(void *)(v267 + 160);
        *(void *)(v266 + 168) = *(void *)(v267 + 168);
        *(unsigned char *)(v266 + 176) = *(unsigned char *)(v267 + 176);
        *(void *)(v266 + 184) = *(void *)(v267 + 184);
        uint64_t v508 = *(void *)(v267 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v286 = v285;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v508)
        {
          *(void *)(v266 + 192) = v508;
          *(void *)(v266 + 200) = *(void *)(v267 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v266 + 192) = *(_OWORD *)(v267 + 192);
        }
        unint64_t v208 = v520;
        uint64_t v209 = v474;
        unint64_t v210 = v475;
        unsigned int v282 = v457;
        *(void *)(v266 + 208) = *(void *)(v267 + 208);
        *(void *)(v266 + 216) = *(void *)(v267 + 216);
        *(void *)(v266 + 224) = *(void *)(v267 + 224);
        *(void *)(v266 + 232) = *(void *)(v267 + 232);
        *(void *)(v266 + 240) = *(void *)(v267 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v270 = *(_OWORD *)v267;
        long long v271 = *(_OWORD *)(v267 + 16);
        long long v272 = *(_OWORD *)(v267 + 48);
        *(_OWORD *)(v266 + 32) = *(_OWORD *)(v267 + 32);
        *(_OWORD *)(v266 + 48) = v272;
        *(_OWORD *)unint64_t v266 = v270;
        *(_OWORD *)(v266 + 16) = v271;
        long long v273 = *(_OWORD *)(v267 + 64);
        long long v274 = *(_OWORD *)(v267 + 80);
        long long v275 = *(_OWORD *)(v267 + 112);
        *(_OWORD *)(v266 + 96) = *(_OWORD *)(v267 + 96);
        *(_OWORD *)(v266 + 112) = v275;
        *(_OWORD *)(v266 + 64) = v273;
        *(_OWORD *)(v266 + 80) = v274;
        long long v276 = *(_OWORD *)(v267 + 128);
        long long v277 = *(_OWORD *)(v267 + 144);
        long long v278 = *(_OWORD *)(v267 + 176);
        *(_OWORD *)(v266 + 160) = *(_OWORD *)(v267 + 160);
        *(_OWORD *)(v266 + 176) = v278;
        *(_OWORD *)(v266 + 128) = v276;
        *(_OWORD *)(v266 + 144) = v277;
        long long v279 = *(_OWORD *)(v267 + 192);
        long long v280 = *(_OWORD *)(v267 + 208);
        long long v281 = *(_OWORD *)(v267 + 224);
        *(void *)(v266 + 240) = *(void *)(v267 + 240);
        *(_OWORD *)(v266 + 208) = v280;
        *(_OWORD *)(v266 + 224) = v281;
        *(_OWORD *)(v266 + 192) = v279;
        unint64_t v208 = v520;
        uint64_t v209 = v474;
        unint64_t v210 = v475;
        unsigned int v282 = v457;
      }
      unint64_t v379 = (_OWORD *)((v266 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v380 = (long long *)((v267 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v381 = *v380;
      *(_OWORD *)((char *)v379 + 9) = *(long long *)((char *)v380 + 9);
      *unint64_t v379 = v381;
      unint64_t v382 = (v266 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v383 = (v267 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v384 = *(_OWORD *)v383;
      *(unsigned char *)(v382 + 16) = *(unsigned char *)(v383 + 16);
      *(_OWORD *)unint64_t v382 = v384;
      unint64_t v385 = (void *)((v266 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v386 = (v267 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v387 = *(void *)v386;
      v386 += 15;
      void *v385 = v387;
      uint64_t v388 = (void *)(((unint64_t)v385 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v389 = *(void *)(v386 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v390 = *(void *)((v386 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v389, v390);
      *uint64_t v388 = v389;
      v388[1] = v390;
      uint64_t v64 = a1;
      size_t v211 = v473;
      uint64_t v207 = __dst;
      if (!v282) {
        goto LABEL_151;
      }
LABEL_189:
      unint64_t v391 = ((((v209
               + ((((((((((v210 + v211 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      size_t v392 = (void *)(((unint64_t)v207 + v510 + v391) & v438);
      uint64_t v393 = (const void *)(((unint64_t)v502 + v510 + v391) & v438);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v470 + 48))(v393, 1, v471))
      {
        memcpy(v392, v393, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v470 + 16))(v392, v393, v471);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v470 + 56))(v392, 0, 1, v471);
      }
      uint64_t v394 = v504;
      unint64_t v395 = (char *)(((unint64_t)v392 + v469) & v434);
      int v396 = (char *)(((unint64_t)v393 + v469) & v434);
      if (v436 == v35)
      {
        int v397 = (*(uint64_t (**)(char *, void, uint64_t))(v464 + 48))(v396, v436, v465);
      }
      else
      {
        uint64_t v398 = (uint64_t *)((unint64_t)&v396[v504] & 0xFFFFFFFFFFFFFFF8);
        if (v435 <= 0x7FFFFFFE)
        {
          uint64_t v399 = *v398;
          if ((unint64_t)*v398 >= 0xFFFFFFFF) {
            LODWORD(v399) = -1;
          }
          if ((v399 + 1) >= 2) {
            goto LABEL_201;
          }
          goto LABEL_203;
        }
        int v397 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v486 + 48))(((unint64_t)v398 + v484) & v442, v437, v489);
      }
      uint64_t v394 = v504;
      if (v397)
      {
LABEL_201:
        size_t v400 = v492;
        memcpy(v395, v396, v492);
        goto LABEL_204;
      }
      uint64_t v398 = (uint64_t *)((unint64_t)&v396[v504] & 0xFFFFFFFFFFFFFFF8);
LABEL_203:
      uint64_t v401 = v394;
      (*(void (**)(char *, char *, uint64_t))(v464 + 16))(v395, v396, v465);
      unint64_t v402 = (void *)((unint64_t)&v395[v401] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v402 = *v398;
      unint64_t v403 = ((unint64_t)v402 + v484) & v442;
      unint64_t v404 = ((unint64_t)v398 + v484) & v442;
      uint64_t v405 = *(void (**)(unint64_t, unint64_t, uint64_t))(v486 + 16);
      swift_bridgeObjectRetain();
      v405(v403, v404, v489);
      int v406 = (void *)((v440 + v403) & 0xFFFFFFFFFFFFFFF8);
      long long v407 = (void *)((v440 + v404) & 0xFFFFFFFFFFFFFFF8);
      *int v406 = *v407;
      size_t v408 = (void *)(((unint64_t)v406 + 15) & 0xFFFFFFFFFFFFFFF8);
      size_t v409 = (void *)(((unint64_t)v407 + 15) & 0xFFFFFFFFFFFFFFF8);
      *size_t v408 = *v409;
      v408[1] = v409[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v400 = v492;
LABEL_204:
      *(void *)&v395[v400] = *(void *)&v396[v400];
      unint64_t v410 = (void *)((unint64_t)&v395[v400 + 15] & 0xFFFFFFFFFFFFFFF8);
      id v411 = (void *)((unint64_t)&v396[v400 + 15] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v410 = *v411;
      unint64_t v412 = *(void **)(((unint64_t)v411 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v410 + 15) & 0xFFFFFFFFFFFFFFF8) = v412;
      *(unsigned char *)(v64 + v208) = 1;
      id v413 = v412;
      return v64;
    case 2u:
      uint64_t v74 = v60;
      uint64_t v443 = v61;
      unsigned int v75 = v34;
      uint64_t v76 = *(unsigned int *)(v28 + 84);
      uint64_t v77 = *(unsigned int *)(v31 + 84);
      uint64_t v505 = v36;
      uint64_t v485 = v37;
      uint64_t v441 = *(void *)(*(void *)(v30 - 8) + 64) + 7;
      uint64_t v487 = *(void *)(v30 - 8);
      uint64_t v490 = v30;
      size_t v493 = v38;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v482 + 16))(a1, a2, AssociatedTypeWitness);
      unint64_t v78 = (void *)((v42 + a1) & ~v510);
      int v79 = (const void *)((unint64_t)&a2[v42] & ~v510);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v470 + 48))(v79, 1, v471))
      {
        memcpy(v78, v79, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v470 + 16))(v78, v79, v471);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v470 + 56))(v78, 0, 1, v471);
      }
      unint64_t v93 = (char *)(((unint64_t)v78 + v469) & v74);
      unint64_t v94 = (char *)(((unint64_t)v79 + v469) & v74);
      uint64_t v64 = a1;
      if (v76 == v35)
      {
        int v95 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v94, v76, v465);
      }
      else
      {
        uint64_t v96 = v77;
        uint64_t v97 = v505;
        unint64_t v98 = (uint64_t *)((unint64_t)&v94[v505] & 0xFFFFFFFFFFFFFFF8);
        if (v75 <= 0x7FFFFFFE)
        {
          uint64_t v99 = *v98;
          if ((unint64_t)*v98 >= 0xFFFFFFFF) {
            LODWORD(v99) = -1;
          }
          if ((v99 + 1) >= 2) {
            goto LABEL_105;
          }
          goto LABEL_107;
        }
        int v95 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v487 + 48))(((unint64_t)v98 + v485) & v443, v96, v490);
      }
      uint64_t v97 = v505;
      if (v95)
      {
LABEL_105:
        size_t v107 = v493;
        memcpy(v93, v94, v493);
        goto LABEL_108;
      }
      unint64_t v98 = (uint64_t *)((unint64_t)&v94[v505] & 0xFFFFFFFFFFFFFFF8);
LABEL_107:
      uint64_t v108 = v97;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v93, v94, v465);
      unint64_t v109 = (void *)((unint64_t)&v93[v108] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v109 = *v98;
      unint64_t v110 = ((unint64_t)v109 + v485) & v443;
      unint64_t v111 = ((unint64_t)v98 + v485) & v443;
      unint64_t v112 = *(void (**)(unint64_t, unint64_t, uint64_t))(v487 + 16);
      swift_bridgeObjectRetain();
      v112(v110, v111, v490);
      unint64_t v113 = (void *)((v441 + v110) & 0xFFFFFFFFFFFFFFF8);
      size_t v114 = (void *)((v441 + v111) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v113 = *v114;
      unint64_t v115 = (void *)(((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v116 = (void *)(((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v115 = *v116;
      v115[1] = v116[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v107 = v493;
LABEL_108:
      uint64_t v117 = &v93[v107];
      char *v117 = v94[v107];
      uint64_t v118 = *(void **)&v94[v107 + 8];
      *((void *)v117 + 1) = v118;
      *(unsigned char *)(a1 + v520) = 2;
      id v119 = v118;
      return v64;
    case 3u:
      uint64_t v496 = v59;
      uint64_t v500 = v58;
      unint64_t v80 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v482 + 16);
      uint64_t v64 = a1;
      v80(a1, a2, AssociatedTypeWitness);
      unint64_t v512 = (void *)((v476 + a1) & v56);
      unint64_t v81 = (const void *)((unint64_t)&a2[v476] & v56);
      if (v478 == v477)
      {
        int v82 = (*(uint64_t (**)(const void *))(v482 + 48))(v81);
        uint64_t v83 = v479;
      }
      else
      {
        unint64_t v91 = ((unint64_t)v81 + v481) & v57;
        uint64_t v83 = v479;
        unint64_t v92 = (v479 + v91) & v507;
        if (v460 == v477)
        {
          if (v447 == v460)
          {
            int v82 = (*(uint64_t (**)(unint64_t))(v462 + 48))((v479 + v91) & v507);
          }
          else
          {
            unint64_t v126 = (unint64_t *)((v461 + v92) & 0xFFFFFFFFFFFFFFF8);
            if (v445 <= 0x7FFFFFFE)
            {
              unint64_t v127 = *v126;
              if (v127 >= 0xFFFFFFFF) {
                LODWORD(v127) = -1;
              }
              uint64_t v128 = ~v503;
              if ((v127 + 1) >= 2) {
                goto LABEL_167;
              }
              goto LABEL_170;
            }
            int v82 = (*(uint64_t (**)(unint64_t))(v455 + 48))(((unint64_t)v126 + v454) & v500);
          }
        }
        else
        {
          unint64_t v105 = v468 + v92;
          if ((v446 & 0x80000000) != 0)
          {
            uint64_t v129 = (v459 + ((v458 + v105) & ~v503)) & v496;
            if (v457 <= 0x7FFFFFFD)
            {
              uint64_t v128 = ~v503;
              unint64_t v429 = *(void *)(((v444 + ((v453 + v129) & v496)) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v429 >= 0xFFFFFFFF) {
                LODWORD(v429) = -1;
              }
              if ((v429 + 1) >= 2) {
                goto LABEL_167;
              }
              goto LABEL_170;
            }
            int v82 = (*(uint64_t (**)(uint64_t))(v467 + 48))(v129);
          }
          else
          {
            unint64_t v106 = *(void *)(v105 + 8);
            if (v106 >= 0xFFFFFFFF) {
              LODWORD(v106) = -1;
            }
            int v82 = v106 + 1;
          }
        }
      }
      uint64_t v128 = ~v503;
      if (v82)
      {
LABEL_167:
        uint64_t v287 = v512;
        memcpy(v512, v81, v466);
        uint64_t v288 = v474;
LABEL_168:
        size_t v289 = v480;
        goto LABEL_208;
      }
      unint64_t v91 = ((unint64_t)v81 + v481) & v57;
      unint64_t v92 = (v83 + v91) & v507;
LABEL_170:
      uint64_t v433 = v128;
      ((void (*)(void *))v80)(v512);
      unint64_t v290 = ((unint64_t)v512 + v481) & v57;
      v80(v290, (unsigned __int8 *)v91, AssociatedTypeWitness);
      unint64_t v291 = (v83 + v290) & v507;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v462 + 16))(v291, v92, v463);
      unint64_t v292 = (void *)((v461 + v291) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v293 = (void *)((v461 + v92) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v292 = *v293;
      unint64_t v294 = ((unint64_t)v292 + v454) & v500;
      unint64_t v295 = ((unint64_t)v293 + v454) & v500;
      unint64_t v296 = *(void (**)(unint64_t, unint64_t, uint64_t))(v455 + 16);
      swift_bridgeObjectRetain();
      v296(v294, v295, v456);
      v297 = (void *)((v450 + v295) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v298 = (void *)((v450 + v294) & 0xFFFFFFFFFFFFFFF8);
      void *v298 = *v297;
      unint64_t v299 = (void *)(((unint64_t)v298 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v300 = (void *)(((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v299 = *v300;
      v299[1] = v300[1];
      uint64_t v301 = (void *)(v468 + v291);
      *uint64_t v301 = *(void *)(v468 + v92);
      v301[1] = *(void *)(v468 + v92 + 8);
      unint64_t v302 = (v458 + v468 + v291) & v433;
      unint64_t v303 = (v458 + v468 + v92) & v433;
      *(unsigned char *)unint64_t v302 = *(unsigned char *)v303;
      uint64_t v304 = v302 | 4;
      int v305 = *(_DWORD *)(v303 | 4);
      *(unsigned char *)(v304 + 4) = *(unsigned char *)((v303 | 4) + 4);
      *(_DWORD *)uint64_t v304 = v305;
      *(_WORD *)(v302 + 10) = *(_WORD *)(v303 + 0xA);
      unint64_t v516 = v302;
      unint64_t v306 = (v459 + v302) & v496;
      unint64_t v307 = (v459 + v303) & v496;
      uint64_t v308 = *(void (**)(unint64_t, unint64_t, uint64_t))(v467 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v308(v306, v307, v472);
      size_t v309 = (v453 + v306) & v496;
      size_t v310 = (v453 + v307) & v496;
      v308(v309, v310, v472);
      unint64_t v311 = (unsigned char *)(v309 + v473);
      unsigned char *v311 = *(unsigned char *)(v310 + v473);
      v311[1] = *(unsigned char *)(v310 + v473 + 1);
      v311[2] = *(unsigned char *)(v310 + v473 + 2);
      v311[3] = *(unsigned char *)(v310 + v473 + 3);
      v311[4] = *(unsigned char *)(v310 + v473 + 4);
      unint64_t v312 = (v309 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v313 = (v310 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v312 = *(void *)v313;
      *(void *)(v312 + 8) = *(void *)(v313 + 8);
      *(unsigned char *)(v312 + 16) = *(unsigned char *)(v313 + 16);
      *(unsigned char *)(v312 + 17) = *(unsigned char *)(v313 + 17);
      *(unsigned char *)(v312 + 18) = *(unsigned char *)(v313 + 18);
      *(unsigned char *)(v312 + 19) = *(unsigned char *)(v313 + 19);
      unint64_t v314 = (v312 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v315 = (v313 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v314 = *(void *)v315;
      *(unsigned char *)(v314 + 8) = *(unsigned char *)(v315 + 8);
      *(unsigned char *)(v314 + 9) = *(unsigned char *)(v315 + 9);
      *(unsigned char *)(v314 + 10) = *(unsigned char *)(v315 + 10);
      *(unsigned char *)(v314 + 11) = *(unsigned char *)(v315 + 11);
      *(unsigned char *)(v314 + 12) = *(unsigned char *)(v315 + 12);
      unint64_t v316 = (void *)((v313 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v317 = (void *)((v312 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v317 = *v316;
      unint64_t v318 = ((unint64_t)v317 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v319 = ((unint64_t)v316 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v318 = *(void *)v319;
      *(unsigned char *)(v318 + 8) = *(unsigned char *)(v319 + 8);
      *(unsigned char *)(v318 + 9) = *(unsigned char *)(v319 + 9);
      size_t v320 = (void *)((v451 + v318) & v496);
      unint64_t v321 = (const void *)((v451 + v319) & v496);
      unint64_t v322 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v467 + 48);
      swift_bridgeObjectRetain();
      if (v322(v321, 1, v472))
      {
        memcpy(v320, v321, v480);
      }
      else
      {
        v308((unint64_t)v320, (unint64_t)v321, v472);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v467 + 56))(v320, 0, 1, v472);
      }
      unint64_t v323 = (void *)(((unint64_t)v320 + v448) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v324 = (void *)(((unint64_t)v321 + v448) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v323 = *v324;
      unint64_t v325 = ((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v326 = ((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v327 = *(void *)v326;
      *(unsigned char *)(v325 + 8) = *(unsigned char *)(v326 + 8);
      *(void *)unint64_t v325 = v327;
      unint64_t v328 = (void *)(((unint64_t)v323 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v329 = (void *)(((unint64_t)v324 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v328 = *v329;
      unint64_t v330 = ((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v331 = (uint64_t *)(((unint64_t)v329 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v332 = v331[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v332 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v330 = *(_OWORD *)v331;
      }
      else
      {
        uint64_t v333 = *v331;
        sub_10001EBB0(*v331, v332);
        *(void *)unint64_t v330 = v333;
        *(void *)(v330 + 8) = v332;
      }
      unint64_t v334 = (v330 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v335 = ((unint64_t)v331 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v336 = *(void *)v335;
      *(unsigned char *)(v334 + 8) = *(unsigned char *)(v335 + 8);
      *(void *)unint64_t v334 = v336;
      *(unsigned char *)(v334 + 9) = *(unsigned char *)(v335 + 9);
      unint64_t v337 = (v334 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v338 = (v335 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v339 = *(_DWORD *)v338;
      *(unsigned char *)(v337 + 4) = *(unsigned char *)(v338 + 4);
      *(_DWORD *)unint64_t v337 = v339;
      unint64_t v340 = (void *)((v334 + 25) & 0xFFFFFFFFFFFFFFF8);
      long long v341 = (void *)((v335 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v340 = *v341;
      v340[1] = v341[1];
      unint64_t v342 = v449 + v516;
      unint64_t v343 = v449 + v303;
      unint64_t v344 = *(void *)(v449 + v303 + 16);
      if (v344 >= 0xFFFFFFFF) {
        LODWORD(v344) = -1;
      }
      int v345 = v344 - 1;
      swift_bridgeObjectRetain();
      if (v345 < 0)
      {
        *(void *)unint64_t v342 = *(void *)v343;
        *(unsigned char *)(v342 + 8) = *(unsigned char *)(v343 + 8);
        *(unsigned char *)(v342 + 9) = *(unsigned char *)(v343 + 9);
        uint64_t v358 = *(void *)(v343 + 16);
        swift_errorRetain();
        *(void *)(v342 + 16) = v358;
        uint64_t v359 = *(void *)(v343 + 24);
        swift_errorRetain();
        *(void *)(v342 + 24) = v359;
        *(unsigned char *)(v342 + 32) = *(unsigned char *)(v343 + 32);
        *(unsigned char *)(v342 + 33) = *(unsigned char *)(v343 + 33);
        *(unsigned char *)(v342 + 34) = *(unsigned char *)(v343 + 34);
        *(void *)(v342 + 40) = *(void *)(v343 + 40);
        *(void *)(v342 + 48) = *(void *)(v343 + 48);
        *(void *)(v342 + 56) = *(void *)(v343 + 56);
        *(void *)(v342 + 64) = *(void *)(v343 + 64);
        *(unsigned char *)(v342 + 72) = *(unsigned char *)(v343 + 72);
        *(void *)(v342 + 80) = *(void *)(v343 + 80);
        *(void *)(v342 + 88) = *(void *)(v343 + 88);
        unint64_t v517 = *(void **)(v343 + 96);
        *(void *)(v342 + 96) = v517;
        *(unsigned char *)(v342 + 104) = *(unsigned char *)(v343 + 104);
        *(unsigned char *)(v342 + 105) = *(unsigned char *)(v343 + 105);
        *(void *)(v342 + 112) = *(void *)(v343 + 112);
        *(void *)(v342 + 120) = *(void *)(v343 + 120);
        *(void *)(v342 + 128) = *(void *)(v343 + 128);
        *(void *)(v342 + 136) = *(void *)(v343 + 136);
        *(void *)(v342 + 144) = *(void *)(v343 + 144);
        *(void *)(v342 + 152) = *(void *)(v343 + 152);
        *(void *)(v342 + 160) = *(void *)(v343 + 160);
        *(void *)(v342 + 168) = *(void *)(v343 + 168);
        *(unsigned char *)(v342 + 176) = *(unsigned char *)(v343 + 176);
        *(void *)(v342 + 184) = *(void *)(v343 + 184);
        uint64_t v360 = *(void *)(v343 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v361 = v517;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v360)
        {
          *(void *)(v342 + 192) = v360;
          *(void *)(v342 + 200) = *(void *)(v343 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v342 + 192) = *(_OWORD *)(v343 + 192);
        }
        uint64_t v64 = a1;
        uint64_t v288 = v474;
        *(void *)(v342 + 208) = *(void *)(v343 + 208);
        *(void *)(v342 + 216) = *(void *)(v343 + 216);
        *(void *)(v342 + 224) = *(void *)(v343 + 224);
        *(void *)(v342 + 232) = *(void *)(v343 + 232);
        *(void *)(v342 + 240) = *(void *)(v343 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v346 = *(_OWORD *)v343;
        long long v347 = *(_OWORD *)(v343 + 16);
        long long v348 = *(_OWORD *)(v343 + 48);
        *(_OWORD *)(v342 + 32) = *(_OWORD *)(v343 + 32);
        *(_OWORD *)(v342 + 48) = v348;
        *(_OWORD *)unint64_t v342 = v346;
        *(_OWORD *)(v342 + 16) = v347;
        long long v349 = *(_OWORD *)(v343 + 64);
        long long v350 = *(_OWORD *)(v343 + 80);
        long long v351 = *(_OWORD *)(v343 + 112);
        *(_OWORD *)(v342 + 96) = *(_OWORD *)(v343 + 96);
        *(_OWORD *)(v342 + 112) = v351;
        *(_OWORD *)(v342 + 64) = v349;
        *(_OWORD *)(v342 + 80) = v350;
        long long v352 = *(_OWORD *)(v343 + 128);
        long long v353 = *(_OWORD *)(v343 + 144);
        long long v354 = *(_OWORD *)(v343 + 176);
        *(_OWORD *)(v342 + 160) = *(_OWORD *)(v343 + 160);
        *(_OWORD *)(v342 + 176) = v354;
        *(_OWORD *)(v342 + 128) = v352;
        *(_OWORD *)(v342 + 144) = v353;
        long long v355 = *(_OWORD *)(v343 + 192);
        long long v356 = *(_OWORD *)(v343 + 208);
        long long v357 = *(_OWORD *)(v343 + 224);
        *(void *)(v342 + 240) = *(void *)(v343 + 240);
        *(_OWORD *)(v342 + 208) = v356;
        *(_OWORD *)(v342 + 224) = v357;
        *(_OWORD *)(v342 + 192) = v355;
        uint64_t v288 = v474;
      }
      long long v414 = (_OWORD *)((v342 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v415 = (long long *)((v343 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v416 = *v415;
      *(_OWORD *)((char *)v414 + 9) = *(long long *)((char *)v415 + 9);
      *long long v414 = v416;
      unint64_t v417 = (v342 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v418 = (v343 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v419 = *(_OWORD *)v418;
      *(unsigned char *)(v417 + 16) = *(unsigned char *)(v418 + 16);
      *(_OWORD *)unint64_t v417 = v419;
      uint64_t v420 = (void *)((v342 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v421 = (v343 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v422 = *(void *)v421;
      v421 += 15;
      void *v420 = v422;
      unint64_t v423 = (void *)(((unint64_t)v420 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v424 = *(void *)(v421 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v425 = *(void *)((v421 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v424, v425);
      *unint64_t v423 = v424;
      v423[1] = v425;
      size_t v289 = v473;
      uint64_t v287 = v512;
      if (!v457) {
        goto LABEL_168;
      }
LABEL_208:
      unint64_t v426 = ((((v288
               + ((((((((((v475 + v289 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v427 = (void *)(((unint64_t)v287 + v426) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v428 = (void *)(((unint64_t)v81 + v426) & 0xFFFFFFFFFFFFFFF8);
      void *v427 = *v428;
      v427[1] = v428[1];
      *(void *)(((unint64_t)v427 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v428 + 23) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v64 + v520) = 3;
      swift_bridgeObjectRetain();
      return v64;
    case 4u:
      uint64_t v64 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v482 + 16))(a1, a2, AssociatedTypeWitness);
      char v84 = 4;
      goto LABEL_69;
    case 5u:
      uint64_t v64 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v482 + 16))(a1, a2, AssociatedTypeWitness);
      char v84 = 5;
      goto LABEL_69;
    case 6u:
      uint64_t v64 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v482 + 16))(a1, a2, AssociatedTypeWitness);
      uint64_t v85 = (const void *)((unint64_t)&a2[v45] & v62);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v85, 1, v497))
      {
        memcpy((void *)((v45 + a1) & v62), v85, v43);
      }
      else
      {
        (*(void (**)(uint64_t, const void *, uint64_t))(v40 + 16))((v45 + a1) & v62, v85, v497);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))((v45 + a1) & v62, 0, 1, v497);
      }
      unint64_t v86 = v520;
      char v84 = 6;
      goto LABEL_89;
    case 7u:
      uint64_t v64 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v482 + 16))(a1, a2, AssociatedTypeWitness);
      char v84 = 7;
LABEL_69:
      unint64_t v86 = v520;
LABEL_89:
      *(unsigned char *)(v64 + v86) = v84;
      return v64;
    default:
      uint64_t v494 = v59;
      uint64_t v498 = v58;
      unint64_t v63 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v482 + 16);
      uint64_t v64 = a1;
      v63(a1, a2, AssociatedTypeWitness);
      uint64_t v511 = (void *)((v476 + a1) & v56);
      uint64_t v65 = (const void *)((unint64_t)&a2[v476] & v56);
      if (v478 == v477)
      {
        int v66 = (*(uint64_t (**)(const void *))(v482 + 48))(v65);
        uint64_t v67 = v479;
      }
      else
      {
        unint64_t v87 = ((unint64_t)v65 + v481) & v57;
        uint64_t v67 = v479;
        unint64_t v88 = (v479 + v87) & v507;
        if (v460 == v477)
        {
          if (v447 == v460)
          {
            int v66 = (*(uint64_t (**)(unint64_t))(v462 + 48))((v479 + v87) & v507);
          }
          else
          {
            uint64_t v120 = (unint64_t *)((v461 + v88) & 0xFFFFFFFFFFFFFFF8);
            if (v445 <= 0x7FFFFFFE)
            {
              unint64_t v121 = *v120;
              if (v121 >= 0xFFFFFFFF) {
                LODWORD(v121) = -1;
              }
              uint64_t v122 = ~v503;
              if ((v121 + 1) >= 2) {
                goto LABEL_132;
              }
              goto LABEL_135;
            }
            int v66 = (*(uint64_t (**)(unint64_t))(v455 + 48))(((unint64_t)v120 + v454) & v498);
          }
        }
        else
        {
          unint64_t v101 = v468 + v88;
          if ((v446 & 0x80000000) != 0)
          {
            uint64_t v130 = (v459 + ((v458 + v101) & ~v503)) & v494;
            if (v457 <= 0x7FFFFFFD)
            {
              uint64_t v122 = ~v503;
              unint64_t v430 = *(void *)(((v444 + ((v453 + v130) & v494)) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v430 >= 0xFFFFFFFF) {
                LODWORD(v430) = -1;
              }
              if ((v430 + 1) >= 2) {
                goto LABEL_132;
              }
              goto LABEL_135;
            }
            int v66 = (*(uint64_t (**)(uint64_t))(v467 + 48))(v130);
          }
          else
          {
            unint64_t v102 = *(void *)(v101 + 8);
            if (v102 >= 0xFFFFFFFF) {
              LODWORD(v102) = -1;
            }
            int v66 = v102 + 1;
          }
        }
      }
      uint64_t v122 = ~v503;
      if (v66)
      {
LABEL_132:
        unint64_t v132 = v511;
        memcpy(v511, v65, v466);
        uint64_t v133 = v474;
LABEL_133:
        size_t v134 = v480;
        goto LABEL_185;
      }
      unint64_t v87 = ((unint64_t)v65 + v481) & v57;
      unint64_t v88 = (v67 + v87) & v507;
LABEL_135:
      uint64_t v432 = v122;
      ((void (*)(void *))v63)(v511);
      unint64_t v135 = ((unint64_t)v511 + v481) & v57;
      v63(v135, (unsigned __int8 *)v87, AssociatedTypeWitness);
      unint64_t v136 = (v67 + v135) & v507;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v462 + 16))(v136, v88, v463);
      int v137 = (void *)((v461 + v136) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v138 = (void *)((v461 + v88) & 0xFFFFFFFFFFFFFFF8);
      *int v137 = *v138;
      unint64_t v139 = ((unint64_t)v137 + v454) & v498;
      unint64_t v140 = ((unint64_t)v138 + v454) & v498;
      unint64_t v141 = *(void (**)(unint64_t, unint64_t, uint64_t))(v455 + 16);
      swift_bridgeObjectRetain();
      v141(v139, v140, v456);
      unint64_t v142 = (void *)((v450 + v140) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v143 = (void *)((v450 + v139) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v143 = *v142;
      unint64_t v144 = (void *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v145 = (void *)(((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v144 = *v145;
      v144[1] = v145[1];
      unint64_t v146 = (void *)(v468 + v136);
      *unint64_t v146 = *(void *)(v468 + v88);
      v146[1] = *(void *)(v468 + v88 + 8);
      unint64_t v147 = (v458 + v468 + v136) & v432;
      unint64_t v148 = (v458 + v468 + v88) & v432;
      *(unsigned char *)unint64_t v147 = *(unsigned char *)v148;
      uint64_t v149 = v147 | 4;
      int v150 = *(_DWORD *)(v148 | 4);
      *(unsigned char *)(v149 + 4) = *(unsigned char *)((v148 | 4) + 4);
      *(_DWORD *)uint64_t v149 = v150;
      *(_WORD *)(v147 + 10) = *(_WORD *)(v148 + 0xA);
      unint64_t v514 = v147;
      unint64_t v151 = (v459 + v147) & v494;
      unint64_t v152 = (v459 + v148) & v494;
      uint64_t v153 = *(void (**)(unint64_t, unint64_t, uint64_t))(v467 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v153(v151, v152, v472);
      size_t v154 = (v453 + v151) & v494;
      size_t v155 = (v453 + v152) & v494;
      v153(v154, v155, v472);
      uint64_t v156 = (unsigned char *)(v154 + v473);
      unsigned char *v156 = *(unsigned char *)(v155 + v473);
      v156[1] = *(unsigned char *)(v155 + v473 + 1);
      v156[2] = *(unsigned char *)(v155 + v473 + 2);
      v156[3] = *(unsigned char *)(v155 + v473 + 3);
      v156[4] = *(unsigned char *)(v155 + v473 + 4);
      unint64_t v157 = (v154 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v158 = (v155 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v157 = *(void *)v158;
      *(void *)(v157 + 8) = *(void *)(v158 + 8);
      *(unsigned char *)(v157 + 16) = *(unsigned char *)(v158 + 16);
      *(unsigned char *)(v157 + 17) = *(unsigned char *)(v158 + 17);
      *(unsigned char *)(v157 + 18) = *(unsigned char *)(v158 + 18);
      *(unsigned char *)(v157 + 19) = *(unsigned char *)(v158 + 19);
      unint64_t v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v158 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v159 = *(void *)v160;
      *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
      *(unsigned char *)(v159 + 9) = *(unsigned char *)(v160 + 9);
      *(unsigned char *)(v159 + 10) = *(unsigned char *)(v160 + 10);
      *(unsigned char *)(v159 + 11) = *(unsigned char *)(v160 + 11);
      *(unsigned char *)(v159 + 12) = *(unsigned char *)(v160 + 12);
      uint64_t v161 = (void *)((v158 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v162 = (void *)((v157 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v162 = *v161;
      unint64_t v163 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v164 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v163 = *(void *)v164;
      *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
      *(unsigned char *)(v163 + 9) = *(unsigned char *)(v164 + 9);
      uint64_t v165 = (void *)((v451 + v163) & v494);
      uint64_t v166 = (const void *)((v451 + v164) & v494);
      unsigned int v167 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v467 + 48);
      swift_bridgeObjectRetain();
      if (v167(v166, 1, v472))
      {
        memcpy(v165, v166, v480);
      }
      else
      {
        v153((unint64_t)v165, (unint64_t)v166, v472);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v467 + 56))(v165, 0, 1, v472);
      }
      uint64_t v168 = (void *)(((unint64_t)v165 + v448) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v169 = (void *)(((unint64_t)v166 + v448) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v168 = *v169;
      unint64_t v170 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v171 = ((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v172 = *(void *)v171;
      *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
      *(void *)unint64_t v170 = v172;
      unint64_t v173 = (void *)(((unint64_t)v168 + 31) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v174 = (void *)(((unint64_t)v169 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v173 = *v174;
      unint64_t v175 = ((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v176 = (uint64_t *)(((unint64_t)v174 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v177 = v176[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v177 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v175 = *(_OWORD *)v176;
      }
      else
      {
        uint64_t v178 = *v176;
        sub_10001EBB0(*v176, v177);
        *(void *)unint64_t v175 = v178;
        *(void *)(v175 + 8) = v177;
      }
      unint64_t v179 = (v175 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v180 = ((unint64_t)v176 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v181 = *(void *)v180;
      *(unsigned char *)(v179 + 8) = *(unsigned char *)(v180 + 8);
      *(void *)unint64_t v179 = v181;
      *(unsigned char *)(v179 + 9) = *(unsigned char *)(v180 + 9);
      unint64_t v182 = (v179 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v183 = (v180 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v184 = *(_DWORD *)v183;
      *(unsigned char *)(v182 + 4) = *(unsigned char *)(v183 + 4);
      *(_DWORD *)unint64_t v182 = v184;
      int v185 = (void *)((v179 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v186 = (void *)((v180 + 25) & 0xFFFFFFFFFFFFFFF8);
      *int v185 = *v186;
      v185[1] = v186[1];
      unint64_t v187 = v449 + v514;
      unint64_t v188 = v449 + v148;
      unint64_t v189 = *(void *)(v449 + v148 + 16);
      if (v189 >= 0xFFFFFFFF) {
        LODWORD(v189) = -1;
      }
      int v190 = v189 - 1;
      swift_bridgeObjectRetain();
      if (v190 < 0)
      {
        *(void *)unint64_t v187 = *(void *)v188;
        *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
        *(unsigned char *)(v187 + 9) = *(unsigned char *)(v188 + 9);
        uint64_t v203 = *(void *)(v188 + 16);
        swift_errorRetain();
        *(void *)(v187 + 16) = v203;
        uint64_t v204 = *(void *)(v188 + 24);
        swift_errorRetain();
        *(void *)(v187 + 24) = v204;
        *(unsigned char *)(v187 + 32) = *(unsigned char *)(v188 + 32);
        *(unsigned char *)(v187 + 33) = *(unsigned char *)(v188 + 33);
        *(unsigned char *)(v187 + 34) = *(unsigned char *)(v188 + 34);
        *(void *)(v187 + 40) = *(void *)(v188 + 40);
        *(void *)(v187 + 48) = *(void *)(v188 + 48);
        *(void *)(v187 + 56) = *(void *)(v188 + 56);
        *(void *)(v187 + 64) = *(void *)(v188 + 64);
        *(unsigned char *)(v187 + 72) = *(unsigned char *)(v188 + 72);
        *(void *)(v187 + 80) = *(void *)(v188 + 80);
        *(void *)(v187 + 88) = *(void *)(v188 + 88);
        unint64_t v515 = *(void **)(v188 + 96);
        *(void *)(v187 + 96) = v515;
        *(unsigned char *)(v187 + 104) = *(unsigned char *)(v188 + 104);
        *(unsigned char *)(v187 + 105) = *(unsigned char *)(v188 + 105);
        *(void *)(v187 + 112) = *(void *)(v188 + 112);
        *(void *)(v187 + 120) = *(void *)(v188 + 120);
        *(void *)(v187 + 128) = *(void *)(v188 + 128);
        *(void *)(v187 + 136) = *(void *)(v188 + 136);
        *(void *)(v187 + 144) = *(void *)(v188 + 144);
        *(void *)(v187 + 152) = *(void *)(v188 + 152);
        *(void *)(v187 + 160) = *(void *)(v188 + 160);
        *(void *)(v187 + 168) = *(void *)(v188 + 168);
        *(unsigned char *)(v187 + 176) = *(unsigned char *)(v188 + 176);
        *(void *)(v187 + 184) = *(void *)(v188 + 184);
        uint64_t v205 = *(void *)(v188 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v206 = v515;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v205)
        {
          *(void *)(v187 + 192) = v205;
          *(void *)(v187 + 200) = *(void *)(v188 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v187 + 192) = *(_OWORD *)(v188 + 192);
        }
        uint64_t v64 = a1;
        uint64_t v133 = v474;
        *(void *)(v187 + 208) = *(void *)(v188 + 208);
        *(void *)(v187 + 216) = *(void *)(v188 + 216);
        *(void *)(v187 + 224) = *(void *)(v188 + 224);
        *(void *)(v187 + 232) = *(void *)(v188 + 232);
        *(void *)(v187 + 240) = *(void *)(v188 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v191 = *(_OWORD *)v188;
        long long v192 = *(_OWORD *)(v188 + 16);
        long long v193 = *(_OWORD *)(v188 + 48);
        *(_OWORD *)(v187 + 32) = *(_OWORD *)(v188 + 32);
        *(_OWORD *)(v187 + 48) = v193;
        *(_OWORD *)unint64_t v187 = v191;
        *(_OWORD *)(v187 + 16) = v192;
        long long v194 = *(_OWORD *)(v188 + 64);
        long long v195 = *(_OWORD *)(v188 + 80);
        long long v196 = *(_OWORD *)(v188 + 112);
        *(_OWORD *)(v187 + 96) = *(_OWORD *)(v188 + 96);
        *(_OWORD *)(v187 + 112) = v196;
        *(_OWORD *)(v187 + 64) = v194;
        *(_OWORD *)(v187 + 80) = v195;
        long long v197 = *(_OWORD *)(v188 + 128);
        long long v198 = *(_OWORD *)(v188 + 144);
        long long v199 = *(_OWORD *)(v188 + 176);
        *(_OWORD *)(v187 + 160) = *(_OWORD *)(v188 + 160);
        *(_OWORD *)(v187 + 176) = v199;
        *(_OWORD *)(v187 + 128) = v197;
        *(_OWORD *)(v187 + 144) = v198;
        long long v200 = *(_OWORD *)(v188 + 192);
        long long v201 = *(_OWORD *)(v188 + 208);
        long long v202 = *(_OWORD *)(v188 + 224);
        *(void *)(v187 + 240) = *(void *)(v188 + 240);
        *(_OWORD *)(v187 + 208) = v201;
        *(_OWORD *)(v187 + 224) = v202;
        *(_OWORD *)(v187 + 192) = v200;
        uint64_t v133 = v474;
      }
      unint64_t v362 = (_OWORD *)((v187 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v363 = (long long *)((v188 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v364 = *v363;
      *(_OWORD *)((char *)v362 + 9) = *(long long *)((char *)v363 + 9);
      _OWORD *v362 = v364;
      unint64_t v365 = (v187 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v366 = (v188 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v367 = *(_OWORD *)v366;
      *(unsigned char *)(v365 + 16) = *(unsigned char *)(v366 + 16);
      *(_OWORD *)unint64_t v365 = v367;
      unint64_t v368 = (void *)((v187 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v369 = (v188 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v370 = *(void *)v369;
      v369 += 15;
      *unint64_t v368 = v370;
      uint64_t v371 = (void *)(((unint64_t)v368 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v372 = *(void *)(v369 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v373 = *(void *)((v369 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v372, v373);
      void *v371 = v372;
      v371[1] = v373;
      size_t v134 = v473;
      unint64_t v132 = v511;
      if (!v457) {
        goto LABEL_133;
      }
LABEL_185:
      unint64_t v374 = ((((v133
               + ((((((((((v475 + v134 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      long long v375 = (void *)(((unint64_t)v132 + v374) & 0xFFFFFFFFFFFFFFF8);
      long long v376 = (void *)(((unint64_t)v65 + v374) & 0xFFFFFFFFFFFFFFF8);
      void *v375 = *v376;
      id v377 = *(void **)(((unint64_t)v376 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFFFF8) = v377;
      *(unsigned char *)(v64 + v520) = 0;
      id v378 = v377;
      return v64;
  }
}

unsigned __int8 *sub_1006860EC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a1 == a2) {
    return v3;
  }
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v555 = *(void *)(v5 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v550 = v4;
  uint64_t v513 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v513 - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v503 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v503 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v510 = sub_10096B0E0();
  uint64_t v12 = *(void *)(v510 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v13 | 7;
  uint64_t v15 = v11 | v6 | v13;
  int v554 = (void *)v5;
  uint64_t v512 = v7;
  uint64_t v502 = v9;
  unsigned int v16 = *(_DWORD *)(v9 + 84);
  unsigned int v485 = *(_DWORD *)(v7 + 84);
  if (v485 > v16) {
    unsigned int v16 = *(_DWORD *)(v7 + 84);
  }
  unsigned int v480 = v16;
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  unsigned int v507 = v16;
  unsigned int v524 = *(_DWORD *)(v5 + 84);
  if (v16 <= v524) {
    unsigned int v16 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v500 = *(void *)(v510 - 8);
  unsigned int v17 = *(_DWORD *)(v12 + 84);
  if (v17 <= 0x7FFFFFFE) {
    unsigned int v18 = 2147483646;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v12 + 84);
  }
  if (v16 > v18) {
    unsigned int v18 = v16;
  }
  unsigned int v484 = v18;
  if (v18 <= 0x7FFFFFFF) {
    int v19 = 0x7FFFFFFF;
  }
  else {
    int v19 = v18;
  }
  int v523 = v19;
  unsigned int v487 = v17;
  uint64_t v525 = v555 + v6;
  uint64_t v531 = v11;
  uint64_t v526 = v555 + v11;
  unint64_t v20 = (v555 + v11 + ((v555 + v6) & ~v6)) & ~v11;
  uint64_t v21 = v13;
  uint64_t v511 = *(void *)(v7 + 64) + 7;
  uint64_t v501 = v10 + 8;
  uint64_t v537 = v10;
  uint64_t v492 = *(void *)(v9 + 64) + 7;
  unint64_t v516 = ((((v492 + ((v10 + 8 + (v511 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v504 = v14 + 16;
  uint64_t v22 = v14 + 16 + v516 + v20;
  uint64_t v529 = v13 | 7;
  uint64_t v505 = v13 + 12;
  size_t v23 = *(void *)(*(void *)(v510 - 8) + 64);
  size_t v499 = v23 + v13;
  size_t v483 = v23 + 12;
  unint64_t v24 = (v13
       + 10
       + ((((((v23 + 12 + ((v23 + v13 + ((v13 + 12) & ~v13)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  size_t v491 = v23;
  if (!v17) {
    ++v23;
  }
  size_t v508 = v23;
  unint64_t v509 = v24;
  uint64_t v493 = v13 + 10;
  size_t v494 = v23 + 7;
  uint64_t v506 = v22 & ~v14;
  unint64_t v495 = ((((((((((v23 + 7 + v24) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  size_t v521 = ((((v506 + v495 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v522 = v15 + v555;
  uint64_t v527 = v15;
  size_t v25 = v521 + ((v15 + v555) & ~v15);
  unint64_t v534 = (v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  size_t v548 = (v25 + v28) & ~v28;
  uint64_t v519 = v27;
  uint64_t v520 = v26;
  if (*(_DWORD *)(v27 + 84)) {
    uint64_t v29 = *(void *)(v27 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v27 + 64) + 1;
  }
  uint64_t v515 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v515 - 8);
  int v31 = *(_DWORD *)(v30 + 80) & 0xF8;
  uint64_t v498 = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(v498 - 8);
  uint64_t v33 = *(unsigned __int8 *)(v32 + 80);
  int v34 = v31 | v33;
  uint64_t v3 = a1;
  uint64_t v35 = v34 | 7u;
  uint64_t v514 = v30;
  uint64_t v497 = v32;
  unsigned int v36 = *(_DWORD *)(v32 + 84);
  unsigned int v481 = v36;
  if (*(_DWORD *)(v30 + 84) > v36) {
    unsigned int v36 = *(_DWORD *)(v30 + 84);
  }
  unsigned int v488 = v36;
  if (v36 <= 0x7FFFFFFE) {
    int v37 = 2147483646;
  }
  else {
    int v37 = v36;
  }
  uint64_t v517 = *(void *)(v30 + 64) + 7;
  uint64_t v496 = v33 + 8;
  uint64_t v486 = *(void *)(*(void *)(v498 - 8) + 64) + 7;
  unint64_t v38 = ((((v486 + ((v33 + 8 + (v517 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t __n = v29;
  unint64_t v39 = ((((((v29 + v35 + v548) & ~v35) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v40 = *(void *)(v550 - 8);
  uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v549 = v28;
  uint64_t v490 = v555 + v28;
  uint64_t v518 = v29 + v35;
  if (*(_DWORD *)(v40 + 84)) {
    uint64_t v42 = *(void *)(*(void *)(v550 - 8) + 64);
  }
  else {
    uint64_t v42 = *(void *)(*(void *)(v550 - 8) + 64) + 1;
  }
  unint64_t v43 = ((v534 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v555 > v43) {
    unint64_t v43 = v555;
  }
  if (v39 <= v38 + ((v29 + v35 + ((v555 + v28) & ~v28)) & ~v35) + 16) {
    unint64_t v39 = v38 + ((v29 + v35 + ((v555 + v28) & ~v28)) & ~v35) + 16;
  }
  uint64_t v489 = v555 + v41;
  unint64_t v44 = ((v555 + v41) & ~v41) + v42;
  if (((v534 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v44) {
    unint64_t v44 = ((v534 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v43 <= v39) {
    unint64_t v43 = v39;
  }
  if (v43 <= v44) {
    unint64_t v45 = v44;
  }
  else {
    unint64_t v45 = v43;
  }
  unsigned int v46 = a1[v45];
  unsigned int v47 = v46 - 8;
  if (v46 < 8)
  {
    uint64_t v50 = v531;
    uint64_t v49 = v6;
    uint64_t v52 = v527;
    uint64_t v51 = v529;
  }
  else
  {
    if (v45 <= 3) {
      uint64_t v48 = v45;
    }
    else {
      uint64_t v48 = 4;
    }
    uint64_t v50 = v531;
    uint64_t v49 = v6;
    uint64_t v52 = v527;
    uint64_t v51 = v529;
    switch(v48)
    {
      case 1:
        int v53 = *a1;
        if (v45 < 4) {
          goto LABEL_53;
        }
        goto LABEL_54;
      case 2:
        int v53 = *(unsigned __int16 *)a1;
        if (v45 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 3:
        int v53 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v45 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 4:
        int v53 = *(_DWORD *)a1;
        if (v45 < 4) {
LABEL_53:
        }
          v53 |= v47 << (8 * v45);
LABEL_54:
        unsigned int v46 = v53 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v535 = ~v52;
  uint64_t v536 = ~v49;
  uint64_t v556 = ~v50;
  uint64_t v54 = ~v537;
  uint64_t v55 = ~v51;
  uint64_t v532 = ~v21;
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v57 = ~v549;
  uint64_t v533 = ~v35;
  uint64_t v530 = ~v33;
  uint64_t v528 = ~v41;
  int v538 = *(_DWORD *)(v30 + 84);
  size_t v479 = v42;
  switch(v46)
  {
    case 1u:
      size_t v472 = ((((v486 + ((v33 + 8 + (v517 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      int v477 = v37;
      uint64_t v73 = (void (*)(unsigned __int8 *, uint64_t))v554[1];
      v73(a1, AssociatedTypeWitness);
      unint64_t v74 = (unint64_t)&a1[v522] & v535;
      if (v524 == v523)
      {
        unsigned int v75 = (uint64_t (*)(unint64_t))v554[6];
        unint64_t v76 = (unint64_t)&a1[v522] & v535;
        goto LABEL_75;
      }
      unint64_t v78 = (v525 + v74) & v536;
      unint64_t v79 = (v526 + v78) & v556;
      if (v507 == v523)
      {
        if (v485 == v507)
        {
          unsigned int v75 = *(uint64_t (**)(unint64_t))(v512 + 48);
          unint64_t v76 = (v526 + v78) & v556;
          goto LABEL_75;
        }
        uint64_t v168 = (unint64_t *)((v511 + v79) & 0xFFFFFFFFFFFFFFF8);
        if (v480 <= 0x7FFFFFFE)
        {
          unint64_t v169 = *v168;
          goto LABEL_358;
        }
        unint64_t v76 = ((unint64_t)v168 + v501) & v54;
        unsigned int v75 = *(uint64_t (**)(unint64_t))(v502 + 48);
      }
      else
      {
        unint64_t v115 = v516 + v79;
        if ((v484 & 0x80000000) == 0)
        {
          unint64_t v116 = *(void *)(v115 + 8);
          if (v116 >= 0xFFFFFFFF) {
            LODWORD(v116) = -1;
          }
          if (v116 == -1)
          {
LABEL_76:
            unint64_t v78 = (v525 + v74) & v536;
            unint64_t v79 = (v526 + v78) & v556;
LABEL_77:
            unint64_t v469 = v74;
            v73((unsigned __int8 *)v74, AssociatedTypeWitness);
            v73((unsigned __int8 *)v78, AssociatedTypeWitness);
            (*(void (**)(unint64_t, uint64_t))(v512 + 8))(v79, v513);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v502 + 8))((v501 + ((v511 + v79) & 0xFFFFFFFFFFFFFFF8)) & v54, v503);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v80 = (v504 + v516 + v79) & v55;
            unint64_t v81 = *(void (**)(unint64_t, uint64_t))(v500 + 8);
            v81((v505 + v80) & v532, v510);
            unint64_t v82 = (v499 + ((v505 + v80) & v532)) & v532;
            v81(v82, v510);
            swift_bridgeObjectRelease();
            unint64_t v83 = (v493
                 + ((((((v483 + v82) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v532;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v500 + 48))(v83, 1, v510)) {
              v81(v83, v510);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v84 = (uint64_t *)((((((v494 + v83) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v85 = v84[1];
            if ((v85 & 0x3000000000000000) == 0) {
              sub_10001E9C0(*v84, v85);
            }
            swift_bridgeObjectRelease();
            unint64_t v86 = v495 + v80;
            LODWORD(v87) = -1;
            if (*(void *)(v86 + 16) < 0xFFFFFFFFuLL) {
              uint64_t v87 = *(void *)(v86 + 16);
            }
            uint64_t v56 = AssociatedTypeWitness;
            if ((int)v87 - 1 < 0)
            {
              swift_errorRelease();
              swift_errorRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v86 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_1000CF144(*(void *)((((v86 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v86 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            unint64_t v74 = v469;
          }
LABEL_88:
          uint64_t v57 = ~v549;
          size_t v88 = (v74 + v549 + v521) & ~v549;
          if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v519 + 48))(v88, 1, v520)) {
            (*(void (**)(size_t, uint64_t))(v519 + 8))(v88, v520);
          }
          size_t v89 = (v518 + v88) & v533;
          int v37 = v477;
          if (v538 == v477)
          {
            if (!(*(unsigned int (**)(size_t))(v514 + 48))(v89)) {
              goto LABEL_147;
            }
          }
          else
          {
            unint64_t v109 = (uint64_t *)((v517 + v89) & 0xFFFFFFFFFFFFFFF8);
            if (v488 <= 0x7FFFFFFE)
            {
              uint64_t v110 = *v109;
              if ((unint64_t)*v109 >= 0xFFFFFFFF) {
                LODWORD(v110) = -1;
              }
              if ((v110 + 1) >= 2) {
                goto LABEL_149;
              }
              goto LABEL_148;
            }
            if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v497 + 48))(((unint64_t)v109 + v496) & v530, v481, v498))
            {
LABEL_147:
              unint64_t v109 = (uint64_t *)((v517 + v89) & 0xFFFFFFFFFFFFFFF8);
LABEL_148:
              (*(void (**)(size_t, uint64_t))(v514 + 8))(v89, v515);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v497 + 8))(((unint64_t)v109 + v496) & v530, v498);
              int v37 = v477;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
LABEL_149:
          unint64_t v38 = v472;

          goto LABEL_154;
        }
        unint64_t v76 = (v505 + ((v504 + v115) & v55)) & v532;
        if (v487 <= 0x7FFFFFFD)
        {
          unint64_t v169 = *(void *)(((v483 + ((v499 + v76) & v532)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_358:
          if (v169 >= 0xFFFFFFFF) {
            LODWORD(v169) = -1;
          }
          if ((v169 + 1) < 2) {
            goto LABEL_77;
          }
          goto LABEL_88;
        }
        unsigned int v75 = *(uint64_t (**)(unint64_t))(v500 + 48);
      }
LABEL_75:
      int v77 = v75(v76);
      unint64_t v74 = (unint64_t)&a1[v522] & v535;
      if (v77) {
        goto LABEL_88;
      }
      goto LABEL_76;
    case 2u:
      uint64_t v470 = v54;
      uint64_t v90 = ~v51;
      ((void (*)(unsigned __int8 *, uint64_t))v554[1])(a1, AssociatedTypeWitness);
      unint64_t v91 = (unint64_t)&a1[v490] & v57;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v519 + 48))(v91, 1, v520)) {
        (*(void (**)(unint64_t, uint64_t))(v519 + 8))(v91, v520);
      }
      unint64_t v92 = v38;
      unint64_t v93 = (v518 + v91) & v533;
      if (v538 == v37)
      {
        if ((*(unsigned int (**)(unint64_t))(v514 + 48))(v93)) {
          goto LABEL_153;
        }
LABEL_151:
        unint64_t v111 = (uint64_t *)((v517 + v93) & 0xFFFFFFFFFFFFFFF8);
LABEL_152:
        (*(void (**)(unint64_t, uint64_t))(v514 + 8))(v93, v515);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v497 + 8))(((unint64_t)v111 + v496) & v530, v498);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_153;
      }
      unint64_t v111 = (uint64_t *)((v517 + v93) & 0xFFFFFFFFFFFFFFF8);
      if (v488 > 0x7FFFFFFE)
      {
        if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v497 + 48))(((unint64_t)v111 + v496) & v530, v481, v498))
        {
          goto LABEL_153;
        }
        goto LABEL_151;
      }
      uint64_t v112 = *v111;
      if ((unint64_t)*v111 >= 0xFFFFFFFF) {
        LODWORD(v112) = -1;
      }
      if ((v112 + 1) < 2) {
        goto LABEL_152;
      }
LABEL_153:
      unint64_t v38 = v92;

      uint64_t v57 = ~v549;
      uint64_t v55 = v90;
      uint64_t v54 = v470;
LABEL_154:
      unsigned int v117 = a2[v45];
      unsigned int v118 = v117 - 8;
      if (v117 >= 8)
      {
        if (v45 <= 3) {
          uint64_t v119 = v45;
        }
        else {
          uint64_t v119 = 4;
        }
        switch(v119)
        {
          case 1:
            int v120 = *a2;
            if (v45 < 4) {
              goto LABEL_162;
            }
            goto LABEL_166;
          case 2:
            int v120 = *(unsigned __int16 *)a2;
            if (v45 < 4) {
              goto LABEL_162;
            }
            goto LABEL_166;
          case 3:
            int v120 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v45 < 4) {
              goto LABEL_162;
            }
            goto LABEL_166;
          case 4:
            int v120 = *(_DWORD *)a2;
            if (v45 < 4) {
LABEL_162:
            }
              unsigned int v117 = (v120 | (v118 << (8 * v45))) + 8;
            else {
LABEL_166:
            }
              unsigned int v117 = v120 + 8;
            break;
          default:
            break;
        }
      }
      switch(v117)
      {
        case 1u:
          size_t v473 = v38;
          uint64_t v475 = v57;
          unint64_t v124 = (void (*)(unsigned __int8 *))v554[2];
          v124(a1);
          size_t v543 = (void *)((unint64_t)&a1[v522] & v535);
          uint64_t v125 = (const void *)((unint64_t)&a2[v522] & v535);
          size_t v552 = v125;
          int v478 = v37;
          if (v524 == v523)
          {
            int v126 = ((uint64_t (*)(unint64_t))v554[6])((unint64_t)&a2[v522] & v535);
LABEL_269:
            uint64_t v125 = (const void *)((unint64_t)&a2[v522] & v535);
LABEL_270:
            if (v126)
            {
LABEL_271:
              unint64_t v255 = (unint64_t)&a1[v522] & v535;
              memcpy(v543, v125, v521);
              uint64_t v256 = v506;
              goto LABEL_272;
            }
            unint64_t v139 = ((unint64_t)v125 + v525) & v536;
            unint64_t v140 = (v526 + v139) & v556;
LABEL_274:
            ((void (*)(void *, const void *, uint64_t))v124)(v543, v125, v56);
            unint64_t v258 = ((unint64_t)v543 + v525) & v536;
            ((void (*)(unint64_t, unint64_t, uint64_t))v124)(v258, v139, v56);
            unint64_t v259 = (v526 + v258) & v556;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v512 + 16))(v259, v140, v513);
            uint64_t v260 = (void *)((v511 + v259) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v261 = (void *)((v511 + v140) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v260 = *v261;
            unint64_t v262 = ((unint64_t)v260 + v501) & v54;
            unint64_t v263 = ((unint64_t)v261 + v501) & v54;
            unint64_t v264 = *(void (**)(unint64_t, unint64_t, uint64_t))(v502 + 16);
            swift_bridgeObjectRetain();
            v264(v262, v263, v503);
            size_t v265 = (void *)((v492 + v263) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v266 = (void *)((v492 + v262) & 0xFFFFFFFFFFFFFFF8);
            void *v266 = *v265;
            unint64_t v267 = (void *)(((unint64_t)v266 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v268 = (void *)(((unint64_t)v265 + 15) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v267 = *v268;
            v267[1] = v268[1];
            int v269 = (void *)(v516 + v259);
            *int v269 = *(void *)(v516 + v140);
            v269[1] = *(void *)(v516 + v140 + 8);
            unint64_t v270 = (v504 + v516 + v259) & v55;
            unint64_t v271 = (v504 + v516 + v140) & v55;
            *(unsigned char *)unint64_t v270 = *(unsigned char *)v271;
            uint64_t v272 = v270 | 4;
            int v273 = *(_DWORD *)(v271 | 4);
            *(unsigned char *)(v272 + 4) = *(unsigned char *)((v271 | 4) + 4);
            *(_DWORD *)uint64_t v272 = v273;
            *(_WORD *)(v270 + 10) = *(_WORD *)(v271 + 0xA);
            unint64_t v274 = (v505 + v270) & v532;
            unint64_t v559 = v271;
            unint64_t v275 = (v505 + v271) & v532;
            long long v276 = *(void (**)(unint64_t, unint64_t, uint64_t))(v500 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v276(v274, v275, v510);
            size_t v277 = (v499 + v274) & v532;
            size_t v278 = (v499 + v275) & v532;
            v276(v277, v278, v510);
            long long v279 = (unsigned char *)(v277 + v491);
            *long long v279 = *(unsigned char *)(v278 + v491);
            v279[1] = *(unsigned char *)(v278 + v491 + 1);
            v279[2] = *(unsigned char *)(v278 + v491 + 2);
            v279[3] = *(unsigned char *)(v278 + v491 + 3);
            v279[4] = *(unsigned char *)(v278 + v491 + 4);
            unint64_t v280 = (v277 + v491 + 12) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v281 = (v278 + v491 + 12) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v280 = *(void *)v281;
            *(void *)(v280 + 8) = *(void *)(v281 + 8);
            *(unsigned char *)(v280 + 16) = *(unsigned char *)(v281 + 16);
            *(unsigned char *)(v280 + 17) = *(unsigned char *)(v281 + 17);
            *(unsigned char *)(v280 + 18) = *(unsigned char *)(v281 + 18);
            *(unsigned char *)(v280 + 19) = *(unsigned char *)(v281 + 19);
            unint64_t v282 = (v280 + 27) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v283 = (v281 + 27) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v282 = *(void *)v283;
            *(unsigned char *)(v282 + 8) = *(unsigned char *)(v283 + 8);
            *(unsigned char *)(v282 + 9) = *(unsigned char *)(v283 + 9);
            *(unsigned char *)(v282 + 10) = *(unsigned char *)(v283 + 10);
            *(unsigned char *)(v282 + 11) = *(unsigned char *)(v283 + 11);
            *(unsigned char *)(v282 + 12) = *(unsigned char *)(v283 + 12);
            uint64_t v284 = (void *)((v281 + 47) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v285 = (void *)((v280 + 47) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v285 = *v284;
            unint64_t v286 = ((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v287 = ((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v286 = *(void *)v287;
            *(unsigned char *)(v286 + 8) = *(unsigned char *)(v287 + 8);
            *(unsigned char *)(v286 + 9) = *(unsigned char *)(v287 + 9);
            uint64_t v288 = (void *)((v493 + v286) & v532);
            size_t v289 = (const void *)((v493 + v287) & v532);
            unint64_t v290 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v500 + 48);
            swift_bridgeObjectRetain();
            if (v290(v289, 1, v510))
            {
              memcpy(v288, v289, v508);
            }
            else
            {
              v276((unint64_t)v288, (unint64_t)v289, v510);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v500 + 56))(v288, 0, 1, v510);
            }
            uint64_t v3 = a1;
            unint64_t v291 = (void *)(((unint64_t)v288 + v494) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v292 = (void *)(((unint64_t)v289 + v494) & 0xFFFFFFFFFFFFFFF8);
            void *v291 = *v292;
            unint64_t v293 = ((unint64_t)v291 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v294 = ((unint64_t)v292 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v295 = *(void *)v294;
            *(unsigned char *)(v293 + 8) = *(unsigned char *)(v294 + 8);
            *(void *)unint64_t v293 = v295;
            unint64_t v296 = (void *)(((unint64_t)v291 + 31) & 0xFFFFFFFFFFFFFFF8);
            v297 = (void *)(((unint64_t)v292 + 31) & 0xFFFFFFFFFFFFFFF8);
            void *v296 = *v297;
            unint64_t v298 = ((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v299 = (uint64_t *)(((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v300 = v299[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((v300 & 0x3000000000000000) != 0)
            {
              *(_OWORD *)unint64_t v298 = *(_OWORD *)v299;
            }
            else
            {
              uint64_t v301 = *v299;
              sub_10001EBB0(*v299, v300);
              *(void *)unint64_t v298 = v301;
              *(void *)(v298 + 8) = v300;
            }
            unint64_t v302 = (v298 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v303 = ((unint64_t)v299 + 19) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v304 = *(void *)v303;
            *(unsigned char *)(v302 + 8) = *(unsigned char *)(v303 + 8);
            *(void *)unint64_t v302 = v304;
            *(unsigned char *)(v302 + 9) = *(unsigned char *)(v303 + 9);
            unint64_t v305 = (v302 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            unint64_t v306 = (v303 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            int v307 = *(_DWORD *)v306;
            *(unsigned char *)(v305 + 4) = *(unsigned char *)(v306 + 4);
            *(_DWORD *)unint64_t v305 = v307;
            uint64_t v308 = (void *)((v302 + 25) & 0xFFFFFFFFFFFFFFF8);
            size_t v309 = (void *)((v303 + 25) & 0xFFFFFFFFFFFFFFF8);
            void *v308 = *v309;
            v308[1] = v309[1];
            unint64_t v310 = v495 + v270;
            unint64_t v311 = (long long *)(v495 + v559);
            unint64_t v312 = *(void *)(v495 + v559 + 16);
            if (v312 >= 0xFFFFFFFF) {
              LODWORD(v312) = -1;
            }
            int v313 = v312 - 1;
            swift_bridgeObjectRetain();
            if (v313 < 0)
            {
              *(void *)unint64_t v310 = *(void *)v311;
              *(unsigned char *)(v310 + 8) = *((unsigned char *)v311 + 8);
              *(unsigned char *)(v310 + 9) = *((unsigned char *)v311 + 9);
              uint64_t v327 = *((void *)v311 + 2);
              swift_errorRetain();
              *(void *)(v310 + 16) = v327;
              uint64_t v328 = *((void *)v311 + 3);
              swift_errorRetain();
              *(void *)(v310 + 24) = v328;
              *(unsigned char *)(v310 + 32) = *((unsigned char *)v311 + 32);
              *(unsigned char *)(v310 + 33) = *((unsigned char *)v311 + 33);
              *(unsigned char *)(v310 + 34) = *((unsigned char *)v311 + 34);
              *(void *)(v310 + 40) = *((void *)v311 + 5);
              *(void *)(v310 + 48) = *((void *)v311 + 6);
              *(void *)(v310 + 56) = *((void *)v311 + 7);
              *(void *)(v310 + 64) = *((void *)v311 + 8);
              *(unsigned char *)(v310 + 72) = *((unsigned char *)v311 + 72);
              *(void *)(v310 + 80) = *((void *)v311 + 10);
              *(void *)(v310 + 88) = *((void *)v311 + 11);
              unint64_t v560 = (void *)*((void *)v311 + 12);
              *(void *)(v310 + 96) = v560;
              *(unsigned char *)(v310 + 104) = *((unsigned char *)v311 + 104);
              *(unsigned char *)(v310 + 105) = *((unsigned char *)v311 + 105);
              *(void *)(v310 + 112) = *((void *)v311 + 14);
              *(void *)(v310 + 120) = *((void *)v311 + 15);
              *(void *)(v310 + 128) = *((void *)v311 + 16);
              *(void *)(v310 + 136) = *((void *)v311 + 17);
              *(void *)(v310 + 144) = *((void *)v311 + 18);
              *(void *)(v310 + 152) = *((void *)v311 + 19);
              *(void *)(v310 + 160) = *((void *)v311 + 20);
              *(void *)(v310 + 168) = *((void *)v311 + 21);
              *(unsigned char *)(v310 + 176) = *((unsigned char *)v311 + 176);
              *(void *)(v310 + 184) = *((void *)v311 + 23);
              uint64_t v540 = *((void *)v311 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v329 = v560;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v540)
              {
                *(void *)(v310 + 192) = v540;
                *(void *)(v310 + 200) = *((void *)v311 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v310 + 192) = v311[12];
              }
              uint64_t v3 = a1;
              uint64_t v256 = v506;
              unsigned int v326 = v487;
              size_t v257 = v491;
              *(void *)(v310 + 208) = *((void *)v311 + 26);
              *(void *)(v310 + 216) = *((void *)v311 + 27);
              *(void *)(v310 + 224) = *((void *)v311 + 28);
              *(void *)(v310 + 232) = *((void *)v311 + 29);
              *(void *)(v310 + 240) = *((void *)v311 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v314 = *v311;
              long long v315 = v311[1];
              long long v316 = v311[3];
              *(_OWORD *)(v310 + 32) = v311[2];
              *(_OWORD *)(v310 + 48) = v316;
              *(_OWORD *)unint64_t v310 = v314;
              *(_OWORD *)(v310 + 16) = v315;
              long long v317 = v311[4];
              long long v318 = v311[5];
              long long v319 = v311[7];
              *(_OWORD *)(v310 + 96) = v311[6];
              *(_OWORD *)(v310 + 112) = v319;
              *(_OWORD *)(v310 + 64) = v317;
              *(_OWORD *)(v310 + 80) = v318;
              long long v320 = v311[8];
              long long v321 = v311[9];
              long long v322 = v311[11];
              *(_OWORD *)(v310 + 160) = v311[10];
              *(_OWORD *)(v310 + 176) = v322;
              *(_OWORD *)(v310 + 128) = v320;
              *(_OWORD *)(v310 + 144) = v321;
              long long v323 = v311[12];
              long long v324 = v311[13];
              long long v325 = v311[14];
              *(void *)(v310 + 240) = *((void *)v311 + 30);
              *(_OWORD *)(v310 + 208) = v324;
              *(_OWORD *)(v310 + 224) = v325;
              *(_OWORD *)(v310 + 192) = v323;
              uint64_t v256 = v506;
              unsigned int v326 = v487;
              size_t v257 = v491;
            }
            unint64_t v421 = (_OWORD *)((v310 + 255) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v422 = (long long *)(((unint64_t)v311 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v423 = *v422;
            *(_OWORD *)((char *)v421 + 9) = *(long long *)((char *)v422 + 9);
            *unint64_t v421 = v423;
            unint64_t v424 = (v310 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v425 = ((unint64_t)v311 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v426 = *(_OWORD *)v425;
            *(unsigned char *)(v424 + 16) = *(unsigned char *)(v425 + 16);
            *(_OWORD *)unint64_t v424 = v426;
            unint64_t v427 = (void *)((v310 + 311) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v428 = ((unint64_t)v311 + 311) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v429 = *(void *)v428;
            v428 += 15;
            void *v427 = v429;
            unint64_t v430 = (void *)(((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v431 = *(void *)(v428 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v432 = *(void *)((v428 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_10018B584(v431, v432);
            *unint64_t v430 = v431;
            v430[1] = v432;
            unint64_t v255 = (unint64_t)&a1[v522] & v535;
            if (v326)
            {
LABEL_310:
              unint64_t v433 = ((((v256
                       + ((((((((((v509 + v257 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 19) & 0xFFFFFFFFFFFFFFF8)
                         + 25) & 0xFFFFFFFFFFFFFFF8)
                       + 327) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 16;
              uint64_t v434 = (void *)((v255 + v549 + v433) & v475);
              unsigned int v435 = (const void *)(((unint64_t)v552 + v549 + v433) & v475);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v519 + 48))(v435, 1, v520))
              {
                memcpy(v434, v435, __n);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v519 + 16))(v434, v435, v520);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v519 + 56))(v434, 0, 1, v520);
              }
              unsigned int v436 = (char *)(((unint64_t)v434 + v518) & v533);
              unsigned int v437 = (char *)(((unint64_t)v435 + v518) & v533);
              if (v538 == v478)
              {
                if (!(*(unsigned int (**)(char *))(v514 + 48))(v437)) {
                  goto LABEL_323;
                }
              }
              else
              {
                uint64_t v438 = (void *)((unint64_t)&v437[v517] & 0xFFFFFFFFFFFFFFF8);
                if (v488 > 0x7FFFFFFE)
                {
                  if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v497 + 48))(((unint64_t)v438 + v496) & v530, v481, v498))
                  {
LABEL_323:
                    uint64_t v438 = (void *)((unint64_t)&v437[v517] & 0xFFFFFFFFFFFFFFF8);
LABEL_324:
                    (*(void (**)(char *, char *, uint64_t))(v514 + 16))(v436, v437, v515);
                    uint64_t v441 = (void *)((unint64_t)&v436[v517] & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v441 = *v438;
                    unint64_t v442 = ((unint64_t)v441 + v496) & v530;
                    unint64_t v443 = ((unint64_t)v438 + v496) & v530;
                    size_t v444 = *(void (**)(unint64_t, unint64_t, uint64_t))(v497 + 16);
                    swift_bridgeObjectRetain();
                    v444(v442, v443, v498);
                    unsigned int v445 = (void *)((v486 + v442) & 0xFFFFFFFFFFFFFFF8);
                    unsigned int v446 = (void *)((v486 + v443) & 0xFFFFFFFFFFFFFFF8);
                    *unsigned int v445 = *v446;
                    unsigned int v447 = (void *)(((unint64_t)v445 + 15) & 0xFFFFFFFFFFFFFFF8);
                    size_t v448 = (void *)(((unint64_t)v446 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v447 = *v448;
                    v447[1] = v448[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    size_t v440 = v473;
                    goto LABEL_325;
                  }
                }
                else
                {
                  uint64_t v439 = *v438;
                  if (*v438 >= 0xFFFFFFFFuLL) {
                    LODWORD(v439) = -1;
                  }
                  if ((v439 + 1) < 2) {
                    goto LABEL_324;
                  }
                }
              }
              size_t v440 = v473;
              memcpy(v436, v437, v473);
LABEL_325:
              *(void *)&v436[v440] = *(void *)&v437[v440];
              unint64_t v449 = (void *)((unint64_t)&v436[v440 + 15] & 0xFFFFFFFFFFFFFFF8);
              uint64_t v450 = (void *)((unint64_t)&v437[v440 + 15] & 0xFFFFFFFFFFFFFFF8);
              *unint64_t v449 = *v450;
              unint64_t v164 = *(void **)(((unint64_t)v450 + 15) & 0xFFFFFFFFFFFFFFF8);
              *(void *)(((unint64_t)v449 + 15) & 0xFFFFFFFFFFFFFFF8) = v164;
              char v165 = 1;
              goto LABEL_326;
            }
LABEL_272:
            size_t v257 = v508;
            goto LABEL_310;
          }
          unint64_t v139 = ((unint64_t)v125 + v525) & v536;
          unint64_t v140 = (v526 + v139) & v556;
          if (v507 == v523)
          {
            if (v485 == v507)
            {
              int v126 = (*(uint64_t (**)(unint64_t))(v512 + 48))((v526 + v139) & v556);
              goto LABEL_269;
            }
            unsigned int v174 = (unint64_t *)((v511 + v140) & 0xFFFFFFFFFFFFFFF8);
            if (v480 > 0x7FFFFFFE)
            {
              int v126 = (*(uint64_t (**)(unint64_t))(v502 + 48))(((unint64_t)v174 + v501) & v54);
              goto LABEL_269;
            }
            unint64_t v175 = *v174;
          }
          else
          {
            unint64_t v151 = v516 + v140;
            if ((v484 & 0x80000000) == 0)
            {
              unint64_t v152 = *(void *)(v151 + 8);
              if (v152 >= 0xFFFFFFFF) {
                LODWORD(v152) = -1;
              }
              int v126 = v152 + 1;
              goto LABEL_270;
            }
            uint64_t v179 = (v505 + ((v504 + v151) & v55)) & v532;
            if (v487 > 0x7FFFFFFD)
            {
              int v126 = (*(uint64_t (**)(uint64_t))(v500 + 48))(v179);
              goto LABEL_269;
            }
            unint64_t v175 = *(void *)(((v483 + ((v499 + v179) & v532)) & 0xFFFFFFFFFFFFFFF8) + 8);
          }
          if (v175 >= 0xFFFFFFFF) {
            LODWORD(v175) = -1;
          }
          if ((v175 + 1) >= 2) {
            goto LABEL_271;
          }
          goto LABEL_274;
        case 2u:
          size_t v127 = v38;
          int v128 = v37;
          ((void (*)(unsigned __int8 *))v554[2])(a1);
          uint64_t v129 = (void *)((unint64_t)&a1[v490] & v57);
          uint64_t v130 = (const void *)((unint64_t)&a2[v490] & v57);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v519 + 48))(v130, 1, v520))
          {
            memcpy(v129, v130, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v519 + 16))(v129, v130, v520);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v519 + 56))(v129, 0, 1, v520);
          }
          uint64_t v143 = (char *)(((unint64_t)v129 + v518) & v533);
          unint64_t v144 = (char *)(((unint64_t)v130 + v518) & v533);
          if (v538 == v128)
          {
            if (!(*(unsigned int (**)(char *))(v514 + 48))(v144)) {
              goto LABEL_221;
            }
            goto LABEL_220;
          }
          unint64_t v145 = (uint64_t *)((unint64_t)&v144[v517] & 0xFFFFFFFFFFFFFFF8);
          if (v488 > 0x7FFFFFFE)
          {
            if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v497 + 48))(((unint64_t)v145 + v496) & v530, v481, v498))
            {
LABEL_221:
              unint64_t v145 = (uint64_t *)((unint64_t)&v144[v517] & 0xFFFFFFFFFFFFFFF8);
              goto LABEL_222;
            }
LABEL_220:
            memcpy(v143, v144, v127);
            goto LABEL_223;
          }
          uint64_t v146 = *v145;
          if ((unint64_t)*v145 >= 0xFFFFFFFF) {
            LODWORD(v146) = -1;
          }
          if ((v146 + 1) >= 2) {
            goto LABEL_220;
          }
LABEL_222:
          (*(void (**)(char *, char *, uint64_t))(v514 + 16))(v143, v144, v515);
          size_t v155 = (void *)((unint64_t)&v143[v517] & 0xFFFFFFFFFFFFFFF8);
          *size_t v155 = *v145;
          unint64_t v156 = ((unint64_t)v155 + v496) & v530;
          unint64_t v157 = ((unint64_t)v145 + v496) & v530;
          unint64_t v158 = *(void (**)(unint64_t, unint64_t, uint64_t))(v497 + 16);
          swift_bridgeObjectRetain();
          v158(v156, v157, v498);
          unint64_t v159 = (void *)((v486 + v156) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v160 = (void *)((v486 + v157) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v159 = *v160;
          uint64_t v161 = (void *)(((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v162 = (void *)(((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v161 = *v162;
          v161[1] = v162[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_223:
          unint64_t v163 = &v143[v127];
          *unint64_t v163 = v144[v127];
          unint64_t v164 = *(void **)&v144[v127 + 8];
          *((void *)v163 + 1) = v164;
          char v165 = 2;
LABEL_326:
          v3[v45] = v165;
          id v451 = v164;
          return v3;
        case 3u:
          uint64_t v131 = (void (*)(unsigned __int8 *))v554[2];
          v131(a1);
          uint64_t v553 = (const void *)((unint64_t)&a2[v522] & v535);
          if (v524 == v523)
          {
            int v132 = ((uint64_t (*)(void))v554[6])();
            uint64_t v133 = (void *)((unint64_t)&a1[v522] & v535);
LABEL_287:
            if (v132)
            {
LABEL_288:
              unint64_t v330 = (unint64_t)&a2[v522] & v535;
              memcpy(v133, v553, v521);
              uint64_t v331 = v506;
              goto LABEL_289;
            }
            unint64_t v141 = ((unint64_t)v553 + v525) & v536;
            unint64_t v142 = (v526 + v141) & v556;
LABEL_291:
            ((void (*)(void *, const void *, uint64_t))v131)(v133, v553, v56);
            unint64_t v333 = ((unint64_t)v133 + v525) & v536;
            ((void (*)(unint64_t, unint64_t, uint64_t))v131)(v333, v141, v56);
            unint64_t v334 = (v526 + v333) & v556;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v512 + 16))(v334, v142, v513);
            unint64_t v335 = (void *)((v511 + v334) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v336 = (void *)((v511 + v142) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v335 = *v336;
            unint64_t v337 = ((unint64_t)v335 + v501) & v54;
            unint64_t v338 = ((unint64_t)v336 + v501) & v54;
            int v339 = *(void (**)(unint64_t, unint64_t, uint64_t))(v502 + 16);
            swift_bridgeObjectRetain();
            v339(v337, v338, v503);
            unint64_t v340 = (void *)((v492 + v338) & 0xFFFFFFFFFFFFFFF8);
            long long v341 = (void *)((v492 + v337) & 0xFFFFFFFFFFFFFFF8);
            *long long v341 = *v340;
            unint64_t v342 = (void *)(((unint64_t)v341 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v343 = (void *)(((unint64_t)v340 + 15) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v342 = *v343;
            v342[1] = v343[1];
            unint64_t v344 = (void *)(v516 + v334);
            *unint64_t v344 = *(void *)(v516 + v142);
            v344[1] = *(void *)(v516 + v142 + 8);
            unint64_t v345 = (v504 + v516 + v334) & v55;
            unint64_t v346 = (v504 + v516 + v142) & v55;
            *(unsigned char *)unint64_t v345 = *(unsigned char *)v346;
            uint64_t v347 = v345 | 4;
            int v348 = *(_DWORD *)(v346 | 4);
            *(unsigned char *)(v347 + 4) = *(unsigned char *)((v346 | 4) + 4);
            *(_DWORD *)uint64_t v347 = v348;
            *(_WORD *)(v345 + 10) = *(_WORD *)(v346 + 0xA);
            unint64_t v561 = v345;
            unint64_t v349 = (v505 + v345) & v532;
            unint64_t v546 = v346;
            unint64_t v350 = (v505 + v346) & v532;
            long long v351 = *(void (**)(unint64_t, unint64_t, uint64_t))(v500 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v351(v349, v350, v510);
            size_t v352 = (v499 + v349) & v532;
            size_t v353 = (v499 + v350) & v532;
            v351(v352, v353, v510);
            long long v354 = (unsigned char *)(v352 + v491);
            unsigned char *v354 = *(unsigned char *)(v353 + v491);
            v354[1] = *(unsigned char *)(v353 + v491 + 1);
            v354[2] = *(unsigned char *)(v353 + v491 + 2);
            v354[3] = *(unsigned char *)(v353 + v491 + 3);
            v354[4] = *(unsigned char *)(v353 + v491 + 4);
            unint64_t v355 = (v352 + v491 + 12) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v356 = (v353 + v491 + 12) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v355 = *(void *)v356;
            *(void *)(v355 + 8) = *(void *)(v356 + 8);
            *(unsigned char *)(v355 + 16) = *(unsigned char *)(v356 + 16);
            *(unsigned char *)(v355 + 17) = *(unsigned char *)(v356 + 17);
            *(unsigned char *)(v355 + 18) = *(unsigned char *)(v356 + 18);
            *(unsigned char *)(v355 + 19) = *(unsigned char *)(v356 + 19);
            unint64_t v357 = (v355 + 27) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v358 = (v356 + 27) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v357 = *(void *)v358;
            *(unsigned char *)(v357 + 8) = *(unsigned char *)(v358 + 8);
            *(unsigned char *)(v357 + 9) = *(unsigned char *)(v358 + 9);
            *(unsigned char *)(v357 + 10) = *(unsigned char *)(v358 + 10);
            *(unsigned char *)(v357 + 11) = *(unsigned char *)(v358 + 11);
            *(unsigned char *)(v357 + 12) = *(unsigned char *)(v358 + 12);
            uint64_t v359 = (void *)((v356 + 47) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v360 = (void *)((v355 + 47) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v360 = *v359;
            unint64_t v361 = ((unint64_t)v360 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v362 = ((unint64_t)v359 + 15) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v361 = *(void *)v362;
            *(unsigned char *)(v361 + 8) = *(unsigned char *)(v362 + 8);
            *(unsigned char *)(v361 + 9) = *(unsigned char *)(v362 + 9);
            long long v363 = (void *)((v493 + v361) & v532);
            long long v364 = (const void *)((v493 + v362) & v532);
            unint64_t v365 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v500 + 48);
            swift_bridgeObjectRetain();
            if (v365(v364, 1, v510))
            {
              memcpy(v363, v364, v508);
            }
            else
            {
              v351((unint64_t)v363, (unint64_t)v364, v510);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v500 + 56))(v363, 0, 1, v510);
            }
            unint64_t v366 = (void *)(((unint64_t)v363 + v494) & 0xFFFFFFFFFFFFFFF8);
            long long v367 = (void *)(((unint64_t)v364 + v494) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v366 = *v367;
            unint64_t v368 = ((unint64_t)v366 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v369 = ((unint64_t)v367 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v370 = *(void *)v369;
            *(unsigned char *)(v368 + 8) = *(unsigned char *)(v369 + 8);
            *(void *)unint64_t v368 = v370;
            uint64_t v371 = (void *)(((unint64_t)v366 + 31) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v372 = (void *)(((unint64_t)v367 + 31) & 0xFFFFFFFFFFFFFFF8);
            void *v371 = *v372;
            unint64_t v373 = ((unint64_t)v371 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v374 = (uint64_t *)(((unint64_t)v372 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v375 = v374[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((v375 & 0x3000000000000000) != 0)
            {
              *(_OWORD *)unint64_t v373 = *(_OWORD *)v374;
            }
            else
            {
              uint64_t v376 = *v374;
              sub_10001EBB0(*v374, v375);
              *(void *)unint64_t v373 = v376;
              *(void *)(v373 + 8) = v375;
            }
            unint64_t v377 = (v373 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v378 = ((unint64_t)v374 + 19) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v379 = *(void *)v378;
            *(unsigned char *)(v377 + 8) = *(unsigned char *)(v378 + 8);
            *(void *)unint64_t v377 = v379;
            *(unsigned char *)(v377 + 9) = *(unsigned char *)(v378 + 9);
            unint64_t v380 = (v377 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            unint64_t v381 = (v378 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            int v382 = *(_DWORD *)v381;
            *(unsigned char *)(v380 + 4) = *(unsigned char *)(v381 + 4);
            *(_DWORD *)unint64_t v380 = v382;
            unint64_t v383 = (void *)((v377 + 25) & 0xFFFFFFFFFFFFFFF8);
            long long v384 = (void *)((v378 + 25) & 0xFFFFFFFFFFFFFFF8);
            void *v383 = *v384;
            v383[1] = v384[1];
            unint64_t v385 = v495 + v561;
            unint64_t v386 = (long long *)(v495 + v546);
            unint64_t v387 = *(void *)(v495 + v546 + 16);
            if (v387 >= 0xFFFFFFFF) {
              LODWORD(v387) = -1;
            }
            int v388 = v387 - 1;
            swift_bridgeObjectRetain();
            if (v388 < 0)
            {
              *(void *)unint64_t v385 = *(void *)v386;
              *(unsigned char *)(v385 + 8) = *((unsigned char *)v386 + 8);
              *(unsigned char *)(v385 + 9) = *((unsigned char *)v386 + 9);
              uint64_t v401 = *((void *)v386 + 2);
              swift_errorRetain();
              *(void *)(v385 + 16) = v401;
              uint64_t v402 = *((void *)v386 + 3);
              swift_errorRetain();
              *(void *)(v385 + 24) = v402;
              *(unsigned char *)(v385 + 32) = *((unsigned char *)v386 + 32);
              *(unsigned char *)(v385 + 33) = *((unsigned char *)v386 + 33);
              *(unsigned char *)(v385 + 34) = *((unsigned char *)v386 + 34);
              *(void *)(v385 + 40) = *((void *)v386 + 5);
              *(void *)(v385 + 48) = *((void *)v386 + 6);
              *(void *)(v385 + 56) = *((void *)v386 + 7);
              *(void *)(v385 + 64) = *((void *)v386 + 8);
              *(unsigned char *)(v385 + 72) = *((unsigned char *)v386 + 72);
              *(void *)(v385 + 80) = *((void *)v386 + 10);
              *(void *)(v385 + 88) = *((void *)v386 + 11);
              unint64_t v562 = (void *)*((void *)v386 + 12);
              *(void *)(v385 + 96) = v562;
              *(unsigned char *)(v385 + 104) = *((unsigned char *)v386 + 104);
              *(unsigned char *)(v385 + 105) = *((unsigned char *)v386 + 105);
              *(void *)(v385 + 112) = *((void *)v386 + 14);
              *(void *)(v385 + 120) = *((void *)v386 + 15);
              *(void *)(v385 + 128) = *((void *)v386 + 16);
              *(void *)(v385 + 136) = *((void *)v386 + 17);
              *(void *)(v385 + 144) = *((void *)v386 + 18);
              *(void *)(v385 + 152) = *((void *)v386 + 19);
              *(void *)(v385 + 160) = *((void *)v386 + 20);
              *(void *)(v385 + 168) = *((void *)v386 + 21);
              *(unsigned char *)(v385 + 176) = *((unsigned char *)v386 + 176);
              *(void *)(v385 + 184) = *((void *)v386 + 23);
              uint64_t v547 = *((void *)v386 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v403 = v562;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v547)
              {
                *(void *)(v385 + 192) = v547;
                *(void *)(v385 + 200) = *((void *)v386 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v385 + 192) = v386[12];
              }
              uint64_t v3 = a1;
              uint64_t v331 = v506;
              size_t v332 = v491;
              *(void *)(v385 + 208) = *((void *)v386 + 26);
              *(void *)(v385 + 216) = *((void *)v386 + 27);
              *(void *)(v385 + 224) = *((void *)v386 + 28);
              *(void *)(v385 + 232) = *((void *)v386 + 29);
              *(void *)(v385 + 240) = *((void *)v386 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v389 = *v386;
              long long v390 = v386[1];
              long long v391 = v386[3];
              *(_OWORD *)(v385 + 32) = v386[2];
              *(_OWORD *)(v385 + 48) = v391;
              *(_OWORD *)unint64_t v385 = v389;
              *(_OWORD *)(v385 + 16) = v390;
              long long v392 = v386[4];
              long long v393 = v386[5];
              long long v394 = v386[7];
              *(_OWORD *)(v385 + 96) = v386[6];
              *(_OWORD *)(v385 + 112) = v394;
              *(_OWORD *)(v385 + 64) = v392;
              *(_OWORD *)(v385 + 80) = v393;
              long long v395 = v386[8];
              long long v396 = v386[9];
              long long v397 = v386[11];
              *(_OWORD *)(v385 + 160) = v386[10];
              *(_OWORD *)(v385 + 176) = v397;
              *(_OWORD *)(v385 + 128) = v395;
              *(_OWORD *)(v385 + 144) = v396;
              long long v398 = v386[12];
              long long v399 = v386[13];
              long long v400 = v386[14];
              *(void *)(v385 + 240) = *((void *)v386 + 30);
              *(_OWORD *)(v385 + 208) = v399;
              *(_OWORD *)(v385 + 224) = v400;
              *(_OWORD *)(v385 + 192) = v398;
              uint64_t v331 = v506;
              size_t v332 = v491;
            }
            uint64_t v452 = (_OWORD *)((v385 + 255) & 0xFFFFFFFFFFFFFFF8);
            size_t v453 = (long long *)(((unint64_t)v386 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v454 = *v453;
            *(_OWORD *)((char *)v452 + 9) = *(long long *)((char *)v453 + 9);
            *uint64_t v452 = v454;
            unint64_t v455 = (v385 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v456 = ((unint64_t)v386 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v457 = *(_OWORD *)v456;
            *(unsigned char *)(v455 + 16) = *(unsigned char *)(v456 + 16);
            *(_OWORD *)unint64_t v455 = v457;
            uint64_t v458 = (void *)((v385 + 311) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v459 = ((unint64_t)v386 + 311) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v460 = *(void *)v459;
            v459 += 15;
            void *v458 = v460;
            uint64_t v461 = (void *)(((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v462 = *(void *)(v459 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v463 = *(void *)((v459 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_10018B584(v462, v463);
            *uint64_t v461 = v462;
            v461[1] = v463;
            uint64_t v133 = (void *)((unint64_t)&a1[v522] & v535);
            unint64_t v330 = (unint64_t)&a2[v522] & v535;
            if (v487)
            {
LABEL_330:
              unint64_t v464 = ((((v331
                       + ((((((((((v509 + v332 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 19) & 0xFFFFFFFFFFFFFFF8)
                         + 25) & 0xFFFFFFFFFFFFFFF8)
                       + 327) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 16;
              uint64_t v465 = (void *)(((unint64_t)v133 + v464) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v466 = (void *)((v330 + v464) & 0xFFFFFFFFFFFFFFF8);
              *uint64_t v465 = *v466;
              v465[1] = v466[1];
              *(void *)(((unint64_t)v465 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v466
                                                                                             + 23) & 0xFFFFFFFFFFFFFFF8);
              v3[v45] = 3;
              swift_bridgeObjectRetain();
              return v3;
            }
LABEL_289:
            size_t v332 = v508;
            goto LABEL_330;
          }
          unint64_t v141 = (v525 + ((unint64_t)&a2[v522] & v535)) & v536;
          unint64_t v142 = (v526 + v141) & v556;
          if (v507 == v523)
          {
            if (v485 == v507)
            {
              int v132 = (*(uint64_t (**)(unint64_t))(v512 + 48))((v526 + v141) & v556);
              uint64_t v133 = (void *)((unint64_t)&a1[v522] & v535);
              goto LABEL_287;
            }
            uint64_t v176 = (unint64_t *)((v511 + v142) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v133 = (void *)((unint64_t)&a1[v522] & v535);
            if (v480 > 0x7FFFFFFE)
            {
              int v132 = (*(uint64_t (**)(unint64_t))(v502 + 48))(((unint64_t)v176 + v501) & v54);
              goto LABEL_287;
            }
            unint64_t v177 = *v176;
          }
          else
          {
            unint64_t v153 = v516 + v142;
            if ((v484 & 0x80000000) == 0)
            {
              unint64_t v154 = *(void *)(v153 + 8);
              if (v154 >= 0xFFFFFFFF) {
                LODWORD(v154) = -1;
              }
              int v132 = v154 + 1;
              uint64_t v133 = (void *)((unint64_t)&a1[v522] & v535);
              goto LABEL_287;
            }
            uint64_t v180 = (v505 + ((v504 + v153) & v55)) & v532;
            uint64_t v133 = (void *)((unint64_t)&a1[v522] & v535);
            if (v487 > 0x7FFFFFFD)
            {
              int v132 = (*(uint64_t (**)(uint64_t))(v500 + 48))(v180);
              goto LABEL_287;
            }
            unint64_t v177 = *(void *)(((v483 + ((v499 + v180) & v532)) & 0xFFFFFFFFFFFFFFF8) + 8);
          }
          if (v177 >= 0xFFFFFFFF) {
            LODWORD(v177) = -1;
          }
          if ((v177 + 1) >= 2) {
            goto LABEL_288;
          }
          goto LABEL_291;
        case 4u:
          ((void (*)(unsigned __int8 *))v554[2])(a1);
          char v134 = 4;
          goto LABEL_201;
        case 5u:
          ((void (*)(unsigned __int8 *))v554[2])(a1);
          char v134 = 5;
          goto LABEL_201;
        case 6u:
          ((void (*)(unsigned __int8 *))v554[2])(a1);
          unint64_t v135 = (void *)((unint64_t)&a1[v489] & v528);
          unint64_t v136 = (const void *)((unint64_t)&a2[v489] & v528);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v136, 1, v550))
          {
            memcpy(v135, v136, v479);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v40 + 16))(v135, v136, v550);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v135, 0, 1, v550);
          }
          char v134 = 6;
          goto LABEL_201;
        case 7u:
          ((void (*)(unsigned __int8 *))v554[2])(a1);
          char v134 = 7;
LABEL_201:
          a1[v45] = v134;
          return v3;
        default:
          unint64_t v121 = (void (*)(unsigned __int8 *))v554[2];
          v121(a1);
          size_t v551 = (const void *)((unint64_t)&a2[v522] & v535);
          if (v524 == v523)
          {
            int v122 = ((uint64_t (*)(void))v554[6])();
            unint64_t v123 = (void *)((unint64_t)&a1[v522] & v535);
LABEL_252:
            if (v122)
            {
LABEL_253:
              unint64_t v181 = (unint64_t)&a2[v522] & v535;
              memcpy(v123, v551, v521);
              uint64_t v182 = v506;
              goto LABEL_254;
            }
            unint64_t v137 = ((unint64_t)v551 + v525) & v536;
            unint64_t v138 = (v526 + v137) & v556;
LABEL_256:
            ((void (*)(void *, const void *, uint64_t))v121)(v123, v551, v56);
            unint64_t v184 = ((unint64_t)v123 + v525) & v536;
            ((void (*)(unint64_t, unint64_t, uint64_t))v121)(v184, v137, v56);
            unint64_t v185 = (v526 + v184) & v556;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v512 + 16))(v185, v138, v513);
            uint64_t v186 = (void *)((v511 + v185) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v187 = (void *)((v511 + v138) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v186 = *v187;
            unint64_t v188 = ((unint64_t)v186 + v501) & v54;
            unint64_t v189 = ((unint64_t)v187 + v501) & v54;
            int v190 = *(void (**)(unint64_t, unint64_t, uint64_t))(v502 + 16);
            swift_bridgeObjectRetain();
            v190(v188, v189, v503);
            long long v191 = (void *)((v492 + v189) & 0xFFFFFFFFFFFFFFF8);
            long long v192 = (void *)((v492 + v188) & 0xFFFFFFFFFFFFFFF8);
            *long long v192 = *v191;
            long long v193 = (void *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8);
            long long v194 = (void *)(((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8);
            *long long v193 = *v194;
            v193[1] = v194[1];
            long long v195 = (void *)(v516 + v185);
            *long long v195 = *(void *)(v516 + v138);
            v195[1] = *(void *)(v516 + v138 + 8);
            unint64_t v196 = (v504 + v516 + v185) & v55;
            unint64_t v197 = (v504 + v516 + v138) & v55;
            *(unsigned char *)unint64_t v196 = *(unsigned char *)v197;
            uint64_t v198 = v196 | 4;
            int v199 = *(_DWORD *)(v197 | 4);
            *(unsigned char *)(v198 + 4) = *(unsigned char *)((v197 | 4) + 4);
            *(_DWORD *)uint64_t v198 = v199;
            *(_WORD *)(v196 + 10) = *(_WORD *)(v197 + 0xA);
            unint64_t v557 = v196;
            unint64_t v200 = (v505 + v196) & v532;
            unint64_t v544 = v197;
            unint64_t v201 = (v505 + v197) & v532;
            long long v202 = *(void (**)(unint64_t, unint64_t, uint64_t))(v500 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v202(v200, v201, v510);
            size_t v203 = (v499 + v200) & v532;
            size_t v204 = (v499 + v201) & v532;
            v202(v203, v204, v510);
            uint64_t v205 = (unsigned char *)(v203 + v491);
            *uint64_t v205 = *(unsigned char *)(v204 + v491);
            v205[1] = *(unsigned char *)(v204 + v491 + 1);
            v205[2] = *(unsigned char *)(v204 + v491 + 2);
            v205[3] = *(unsigned char *)(v204 + v491 + 3);
            v205[4] = *(unsigned char *)(v204 + v491 + 4);
            unint64_t v206 = (v203 + v491 + 12) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v207 = (v204 + v491 + 12) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v206 = *(void *)v207;
            *(void *)(v206 + 8) = *(void *)(v207 + 8);
            *(unsigned char *)(v206 + 16) = *(unsigned char *)(v207 + 16);
            *(unsigned char *)(v206 + 17) = *(unsigned char *)(v207 + 17);
            *(unsigned char *)(v206 + 18) = *(unsigned char *)(v207 + 18);
            *(unsigned char *)(v206 + 19) = *(unsigned char *)(v207 + 19);
            unint64_t v208 = (v206 + 27) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v209 = (v207 + 27) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v208 = *(void *)v209;
            *(unsigned char *)(v208 + 8) = *(unsigned char *)(v209 + 8);
            *(unsigned char *)(v208 + 9) = *(unsigned char *)(v209 + 9);
            *(unsigned char *)(v208 + 10) = *(unsigned char *)(v209 + 10);
            *(unsigned char *)(v208 + 11) = *(unsigned char *)(v209 + 11);
            *(unsigned char *)(v208 + 12) = *(unsigned char *)(v209 + 12);
            unint64_t v210 = (void *)((v207 + 47) & 0xFFFFFFFFFFFFFFF8);
            size_t v211 = (void *)((v206 + 47) & 0xFFFFFFFFFFFFFFF8);
            *size_t v211 = *v210;
            unint64_t v212 = ((unint64_t)v211 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v213 = ((unint64_t)v210 + 15) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v212 = *(void *)v213;
            *(unsigned char *)(v212 + 8) = *(unsigned char *)(v213 + 8);
            *(unsigned char *)(v212 + 9) = *(unsigned char *)(v213 + 9);
            unint64_t v214 = (void *)((v493 + v212) & v532);
            unint64_t v215 = (const void *)((v493 + v213) & v532);
            size_t v216 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v500 + 48);
            swift_bridgeObjectRetain();
            if (v216(v215, 1, v510))
            {
              memcpy(v214, v215, v508);
            }
            else
            {
              v202((unint64_t)v214, (unint64_t)v215, v510);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v500 + 56))(v214, 0, 1, v510);
            }
            unint64_t v217 = (void *)(((unint64_t)v214 + v494) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v218 = (void *)(((unint64_t)v215 + v494) & 0xFFFFFFFFFFFFFFF8);
            void *v217 = *v218;
            unint64_t v219 = ((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v220 = ((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v221 = *(void *)v220;
            *(unsigned char *)(v219 + 8) = *(unsigned char *)(v220 + 8);
            *(void *)unint64_t v219 = v221;
            uint64_t v222 = (void *)(((unint64_t)v217 + 31) & 0xFFFFFFFFFFFFFFF8);
            char v223 = (void *)(((unint64_t)v218 + 31) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v222 = *v223;
            unint64_t v224 = ((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v225 = (uint64_t *)(((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v226 = v225[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((v226 & 0x3000000000000000) != 0)
            {
              *(_OWORD *)unint64_t v224 = *(_OWORD *)v225;
            }
            else
            {
              uint64_t v227 = *v225;
              sub_10001EBB0(*v225, v226);
              *(void *)unint64_t v224 = v227;
              *(void *)(v224 + 8) = v226;
            }
            unint64_t v228 = (v224 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v229 = ((unint64_t)v225 + 19) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v230 = *(void *)v229;
            *(unsigned char *)(v228 + 8) = *(unsigned char *)(v229 + 8);
            *(void *)unint64_t v228 = v230;
            *(unsigned char *)(v228 + 9) = *(unsigned char *)(v229 + 9);
            unint64_t v231 = (v228 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            unint64_t v232 = (v229 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            int v233 = *(_DWORD *)v232;
            *(unsigned char *)(v231 + 4) = *(unsigned char *)(v232 + 4);
            *(_DWORD *)unint64_t v231 = v233;
            size_t v234 = (void *)((v228 + 25) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v235 = (void *)((v229 + 25) & 0xFFFFFFFFFFFFFFF8);
            void *v234 = *v235;
            v234[1] = v235[1];
            unint64_t v236 = v495 + v557;
            unint64_t v237 = (long long *)(v495 + v544);
            unint64_t v238 = *(void *)(v495 + v544 + 16);
            if (v238 >= 0xFFFFFFFF) {
              LODWORD(v238) = -1;
            }
            int v239 = v238 - 1;
            swift_bridgeObjectRetain();
            if (v239 < 0)
            {
              *(void *)unint64_t v236 = *(void *)v237;
              *(unsigned char *)(v236 + 8) = *((unsigned char *)v237 + 8);
              *(unsigned char *)(v236 + 9) = *((unsigned char *)v237 + 9);
              uint64_t v252 = *((void *)v237 + 2);
              swift_errorRetain();
              *(void *)(v236 + 16) = v252;
              uint64_t v253 = *((void *)v237 + 3);
              swift_errorRetain();
              *(void *)(v236 + 24) = v253;
              *(unsigned char *)(v236 + 32) = *((unsigned char *)v237 + 32);
              *(unsigned char *)(v236 + 33) = *((unsigned char *)v237 + 33);
              *(unsigned char *)(v236 + 34) = *((unsigned char *)v237 + 34);
              *(void *)(v236 + 40) = *((void *)v237 + 5);
              *(void *)(v236 + 48) = *((void *)v237 + 6);
              *(void *)(v236 + 56) = *((void *)v237 + 7);
              *(void *)(v236 + 64) = *((void *)v237 + 8);
              *(unsigned char *)(v236 + 72) = *((unsigned char *)v237 + 72);
              *(void *)(v236 + 80) = *((void *)v237 + 10);
              *(void *)(v236 + 88) = *((void *)v237 + 11);
              uint64_t v558 = (void *)*((void *)v237 + 12);
              *(void *)(v236 + 96) = v558;
              *(unsigned char *)(v236 + 104) = *((unsigned char *)v237 + 104);
              *(unsigned char *)(v236 + 105) = *((unsigned char *)v237 + 105);
              *(void *)(v236 + 112) = *((void *)v237 + 14);
              *(void *)(v236 + 120) = *((void *)v237 + 15);
              *(void *)(v236 + 128) = *((void *)v237 + 16);
              *(void *)(v236 + 136) = *((void *)v237 + 17);
              *(void *)(v236 + 144) = *((void *)v237 + 18);
              *(void *)(v236 + 152) = *((void *)v237 + 19);
              *(void *)(v236 + 160) = *((void *)v237 + 20);
              *(void *)(v236 + 168) = *((void *)v237 + 21);
              *(unsigned char *)(v236 + 176) = *((unsigned char *)v237 + 176);
              *(void *)(v236 + 184) = *((void *)v237 + 23);
              uint64_t v545 = *((void *)v237 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v254 = v558;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v545)
              {
                *(void *)(v236 + 192) = v545;
                *(void *)(v236 + 200) = *((void *)v237 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v236 + 192) = v237[12];
              }
              uint64_t v3 = a1;
              uint64_t v182 = v506;
              size_t v183 = v491;
              *(void *)(v236 + 208) = *((void *)v237 + 26);
              *(void *)(v236 + 216) = *((void *)v237 + 27);
              *(void *)(v236 + 224) = *((void *)v237 + 28);
              *(void *)(v236 + 232) = *((void *)v237 + 29);
              *(void *)(v236 + 240) = *((void *)v237 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v240 = *v237;
              long long v241 = v237[1];
              long long v242 = v237[3];
              *(_OWORD *)(v236 + 32) = v237[2];
              *(_OWORD *)(v236 + 48) = v242;
              *(_OWORD *)unint64_t v236 = v240;
              *(_OWORD *)(v236 + 16) = v241;
              long long v243 = v237[4];
              long long v244 = v237[5];
              long long v245 = v237[7];
              *(_OWORD *)(v236 + 96) = v237[6];
              *(_OWORD *)(v236 + 112) = v245;
              *(_OWORD *)(v236 + 64) = v243;
              *(_OWORD *)(v236 + 80) = v244;
              long long v246 = v237[8];
              long long v247 = v237[9];
              long long v248 = v237[11];
              *(_OWORD *)(v236 + 160) = v237[10];
              *(_OWORD *)(v236 + 176) = v248;
              *(_OWORD *)(v236 + 128) = v246;
              *(_OWORD *)(v236 + 144) = v247;
              long long v249 = v237[12];
              long long v250 = v237[13];
              long long v251 = v237[14];
              *(void *)(v236 + 240) = *((void *)v237 + 30);
              *(_OWORD *)(v236 + 208) = v250;
              *(_OWORD *)(v236 + 224) = v251;
              *(_OWORD *)(v236 + 192) = v249;
              uint64_t v182 = v506;
              size_t v183 = v491;
            }
            unint64_t v404 = (_OWORD *)((v236 + 255) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v405 = (long long *)(((unint64_t)v237 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v406 = *v405;
            *(_OWORD *)((char *)v404 + 9) = *(long long *)((char *)v405 + 9);
            *unint64_t v404 = v406;
            unint64_t v407 = (v236 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v408 = ((unint64_t)v237 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v409 = *(_OWORD *)v408;
            *(unsigned char *)(v407 + 16) = *(unsigned char *)(v408 + 16);
            *(_OWORD *)unint64_t v407 = v409;
            unint64_t v410 = (void *)((v236 + 311) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v411 = ((unint64_t)v237 + 311) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v412 = *(void *)v411;
            v411 += 15;
            *unint64_t v410 = v412;
            id v413 = (void *)(((unint64_t)v410 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v414 = *(void *)(v411 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v415 = *(void *)((v411 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_10018B584(v414, v415);
            *id v413 = v414;
            v413[1] = v415;
            unint64_t v123 = (void *)((unint64_t)&a1[v522] & v535);
            unint64_t v181 = (unint64_t)&a2[v522] & v535;
            if (v487)
            {
LABEL_306:
              unint64_t v416 = ((((v182
                       + ((((((((((v509 + v183 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 19) & 0xFFFFFFFFFFFFFFF8)
                         + 25) & 0xFFFFFFFFFFFFFFF8)
                       + 327) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 16;
              unint64_t v417 = (void *)(((unint64_t)v123 + v416) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v418 = (void *)((v181 + v416) & 0xFFFFFFFFFFFFFFF8);
              *unint64_t v417 = *v418;
              long long v419 = *(void **)(((unint64_t)v418 + 15) & 0xFFFFFFFFFFFFFFF8);
              *(void *)(((unint64_t)v417 + 15) & 0xFFFFFFFFFFFFFFF8) = v419;
              v3[v45] = 0;
              id v420 = v419;
              return v3;
            }
LABEL_254:
            size_t v183 = v508;
            goto LABEL_306;
          }
          unint64_t v137 = (v525 + ((unint64_t)&a2[v522] & v535)) & v536;
          unint64_t v138 = (v526 + v137) & v556;
          if (v507 == v523)
          {
            if (v485 == v507)
            {
              int v122 = (*(uint64_t (**)(unint64_t))(v512 + 48))((v526 + v137) & v556);
              unint64_t v123 = (void *)((unint64_t)&a1[v522] & v535);
              goto LABEL_252;
            }
            uint64_t v172 = (unint64_t *)((v511 + v138) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v123 = (void *)((unint64_t)&a1[v522] & v535);
            if (v480 > 0x7FFFFFFE)
            {
              int v122 = (*(uint64_t (**)(unint64_t))(v502 + 48))(((unint64_t)v172 + v501) & v54);
              goto LABEL_252;
            }
            unint64_t v173 = *v172;
          }
          else
          {
            unint64_t v149 = v516 + v138;
            if ((v484 & 0x80000000) == 0)
            {
              unint64_t v150 = *(void *)(v149 + 8);
              if (v150 >= 0xFFFFFFFF) {
                LODWORD(v150) = -1;
              }
              int v122 = v150 + 1;
              unint64_t v123 = (void *)((unint64_t)&a1[v522] & v535);
              goto LABEL_252;
            }
            uint64_t v178 = (v505 + ((v504 + v149) & v55)) & v532;
            unint64_t v123 = (void *)((unint64_t)&a1[v522] & v535);
            if (v487 > 0x7FFFFFFD)
            {
              int v122 = (*(uint64_t (**)(uint64_t))(v500 + 48))(v178);
              goto LABEL_252;
            }
            unint64_t v173 = *(void *)(((v483 + ((v499 + v178) & v532)) & 0xFFFFFFFFFFFFFFF8) + 8);
          }
          if (v173 >= 0xFFFFFFFF) {
            LODWORD(v173) = -1;
          }
          if ((v173 + 1) >= 2) {
            goto LABEL_253;
          }
          goto LABEL_256;
      }
    case 3u:
      size_t v471 = ((((v486 + ((v33 + 8 + (v517 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v474 = ~v549;
      int v476 = v37;
      unint64_t v94 = (void (*)(unsigned __int8 *, uint64_t))v554[1];
      v94(a1, AssociatedTypeWitness);
      unint64_t v95 = (unint64_t)&a1[v522] & v535;
      if (v524 == v523)
      {
        uint64_t v96 = (uint64_t (*)(unint64_t))v554[6];
        unint64_t v97 = (unint64_t)&a1[v522] & v535;
        goto LABEL_100;
      }
      unint64_t v99 = (v525 + v95) & v536;
      unint64_t v100 = (v526 + v99) & v556;
      if (v507 == v523)
      {
        if (v485 == v507)
        {
          uint64_t v96 = *(uint64_t (**)(unint64_t))(v512 + 48);
          unint64_t v97 = (v526 + v99) & v556;
          goto LABEL_100;
        }
        unint64_t v170 = (unint64_t *)((v511 + v100) & 0xFFFFFFFFFFFFFFF8);
        if (v480 <= 0x7FFFFFFE)
        {
          unint64_t v171 = *v170;
          goto LABEL_333;
        }
        unint64_t v97 = ((unint64_t)v170 + v501) & v54;
        uint64_t v96 = *(uint64_t (**)(unint64_t))(v502 + 48);
      }
      else
      {
        unint64_t v147 = v516 + v100;
        if ((v484 & 0x80000000) == 0)
        {
          unint64_t v148 = *(void *)(v147 + 8);
          if (v148 >= 0xFFFFFFFF) {
            LODWORD(v148) = -1;
          }
          if (v148 != -1) {
            goto LABEL_113;
          }
LABEL_101:
          unint64_t v99 = (v525 + v95) & v536;
          unint64_t v100 = (v526 + v99) & v556;
LABEL_102:
          v94((unsigned __int8 *)v95, AssociatedTypeWitness);
          v94((unsigned __int8 *)v99, AssociatedTypeWitness);
          (*(void (**)(unint64_t, uint64_t))(v512 + 8))(v100, v513);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v502 + 8))((v501 + ((v511 + v100) & 0xFFFFFFFFFFFFFFF8)) & v54, v503);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v101 = (v504 + v516 + v100) & v55;
          unint64_t v102 = *(void (**)(unint64_t, uint64_t))(v500 + 8);
          v102((v505 + v101) & v532, v510);
          unint64_t v103 = (v499 + ((v505 + v101) & v532)) & v532;
          v102(v103, v510);
          swift_bridgeObjectRelease();
          unint64_t v104 = (v493
                + ((((((v483 + v103) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v532;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v500 + 48))(v104, 1, v510)) {
            v102(v104, v510);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v105 = (uint64_t *)((((((v494 + v104) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v106 = v105[1];
          if ((v106 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v105, v106);
          }
          swift_bridgeObjectRelease();
          unint64_t v107 = v495 + v101;
          LODWORD(v108) = -1;
          if (*(void *)(v107 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v108 = *(void *)(v107 + 16);
          }
          uint64_t v56 = AssociatedTypeWitness;
          if ((int)v108 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v107 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v107 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v107 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          goto LABEL_113;
        }
        unint64_t v97 = (v505 + ((v504 + v147) & v55)) & v532;
        if (v487 <= 0x7FFFFFFD)
        {
          unint64_t v171 = *(void *)(((v483 + ((v499 + v97) & v532)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_333:
          if (v171 >= 0xFFFFFFFF) {
            LODWORD(v171) = -1;
          }
          if ((v171 + 1) >= 2) {
            goto LABEL_113;
          }
          goto LABEL_102;
        }
        uint64_t v96 = *(uint64_t (**)(unint64_t))(v500 + 48);
      }
LABEL_100:
      int v98 = v96(v97);
      unint64_t v95 = (unint64_t)&a1[v522] & v535;
      if (v98)
      {
LABEL_113:
        swift_bridgeObjectRelease();
        goto LABEL_114;
      }
      goto LABEL_101;
    case 4u:
    case 5u:
    case 7u:
      ((void (*)(unsigned __int8 *, uint64_t))v554[1])(a1, AssociatedTypeWitness);
      goto LABEL_154;
    case 6u:
      ((void (*)(unsigned __int8 *, uint64_t))v554[1])(a1, AssociatedTypeWitness);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v40 + 48))((unint64_t)&a1[v489] & v528, 1, v550))(*(void (**)(unint64_t, uint64_t))(v40 + 8))((unint64_t)&a1[v489] & v528, v550); {
      goto LABEL_154;
      }
    default:
      size_t v471 = ((((v486 + ((v33 + 8 + (v517 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v474 = ~v549;
      int v476 = v37;
      uint64_t v58 = (void (*)(unsigned __int8 *, uint64_t))v554[1];
      v58(a1, AssociatedTypeWitness);
      unint64_t v59 = (unint64_t)&a1[v522] & v535;
      if (v524 == v523)
      {
        uint64_t v60 = (uint64_t (*)(unint64_t))v554[6];
        unint64_t v61 = (unint64_t)&a1[v522] & v535;
        goto LABEL_59;
      }
      unint64_t v63 = (v525 + v59) & v536;
      unint64_t v64 = (v526 + v63) & v556;
      if (v507 == v523)
      {
        if (v485 == v507)
        {
          uint64_t v60 = *(uint64_t (**)(unint64_t))(v512 + 48);
          unint64_t v61 = (v526 + v63) & v556;
          goto LABEL_59;
        }
        uint64_t v166 = (unint64_t *)((v511 + v64) & 0xFFFFFFFFFFFFFFF8);
        if (v480 <= 0x7FFFFFFE)
        {
          unint64_t v167 = *v166;
          goto LABEL_353;
        }
        unint64_t v61 = ((unint64_t)v166 + v501) & v54;
        uint64_t v60 = *(uint64_t (**)(unint64_t))(v502 + 48);
      }
      else
      {
        unint64_t v113 = v516 + v64;
        if ((v484 & 0x80000000) == 0)
        {
          unint64_t v114 = *(void *)(v113 + 8);
          if (v114 >= 0xFFFFFFFF) {
            LODWORD(v114) = -1;
          }
          if (v114 == -1)
          {
LABEL_60:
            unint64_t v63 = (v525 + v59) & v536;
            unint64_t v64 = (v526 + v63) & v556;
LABEL_61:
            unint64_t v468 = v59;
            v58((unsigned __int8 *)v59, AssociatedTypeWitness);
            v58((unsigned __int8 *)v63, AssociatedTypeWitness);
            (*(void (**)(unint64_t, uint64_t))(v512 + 8))(v64, v513);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v502 + 8))((v501 + ((v511 + v64) & 0xFFFFFFFFFFFFFFF8)) & v54, v503);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v65 = (v504 + v516 + v64) & v55;
            int v66 = *(void (**)(unint64_t, uint64_t))(v500 + 8);
            v66((v505 + v65) & v532, v510);
            unint64_t v67 = (v499 + ((v505 + v65) & v532)) & v532;
            v66(v67, v510);
            swift_bridgeObjectRelease();
            unint64_t v68 = (v493
                 + ((((((v483 + v67) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v532;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v500 + 48))(v68, 1, v510)) {
              v66(v68, v510);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v69 = (uint64_t *)((((((v494 + v68) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v70 = v69[1];
            if ((v70 & 0x3000000000000000) == 0) {
              sub_10001E9C0(*v69, v70);
            }
            swift_bridgeObjectRelease();
            unint64_t v71 = v495 + v65;
            LODWORD(v72) = -1;
            if (*(void *)(v71 + 16) < 0xFFFFFFFFuLL) {
              uint64_t v72 = *(void *)(v71 + 16);
            }
            uint64_t v56 = AssociatedTypeWitness;
            if ((int)v72 - 1 < 0)
            {
              swift_errorRelease();
              swift_errorRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v71 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_1000CF144(*(void *)((((v71 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v71 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            unint64_t v59 = v468;
          }
LABEL_72:

LABEL_114:
          int v37 = v476;
          unint64_t v38 = v471;
          uint64_t v57 = v474;
          goto LABEL_154;
        }
        unint64_t v61 = (v505 + ((v504 + v113) & v55)) & v532;
        if (v487 <= 0x7FFFFFFD)
        {
          unint64_t v167 = *(void *)(((v483 + ((v499 + v61) & v532)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_353:
          if (v167 >= 0xFFFFFFFF) {
            LODWORD(v167) = -1;
          }
          if ((v167 + 1) < 2) {
            goto LABEL_61;
          }
          goto LABEL_72;
        }
        uint64_t v60 = *(uint64_t (**)(unint64_t))(v500 + 48);
      }
LABEL_59:
      int v62 = v60(v61);
      unint64_t v59 = (unint64_t)&a1[v522] & v535;
      if (v62) {
        goto LABEL_72;
      }
      goto LABEL_60;
  }
}

uint64_t sub_100689CE0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v443 = *(void *)(v4 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v438 = v3;
  uint64_t v385 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v385 - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v378 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v378 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v389 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v389 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = v10 | v5 | v12;
  uint64_t v404 = v4;
  uint64_t v384 = v6;
  uint64_t v377 = v8;
  unsigned int v15 = *(_DWORD *)(v8 + 84);
  unsigned int v369 = *(_DWORD *)(v6 + 84);
  if (v369 > v15) {
    unsigned int v15 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v367 = v15;
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  unsigned int v382 = v15;
  unsigned int v399 = *(_DWORD *)(v4 + 84);
  if (v15 <= v399) {
    unsigned int v15 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v400 = *(void *)(v389 - 8);
  unsigned int v16 = *(_DWORD *)(v11 + 84);
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v11 + 84);
  }
  if (v15 > v17) {
    unsigned int v17 = v15;
  }
  unsigned int v368 = v17;
  if (v17 <= 0x7FFFFFFF) {
    int v18 = 0x7FFFFFFF;
  }
  else {
    int v18 = v17;
  }
  int v398 = v18;
  unsigned int v379 = v16;
  uint64_t v402 = v443 + v5;
  uint64_t v414 = v5;
  uint64_t v403 = v443 + v10;
  uint64_t v409 = v10;
  uint64_t v383 = *(void *)(v6 + 64) + 7;
  uint64_t v376 = v9 + 8;
  uint64_t v372 = *(void *)(v8 + 64) + 7;
  unint64_t v390 = ((((v372 + ((v9 + 8 + (v383 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v380 = v13 + 16;
  uint64_t v428 = v12 | 7;
  uint64_t v381 = v12 + 12;
  size_t v19 = *(void *)(*(void *)(v389 - 8) + 64);
  size_t v375 = v19 + v12;
  size_t v366 = v19 + 12;
  uint64_t v373 = v12 + 10;
  uint64_t v433 = v12;
  unint64_t v20 = (v12
       + 10
       + ((((((v19 + 12 + ((v19 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  size_t v401 = v19;
  if (!v16) {
    ++v19;
  }
  size_t v394 = v19;
  unint64_t v395 = v20;
  uint64_t v396 = (v13 + 16 + v390 + ((v443 + v10 + ((v443 + v5) & ~v5)) & ~v10)) & ~v13;
  size_t v370 = v19 + 7;
  unint64_t v371 = ((((((((((v19 + 7 + v20) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v406 = v10 | v5 | v12;
  unint64_t v397 = v14 + v443;
  unint64_t v388 = ((((v396 + v371 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v21 = v388 + ((v14 + v443) & ~v14);
  unint64_t v417 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  unint64_t v25 = (v21 + v24) & ~v24;
  uint64_t v392 = v23;
  uint64_t v393 = v22;
  if (*(_DWORD *)(v23 + 84)) {
    uint64_t v26 = *(void *)(v23 + 64);
  }
  else {
    uint64_t v26 = *(void *)(v23 + 64) + 1;
  }
  uint64_t v387 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v387 - 8);
  int v28 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v30 = v24;
  uint64_t v31 = *(void *)(v29 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = v28 | v32 | 7;
  uint64_t v386 = v27;
  unsigned int v391 = *(_DWORD *)(v27 + 84);
  if (v391 <= *(_DWORD *)(v31 + 84)) {
    unsigned int v34 = *(_DWORD *)(v31 + 84);
  }
  else {
    unsigned int v34 = *(_DWORD *)(v27 + 84);
  }
  if (v34 <= 0x7FFFFFFE) {
    int v35 = 2147483646;
  }
  else {
    int v35 = v34;
  }
  uint64_t v36 = *(void *)(v27 + 64) + 7;
  uint64_t v37 = v32 + 8;
  unint64_t v38 = ((((*(void *)(*(void *)(v29 - 8) + 64) + 7 + ((v32 + 8 + (v36 & 0xFFFFFFFFFFFFFFF8)) & ~v32)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t __n = v26;
  uint64_t v39 = v26 + v33;
  unint64_t v40 = ((((((v26 + v33 + v25) & ~v33) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v41 = *(void *)(v438 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v43 = v443 + v24;
  if (*(_DWORD *)(v41 + 84)) {
    size_t v44 = *(void *)(*(void *)(v438 - 8) + 64);
  }
  else {
    size_t v44 = *(void *)(*(void *)(v438 - 8) + 64) + 1;
  }
  unint64_t v45 = ((v417 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v443 > v45) {
    unint64_t v45 = v443;
  }
  uint64_t v46 = v443 + v42;
  if (v40 <= v38 + ((v26 + v33 + ((v443 + v24) & ~v24)) & ~v33) + 16) {
    unint64_t v40 = v38 + ((v39 + ((v443 + v24) & ~v24)) & ~v33) + 16;
  }
  unint64_t v47 = (v46 & ~v42) + v44;
  if (((v417 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v47) {
    unint64_t v47 = ((v417 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v45 <= v40) {
    unint64_t v45 = v40;
  }
  if (v45 <= v47) {
    unint64_t v48 = v47;
  }
  else {
    unint64_t v48 = v45;
  }
  uint64_t v49 = a2;
  unsigned int v50 = a2[v48];
  unsigned int v51 = v50 - 8;
  if (v50 < 8)
  {
    uint64_t v54 = v9;
    uint64_t v53 = v414;
    uint64_t v56 = v406;
    uint64_t v55 = v409;
  }
  else
  {
    if (v48 <= 3) {
      uint64_t v52 = v48;
    }
    else {
      uint64_t v52 = 4;
    }
    uint64_t v54 = v9;
    uint64_t v53 = v414;
    uint64_t v56 = v406;
    uint64_t v55 = v409;
    switch(v52)
    {
      case 1:
        int v57 = *a2;
        if (v48 < 4) {
          goto LABEL_53;
        }
        goto LABEL_54;
      case 2:
        int v57 = *(unsigned __int16 *)a2;
        if (v48 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 3:
        int v57 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v48 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 4:
        int v57 = *(_DWORD *)a2;
        if (v48 < 4) {
LABEL_53:
        }
          v57 |= v51 << (8 * v48);
LABEL_54:
        unsigned int v50 = v57 + 8;
        break;
      default:
        break;
    }
  }
  unint64_t v444 = v48;
  uint64_t v58 = ~v56;
  uint64_t v423 = ~v53;
  uint64_t v59 = ~v55;
  uint64_t v60 = ~v54;
  uint64_t v61 = ~v33;
  uint64_t v62 = ~v32;
  uint64_t v63 = ~v42;
  switch(v50)
  {
    case 1u:
      uint64_t v362 = ~v30;
      uint64_t v358 = v61;
      uint64_t v421 = v60;
      uint64_t v430 = ~v428;
      int v359 = v35;
      uint64_t v407 = v62;
      unsigned int v360 = v34;
      unsigned int v361 = *(_DWORD *)(v31 + 84);
      uint64_t v440 = v36;
      uint64_t v410 = v37;
      uint64_t v364 = *(void *)(*(void *)(v29 - 8) + 64) + 7;
      uint64_t v412 = *(void *)(v29 - 8);
      uint64_t v415 = v29;
      size_t v418 = v38;
      uint64_t v435 = ~v433;
      uint64_t v72 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32);
      uint64_t v65 = a1;
      v72(a1, a2, AssociatedTypeWitness);
      __dst = (void *)((v397 + a1) & v58);
      unint64_t v425 = (void *)((unint64_t)&a2[v397] & v58);
      if (v399 == v398)
      {
        uint64_t v73 = ~v55;
        int v74 = (*(uint64_t (**)(void))(v404 + 48))();
        uint64_t v75 = v389;
LABEL_131:
        if (v74)
        {
LABEL_132:
          int v199 = __dst;
          unint64_t v200 = v425;
          memcpy(__dst, v425, v388);
          unint64_t v202 = v395;
          uint64_t v201 = v396;
          size_t v203 = v394;
          uint64_t v204 = v392;
LABEL_133:
          size_t v205 = v203;
          goto LABEL_139;
        }
        unint64_t v94 = ((unint64_t)v425 + v402) & v423;
        unint64_t v95 = (v403 + v94) & v73;
LABEL_135:
        v72((uint64_t)__dst, (unsigned __int8 *)v425, AssociatedTypeWitness);
        unint64_t v206 = ((unint64_t)__dst + v402) & v423;
        v72(v206, (unsigned __int8 *)v94, AssociatedTypeWitness);
        unint64_t v207 = (v403 + v206) & v73;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v384 + 32))(v207, v95, v385);
        unint64_t v208 = (void *)((v383 + v207) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v209 = (void *)((v383 + v95) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v208 = *v209;
        unint64_t v210 = ((unint64_t)v208 + v376) & v421;
        unint64_t v211 = ((unint64_t)v209 + v376) & v421;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 32))(v210, v211, v378);
        unint64_t v212 = (void *)((v372 + v210) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v213 = (void *)((v372 + v211) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v212 = *v213;
        *(_OWORD *)(((unint64_t)v212 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v390 + v207) = *(_OWORD *)(v390 + v95);
        uint64_t v214 = v435;
        unint64_t v215 = (v380 + v390 + v207) & v430;
        unint64_t v216 = (v380 + v390 + v95) & v430;
        *(unsigned char *)unint64_t v215 = *(unsigned char *)v216;
        uint64_t v217 = v215 | 4;
        int v218 = *(_DWORD *)(v216 | 4);
        *(unsigned char *)(v217 + 4) = *(unsigned char *)((v216 | 4) + 4);
        *(_DWORD *)uint64_t v217 = v218;
        *(_WORD *)(v215 + 10) = *(_WORD *)(v216 + 0xA);
        unint64_t v432 = v215;
        unint64_t v219 = (v381 + v215) & v435;
        unint64_t v220 = *(void (**)(unint64_t, unint64_t, uint64_t))(v400 + 32);
        v220((v381 + v215) & v214, (v381 + v216) & v214, v75);
        size_t v221 = (v375 + v219) & v435;
        unint64_t v222 = (v375 + ((v381 + v216) & v214)) & v214;
        v220(v221, v222, v75);
        char v223 = (unsigned char *)(v221 + v401);
        *char v223 = *(unsigned char *)(v222 + v401);
        v223[1] = *(unsigned char *)(v222 + v401 + 1);
        v223[2] = *(unsigned char *)(v222 + v401 + 2);
        v223[3] = *(unsigned char *)(v222 + v401 + 3);
        v223[4] = *(unsigned char *)(v222 + v401 + 4);
        unint64_t v224 = (v221 + v401 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v225 = (v222 + v401 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v224 = *(_OWORD *)v225;
        *(unsigned char *)(v224 + 16) = *(unsigned char *)(v225 + 16);
        *(unsigned char *)(v224 + 17) = *(unsigned char *)(v225 + 17);
        *(unsigned char *)(v224 + 18) = *(unsigned char *)(v225 + 18);
        *(unsigned char *)(v224 + 19) = *(unsigned char *)(v225 + 19);
        unint64_t v226 = (v224 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v227 = (v225 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v226 = *(void *)v227;
        *(unsigned char *)(v226 + 8) = *(unsigned char *)(v227 + 8);
        *(unsigned char *)(v226 + 9) = *(unsigned char *)(v227 + 9);
        *(unsigned char *)(v226 + 10) = *(unsigned char *)(v227 + 10);
        *(unsigned char *)(v226 + 11) = *(unsigned char *)(v227 + 11);
        *(unsigned char *)(v226 + 12) = *(unsigned char *)(v227 + 12);
        unint64_t v228 = (void *)((v225 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v229 = (void *)((v224 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v229 = *v228;
        unint64_t v230 = ((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v231 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v230 = *(void *)v231;
        *(unsigned char *)(v230 + 8) = *(unsigned char *)(v231 + 8);
        *(unsigned char *)(v230 + 9) = *(unsigned char *)(v231 + 9);
        unint64_t v232 = (void *)((v373 + v230) & v435);
        int v233 = (const void *)((v373 + v231) & v435);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v400 + 48))(v233, 1, v75))
        {
          size_t v203 = v394;
          memcpy(v232, v233, v394);
          unint64_t v202 = v395;
          uint64_t v201 = v396;
          unsigned int v234 = v379;
        }
        else
        {
          v220((unint64_t)v232, (unint64_t)v233, v75);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v400 + 56))(v232, 0, 1, v75);
          unint64_t v202 = v395;
          uint64_t v201 = v396;
          unsigned int v234 = v379;
          size_t v203 = v394;
        }
        size_t v205 = v401;
        uint64_t v204 = v392;
        int v199 = __dst;
        unint64_t v235 = (void *)(((unint64_t)v232 + v370) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v236 = (void *)(((unint64_t)v233 + v370) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v235 = *v236;
        unint64_t v237 = ((unint64_t)v235 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v238 = ((unint64_t)v236 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v239 = *(void *)v238;
        *(unsigned char *)(v237 + 8) = *(unsigned char *)(v238 + 8);
        *(void *)unint64_t v237 = v239;
        long long v240 = (void *)(((unint64_t)v235 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v241 = (void *)(((unint64_t)v236 + 31) & 0xFFFFFFFFFFFFFFF8);
        *long long v240 = *v241;
        long long v242 = (_OWORD *)(((unint64_t)v240 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v243 = (_OWORD *)(((unint64_t)v241 + 15) & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v242 = *v243;
        unint64_t v244 = ((unint64_t)v242 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v245 = ((unint64_t)v243 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v246 = *(void *)v245;
        *(unsigned char *)(v244 + 8) = *(unsigned char *)(v245 + 8);
        *(void *)unint64_t v244 = v246;
        *(unsigned char *)(v244 + 9) = *(unsigned char *)(v245 + 9);
        unint64_t v247 = (v244 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v248 = (v245 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v239) = *(_DWORD *)v248;
        *(unsigned char *)(v247 + 4) = *(unsigned char *)(v248 + 4);
        *(_DWORD *)unint64_t v247 = v239;
        *(_OWORD *)((v244 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v245 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v249 = v371 + v432;
        long long v250 = *(_OWORD *)(v371 + v216 + 112);
        long long v252 = *(_OWORD *)(v371 + v216 + 64);
        long long v251 = *(_OWORD *)(v371 + v216 + 80);
        *(_OWORD *)(v249 + 96) = *(_OWORD *)(v371 + v216 + 96);
        *(_OWORD *)(v249 + 112) = v250;
        *(_OWORD *)(v249 + 64) = v252;
        *(_OWORD *)(v249 + 80) = v251;
        long long v253 = *(_OWORD *)(v371 + v216 + 176);
        long long v255 = *(_OWORD *)(v371 + v216 + 128);
        long long v254 = *(_OWORD *)(v371 + v216 + 144);
        *(_OWORD *)(v249 + 160) = *(_OWORD *)(v371 + v216 + 160);
        *(_OWORD *)(v249 + 176) = v253;
        *(_OWORD *)(v249 + 128) = v255;
        *(_OWORD *)(v249 + 144) = v254;
        long long v257 = *(_OWORD *)(v371 + v216 + 208);
        long long v256 = *(_OWORD *)(v371 + v216 + 224);
        long long v258 = *(_OWORD *)(v371 + v216 + 192);
        *(void *)(v249 + 240) = *(void *)(v371 + v216 + 240);
        *(_OWORD *)(v249 + 208) = v257;
        *(_OWORD *)(v249 + 224) = v256;
        *(_OWORD *)(v249 + 192) = v258;
        long long v259 = *(_OWORD *)(v371 + v216);
        long long v260 = *(_OWORD *)(v371 + v216 + 16);
        long long v261 = *(_OWORD *)(v371 + v216 + 48);
        *(_OWORD *)(v249 + 32) = *(_OWORD *)(v371 + v216 + 32);
        *(_OWORD *)(v249 + 48) = v261;
        *(_OWORD *)unint64_t v249 = v259;
        *(_OWORD *)(v249 + 16) = v260;
        unint64_t v262 = (_OWORD *)((v371 + v432 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v263 = (long long *)((v371 + v216 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v264 = *v263;
        *(_OWORD *)((char *)v262 + 9) = *(long long *)((char *)v263 + 9);
        *unint64_t v262 = v264;
        unint64_t v265 = (v371 + v432 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v266 = (v371 + v216 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v267 = *(_OWORD *)v266;
        *(unsigned char *)(v265 + 16) = *(unsigned char *)(v266 + 16);
        *(_OWORD *)unint64_t v265 = v267;
        unint64_t v268 = (void *)((v371 + v432 + 311) & 0xFFFFFFFFFFFFFFF8);
        int v269 = (void *)((v371 + v216 + 311) & 0xFFFFFFFFFFFFFFF8);
        void *v268 = *v269;
        *(_OWORD *)(((unint64_t)v268 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v269 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v200 = v425;
        if (!v234) {
          goto LABEL_133;
        }
LABEL_139:
        unint64_t v270 = ((((v201
                 + ((((((((((v202 + v205 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        unint64_t v271 = (void *)(((unint64_t)v199 + v30 + v270) & v362);
        uint64_t v272 = (const void *)(((unint64_t)v200 + v30 + v270) & v362);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v204 + 48))(v272, 1, v393))
        {
          memcpy(v271, v272, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v204 + 32))(v271, v272, v393);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v204 + 56))(v271, 0, 1, v393);
        }
        uint64_t v273 = v440;
        unint64_t v98 = v444;
        unint64_t v274 = (char *)(((unint64_t)v271 + v39) & v358);
        unint64_t v275 = (char *)(((unint64_t)v272 + v39) & v358);
        if (v391 == v359)
        {
          int v276 = (*(uint64_t (**)(char *, void, uint64_t))(v386 + 48))(v275, v391, v387);
        }
        else
        {
          size_t v277 = (uint64_t *)((unint64_t)&v275[v440] & 0xFFFFFFFFFFFFFFF8);
          if (v360 <= 0x7FFFFFFE)
          {
            uint64_t v278 = *v277;
            if ((unint64_t)*v277 >= 0xFFFFFFFF) {
              LODWORD(v278) = -1;
            }
            if ((v278 + 1) >= 2) {
              goto LABEL_151;
            }
            goto LABEL_153;
          }
          int v276 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v412 + 48))(((unint64_t)v277 + v410) & v407, v361, v415);
        }
        uint64_t v273 = v440;
        if (v276)
        {
LABEL_151:
          size_t v279 = v418;
          memcpy(v274, v275, v418);
LABEL_154:
          *(void *)&v274[v279] = *(void *)&v275[v279];
          unint64_t v286 = (void *)((unint64_t)&v274[v279 + 15] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v287 = (void *)((unint64_t)&v275[v279 + 15] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v286 = *v287;
          *(void *)(((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v287 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v89 = 1;
          goto LABEL_89;
        }
        size_t v277 = (uint64_t *)((unint64_t)&v275[v440] & 0xFFFFFFFFFFFFFFF8);
LABEL_153:
        uint64_t v280 = v273;
        (*(void (**)(char *, char *, uint64_t))(v386 + 32))(v274, v275, v387);
        unint64_t v281 = (void *)((unint64_t)&v274[v280] & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v281 = *v277;
        unint64_t v282 = ((unint64_t)v281 + v410) & v407;
        unint64_t v283 = ((unint64_t)v277 + v410) & v407;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v412 + 32))(v282, v283, v415);
        uint64_t v284 = (void *)((v364 + v282) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v285 = (void *)((v364 + v283) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v284 = *v285;
        *(_OWORD *)(((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8);
        size_t v279 = v418;
        goto LABEL_154;
      }
      unint64_t v94 = (v402 + ((unint64_t)&v49[v397] & v58)) & v423;
      uint64_t v73 = ~v55;
      unint64_t v95 = (v403 + v94) & v59;
      uint64_t v75 = v389;
      if (v382 == v398)
      {
        if (v369 == v382)
        {
          int v74 = (*(uint64_t (**)(unint64_t))(v384 + 48))(v95);
          goto LABEL_131;
        }
        int v122 = (unint64_t *)((v383 + v95) & 0xFFFFFFFFFFFFFFF8);
        if (v367 > 0x7FFFFFFE)
        {
          int v74 = (*(uint64_t (**)(unint64_t))(v377 + 48))(((unint64_t)v122 + v376) & v421);
          goto LABEL_131;
        }
        unint64_t v123 = *v122;
      }
      else
      {
        unint64_t v108 = v390 + v95;
        if ((v368 & 0x80000000) == 0)
        {
          unint64_t v109 = *(void *)(v108 + 8);
          if (v109 >= 0xFFFFFFFF) {
            LODWORD(v109) = -1;
          }
          int v74 = v109 + 1;
          goto LABEL_131;
        }
        uint64_t v128 = (v381 + ((v380 + v108) & v430)) & v435;
        if (v379 > 0x7FFFFFFD)
        {
          int v74 = (*(uint64_t (**)(uint64_t))(v400 + 48))(v128);
          goto LABEL_131;
        }
        unint64_t v123 = *(void *)(((v366 + ((v375 + v128) & v435)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v123 >= 0xFFFFFFFF) {
        LODWORD(v123) = -1;
      }
      if ((v123 + 1) >= 2) {
        goto LABEL_132;
      }
      goto LABEL_135;
    case 2u:
      uint64_t v76 = v61;
      int v77 = v35;
      uint64_t v408 = v62;
      uint64_t v411 = v37;
      unsigned int v78 = v34;
      uint64_t v79 = *(unsigned int *)(v31 + 84);
      uint64_t v441 = v36;
      uint64_t v365 = *(void *)(*(void *)(v29 - 8) + 64) + 7;
      uint64_t v413 = *(void *)(v29 - 8);
      uint64_t v416 = v29;
      size_t v419 = v38;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      unint64_t v80 = (void *)((v43 + a1) & ~v30);
      unint64_t v81 = (const void *)((unint64_t)&a2[v43] & ~v30);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v392 + 48))(v81, 1, v393))
      {
        memcpy(v80, v81, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v392 + 32))(v80, v81, v393);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v392 + 56))(v80, 0, 1, v393);
      }
      unint64_t v98 = v444;
      unint64_t v99 = (char *)(((unint64_t)v80 + v39) & v76);
      unint64_t v100 = (char *)(((unint64_t)v81 + v39) & v76);
      uint64_t v65 = a1;
      if (v391 == v77)
      {
        int v101 = (*(uint64_t (**)(char *, void, uint64_t))(v386 + 48))(v100, v391, v387);
      }
      else
      {
        uint64_t v102 = v441;
        unint64_t v103 = (uint64_t *)((unint64_t)&v100[v441] & 0xFFFFFFFFFFFFFFF8);
        if (v78 <= 0x7FFFFFFE)
        {
          uint64_t v104 = *v103;
          if ((unint64_t)*v103 >= 0xFFFFFFFF) {
            LODWORD(v104) = -1;
          }
          if ((v104 + 1) >= 2) {
            goto LABEL_104;
          }
          goto LABEL_106;
        }
        int v101 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v413 + 48))(((unint64_t)v103 + v411) & v408, v79, v416);
      }
      uint64_t v102 = v441;
      if (v101)
      {
LABEL_104:
        size_t v112 = v419;
        memcpy(v99, v100, v419);
        goto LABEL_107;
      }
      unint64_t v103 = (uint64_t *)((unint64_t)&v100[v441] & 0xFFFFFFFFFFFFFFF8);
LABEL_106:
      uint64_t v113 = v102;
      (*(void (**)(char *, char *, uint64_t))(v386 + 32))(v99, v100, v387);
      unint64_t v114 = (void *)((unint64_t)&v99[v113] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v114 = *v103;
      unint64_t v115 = ((unint64_t)v114 + v411) & v408;
      unint64_t v116 = ((unint64_t)v103 + v411) & v408;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v413 + 32))(v115, v116, v416);
      unsigned int v117 = (void *)((v365 + v115) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v98 = v444;
      unsigned int v118 = (void *)((v365 + v116) & 0xFFFFFFFFFFFFFFF8);
      void *v117 = *v118;
      *(_OWORD *)(((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8);
      size_t v112 = v419;
LABEL_107:
      uint64_t v119 = &v99[v112];
      *uint64_t v119 = v100[v112];
      *((void *)v119 + 1) = *(void *)&v100[v112 + 8];
      char v89 = 2;
      goto LABEL_89;
    case 3u:
      uint64_t v422 = v60;
      uint64_t v431 = ~v428;
      uint64_t v436 = ~v433;
      unint64_t v82 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32);
      uint64_t v65 = a1;
      v82(a1, a2, AssociatedTypeWitness);
      unint64_t v83 = (void *)((v397 + a1) & v58);
      char v84 = (void *)((unint64_t)&a2[v397] & v58);
      unint64_t v442 = v84;
      if (v399 == v398)
      {
        uint64_t v85 = v59;
        int v86 = (*(uint64_t (**)(void))(v404 + 48))();
        uint64_t v87 = v400;
        size_t v88 = v401;
LABEL_156:
        if (v86)
        {
LABEL_157:
          uint64_t v288 = v442;
          memcpy(v83, v442, v388);
          unint64_t v98 = v444;
          unint64_t v290 = v395;
          uint64_t v289 = v396;
          size_t v291 = v394;
          goto LABEL_158;
        }
        unint64_t v96 = ((unint64_t)v442 + v402) & v423;
        unint64_t v97 = (v403 + v96) & v85;
LABEL_160:
        v82((uint64_t)v83, (unsigned __int8 *)v442, AssociatedTypeWitness);
        unint64_t v427 = v83;
        unint64_t v293 = ((unint64_t)v83 + v402) & v423;
        v82(v293, (unsigned __int8 *)v96, AssociatedTypeWitness);
        unint64_t v294 = (v403 + v293) & v85;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v384 + 32))(v294, v97, v385);
        uint64_t v295 = (void *)((v383 + v294) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v296 = (void *)((v383 + v97) & 0xFFFFFFFFFFFFFFF8);
        void *v295 = *v296;
        unint64_t v297 = ((unint64_t)v295 + v376) & v422;
        unint64_t v298 = ((unint64_t)v296 + v376) & v422;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 32))(v297, v298, v378);
        unint64_t v299 = (void *)((v372 + v297) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v300 = (void *)((v372 + v298) & 0xFFFFFFFFFFFFFFF8);
        void *v299 = *v300;
        *(_OWORD *)(((unint64_t)v299 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v300 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v390 + v294) = *(_OWORD *)(v390 + v97);
        unint64_t v301 = (v380 + v390 + v294) & v431;
        unint64_t v302 = (v380 + v390 + v97) & v431;
        *(unsigned char *)unint64_t v301 = *(unsigned char *)v302;
        uint64_t v303 = v301 | 4;
        int v304 = *(_DWORD *)(v302 | 4);
        *(unsigned char *)(v303 + 4) = *(unsigned char *)((v302 | 4) + 4);
        *(_DWORD *)uint64_t v303 = v304;
        *(_WORD *)(v301 + 10) = *(_WORD *)(v302 + 0xA);
        unint64_t v305 = *(void (**)(unint64_t, unint64_t, uint64_t))(v87 + 32);
        v305((v381 + v301) & v436, (v381 + v302) & v436, v389);
        unint64_t v306 = (v375 + ((v381 + v301) & v436)) & v436;
        unint64_t v307 = (v375 + ((v381 + v302) & v436)) & v436;
        v305(v306, v307, v389);
        uint64_t v308 = (unsigned char *)(v306 + v88);
        unsigned char *v308 = *(unsigned char *)(v307 + v88);
        v308[1] = *(unsigned char *)(v307 + v88 + 1);
        v308[2] = *(unsigned char *)(v307 + v88 + 2);
        v308[3] = *(unsigned char *)(v307 + v88 + 3);
        v308[4] = *(unsigned char *)(v307 + v88 + 4);
        unint64_t v309 = (v306 + v88 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v310 = (v307 + v88 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v309 = *(_OWORD *)v310;
        *(unsigned char *)(v309 + 16) = *(unsigned char *)(v310 + 16);
        *(unsigned char *)(v309 + 17) = *(unsigned char *)(v310 + 17);
        *(unsigned char *)(v309 + 18) = *(unsigned char *)(v310 + 18);
        *(unsigned char *)(v309 + 19) = *(unsigned char *)(v310 + 19);
        unint64_t v311 = (v309 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v312 = (v310 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v311 = *(void *)v312;
        *(unsigned char *)(v311 + 8) = *(unsigned char *)(v312 + 8);
        *(unsigned char *)(v311 + 9) = *(unsigned char *)(v312 + 9);
        *(unsigned char *)(v311 + 10) = *(unsigned char *)(v312 + 10);
        *(unsigned char *)(v311 + 11) = *(unsigned char *)(v312 + 11);
        *(unsigned char *)(v311 + 12) = *(unsigned char *)(v312 + 12);
        int v313 = (void *)((v310 + 47) & 0xFFFFFFFFFFFFFFF8);
        long long v314 = (void *)((v309 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v314 = *v313;
        unint64_t v315 = ((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v316 = ((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v315 = *(void *)v316;
        *(unsigned char *)(v315 + 8) = *(unsigned char *)(v316 + 8);
        *(unsigned char *)(v315 + 9) = *(unsigned char *)(v316 + 9);
        long long v317 = (void *)((v373 + v315) & v436);
        long long v318 = (const void *)((v373 + v316) & v436);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v400 + 48))(v318, 1, v389))
        {
          size_t v291 = v394;
          memcpy(v317, v318, v394);
          unint64_t v98 = v444;
          unint64_t v290 = v395;
          uint64_t v289 = v396;
          unsigned int v319 = v379;
        }
        else
        {
          v305((unint64_t)v317, (unint64_t)v318, v389);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v400 + 56))(v317, 0, 1, v389);
          unint64_t v98 = v444;
          unint64_t v290 = v395;
          uint64_t v289 = v396;
          unsigned int v319 = v379;
          size_t v291 = v394;
        }
        uint64_t v288 = v442;
        size_t v292 = v401;
        long long v320 = (void *)(((unint64_t)v317 + v370) & 0xFFFFFFFFFFFFFFF8);
        long long v321 = (void *)(((unint64_t)v318 + v370) & 0xFFFFFFFFFFFFFFF8);
        void *v320 = *v321;
        unint64_t v322 = ((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v323 = ((unint64_t)v321 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v324 = *(void *)v323;
        *(unsigned char *)(v322 + 8) = *(unsigned char *)(v323 + 8);
        *(void *)unint64_t v322 = v324;
        long long v325 = (void *)(((unint64_t)v320 + 31) & 0xFFFFFFFFFFFFFFF8);
        unsigned int v326 = (void *)(((unint64_t)v321 + 31) & 0xFFFFFFFFFFFFFFF8);
        *long long v325 = *v326;
        uint64_t v327 = (_OWORD *)(((unint64_t)v325 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v328 = (_OWORD *)(((unint64_t)v326 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v327 = *v328;
        unint64_t v329 = ((unint64_t)v327 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v330 = ((unint64_t)v328 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v331 = *(void *)v330;
        *(unsigned char *)(v329 + 8) = *(unsigned char *)(v330 + 8);
        *(void *)unint64_t v329 = v331;
        *(unsigned char *)(v329 + 9) = *(unsigned char *)(v330 + 9);
        unint64_t v332 = (v329 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v333 = (v330 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v324) = *(_DWORD *)v333;
        *(unsigned char *)(v332 + 4) = *(unsigned char *)(v333 + 4);
        *(_DWORD *)unint64_t v332 = v324;
        *(_OWORD *)((v329 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v330 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v334 = v371 + v301;
        long long v335 = *(_OWORD *)(v371 + v302 + 112);
        long long v337 = *(_OWORD *)(v371 + v302 + 64);
        long long v336 = *(_OWORD *)(v371 + v302 + 80);
        *(_OWORD *)(v334 + 96) = *(_OWORD *)(v371 + v302 + 96);
        *(_OWORD *)(v334 + 112) = v335;
        *(_OWORD *)(v334 + 64) = v337;
        *(_OWORD *)(v334 + 80) = v336;
        long long v338 = *(_OWORD *)(v371 + v302 + 176);
        long long v340 = *(_OWORD *)(v371 + v302 + 128);
        long long v339 = *(_OWORD *)(v371 + v302 + 144);
        *(_OWORD *)(v334 + 160) = *(_OWORD *)(v371 + v302 + 160);
        *(_OWORD *)(v334 + 176) = v338;
        *(_OWORD *)(v334 + 128) = v340;
        *(_OWORD *)(v334 + 144) = v339;
        long long v342 = *(_OWORD *)(v371 + v302 + 208);
        long long v341 = *(_OWORD *)(v371 + v302 + 224);
        long long v343 = *(_OWORD *)(v371 + v302 + 192);
        *(void *)(v334 + 240) = *(void *)(v371 + v302 + 240);
        *(_OWORD *)(v334 + 208) = v342;
        *(_OWORD *)(v334 + 224) = v341;
        *(_OWORD *)(v334 + 192) = v343;
        long long v344 = *(_OWORD *)(v371 + v302);
        long long v345 = *(_OWORD *)(v371 + v302 + 16);
        long long v346 = *(_OWORD *)(v371 + v302 + 48);
        *(_OWORD *)(v334 + 32) = *(_OWORD *)(v371 + v302 + 32);
        *(_OWORD *)(v334 + 48) = v346;
        *(_OWORD *)unint64_t v334 = v344;
        *(_OWORD *)(v334 + 16) = v345;
        uint64_t v347 = (_OWORD *)((v371 + v301 + 255) & 0xFFFFFFFFFFFFFFF8);
        int v348 = (long long *)((v371 + v302 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v349 = *v348;
        *(_OWORD *)((char *)v347 + 9) = *(long long *)((char *)v348 + 9);
        _OWORD *v347 = v349;
        unint64_t v350 = (v371 + v301 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v351 = (v371 + v302 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v352 = *(_OWORD *)v351;
        *(unsigned char *)(v350 + 16) = *(unsigned char *)(v351 + 16);
        *(_OWORD *)unint64_t v350 = v352;
        size_t v353 = (void *)((v371 + v301 + 311) & 0xFFFFFFFFFFFFFFF8);
        long long v354 = (void *)((v371 + v302 + 311) & 0xFFFFFFFFFFFFFFF8);
        void *v353 = *v354;
        *(_OWORD *)(((unint64_t)v353 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v354 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v83 = v427;
        if (v319)
        {
LABEL_164:
          unint64_t v355 = ((((v289
                   + ((((((((((v290 + v292 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          unint64_t v356 = (_OWORD *)(((unint64_t)v83 + v355) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v357 = (_OWORD *)(((unint64_t)v288 + v355) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v356 = *v357;
          *(void *)(((unint64_t)v356 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v357 + 23) & 0xFFFFFFFFFFFFFFF8);
          char v89 = 3;
          goto LABEL_89;
        }
LABEL_158:
        size_t v292 = v291;
        goto LABEL_164;
      }
      size_t v88 = v401;
      unint64_t v96 = ((unint64_t)v84 + v402) & v423;
      uint64_t v85 = v59;
      unint64_t v97 = (v403 + v96) & v59;
      uint64_t v87 = v400;
      if (v382 == v398)
      {
        if (v369 == v382)
        {
          int v86 = (*(uint64_t (**)(unint64_t))(v384 + 48))(v97);
          goto LABEL_156;
        }
        unint64_t v124 = (unint64_t *)((v383 + v97) & 0xFFFFFFFFFFFFFFF8);
        if (v367 > 0x7FFFFFFE)
        {
          int v86 = (*(uint64_t (**)(unint64_t))(v377 + 48))(((unint64_t)v124 + v376) & v422);
          goto LABEL_156;
        }
        unint64_t v125 = *v124;
      }
      else
      {
        unint64_t v110 = v390 + v97;
        if ((v368 & 0x80000000) == 0)
        {
          unint64_t v111 = *(void *)(v110 + 8);
          if (v111 >= 0xFFFFFFFF) {
            LODWORD(v111) = -1;
          }
          int v86 = v111 + 1;
          goto LABEL_156;
        }
        uint64_t v126 = (v381 + ((v380 + v110) & v431)) & v436;
        if (v379 > 0x7FFFFFFD)
        {
          int v86 = (*(uint64_t (**)(uint64_t))(v400 + 48))(v126);
          goto LABEL_156;
        }
        unint64_t v125 = *(void *)(((v366 + ((v375 + v126) & v436)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v125 >= 0xFFFFFFFF) {
        LODWORD(v125) = -1;
      }
      if ((v125 + 1) >= 2) {
        goto LABEL_157;
      }
      goto LABEL_160;
    case 4u:
      uint64_t v65 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      char v89 = 4;
      goto LABEL_88;
    case 5u:
      uint64_t v65 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      char v89 = 5;
      goto LABEL_88;
    case 6u:
      uint64_t v65 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      uint64_t v90 = (void *)((v46 + a1) & v63);
      unint64_t v91 = (const void *)((unint64_t)&a2[v46] & v63);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v91, 1, v438))
      {
        memcpy(v90, v91, v44);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v90, v91, v438);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v90, 0, 1, v438);
      }
      char v89 = 6;
      goto LABEL_88;
    case 7u:
      uint64_t v65 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      char v89 = 7;
LABEL_88:
      unint64_t v98 = v444;
      goto LABEL_89;
    default:
      uint64_t v420 = v60;
      uint64_t v429 = ~v428;
      uint64_t v434 = ~v433;
      unint64_t v64 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32);
      uint64_t v65 = a1;
      v64(a1, a2, AssociatedTypeWitness);
      int v66 = (void *)((v397 + a1) & v58);
      unint64_t v67 = (void *)((unint64_t)&a2[v397] & v58);
      uint64_t v439 = v67;
      if (v399 != v398)
      {
        size_t v71 = v401;
        unint64_t v92 = ((unint64_t)v67 + v402) & v423;
        uint64_t v68 = v59;
        unint64_t v93 = (v403 + v92) & v59;
        uint64_t v70 = v400;
        if (v382 == v398)
        {
          if (v369 == v382)
          {
            int v69 = (*(uint64_t (**)(unint64_t))(v384 + 48))(v93);
            goto LABEL_121;
          }
          int v120 = (unint64_t *)((v383 + v93) & 0xFFFFFFFFFFFFFFF8);
          if (v367 > 0x7FFFFFFE)
          {
            int v69 = (*(uint64_t (**)(unint64_t))(v377 + 48))(((unint64_t)v120 + v376) & v420);
            goto LABEL_121;
          }
          unint64_t v121 = *v120;
        }
        else
        {
          unint64_t v106 = v390 + v93;
          if ((v368 & 0x80000000) == 0)
          {
            unint64_t v107 = *(void *)(v106 + 8);
            if (v107 >= 0xFFFFFFFF) {
              LODWORD(v107) = -1;
            }
            int v69 = v107 + 1;
            goto LABEL_121;
          }
          uint64_t v127 = (v381 + ((v380 + v106) & v429)) & v434;
          if (v379 > 0x7FFFFFFD)
          {
            int v69 = (*(uint64_t (**)(uint64_t))(v400 + 48))(v127);
            goto LABEL_121;
          }
          unint64_t v121 = *(void *)(((v366 + ((v375 + v127) & v434)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v121 >= 0xFFFFFFFF) {
          LODWORD(v121) = -1;
        }
        if ((v121 + 1) >= 2) {
          goto LABEL_122;
        }
        goto LABEL_125;
      }
      uint64_t v68 = v59;
      int v69 = (*(uint64_t (**)(void))(v404 + 48))();
      uint64_t v70 = v400;
      size_t v71 = v401;
LABEL_121:
      if (v69)
      {
LABEL_122:
        uint64_t v129 = v439;
        memcpy(v66, v439, v388);
        unint64_t v98 = v444;
        unint64_t v131 = v395;
        uint64_t v130 = v396;
        size_t v132 = v394;
LABEL_123:
        size_t v133 = v132;
        goto LABEL_129;
      }
      unint64_t v92 = ((unint64_t)v439 + v402) & v423;
      unint64_t v93 = (v403 + v92) & v68;
LABEL_125:
      v64((uint64_t)v66, (unsigned __int8 *)v439, AssociatedTypeWitness);
      long long v426 = v66;
      unint64_t v134 = ((unint64_t)v66 + v402) & v423;
      v64(v134, (unsigned __int8 *)v92, AssociatedTypeWitness);
      unint64_t v135 = (v403 + v134) & v68;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v384 + 32))(v135, v93, v385);
      unint64_t v136 = (void *)((v383 + v135) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v137 = (void *)((v383 + v93) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v136 = *v137;
      unint64_t v138 = ((unint64_t)v136 + v376) & v420;
      unint64_t v139 = ((unint64_t)v137 + v376) & v420;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 32))(v138, v139, v378);
      unint64_t v140 = (void *)((v372 + v138) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v141 = (void *)((v372 + v139) & 0xFFFFFFFFFFFFFFF8);
      void *v140 = *v141;
      *(_OWORD *)(((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v390 + v135) = *(_OWORD *)(v390 + v93);
      unint64_t v142 = (v380 + v390 + v135) & v429;
      unint64_t v143 = (v380 + v390 + v93) & v429;
      *(unsigned char *)unint64_t v142 = *(unsigned char *)v143;
      uint64_t v144 = v142 | 4;
      int v145 = *(_DWORD *)(v143 | 4);
      *(unsigned char *)(v144 + 4) = *(unsigned char *)((v143 | 4) + 4);
      *(_DWORD *)uint64_t v144 = v145;
      *(_WORD *)(v142 + 10) = *(_WORD *)(v143 + 0xA);
      uint64_t v146 = *(void (**)(unint64_t, unint64_t, uint64_t))(v70 + 32);
      v146((v381 + v142) & v434, (v381 + v143) & v434, v389);
      unint64_t v147 = (v375 + ((v381 + v142) & v434)) & v434;
      unint64_t v148 = (v375 + ((v381 + v143) & v434)) & v434;
      v146(v147, v148, v389);
      unint64_t v149 = (unsigned char *)(v147 + v71);
      *unint64_t v149 = *(unsigned char *)(v148 + v71);
      v149[1] = *(unsigned char *)(v148 + v71 + 1);
      v149[2] = *(unsigned char *)(v148 + v71 + 2);
      v149[3] = *(unsigned char *)(v148 + v71 + 3);
      v149[4] = *(unsigned char *)(v148 + v71 + 4);
      unint64_t v150 = (v147 + v71 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v151 = (v148 + v71 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v150 = *(_OWORD *)v151;
      *(unsigned char *)(v150 + 16) = *(unsigned char *)(v151 + 16);
      *(unsigned char *)(v150 + 17) = *(unsigned char *)(v151 + 17);
      *(unsigned char *)(v150 + 18) = *(unsigned char *)(v151 + 18);
      *(unsigned char *)(v150 + 19) = *(unsigned char *)(v151 + 19);
      unint64_t v152 = (v150 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v153 = (v151 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v152 = *(void *)v153;
      *(unsigned char *)(v152 + 8) = *(unsigned char *)(v153 + 8);
      *(unsigned char *)(v152 + 9) = *(unsigned char *)(v153 + 9);
      *(unsigned char *)(v152 + 10) = *(unsigned char *)(v153 + 10);
      *(unsigned char *)(v152 + 11) = *(unsigned char *)(v153 + 11);
      *(unsigned char *)(v152 + 12) = *(unsigned char *)(v153 + 12);
      unint64_t v154 = (void *)((v151 + 47) & 0xFFFFFFFFFFFFFFF8);
      size_t v155 = (void *)((v150 + 47) & 0xFFFFFFFFFFFFFFF8);
      *size_t v155 = *v154;
      unint64_t v156 = ((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v157 = ((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v156 = *(void *)v157;
      *(unsigned char *)(v156 + 8) = *(unsigned char *)(v157 + 8);
      *(unsigned char *)(v156 + 9) = *(unsigned char *)(v157 + 9);
      unint64_t v158 = (void *)((v373 + v156) & v434);
      unint64_t v159 = (const void *)((v373 + v157) & v434);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v400 + 48))(v159, 1, v389))
      {
        size_t v132 = v394;
        memcpy(v158, v159, v394);
        unint64_t v98 = v444;
        unint64_t v131 = v395;
        uint64_t v130 = v396;
        unsigned int v160 = v379;
      }
      else
      {
        v146((unint64_t)v158, (unint64_t)v159, v389);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v400 + 56))(v158, 0, 1, v389);
        unint64_t v98 = v444;
        unint64_t v131 = v395;
        uint64_t v130 = v396;
        unsigned int v160 = v379;
        size_t v132 = v394;
      }
      uint64_t v129 = v439;
      size_t v133 = v401;
      uint64_t v161 = (void *)(((unint64_t)v158 + v370) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v162 = (void *)(((unint64_t)v159 + v370) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v161 = *v162;
      unint64_t v163 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v164 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v165 = *(void *)v164;
      *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
      *(void *)unint64_t v163 = v165;
      uint64_t v166 = (void *)(((unint64_t)v161 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v167 = (void *)(((unint64_t)v162 + 31) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v166 = *v167;
      uint64_t v168 = (_OWORD *)(((unint64_t)v166 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v169 = (_OWORD *)(((unint64_t)v167 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v168 = *v169;
      unint64_t v170 = ((unint64_t)v168 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v171 = ((unint64_t)v169 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v172 = *(void *)v171;
      *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
      *(void *)unint64_t v170 = v172;
      *(unsigned char *)(v170 + 9) = *(unsigned char *)(v171 + 9);
      unint64_t v173 = (v170 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v174 = (v171 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v165) = *(_DWORD *)v174;
      *(unsigned char *)(v173 + 4) = *(unsigned char *)(v174 + 4);
      *(_DWORD *)unint64_t v173 = v165;
      *(_OWORD *)((v170 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v171 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v175 = v371 + v142;
      long long v176 = *(_OWORD *)(v371 + v143 + 112);
      long long v178 = *(_OWORD *)(v371 + v143 + 64);
      long long v177 = *(_OWORD *)(v371 + v143 + 80);
      *(_OWORD *)(v175 + 96) = *(_OWORD *)(v371 + v143 + 96);
      *(_OWORD *)(v175 + 112) = v176;
      *(_OWORD *)(v175 + 64) = v178;
      *(_OWORD *)(v175 + 80) = v177;
      long long v179 = *(_OWORD *)(v371 + v143 + 176);
      long long v181 = *(_OWORD *)(v371 + v143 + 128);
      long long v180 = *(_OWORD *)(v371 + v143 + 144);
      *(_OWORD *)(v175 + 160) = *(_OWORD *)(v371 + v143 + 160);
      *(_OWORD *)(v175 + 176) = v179;
      *(_OWORD *)(v175 + 128) = v181;
      *(_OWORD *)(v175 + 144) = v180;
      long long v183 = *(_OWORD *)(v371 + v143 + 208);
      long long v182 = *(_OWORD *)(v371 + v143 + 224);
      long long v184 = *(_OWORD *)(v371 + v143 + 192);
      *(void *)(v175 + 240) = *(void *)(v371 + v143 + 240);
      *(_OWORD *)(v175 + 208) = v183;
      *(_OWORD *)(v175 + 224) = v182;
      *(_OWORD *)(v175 + 192) = v184;
      long long v185 = *(_OWORD *)(v371 + v143);
      long long v186 = *(_OWORD *)(v371 + v143 + 16);
      long long v187 = *(_OWORD *)(v371 + v143 + 48);
      *(_OWORD *)(v175 + 32) = *(_OWORD *)(v371 + v143 + 32);
      *(_OWORD *)(v175 + 48) = v187;
      *(_OWORD *)unint64_t v175 = v185;
      *(_OWORD *)(v175 + 16) = v186;
      unint64_t v188 = (_OWORD *)((v371 + v142 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v189 = (long long *)((v371 + v143 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v190 = *v189;
      *(_OWORD *)((char *)v188 + 9) = *(long long *)((char *)v189 + 9);
      *unint64_t v188 = v190;
      unint64_t v191 = (v371 + v142 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v192 = (v371 + v143 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v193 = *(_OWORD *)v192;
      *(unsigned char *)(v191 + 16) = *(unsigned char *)(v192 + 16);
      *(_OWORD *)unint64_t v191 = v193;
      long long v194 = (void *)((v371 + v142 + 311) & 0xFFFFFFFFFFFFFFF8);
      long long v195 = (void *)((v371 + v143 + 311) & 0xFFFFFFFFFFFFFFF8);
      *long long v194 = *v195;
      *(_OWORD *)(((unint64_t)v194 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8);
      int v66 = v426;
      if (!v160) {
        goto LABEL_123;
      }
LABEL_129:
      char v89 = 0;
      unint64_t v196 = ((((v130
               + ((((((((((v131 + v133 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v197 = (void *)(((unint64_t)v66 + v196) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v198 = (void *)(((unint64_t)v129 + v196) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v197 = *v198;
      *(void *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_89:
      *(unsigned char *)(v65 + v98) = v89;
      return v65;
  }
}

unsigned __int8 *sub_10068BF94(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(void *)(a3 + 16);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v475 = *(void *)(v4 + 64);
    uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v471 = v3;
    uint64_t v441 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v441 - 8);
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v432 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v432 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v429 = sub_10096B0E0();
    uint64_t v11 = *(void *)(v429 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = v12 | 7;
    uint64_t v14 = v10 | v5 | v12;
    uint64_t v473 = v4;
    uint64_t v440 = v6;
    uint64_t v431 = v8;
    unsigned int v15 = *(_DWORD *)(v8 + 84);
    unsigned int v414 = *(_DWORD *)(v6 + 84);
    if (v414 > v15) {
      unsigned int v15 = *(_DWORD *)(v6 + 84);
    }
    unsigned int v408 = v15;
    if (v15 <= 0x7FFFFFFE) {
      unsigned int v15 = 2147483646;
    }
    unsigned int v437 = v15;
    unsigned int v453 = *(_DWORD *)(v4 + 84);
    if (v15 <= v453) {
      unsigned int v15 = *(_DWORD *)(v4 + 84);
    }
    uint64_t v444 = *(void *)(v429 - 8);
    unsigned int v16 = *(_DWORD *)(v11 + 84);
    if (v16 <= 0x7FFFFFFE) {
      unsigned int v17 = 2147483646;
    }
    else {
      unsigned int v17 = *(_DWORD *)(v11 + 84);
    }
    if (v15 > v17) {
      unsigned int v17 = v15;
    }
    unsigned int v413 = v17;
    if (v17 <= 0x7FFFFFFF) {
      int v18 = 0x7FFFFFFF;
    }
    else {
      int v18 = v17;
    }
    int v452 = v18;
    unsigned int v416 = v16;
    uint64_t v454 = v475 + v5;
    uint64_t v463 = v5;
    uint64_t v455 = v475 + v10;
    uint64_t v460 = v10;
    unint64_t v19 = (v475 + v10 + ((v475 + v5) & ~v5)) & ~v10;
    uint64_t v20 = v12;
    uint64_t v439 = *(void *)(v6 + 64) + 7;
    uint64_t v430 = v9 + 8;
    uint64_t v421 = *(void *)(v8 + 64) + 7;
    unint64_t v445 = ((((v421 + ((v9 + 8 + (v439 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v433 = v13 + 16;
    uint64_t v21 = v13 + 16 + v445 + v19;
    uint64_t v458 = v12 | 7;
    uint64_t v434 = v12 + 12;
    size_t v22 = *(void *)(*(void *)(v429 - 8) + 64);
    size_t v428 = v22 + v12;
    size_t v412 = v22 + 12;
    unint64_t v23 = (v12
         + 10
         + ((((((v22 + 12 + ((v22 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
    size_t v420 = v22;
    if (!v16) {
      ++v22;
    }
    size_t v438 = v22;
    unint64_t v435 = v23;
    uint64_t v436 = v21 & ~v13;
    uint64_t v422 = v12 + 10;
    size_t v423 = v22 + 7;
    unint64_t v424 = ((((((((((v22 + 7 + v23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    size_t v450 = ((((v436 + v424 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v451 = v14 + v475;
    uint64_t v456 = v14;
    size_t v24 = v450 + ((v14 + v475) & ~v14);
    unint64_t v465 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v447 = swift_getAssociatedTypeWitness();
    uint64_t v25 = *(void *)(v447 - 8);
    uint64_t v26 = *(unsigned __int8 *)(v25 + 80);
    size_t v468 = (v24 + v26) & ~v26;
    uint64_t v449 = v25;
    if (*(_DWORD *)(v25 + 84)) {
      uint64_t v27 = *(void *)(v25 + 64);
    }
    else {
      uint64_t v27 = *(void *)(v25 + 64) + 1;
    }
    uint64_t v443 = swift_getAssociatedTypeWitness();
    uint64_t v28 = *(void *)(v443 - 8);
    int v29 = *(_DWORD *)(v28 + 80) & 0xF8;
    uint64_t v427 = swift_getAssociatedTypeWitness();
    uint64_t v30 = *(void *)(v427 - 8);
    uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
    uint64_t v32 = v29 | v31 | 7;
    uint64_t v442 = v28;
    unsigned int v33 = *(_DWORD *)(v28 + 84);
    uint64_t v426 = v30;
    unsigned int v34 = *(_DWORD *)(v30 + 84);
    unsigned int v409 = v34;
    if (v33 > v34) {
      unsigned int v34 = *(_DWORD *)(v28 + 84);
    }
    unsigned int v417 = v34;
    if (v34 <= 0x7FFFFFFE) {
      int v35 = 2147483646;
    }
    else {
      int v35 = v34;
    }
    uint64_t v446 = *(void *)(v28 + 64) + 7;
    uint64_t v425 = v31 + 8;
    uint64_t v415 = *(void *)(*(void *)(v427 - 8) + 64) + 7;
    unint64_t v36 = ((((v415 + ((v31 + 8 + (v446 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    size_t __n = v27;
    uint64_t v37 = v27 + v32;
    unint64_t v38 = ((((((v27 + v32 + v468) & ~v32) + v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v39 = *(void *)(v471 - 8);
    uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
    uint64_t v419 = v475 + v26;
    size_t v448 = v36;
    unint64_t v41 = v36 + ((v27 + v32 + ((v475 + v26) & ~v26)) & ~v32) + 16;
    if (*(_DWORD *)(v39 + 84)) {
      uint64_t v42 = *(void *)(*(void *)(v471 - 8) + 64);
    }
    else {
      uint64_t v42 = *(void *)(*(void *)(v471 - 8) + 64) + 1;
    }
    unint64_t v43 = ((v465 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v475 > v43) {
      unint64_t v43 = v475;
    }
    if (v38 <= v41) {
      unint64_t v38 = v41;
    }
    uint64_t v418 = v475 + v40;
    unint64_t v44 = ((v475 + v40) & ~v40) + v42;
    if (((v465 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v44) {
      unint64_t v44 = ((v465 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v43 <= v38) {
      unint64_t v43 = v38;
    }
    if (v43 <= v44) {
      unint64_t v45 = v44;
    }
    else {
      unint64_t v45 = v43;
    }
    unsigned int v46 = a1[v45];
    unsigned int v47 = v46 - 8;
    if (v46 < 8)
    {
      uint64_t v49 = AssociatedTypeWitness;
      uint64_t v50 = v463;
      uint64_t v51 = v458;
      uint64_t v52 = v460;
      uint64_t v53 = v456;
    }
    else
    {
      if (v45 <= 3) {
        uint64_t v48 = v45;
      }
      else {
        uint64_t v48 = 4;
      }
      uint64_t v49 = AssociatedTypeWitness;
      uint64_t v50 = v463;
      uint64_t v51 = v458;
      uint64_t v52 = v460;
      uint64_t v53 = v456;
      switch(v48)
      {
        case 1:
          int v54 = *a1;
          if (v45 < 4) {
            goto LABEL_53;
          }
          goto LABEL_54;
        case 2:
          int v54 = *(unsigned __int16 *)a1;
          if (v45 >= 4) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 3:
          int v54 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v45 >= 4) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 4:
          int v54 = *(_DWORD *)a1;
          if (v45 < 4) {
LABEL_53:
          }
            v54 |= v47 << (8 * v45);
LABEL_54:
          unsigned int v46 = v54 + 8;
          break;
        default:
          break;
      }
    }
    uint64_t v467 = ~v53;
    uint64_t v469 = ~v50;
    uint64_t v476 = ~v52;
    uint64_t v459 = ~v9;
    uint64_t v461 = ~v51;
    uint64_t v55 = ~v20;
    uint64_t v462 = ~v26;
    uint64_t v464 = ~v32;
    uint64_t v457 = ~v31;
    uint64_t v56 = ~v40;
    unsigned int v466 = v33;
    size_t v407 = v42;
    uint64_t v410 = ~v40;
    switch(v46)
    {
      case 1u:
        unint64_t v399 = v45;
        uint64_t v63 = v27 + v32;
        int v405 = v35;
        unint64_t v64 = *(void (**)(unsigned __int8 *, uint64_t))(v473 + 8);
        v64(a1, v49);
        unint64_t v65 = (unint64_t)&a1[v451] & v467;
        if (v453 == v452)
        {
          int v66 = (*(uint64_t (**)(unint64_t))(v473 + 48))((unint64_t)&a1[v451] & v467);
          unint64_t v65 = (unint64_t)&a1[v451] & v467;
          uint64_t v37 = v63;
LABEL_130:
          unint64_t v45 = v399;
          if (v66) {
            goto LABEL_143;
          }
          unint64_t v76 = (v454 + v65) & v469;
          unint64_t v77 = (v455 + v76) & v476;
          goto LABEL_132;
        }
        unint64_t v76 = (v454 + v65) & v469;
        unint64_t v77 = (v455 + v76) & v476;
        if (v437 == v452)
        {
          if (v414 == v437)
          {
            int v66 = (*(uint64_t (**)(unint64_t))(v440 + 48))((v455 + v76) & v476);
            unint64_t v65 = (unint64_t)&a1[v451] & v467;
            uint64_t v37 = v63;
            goto LABEL_130;
          }
          uint64_t v90 = (unint64_t *)((v439 + v77) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v37 = v63;
          if (v408 <= 0x7FFFFFFE)
          {
            unint64_t v91 = *v90;
            goto LABEL_309;
          }
          unint64_t v98 = ((unint64_t)v90 + v430) & v459;
          unint64_t v99 = *(uint64_t (**)(unint64_t))(v431 + 48);
        }
        else
        {
          unint64_t v84 = v445 + v77;
          if ((v413 & 0x80000000) == 0)
          {
            unint64_t v85 = *(void *)(v84 + 8);
            if (v85 >= 0xFFFFFFFF) {
              LODWORD(v85) = -1;
            }
            int v66 = v85 + 1;
            uint64_t v37 = v63;
            goto LABEL_130;
          }
          unint64_t v98 = (v434 + ((v433 + v84) & v461)) & v55;
          uint64_t v37 = v63;
          if (v416 <= 0x7FFFFFFD)
          {
            unint64_t v91 = *(void *)(((v412 + ((v428 + v98) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_309:
            if (v91 >= 0xFFFFFFFF) {
              LODWORD(v91) = -1;
            }
            unint64_t v45 = v399;
            if ((v91 + 1) < 2)
            {
LABEL_132:
              uint64_t v402 = v26;
              unint64_t v397 = v65;
              v64((unsigned __int8 *)v65, AssociatedTypeWitness);
              v64((unsigned __int8 *)v76, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v440 + 8))(v77, v441);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v431 + 8))((v430 + ((v439 + v77) & 0xFFFFFFFFFFFFFFF8)) & v459, v432);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v108 = (v433 + v445 + v77) & v461;
              unint64_t v109 = *(void (**)(unint64_t, uint64_t))(v444 + 8);
              v109((v434 + v108) & v55, v429);
              unint64_t v110 = (v428 + ((v434 + v108) & v55)) & v55;
              v109(v110, v429);
              swift_bridgeObjectRelease();
              unint64_t v111 = (v422
                    + ((((((v412 + v110) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v55;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v444 + 48))(v111, 1, v429)) {
                v109(v111, v429);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              size_t v112 = (uint64_t *)((((((v423 + v111) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v113 = v112[1];
              if ((v113 & 0x3000000000000000) == 0) {
                sub_10001E9C0(*v112, v113);
              }
              swift_bridgeObjectRelease();
              unint64_t v114 = v424 + v108;
              LODWORD(v115) = -1;
              if (*(void *)(v424 + v108 + 16) < 0xFFFFFFFFuLL) {
                uint64_t v115 = *(void *)(v424 + v108 + 16);
              }
              uint64_t v26 = v402;
              if ((int)v115 - 1 < 0)
              {
                swift_errorRelease();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v114 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1000CF144(*(void *)((((v114 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v114 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              unint64_t v65 = v397;
            }
LABEL_143:
            size_t v116 = (v65 + v26 + v450) & v462;
            if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v449 + 48))(v116, 1, v447)) {
              (*(void (**)(size_t, uint64_t))(v449 + 8))(v116, v447);
            }
            size_t v117 = (v37 + v116) & v464;
            int v35 = v405;
            uint64_t v49 = AssociatedTypeWitness;
            if (v466 == v405)
            {
              if (!(*(unsigned int (**)(size_t))(v442 + 48))(v117)) {
                goto LABEL_154;
              }
            }
            else
            {
              unsigned int v118 = (uint64_t *)((v446 + v117) & 0xFFFFFFFFFFFFFFF8);
              if (v417 <= 0x7FFFFFFE)
              {
                uint64_t v119 = *v118;
                if ((unint64_t)*v118 >= 0xFFFFFFFF) {
                  LODWORD(v119) = -1;
                }
                if ((v119 + 1) >= 2) {
                  goto LABEL_156;
                }
                goto LABEL_155;
              }
              if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v426 + 48))(((unint64_t)v118 + v425) & v457, v409, v427))
              {
LABEL_154:
                unsigned int v118 = (uint64_t *)((v446 + v117) & 0xFFFFFFFFFFFFFFF8);
LABEL_155:
                (*(void (**)(size_t, uint64_t))(v442 + 8))(v117, v443);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v426 + 8))(((unint64_t)v118 + v425) & v457, v427);
                int v35 = v405;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
LABEL_156:

LABEL_174:
            unsigned int v128 = a2[v45];
            unsigned int v129 = v128 - 8;
            if (v128 < 8)
            {
              uint64_t v131 = v473;
            }
            else
            {
              if (v45 <= 3) {
                uint64_t v130 = v45;
              }
              else {
                uint64_t v130 = 4;
              }
              uint64_t v131 = v473;
              switch(v130)
              {
                case 1:
                  int v132 = *a2;
                  if (v45 < 4) {
                    goto LABEL_185;
                  }
                  goto LABEL_187;
                case 2:
                  int v132 = *(unsigned __int16 *)a2;
                  if (v45 >= 4) {
                    goto LABEL_187;
                  }
                  goto LABEL_185;
                case 3:
                  int v132 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                  if (v45 < 4) {
                    goto LABEL_185;
                  }
                  goto LABEL_187;
                case 4:
                  int v132 = *(_DWORD *)a2;
                  if (v45 < 4) {
LABEL_185:
                  }
                    unsigned int v128 = (v132 | (v129 << (8 * v45))) + 8;
                  else {
LABEL_187:
                  }
                    unsigned int v128 = v132 + 8;
                  break;
                default:
                  break;
              }
            }
            switch(v128)
            {
              case 1u:
                int v406 = v35;
                unint64_t v138 = *(void (**)(unsigned __int8 *))(v131 + 32);
                v138(a1);
                uint64_t v474 = (const void *)((unint64_t)&a2[v451] & v467);
                if (v453 == v452)
                {
                  int v139 = (*(uint64_t (**)(void))(v131 + 48))();
LABEL_262:
                  unint64_t v247 = (void *)((unint64_t)&a1[v451] & v467);
                  if (v139)
                  {
LABEL_263:
                    unint64_t v248 = (unint64_t)&a2[v451] & v467;
                    memcpy(v247, v474, v450);
                    unint64_t v250 = v435;
                    uint64_t v249 = v436;
                    uint64_t v251 = v447;
                    uint64_t v252 = v449;
                    goto LABEL_264;
                  }
                  unint64_t v153 = ((unint64_t)v474 + v454) & v469;
                  unint64_t v154 = (v455 + v153) & v476;
LABEL_266:
                  uint64_t v395 = v37;
                  ((void (*)(void *, const void *, uint64_t))v138)(v247, v474, v49);
                  ((void (*)(unint64_t, unint64_t, uint64_t))v138)(((unint64_t)v247 + v454) & v469, v153, v49);
                  unint64_t v254 = (v455 + (((unint64_t)v247 + v454) & v469)) & v476;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v440 + 32))(v254, v154, v441);
                  long long v255 = (void *)((v439 + v254) & 0xFFFFFFFFFFFFFFF8);
                  long long v256 = (void *)((v439 + v154) & 0xFFFFFFFFFFFFFFF8);
                  *long long v255 = *v256;
                  unint64_t v257 = ((unint64_t)v255 + v430) & v459;
                  uint64_t v258 = v55;
                  unint64_t v259 = ((unint64_t)v256 + v430) & v459;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v431 + 32))(v257, v259, v432);
                  long long v260 = (void *)((v421 + v257) & 0xFFFFFFFFFFFFFFF8);
                  long long v261 = (void *)((v421 + v259) & 0xFFFFFFFFFFFFFFF8);
                  *long long v260 = *v261;
                  *(_OWORD *)(((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v261
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *(_OWORD *)(v445 + v254) = *(_OWORD *)(v445 + v154);
                  unint64_t v262 = (v433 + v445 + v254) & v461;
                  unint64_t v263 = (v433 + v445 + v154) & v461;
                  *(unsigned char *)unint64_t v262 = *(unsigned char *)v263;
                  uint64_t v264 = v262 | 4;
                  int v265 = *(_DWORD *)(v263 | 4);
                  *(unsigned char *)(v264 + 4) = *(unsigned char *)((v263 | 4) + 4);
                  *(_DWORD *)uint64_t v264 = v265;
                  *(_WORD *)(v262 + 10) = *(_WORD *)(v263 + 0xA);
                  unint64_t v266 = *(void (**)(unint64_t, unint64_t, uint64_t))(v444 + 32);
                  v266((v434 + v262) & v258, (v434 + v263) & v258, v429);
                  unint64_t v267 = (v428 + ((v434 + v262) & v258)) & v258;
                  unint64_t v268 = (v428 + ((v434 + v263) & v258)) & v258;
                  v266(v267, v268, v429);
                  int v269 = (unsigned char *)(v267 + v420);
                  *int v269 = *(unsigned char *)(v268 + v420);
                  v269[1] = *(unsigned char *)(v268 + v420 + 1);
                  v269[2] = *(unsigned char *)(v268 + v420 + 2);
                  v269[3] = *(unsigned char *)(v268 + v420 + 3);
                  v269[4] = *(unsigned char *)(v268 + v420 + 4);
                  unint64_t v270 = (v267 + v420 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v271 = (v268 + v420 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)unint64_t v270 = *(_OWORD *)v271;
                  *(unsigned char *)(v270 + 16) = *(unsigned char *)(v271 + 16);
                  *(unsigned char *)(v270 + 17) = *(unsigned char *)(v271 + 17);
                  *(unsigned char *)(v270 + 18) = *(unsigned char *)(v271 + 18);
                  *(unsigned char *)(v270 + 19) = *(unsigned char *)(v271 + 19);
                  unint64_t v272 = (v270 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v273 = (v271 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v272 = *(void *)v273;
                  *(unsigned char *)(v272 + 8) = *(unsigned char *)(v273 + 8);
                  *(unsigned char *)(v272 + 9) = *(unsigned char *)(v273 + 9);
                  *(unsigned char *)(v272 + 10) = *(unsigned char *)(v273 + 10);
                  *(unsigned char *)(v272 + 11) = *(unsigned char *)(v273 + 11);
                  *(unsigned char *)(v272 + 12) = *(unsigned char *)(v273 + 12);
                  unint64_t v274 = (void *)((v271 + 47) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v275 = (void *)((v270 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v275 = *v274;
                  unint64_t v276 = ((unint64_t)v275 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v277 = ((unint64_t)v274 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v276 = *(void *)v277;
                  *(unsigned char *)(v276 + 8) = *(unsigned char *)(v277 + 8);
                  *(unsigned char *)(v276 + 9) = *(unsigned char *)(v277 + 9);
                  uint64_t v278 = (void *)((v422 + v276) & v258);
                  size_t v279 = (const void *)((v422 + v277) & v258);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v444 + 48))(v279, 1, v429))
                  {
                    memcpy(v278, v279, v438);
                  }
                  else
                  {
                    v266((unint64_t)v278, (unint64_t)v279, v429);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v444 + 56))(v278, 0, 1, v429);
                  }
                  unint64_t v250 = v435;
                  uint64_t v249 = v436;
                  size_t v253 = v420;
                  uint64_t v251 = v447;
                  uint64_t v252 = v449;
                  unint64_t v248 = (unint64_t)&a2[v451] & v467;
                  uint64_t v37 = v395;
                  uint64_t v280 = (void *)(((unint64_t)v278 + v423) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v281 = (void *)(((unint64_t)v279 + v423) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v280 = *v281;
                  unint64_t v282 = ((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v283 = ((unint64_t)v281 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v284 = *(void *)v283;
                  *(unsigned char *)(v282 + 8) = *(unsigned char *)(v283 + 8);
                  *(void *)unint64_t v282 = v284;
                  uint64_t v285 = (void *)(((unint64_t)v280 + 31) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v286 = (void *)(((unint64_t)v281 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v285 = *v286;
                  unint64_t v287 = (_OWORD *)(((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v288 = (_OWORD *)(((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v287 = *v288;
                  unint64_t v289 = ((unint64_t)v287 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v290 = ((unint64_t)v288 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v291 = *(void *)v290;
                  *(unsigned char *)(v289 + 8) = *(unsigned char *)(v290 + 8);
                  *(void *)unint64_t v289 = v291;
                  *(unsigned char *)(v289 + 9) = *(unsigned char *)(v290 + 9);
                  unint64_t v292 = (v289 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v293 = (v290 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  LODWORD(v284) = *(_DWORD *)v293;
                  *(unsigned char *)(v292 + 4) = *(unsigned char *)(v293 + 4);
                  *(_DWORD *)unint64_t v292 = v284;
                  *(_OWORD *)((v289 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v290 + 25) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v294 = v424 + v262;
                  long long v295 = *(_OWORD *)(v424 + v263 + 112);
                  long long v297 = *(_OWORD *)(v424 + v263 + 64);
                  long long v296 = *(_OWORD *)(v424 + v263 + 80);
                  *(_OWORD *)(v294 + 96) = *(_OWORD *)(v424 + v263 + 96);
                  *(_OWORD *)(v294 + 112) = v295;
                  *(_OWORD *)(v294 + 64) = v297;
                  *(_OWORD *)(v294 + 80) = v296;
                  long long v298 = *(_OWORD *)(v424 + v263 + 176);
                  long long v300 = *(_OWORD *)(v424 + v263 + 128);
                  long long v299 = *(_OWORD *)(v424 + v263 + 144);
                  *(_OWORD *)(v294 + 160) = *(_OWORD *)(v424 + v263 + 160);
                  *(_OWORD *)(v294 + 176) = v298;
                  *(_OWORD *)(v294 + 128) = v300;
                  *(_OWORD *)(v294 + 144) = v299;
                  long long v302 = *(_OWORD *)(v424 + v263 + 208);
                  long long v301 = *(_OWORD *)(v424 + v263 + 224);
                  long long v303 = *(_OWORD *)(v424 + v263 + 192);
                  *(void *)(v294 + 240) = *(void *)(v424 + v263 + 240);
                  *(_OWORD *)(v294 + 208) = v302;
                  *(_OWORD *)(v294 + 224) = v301;
                  *(_OWORD *)(v294 + 192) = v303;
                  long long v304 = *(_OWORD *)(v424 + v263);
                  long long v305 = *(_OWORD *)(v424 + v263 + 16);
                  long long v306 = *(_OWORD *)(v424 + v263 + 48);
                  *(_OWORD *)(v294 + 32) = *(_OWORD *)(v424 + v263 + 32);
                  *(_OWORD *)(v294 + 48) = v306;
                  *(_OWORD *)unint64_t v294 = v304;
                  *(_OWORD *)(v294 + 16) = v305;
                  unint64_t v307 = (_OWORD *)((v424 + v262 + 255) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v308 = (long long *)((v424 + v263 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v309 = *v308;
                  *(_OWORD *)((char *)v307 + 9) = *(long long *)((char *)v308 + 9);
                  _OWORD *v307 = v309;
                  unint64_t v310 = (v424 + v262 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v311 = (v424 + v263 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v312 = *(_OWORD *)v311;
                  *(unsigned char *)(v310 + 16) = *(unsigned char *)(v311 + 16);
                  *(_OWORD *)unint64_t v310 = v312;
                  int v313 = (void *)((v424 + v262 + 311) & 0xFFFFFFFFFFFFFFF8);
                  long long v314 = (void *)((v424 + v263 + 311) & 0xFFFFFFFFFFFFFFF8);
                  *int v313 = *v314;
                  *(_OWORD *)(((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v314
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v247 = (void *)((unint64_t)&a1[v451] & v467);
                  if (v416)
                  {
LABEL_270:
                    unint64_t v315 = ((((v249
                             + ((((((((((v250 + v253 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    unint64_t v316 = (void *)(((unint64_t)v247 + v26 + v315) & v462);
                    long long v317 = (const void *)((v248 + v26 + v315) & v462);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v252 + 48))(v317, 1, v251))
                    {
                      memcpy(v316, v317, __n);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v252 + 32))(v316, v317, v251);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v252 + 56))(v316, 0, 1, v251);
                    }
                    long long v318 = (char *)(((unint64_t)v316 + v37) & v464);
                    unsigned int v319 = (char *)(((unint64_t)v317 + v37) & v464);
                    if (v466 == v406)
                    {
                      if (!(*(unsigned int (**)(char *))(v442 + 48))(v319)) {
                        goto LABEL_283;
                      }
                    }
                    else
                    {
                      long long v320 = (void *)((unint64_t)&v319[v446] & 0xFFFFFFFFFFFFFFF8);
                      if (v417 > 0x7FFFFFFE)
                      {
                        if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v426 + 48))(((unint64_t)v320 + v425) & v457, v409, v427))
                        {
LABEL_283:
                          long long v320 = (void *)((unint64_t)&v319[v446] & 0xFFFFFFFFFFFFFFF8);
LABEL_284:
                          (*(void (**)(char *, char *, uint64_t))(v442 + 32))(v318, v319, v443);
                          unint64_t v322 = (void *)((unint64_t)&v318[v446] & 0xFFFFFFFFFFFFFFF8);
                          void *v322 = *v320;
                          unint64_t v323 = ((unint64_t)v322 + v425) & v457;
                          (*(void (**)(unint64_t, unint64_t, uint64_t))(v426 + 32))(v323, ((unint64_t)v320 + v425) & v457, v427);
                          uint64_t v324 = (void *)((v415 + v323) & 0xFFFFFFFFFFFFFFF8);
                          long long v325 = (void *)((v415 + (((unint64_t)v320 + v425) & v457)) & 0xFFFFFFFFFFFFFFF8);
                          void *v324 = *v325;
                          *(_OWORD *)(((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v325 + 15) & 0xFFFFFFFFFFFFFFF8);
                          goto LABEL_285;
                        }
                      }
                      else
                      {
                        uint64_t v321 = *v320;
                        if (*v320 >= 0xFFFFFFFFuLL) {
                          LODWORD(v321) = -1;
                        }
                        if ((v321 + 1) < 2) {
                          goto LABEL_284;
                        }
                      }
                    }
                    memcpy(v318, v319, v448);
LABEL_285:
                    *(void *)&v318[v448] = *(void *)&v319[v448];
                    unsigned int v326 = (void *)((unint64_t)&v318[v448 + 15] & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v327 = (void *)((unint64_t)&v319[v448 + 15] & 0xFFFFFFFFFFFFFFF8);
                    void *v326 = *v327;
                    *(void *)(((unint64_t)v326 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v327 + 15) & 0xFFFFFFFFFFFFFFF8);
                    char v148 = 1;
                    goto LABEL_296;
                  }
LABEL_264:
                  size_t v253 = v438;
                  goto LABEL_270;
                }
                unint64_t v153 = (v454 + ((unint64_t)&a2[v451] & v467)) & v469;
                unint64_t v154 = (v455 + v153) & v476;
                if (v437 == v452)
                {
                  if (v414 == v437)
                  {
                    int v139 = (*(uint64_t (**)(unint64_t))(v440 + 48))((v455 + v153) & v476);
                    goto LABEL_262;
                  }
                  unint64_t v174 = (unint64_t *)((v439 + v154) & 0xFFFFFFFFFFFFFFF8);
                  if (v408 > 0x7FFFFFFE)
                  {
                    int v139 = (*(uint64_t (**)(unint64_t))(v431 + 48))(((unint64_t)v174 + v430) & v459);
                    goto LABEL_262;
                  }
                  unint64_t v175 = *v174;
                }
                else
                {
                  unint64_t v163 = v445 + v154;
                  if ((v413 & 0x80000000) == 0)
                  {
                    unint64_t v164 = *(void *)(v163 + 8);
                    if (v164 >= 0xFFFFFFFF) {
                      LODWORD(v164) = -1;
                    }
                    int v139 = v164 + 1;
                    goto LABEL_262;
                  }
                  uint64_t v179 = (v434 + ((v433 + v163) & v461)) & v55;
                  if (v416 > 0x7FFFFFFD)
                  {
                    int v139 = (*(uint64_t (**)(uint64_t))(v444 + 48))(v179);
                    goto LABEL_262;
                  }
                  unint64_t v175 = *(void *)(((v412 + ((v428 + v179) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
                }
                if (v175 >= 0xFFFFFFFF) {
                  LODWORD(v175) = -1;
                }
                unint64_t v247 = (void *)((unint64_t)&a1[v451] & v467);
                if ((v175 + 1) >= 2) {
                  goto LABEL_263;
                }
                goto LABEL_266;
              case 2u:
                int v140 = v35;
                (*(void (**)(unsigned __int8 *))(v131 + 32))(a1);
                unint64_t v141 = (void *)((unint64_t)&a1[v419] & v462);
                unint64_t v142 = (const void *)((unint64_t)&a2[v419] & v462);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v449 + 48))(v142, 1, v447))
                {
                  memcpy(v141, v142, __n);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v449 + 32))(v141, v142, v447);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v449 + 56))(v141, 0, 1, v447);
                }
                unint64_t v157 = (char *)(((unint64_t)v141 + v37) & v464);
                unint64_t v158 = (char *)(((unint64_t)v142 + v37) & v464);
                if (v466 == v140)
                {
                  if (!(*(unsigned int (**)(char *))(v442 + 48))(v158)) {
                    goto LABEL_236;
                  }
                }
                else
                {
                  unint64_t v159 = (void *)((unint64_t)&v158[v446] & 0xFFFFFFFFFFFFFFF8);
                  if (v417 > 0x7FFFFFFE)
                  {
                    if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v426 + 48))(((unint64_t)v159 + v425) & v457, v409, v427))
                    {
LABEL_236:
                      unint64_t v159 = (void *)((unint64_t)&v158[v446] & 0xFFFFFFFFFFFFFFF8);
LABEL_237:
                      (*(void (**)(char *, char *, uint64_t))(v442 + 32))(v157, v158, v443);
                      unint64_t v167 = (void *)((unint64_t)&v157[v446] & 0xFFFFFFFFFFFFFFF8);
                      *unint64_t v167 = *v159;
                      unint64_t v168 = ((unint64_t)v167 + v425) & v457;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v426 + 32))(v168, ((unint64_t)v159 + v425) & v457, v427);
                      unint64_t v169 = (void *)((v415 + v168) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v170 = (void *)((v415 + (((unint64_t)v159 + v425) & v457)) & 0xFFFFFFFFFFFFFFF8);
                      *unint64_t v169 = *v170;
                      *(_OWORD *)(((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v170 + 15) & 0xFFFFFFFFFFFFFFF8);
                      goto LABEL_238;
                    }
                  }
                  else
                  {
                    uint64_t v160 = *v159;
                    if (*v159 >= 0xFFFFFFFFuLL) {
                      LODWORD(v160) = -1;
                    }
                    if ((v160 + 1) < 2) {
                      goto LABEL_237;
                    }
                  }
                }
                memcpy(v157, v158, v448);
LABEL_238:
                unint64_t v171 = &v157[v448];
                *unint64_t v171 = v158[v448];
                *((void *)v171 + 1) = *(void *)&v158[v448 + 8];
                char v148 = 2;
LABEL_296:
                a1[v45] = v148;
                return a1;
              case 3u:
                unint64_t v143 = *(void (**)(unsigned __int8 *))(v131 + 32);
                v143(a1);
                uint64_t v144 = (void *)((unint64_t)&a1[v451] & v467);
                int v145 = (const void *)((unint64_t)&a2[v451] & v467);
                if (v453 == v452)
                {
                  int v146 = (*(uint64_t (**)(unint64_t))(v131 + 48))((unint64_t)&a2[v451] & v467);
                  uint64_t v147 = v444;
LABEL_287:
                  if (v146)
                  {
LABEL_288:
                    memcpy(v144, v145, v450);
                    unint64_t v329 = v435;
                    uint64_t v328 = v436;
LABEL_289:
                    size_t v330 = v438;
LABEL_295:
                    unint64_t v391 = ((((v328
                             + ((((((((((v329 + v330 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    uint64_t v392 = (_OWORD *)(((unint64_t)v144 + v391) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v393 = (_OWORD *)(((unint64_t)v145 + v391) & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v392 = *v393;
                    *(void *)(((unint64_t)v392 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v393 + 23) & 0xFFFFFFFFFFFFFFF8);
                    char v148 = 3;
                    goto LABEL_296;
                  }
                  unint64_t v155 = ((unint64_t)v145 + v454) & v469;
                  unint64_t v156 = (v455 + v155) & v476;
LABEL_291:
                  ((void (*)(void *, const void *, uint64_t))v143)(v144, v145, AssociatedTypeWitness);
                  ((void (*)(unint64_t, unint64_t, uint64_t))v143)(((unint64_t)v144 + v454) & v469, v155, AssociatedTypeWitness);
                  unint64_t v331 = (v455 + (((unint64_t)v144 + v454) & v469)) & v476;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v440 + 32))(v331, v156, v441);
                  unint64_t v332 = (void *)((v439 + v331) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v333 = (void *)((v439 + v156) & 0xFFFFFFFFFFFFFFF8);
                  void *v332 = *v333;
                  unint64_t v334 = ((unint64_t)v332 + v430) & v459;
                  unint64_t v335 = ((unint64_t)v333 + v430) & v459;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v431 + 32))(v334, v335, v432);
                  long long v336 = (void *)((v421 + v334) & 0xFFFFFFFFFFFFFFF8);
                  long long v337 = (void *)((v421 + v335) & 0xFFFFFFFFFFFFFFF8);
                  *long long v336 = *v337;
                  *(_OWORD *)(((unint64_t)v336 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v337
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *(_OWORD *)(v445 + v331) = *(_OWORD *)(v445 + v156);
                  unint64_t v338 = (v433 + v445 + v331) & v461;
                  unint64_t v339 = (v433 + v445 + v156) & v461;
                  *(unsigned char *)unint64_t v338 = *(unsigned char *)v339;
                  uint64_t v340 = v338 | 4;
                  int v341 = *(_DWORD *)(v339 | 4);
                  *(unsigned char *)(v340 + 4) = *(unsigned char *)((v339 | 4) + 4);
                  *(_DWORD *)uint64_t v340 = v341;
                  *(_WORD *)(v338 + 10) = *(_WORD *)(v339 + 0xA);
                  long long v342 = *(void (**)(unint64_t, unint64_t, uint64_t))(v147 + 32);
                  v342((v434 + v338) & v55, (v434 + v339) & v55, v429);
                  unint64_t v343 = (v428 + ((v434 + v338) & v55)) & v55;
                  unint64_t v344 = (v428 + ((v434 + v339) & v55)) & v55;
                  v342(v343, v344, v429);
                  long long v345 = (unsigned char *)(v343 + v420);
                  *long long v345 = *(unsigned char *)(v344 + v420);
                  v345[1] = *(unsigned char *)(v344 + v420 + 1);
                  v345[2] = *(unsigned char *)(v344 + v420 + 2);
                  v345[3] = *(unsigned char *)(v344 + v420 + 3);
                  v345[4] = *(unsigned char *)(v344 + v420 + 4);
                  unint64_t v346 = (v343 + v420 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v347 = (v344 + v420 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)unint64_t v346 = *(_OWORD *)v347;
                  *(unsigned char *)(v346 + 16) = *(unsigned char *)(v347 + 16);
                  *(unsigned char *)(v346 + 17) = *(unsigned char *)(v347 + 17);
                  *(unsigned char *)(v346 + 18) = *(unsigned char *)(v347 + 18);
                  *(unsigned char *)(v346 + 19) = *(unsigned char *)(v347 + 19);
                  unint64_t v348 = (v346 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v349 = (v347 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v348 = *(void *)v349;
                  *(unsigned char *)(v348 + 8) = *(unsigned char *)(v349 + 8);
                  *(unsigned char *)(v348 + 9) = *(unsigned char *)(v349 + 9);
                  *(unsigned char *)(v348 + 10) = *(unsigned char *)(v349 + 10);
                  *(unsigned char *)(v348 + 11) = *(unsigned char *)(v349 + 11);
                  *(unsigned char *)(v348 + 12) = *(unsigned char *)(v349 + 12);
                  unint64_t v350 = (void *)((v347 + 47) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v351 = (void *)((v346 + 47) & 0xFFFFFFFFFFFFFFF8);
                  void *v351 = *v350;
                  unint64_t v352 = ((unint64_t)v351 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v353 = ((unint64_t)v350 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v352 = *(void *)v353;
                  *(unsigned char *)(v352 + 8) = *(unsigned char *)(v353 + 8);
                  *(unsigned char *)(v352 + 9) = *(unsigned char *)(v353 + 9);
                  long long v354 = (void *)((v422 + v352) & v55);
                  unint64_t v355 = (const void *)((v422 + v353) & v55);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v147 + 48))(v355, 1, v429))
                  {
                    memcpy(v354, v355, v438);
                  }
                  else
                  {
                    v342((unint64_t)v354, (unint64_t)v355, v429);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v147 + 56))(v354, 0, 1, v429);
                  }
                  unint64_t v329 = v435;
                  uint64_t v328 = v436;
                  size_t v330 = v420;
                  int v145 = (const void *)((unint64_t)&a2[v451] & v467);
                  uint64_t v144 = (void *)((unint64_t)&a1[v451] & v467);
                  unint64_t v356 = (void *)(((unint64_t)v354 + v423) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v357 = (void *)(((unint64_t)v355 + v423) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v356 = *v357;
                  unint64_t v358 = ((unint64_t)v356 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v359 = ((unint64_t)v357 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v360 = *(void *)v359;
                  *(unsigned char *)(v358 + 8) = *(unsigned char *)(v359 + 8);
                  *(void *)unint64_t v358 = v360;
                  unsigned int v361 = (void *)(((unint64_t)v356 + 31) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v362 = (void *)(((unint64_t)v357 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *unsigned int v361 = *v362;
                  long long v363 = (_OWORD *)(((unint64_t)v361 + 15) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v364 = (_OWORD *)(((unint64_t)v362 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *long long v363 = *v364;
                  unint64_t v365 = ((unint64_t)v363 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v366 = ((unint64_t)v364 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v367 = *(void *)v366;
                  *(unsigned char *)(v365 + 8) = *(unsigned char *)(v366 + 8);
                  *(void *)unint64_t v365 = v367;
                  *(unsigned char *)(v365 + 9) = *(unsigned char *)(v366 + 9);
                  unint64_t v368 = (v365 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v369 = (v366 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  LODWORD(v360) = *(_DWORD *)v369;
                  *(unsigned char *)(v368 + 4) = *(unsigned char *)(v369 + 4);
                  *(_DWORD *)unint64_t v368 = v360;
                  *(_OWORD *)((v365 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v366 + 25) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v370 = v424 + v338;
                  long long v371 = *(_OWORD *)(v424 + v339 + 112);
                  long long v373 = *(_OWORD *)(v424 + v339 + 64);
                  long long v372 = *(_OWORD *)(v424 + v339 + 80);
                  *(_OWORD *)(v370 + 96) = *(_OWORD *)(v424 + v339 + 96);
                  *(_OWORD *)(v370 + 112) = v371;
                  *(_OWORD *)(v370 + 64) = v373;
                  *(_OWORD *)(v370 + 80) = v372;
                  long long v374 = *(_OWORD *)(v424 + v339 + 176);
                  long long v376 = *(_OWORD *)(v424 + v339 + 128);
                  long long v375 = *(_OWORD *)(v424 + v339 + 144);
                  *(_OWORD *)(v370 + 160) = *(_OWORD *)(v424 + v339 + 160);
                  *(_OWORD *)(v370 + 176) = v374;
                  *(_OWORD *)(v370 + 128) = v376;
                  *(_OWORD *)(v370 + 144) = v375;
                  long long v378 = *(_OWORD *)(v424 + v339 + 208);
                  long long v377 = *(_OWORD *)(v424 + v339 + 224);
                  long long v379 = *(_OWORD *)(v424 + v339 + 192);
                  *(void *)(v370 + 240) = *(void *)(v424 + v339 + 240);
                  *(_OWORD *)(v370 + 208) = v378;
                  *(_OWORD *)(v370 + 224) = v377;
                  *(_OWORD *)(v370 + 192) = v379;
                  long long v380 = *(_OWORD *)(v424 + v339);
                  long long v381 = *(_OWORD *)(v424 + v339 + 16);
                  long long v382 = *(_OWORD *)(v424 + v339 + 48);
                  *(_OWORD *)(v370 + 32) = *(_OWORD *)(v424 + v339 + 32);
                  *(_OWORD *)(v370 + 48) = v382;
                  *(_OWORD *)unint64_t v370 = v380;
                  *(_OWORD *)(v370 + 16) = v381;
                  uint64_t v383 = (_OWORD *)((v424 + v338 + 255) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v384 = (long long *)((v424 + v339 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v385 = *v384;
                  *(_OWORD *)((char *)v383 + 9) = *(long long *)((char *)v384 + 9);
                  _OWORD *v383 = v385;
                  unint64_t v386 = (v424 + v338 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v387 = (v424 + v339 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v388 = *(_OWORD *)v387;
                  *(unsigned char *)(v386 + 16) = *(unsigned char *)(v387 + 16);
                  *(_OWORD *)unint64_t v386 = v388;
                  uint64_t v389 = (void *)((v424 + v338 + 311) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v390 = (void *)((v424 + v339 + 311) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v389 = *v390;
                  *(_OWORD *)(((unint64_t)v389 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v390
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  if (v416) {
                    goto LABEL_295;
                  }
                  goto LABEL_289;
                }
                unint64_t v155 = ((unint64_t)v145 + v454) & v469;
                unint64_t v156 = (v455 + v155) & v476;
                uint64_t v147 = v444;
                if (v437 == v452)
                {
                  if (v414 == v437)
                  {
                    int v146 = (*(uint64_t (**)(unint64_t))(v440 + 48))((v455 + v155) & v476);
                    goto LABEL_287;
                  }
                  long long v176 = (unint64_t *)((v439 + v156) & 0xFFFFFFFFFFFFFFF8);
                  if (v408 > 0x7FFFFFFE)
                  {
                    int v146 = (*(uint64_t (**)(unint64_t))(v431 + 48))(((unint64_t)v176 + v430) & v459);
                    goto LABEL_287;
                  }
                  unint64_t v177 = *v176;
                }
                else
                {
                  unint64_t v165 = v445 + v156;
                  if ((v413 & 0x80000000) == 0)
                  {
                    unint64_t v166 = *(void *)(v165 + 8);
                    if (v166 >= 0xFFFFFFFF) {
                      LODWORD(v166) = -1;
                    }
                    int v146 = v166 + 1;
                    goto LABEL_287;
                  }
                  uint64_t v180 = (v434 + ((v433 + v165) & v461)) & v55;
                  if (v416 > 0x7FFFFFFD)
                  {
                    int v146 = (*(uint64_t (**)(uint64_t))(v444 + 48))(v180);
                    goto LABEL_287;
                  }
                  unint64_t v177 = *(void *)(((v412 + ((v428 + v180) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
                }
                if (v177 >= 0xFFFFFFFF) {
                  LODWORD(v177) = -1;
                }
                if ((v177 + 1) >= 2) {
                  goto LABEL_288;
                }
                goto LABEL_291;
              case 4u:
                (*(void (**)(unsigned __int8 *))(v131 + 32))(a1);
                char v148 = 4;
                goto LABEL_296;
              case 5u:
                (*(void (**)(unsigned __int8 *))(v131 + 32))(a1);
                char v148 = 5;
                goto LABEL_296;
              case 6u:
                (*(void (**)(unsigned __int8 *))(v131 + 32))(a1);
                unint64_t v149 = (void *)((unint64_t)&a1[v418] & v410);
                unint64_t v150 = (const void *)((unint64_t)&a2[v418] & v410);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v150, 1, v471))
                {
                  memcpy(v149, v150, v407);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v149, v150, v471);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v149, 0, 1, v471);
                }
                char v148 = 6;
                goto LABEL_296;
              case 7u:
                (*(void (**)(unsigned __int8 *))(v131 + 32))(a1);
                char v148 = 7;
                goto LABEL_296;
              default:
                size_t v133 = *(void (**)(unsigned __int8 *))(v131 + 32);
                v133(a1);
                unint64_t v134 = (void *)((unint64_t)&a1[v451] & v467);
                unint64_t v135 = (const void *)((unint64_t)&a2[v451] & v467);
                if (v453 == v452)
                {
                  int v136 = (*(uint64_t (**)(unint64_t))(v131 + 48))((unint64_t)&a2[v451] & v467);
                  uint64_t v137 = v444;
LABEL_252:
                  if (v136)
                  {
LABEL_253:
                    memcpy(v134, v135, v450);
                    unint64_t v182 = v435;
                    uint64_t v181 = v436;
LABEL_254:
                    size_t v183 = v438;
LABEL_260:
                    char v148 = 0;
                    unint64_t v244 = ((((v181
                             + ((((((((((v182 + v183 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    unint64_t v245 = (void *)(((unint64_t)v134 + v244) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v246 = (void *)(((unint64_t)v135 + v244) & 0xFFFFFFFFFFFFFFF8);
                    void *v245 = *v246;
                    *(void *)(((unint64_t)v245 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8);
                    goto LABEL_296;
                  }
                  unint64_t v151 = ((unint64_t)v135 + v454) & v469;
                  unint64_t v152 = (v455 + v151) & v476;
LABEL_256:
                  ((void (*)(void *, const void *, uint64_t))v133)(v134, v135, AssociatedTypeWitness);
                  ((void (*)(unint64_t, unint64_t, uint64_t))v133)(((unint64_t)v134 + v454) & v469, v151, AssociatedTypeWitness);
                  unint64_t v184 = (v455 + (((unint64_t)v134 + v454) & v469)) & v476;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v440 + 32))(v184, v152, v441);
                  long long v185 = (void *)((v439 + v184) & 0xFFFFFFFFFFFFFFF8);
                  long long v186 = (void *)((v439 + v152) & 0xFFFFFFFFFFFFFFF8);
                  *long long v185 = *v186;
                  unint64_t v187 = ((unint64_t)v185 + v430) & v459;
                  unint64_t v188 = ((unint64_t)v186 + v430) & v459;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v431 + 32))(v187, v188, v432);
                  unint64_t v189 = (void *)((v421 + v187) & 0xFFFFFFFFFFFFFFF8);
                  long long v190 = (void *)((v421 + v188) & 0xFFFFFFFFFFFFFFF8);
                  void *v189 = *v190;
                  *(_OWORD *)(((unint64_t)v189 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v190
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *(_OWORD *)(v445 + v184) = *(_OWORD *)(v445 + v152);
                  unint64_t v191 = (v433 + v445 + v184) & v461;
                  unint64_t v192 = (v433 + v445 + v152) & v461;
                  *(unsigned char *)unint64_t v191 = *(unsigned char *)v192;
                  uint64_t v193 = v191 | 4;
                  int v194 = *(_DWORD *)(v192 | 4);
                  *(unsigned char *)(v193 + 4) = *(unsigned char *)((v192 | 4) + 4);
                  *(_DWORD *)uint64_t v193 = v194;
                  *(_WORD *)(v191 + 10) = *(_WORD *)(v192 + 0xA);
                  long long v195 = *(void (**)(unint64_t, unint64_t, uint64_t))(v137 + 32);
                  v195((v434 + v191) & v55, (v434 + v192) & v55, v429);
                  unint64_t v196 = (v428 + ((v434 + v191) & v55)) & v55;
                  unint64_t v197 = (v428 + ((v434 + v192) & v55)) & v55;
                  v195(v196, v197, v429);
                  uint64_t v198 = (unsigned char *)(v196 + v420);
                  *uint64_t v198 = *(unsigned char *)(v197 + v420);
                  v198[1] = *(unsigned char *)(v197 + v420 + 1);
                  v198[2] = *(unsigned char *)(v197 + v420 + 2);
                  v198[3] = *(unsigned char *)(v197 + v420 + 3);
                  v198[4] = *(unsigned char *)(v197 + v420 + 4);
                  unint64_t v199 = (v196 + v420 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v200 = (v197 + v420 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)unint64_t v199 = *(_OWORD *)v200;
                  *(unsigned char *)(v199 + 16) = *(unsigned char *)(v200 + 16);
                  *(unsigned char *)(v199 + 17) = *(unsigned char *)(v200 + 17);
                  *(unsigned char *)(v199 + 18) = *(unsigned char *)(v200 + 18);
                  *(unsigned char *)(v199 + 19) = *(unsigned char *)(v200 + 19);
                  unint64_t v201 = (v199 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v202 = (v200 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v201 = *(void *)v202;
                  *(unsigned char *)(v201 + 8) = *(unsigned char *)(v202 + 8);
                  *(unsigned char *)(v201 + 9) = *(unsigned char *)(v202 + 9);
                  *(unsigned char *)(v201 + 10) = *(unsigned char *)(v202 + 10);
                  *(unsigned char *)(v201 + 11) = *(unsigned char *)(v202 + 11);
                  *(unsigned char *)(v201 + 12) = *(unsigned char *)(v202 + 12);
                  size_t v203 = (void *)((v200 + 47) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v204 = (void *)((v199 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v204 = *v203;
                  unint64_t v205 = ((unint64_t)v204 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v206 = ((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v205 = *(void *)v206;
                  *(unsigned char *)(v205 + 8) = *(unsigned char *)(v206 + 8);
                  *(unsigned char *)(v205 + 9) = *(unsigned char *)(v206 + 9);
                  unint64_t v207 = (void *)((v422 + v205) & v55);
                  unint64_t v208 = (const void *)((v422 + v206) & v55);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48))(v208, 1, v429))
                  {
                    memcpy(v207, v208, v438);
                  }
                  else
                  {
                    v195((unint64_t)v207, (unint64_t)v208, v429);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v207, 0, 1, v429);
                  }
                  unint64_t v182 = v435;
                  uint64_t v181 = v436;
                  size_t v183 = v420;
                  unint64_t v135 = (const void *)((unint64_t)&a2[v451] & v467);
                  unint64_t v134 = (void *)((unint64_t)&a1[v451] & v467);
                  unint64_t v209 = (void *)(((unint64_t)v207 + v423) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v210 = (void *)(((unint64_t)v208 + v423) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v209 = *v210;
                  unint64_t v211 = ((unint64_t)v209 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v212 = ((unint64_t)v210 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v213 = *(void *)v212;
                  *(unsigned char *)(v211 + 8) = *(unsigned char *)(v212 + 8);
                  *(void *)unint64_t v211 = v213;
                  uint64_t v214 = (void *)(((unint64_t)v209 + 31) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v215 = (void *)(((unint64_t)v210 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v214 = *v215;
                  unint64_t v216 = (_OWORD *)(((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v217 = (_OWORD *)(((unint64_t)v215 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v216 = *v217;
                  unint64_t v218 = ((unint64_t)v216 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v219 = ((unint64_t)v217 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v220 = *(void *)v219;
                  *(unsigned char *)(v218 + 8) = *(unsigned char *)(v219 + 8);
                  *(void *)unint64_t v218 = v220;
                  *(unsigned char *)(v218 + 9) = *(unsigned char *)(v219 + 9);
                  unint64_t v221 = (v218 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v222 = (v219 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  LODWORD(v213) = *(_DWORD *)v222;
                  *(unsigned char *)(v221 + 4) = *(unsigned char *)(v222 + 4);
                  *(_DWORD *)unint64_t v221 = v213;
                  *(_OWORD *)((v218 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v219 + 25) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v223 = v424 + v191;
                  long long v224 = *(_OWORD *)(v424 + v192 + 112);
                  long long v226 = *(_OWORD *)(v424 + v192 + 64);
                  long long v225 = *(_OWORD *)(v424 + v192 + 80);
                  *(_OWORD *)(v223 + 96) = *(_OWORD *)(v424 + v192 + 96);
                  *(_OWORD *)(v223 + 112) = v224;
                  *(_OWORD *)(v223 + 64) = v226;
                  *(_OWORD *)(v223 + 80) = v225;
                  long long v227 = *(_OWORD *)(v424 + v192 + 176);
                  long long v229 = *(_OWORD *)(v424 + v192 + 128);
                  long long v228 = *(_OWORD *)(v424 + v192 + 144);
                  *(_OWORD *)(v223 + 160) = *(_OWORD *)(v424 + v192 + 160);
                  *(_OWORD *)(v223 + 176) = v227;
                  *(_OWORD *)(v223 + 128) = v229;
                  *(_OWORD *)(v223 + 144) = v228;
                  long long v231 = *(_OWORD *)(v424 + v192 + 208);
                  long long v230 = *(_OWORD *)(v424 + v192 + 224);
                  long long v232 = *(_OWORD *)(v424 + v192 + 192);
                  *(void *)(v223 + 240) = *(void *)(v424 + v192 + 240);
                  *(_OWORD *)(v223 + 208) = v231;
                  *(_OWORD *)(v223 + 224) = v230;
                  *(_OWORD *)(v223 + 192) = v232;
                  long long v233 = *(_OWORD *)(v424 + v192);
                  long long v234 = *(_OWORD *)(v424 + v192 + 16);
                  long long v235 = *(_OWORD *)(v424 + v192 + 48);
                  *(_OWORD *)(v223 + 32) = *(_OWORD *)(v424 + v192 + 32);
                  *(_OWORD *)(v223 + 48) = v235;
                  *(_OWORD *)unint64_t v223 = v233;
                  *(_OWORD *)(v223 + 16) = v234;
                  unint64_t v236 = (_OWORD *)((v424 + v191 + 255) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v237 = (long long *)((v424 + v192 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v238 = *v237;
                  *(_OWORD *)((char *)v236 + 9) = *(long long *)((char *)v237 + 9);
                  _OWORD *v236 = v238;
                  unint64_t v239 = (v424 + v191 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v240 = (v424 + v192 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v241 = *(_OWORD *)v240;
                  *(unsigned char *)(v239 + 16) = *(unsigned char *)(v240 + 16);
                  *(_OWORD *)unint64_t v239 = v241;
                  long long v242 = (void *)((v424 + v191 + 311) & 0xFFFFFFFFFFFFFFF8);
                  long long v243 = (void *)((v424 + v192 + 311) & 0xFFFFFFFFFFFFFFF8);
                  void *v242 = *v243;
                  *(_OWORD *)(((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v243
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  if (v416) {
                    goto LABEL_260;
                  }
                  goto LABEL_254;
                }
                unint64_t v151 = ((unint64_t)v135 + v454) & v469;
                unint64_t v152 = (v455 + v151) & v476;
                uint64_t v137 = v444;
                if (v437 == v452)
                {
                  if (v414 == v437)
                  {
                    int v136 = (*(uint64_t (**)(unint64_t))(v440 + 48))((v455 + v151) & v476);
                    goto LABEL_252;
                  }
                  uint64_t v172 = (unint64_t *)((v439 + v152) & 0xFFFFFFFFFFFFFFF8);
                  if (v408 > 0x7FFFFFFE)
                  {
                    int v136 = (*(uint64_t (**)(unint64_t))(v431 + 48))(((unint64_t)v172 + v430) & v459);
                    goto LABEL_252;
                  }
                  unint64_t v173 = *v172;
                }
                else
                {
                  unint64_t v161 = v445 + v152;
                  if ((v413 & 0x80000000) == 0)
                  {
                    unint64_t v162 = *(void *)(v161 + 8);
                    if (v162 >= 0xFFFFFFFF) {
                      LODWORD(v162) = -1;
                    }
                    int v136 = v162 + 1;
                    goto LABEL_252;
                  }
                  uint64_t v178 = (v434 + ((v433 + v161) & v461)) & v55;
                  if (v416 > 0x7FFFFFFD)
                  {
                    int v136 = (*(uint64_t (**)(uint64_t))(v444 + 48))(v178);
                    goto LABEL_252;
                  }
                  unint64_t v173 = *(void *)(((v412 + ((v428 + v178) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
                }
                if (v173 >= 0xFFFFFFFF) {
                  LODWORD(v173) = -1;
                }
                if ((v173 + 1) >= 2) {
                  goto LABEL_253;
                }
                goto LABEL_256;
            }
          }
          unint64_t v99 = *(uint64_t (**)(unint64_t))(v444 + 48);
        }
        int v66 = v99(v98);
        unint64_t v65 = (unint64_t)&a1[v451] & v467;
        goto LABEL_130;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v473 + 8))(a1, v49);
        unint64_t v67 = (unint64_t)&a1[v419] & v462;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v449 + 48))(v67, 1, v447)) {
          (*(void (**)(unint64_t, uint64_t))(v449 + 8))(v67, v447);
        }
        unint64_t v68 = (v37 + v67) & v464;
        if (v466 == v35)
        {
          if ((*(unsigned int (**)(unint64_t))(v442 + 48))(v68)) {
            goto LABEL_95;
          }
        }
        else
        {
          unsigned int v78 = (uint64_t *)((v446 + v68) & 0xFFFFFFFFFFFFFFF8);
          if (v417 <= 0x7FFFFFFE)
          {
            uint64_t v79 = *v78;
            if ((unint64_t)*v78 >= 0xFFFFFFFF) {
              LODWORD(v79) = -1;
            }
            if ((v79 + 1) >= 2)
            {
LABEL_95:

              goto LABEL_174;
            }
LABEL_94:
            (*(void (**)(unint64_t, uint64_t))(v442 + 8))(v68, v443);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v426 + 8))(((unint64_t)v78 + v425) & v457, v427);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_95;
          }
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v426 + 48))(((unint64_t)v78 + v425) & v457, v409, v427))
          {
            goto LABEL_95;
          }
        }
        unsigned int v78 = (uint64_t *)((v446 + v68) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_94;
      case 3u:
        unint64_t v400 = v45;
        uint64_t v69 = v27 + v32;
        int v404 = v35;
        uint64_t v70 = *(void (**)(unsigned __int8 *, uint64_t))(v473 + 8);
        v70(a1, v49);
        unint64_t v71 = (unint64_t)&a1[v451] & v467;
        if (v453 == v452)
        {
          int v72 = (*(uint64_t (**)(unint64_t))(v473 + 48))((unint64_t)&a1[v451] & v467);
          unint64_t v71 = (unint64_t)&a1[v451] & v467;
          uint64_t v37 = v69;
LABEL_159:
          unint64_t v45 = v400;
          if (v72)
          {
LABEL_172:
            swift_bridgeObjectRelease();
            goto LABEL_173;
          }
          unint64_t v80 = (v454 + v71) & v469;
          unint64_t v81 = (v455 + v80) & v476;
LABEL_161:
          uint64_t v403 = v26;
          v70((unsigned __int8 *)v71, AssociatedTypeWitness);
          v70((unsigned __int8 *)v80, AssociatedTypeWitness);
          (*(void (**)(unint64_t, uint64_t))(v440 + 8))(v81, v441);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v431 + 8))((v430 + ((v439 + v81) & 0xFFFFFFFFFFFFFFF8)) & v459, v432);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v120 = (v433 + v445 + v81) & v461;
          unint64_t v121 = *(void (**)(unint64_t, uint64_t))(v444 + 8);
          v121((v434 + v120) & v55, v429);
          unint64_t v122 = (v428 + ((v434 + v120) & v55)) & v55;
          v121(v122, v429);
          swift_bridgeObjectRelease();
          unint64_t v123 = (v422
                + ((((((v412 + v122) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v55;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v444 + 48))(v123, 1, v429)) {
            v121(v123, v429);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v124 = (uint64_t *)((((((v423 + v123) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v125 = v124[1];
          if ((v125 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v124, v125);
          }
          swift_bridgeObjectRelease();
          unint64_t v126 = v424 + v120;
          LODWORD(v127) = -1;
          if (*(void *)(v424 + v120 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v127 = *(void *)(v424 + v120 + 16);
          }
          uint64_t v26 = v403;
          if ((int)v127 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v126 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v126 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v126 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          goto LABEL_172;
        }
        unint64_t v80 = (v454 + v71) & v469;
        unint64_t v81 = (v455 + v80) & v476;
        if (v437 == v452)
        {
          if (v414 == v437)
          {
            int v72 = (*(uint64_t (**)(unint64_t))(v440 + 48))((v455 + v80) & v476);
            unint64_t v71 = (unint64_t)&a1[v451] & v467;
            uint64_t v37 = v69;
            goto LABEL_159;
          }
          unint64_t v92 = (unint64_t *)((v439 + v81) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v37 = v69;
          if (v408 <= 0x7FFFFFFE)
          {
            unint64_t v93 = *v92;
            goto LABEL_299;
          }
          unint64_t v94 = ((unint64_t)v92 + v430) & v459;
          unint64_t v95 = *(uint64_t (**)(unint64_t))(v431 + 48);
        }
        else
        {
          unint64_t v86 = v445 + v81;
          if ((v413 & 0x80000000) == 0)
          {
            unint64_t v87 = *(void *)(v86 + 8);
            if (v87 >= 0xFFFFFFFF) {
              LODWORD(v87) = -1;
            }
            int v72 = v87 + 1;
            uint64_t v37 = v69;
            goto LABEL_159;
          }
          unint64_t v94 = (v434 + ((v433 + v86) & v461)) & v55;
          uint64_t v37 = v69;
          if (v416 <= 0x7FFFFFFD)
          {
            unint64_t v93 = *(void *)(((v412 + ((v428 + v94) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_299:
            if (v93 >= 0xFFFFFFFF) {
              LODWORD(v93) = -1;
            }
            unint64_t v45 = v400;
            if ((v93 + 1) >= 2) {
              goto LABEL_172;
            }
            goto LABEL_161;
          }
          unint64_t v95 = *(uint64_t (**)(unint64_t))(v444 + 48);
        }
        int v72 = v95(v94);
        unint64_t v71 = (unint64_t)&a1[v451] & v467;
        goto LABEL_159;
      case 4u:
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v473 + 8))(a1, v49);
        goto LABEL_174;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v473 + 8))(a1, v49);
        unint64_t v73 = (unint64_t)&a1[v418] & v56;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v39 + 48))(v73, 1, v471)) {
          (*(void (**)(unint64_t, uint64_t))(v39 + 8))(v73, v471);
        }
        goto LABEL_174;
      default:
        unint64_t v398 = v45;
        uint64_t v57 = v27 + v32;
        int v404 = v35;
        uint64_t v58 = *(void (**)(unsigned __int8 *, uint64_t))(v473 + 8);
        v58(a1, v49);
        unint64_t v59 = (unint64_t)&a1[v451];
        unint64_t v60 = (unint64_t)&a1[v451] & v467;
        if (v453 == v452)
        {
          unint64_t v61 = v59 & v467;
          int v62 = (*(uint64_t (**)(unint64_t))(v473 + 48))(v59 & v467);
          unint64_t v60 = v61;
          uint64_t v37 = v57;
LABEL_114:
          unint64_t v45 = v398;
          if (v62) {
            goto LABEL_127;
          }
          unint64_t v74 = (v454 + v60) & v469;
          unint64_t v75 = (v455 + v74) & v476;
          goto LABEL_116;
        }
        unint64_t v74 = (v454 + v60) & v469;
        unint64_t v75 = (v455 + v74) & v476;
        if (v437 == v452)
        {
          if (v414 == v437)
          {
            int v62 = (*(uint64_t (**)(unint64_t))(v440 + 48))((v455 + v74) & v476);
            unint64_t v60 = (unint64_t)&a1[v451] & v467;
            uint64_t v37 = v57;
            goto LABEL_114;
          }
          size_t v88 = (unint64_t *)((v439 + v75) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v37 = v57;
          if (v408 <= 0x7FFFFFFE)
          {
            unint64_t v89 = *v88;
            goto LABEL_304;
          }
          unint64_t v96 = ((unint64_t)v88 + v430) & v459;
          unint64_t v97 = *(uint64_t (**)(unint64_t))(v431 + 48);
        }
        else
        {
          unint64_t v82 = v445 + v75;
          if ((v413 & 0x80000000) == 0)
          {
            unint64_t v83 = *(void *)(v82 + 8);
            if (v83 >= 0xFFFFFFFF) {
              LODWORD(v83) = -1;
            }
            int v62 = v83 + 1;
            uint64_t v37 = v57;
            goto LABEL_114;
          }
          unint64_t v96 = (v434 + ((v433 + v82) & v461)) & v55;
          uint64_t v37 = v57;
          if (v416 <= 0x7FFFFFFD)
          {
            unint64_t v89 = *(void *)(((v412 + ((v428 + v96) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_304:
            if (v89 >= 0xFFFFFFFF) {
              LODWORD(v89) = -1;
            }
            unint64_t v45 = v398;
            if ((v89 + 1) >= 2)
            {
LABEL_127:

LABEL_173:
              uint64_t v49 = AssociatedTypeWitness;
              int v35 = v404;
              goto LABEL_174;
            }
LABEL_116:
            uint64_t v401 = v26;
            unint64_t v396 = v60;
            v58((unsigned __int8 *)v60, AssociatedTypeWitness);
            v58((unsigned __int8 *)v74, AssociatedTypeWitness);
            (*(void (**)(unint64_t, uint64_t))(v440 + 8))(v75, v441);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v431 + 8))((v430 + ((v439 + v75) & 0xFFFFFFFFFFFFFFF8)) & v459, v432);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v100 = (v433 + v445 + v75) & v461;
            int v101 = *(void (**)(unint64_t, uint64_t))(v444 + 8);
            v101((v434 + v100) & v55, v429);
            unint64_t v102 = (v428 + ((v434 + v100) & v55)) & v55;
            v101(v102, v429);
            swift_bridgeObjectRelease();
            unint64_t v103 = (v422
                  + ((((((v412 + v102) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v55;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v444 + 48))(v103, 1, v429)) {
              v101(v103, v429);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v104 = (uint64_t *)((((((v423 + v103) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v105 = v104[1];
            if ((v105 & 0x3000000000000000) == 0) {
              sub_10001E9C0(*v104, v105);
            }
            swift_bridgeObjectRelease();
            unint64_t v106 = v424 + v100;
            LODWORD(v107) = -1;
            if (*(void *)(v424 + v100 + 16) < 0xFFFFFFFFuLL) {
              uint64_t v107 = *(void *)(v424 + v100 + 16);
            }
            uint64_t v26 = v401;
            if ((int)v107 - 1 < 0)
            {
              swift_errorRelease();
              swift_errorRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v106 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_1000CF144(*(void *)((((v106 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v106 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            unint64_t v60 = v396;
            goto LABEL_127;
          }
          unint64_t v97 = *(uint64_t (**)(unint64_t))(v444 + 48);
        }
        int v62 = v97(v96);
        unint64_t v60 = (unint64_t)&a1[v451] & v467;
        goto LABEL_114;
    }
  }
  return a1;
}

uint64_t sub_10068F518(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_10096B0E0() - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  int v47 = *(_DWORD *)(v12 + 84);
  unint64_t v49 = ((v11 | v6 | v13) + v5) & ~(v11 | v6 | v13);
  unint64_t v48 = (((((v5 + v6) & ~v6) + v5 + v11) & ~v11)
       + v13
       + ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (v13 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = *(void *)(v12 + 64);
  unint64_t v45 = (v13
       + ((((((v14
             + ((v14 + v13 + ((v13 + 12) & ~(unint64_t)v13)) & ~(unint64_t)v13)
             + 12) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~(unint64_t)v13;
  uint64_t v15 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  int v17 = *(_DWORD *)(v15 + 84);
  uint64_t v46 = *(void *)(v15 + 64);
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v19 = *(_DWORD *)(v18 + 80);
  uint64_t v20 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = 7;
  if (!v47) {
    uint64_t v22 = 8;
  }
  uint64_t v23 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = v19 & 0xF8 | v23 | 7;
  unint64_t v25 = ((((*(void *)(v20 + 64) + ((v23 + ((*(void *)(v18 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v26 = v49
      + ((((v48
          + ((((((((((v22 + v14 + v45) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = v26 + v16;
  unint64_t v28 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (v27 + 16) & ~v16;
  if (v17) {
    uint64_t v30 = v46;
  }
  else {
    uint64_t v30 = v46 + 1;
  }
  uint64_t v31 = v30 + v24;
  unint64_t v32 = ((((((v31 + v29) & ~v24) + v25 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v32 <= ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v32 = ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v33 = v25 + ((v31 + ((v5 + v16) & ~v16)) & ~v24) + 16;
  if (v33 <= v32) {
    unint64_t v33 = v32;
  }
  if (((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v33) {
    unint64_t v33 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v5 > v33) {
    unint64_t v33 = v5;
  }
  if (*(_DWORD *)(v21 + 84)) {
    uint64_t v34 = *(void *)(*(void *)(v3 - 8) + 64);
  }
  else {
    uint64_t v34 = *(void *)(*(void *)(v3 - 8) + 64) + 1;
  }
  unint64_t v35 = v34 + ((v5 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  if (v35 > v33) {
    unint64_t v33 = v35;
  }
  if (v5 <= v33) {
    unint64_t v36 = v33;
  }
  else {
    unint64_t v36 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_41;
  }
  unint64_t v37 = v36 + 1;
  char v38 = 8 * (v36 + 1);
  if ((v36 + 1) <= 3)
  {
    unsigned int v41 = ((a2 + ~(-1 << v38) - 248) >> v38) + 1;
    if (HIWORD(v41))
    {
      int v39 = *(_DWORD *)((char *)a1 + v37);
      if (!v39) {
        goto LABEL_41;
      }
      goto LABEL_33;
    }
    if (v41 > 0xFF)
    {
      int v39 = *(unsigned __int16 *)((char *)a1 + v37);
      if (!*(unsigned __int16 *)((char *)a1 + v37)) {
        goto LABEL_41;
      }
      goto LABEL_33;
    }
    if (v41 < 2)
    {
LABEL_41:
      unsigned int v43 = *((unsigned __int8 *)a1 + v36);
      if (v43 >= 8) {
        return (v43 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v39 = *((unsigned __int8 *)a1 + v37);
  if (!*((unsigned char *)a1 + v37)) {
    goto LABEL_41;
  }
LABEL_33:
  int v42 = (v39 - 1) << v38;
  if (v37 > 3) {
    int v42 = 0;
  }
  if (v37)
  {
    if (v37 > 3) {
      LODWORD(v37) = 4;
    }
    switch((int)v37)
    {
      case 2:
        LODWORD(v37) = *a1;
        break;
      case 3:
        LODWORD(v37) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v37) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v37) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v37 | v42) + 249;
}

void sub_10068FB84(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v9 | v11 | 7;
  uint64_t v13 = *(void *)(sub_10096B0E0() - 8);
  int v14 = *(_DWORD *)(v13 + 80);
  int v46 = *(_DWORD *)(v13 + 84);
  unint64_t v48 = ((v12 | v7 | v14) + v6) & ~(v12 | v7 | v14);
  unint64_t v47 = (((((v6 + v7) & ~v7) + v6 + v12) & ~v12)
       + v14
       + ((((*(void *)(v10 + 64) + ((v11 + ((*(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (v14 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = *(void *)(v13 + 64);
  unint64_t v44 = (v14
       + ((((((v15
             + ((v15 + v14 + ((v14 + 12) & ~(unint64_t)v14)) & ~(unint64_t)v14)
             + 12) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~(unint64_t)v14;
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  int v18 = *(_DWORD *)(v16 + 84);
  uint64_t v45 = *(void *)(v16 + 64);
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  uint64_t v21 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = 7;
  if (!v46) {
    uint64_t v23 = 8;
  }
  uint64_t v24 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v25 = v20 & 0xF8 | v24 | 7;
  unint64_t v26 = ((((*(void *)(v21 + 64) + ((v24 + ((*(void *)(v19 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v27 = v48
      + ((((v47
          + ((((((((((v23 + v15 + v44) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = v27 + v17;
  unint64_t v29 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = (v28 + 16) & ~v17;
  if (v18) {
    uint64_t v31 = v45;
  }
  else {
    uint64_t v31 = v45 + 1;
  }
  uint64_t v32 = v31 + v25;
  unint64_t v33 = ((((((v32 + v30) & ~v25) + v26 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v33 <= ((v29 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v33 = ((v29 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v34 = v26 + ((v32 + ((v6 + v17) & ~v17)) & ~v25) + 16;
  if (v34 <= v33) {
    unint64_t v34 = v33;
  }
  if (((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v34) {
    unint64_t v34 = ((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v6 > v34) {
    unint64_t v34 = v6;
  }
  if (*(_DWORD *)(v22 + 84)) {
    uint64_t v35 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  else {
    uint64_t v35 = *(void *)(*(void *)(v4 - 8) + 64) + 1;
  }
  unint64_t v36 = v35 + ((v6 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  if (v36 > v34) {
    unint64_t v34 = v36;
  }
  if (v6 > v34) {
    unint64_t v34 = v6;
  }
  size_t v37 = v34 + 1;
  if (a3 < 0xF9)
  {
    int v39 = 0;
    char v38 = a1;
  }
  else
  {
    char v38 = a1;
    if (v37 <= 3)
    {
      unsigned int v42 = ((a3 + ~(-1 << (8 * v37)) - 248) >> (8 * v37)) + 1;
      if (HIWORD(v42))
      {
        int v39 = 4;
      }
      else if (v42 >= 0x100)
      {
        int v39 = 2;
      }
      else
      {
        int v39 = v42 > 1;
      }
    }
    else
    {
      int v39 = 1;
    }
  }
  if (a2 > 0xF8)
  {
    unsigned int v40 = a2 - 249;
    if (v37 < 4)
    {
      int v41 = (v40 >> (8 * v37)) + 1;
      if (v34 != -1)
      {
        int v43 = v40 & ~(-1 << (8 * v37));
        bzero(v38, v37);
        if (v37 == 3)
        {
          *(_WORD *)char v38 = v43;
          v38[2] = BYTE2(v43);
        }
        else if (v37 == 2)
        {
          *(_WORD *)char v38 = v43;
        }
        else
        {
          *char v38 = v43;
        }
      }
    }
    else
    {
      bzero(v38, v34 + 1);
      *(_DWORD *)char v38 = v40;
      int v41 = 1;
    }
    switch(v39)
    {
      case 1:
        v38[v37] = v41;
        break;
      case 2:
        *(_WORD *)&v38[v37] = v41;
        break;
      case 3:
LABEL_52:
        __break(1u);
        JUMPOUT(0x100690260);
      case 4:
        *(_DWORD *)&v38[v37] = v41;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v39)
    {
      case 1:
        v38[v37] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_41;
      case 2:
        *(_WORD *)&v38[v37] = 0;
        goto LABEL_40;
      case 3:
        goto LABEL_52;
      case 4:
        *(_DWORD *)&v38[v37] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_41;
      default:
LABEL_40:
        if (a2) {
LABEL_41:
        }
          v38[v34] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100690288(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v11 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  unint64_t v13 = ((v10 | v5 | v12) + v4) & ~(v10 | v5 | v12);
  unint64_t v14 = (((((v4 + v5) & ~v5) + v4 + v10) & ~v10)
       + v12
       + ((((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (*(_DWORD *)(v11 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = *(void *)(v11 + 64);
  unint64_t v16 = (v12
       + ((((((v15 + ((v15 + v12 + ((v12 + 12) & ~v12)) & ~v12) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v12;
  uint64_t v17 = 7;
  if (!*(_DWORD *)(v11 + 84)) {
    uint64_t v17 = 8;
  }
  unint64_t v18 = v13
      + ((((v14
          + ((((((((((v17 + v15 + v16) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = (v18 + v20 + 16) & ~v20;
  uint64_t v22 = *(void *)(v19 + 64);
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = v22 + 1;
  }
  uint64_t v24 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v26 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = v25 | v27 | 7;
  unint64_t v29 = ((((*(void *)(v26 + 64) + ((v27 + ((*(void *)(v24 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v27) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v30 = ((((((v23 + v28 + v40) & ~v28) + v29 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v31 = v29 + ((v23 + v28 + ((v4 + v20) & ~v20)) & ~v28) + 16;
  uint64_t v32 = *(void *)(v2 - 8);
  unint64_t v33 = (v4 + *(unsigned __int8 *)(v32 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v34 = *(void *)(v32 + 64);
  if (!*(_DWORD *)(v32 + 84)) {
    ++v34;
  }
  unint64_t v35 = v34 + v33;
  unint64_t v36 = ((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 > v36) {
    unint64_t v36 = v4;
  }
  if (v30 > v31) {
    unint64_t v31 = v30;
  }
  if (((v21 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v35) {
    unint64_t v35 = ((v21 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v36 > v31) {
    unint64_t v31 = v36;
  }
  if (v31 > v35) {
    unint64_t v35 = v31;
  }
  uint64_t result = a1[v35];
  if (result >= 8)
  {
    if (v35 <= 3) {
      uint64_t v38 = v35;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *a1;
        if (v35 < 4) {
          goto LABEL_28;
        }
        goto LABEL_30;
      case 2:
        int v39 = *(unsigned __int16 *)a1;
        if (v35 >= 4) {
          goto LABEL_30;
        }
        goto LABEL_28;
      case 3:
        int v39 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v35 < 4) {
          goto LABEL_28;
        }
        goto LABEL_30;
      case 4:
        int v39 = *(_DWORD *)a1;
        if (v35 < 4) {
LABEL_28:
        }
          uint64_t result = (v39 | ((result - 8) << (8 * v35))) + 8;
        else {
LABEL_30:
        }
          uint64_t result = (v39 + 8);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_10069085C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  unint64_t v14 = ((v11 | v6 | v13) + v5) & ~(v11 | v6 | v13);
  unint64_t v15 = (((((v5 + v6) & ~v6) + v5 + v11) & ~v11)
       + v13
       + ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (*(_DWORD *)(v12 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = *(void *)(v12 + 64);
  unint64_t v17 = (v13
       + ((((((v16 + ((v16 + v13 + ((v13 + 12) & ~v13)) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v13;
  uint64_t v18 = 7;
  if (!*(_DWORD *)(v12 + 84)) {
    uint64_t v18 = 8;
  }
  unint64_t v19 = v14
      + ((((v15
          + ((((((((((v18 + v16 + v17) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  unint64_t v22 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)(v20 + 64);
  if (!*(_DWORD *)(v20 + 84)) {
    ++v23;
  }
  uint64_t v42 = v23;
  uint64_t v24 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v26 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = v25 | v27 | 7;
  unint64_t v29 = ((((*(void *)(v26 + 64) + ((v27 + ((*(void *)(v24 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v27) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v30 = ((((((v42 + v28 + ((v19 + v21 + 16) & ~v21)) & ~v28) + v29 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v30 <= ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v30 = ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v31 = v29 + ((v42 + v28 + ((v5 + v21) & ~v21)) & ~v28) + 16;
  if (v31 <= v30) {
    unint64_t v31 = v30;
  }
  unint64_t v32 = ((v22 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v32 <= v31) {
    unint64_t v32 = v31;
  }
  uint64_t v33 = *(void *)(v3 - 8);
  if (v5 > v32) {
    unint64_t v32 = v5;
  }
  unint64_t v34 = (v5 + *(unsigned __int8 *)(v33 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  int v35 = *(_DWORD *)(v33 + 84);
  uint64_t v36 = *(void *)(v33 + 64);
  if (!v35) {
    ++v36;
  }
  size_t v37 = v36 + v34;
  if (v37 <= v32) {
    size_t v37 = v32;
  }
  if (v5 <= v37) {
    size_t v38 = v37;
  }
  else {
    size_t v38 = v5;
  }
  if (a2 > 7)
  {
    if (v38 <= 3) {
      char v39 = ((a2 - 8) >> (8 * v38)) + 8;
    }
    else {
      char v39 = 8;
    }
    if (v38 <= 3) {
      int v40 = (a2 - 8) & ~(-1 << (8 * v38));
    }
    else {
      int v40 = a2 - 8;
    }
    a1[v38] = v39;
    if (v38 >= 4) {
      int v41 = 4;
    }
    else {
      int v41 = v38;
    }
    bzero(a1, v38);
    switch(v41)
    {
      case 2:
        *(_WORD *)a1 = v40;
        break;
      case 3:
        *(_WORD *)a1 = v40;
        a1[2] = BYTE2(v40);
        break;
      case 4:
        *(_DWORD *)a1 = v40;
        break;
      default:
        *a1 = v40;
        break;
    }
  }
  else
  {
    a1[v38] = a2;
  }
}

uint64_t sub_100690E4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100690E68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __chkstk_darwin(a1);
  unint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = a1[2];
    uint64_t v7 = a1[3];
    uint64_t v11 = a1 + 4;
    uint64_t v9 = a1[4];
    uint64_t v10 = v11[1];
    uint64_t v19 = v7;
    uint64_t v20 = v8;
    uint64_t v21 = v10;
    uint64_t v22 = v9;
    uint64_t v12 = type metadata accessor for DirectionalTestingOperation();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a2, v5, v12);
    uint64_t v19 = v7;
    uint64_t v20 = v8;
    uint64_t v21 = v10;
    uint64_t v22 = v9;
  }
  else
  {
    uint64_t v13 = a1[2];
    uint64_t v14 = a1[3];
    uint64_t v16 = a1[4];
    uint64_t v15 = a1[5];
    uint64_t v19 = v13;
    uint64_t v20 = v14;
    uint64_t v21 = v16;
    uint64_t v22 = v15;
    uint64_t v17 = type metadata accessor for DirectionalTestingOperation();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a2, v5, v17);
    uint64_t v19 = v14;
    uint64_t v20 = v13;
    uint64_t v21 = v15;
    uint64_t v22 = v16;
  }
  type metadata accessor for TestingOperation();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100691024@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = sub_100274A4C([v4 itemIdentifier]);

    swift_beginAccess();
    uint64_t v6 = *(void **)(v5 + 32);
    unsigned __int8 v7 = *(unsigned char *)(v5 + 40);
    int v8 = *(unsigned __int8 *)(v5 + 41);
    sub_10009C394(v6, v7, *(unsigned char *)(v5 + 41));
    swift_release();
    if (v8 == 1)
    {
      *(void *)a2 = v6;
      *(void *)(a2 + 8) = 0;
      sub_10002B7CC((uint64_t *)&unk_100AD65B0);
    }
    else
    {
      uint64_t v14 = a2 + *(int *)(sub_10002B7CC((uint64_t *)&unk_100AD0D70) + 48);
      *(void *)a2 = v6;
      *(unsigned char *)(a2 + 8) = v7;
      uint64_t v15 = type metadata accessor for VFSItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      sub_10002B7CC((uint64_t *)&unk_100AD0A90);
    }
    goto LABEL_33;
  }
  self;
  uint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
  {
    uint64_t v10 = sub_100274A4C([v9 itemIdentifier]);

    swift_beginAccess();
    uint64_t v11 = *(void **)(v10 + 32);
    unsigned __int8 v12 = *(unsigned char *)(v10 + 40);
    int v13 = *(unsigned __int8 *)(v10 + 41);
    sub_10009C394(v11, v12, *(unsigned char *)(v10 + 41));
    swift_release();
    if (v13 == 1) {
      goto LABEL_14;
    }
    goto LABEL_19;
  }
  self;
  uint64_t v16 = (void *)swift_dynamicCastObjCClass();
  if (v16)
  {
    uint64_t v17 = sub_100274A4C([v16 itemIdentifier]);

    swift_beginAccess();
    uint64_t v11 = *(void **)(v17 + 32);
    unsigned __int8 v12 = *(unsigned char *)(v17 + 40);
    int v18 = *(unsigned __int8 *)(v17 + 41);
    sub_10009C394(v11, v12, *(unsigned char *)(v17 + 41));
    swift_release();
    if (v18 == 1) {
      goto LABEL_14;
    }
    goto LABEL_19;
  }
  self;
  uint64_t v19 = (void *)swift_dynamicCastObjCClass();
  if (v19)
  {
    uint64_t v20 = sub_100274A4C([v19 itemIdentifier]);

    swift_beginAccess();
    uint64_t v11 = *(void **)(v20 + 32);
    unsigned __int8 v12 = *(unsigned char *)(v20 + 40);
    int v21 = *(unsigned __int8 *)(v20 + 41);
    sub_10009C394(v11, v12, *(unsigned char *)(v20 + 41));
    swift_release();
    if (v21 == 1)
    {
LABEL_14:
      *(void *)a2 = v11;
      sub_10002B7CC((uint64_t *)&unk_100AD65B0);
      goto LABEL_33;
    }
LABEL_19:
    *(void *)a2 = v11;
    *(unsigned char *)(a2 + 8) = v12;
    sub_10002B7CC((uint64_t *)&unk_100AD0A90);
    goto LABEL_33;
  }
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    uint64_t v23 = (void *)v22;
    id v24 = a1;
    id v25 = objc_msgSend(objc_msgSend(v23, "renamedItem"), "filename");
    swift_unknownObjectRelease();
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    unint64_t v95 = sub_10001F9C0();
    uint64_t v26 = sub_10096C910();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v23, "snapshotVersion", &type metadata for String, v95, v95, v95);
    id v30 = objc_msgSend(objc_msgSend(v23, "renamedItem"), "itemIdentifier");
    swift_unknownObjectRelease();
    uint64_t v31 = sub_100274A4C(v30);

    swift_beginAccess();
    unint64_t v32 = *(void **)(v31 + 32);
    unsigned __int8 v33 = *(unsigned char *)(v31 + 40);
    int v34 = *(unsigned __int8 *)(v31 + 41);
    sub_10009C394(v32, v33, *(unsigned char *)(v31 + 41));
    swift_release();
    if (v34 == 1)
    {
      int v35 = (int *)sub_10002B7CC(&qword_100AD0D88);
      uint64_t v36 = a2 + v35[12];
      size_t v37 = (uint64_t *)(a2 + v35[16]);
      uint64_t v38 = v35[20];
      *(void *)a2 = v32;
      uint64_t v39 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v36, 1, 1, v39);
      *size_t v37 = v26;
      v37[1] = v28;
      *(void *)(a2 + v38) = v29;
      sub_10002B7CC((uint64_t *)&unk_100AD65B0);
    }
    else
    {
      int v54 = (int *)sub_10002B7CC(&qword_100AD6F10);
      uint64_t v55 = a2 + v54[12];
      uint64_t v56 = (uint64_t *)(a2 + v54[16]);
      uint64_t v57 = v54[20];
      *(void *)a2 = v32;
      *(unsigned char *)(a2 + 8) = v33;
      uint64_t v58 = sub_10002B7CC(&qword_100ACCB10);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v55, 1, 1, v58);
      *uint64_t v56 = v26;
      v56[1] = v28;
      *(void *)(a2 + v57) = v29;
      sub_10002B7CC((uint64_t *)&unk_100AD0A90);
    }
  }
  else
  {
    self;
    uint64_t v40 = swift_dynamicCastObjCClass();
    if (v40)
    {
      int v41 = (void *)v40;
      id v42 = a1;
      id v43 = [v41 snapshotVersion];
      id v44 = objc_msgSend(objc_msgSend(v41, "sourceItem"), "itemIdentifier");
      swift_unknownObjectRelease();
      uint64_t v45 = sub_100274A4C(v44);

      swift_beginAccess();
      int v46 = *(void **)(v45 + 32);
      unsigned __int8 v47 = *(unsigned char *)(v45 + 40);
      int v48 = *(unsigned __int8 *)(v45 + 41);
      sub_10009C394(v46, v47, *(unsigned char *)(v45 + 41));
      swift_release();
      if (v48 == 1)
      {
        unint64_t v49 = (int *)sub_10002B7CC(&qword_100AD68E0);
        uint64_t v50 = a2 + v49[12];
        uint64_t v51 = v49[16];
        uint64_t v52 = v49[20];
        *(void *)a2 = v46;
        uint64_t v53 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v50, 1, 1, v53);
        *(void *)(a2 + v51) = v43;
        *(void *)(a2 + v52) = 0;
        sub_10002B7CC((uint64_t *)&unk_100AD65B0);
      }
      else
      {
        unint64_t v77 = (int *)sub_10002B7CC((uint64_t *)&unk_100AD6BE0);
        uint64_t v78 = a2 + v77[12];
        uint64_t v79 = v77[16];
        uint64_t v80 = v77[20];
        *(void *)a2 = v46;
        *(unsigned char *)(a2 + 8) = v47;
        uint64_t v81 = sub_10002B7CC(&qword_100ACCB10);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v78, 1, 1, v81);
        *(void *)(a2 + v79) = v43;
        *(void *)(a2 + v80) = 0;
        sub_10002B7CC((uint64_t *)&unk_100AD0A90);
      }
    }
    else
    {
      self;
      uint64_t v59 = swift_dynamicCastObjCClass();
      if (v59)
      {
        unint64_t v60 = (void *)v59;
        id v61 = a1;
        id v62 = [v60 snapshotVersion];
        id v63 = [v60 rawFields];
        id v64 = objc_msgSend(objc_msgSend(v60, "sourceItem"), "itemIdentifier");
        swift_unknownObjectRelease();
        uint64_t v65 = sub_100274A4C(v64);

        swift_beginAccess();
        int v66 = *(void **)(v65 + 32);
        unsigned __int8 v67 = *(unsigned char *)(v65 + 40);
        int v68 = *(unsigned __int8 *)(v65 + 41);
        sub_10009C394(v66, v67, *(unsigned char *)(v65 + 41));
        swift_release();
        if (v68 == 1)
        {
          uint64_t v69 = (int *)sub_10002B7CC(&qword_100AD0D80);
          uint64_t v70 = a2 + v69[12];
          uint64_t v71 = a2 + v69[16];
          int v72 = (_OWORD *)(a2 + v69[20]);
          uint64_t v73 = v69[24];
          uint64_t v74 = v69[28];
          uint64_t v75 = v69[32];
          *(void *)a2 = v66;
          uint64_t v76 = sub_10002B7CC((uint64_t *)&unk_100AD0CC0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v70, 1, 1, v76);
          *(void *)uint64_t v71 = 0;
          *(unsigned char *)(v71 + 8) = -1;
          v72[4] = 0u;
          v72[5] = 0u;
          v72[2] = 0u;
          v72[3] = 0u;
          *int v72 = 0u;
          v72[1] = 0u;
          *(void *)(a2 + v73) = v63;
          *(void *)(a2 + v74) = v62;
          *(void *)(a2 + v75) = 0;
          sub_10002B7CC((uint64_t *)&unk_100AD65B0);
        }
        else
        {
          unint64_t v87 = (int *)sub_10002B7CC((uint64_t *)&unk_100AD0D60);
          uint64_t v88 = a2 + v87[12];
          uint64_t v89 = v87[16];
          uint64_t v90 = a2 + v87[20];
          uint64_t v91 = v87[24];
          uint64_t v92 = v87[28];
          uint64_t v96 = v87[32];
          *(void *)a2 = v66;
          *(unsigned char *)(a2 + 8) = v67;
          uint64_t v93 = sub_10002B7CC(&qword_100ACCB10);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v88, 1, 1, v93);
          *(void *)(a2 + v89) = 0;
          *(void *)uint64_t v90 = 0;
          *(void *)(v90 + 8) = 0;
          *(void *)(v90 + 16) = 1;
          *(_OWORD *)(v90 + 24) = 0u;
          *(_OWORD *)(v90 + 40) = 0u;
          *(void *)(v90 + 56) = 0;
          *(void *)(a2 + v91) = v63;
          *(void *)(a2 + v92) = v62;
          *(void *)(a2 + v96) = 0;
          sub_10002B7CC((uint64_t *)&unk_100AD0A90);
        }
      }
      else
      {
        self;
        unint64_t v82 = (void *)swift_dynamicCastObjCClass();
        if (!v82) {
          sub_1007161E8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/interfaces/job/TestingOperation.swift", 115, 2, 295, a1);
        }
        uint64_t v83 = sub_100274A4C([v82 sourceItemIdentifier]);

        swift_beginAccess();
        unint64_t v84 = *(void **)(v83 + 32);
        unsigned __int8 v85 = *(unsigned char *)(v83 + 40);
        int v86 = *(unsigned __int8 *)(v83 + 41);
        sub_10009C394(v84, v85, *(unsigned char *)(v83 + 41));
        swift_release();
        *(void *)a2 = v84;
        if (v86 == 1)
        {
          *(void *)(a2 + 8) = 0;
          *(unsigned char *)(a2 + 16) = -1;
          *(_OWORD *)(a2 + 24) = 0u;
          *(_OWORD *)(a2 + 40) = 0u;
          *(_OWORD *)(a2 + 56) = 0u;
          *(_OWORD *)(a2 + 72) = 0u;
          *(_OWORD *)(a2 + 88) = 0u;
          *(_OWORD *)(a2 + 104) = 0u;
          *(unsigned char *)(a2 + 120) = 2;
          *(void *)(a2 + 128) = 0;
          sub_10002B7CC((uint64_t *)&unk_100AD65B0);
        }
        else
        {
          *(unsigned char *)(a2 + 8) = v85;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          *(void *)(a2 + 32) = 0;
          *(void *)(a2 + 40) = 1;
          *(_OWORD *)(a2 + 48) = 0u;
          *(_OWORD *)(a2 + 64) = 0u;
          *(void *)(a2 + 80) = 0;
          *(unsigned char *)(a2 + 88) = 2;
          *(void *)(a2 + 96) = 0;
          sub_10002B7CC((uint64_t *)&unk_100AD0A90);
        }
      }
    }
  }
LABEL_33:
  swift_storeEnumTagMultiPayload();
  sub_10002B7CC(&qword_100AD65C0);
  return swift_storeEnumTagMultiPayload();
}

char *sub_100691C0C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v155 = a1[5];
  uint64_t v154 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v160 = sub_10096C890();
  uint64_t v158 = *(void *)(v160 - 8);
  uint64_t v5 = __chkstk_darwin(v160);
  char v148 = (ValueMetadata *)((char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v152 = (char *)&v146 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v149 = (char *)&v146 - v10;
  __chkstk_darwin(v9);
  unint64_t v153 = (uint64_t *)((char *)&v146 - v11);
  uint64_t v12 = a1[2];
  uint64_t v13 = a1[4];
  uint64_t v163 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_10096C890();
  uint64_t v161 = *(void *)(v14 - 8);
  unint64_t v162 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  unint64_t v151 = (char *)&v146 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v150 = (char *)&v146 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v157 = (char *)&v146 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v146 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v146 - v27;
  uint64_t v164 = v13;
  uint64_t v165 = v12;
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v166 = *(void *)(v29 - 8);
  uint64_t v167 = v29;
  uint64_t v30 = __chkstk_darwin(v29);
  unint64_t v32 = (char *)&v146 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30);
  int v35 = (char *)&v146 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v146 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  unint64_t v156 = (char *)&v146 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  id v43 = (char *)&v146 - v42;
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v146 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v46 + 16))(v45, v2, a1);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v146 = (uint64_t)&v146;
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v146 - 80, " item destinationItemID baseVersion fields version domainVersion ");
      uint64_t v59 = v167;
      unint64_t v60 = v162;
      unint64_t v168 = (char *)v167;
      unint64_t v169 = v162;
      unint64_t v170 = (ValueMetadata *)v160;
      uint64_t v61 = swift_getAssociatedTypeWitness();
      uint64_t v62 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v64 = swift_getAssociatedConformanceWitness();
      unint64_t v152 = (char *)v61;
      uint64_t v175 = v61;
      uint64_t v176 = v62;
      unint64_t v151 = (char *)v62;
      char v148 = (ValueMetadata *)AssociatedConformanceWitness;
      uint64_t v177 = AssociatedConformanceWitness;
      uint64_t v178 = v64;
      uint64_t v147 = (void *)v64;
      type metadata accessor for FileItemVersion();
      unint64_t v171 = (void *)sub_10096C890();
      uint64_t v172 = &type metadata for Fields;
      unint64_t v173 = &type metadata for UInt;
      uint64_t v174 = sub_100033BE8((uint64_t *)&unk_100AD6860);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      int v66 = &v45[TupleTypeMetadata[12]];
      unsigned __int8 v67 = &v45[TupleTypeMetadata[16]];
      uint64_t v68 = *(void *)&v45[TupleTypeMetadata[24]];
      uint64_t v146 = *(void *)&v45[TupleTypeMetadata[28]];

      (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v156, v45, v59);
      (*(void (**)(char *, char *, unint64_t))(v161 + 32))(v157, v66, v60);
      uint64_t v69 = v158;
      uint64_t v70 = v153;
      uint64_t v71 = v160;
      (*(void (**)(uint64_t *, char *, uint64_t))(v158 + 32))(v153, v67, v160);
      unint64_t v168 = 0;
      unint64_t v169 = 0xE000000000000000;
      sub_10096CBD0(29);
      v183._countAndFlagsBits = 0x20657461647075;
      v183._object = (void *)0xE700000000000000;
      sub_10096BDC0(v183);
      v184._countAndFlagsBits = sub_1006096B0(v68);
      sub_10096BDC0(v184);
      swift_bridgeObjectRelease();
      v185._countAndFlagsBits = 543584032;
      v185._object = (void *)0xE400000000000000;
      sub_10096BDC0(v185);
      int v72 = v149;
      (*(void (**)(char *, uint64_t *, uint64_t))(v69 + 16))(v149, v70, v71);
      uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v72, 1, AssociatedTypeWitness) == 1)
      {
        uint64_t v74 = v72;
        uint64_t v75 = (void *)0xE500000000000000;
        uint64_t v73 = v69;
        uint64_t v76 = 0x3E6C696E3CLL;
      }
      else
      {
        swift_getAssociatedConformanceWitness();
        uint64_t v119 = sub_10096D220();
        uint64_t v71 = AssociatedTypeWitness;
        uint64_t v76 = v119;
        uint64_t v74 = v72;
        uint64_t v75 = v120;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v71);
      v193._countAndFlagsBits = v76;
      v193._object = v75;
      sub_10096BDC0(v193);
      swift_bridgeObjectRelease();
      v194._countAndFlagsBits = 0x206874697720;
      v194._object = (void *)0xE600000000000000;
      sub_10096BDC0(v194);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      v195._countAndFlagsBits = 64;
      v195._object = (void *)0xE100000000000000;
      sub_10096BDC0(v195);
      uint64_t v175 = v146;
      v196._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v196);
      swift_bridgeObjectRelease();
      v197._countAndFlagsBits = 32;
      v197._object = (void *)0xE100000000000000;
      sub_10096BDC0(v197);
      uint64_t v122 = v161;
      unint64_t v121 = v162;
      unint64_t v123 = v150;
      (*(void (**)(char *, char *, unint64_t))(v161 + 16))(v150, v157, v162);
      unint64_t v124 = (int *)v163;
      uint64_t v125 = *(void *)(v163 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v123, 1, v163) == 1)
      {
        unint64_t v126 = (void *)0xE500000000000000;
        uint64_t v125 = v122;
        uint64_t v127 = v121;
        uint64_t v128 = 0x3E6C696E3CLL;
      }
      else
      {
        uint64_t v142 = SnapshotItem.description.getter(v124);
        uint64_t v127 = v163;
        uint64_t v128 = v142;
        unint64_t v126 = v143;
      }
      (*(void (**)(char *, uint64_t))(v125 + 8))(v123, v127);
      uint64_t v144 = &v45[TupleTypeMetadata[20]];
      v203._countAndFlagsBits = v128;
      v203._object = v126;
      sub_10096BDC0(v203);
      swift_bridgeObjectRelease();
      unint64_t v110 = v168;
      (*(void (**)(uint64_t *, uint64_t))(v158 + 8))(v153, v160);
      (*(void (**)(char *, unint64_t))(v122 + 8))(v157, v121);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v156, v167);
      unint64_t v168 = v152;
      unint64_t v169 = (unint64_t)v151;
      unint64_t v170 = v148;
      unint64_t v171 = v147;
      type metadata accessor for FileItemVersion();
      uint64_t v141 = sub_10096C890();
      size_t v117 = *(void (**)(char *, uint64_t))(*(void *)(v141 - 8) + 8);
      unsigned int v118 = v144;
      goto LABEL_33;
    case 2:
      unint64_t v156 = (char *)&v146;
      __chkstk_darwin(EnumCaseMultiPayload);
      unint64_t v153 = &v146 - 8;
      strcpy((char *)&v146 - 64, " destinationItemID baseVersion recursive domainVersion ");
      uint64_t v77 = v167;
      uint64_t v78 = v160;
      unint64_t v168 = (char *)v167;
      unint64_t v169 = v160;
      uint64_t v79 = swift_getAssociatedTypeWitness();
      uint64_t v80 = swift_getAssociatedTypeWitness();
      uint64_t v81 = swift_getAssociatedConformanceWitness();
      uint64_t v82 = swift_getAssociatedConformanceWitness();
      unint64_t v162 = v80;
      uint64_t v163 = v79;
      uint64_t v175 = v79;
      uint64_t v176 = v80;
      uint64_t v161 = v81;
      uint64_t v177 = v81;
      uint64_t v178 = v82;
      unint64_t v157 = (char *)v82;
      type metadata accessor for FileItemVersion();
      unint64_t v170 = (ValueMetadata *)sub_10096C890();
      unint64_t v171 = (void *)sub_100033BE8((uint64_t *)&unk_100AD7510);
      uint64_t v172 = (ValueMetadata *)sub_100033BE8((uint64_t *)&unk_100AD6860);
      uint64_t v83 = (int *)swift_getTupleTypeMetadata();
      unint64_t v84 = &v45[v83[12]];
      char v85 = v45[v83[20]];

      (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v38, v45, v77);
      uint64_t v86 = v158;
      (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v152, v84, v78);
      unint64_t v87 = (void *)0xE000000000000000;
      unint64_t v168 = 0;
      unint64_t v169 = 0xE000000000000000;
      sub_10096CBD0(20);
      if (v85) {
        v88._countAndFlagsBits = 0x7669737275636572;
      }
      else {
        v88._countAndFlagsBits = 0;
      }
      if (v85) {
        unint64_t v87 = (void *)0xEC00000020796C65;
      }
      v88._object = v87;
      sub_10096BDC0(v88);
      swift_bridgeObjectRelease();
      v186._countAndFlagsBits = 0x206574656C656420;
      v186._object = (void *)0xE800000000000000;
      sub_10096BDC0(v186);
      uint64_t v89 = v148;
      (*(void (**)(void))(v86 + 16))();
      uint64_t v90 = *(void *)(AssociatedTypeWitness - 8);
      if ((*(unsigned int (**)(ValueMetadata *, uint64_t, uint64_t))(v90 + 48))(v89, 1, AssociatedTypeWitness) == 1)
      {
        uint64_t v91 = 0x3E6C696E3CLL;
        uint64_t v92 = (void *)0xE500000000000000;
        uint64_t v90 = v86;
        uint64_t v93 = v78;
      }
      else
      {
        swift_getAssociatedConformanceWitness();
        uint64_t v129 = sub_10096D220();
        uint64_t v93 = AssociatedTypeWitness;
        uint64_t v91 = v129;
        uint64_t v92 = v130;
      }
      (*(void (**)(ValueMetadata *, uint64_t))(v90 + 8))(v89, v93);
      uint64_t v131 = &v45[v83[16]];
      v198._countAndFlagsBits = v91;
      v198._object = v92;
      sub_10096BDC0(v198);
      swift_bridgeObjectRelease();
      v199._countAndFlagsBits = 0x206D6F726620;
      v199._object = (void *)0xE600000000000000;
      sub_10096BDC0(v199);
      uint64_t v132 = v167;
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      unint64_t v110 = v168;
      (*(void (**)(char *, uint64_t))(v86 + 8))(v152, v78);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v38, v132);
      unint64_t v168 = (char *)v163;
      unint64_t v169 = v162;
      unint64_t v170 = (ValueMetadata *)v161;
      unint64_t v171 = v157;
      type metadata accessor for FileItemVersion();
      uint64_t v133 = sub_10096C890();
      (*(void (**)(char *, uint64_t))(*(void *)(v133 - 8) + 8))(v131, v133);
      return v110;
    case 3:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v146 - 32, " item newName version ");
      uint64_t v94 = v167;
      unint64_t v95 = v162;
      unint64_t v168 = (char *)v167;
      unint64_t v169 = v162;
      unint64_t v170 = &type metadata for Filename;
      unint64_t v171 = &type metadata for UInt;
      uint64_t v96 = (int *)swift_getTupleTypeMetadata();
      unint64_t v97 = &v45[v96[12]];
      uint64_t v160 = *(void *)&v45[v96[16]];
      uint64_t v98 = *(void *)&v45[v96[20]];
      (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v35, v45, v94);
      uint64_t v99 = v161;
      unint64_t v100 = v151;
      (*(void (**)(char *, char *, unint64_t))(v161 + 32))(v151, v97, v95);
      unint64_t v168 = 0;
      unint64_t v169 = 0xE000000000000000;
      sub_10096CBD0(21);
      v187._countAndFlagsBits = 0x2065636E756F62;
      v187._object = (void *)0xE700000000000000;
      sub_10096BDC0(v187);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      v188._countAndFlagsBits = 64;
      v188._object = (void *)0xE100000000000000;
      sub_10096BDC0(v188);
      uint64_t v175 = v98;
      v189._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v189);
      swift_bridgeObjectRelease();
      v190._countAndFlagsBits = 32;
      v190._object = (void *)0xE100000000000000;
      sub_10096BDC0(v190);
      (*(void (**)(char *, char *, unint64_t))(v99 + 16))(v17, v100, v95);
      int v101 = (int *)v163;
      uint64_t v102 = *(void *)(v163 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v17, 1, v163) == 1)
      {
        uint64_t v103 = 0x3E6C696E3CLL;
        uint64_t v104 = (void *)0xE500000000000000;
        uint64_t v102 = v99;
        uint64_t v105 = v95;
      }
      else
      {
        uint64_t v134 = SnapshotItem.description.getter(v101);
        uint64_t v105 = v163;
        uint64_t v103 = v134;
        uint64_t v104 = v135;
      }
      (*(void (**)(char *, uint64_t))(v102 + 8))(v17, v105);
      v200._countAndFlagsBits = v103;
      v200._object = v104;
      sub_10096BDC0(v200);
      swift_bridgeObjectRelease();
      v201._countAndFlagsBits = 544175136;
      v201._object = (void *)0xE400000000000000;
      sub_10096BDC0(v201);
      NSString v136 = sub_10096BC00();
      id v137 = objc_msgSend(v136, "fp_obfuscatedFilename");

      uint64_t v138 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      int v140 = v139;

      v202._countAndFlagsBits = v138;
      v202._object = v140;
      sub_10096BDC0(v202);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v110 = v168;
      (*(void (**)(char *, unint64_t))(v99 + 8))(v151, v95);
      size_t v117 = *(void (**)(char *, uint64_t))(v166 + 8);
      unsigned int v118 = v35;
      goto LABEL_30;
    case 4:
      uint64_t v106 = v166;
      uint64_t v107 = v167;
      (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v32, v45, v167);
      unint64_t v168 = 0;
      unint64_t v169 = 0xE000000000000000;
      sub_10096CBD0(19);
      unint64_t v108 = "fetch content of ";
      goto LABEL_18;
    case 5:
      uint64_t v106 = v166;
      uint64_t v107 = v167;
      (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v32, v45, v167);
      unint64_t v168 = 0;
      unint64_t v169 = 0xE000000000000000;
      sub_10096CBD0(19);
      unint64_t v108 = "list children of ";
LABEL_18:
      v109._object = (void *)((unint64_t)(v108 - 32) | 0x8000000000000000);
      v109._countAndFlagsBits = 0xD000000000000011;
      goto LABEL_19;
    case 6:
      uint64_t v111 = sub_10096C890();
      uint64_t v112 = v167;
      unint64_t v113 = &v45[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v114 = v166;
      (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v32, v45, v112);
      unint64_t v168 = 0;
      unint64_t v169 = 0xE000000000000000;
      v191._countAndFlagsBits = 0x20747365676E69;
      v191._object = (void *)0xE700000000000000;
      sub_10096BDC0(v191);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      unint64_t v110 = v168;
      (*(void (**)(char *, uint64_t))(v114 + 8))(v32, v112);
      (*(void (**)(char *, uint64_t))(*(void *)(v111 - 8) + 8))(v113, v111);
      return v110;
    case 7:
      uint64_t v106 = v166;
      uint64_t v107 = v167;
      (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v32, v45, v167);
      unint64_t v168 = 0;
      unint64_t v169 = 0xE000000000000000;
      sub_10096CBD0(20);
      v109._countAndFlagsBits = 0xD000000000000012;
      v109._object = (void *)0x80000001009A5BC0;
LABEL_19:
      sub_10096BDC0(v109);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      unint64_t v110 = v168;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v32, v107);
      break;
    default:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v146 - 48, " item version domainVersion ");
      uint64_t v48 = v167;
      unint64_t v49 = v162;
      unint64_t v168 = (char *)v167;
      unint64_t v169 = v162;
      unint64_t v170 = (ValueMetadata *)&type metadata for UInt;
      unint64_t v171 = (void *)sub_100033BE8((uint64_t *)&unk_100AD6860);
      uint64_t v50 = (int *)swift_getTupleTypeMetadata();
      uint64_t v51 = &v45[v50[12]];
      uint64_t v52 = *(void *)&v45[v50[16]];

      (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v43, v45, v48);
      uint64_t v53 = v161;
      (*(void (**)(char *, char *, unint64_t))(v161 + 32))(v28, v51, v49);
      unint64_t v168 = 0;
      unint64_t v169 = 0xE000000000000000;
      v179._countAndFlagsBits = 0x20657461657263;
      v179._object = (void *)0xE700000000000000;
      sub_10096BDC0(v179);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      v180._countAndFlagsBits = 64;
      v180._object = (void *)0xE100000000000000;
      sub_10096BDC0(v180);
      uint64_t v175 = v52;
      v181._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v181);
      swift_bridgeObjectRelease();
      v182._countAndFlagsBits = 32;
      v182._object = (void *)0xE100000000000000;
      sub_10096BDC0(v182);
      (*(void (**)(char *, char *, unint64_t))(v53 + 16))(v26, v28, v49);
      int v54 = (int *)v163;
      uint64_t v55 = *(void *)(v163 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v26, 1, v163) == 1)
      {
        uint64_t v56 = 0x3E6C696E3CLL;
        uint64_t v57 = (void *)0xE500000000000000;
        uint64_t v55 = v53;
        uint64_t v58 = v49;
      }
      else
      {
        uint64_t v115 = SnapshotItem.description.getter(v54);
        uint64_t v58 = v163;
        uint64_t v56 = v115;
        uint64_t v57 = v116;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v58);
      v192._countAndFlagsBits = v56;
      v192._object = v57;
      sub_10096BDC0(v192);
      swift_bridgeObjectRelease();
      unint64_t v110 = v168;
      (*(void (**)(char *, unint64_t))(v53 + 8))(v28, v49);
      size_t v117 = *(void (**)(char *, uint64_t))(v166 + 8);
      unsigned int v118 = v43;
LABEL_30:
      uint64_t v141 = v167;
LABEL_33:
      v117(v118, v141);
      break;
  }
  return v110;
}

uint64_t sub_1006933AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(char **)(a2 + 16);
  uint64_t v57 = *(void *)(a2 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v11 = (char *)&v48 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v13, v3, a2);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v53 = (char *)&v48;
      __chkstk_darwin(EnumCaseMultiPayload);
      uint64_t v52 = (char *)(&v48 - 10);
      strcpy((char *)&v48 - 80, " item destinationItemID baseVersion fields version domainVersion ");
      uint64_t v58 = AssociatedTypeWitness;
      uint64_t v55 = type metadata accessor for SnapshotItem();
      uint64_t v59 = sub_10096C890();
      uint64_t v56 = a1;
      int v54 = (char *)swift_getAssociatedTypeWitness();
      unint64_t v60 = (ValueMetadata *)sub_10096C890();
      uint64_t v21 = swift_getAssociatedTypeWitness();
      uint64_t v48 = v8;
      uint64_t v22 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v51 = v22;
      uint64_t v50 = swift_getAssociatedConformanceWitness();
      uint64_t v65 = v21;
      uint64_t v66 = v22;
      uint64_t v67 = AssociatedConformanceWitness;
      uint64_t v68 = v50;
      type metadata accessor for FileItemVersion();
      uint64_t v61 = (void *)sub_10096C890();
      uint64_t v62 = &type metadata for Fields;
      id v63 = &type metadata for UInt;
      uint64_t v64 = sub_100033BE8((uint64_t *)&unk_100AD6860);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v53 = &v13[TupleTypeMetadata[12]];
      uint64_t v52 = &v13[TupleTypeMetadata[16]];
      unint64_t v49 = &v13[TupleTypeMetadata[20]];
      uint64_t v25 = *(void *)&v13[TupleTypeMetadata[24]];
      Swift::UInt v26 = *(void *)&v13[TupleTypeMetadata[28]];

      uint64_t v27 = v48;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v11, v13, AssociatedTypeWitness);
      sub_10096D4C0(2uLL);
      swift_getAssociatedConformanceWitness();
      sub_10096BAD0();
      sub_10096D4C0(v25 & 0xFFFFFDFFFFFFBFFFLL);
      sub_10096D4C0(v26);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, AssociatedTypeWitness);
      uint64_t v58 = v21;
      uint64_t v59 = v51;
      unint64_t v60 = (ValueMetadata *)AssociatedConformanceWitness;
      uint64_t v61 = (void *)v50;
      type metadata accessor for FileItemVersion();
      uint64_t v28 = sub_10096C890();
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v49, v28);
      uint64_t v29 = sub_10096C890();
      (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v52, v29);
      uint64_t v30 = sub_10096C890();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v53, v30);
    case 2:
      int v54 = (char *)&v48;
      __chkstk_darwin(EnumCaseMultiPayload);
      uint64_t v53 = (char *)(&v48 - 8);
      strcpy((char *)&v48 - 64, " destinationItemID baseVersion recursive domainVersion ");
      uint64_t v58 = AssociatedTypeWitness;
      uint64_t v55 = swift_getAssociatedTypeWitness();
      uint64_t v59 = sub_10096C890();
      uint64_t v31 = swift_getAssociatedTypeWitness();
      uint64_t v56 = a1;
      uint64_t v32 = v31;
      uint64_t v33 = swift_getAssociatedTypeWitness();
      uint64_t v52 = v6;
      uint64_t v34 = v33;
      uint64_t v35 = v32;
      uint64_t v36 = swift_getAssociatedConformanceWitness();
      uint64_t v37 = swift_getAssociatedConformanceWitness();
      uint64_t v65 = v35;
      uint64_t v66 = v34;
      uint64_t v67 = v36;
      uint64_t v68 = v37;
      type metadata accessor for FileItemVersion();
      unint64_t v60 = (ValueMetadata *)sub_10096C890();
      uint64_t v61 = (void *)sub_100033BE8((uint64_t *)&unk_100AD7510);
      uint64_t v62 = (ValueMetadata *)sub_100033BE8((uint64_t *)&unk_100AD6860);
      uint64_t v38 = (int *)swift_getTupleTypeMetadata();
      uint64_t v39 = &v13[v38[12]];
      int v54 = &v13[v38[16]];

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      sub_10096D4C0(3uLL);
      swift_getAssociatedConformanceWitness();
      sub_10096BAD0();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      uint64_t v58 = v35;
      uint64_t v59 = v34;
      unint64_t v60 = (ValueMetadata *)v36;
      uint64_t v61 = (void *)v37;
      type metadata accessor for FileItemVersion();
      uint64_t v40 = sub_10096C890();
      (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v54, v40);
      uint64_t v41 = sub_10096C890();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v39, v41);
    case 3:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v48 - 32, " item newName version ");
      uint64_t v58 = AssociatedTypeWitness;
      uint64_t v56 = type metadata accessor for SnapshotItem();
      uint64_t v59 = sub_10096C890();
      unint64_t v60 = &type metadata for Filename;
      uint64_t v61 = &type metadata for UInt;
      uint64_t v42 = swift_getTupleTypeMetadata();
      uint64_t v55 = (uint64_t)&v13[*(int *)(v42 + 48)];
      Swift::UInt v43 = *(void *)&v13[*(int *)(v42 + 80)];
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      sub_10096D4C0(4uLL);
      swift_getAssociatedConformanceWitness();
      sub_10096BAD0();
      swift_bridgeObjectRetain();
      sub_10096BD50();
      swift_bridgeObjectRelease_n();
      sub_10096D4C0(v43);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      uint64_t v44 = sub_10096C890();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v55, v44);
    case 4:
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      Swift::UInt v45 = 5;
      goto LABEL_11;
    case 5:
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      Swift::UInt v45 = 6;
      goto LABEL_11;
    case 6:
      uint64_t v46 = sub_10096C890();
      unsigned __int8 v47 = &v13[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      sub_10096D4C0(8uLL);
      swift_getAssociatedConformanceWitness();
      sub_10096BAD0();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8))(v47, v46);
    case 7:
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      Swift::UInt v45 = 7;
LABEL_11:
      sub_10096D4C0(v45);
      swift_getAssociatedConformanceWitness();
      sub_10096BAD0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      break;
    default:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v48 - 48, " item version domainVersion ");
      uint64_t v58 = AssociatedTypeWitness;
      type metadata accessor for SnapshotItem();
      uint64_t v59 = sub_10096C890();
      unint64_t v60 = (ValueMetadata *)&type metadata for UInt;
      uint64_t v61 = (void *)sub_100033BE8((uint64_t *)&unk_100AD6860);
      uint64_t v16 = (int *)swift_getTupleTypeMetadata();
      uint64_t v17 = &v13[v16[12]];
      Swift::UInt v18 = *(void *)&v13[v16[16]];

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      sub_10096D4C0(1uLL);
      swift_getAssociatedConformanceWitness();
      sub_10096BAD0();
      sub_10096D4C0(v18);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      uint64_t v19 = sub_10096C890();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
      break;
  }
  return result;
}

uint64_t sub_1006940F4(char *a1, char *a2, uint64_t a3, uint64_t a4, ValueMetadata *a5, void *a6)
{
  unint64_t v219 = a2;
  unint64_t v221 = a1;
  long long v224 = (char *)a3;
  uint64_t v225 = a4;
  unint64_t v211 = (int *)a4;
  long long v226 = a5;
  long long v227 = a6;
  unint64_t v210 = (unint64_t)a6;
  uint64_t v8 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v207 = (ValueMetadata *)((char *)&v200 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v205 = (unint64_t)&v200 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v206 = (char *)&v200 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::UInt v18 = (char *)&v200 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v200 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  unint64_t v208 = (char *)&v200 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v209 = (char *)&v200 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v200 - v26;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  unint64_t v215 = *(char **)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v30 = (char *)&v200 - v29;
  unint64_t v217 = (unint64_t)a5;
  uint64_t v218 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v220 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v204 = (char *)&v200 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  Swift::String v203 = (char *)&v200 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  Swift::String v201 = (char *)&v200 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  Swift::String v202 = (char *)&v200 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v200 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v44 = (char *)&v200 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v213 = (char *)&v200 - v46;
  __chkstk_darwin(v45);
  unint64_t v212 = (char *)&v200 - v47;
  unint64_t v216 = (char *)TupleTypeMetadata2;
  uint64_t v48 = &v30[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v214 = v9;
  unint64_t v49 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v49(v30, v221, v8);
  unint64_t v221 = v48;
  v49(v48, v219, v8);
  uint64_t v223 = v8;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v57 = v209;
      unint64_t v219 = v30;
      uint64_t v58 = ((uint64_t (*)(char *, char *, uint64_t))v49)(v209, v30, v223);
      uint64_t v213 = (char *)&v200;
      __chkstk_darwin(v58);
      strcpy((char *)&v200 - 80, " item destinationItemID baseVersion fields version domainVersion ");
      uint64_t v51 = AssociatedTypeWitness;
      long long v224 = (char *)AssociatedTypeWitness;
      unint64_t v208 = (char *)type metadata accessor for SnapshotItem();
      uint64_t v225 = sub_10096C890();
      unint64_t v212 = (char *)swift_getAssociatedTypeWitness();
      long long v226 = (ValueMetadata *)sub_10096C890();
      uint64_t v59 = swift_getAssociatedTypeWitness();
      uint64_t v60 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v62 = swift_getAssociatedConformanceWitness();
      uint64_t v231 = v59;
      uint64_t v232 = v60;
      uint64_t v233 = AssociatedConformanceWitness;
      uint64_t v234 = v62;
      type metadata accessor for FileItemVersion();
      long long v227 = (void *)sub_10096C890();
      long long v228 = &type metadata for Fields;
      long long v229 = &type metadata for UInt;
      uint64_t v230 = sub_100033BE8((uint64_t *)&unk_100AD6860);
      uint64_t v27 = v57;
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v213 = &v57[TupleTypeMetadata[12]];
      uint64_t v64 = &v57[TupleTypeMetadata[16]];
      uint64_t v65 = &v27[TupleTypeMetadata[20]];
      unint64_t v210 = *(void *)&v27[TupleTypeMetadata[24]];
      unint64_t v211 = *(int **)&v27[TupleTypeMetadata[28]];

      uint64_t v66 = v221;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        long long v224 = (char *)v59;
        uint64_t v225 = v60;
        long long v226 = (ValueMetadata *)AssociatedConformanceWitness;
        long long v227 = (void *)v62;
        type metadata accessor for FileItemVersion();
        uint64_t v143 = sub_10096C890();
        (*(void (**)(char *, uint64_t))(*(void *)(v143 - 8) + 8))(v65, v143);
        uint64_t v144 = sub_10096C890();
        (*(void (**)(char *, uint64_t))(*(void *)(v144 - 8) + 8))(v64, v144);
        uint64_t v145 = sub_10096C890();
        (*(void (**)(char *, uint64_t))(*(void *)(v145 - 8) + 8))(v213, v145);
        goto LABEL_38;
      }
      unint64_t v206 = (char *)v59;
      unint64_t v207 = (ValueMetadata *)AssociatedConformanceWitness;
      unint64_t v215 = v65;
      unint64_t v216 = v64;
      unint64_t v205 = *(void *)&v66[TupleTypeMetadata[24]];
      uint64_t v67 = *(int **)&v66[TupleTypeMetadata[28]];

      uint64_t v68 = v220;
      uint64_t v69 = *(void (**)(void))(v220 + 32);
      uint64_t v70 = v202;
      ((void (*)(char *, char *, uint64_t))v69)(v202, v27, AssociatedTypeWitness);
      uint64_t v71 = v70;
      int v72 = v201;
      v69();
      uint64_t v73 = AssociatedTypeWitness;
      swift_getAssociatedConformanceWitness();
      if (sub_10096BBE0())
      {
        unint64_t v74 = v205 ^ v210;
        uint64_t v75 = *(void (**)(char *, uint64_t))(v68 + 8);
        v75(v72, v73);
        v75(v71, v73);
        char v77 = (v74 & 0xFFFFFDFFFFFFBFFFLL) == 0 && v211 == v67;
      }
      else
      {
        uint64_t v164 = *(void (**)(char *, uint64_t))(v68 + 8);
        v164(v72, v73);
        v164(v71, v73);
        char v77 = 0;
      }
      uint64_t AssociatedTypeWitness = (uint64_t)&v221[TupleTypeMetadata[12]];
      uint64_t v165 = &v221[TupleTypeMetadata[16]];
      uint64_t v166 = &v221[TupleTypeMetadata[20]];
      long long v224 = v206;
      uint64_t v225 = v60;
      long long v226 = v207;
      long long v227 = (void *)v62;
      type metadata accessor for FileItemVersion();
      uint64_t v167 = sub_10096C890();
      unint64_t v168 = *(void (**)(char *, uint64_t))(*(void *)(v167 - 8) + 8);
      v168(v166, v167);
      uint64_t v169 = sub_10096C890();
      unint64_t v170 = *(void (**)(char *, uint64_t))(*(void *)(v169 - 8) + 8);
      v170(v165, v169);
      uint64_t v171 = sub_10096C890();
      uint64_t v172 = *(void (**)(uint64_t, uint64_t))(*(void *)(v171 - 8) + 8);
      v172(AssociatedTypeWitness, v171);
      v168(v215, v167);
      v170(v216, v169);
      v172((uint64_t)v213, v171);
      goto LABEL_47;
    case 2u:
      uint64_t v78 = v208;
      unint64_t v219 = v30;
      uint64_t v79 = ((uint64_t (*)(char *, char *, uint64_t))v49)(v208, v30, v223);
      __chkstk_darwin(v79);
      strcpy((char *)&v200 - 64, " destinationItemID baseVersion recursive domainVersion ");
      long long v224 = (char *)AssociatedTypeWitness;
      unint64_t v209 = (char *)swift_getAssociatedTypeWitness();
      uint64_t v225 = sub_10096C890();
      uint64_t v80 = swift_getAssociatedTypeWitness();
      uint64_t v81 = swift_getAssociatedTypeWitness();
      uint64_t v82 = swift_getAssociatedConformanceWitness();
      uint64_t v83 = v78;
      uint64_t v84 = swift_getAssociatedConformanceWitness();
      uint64_t v231 = v80;
      uint64_t v232 = v81;
      uint64_t v233 = v82;
      uint64_t v234 = v84;
      type metadata accessor for FileItemVersion();
      long long v226 = (ValueMetadata *)sub_10096C890();
      long long v227 = (void *)sub_100033BE8((uint64_t *)&unk_100AD7510);
      long long v228 = (ValueMetadata *)sub_100033BE8((uint64_t *)&unk_100AD6860);
      char v85 = (int *)swift_getTupleTypeMetadata();
      uint64_t v86 = &v78[v85[12]];
      unint64_t v87 = (int *)&v78[v85[16]];

      Swift::String v88 = v221;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        unint64_t v216 = &v88[v85[12]];
        unint64_t v210 = (unint64_t)&v88[v85[16]];

        unint64_t v211 = v87;
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
        uint64_t v90 = v212;
        unint64_t v215 = v86;
        uint64_t v91 = AssociatedTypeWitness;
        v89(v212, v83, AssociatedTypeWitness);
        uint64_t v92 = (uint64_t)v213;
        v89(v213, v88, v91);
        uint64_t v93 = v90;
        long long v224 = (char *)v80;
        uint64_t v225 = v81;
        long long v226 = (ValueMetadata *)v82;
        long long v227 = (void *)v84;
        type metadata accessor for FileItemVersion();
        uint64_t v94 = sub_10096C890();
        unint64_t v95 = *(void (**)(unint64_t, uint64_t))(*(void *)(v94 - 8) + 8);
        uint64_t v96 = v223;
        v95(v210, v94);
        uint64_t v97 = sub_10096C890();
        uint64_t v98 = *(void (**)(char *, uint64_t))(*(void *)(v97 - 8) + 8);
        v98(v216, v97);
        v95((unint64_t)v211, v94);
        v98(v215, v97);
        uint64_t v30 = v219;
        uint64_t v99 = v220;
        uint64_t v100 = v214;
        uint64_t v51 = v91;
        goto LABEL_44;
      }
      long long v224 = (char *)v80;
      uint64_t v225 = v81;
      long long v226 = (ValueMetadata *)v82;
      long long v227 = (void *)v84;
      type metadata accessor for FileItemVersion();
      uint64_t v146 = sub_10096C890();
      (*(void (**)(int *, uint64_t))(*(void *)(v146 - 8) + 8))(v87, v146);
      uint64_t v147 = sub_10096C890();
      (*(void (**)(char *, uint64_t))(*(void *)(v147 - 8) + 8))(v86, v147);
      uint64_t v27 = v78;
      uint64_t v30 = v219;
      goto LABEL_36;
    case 3u:
      int v101 = (char *)v207;
      unint64_t v219 = v30;
      uint64_t v102 = ((uint64_t (*)(ValueMetadata *, char *, uint64_t))v49)(v207, v30, v223);
      __chkstk_darwin(v102);
      strcpy((char *)&v200 - 32, " item newName version ");
      uint64_t v51 = AssociatedTypeWitness;
      long long v224 = (char *)AssociatedTypeWitness;
      uint64_t v103 = type metadata accessor for SnapshotItem();
      uint64_t v225 = sub_10096C890();
      long long v226 = &type metadata for Filename;
      long long v227 = &type metadata for UInt;
      uint64_t v104 = (int *)swift_getTupleTypeMetadata();
      uint64_t v105 = &v101[v104[12]];
      uint64_t v106 = v104[16];
      unint64_t v107 = *(void *)&v101[v106 + 8];
      uint64_t v213 = *(char **)&v101[v106];
      uint64_t v108 = v104[20];
      unint64_t v212 = *(char **)&v101[v108];
      Swift::String v109 = v221;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_bridgeObjectRelease();
        uint64_t v148 = sub_10096C890();
        (*(void (**)(char *, uint64_t))(*(void *)(v148 - 8) + 8))(v105, v148);
        uint64_t v27 = v101;
        goto LABEL_38;
      }
      unint64_t v210 = v107;
      unint64_t v211 = v104;
      unint64_t v215 = v105;
      unint64_t v216 = (char *)v103;
      uint64_t v110 = *(void *)&v109[v106];
      unint64_t v209 = *(char **)&v109[v106 + 8];
      unint64_t v208 = *(char **)&v109[v108];
      uint64_t v111 = v220;
      uint64_t v112 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
      unint64_t v113 = v203;
      v112(v203, v101, v51);
      uint64_t v114 = v204;
      v112(v204, v109, v51);
      swift_getAssociatedConformanceWitness();
      if ((sub_10096BBE0() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v173 = *(void (**)(char *, uint64_t))(v111 + 8);
        v173(v114, v51);
        v173(v113, v51);
        char v77 = 0;
        uint64_t v174 = v223;
        uint64_t v175 = v214;
        uint64_t v176 = v221;
        unint64_t v120 = v211;
        goto LABEL_64;
      }
      uint64_t v218 = v110;
      unint64_t v115 = v210;
      swift_bridgeObjectRetain();
      uint64_t v116 = (uint64_t)v213;
      uint64_t v117 = sub_10002C020((uint64_t)v213, v115);
      uint64_t v119 = v118;
      swift_bridgeObjectRelease();
      unint64_t v120 = v211;
      unint64_t v121 = (unint64_t)v209;
      if (!v119) {
        goto LABEL_51;
      }
      if (v117 == 12565487 && v119 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_50:
        swift_bridgeObjectRetain();
        unint64_t v178 = sub_10096BD70();
        sub_1000364D0(v178, v116, v115);
        swift_bridgeObjectRelease();
        uint64_t v179 = sub_10096BD10();
        unint64_t v217 = v180;
        uint64_t v116 = v179;
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
      char v177 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      if (v177) {
        goto LABEL_50;
      }
LABEL_51:
      swift_bridgeObjectRetain();
      unint64_t v217 = v115;
LABEL_52:
      swift_bridgeObjectRetain();
      uint64_t v181 = sub_10002C020(v218, v121);
      uint64_t v183 = v182;
      swift_bridgeObjectRelease();
      if (!v183) {
        goto LABEL_58;
      }
      if (v181 == 12565487 && v183 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_57:
        swift_bridgeObjectRetain();
        uint64_t v185 = v218;
        unint64_t v186 = sub_10096BD70();
        sub_1000364D0(v186, v185, v121);
        swift_bridgeObjectRelease();
        uint64_t v114 = v204;
        uint64_t v187 = sub_10096BD10();
        unint64_t v189 = v188;
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
      char v184 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      if (v184) {
        goto LABEL_57;
      }
LABEL_58:
      swift_bridgeObjectRetain();
      unint64_t v189 = v121;
      uint64_t v187 = v218;
LABEL_59:
      uint64_t v190 = v220;
      if (v116 == v187 && v217 == v189)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        Swift::String v191 = *(void (**)(char *, uint64_t))(v190 + 8);
        uint64_t v192 = AssociatedTypeWitness;
        v191(v114, AssociatedTypeWitness);
        v191(v113, v192);
        uint64_t v174 = v223;
        uint64_t v175 = v214;
        uint64_t v176 = v221;
      }
      else
      {
        char v193 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::String v194 = *(void (**)(char *, uint64_t))(v190 + 8);
        uint64_t v195 = AssociatedTypeWitness;
        v194(v114, AssociatedTypeWitness);
        v194(v113, v195);
        char v77 = 0;
        uint64_t v174 = v223;
        uint64_t v175 = v214;
        uint64_t v176 = v221;
        if ((v193 & 1) == 0) {
          goto LABEL_64;
        }
      }
      char v77 = v212 == v208;
LABEL_64:
      Swift::String v196 = &v176[v120[12]];
      uint64_t v197 = sub_10096C890();
      Swift::String v198 = *(void (**)(char *, uint64_t))(*(void *)(v197 - 8) + 8);
      v198(v196, v197);
      v198(v215, v197);
      (*(void (**)(char *, uint64_t))(v175 + 8))(v219, v174);
      return v77 & 1;
    case 4u:
      uint64_t v96 = v223;
      v49(v21, v30, v223);
      uint64_t v122 = v221;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_31;
      }
      uint64_t v99 = v220;
      unint64_t v123 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
      uint64_t v93 = v212;
      unint64_t v124 = v212;
      uint64_t v125 = v21;
      goto LABEL_24;
    case 5u:
      uint64_t v96 = v223;
      v49(v18, v30, v223);
      uint64_t v122 = v221;
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v27 = v18;
        goto LABEL_36;
      }
      uint64_t v99 = v220;
      unint64_t v123 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
      uint64_t v93 = v212;
      unint64_t v124 = v212;
      uint64_t v125 = v18;
LABEL_24:
      uint64_t v51 = AssociatedTypeWitness;
      v123(v124, v125, AssociatedTypeWitness);
      uint64_t v92 = (uint64_t)v213;
      v123(v213, v122, v51);
      goto LABEL_43;
    case 6u:
      unint64_t v126 = v206;
      unint64_t v219 = v30;
      uint64_t v96 = v223;
      v49(v206, v30, v223);
      uint64_t v127 = v218;
      uint64_t v128 = sub_10096C890();
      uint64_t v51 = AssociatedTypeWitness;
      uint64_t v129 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v130 = &v126[v129];
      uint64_t v131 = v221;
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        (*(void (**)(char *, uint64_t))(*(void *)(v128 - 8) + 8))(&v126[v129], v128);
        uint64_t v27 = v126;
        goto LABEL_38;
      }
      uint64_t v132 = &v131[v129];
      uint64_t v133 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 48);
      int v134 = v133(v130, 1, v127);
      uint64_t v135 = v127;
      uint64_t v99 = v220;
      if (v134 == 1 && v133(v132, 1, v135) == 1)
      {
        NSString v136 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
        id v137 = v126;
        uint64_t v138 = v212;
        v136(v212, v137, v51);
        uint64_t v92 = (uint64_t)v213;
        int v139 = v131;
        int v140 = v130;
        uint64_t v93 = v138;
        v136(v213, v139, v51);
        (*(void (**)(char *, uint64_t))(*(void *)(v128 - 8) + 8))(v140, v128);
      }
      else
      {
        uint64_t v160 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
        unint64_t v216 = v130;
        uint64_t v93 = v212;
        v160(v212, v126, v51);
        uint64_t v161 = (uint64_t)v213;
        v160(v213, v131, v51);
        unint64_t v162 = *(void (**)(char *, uint64_t))(*(void *)(v128 - 8) + 8);
        v162(v132, v128);
        v162(v216, v128);
        uint64_t v92 = v161;
      }
      uint64_t v30 = v219;
      goto LABEL_43;
    case 7u:
      uint64_t v21 = (char *)v205;
      v49((char *)v205, v30, v223);
      uint64_t v141 = v221;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
LABEL_31:
        uint64_t v27 = v21;
LABEL_36:
        uint64_t v149 = v220;
        uint64_t v51 = AssociatedTypeWitness;
        goto LABEL_39;
      }
      uint64_t v99 = v220;
      uint64_t v142 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
      uint64_t v93 = v212;
      uint64_t v51 = AssociatedTypeWitness;
      v142(v212, v21, AssociatedTypeWitness);
      uint64_t v92 = (uint64_t)v213;
      v142(v213, v141, v51);
      uint64_t v96 = v223;
LABEL_43:
      uint64_t v100 = v214;
LABEL_44:
      (*(void (**)(char *, uint64_t))(v100 + 8))(v30, v96);
      swift_getAssociatedConformanceWitness();
      char v77 = sub_10096BBE0();
      uint64_t v163 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
      v163(v92, v51);
      v163((uint64_t)v93, v51);
      return v77 & 1;
    default:
      uint64_t v50 = ((uint64_t (*)(char *, char *, uint64_t))v49)(v27, v30, v223);
      __chkstk_darwin(v50);
      unint64_t v219 = v30;
      strcpy((char *)&v200 - 48, " item version domainVersion ");
      uint64_t v51 = AssociatedTypeWitness;
      long long v224 = (char *)AssociatedTypeWitness;
      uint64_t v213 = (char *)type metadata accessor for SnapshotItem();
      uint64_t v225 = sub_10096C890();
      long long v226 = (ValueMetadata *)&type metadata for UInt;
      long long v227 = (void *)sub_100033BE8((uint64_t *)&unk_100AD6860);
      uint64_t v52 = (int *)swift_getTupleTypeMetadata();
      uint64_t v53 = &v27[v52[12]];
      int v54 = *(char **)&v27[v52[16]];

      uint64_t v55 = v221;
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v56 = sub_10096C890();
        (*(void (**)(char *, uint64_t))(*(void *)(v56 - 8) + 8))(v53, v56);
LABEL_38:
        uint64_t v30 = v219;
        uint64_t v149 = v220;
LABEL_39:
        unint64_t v151 = v215;
        unint64_t v150 = v216;
        (*(void (**)(char *, uint64_t))(v149 + 8))(v27, v51);
        (*((void (**)(char *, char *))v151 + 1))(v30, v150);
        char v77 = 0;
      }
      else
      {
        unint64_t v216 = *(char **)&v55[v52[16]];

        unint64_t v212 = v54;
        uint64_t v152 = v220;
        unint64_t v215 = v53;
        unint64_t v153 = v55;
        uint64_t v154 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
        v154(v44, v27, v51);
        v154(v41, v55, v51);
        swift_getAssociatedConformanceWitness();
        char v155 = sub_10096BBE0();
        unint64_t v156 = *(void (**)(char *, uint64_t))(v152 + 8);
        v156(v41, v51);
        v156(v44, v51);
        char v77 = v155 & (v212 == v216);
        unint64_t v157 = &v153[v52[12]];
        uint64_t v158 = sub_10096C890();
        unint64_t v159 = *(void (**)(char *, uint64_t))(*(void *)(v158 - 8) + 8);
        v159(v157, v158);
        v159(v215, v158);
LABEL_47:
        (*(void (**)(char *, uint64_t))(v214 + 8))(v219, v223);
      }
      return v77 & 1;
  }
}

uint64_t sub_100695D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  int v6 = a1;
  uint64_t v8 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v11(v10, v4, a2);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v81 = &v71;
      __chkstk_darwin(EnumCaseMultiPayload);
      uint64_t v80 = (char *)(&v71 - 10);
      strcpy((char *)&v71 - 80, " item destinationItemID baseVersion fields version domainVersion ");
      uint64_t v22 = *(void *)(a2 + 32);
      LODWORD(v82) = v6;
      uint64_t v79 = *(ValueMetadata **)(a2 + 16);
      uint64_t v78 = v22;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      type metadata accessor for SnapshotItem();
      uint64_t v84 = sub_10096C890();
      swift_getAssociatedTypeWitness();
      char v85 = (ValueMetadata *)sub_10096C890();
      uint64_t v23 = swift_getAssociatedTypeWitness();
      uint64_t v24 = swift_getAssociatedTypeWitness();
      uint64_t v76 = v23;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v75 = AssociatedConformanceWitness;
      char v77 = (char *)v24;
      uint64_t v74 = swift_getAssociatedConformanceWitness();
      uint64_t v90 = v23;
      uint64_t v91 = v24;
      uint64_t v92 = AssociatedConformanceWitness;
      uint64_t v93 = v74;
      type metadata accessor for FileItemVersion();
      uint64_t v86 = (void *)sub_10096C890();
      unint64_t v87 = &type metadata for Fields;
      Swift::String v88 = &type metadata for UInt;
      uint64_t v89 = sub_100033BE8((uint64_t *)&unk_100AD6860);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v27 = *(uint64_t **)&v10[TupleTypeMetadata[24]];
      uint64_t v80 = *(char **)&v10[TupleTypeMetadata[28]];
      uint64_t v81 = v27;

      uint64_t v28 = a3 + TupleTypeMetadata[12];
      uint64_t v29 = a3 + TupleTypeMetadata[16];
      uint64_t v72 = a3 + TupleTypeMetadata[20];
      uint64_t v73 = TupleTypeMetadata[24];
      uint64_t v30 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 32))(a3, v10, v30);
      uint64_t v31 = type metadata accessor for SnapshotItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v28, 1, 1, v31);
      uint64_t v32 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v29, 1, 1, v32);
      uint64_t AssociatedTypeWitness = v76;
      uint64_t v84 = (uint64_t)v77;
      char v85 = (ValueMetadata *)v75;
      uint64_t v86 = (void *)v74;
      uint64_t v33 = type metadata accessor for FileItemVersion();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v72, 1, 1, v33);
      *(void *)(a3 + v73) = v81;
      uint64_t v34 = v80;
      if ((v82 & 1) == 0) {
        uint64_t v34 = 0;
      }
      uint64_t v35 = &v10[TupleTypeMetadata[12]];
      uint64_t v36 = &v10[TupleTypeMetadata[16]];
      uint64_t v37 = &v10[TupleTypeMetadata[20]];
      uint64_t v38 = TupleTypeMetadata[32];
      *(void *)(a3 + TupleTypeMetadata[28]) = v34;
      *(void *)(a3 + v38) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = sub_10096C890();
      (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v37, v39);
      uint64_t v40 = sub_10096C890();
      (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v36, v40);
      uint64_t v41 = sub_10096C890();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v35, v41);
      break;
    case 2:
      uint64_t v80 = (char *)&v71;
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v71 - 64, " destinationItemID baseVersion recursive domainVersion ");
      uint64_t v42 = *(void *)(a2 + 32);
      uint64_t v81 = *(uint64_t **)(a2 + 16);
      uint64_t v82 = v42;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      uint64_t v84 = sub_10096C890();
      uint64_t v43 = swift_getAssociatedTypeWitness();
      uint64_t v44 = swift_getAssociatedTypeWitness();
      uint64_t v45 = swift_getAssociatedConformanceWitness();
      uint64_t v79 = (ValueMetadata *)v45;
      uint64_t v78 = swift_getAssociatedConformanceWitness();
      uint64_t v90 = v43;
      uint64_t v91 = v44;
      uint64_t v92 = v45;
      uint64_t v93 = v78;
      type metadata accessor for FileItemVersion();
      char v85 = (ValueMetadata *)sub_10096C890();
      uint64_t v86 = (void *)sub_100033BE8((uint64_t *)&unk_100AD7510);
      unint64_t v87 = (ValueMetadata *)sub_100033BE8((uint64_t *)&unk_100AD6860);
      uint64_t v46 = (int *)swift_getTupleTypeMetadata();
      uint64_t v80 = &v10[v46[12]];
      char v77 = &v10[v46[16]];

      uint64_t v47 = a3 + v46[12];
      uint64_t v74 = a3 + v46[16];
      uint64_t v48 = v46[20];
      uint64_t v75 = v46[24];
      uint64_t v76 = v48;
      uint64_t v49 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v49 - 8) + 32))(a3, v10, v49);
      uint64_t v50 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v47, 1, 1, v50);
      uint64_t AssociatedTypeWitness = v43;
      uint64_t v84 = v44;
      char v85 = v79;
      uint64_t v86 = (void *)v78;
      uint64_t v51 = type metadata accessor for FileItemVersion();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v74, 1, 1, v51);
      *(unsigned char *)(a3 + v76) = 2;
      *(void *)(a3 + v75) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = sub_10096C890();
      (*(void (**)(char *, uint64_t))(*(void *)(v52 - 8) + 8))(v77, v52);
      uint64_t v53 = sub_10096C890();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v53 - 8) + 8))(v80, v53);
      break;
    case 3:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v71 - 32, " item newName version ");
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      type metadata accessor for SnapshotItem();
      uint64_t v84 = sub_10096C890();
      char v85 = &type metadata for Filename;
      uint64_t v86 = &type metadata for UInt;
      int v54 = (int *)swift_getTupleTypeMetadata();
      uint64_t v55 = v54[16];
      uint64_t v57 = *(void *)&v10[v55];
      uint64_t v56 = *(void *)&v10[v55 + 8];
      uint64_t v81 = *(uint64_t **)&v10[v54[20]];
      uint64_t v82 = v56;
      uint64_t v58 = a3 + v54[12];
      uint64_t v59 = (void *)(a3 + v55);
      uint64_t v60 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v60 - 8) + 32))(a3, v10, v60);
      uint64_t v61 = type metadata accessor for SnapshotItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v58, 1, 1, v61);
      uint64_t v62 = v82;
      *uint64_t v59 = v57;
      v59[1] = v62;
      id v63 = v81;
      if ((v6 & 1) == 0) {
        id v63 = 0;
      }
      uint64_t v20 = &v10[v54[12]];
      *(void *)(a3 + v54[20]) = v63;
      goto LABEL_14;
    case 4:
    case 5:
    case 7:
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a2);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a3, v4, a2);
      break;
    case 6:
      uint64_t v65 = *(void *)(a2 + 16);
      uint64_t v66 = swift_getAssociatedTypeWitness();
      uint64_t v67 = sub_10096C890();
      uint64_t v68 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v69 = &v10[v68];
      uint64_t v70 = a3 + v68;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v66 - 8) + 32))(a3, v10, v66);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v70, 1, 1, v65);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v67 - 8) + 8))(v69, v67);
      break;
    default:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v71 - 48, " item version domainVersion ");
      LODWORD(v82) = v6;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      type metadata accessor for SnapshotItem();
      uint64_t v84 = sub_10096C890();
      char v85 = (ValueMetadata *)&type metadata for UInt;
      uint64_t v86 = (void *)sub_100033BE8((uint64_t *)&unk_100AD6860);
      uint64_t v14 = (int *)swift_getTupleTypeMetadata();
      uint64_t v15 = *(void *)&v10[v14[16]];

      uint64_t v16 = a3 + v14[12];
      uint64_t v17 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a3, v10, v17);
      uint64_t v18 = type metadata accessor for SnapshotItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
      if (v82) {
        uint64_t v19 = v15;
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v20 = &v10[v14[12]];
      uint64_t v21 = v14[20];
      *(void *)(a3 + v14[16]) = v19;
      *(void *)(a3 + v21) = 0;
LABEL_14:
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = sub_10096C890();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v20, v64);
      break;
  }
  return result;
}

Swift::Int sub_100696C5C(uint64_t a1)
{
  return sub_1006979E4(a1, (void (*)(unsigned char *, uint64_t))sub_1006933AC);
}

uint64_t sub_100696C78(char *a1, char *a2, uint64_t a3)
{
  return sub_1006940F4(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(ValueMetadata **)(a3 + 32), *(void **)(a3 + 40));
}

Swift::Int sub_100696C88(uint64_t a1)
{
  return sub_1006979E4(a1, (void (*)(unsigned char *, uint64_t))sub_1006933AC);
}

Swift::Int sub_100696CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100697A98(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_1006933AC);
}

uint64_t sub_100696CD0()
{
  return swift_getWitnessTable();
}

unint64_t sub_100696CEC(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v5 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  unint64_t v22 = a1[3];
  unint64_t v4 = v22;
  unint64_t v23 = v5;
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  uint64_t v8 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - v10;
  unint64_t v22 = v5;
  unint64_t v23 = v4;
  uint64_t v24 = v7;
  uint64_t v25 = v6;
  uint64_t v12 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v22 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v19 + 16))(v18, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v18, v8);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    v26._countAndFlagsBits = 0x205046206D6F7266;
    v26._object = (void *)0xE800000000000000;
    sub_10096BDC0(v26);
    swift_getWitnessTable();
    sub_10096D270();
    unint64_t v20 = v22;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v18, v12);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    v27._countAndFlagsBits = 0x205346206D6F7266;
    v27._object = (void *)0xE800000000000000;
    sub_10096BDC0(v27);
    swift_getWitnessTable();
    sub_10096D270();
    unint64_t v20 = v22;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  return v20;
}

uint64_t sub_100697000@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v25 = a3;
  uint64_t v26 = v7;
  uint64_t v27 = v8;
  uint64_t v28 = v9;
  uint64_t v29 = v10;
  uint64_t v11 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v26 = v8;
  uint64_t v27 = v7;
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  uint64_t v15 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v24 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v22 + 16))(v21, v4, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v21, v11);
    sub_100695D7C(a1 & 1, v11, v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v21, v15);
    sub_100695D7C(a1 & 1, v15, v25);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1006972B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ValueMetadata *a5, ValueMetadata *a6)
{
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  uint64_t v50 = a4;
  uint64_t v51 = a3;
  uint64_t v52 = a6;
  uint64_t v53 = a5;
  uint64_t v10 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  __chkstk_darwin(v10);
  uint64_t v39 = (char *)&v38 - v11;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v41 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v12 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v38 = (char *)&v38 - v13;
  uint64_t v42 = a3;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v47 = a6;
  uint64_t v14 = type metadata accessor for TestingOperation();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v38 - v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v40 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v22 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v24 = (char *)&v38 - v23;
  uint64_t v25 = (char *)&v38 + *(int *)(v22 + 48) - v23;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v26((char *)&v38 - v23, v48, v14);
  v26(v25, v49, v14);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v26(v20, (uint64_t)v24, v14);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v32 = v12;
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      uint64_t v34 = v38;
      uint64_t v35 = v41;
      v33(v38, v25, v41);
      char v30 = sub_1006940F4(v20, v34, v42, v45, v46, v47);
      uint64_t v36 = *(void (**)(char *, uint64_t))(v32 + 8);
      v36(v34, v35);
      v36(v20, v35);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v41);
    goto LABEL_7;
  }
  v26(v18, (uint64_t)v24, v14);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v44);
LABEL_7:
    char v30 = 0;
    uint64_t v15 = v40;
    uint64_t v14 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  uint64_t v28 = v43;
  uint64_t v27 = v44;
  uint64_t v29 = v39;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v39, v25, v44);
  char v30 = sub_1006940F4(v18, v29, v45, v42, v47, v46);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v28 + 8);
  v31(v29, v27);
  v31(v18, v27);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
  return v30 & 1;
}

uint64_t sub_100697734(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = a2[2];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v23 = a2[3];
  uint64_t v6 = v23;
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  uint64_t v10 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v23 = v7;
  uint64_t v24 = v6;
  uint64_t v25 = v9;
  uint64_t v26 = v8;
  uint64_t v14 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v23 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v21 + 16))(v20, v3, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v20, v10);
    sub_10096D4C0(1uLL);
    sub_1006933AC(a1, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    sub_10096D4C0(0);
    sub_1006933AC(a1, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
}

Swift::Int sub_1006979CC(uint64_t a1)
{
  return sub_1006979E4(a1, (void (*)(unsigned char *, uint64_t))sub_100697734);
}

Swift::Int sub_1006979E4(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_10096D4B0();
  a2(v5, a1);
  return sub_10096D500();
}

uint64_t sub_100697A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006972B0(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(ValueMetadata **)(a3 + 32), *(ValueMetadata **)(a3 + 40));
}

Swift::Int sub_100697A50(uint64_t a1)
{
  return sub_1006979E4(a1, (void (*)(unsigned char *, uint64_t))sub_100697734);
}

Swift::Int sub_100697A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100697A98(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_100697734);
}

Swift::Int sub_100697A98(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  sub_10096D4B0();
  a4(v7, a2);
  return sub_10096D500();
}

uint64_t sub_100697AF8(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_10002689C(a1, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  uint64_t v7 = v6;
  sub_1003B32B0(a2, (uint64_t)v16);
  uint64_t v8 = v17;
  if (v17)
  {
    uint64_t v9 = v18;
    sub_10002689C(v16, v17);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    uint64_t v12 = v11;
    sub_1000268E0((uint64_t)v16);
    if (v5 == v10 && v7 == v12)
    {
      swift_bridgeObjectRelease_n();
      char v14 = 1;
    }
    else
    {
      char v14 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1003B3318((uint64_t)v16);
    swift_bridgeObjectRelease();
    char v14 = 0;
  }
  return v14 & 1;
}

void sub_100697C28(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, NSObject *a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  char v85 = a6;
  uint64_t v86 = a5;
  id v81 = a3;
  uint64_t v84 = a2;
  uint64_t v9 = sub_10096A630();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10096A650();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [objc_allocWithZone((Class)FPImportItemPendingReconciliation) init];
  id v15 = a1;
  unint64_t v16 = sub_100618348(v15, 0);
  uint64_t v18 = v6;
  if (!v6)
  {
    uint64_t v22 = v16;
    uint64_t v78 = v13;
    uint64_t v77 = v11;
    uint64_t v79 = a4;
    id v80 = v14;
    int v23 = v17;

    int v83 = v23;
    uint64_t v82 = v22;
    if (v23 != 2 || v22)
    {
      uint64_t v25 = v80;
      if (v23 == 2 && v22 == 1)
      {
        uint64_t v24 = NSFileProviderTrashContainerItemIdentifier;
      }
      else
      {
        *(void *)&v87[0] = 0x2F73662F70665F5FLL;
        *((void *)&v87[0] + 1) = 0xE800000000000000;
        v90._countAndFlagsBits = VFSItemID.parseableString.getter(v22, v83);
        sub_10096BDC0(v90);
        swift_bridgeObjectRelease();
        uint64_t v24 = (NSString *)sub_10096BC00();
        uint64_t v18 = 0;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v24 = NSFileProviderRootContainerItemIdentifier;
      uint64_t v25 = v80;
    }
    uint64_t v26 = v78;
    [v25 setItemIdentifier:v24];

    objc_msgSend(v25, "setItemPendingReconciliationIsLockedInDB:", objc_msgSend(v15, "BOOLAtIndex:", 1));
    unsigned __int8 v27 = [v15 isNullAtIndex:2];
    uint64_t v28 = v10;
    if (v27) {
      id v76 = 0;
    }
    else {
      id v76 = [v15 integerAtIndex:2];
    }
    uint64_t v29 = v77;
    if (objc_msgSend(v15, "isNullAtIndex:", 3, v76))
    {
      char v30 = v79;
    }
    else
    {
      uint64_t v32 = v18;
      id v33 = [v15 dataAtIndex:3];
      uint64_t v34 = sub_10096AF60();
      unint64_t v36 = v35;

      uint64_t v18 = v32;
      uint64_t v42 = sub_1003AB9C8(v34, v36);
      sub_10001E9C0(v34, v36);
      if (v42)
      {
        char v30 = v79;
        uint64_t v31 = v42;
        if ((v27 & 1) == 0)
        {
LABEL_22:
          [v25 setItemPendingReconciliationJobSchedulingState:3];
          char v43 = sub_1007B6CB8((uint64_t)v76);
          if (v43 == 70) {
            uint64_t v44 = -1;
          }
          else {
            uint64_t v44 = qword_100989208[v43];
          }
          uint64_t v21 = v86;
          uint64_t v41 = v82;
          [v25 setItemPendingReconciliationJobCode:v44];
          goto LABEL_48;
        }
LABEL_18:
        uint64_t v37 = v84;
        uint64_t v38 = v84[3];
        *(void *)&v87[0] = v82;
        BYTE8(v87[0]) = v83;
        sub_10057A6F4();
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_100973BB0;
        *(void *)(v39 + 32) = sub_10002B7CC(&qword_100AD6380);
        unint64_t v45 = (*(uint64_t (**)(_OWORD *, uint64_t))(*(void *)v38 + 272))(v87, v39);
        swift_bridgeObjectRelease();
        if (v45 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v75 = sub_10096CE70();
          swift_bridgeObjectRelease();
          uint64_t v46 = v86;
          if (v75) {
            goto LABEL_28;
          }
        }
        else
        {
          uint64_t v46 = v86;
          if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_28:
            uint64_t v78 = (char *)v31;
            if ((v45 & 0xC000000000000001) != 0)
            {
              uint64_t v47 = sub_10096CC30();
            }
            else
            {
              if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_72:
                __break(1u);
LABEL_73:
                sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v37);
              }
              uint64_t v47 = *(void *)(v45 + 32);
              swift_retain();
            }
            uint64_t v48 = v46;
            swift_bridgeObjectRelease();
            [v25 setItemPendingReconciliationJobCode:qword_100989208[(char)sub_10051EA0C()]];
            uint64_t v49 = *(void *)(v47 + 96);
            uint64_t v50 = *(void *)(v47 + 104);
            unsigned int v51 = *(unsigned __int8 *)(v47 + 112);
            sub_10009C5FC(v49, v50, *(unsigned char *)(v47 + 112));
            char v52 = 0;
LABEL_34:
            uint64_t v37 = (void *)v37[21];
            swift_retain();
            sub_10009C5FC(v49, v50, v51);
            if (objc_sync_enter(v37)) {
              goto LABEL_73;
            }
            swift_beginAccess();
            uint64_t v54 = v37[2];
            swift_bridgeObjectRetain();
            if (objc_sync_exit(v37)) {
              sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v37);
            }
            uint64_t v55 = swift_release();
            if (v52)
            {
              uint64_t v88 = 0;
              memset(v87, 0, sizeof(v87));
            }
            else
            {
              swift_beginAccess();
              uint64_t v55 = sub_1003B32B0(v47 + 56, (uint64_t)v87);
            }
            uint64_t v56 = v51;
            uint64_t v25 = v80;
            switch(v51)
            {
              case 1u:
                uint64_t v56 = 0;
                break;
              case 2u:
                break;
              case 3u:
                uint64_t v56 = 3;
                break;
              case 4u:
                if (v49 | v50) {
                  uint64_t v56 = 5;
                }
                else {
                  uint64_t v56 = 4;
                }
                break;
              default:
                __chkstk_darwin(v55);
                *(&v76 - 2) = v87;
                char v57 = sub_1004B000C((uint64_t (*)(_OWORD *))sub_10069E578, (uint64_t)(&v76 - 4), v54, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_1001E611C);
                uint64_t v25 = v80;
                uint64_t v56 = v57 & 1;
                break;
            }
            sub_1003B3318((uint64_t)v87);
            swift_bridgeObjectRelease();
            [v25 setItemPendingReconciliationJobSchedulingState:v56];
            sub_1000D31F8(v49, v50, v51);
            swift_release();
            sub_10058A2E4(v49, v50, v51);
            uint64_t v21 = v48;
            uint64_t v31 = (uint64_t)v78;
            char v30 = v79;
            uint64_t v18 = 0;
            uint64_t v41 = v82;
LABEL_48:
            if ([v25 itemPendingReconciliationJobCode] == (id)26)
            {
              if (v31)
              {
                *(void *)&v87[0] = v31;
                swift_errorRetain();
                sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
                sub_100011348(0, (unint64_t *)&qword_100ACECC0);
                if (swift_dynamicCast())
                {
                  uint64_t v58 = v41;
                  id v59 = v89;
                  uint64_t v60 = objc_msgSend(v89, "fp_protectionClassBehindError");
                  if (v60)
                  {
                    uint64_t v37 = v60;
                    uint64_t v78 = (char *)v31;
                    uint64_t v86 = v18;
                    uint64_t v61 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                    uint64_t v63 = v62;
                    if (v61 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v63 == v64) {
                      goto LABEL_54;
                    }
                    char v67 = sub_10096D2D0();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v67) {
                      goto LABEL_59;
                    }
                    uint64_t v70 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                    uint64_t v72 = v71;
                    if (v70 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v72 == v73)
                    {
LABEL_54:
                      swift_bridgeObjectRelease_n();
LABEL_59:
                      id v68 = v81;
                      if ((uint64_t)[v81 numberOfItemsPendingReconciliation] < 1)
                      {

                        goto LABEL_63;
                      }
                      uint64_t v69 = (char *)[v68 numberOfItemsPendingReconciliation];
                      if (!__OFSUB__(v69, 1))
                      {
                        [v68 setNumberOfItemsPendingReconciliation:v69 - 1];

LABEL_63:
                        swift_errorRelease();

                        id v19 = 0;
                        uint64_t v20 = v85;
                        goto LABEL_57;
                      }
                      goto LABEL_72;
                    }
                    char v74 = sub_10096D2D0();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v74) {
                      goto LABEL_59;
                    }

                    uint64_t v41 = v58;
                  }
                  else
                  {
                  }
                }
              }
            }
            dispatch_group_enter(v30);
            uint64_t v65 = swift_allocObject();
            *(void *)(v65 + 16) = v25;
            *(void *)(v65 + 24) = v30;
            id v19 = v25;
            uint64_t v66 = v30;
            sub_1002D6F2C(v41, v83, (uint64_t)sub_10069E528, v65);
            swift_release();
            swift_errorRelease();

            uint64_t v20 = v85;
            goto LABEL_57;
          }
        }
        swift_bridgeObjectRelease();
        [v25 setItemPendingReconciliationJobCode:-1];
        *(void *)&v87[0] = v82;
        BYTE8(v87[0]) = v83;
        uint64_t v40 = (*(uint64_t (**)(_OWORD *))(*(void *)v38 + 256))(v87);
        uint64_t v53 = v40;
        if (!v40)
        {
          [v25 setItemPendingReconciliationJobCode:-1];
          [v25 setItemPendingReconciliationJobSchedulingState:-1];
          uint64_t v41 = v82;
          uint64_t v21 = v46;
          goto LABEL_48;
        }
        uint64_t v78 = (char *)v31;
        uint64_t v48 = v46;
        [v25 setItemPendingReconciliationJobCode:qword_100989208[(char)sub_10051F448()]];
        uint64_t v49 = *(void *)(v53 + 96);
        uint64_t v50 = *(void *)(v53 + 104);
        unsigned int v51 = *(unsigned __int8 *)(v53 + 112);
        sub_10009C5FC(v49, v50, *(unsigned char *)(v53 + 112));
        swift_release();
        uint64_t v47 = 0;
        char v52 = 1;
        goto LABEL_34;
      }
      uint64_t v26 = v78;
      char v30 = v79;
    }
    sub_10096A590();
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_10010DA14();
    sub_10096ABD0();
    uint64_t v31 = sub_10096A4D0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    swift_errorRelease();
    if ((v27 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }

  swift_errorRelease();
  id v19 = 0;
  uint64_t v20 = v85;
  uint64_t v21 = v86;
LABEL_57:
  *uint64_t v20 = v19;
}

void sub_100698818(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, NSObject *a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  char v85 = a6;
  uint64_t v86 = a5;
  id v81 = a3;
  uint64_t v84 = a2;
  uint64_t v9 = sub_10096A630();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10096A650();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [objc_allocWithZone((Class)FPImportItemPendingReconciliation) init];
  id v15 = a1;
  unint64_t v16 = sub_100618348(v15, 0);
  uint64_t v18 = v6;
  if (!v6)
  {
    uint64_t v22 = v16;
    uint64_t v78 = v13;
    uint64_t v77 = v11;
    uint64_t v79 = a4;
    id v80 = v14;
    int v23 = v17;

    int v83 = v23;
    uint64_t v82 = v22;
    if (v23 != 2 || v22)
    {
      uint64_t v25 = v80;
      if (v23 == 2 && v22 == 1)
      {
        uint64_t v24 = NSFileProviderTrashContainerItemIdentifier;
      }
      else
      {
        *(void *)&v87[0] = 0x2F73662F70665F5FLL;
        *((void *)&v87[0] + 1) = 0xE800000000000000;
        v90._countAndFlagsBits = VFSItemID.parseableString.getter(v22, v83);
        sub_10096BDC0(v90);
        swift_bridgeObjectRelease();
        uint64_t v24 = (NSString *)sub_10096BC00();
        uint64_t v18 = 0;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v24 = NSFileProviderRootContainerItemIdentifier;
      uint64_t v25 = v80;
    }
    uint64_t v26 = v78;
    [v25 setItemIdentifier:v24];

    objc_msgSend(v25, "setItemPendingReconciliationIsLockedInDB:", objc_msgSend(v15, "BOOLAtIndex:", 1));
    unsigned __int8 v27 = [v15 isNullAtIndex:2];
    uint64_t v28 = v10;
    if (v27) {
      id v76 = 0;
    }
    else {
      id v76 = [v15 integerAtIndex:2];
    }
    uint64_t v29 = v77;
    if (objc_msgSend(v15, "isNullAtIndex:", 3, v76))
    {
      char v30 = v79;
    }
    else
    {
      uint64_t v32 = v18;
      id v33 = [v15 dataAtIndex:3];
      uint64_t v34 = sub_10096AF60();
      unint64_t v36 = v35;

      uint64_t v18 = v32;
      uint64_t v42 = sub_1003AB9C8(v34, v36);
      sub_10001E9C0(v34, v36);
      if (v42)
      {
        char v30 = v79;
        uint64_t v31 = v42;
        if ((v27 & 1) == 0)
        {
LABEL_22:
          [v25 setItemPendingReconciliationJobSchedulingState:3];
          char v43 = sub_1007B6CB8((uint64_t)v76);
          if (v43 == 70) {
            uint64_t v44 = -1;
          }
          else {
            uint64_t v44 = qword_100989208[v43];
          }
          uint64_t v21 = v86;
          uint64_t v41 = v82;
          [v25 setItemPendingReconciliationJobCode:v44];
          goto LABEL_48;
        }
LABEL_18:
        uint64_t v37 = v84;
        uint64_t v38 = v84[3];
        *(void *)&v87[0] = v82;
        BYTE8(v87[0]) = v83;
        sub_10057A6F4();
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_100973BB0;
        *(void *)(v39 + 32) = sub_10002B7CC(&qword_100AD6380);
        unint64_t v45 = (*(uint64_t (**)(_OWORD *, uint64_t))(*(void *)v38 + 272))(v87, v39);
        swift_bridgeObjectRelease();
        if (v45 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v75 = sub_10096CE70();
          swift_bridgeObjectRelease();
          uint64_t v46 = v86;
          if (v75) {
            goto LABEL_28;
          }
        }
        else
        {
          uint64_t v46 = v86;
          if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_28:
            uint64_t v78 = (char *)v31;
            if ((v45 & 0xC000000000000001) != 0)
            {
              uint64_t v47 = sub_10096CC30();
            }
            else
            {
              if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_72:
                __break(1u);
LABEL_73:
                sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v37);
              }
              uint64_t v47 = *(void *)(v45 + 32);
              swift_retain();
            }
            uint64_t v48 = v46;
            swift_bridgeObjectRelease();
            [v25 setItemPendingReconciliationJobCode:qword_100989208[(char)sub_10051EA0C()]];
            uint64_t v49 = *(void *)(v47 + 96);
            uint64_t v50 = *(void *)(v47 + 104);
            unsigned int v51 = *(unsigned __int8 *)(v47 + 112);
            sub_10009C5FC(v49, v50, *(unsigned char *)(v47 + 112));
            char v52 = 0;
LABEL_34:
            uint64_t v37 = (void *)v37[21];
            swift_retain();
            sub_10009C5FC(v49, v50, v51);
            if (objc_sync_enter(v37)) {
              goto LABEL_73;
            }
            swift_beginAccess();
            uint64_t v54 = v37[2];
            swift_bridgeObjectRetain();
            if (objc_sync_exit(v37)) {
              sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v37);
            }
            uint64_t v55 = swift_release();
            if (v52)
            {
              uint64_t v88 = 0;
              memset(v87, 0, sizeof(v87));
            }
            else
            {
              swift_beginAccess();
              uint64_t v55 = sub_1003B32B0(v47 + 56, (uint64_t)v87);
            }
            uint64_t v56 = v51;
            uint64_t v25 = v80;
            switch(v51)
            {
              case 1u:
                uint64_t v56 = 0;
                break;
              case 2u:
                break;
              case 3u:
                uint64_t v56 = 3;
                break;
              case 4u:
                if (v49 | v50) {
                  uint64_t v56 = 5;
                }
                else {
                  uint64_t v56 = 4;
                }
                break;
              default:
                __chkstk_darwin(v55);
                *(&v76 - 2) = v87;
                char v57 = sub_1004B000C((uint64_t (*)(_OWORD *))sub_10069E578, (uint64_t)(&v76 - 4), v54, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_1001E611C);
                uint64_t v25 = v80;
                uint64_t v56 = v57 & 1;
                break;
            }
            sub_1003B3318((uint64_t)v87);
            swift_bridgeObjectRelease();
            [v25 setItemPendingReconciliationJobSchedulingState:v56];
            sub_1000D31F8(v49, v50, v51);
            swift_release();
            sub_10058A2E4(v49, v50, v51);
            uint64_t v21 = v48;
            uint64_t v31 = (uint64_t)v78;
            char v30 = v79;
            uint64_t v18 = 0;
            uint64_t v41 = v82;
LABEL_48:
            if ([v25 itemPendingReconciliationJobCode] == (id)26)
            {
              if (v31)
              {
                *(void *)&v87[0] = v31;
                swift_errorRetain();
                sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
                sub_100011348(0, (unint64_t *)&qword_100ACECC0);
                if (swift_dynamicCast())
                {
                  uint64_t v58 = v41;
                  id v59 = v89;
                  uint64_t v60 = objc_msgSend(v89, "fp_protectionClassBehindError");
                  if (v60)
                  {
                    uint64_t v37 = v60;
                    uint64_t v78 = (char *)v31;
                    uint64_t v86 = v18;
                    uint64_t v61 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                    uint64_t v63 = v62;
                    if (v61 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v63 == v64) {
                      goto LABEL_54;
                    }
                    char v67 = sub_10096D2D0();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v67) {
                      goto LABEL_59;
                    }
                    uint64_t v70 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                    uint64_t v72 = v71;
                    if (v70 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v72 == v73)
                    {
LABEL_54:
                      swift_bridgeObjectRelease_n();
LABEL_59:
                      id v68 = v81;
                      if ((uint64_t)[v81 numberOfItemsPendingReconciliation] < 1)
                      {

                        goto LABEL_63;
                      }
                      uint64_t v69 = (char *)[v68 numberOfItemsPendingReconciliation];
                      if (!__OFSUB__(v69, 1))
                      {
                        [v68 setNumberOfItemsPendingReconciliation:v69 - 1];

LABEL_63:
                        swift_errorRelease();

                        id v19 = 0;
                        uint64_t v20 = v85;
                        goto LABEL_57;
                      }
                      goto LABEL_72;
                    }
                    char v74 = sub_10096D2D0();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v74) {
                      goto LABEL_59;
                    }

                    uint64_t v41 = v58;
                  }
                  else
                  {
                  }
                }
              }
            }
            dispatch_group_enter(v30);
            uint64_t v65 = swift_allocObject();
            *(void *)(v65 + 16) = v25;
            *(void *)(v65 + 24) = v30;
            id v19 = v25;
            uint64_t v66 = v30;
            sub_1002D6F2C(v41, v83, (uint64_t)sub_10069E47C, v65);
            swift_release();
            swift_errorRelease();

            uint64_t v20 = v85;
            goto LABEL_57;
          }
        }
        swift_bridgeObjectRelease();
        [v25 setItemPendingReconciliationJobCode:-1];
        *(void *)&v87[0] = v82;
        BYTE8(v87[0]) = v83;
        uint64_t v40 = (*(uint64_t (**)(_OWORD *))(*(void *)v38 + 256))(v87);
        uint64_t v53 = v40;
        if (!v40)
        {
          [v25 setItemPendingReconciliationJobCode:-1];
          [v25 setItemPendingReconciliationJobSchedulingState:-1];
          uint64_t v41 = v82;
          uint64_t v21 = v46;
          goto LABEL_48;
        }
        uint64_t v78 = (char *)v31;
        uint64_t v48 = v46;
        [v25 setItemPendingReconciliationJobCode:qword_100989208[(char)sub_10051F448()]];
        uint64_t v49 = *(void *)(v53 + 96);
        uint64_t v50 = *(void *)(v53 + 104);
        unsigned int v51 = *(unsigned __int8 *)(v53 + 112);
        sub_10009C5FC(v49, v50, *(unsigned char *)(v53 + 112));
        swift_release();
        uint64_t v47 = 0;
        char v52 = 1;
        goto LABEL_34;
      }
      uint64_t v26 = v78;
      char v30 = v79;
    }
    sub_10096A590();
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_10010DA14();
    sub_10096ABD0();
    uint64_t v31 = sub_10096A4D0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    swift_errorRelease();
    if ((v27 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }

  swift_errorRelease();
  id v19 = 0;
  uint64_t v20 = v85;
  uint64_t v21 = v86;
LABEL_57:
  *uint64_t v20 = v19;
}

void sub_100699408(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v98 = a5;
  uint64_t v99 = a4;
  uint64_t v97 = a2;
  uint64_t v8 = sub_10096B480();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [objc_allocWithZone((Class)FPImportItemPendingScanningDisk) init];
  id v13 = a1;
  unint64_t v14 = sub_100618348(v13, 0);
  if (!v5)
  {
    id v19 = (void *)v14;
    int v20 = v15;
    uint64_t v94 = v11;
    uint64_t v90 = v9;
    uint64_t v91 = v8;
    id v100 = v12;

    uint64_t v93 = a3;
    int v96 = v20;
    if (v20 != 2 || v19)
    {
      if (v20 != 2 || v19 != (void *)1)
      {
        uint64_t aBlock = 0x2F73662F70665F5FLL;
        unint64_t v103 = 0xE800000000000000;
        v108._countAndFlagsBits = VFSItemID.parseableString.getter((uint64_t)v19, v20);
        sub_10096BDC0(v108);
        swift_bridgeObjectRelease();
        NSString v22 = sub_10096BC00();
        swift_bridgeObjectRelease();
LABEL_11:
        [v100 setItemIdentifier:v22];

        uint64_t v23 = v97;
        uint64_t v24 = *(void *)(v97 + 24);
        uint64_t v95 = (uint64_t)v19;
        uint64_t aBlock = (uint64_t)v19;
        LOBYTE(v103) = v96;
        sub_10057A6F4();
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_100973BB0;
        *(void *)(v25 + 32) = sub_10002B7CC(&qword_100AD6388);
        uint64_t v26 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)v24 + 272))(&aBlock, v25);
        id v89 = (uint64_t (*)())v13;
        unint64_t v32 = v26;
        swift_bridgeObjectRelease();
        if (v32 >> 62) {
          goto LABEL_76;
        }
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_42;
        }
LABEL_77:
        swift_bridgeObjectRelease();
        id v57 = v100;
        [v100 setItemPendingScanningDiskEnumerationStatus:-1];
        uint64_t v55 = 0;
        char v85 = v96;
LABEL_12:
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingReconciliation:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenNotPendingReconciliation:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingRejection:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncUp:0];
        unsigned __int8 v27 = *(void **)(v23 + qword_100B0B1B0);
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = v95;
        *(unsigned char *)(v28 + 24) = v85;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_10069E60C;
        *(void *)(v29 + 24) = v28;
        uint64_t v106 = sub_1001FB2E8;
        uint64_t v107 = v29;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        unint64_t v103 = 1107296256;
        uint64_t v104 = sub_10017090C;
        uint64_t v105 = &unk_100A95F38;
        char v30 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t aBlock = 0;
        id v88 = v27;
        id v31 = [v27 fetchSwift:v30 error:&aBlock];
        _Block_release(v30);
        uint64_t v23 = aBlock;
        unint64_t v32 = (unint64_t)(id)aBlock;
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (isEscapingClosureAtFileLocation) {
          goto LABEL_73;
        }
        uint64_t v92 = v28;
        if (v31)
        {
          uint64_t v34 = &selRef_stringWithFormat_;
          if ([v31 next])
          {
            uint64_t v35 = v97;
            do
            {
              sub_10069B1EC(v31, v57, v35);
            }
            while (([v31 next] & 1) != 0);
          }
          v87[1] = v55;
          [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion:0];
          [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent:0];
          [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncDown:0];
          uint64_t v37 = v89;
          NSString v38 = [v37 stringAtIndex:2];
          if (!v38)
          {
            _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
            NSString v38 = sub_10096BC00();
            swift_bridgeObjectRelease();
          }

          uint64_t v39 = swift_allocObject();
          *(void *)(v39 + 16) = v38;
          uint64_t v40 = swift_allocObject();
          *(void *)(v40 + 16) = sub_10069E594;
          *(void *)(v40 + 24) = v39;
          uint64_t v106 = sub_1001FB2E8;
          uint64_t v107 = v40;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          unint64_t v103 = 1107296256;
          uint64_t v104 = sub_10017090C;
          uint64_t v105 = &unk_100A95FD8;
          uint64_t v41 = _Block_copy(&aBlock);
          id v89 = v38;
          swift_retain();
          swift_release();
          uint64_t aBlock = 0;
          id v42 = [v88 fetchSwift:v41 error:&aBlock];
          _Block_release(v41);
          unint64_t v32 = (unint64_t)(id)aBlock;
          uint64_t v23 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if (v23) {
            goto LABEL_75;
          }
          uint64_t v97 = v39;
          if (v42)
          {
            if ([v42 next])
            {
              unint64_t v32 = (unint64_t)&selRef_stringWithFormat_;
              do
              {
                uint64_t v23 = (uint64_t)v34;
                unsigned __int8 v44 = [v42 longAtIndex:1];
                id v45 = v100;
                if ((v44 & 0xD) != 0)
                {
                  uint64_t v46 = (char *)[v100 itemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion];
                  if (__OFADD__(v46, 1))
                  {
                    __break(1u);
LABEL_72:
                    __break(1u);
LABEL_73:
                    __break(1u);
LABEL_74:
                    __break(1u);
LABEL_75:
                    __break(1u);
LABEL_76:
                    swift_bridgeObjectRetain();
                    uint64_t v86 = sub_10096CE70();
                    swift_bridgeObjectRelease();
                    if (!v86) {
                      goto LABEL_77;
                    }
LABEL_42:
                    if ((v32 & 0xC000000000000001) != 0)
                    {
                      uint64_t v55 = sub_10096CC30();
                    }
                    else
                    {
                      if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                        __break(1u);
                      }
                      uint64_t v55 = *(void *)(v32 + 32);
                      swift_retain();
                    }
                    swift_bridgeObjectRelease();
                    swift_retain();
                    unsigned int v56 = sub_1003FD34C(1);
                    id v57 = v100;
                    LODWORD(v92) = v56;
                    uint64_t v70 = *(void **)(v55 + 96);
                    uint64_t v71 = *(void *)(v55 + 104);
                    char v72 = *(unsigned char *)(v55 + 112);
                    uint64_t v73 = *(void **)(v23 + 168);
                    swift_retain();
                    id v88 = v70;
                    sub_10009C5FC((uint64_t)v70, v71, v72);
                    if (objc_sync_enter(v73)) {
                      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v73);
                    }
                    swift_beginAccess();
                    swift_bridgeObjectRetain();
                    if (objc_sync_exit(v73)) {
                      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v73);
                    }
                    swift_release();
                    swift_beginAccess();
                    sub_1003B32B0(v55 + 56, (uint64_t)&aBlock);
                    uint64_t v74 = (uint64_t)v88;
                    uint64_t v75 = sub_10069DA0C(v92, (uint64_t)v88, v71, v72);
                    char v77 = v76;
                    sub_1000D31F8(v74, v71, v72);
                    sub_1003B3318((uint64_t)&aBlock);
                    swift_bridgeObjectRelease();
                    if (v77) {
                      uint64_t v78 = -2;
                    }
                    else {
                      uint64_t v78 = v75;
                    }
                    [v57 setItemPendingScanningDiskEnumerationStatus:v78];
                    int v79 = *(unsigned __int8 *)(v55 + 112);
                    if (*(unsigned char *)(v55 + 112))
                    {
                      uint64_t v80 = *(void *)(v55 + 96);
                      BOOL v81 = v80 == 0;
                      BOOL v82 = v80 != 0;
                      unsigned int v83 = !v81;
                      if (v79 != 2) {
                        unsigned int v83 = 0;
                      }
                      if (v79 == 1) {
                        uint64_t v84 = v82;
                      }
                      else {
                        uint64_t v84 = v83;
                      }
                    }
                    else
                    {
                      uint64_t v84 = *(void *)(v55 + 104) != 0;
                    }
                    char v85 = v96;
                    uint64_t v23 = v97;
                    [v57 setItemPendingScanningDiskHasMultiplePagesEnumeration:v84];
                    swift_release();
                    goto LABEL_12;
                  }
                  [v45 setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion:v46 + 1];
                }
                unint64_t v47 = (unint64_t)[v42 longAtIndex:2];
                id v48 = [v42 longAtIndex:3];
                uint64_t v105 = &type metadata for Int;
                uint64_t aBlock = (uint64_t)v48;
                if (swift_dynamicCast())
                {
                  uint64_t v49 = v101;
                  id v50 = [v42 longAtIndex:4];
                  if (v49 || v50 != (id)2) {
                    goto LABEL_33;
                  }
                  if (qword_100ACC0F0 != -1) {
                    swift_once();
                  }
                  if ((static Fields.all & ~v47) != 0)
                  {
LABEL_33:
                    if ((v47 & 2) != 0)
                    {
                      id v51 = v100;
                      char v52 = (char *)[v100 itemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent];
                      if (__OFADD__(v52, 1)) {
                        goto LABEL_74;
                      }
                      [v51 setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent:v52 + 1];
                    }
                    else if (!v47)
                    {
                      goto LABEL_23;
                    }
                    id v53 = v100;
                    uint64_t v54 = (char *)[v100 itemPendingScanningDiskNumberOfChildrenPendingSyncDown];
                    if (__OFADD__(v54, 1)) {
                      goto LABEL_72;
                    }
                    [v53 setItemPendingScanningDiskNumberOfChildrenPendingSyncDown:v54 + 1];
                  }
                }
LABEL_23:
                uint64_t v34 = (char **)v23;
              }
              while (([v42 *(SEL *)(v23 + 3016)] & 1) != 0);
            }

            swift_release();
            uint64_t v58 = sub_10069E594;
            uint64_t v18 = v98;
            int v17 = v99;
            id v59 = v93;
LABEL_53:
            dispatch_group_enter(v59);
            uint64_t v67 = swift_allocObject();
            id v68 = v100;
            *(void *)(v67 + 16) = v100;
            *(void *)(v67 + 24) = v59;
            id v16 = v68;
            uint64_t v69 = v59;
            sub_1002D6F2C(v95, v96, (uint64_t)sub_10069E550, v67);
            swift_release();
            swift_release();
            sub_1000705CC((uint64_t)v58);

            goto LABEL_54;
          }
          sub_10096ABF0();

          swift_willThrow();
          swift_release();
          id v89 = sub_10069E594;
        }
        else
        {
          sub_10096ABF0();

          swift_willThrow();
          swift_release();
          id v89 = 0;
          uint64_t v97 = 0;
        }
        id v60 = (id)fpfs_current_or_default_log();
        uint64_t v61 = v94;
        sub_10096B490();
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v62 = sub_10096B470();
        os_log_type_t v63 = sub_10096C5B0();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = (uint8_t *)swift_slowAlloc();
          uint64_t v65 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v64 = 138412290;
          swift_errorRetain();
          uint64_t v66 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t aBlock = v66;
          sub_10096C8C0();
          *uint64_t v65 = v66;
          uint64_t v61 = v94;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v62, v63, "Failed gathering info for item pending scanning disk %@", v64, 0xCu);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v18 = v98;
        int v17 = v99;
        id v59 = v93;
        (*(void (**)(char *, uint64_t))(v90 + 8))(v61, v91);
        uint64_t v58 = v89;
        goto LABEL_53;
      }
      uint64_t v21 = (id *)&NSFileProviderTrashContainerItemIdentifier;
    }
    else
    {
      uint64_t v21 = (id *)&NSFileProviderRootContainerItemIdentifier;
    }
    NSString v22 = *v21;
    goto LABEL_11;
  }

  swift_errorRelease();
  id v16 = 0;
  uint64_t v18 = v98;
  int v17 = v99;
LABEL_54:
  *uint64_t v18 = v16;
}

void sub_10069A26C(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v98 = a5;
  uint64_t v99 = a4;
  uint64_t v97 = a2;
  uint64_t v8 = sub_10096B480();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [objc_allocWithZone((Class)FPImportItemPendingScanningDisk) init];
  id v13 = a1;
  unint64_t v14 = sub_100618348(v13, 0);
  if (!v5)
  {
    id v19 = (void *)v14;
    int v20 = v15;
    uint64_t v94 = v11;
    uint64_t v90 = v9;
    uint64_t v91 = v8;
    id v100 = v12;

    uint64_t v93 = a3;
    int v96 = v20;
    if (v20 != 2 || v19)
    {
      if (v20 != 2 || v19 != (void *)1)
      {
        uint64_t aBlock = 0x2F73662F70665F5FLL;
        unint64_t v103 = 0xE800000000000000;
        v108._countAndFlagsBits = VFSItemID.parseableString.getter((uint64_t)v19, v20);
        sub_10096BDC0(v108);
        swift_bridgeObjectRelease();
        NSString v22 = sub_10096BC00();
        swift_bridgeObjectRelease();
LABEL_11:
        [v100 setItemIdentifier:v22];

        uint64_t v23 = v97;
        uint64_t v24 = *(void *)(v97 + 24);
        uint64_t v95 = (uint64_t)v19;
        uint64_t aBlock = (uint64_t)v19;
        LOBYTE(v103) = v96;
        sub_10057A6F4();
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_100973BB0;
        *(void *)(v25 + 32) = sub_10002B7CC(&qword_100AD6388);
        uint64_t v26 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)v24 + 272))(&aBlock, v25);
        id v89 = (uint64_t (*)(void *))v13;
        unint64_t v32 = v26;
        swift_bridgeObjectRelease();
        if (v32 >> 62) {
          goto LABEL_76;
        }
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_42;
        }
LABEL_77:
        swift_bridgeObjectRelease();
        id v57 = v100;
        [v100 setItemPendingScanningDiskEnumerationStatus:-1];
        uint64_t v55 = 0;
        char v85 = v96;
LABEL_12:
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingReconciliation:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenNotPendingReconciliation:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingRejection:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent:0];
        [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncUp:0];
        unsigned __int8 v27 = *(void **)(v23 + qword_100B0B1B0);
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = v95;
        *(unsigned char *)(v28 + 24) = v85;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_10069E4B4;
        *(void *)(v29 + 24) = v28;
        uint64_t v106 = sub_1001FB2E8;
        uint64_t v107 = v29;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        unint64_t v103 = 1107296256;
        uint64_t v104 = sub_10017090C;
        uint64_t v105 = &unk_100A95D58;
        char v30 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t aBlock = 0;
        id v88 = v27;
        id v31 = [v27 fetchSwift:v30 error:&aBlock];
        _Block_release(v30);
        uint64_t v23 = aBlock;
        unint64_t v32 = (unint64_t)(id)aBlock;
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (isEscapingClosureAtFileLocation) {
          goto LABEL_73;
        }
        uint64_t v92 = v28;
        if (v31)
        {
          uint64_t v34 = &selRef_stringWithFormat_;
          if ([v31 next])
          {
            uint64_t v35 = v97;
            do
            {
              sub_10069B1EC(v31, v57, v35);
            }
            while (([v31 next] & 1) != 0);
          }
          v87[1] = v55;
          [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion:0];
          [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent:0];
          [v57 setItemPendingScanningDiskNumberOfChildrenPendingSyncDown:0];
          uint64_t v37 = v89;
          NSString v38 = [v37 stringAtIndex:2];
          if (!v38)
          {
            _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
            NSString v38 = sub_10096BC00();
            swift_bridgeObjectRelease();
          }

          uint64_t v39 = swift_allocObject();
          *(void *)(v39 + 16) = v38;
          uint64_t v40 = swift_allocObject();
          *(void *)(v40 + 16) = sub_10069E510;
          *(void *)(v40 + 24) = v39;
          uint64_t v106 = sub_1001FB2E8;
          uint64_t v107 = v40;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          unint64_t v103 = 1107296256;
          uint64_t v104 = sub_10017090C;
          uint64_t v105 = &unk_100A95DF8;
          uint64_t v41 = _Block_copy(&aBlock);
          id v89 = v38;
          swift_retain();
          swift_release();
          uint64_t aBlock = 0;
          id v42 = [v88 fetchSwift:v41 error:&aBlock];
          _Block_release(v41);
          unint64_t v32 = (unint64_t)(id)aBlock;
          uint64_t v23 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if (v23) {
            goto LABEL_75;
          }
          uint64_t v97 = v39;
          if (v42)
          {
            if ([v42 next])
            {
              unint64_t v32 = (unint64_t)&selRef_stringWithFormat_;
              do
              {
                uint64_t v23 = (uint64_t)v34;
                unsigned __int8 v44 = [v42 longAtIndex:1];
                id v45 = v100;
                if ((v44 & 0xD) != 0)
                {
                  uint64_t v46 = (char *)[v100 itemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion];
                  if (__OFADD__(v46, 1))
                  {
                    __break(1u);
LABEL_72:
                    __break(1u);
LABEL_73:
                    __break(1u);
LABEL_74:
                    __break(1u);
LABEL_75:
                    __break(1u);
LABEL_76:
                    swift_bridgeObjectRetain();
                    uint64_t v86 = sub_10096CE70();
                    swift_bridgeObjectRelease();
                    if (!v86) {
                      goto LABEL_77;
                    }
LABEL_42:
                    if ((v32 & 0xC000000000000001) != 0)
                    {
                      uint64_t v55 = sub_10096CC30();
                    }
                    else
                    {
                      if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                        __break(1u);
                      }
                      uint64_t v55 = *(void *)(v32 + 32);
                      swift_retain();
                    }
                    swift_bridgeObjectRelease();
                    swift_retain();
                    unsigned int v56 = sub_1003FD34C(1);
                    id v57 = v100;
                    LODWORD(v92) = v56;
                    uint64_t v70 = *(void **)(v55 + 96);
                    uint64_t v71 = *(void *)(v55 + 104);
                    char v72 = *(unsigned char *)(v55 + 112);
                    uint64_t v73 = *(void **)(v23 + 168);
                    swift_retain();
                    id v88 = v70;
                    sub_10009C5FC((uint64_t)v70, v71, v72);
                    if (objc_sync_enter(v73)) {
                      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v73);
                    }
                    swift_beginAccess();
                    swift_bridgeObjectRetain();
                    if (objc_sync_exit(v73)) {
                      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v73);
                    }
                    swift_release();
                    swift_beginAccess();
                    sub_1003B32B0(v55 + 56, (uint64_t)&aBlock);
                    uint64_t v74 = (uint64_t)v88;
                    uint64_t v75 = sub_10069DA0C(v92, (uint64_t)v88, v71, v72);
                    char v77 = v76;
                    sub_1000D31F8(v74, v71, v72);
                    sub_1003B3318((uint64_t)&aBlock);
                    swift_bridgeObjectRelease();
                    if (v77) {
                      uint64_t v78 = -2;
                    }
                    else {
                      uint64_t v78 = v75;
                    }
                    [v57 setItemPendingScanningDiskEnumerationStatus:v78];
                    int v79 = *(unsigned __int8 *)(v55 + 112);
                    if (*(unsigned char *)(v55 + 112))
                    {
                      uint64_t v80 = *(void *)(v55 + 96);
                      BOOL v81 = v80 == 0;
                      BOOL v82 = v80 != 0;
                      unsigned int v83 = !v81;
                      if (v79 != 2) {
                        unsigned int v83 = 0;
                      }
                      if (v79 == 1) {
                        uint64_t v84 = v82;
                      }
                      else {
                        uint64_t v84 = v83;
                      }
                    }
                    else
                    {
                      uint64_t v84 = *(void *)(v55 + 104) != 0;
                    }
                    char v85 = v96;
                    uint64_t v23 = v97;
                    [v57 setItemPendingScanningDiskHasMultiplePagesEnumeration:v84];
                    swift_release();
                    goto LABEL_12;
                  }
                  [v45 setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion:v46 + 1];
                }
                unint64_t v47 = (unint64_t)[v42 longAtIndex:2];
                id v48 = [v42 longAtIndex:3];
                uint64_t v105 = &type metadata for Int;
                uint64_t aBlock = (uint64_t)v48;
                if (swift_dynamicCast())
                {
                  uint64_t v49 = v101;
                  id v50 = [v42 longAtIndex:4];
                  if (v49 || v50 != (id)2) {
                    goto LABEL_33;
                  }
                  if (qword_100ACC0F0 != -1) {
                    swift_once();
                  }
                  if ((static Fields.all & ~v47) != 0)
                  {
LABEL_33:
                    if ((v47 & 2) != 0)
                    {
                      id v51 = v100;
                      char v52 = (char *)[v100 itemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent];
                      if (__OFADD__(v52, 1)) {
                        goto LABEL_74;
                      }
                      [v51 setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent:v52 + 1];
                    }
                    else if (!v47)
                    {
                      goto LABEL_23;
                    }
                    id v53 = v100;
                    uint64_t v54 = (char *)[v100 itemPendingScanningDiskNumberOfChildrenPendingSyncDown];
                    if (__OFADD__(v54, 1)) {
                      goto LABEL_72;
                    }
                    [v53 setItemPendingScanningDiskNumberOfChildrenPendingSyncDown:v54 + 1];
                  }
                }
LABEL_23:
                uint64_t v34 = (char **)v23;
              }
              while (([v42 *(SEL *)(v23 + 3016)] & 1) != 0);
            }

            swift_release();
            uint64_t v58 = sub_10069E510;
            uint64_t v18 = v98;
            int v17 = v99;
            id v59 = v93;
LABEL_53:
            dispatch_group_enter(v59);
            uint64_t v67 = swift_allocObject();
            id v68 = v100;
            *(void *)(v67 + 16) = v100;
            *(void *)(v67 + 24) = v59;
            id v16 = v68;
            uint64_t v69 = v59;
            sub_1002D6F2C(v95, v96, (uint64_t)sub_10069E47C, v67);
            swift_release();
            swift_release();
            sub_1000705CC((uint64_t)v58);

            goto LABEL_54;
          }
          sub_10096ABF0();

          swift_willThrow();
          swift_release();
          id v89 = sub_10069E510;
        }
        else
        {
          sub_10096ABF0();

          swift_willThrow();
          swift_release();
          id v89 = 0;
          uint64_t v97 = 0;
        }
        id v60 = (id)fpfs_current_or_default_log();
        uint64_t v61 = v94;
        sub_10096B490();
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v62 = sub_10096B470();
        os_log_type_t v63 = sub_10096C5B0();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = (uint8_t *)swift_slowAlloc();
          uint64_t v65 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v64 = 138412290;
          swift_errorRetain();
          uint64_t v66 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t aBlock = v66;
          sub_10096C8C0();
          *uint64_t v65 = v66;
          uint64_t v61 = v94;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v62, v63, "Failed gathering info for item pending scanning disk %@", v64, 0xCu);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v18 = v98;
        int v17 = v99;
        id v59 = v93;
        (*(void (**)(char *, uint64_t))(v90 + 8))(v61, v91);
        uint64_t v58 = v89;
        goto LABEL_53;
      }
      uint64_t v21 = (id *)&NSFileProviderTrashContainerItemIdentifier;
    }
    else
    {
      uint64_t v21 = (id *)&NSFileProviderRootContainerItemIdentifier;
    }
    NSString v22 = *v21;
    goto LABEL_11;
  }

  swift_errorRelease();
  id v16 = 0;
  uint64_t v18 = v98;
  int v17 = v99;
LABEL_54:
  *uint64_t v18 = v16;
}

uint64_t sub_10069B0D0(void *a1, unint64_t a2, char a3)
{
  sub_10096CBD0(265);
  v12._countAndFlagsBits = 0xD0000000000000E1;
  v12._object = (void *)0x80000001009AF4D0;
  sub_10096BDC0(v12);
  if (!a3) {
    goto LABEL_5;
  }
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  id v6 = objc_msgSend(a1, "bindLongParameter:", a2, 0, 0xE000000000000000);
  uint64_t v7 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v9 = v8;

  v13._countAndFlagsBits = v7;
  v13._object = v9;
  sub_10096BDC0(v13);
  swift_bridgeObjectRelease();
  v14._object = (void *)0x80000001009AF5C0;
  v14._countAndFlagsBits = 0xD000000000000026;
  sub_10096BDC0(v14);
  return v11;
}

uint64_t sub_10069B1EC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (([a1 isNullAtIndex:1] & 1) == 0)
  {
    unsigned __int8 v8 = sub_1003FD334(1);
    if (v3)
    {
      swift_errorRelease();
      uint64_t v4 = 0;
    }
    else if (!v8)
    {
      uint64_t result = (uint64_t)[a2 itemPendingScanningDiskNumberOfChildrenPendingReconciliation];
      uint64_t v10 = result + 1;
      if (__OFADD__(result, 1))
      {
LABEL_42:
        __break(1u);
        return result;
      }
      uint64_t v11 = &selRef_setItemPendingScanningDiskNumberOfChildrenPendingReconciliation_;
      goto LABEL_7;
    }
  }
  uint64_t result = (uint64_t)[a2 itemPendingScanningDiskNumberOfChildrenNotPendingReconciliation];
  uint64_t v10 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v11 = &selRef_setItemPendingScanningDiskNumberOfChildrenNotPendingReconciliation_;
LABEL_7:
  objc_msgSend(a2, *v11, v10);
  unsigned int v12 = [a1 longAtIndex:2];
  char v13 = v12;
  if ((v12 & 0xD) == 0 || (v12 & 0x10) != 0) {
    goto LABEL_11;
  }
  if ((~v12 & 0x82) != 0 || (*(void *)(a3 + 112) & 0x4000) == 0)
  {
LABEL_19:
    uint64_t result = (uint64_t)[a2 itemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion];
    uint64_t v15 = result + 1;
    if (__OFADD__(result, 1))
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    id v16 = &selRef_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion_;
    goto LABEL_21;
  }
  id v18 = a1;
  id v19 = [v18 stringAtIndex:4];
  NSString v20 = v19;
  if (!v19)
  {
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    NSString v20 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }

  uint64_t v21 = sub_100514C2C();
  char v22 = sub_1004EA030(v20, v21);

  uint64_t result = swift_release();
  if (!v4)
  {
    swift_release();
    if (v22)
    {
LABEL_11:
      if ((v13 & 0x40) == 0)
      {
LABEL_22:
        uint64_t result = (uint64_t)[a1 longAtIndex:3];
        if ((result & 2) != 0)
        {
          uint64_t result = (uint64_t)[a2 itemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent];
          if (__OFADD__(result, 1))
          {
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          [a2 setItemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent:result + 1];
        }
        else if (!result)
        {
          return result;
        }
        uint64_t result = (uint64_t)[a2 itemPendingScanningDiskNumberOfChildrenPendingSyncUp];
        if (!__OFADD__(result, 1)) {
          return (uint64_t)[a2 setItemPendingScanningDiskNumberOfChildrenPendingSyncUp:result + 1];
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      uint64_t result = (uint64_t)[a2 itemPendingScanningDiskNumberOfChildrenPendingRejection];
      uint64_t v15 = result + 1;
      if (__OFADD__(result, 1))
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      id v16 = &selRef_setItemPendingScanningDiskNumberOfChildrenPendingRejection_;
LABEL_21:
      objc_msgSend(a2, *v16, v15);
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10069B484(void *a1)
{
  uint64_t v2 = sub_10096BCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_10096CBD0(287);
  v16._countAndFlagsBits = 0xD0000000000000F8;
  v16._object = (void *)0x80000001009AF3A0;
  sub_10096BDC0(v16);
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096BC90();
  uint64_t v6 = sub_10096BC40();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    Class isa = sub_10096AF20().super.isa;
    sub_10001E9AC(v6, v8);
    id v11 = [a1 bindObjectParameter:isa];

    uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    Swift::String v14 = v13;

    v17._countAndFlagsBits = v12;
    v17._object = v14;
    sub_10096BDC0(v17);
    swift_bridgeObjectRelease();
    v18._object = (void *)0x80000001009AF4A0;
    v18._countAndFlagsBits = 0xD000000000000025;
    sub_10096BDC0(v18);
    return v15[0];
  }
  return result;
}

void sub_10069B66C(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, char ***a5@<X8>)
{
  id v6 = v5;
  int v96 = a4;
  uint64_t v94 = a3;
  uint64_t v95 = a5;
  uint64_t v93 = sub_10096B480();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v97 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  NSString v11 = [v10 stringAtIndex:0];
  if (!v11)
  {
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    NSString v11 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }

  uint64_t v12 = (char **)[objc_allocWithZone((Class)FPImportItemPendingScanningProvider) init];
  [v12 setItemIdentifier:v11];
  char v13 = *(char ***)(a2 + 24);
  aBlock[0] = v11;
  sub_10057A754();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100973BB0;
  *(void *)(v14 + 32) = sub_10002B7CC(&qword_100AD6E30);
  uint64_t v15 = (*((uint64_t (**)(id *, uint64_t))*v13 + 33))(aBlock, v14);
  if (!v5)
  {
    unint64_t v29 = v15;
    id v90 = v11;
    uint64_t v91 = a2;
    id v89 = (uint64_t (*)())v10;
    swift_bridgeObjectRelease();
    if (v29 >> 62) {
      goto LABEL_71;
    }
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      Swift::String v18 = v96;
      uint64_t v28 = v12;
      if (v30)
      {
        if ((v29 & 0xC000000000000001) != 0)
        {
          uint64_t v31 = sub_10096CC30();
        }
        else
        {
          if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_74:
            __break(1u);
          }
          uint64_t v31 = *(void *)(v29 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        swift_retain();
        unsigned int v32 = sub_1003FD34C(1);
        if (v6)
        {

          swift_release_n();
          Swift::String v16 = 0;
          uint64_t v17 = 0;
          goto LABEL_5;
        }
        LODWORD(v88) = v32;
        uint64_t v34 = *(void *)(v31 + 96);
        uint64_t v33 = *(void *)(v31 + 104);
        int v35 = *(unsigned __int8 *)(v31 + 112);
        BOOL v36 = v34 != 0;
        BOOL v37 = v36;
        if (v35 != 2) {
          BOOL v37 = 0;
        }
        if (v35 != 1) {
          BOOL v36 = v37;
        }
        if (*(unsigned char *)(v31 + 112)) {
          BOOL v38 = v36;
        }
        else {
          BOOL v38 = v33 != 0;
        }
        uint64_t v39 = *(void **)(v91 + 168);
        swift_retain();
        uint64_t v86 = v34;
        sub_10009C5FC(v34, v33, v35);
        if (objc_sync_enter(v39)) {
          sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v39);
        }
        LODWORD(v87) = v38;
        swift_beginAccess();
        v85[1] = v39[2];
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v39)) {
          sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v39);
        }
        swift_release();
        swift_beginAccess();
        sub_1003B32B0(v31 + 56, (uint64_t)aBlock);
        uint64_t v40 = v86;
        uint64_t v88 = sub_10069DA0C(v88, v86, v33, v35);
        char v42 = v41;
        sub_1000D31F8(v40, v33, v35);
        sub_1003B3318((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        id v43 = (id)((v42 & 1) != 0 ? -2 : v88);
        [v28 setItemPendingScanningProviderEnumerationStatus:v43];
        [v28 setItemPendingScanningProviderHasMultiplePagesEnumeration:v87];
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        [v12 setItemPendingScanningProviderEnumerationStatus:-1];
        uint64_t v31 = 0;
      }
      aBlock[0] = v90;
      uint64_t v44 = (*((uint64_t (**)(id *))*v13 + 31))(aBlock);
      id v45 = (char *)v31;
      if (v6) {
        break;
      }
      uint64_t v46 = v44;
      if (!v44) {
        goto LABEL_34;
      }
      if (([v89 longAtIndex:2] & 0x10) != 0)
      {
        uint64_t v49 = *(void *)(v46 + 96);
        uint64_t v48 = *(void *)(v46 + 104);
        uint64_t v50 = *(unsigned __int8 *)(v46 + 112);
        id v51 = *(void **)(v91 + 168);
        swift_retain_n();
        uint64_t v88 = v48;
        sub_10009C5FC(v49, v48, v50);
        if (objc_sync_enter(v51)) {
          sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v51);
        }
        swift_beginAccess();
        uint64_t v52 = v51[2];
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v51)) {
          sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v51);
        }
        swift_release_n();
        swift_beginAccess();
        uint64_t v53 = sub_1003B32B0(v46 + 56, (uint64_t)aBlock);
        switch(v50)
        {
          case 1:
            sub_1000D31F8(v49, v88, 1);
            uint64_t v55 = 0;
            break;
          case 2:
            uint64_t v55 = 2;
            sub_1000D31F8(v49, v88, 2);
            break;
          case 3:
            uint64_t v55 = 3;
            sub_1000D31F8(v49, v88, 3);
            break;
          case 4:
            if (v49 | v88) {
              uint64_t v55 = 5;
            }
            else {
              uint64_t v55 = 4;
            }
            break;
          default:
            __chkstk_darwin(v53);
            v85[-2] = aBlock;
            char v54 = sub_1004B000C((uint64_t (*)(_OWORD *))sub_10069E578, (uint64_t)&v85[-4], v52, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_1001E611C);
            sub_1000D31F8(v49, v88, 0);
            uint64_t v55 = v54 & 1;
            break;
        }
        uint64_t v87 = 0;
        sub_1003B3318((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        unsigned int v56 = v28;
        [v56 setItemPendingScanningProviderRemovalOfDatalessBitStatus:v55];
      }
      else
      {
        uint64_t v87 = 0;
        unint64_t v47 = v28;
        [v47 setItemPendingScanningProviderRemovalOfDatalessBitStatus:-1];
      }
      swift_release();
LABEL_50:
      uint64_t v57 = v91;
      [v28 setItemPendingScanningProviderNumberOfChildren:0];
      [v28 setItemPendingScanningProviderNumberOfChildrenPendingCreation:0];
      [v28 setItemPendingScanningProviderNumberOfChildrenFailingCreation:0];
      uint64_t v58 = *(void **)(v57 + qword_100B0B1B0);
      uint64_t v59 = swift_allocObject();
      id v60 = v90;
      *(void *)(v59 + 16) = v90;
      uint64_t v61 = (void *)swift_allocObject();
      v61[2] = sub_10069E598;
      v61[3] = v59;
      uint64_t v91 = v59;
      aBlock[4] = sub_1001FB2E8;
      aBlock[5] = v61;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_10017090C;
      aBlock[3] = &unk_100A96078;
      uint64_t v62 = _Block_copy(aBlock);
      uint64_t v88 = (uint64_t)v60;
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      id v6 = [v58 fetchSwift:v62 error:aBlock];
      _Block_release(v62);
      id v63 = aBlock[0];
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        goto LABEL_74;
      }
      if (!v6)
      {
        sub_10096ABF0();

        swift_willThrow();
        swift_release();
        Swift::String v16 = sub_10069E598;
        Swift::String v18 = v96;
        uint64_t v17 = v91;
        goto LABEL_5;
      }
      uint64_t v97 = v45;
      if (![v6 next])
      {
LABEL_63:
        uint64_t v73 = v89;
        uint64_t v74 = v87;
        unint64_t v75 = sub_100618348(v73, 3);
        if (v74)
        {

          swift_errorRelease();
          swift_release();

          Swift::String v18 = v96;
        }
        else
        {
          uint64_t v77 = v75;
          char v78 = v76;

          int v79 = v28;
          uint64_t v80 = v94;
          dispatch_group_enter(v94);
          uint64_t v81 = swift_allocObject();
          id v90 = 0;
          uint64_t v82 = v81;
          *(void *)(v81 + 16) = v79;
          *(void *)(v81 + 24) = v80;
          unsigned int v83 = v79;
          uint64_t v84 = v80;
          Swift::String v18 = v96;
          sub_1002D6F2C(v77, v78, (uint64_t)sub_10069E550, v82);

          swift_release();
          swift_release();
        }
        uint64_t v26 = v95;
        swift_release();
        goto LABEL_9;
      }
      char v13 = &selRef_doubleForKey_;
      uint64_t v12 = &selRef_stringWithFormat_;
      while (1)
      {
        unint64_t v29 = v28;
        uint64_t v69 = (char *)[(id)v29 itemPendingScanningProviderNumberOfChildren];
        if (__OFADD__(v69, 1)) {
          break;
        }
        [(id)v29 setItemPendingScanningProviderNumberOfChildren:v69 + 1];

        if ([v6 isNullAtIndex:0])
        {
          unsigned int v70 = [v6 isNullAtIndex:1];
          uint64_t v71 = (id)v29;
          unint64_t v29 = (unint64_t)v71;
          if (v70)
          {
            char v72 = (char *)[v71 itemPendingScanningProviderNumberOfChildrenPendingCreation];
            uint64_t v66 = v72 + 1;
            if (__OFADD__(v72, 1)) {
              goto LABEL_70;
            }
            uint64_t v67 = &selRef_setItemPendingScanningProviderNumberOfChildrenPendingCreation_;
          }
          else
          {
            uint64_t v65 = (char *)[v71 itemPendingScanningProviderNumberOfChildrenFailingCreation];
            uint64_t v66 = v65 + 1;
            if (__OFADD__(v65, 1)) {
              goto LABEL_69;
            }
            uint64_t v67 = &selRef_setItemPendingScanningProviderNumberOfChildrenFailingCreation_;
          }
          objc_msgSend((id)v29, *v67, v66);
        }
        if (([v6 next] & 1) == 0) {
          goto LABEL_63;
        }
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_10096CE70();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
LABEL_34:
    uint64_t v87 = 0;
    [v28 setItemPendingScanningProviderRemovalOfDatalessBitStatus:0];
    goto LABEL_50;
  }

  swift_bridgeObjectRelease();
  Swift::String v16 = 0;
  uint64_t v17 = 0;
  Swift::String v18 = v96;
LABEL_5:
  id v19 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_errorRetain();
  NSString v20 = sub_10096B470();
  os_log_type_t v21 = sub_10096C5B0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    id v90 = 0;
    id v89 = v16;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 138412290;
    uint64_t v91 = v17;
    swift_getErrorValue();
    id v25 = Error.prettyDescription.getter(v98);
    aBlock[0] = v25;
    sub_10096C8C0();
    *uint64_t v24 = v25;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Error gathering telemetry for scanning provider %@", v23, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    Swift::String v16 = v89;
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v26 = v95;
  unsigned __int8 v27 = v94;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v97, v93);
  sub_1000705CC((uint64_t)v16);

  uint64_t v28 = 0;
LABEL_9:
  *uint64_t v26 = v28;
}

void sub_10069C4F0(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, char ***a5@<X8>)
{
  id v6 = v5;
  int v96 = a4;
  uint64_t v94 = a3;
  uint64_t v95 = a5;
  uint64_t v93 = sub_10096B480();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v97 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  NSString v11 = [v10 stringAtIndex:0];
  if (!v11)
  {
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    NSString v11 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }

  uint64_t v12 = (char **)[objc_allocWithZone((Class)FPImportItemPendingScanningProvider) init];
  [v12 setItemIdentifier:v11];
  char v13 = *(char ***)(a2 + 24);
  aBlock[0] = v11;
  sub_10057A754();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100973BB0;
  *(void *)(v14 + 32) = sub_10002B7CC(&qword_100AD6E30);
  uint64_t v15 = (*((uint64_t (**)(id *, uint64_t))*v13 + 33))(aBlock, v14);
  if (!v5)
  {
    unint64_t v29 = v15;
    id v90 = v11;
    uint64_t v91 = a2;
    id v89 = (uint64_t (*)(void *))v10;
    swift_bridgeObjectRelease();
    if (v29 >> 62) {
      goto LABEL_71;
    }
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      Swift::String v18 = v96;
      uint64_t v28 = v12;
      if (v30)
      {
        if ((v29 & 0xC000000000000001) != 0)
        {
          uint64_t v31 = sub_10096CC30();
        }
        else
        {
          if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_74:
            __break(1u);
          }
          uint64_t v31 = *(void *)(v29 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        swift_retain();
        unsigned int v32 = sub_1003FD34C(1);
        if (v6)
        {

          swift_release_n();
          Swift::String v16 = 0;
          uint64_t v17 = 0;
          goto LABEL_5;
        }
        LODWORD(v88) = v32;
        uint64_t v34 = *(void *)(v31 + 96);
        uint64_t v33 = *(void *)(v31 + 104);
        int v35 = *(unsigned __int8 *)(v31 + 112);
        BOOL v36 = v34 != 0;
        BOOL v37 = v36;
        if (v35 != 2) {
          BOOL v37 = 0;
        }
        if (v35 != 1) {
          BOOL v36 = v37;
        }
        if (*(unsigned char *)(v31 + 112)) {
          BOOL v38 = v36;
        }
        else {
          BOOL v38 = v33 != 0;
        }
        uint64_t v39 = *(void **)(v91 + 168);
        swift_retain();
        uint64_t v86 = v34;
        sub_10009C5FC(v34, v33, v35);
        if (objc_sync_enter(v39)) {
          sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v39);
        }
        LODWORD(v87) = v38;
        swift_beginAccess();
        v85[1] = v39[2];
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v39)) {
          sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v39);
        }
        swift_release();
        swift_beginAccess();
        sub_1003B32B0(v31 + 56, (uint64_t)aBlock);
        uint64_t v40 = v86;
        uint64_t v88 = sub_10069DA0C(v88, v86, v33, v35);
        char v42 = v41;
        sub_1000D31F8(v40, v33, v35);
        sub_1003B3318((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        id v43 = (id)((v42 & 1) != 0 ? -2 : v88);
        [v28 setItemPendingScanningProviderEnumerationStatus:v43];
        [v28 setItemPendingScanningProviderHasMultiplePagesEnumeration:v87];
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        [v12 setItemPendingScanningProviderEnumerationStatus:-1];
        uint64_t v31 = 0;
      }
      aBlock[0] = v90;
      uint64_t v44 = (*((uint64_t (**)(id *))*v13 + 31))(aBlock);
      id v45 = (char *)v31;
      if (v6) {
        break;
      }
      uint64_t v46 = v44;
      if (!v44) {
        goto LABEL_34;
      }
      if (([v89 longAtIndex:2] & 0x10) != 0)
      {
        uint64_t v49 = *(void *)(v46 + 96);
        uint64_t v48 = *(void *)(v46 + 104);
        uint64_t v50 = *(unsigned __int8 *)(v46 + 112);
        id v51 = *(void **)(v91 + 168);
        swift_retain_n();
        uint64_t v88 = v48;
        sub_10009C5FC(v49, v48, v50);
        if (objc_sync_enter(v51)) {
          sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v51);
        }
        swift_beginAccess();
        uint64_t v52 = v51[2];
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v51)) {
          sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v51);
        }
        swift_release_n();
        swift_beginAccess();
        uint64_t v53 = sub_1003B32B0(v46 + 56, (uint64_t)aBlock);
        switch(v50)
        {
          case 1:
            sub_1000D31F8(v49, v88, 1);
            uint64_t v55 = 0;
            break;
          case 2:
            uint64_t v55 = 2;
            sub_1000D31F8(v49, v88, 2);
            break;
          case 3:
            uint64_t v55 = 3;
            sub_1000D31F8(v49, v88, 3);
            break;
          case 4:
            if (v49 | v88) {
              uint64_t v55 = 5;
            }
            else {
              uint64_t v55 = 4;
            }
            break;
          default:
            __chkstk_darwin(v53);
            v85[-2] = aBlock;
            char v54 = sub_1004B000C((uint64_t (*)(_OWORD *))sub_10069E484, (uint64_t)&v85[-4], v52, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_1001E611C);
            sub_1000D31F8(v49, v88, 0);
            uint64_t v55 = v54 & 1;
            break;
        }
        uint64_t v87 = 0;
        sub_1003B3318((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        unsigned int v56 = v28;
        [v56 setItemPendingScanningProviderRemovalOfDatalessBitStatus:v55];
      }
      else
      {
        uint64_t v87 = 0;
        unint64_t v47 = v28;
        [v47 setItemPendingScanningProviderRemovalOfDatalessBitStatus:-1];
      }
      swift_release();
LABEL_50:
      uint64_t v57 = v91;
      [v28 setItemPendingScanningProviderNumberOfChildren:0];
      [v28 setItemPendingScanningProviderNumberOfChildrenPendingCreation:0];
      [v28 setItemPendingScanningProviderNumberOfChildrenFailingCreation:0];
      uint64_t v58 = *(void **)(v57 + qword_100B0B1B0);
      uint64_t v59 = swift_allocObject();
      id v60 = v90;
      *(void *)(v59 + 16) = v90;
      uint64_t v61 = (void *)swift_allocObject();
      v61[2] = sub_10069E464;
      v61[3] = v59;
      uint64_t v91 = v59;
      aBlock[4] = sub_1001F8FDC;
      aBlock[5] = v61;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_10017090C;
      aBlock[3] = &unk_100A95C90;
      uint64_t v62 = _Block_copy(aBlock);
      uint64_t v88 = (uint64_t)v60;
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      id v6 = [v58 fetchSwift:v62 error:aBlock];
      _Block_release(v62);
      id v63 = aBlock[0];
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        goto LABEL_74;
      }
      if (!v6)
      {
        sub_10096ABF0();

        swift_willThrow();
        swift_release();
        Swift::String v16 = sub_10069E464;
        Swift::String v18 = v96;
        uint64_t v17 = v91;
        goto LABEL_5;
      }
      uint64_t v97 = v45;
      if (![v6 next])
      {
LABEL_63:
        uint64_t v73 = v89;
        uint64_t v74 = v87;
        unint64_t v75 = sub_100618348(v73, 3);
        if (v74)
        {

          swift_errorRelease();
          swift_release();

          Swift::String v18 = v96;
        }
        else
        {
          uint64_t v77 = v75;
          char v78 = v76;

          int v79 = v28;
          uint64_t v80 = v94;
          dispatch_group_enter(v94);
          uint64_t v81 = swift_allocObject();
          id v90 = 0;
          uint64_t v82 = v81;
          *(void *)(v81 + 16) = v79;
          *(void *)(v81 + 24) = v80;
          unsigned int v83 = v79;
          uint64_t v84 = v80;
          Swift::String v18 = v96;
          sub_1002D6F2C(v77, v78, (uint64_t)sub_10069E47C, v82);

          swift_release();
          swift_release();
        }
        uint64_t v26 = v95;
        swift_release();
        goto LABEL_9;
      }
      char v13 = &selRef_doubleForKey_;
      uint64_t v12 = &selRef_stringWithFormat_;
      while (1)
      {
        unint64_t v29 = v28;
        uint64_t v69 = (char *)[(id)v29 itemPendingScanningProviderNumberOfChildren];
        if (__OFADD__(v69, 1)) {
          break;
        }
        [(id)v29 setItemPendingScanningProviderNumberOfChildren:v69 + 1];

        if ([v6 isNullAtIndex:0])
        {
          unsigned int v70 = [v6 isNullAtIndex:1];
          uint64_t v71 = (id)v29;
          unint64_t v29 = (unint64_t)v71;
          if (v70)
          {
            char v72 = (char *)[v71 itemPendingScanningProviderNumberOfChildrenPendingCreation];
            uint64_t v66 = v72 + 1;
            if (__OFADD__(v72, 1)) {
              goto LABEL_70;
            }
            uint64_t v67 = &selRef_setItemPendingScanningProviderNumberOfChildrenPendingCreation_;
          }
          else
          {
            uint64_t v65 = (char *)[v71 itemPendingScanningProviderNumberOfChildrenFailingCreation];
            uint64_t v66 = v65 + 1;
            if (__OFADD__(v65, 1)) {
              goto LABEL_69;
            }
            uint64_t v67 = &selRef_setItemPendingScanningProviderNumberOfChildrenFailingCreation_;
          }
          objc_msgSend((id)v29, *v67, v66);
        }
        if (([v6 next] & 1) == 0) {
          goto LABEL_63;
        }
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_10096CE70();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
LABEL_34:
    uint64_t v87 = 0;
    [v28 setItemPendingScanningProviderRemovalOfDatalessBitStatus:0];
    goto LABEL_50;
  }

  swift_bridgeObjectRelease();
  Swift::String v16 = 0;
  uint64_t v17 = 0;
  Swift::String v18 = v96;
LABEL_5:
  id v19 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_errorRetain();
  NSString v20 = sub_10096B470();
  os_log_type_t v21 = sub_10096C5B0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    id v90 = 0;
    id v89 = v16;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 138412290;
    uint64_t v91 = v17;
    swift_getErrorValue();
    id v25 = Error.prettyDescription.getter(v98);
    aBlock[0] = v25;
    sub_10096C8C0();
    *uint64_t v24 = v25;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Error gathering telemetry for scanning provider %@", v23, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    Swift::String v16 = v89;
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v26 = v95;
  unsigned __int8 v27 = v94;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v97, v93);
  sub_1000705CC((uint64_t)v16);

  uint64_t v28 = 0;
LABEL_9:
  *uint64_t v26 = v28;
}

uint64_t sub_10069D374(void *a1)
{
  id v14 = a1;
  uint64_t v1 = sub_10096BCB0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_10096CBD0(635);
  v18._countAndFlagsBits = 0xD000000000000105;
  v18._object = (void *)0x80000001009AF090;
  sub_10096BDC0(v18);
  uint64_t v15 = 5;
  v19._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0xD00000000000003ELL;
  v20._object = (void *)0x80000001009AF1A0;
  sub_10096BDC0(v20);
  uint64_t v15 = 26;
  v21._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 0xD00000000000003ELL;
  v22._object = (void *)0x80000001009AF1A0;
  sub_10096BDC0(v22);
  uint64_t v15 = 1;
  v23._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 0xD00000000000003ELL;
  v24._object = (void *)0x80000001009AF1A0;
  sub_10096BDC0(v24);
  uint64_t v15 = 8;
  v25._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 0xD000000000000039;
  v26._object = (void *)0x80000001009AF1E0;
  sub_10096BDC0(v26);
  uint64_t v15 = 1;
  v27._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v27);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 0xD000000000000061;
  v28._object = (void *)0x80000001009AF220;
  sub_10096BDC0(v28);
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096BC90();
  uint64_t v5 = sub_10096BC40();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v7 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    Class isa = sub_10096AF20().super.isa;
    sub_10001E9AC(v5, v7);
    id v10 = [v14 bindObjectParameter:isa];

    uint64_t v11 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    char v13 = v12;

    v29._countAndFlagsBits = v11;
    v29._object = v13;
    sub_10096BDC0(v29);
    swift_bridgeObjectRelease();
    v30._countAndFlagsBits = 0xD000000000000016;
    v30._object = (void *)0x80000001009AF290;
    sub_10096BDC0(v30);
    return v16;
  }
  return result;
}

uint64_t sub_10069D6C8()
{
  sub_10096CBD0(352);
  v1._countAndFlagsBits = 0xD0000000000000D7;
  v1._object = (void *)0x80000001009AF6B0;
  sub_10096BDC0(v1);
  v2._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000001009AF790;
  v3._countAndFlagsBits = 0xD00000000000001ELL;
  sub_10096BDC0(v3);
  v4._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0xD00000000000001FLL;
  v5._object = (void *)0x800000010099DFB0;
  sub_10096BDC0(v5);
  v6._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0xD000000000000046;
  v7._object = (void *)0x80000001009AF7B0;
  sub_10096BDC0(v7);
  return 0;
}

uint64_t sub_10069D828()
{
  sub_10096CBD0(172);
  v1._countAndFlagsBits = 0xD000000000000079;
  v1._object = (void *)0x80000001009AF5F0;
  sub_10096BDC0(v1);
  v2._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000001009AF670;
  v3._countAndFlagsBits = 0xD000000000000031;
  sub_10096BDC0(v3);
  return 0;
}

uint64_t sub_10069D8E8()
{
  sub_10096CBD0(222);
  v1._countAndFlagsBits = 0xD000000000000090;
  v1._object = (void *)0x80000001009AF2B0;
  sub_10096BDC0(v1);
  v2._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000001009AF350;
  v3._countAndFlagsBits = 0xD00000000000004CLL;
  sub_10096BDC0(v3);
  return 0;
}

void sub_10069D9A4(void *a1, uint64_t a2, void *a3, void *a4)
{
}

uint64_t sub_10069DA0C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  void (*v8)(uint64_t *__return_ptr, _OWORD *);
  void v9[12];

  uint64_t result = result;
  switch((char)result)
  {
    case 1:
    case 3:
      uint64_t result = 0;
      switch(a4)
      {
        case 1:
          return result;
        case 2:
          uint64_t result = 2;
          break;
        case 3:
          uint64_t result = 3;
          break;
        case 4:
          if (a2 | a3) {
            uint64_t result = 5;
          }
          else {
            uint64_t result = 4;
          }
          break;
        default:
          v9[10] = v4;
          v9[11] = v5;
          __chkstk_darwin(0);
          v9[2] = v6;
          uint64_t result = sub_1004B000C((uint64_t (*)(_OWORD *))sub_10069E578, (uint64_t)v9, v7, v8) & 1;
          break;
      }
      break;
    case 2:
      uint64_t result = 5;
      break;
    case 4:
      uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void sub_10069DB64(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_10069DBCC(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_10069DC34(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_10069DC9C(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, uint64_t, id, id, id))
{
  uint64_t v11 = *(void **)(a2 + qword_100B0B1B0);
  aBlock[4] = sub_100697AEC;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = a5;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a3;
  id v14 = a4;
  swift_release();
  aBlock[0] = 0;
  id v15 = [v11 fetchSwift:v12 error:aBlock];
  _Block_release(v12);
  id v16 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v15)
  {
    id v17 = v13;
    id v18 = v14;
    id v19 = v15;
    swift_retain();
    id v20 = a1;
    a6(v19, v19, a2, v20, v17, v18);

    sub_100011348(0, &qword_100AD9B40);
    Class isa = sub_10096C080().super.isa;
    swift_bridgeObjectRelease();
    [v20 setItemsPendingReconciliation:isa];
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
  }
}

void sub_10069DEE4(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_10069DF4C(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, uint64_t, id, id))
{
  uint64_t v11 = *(void **)(a2 + qword_100B0B1B0);
  aBlock[4] = sub_100697AF0;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = a5;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a3;
  id v14 = a4;
  swift_release();
  aBlock[0] = 0;
  id v15 = [v11 fetchSwift:v12 error:aBlock];
  _Block_release(v12);
  id v16 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v15)
  {
    id v17 = v13;
    id v18 = v14;
    id v19 = v15;
    swift_retain();
    a6(v19, v19, a2, v17, v18);

    sub_100011348(0, &qword_100AD9B38);
    Class isa = sub_10096C080().super.isa;
    swift_bridgeObjectRelease();
    [a1 setItemsPendingScanningDisk:isa];
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
  }
}

void sub_10069E188(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_10069E1F0(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, uint64_t, id, id))
{
  uint64_t v11 = *(void **)(a2 + qword_100B0B1B0);
  aBlock[4] = sub_100697AF4;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = a5;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a3;
  id v14 = a4;
  swift_release();
  aBlock[0] = 0;
  id v15 = [v11 fetchSwift:v12 error:aBlock];
  _Block_release(v12);
  id v16 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v15)
  {
    id v17 = v13;
    id v18 = v14;
    id v19 = v15;
    swift_retain();
    a6(v19, v19, a2, v17, v18);

    sub_100011348(0, &qword_100AD9B30);
    Class isa = sub_10096C080().super.isa;
    swift_bridgeObjectRelease();
    [a1 setItemsPendingScanningProvider:isa];
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
  }
}

uint64_t sub_10069E42C()
{
  return swift_deallocObject();
}

uint64_t sub_10069E464(void *a1)
{
  return sub_10069D374(a1);
}

uint64_t sub_10069E46C()
{
  return swift_deallocObject();
}

void sub_10069E47C(unint64_t a1, uint64_t a2)
{
  sub_1002FF2D4(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_10069E484(void *a1)
{
  return sub_100697AF8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_10069E4A4()
{
  return swift_deallocObject();
}

uint64_t sub_10069E4B4(void *a1)
{
  return sub_10069B0D0(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_10069E4C0()
{
  return swift_deallocObject();
}

uint64_t sub_10069E4D0()
{
  return swift_deallocObject();
}

uint64_t sub_10069E510(void *a1)
{
  return sub_10069B484(a1);
}

uint64_t sub_10069E518()
{
  return swift_deallocObject();
}

void sub_10069E528(unint64_t a1, uint64_t a2)
{
  sub_1002D6E44(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_10069E530()
{
  return swift_deallocObject();
}

uint64_t sub_10069E540()
{
  return swift_deallocObject();
}

void sub_10069E550(unint64_t a1, uint64_t a2)
{
  sub_1002D7160(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_10069E558()
{
  return swift_deallocObject();
}

uint64_t sub_10069E568()
{
  return swift_deallocObject();
}

uint64_t sub_10069E578(void *a1)
{
  return sub_10069E484(a1) & 1;
}

unint64_t sub_10069E610()
{
  return 0xD0000000000000BCLL;
}

unint64_t sub_10069E62C()
{
  return 0xD000000000000030;
}

unint64_t sub_10069E648()
{
  return 0xD000000000000079;
}

uint64_t sub_10069E664(void *a1, void *a2)
{
  Swift::String v3 = v2;
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096B070();
  uint64_t v10 = a1[3];
  v23[0] = a1[4];
  sub_10002689C(a1, v10);
  uint64_t v25 = 0;
  Swift::String v26 = (void *)0xE000000000000000;
  sub_10096CBD0(31);
  v27._countAndFlagsBits = 91;
  v27._object = (void *)0xE100000000000000;
  sub_10096BDC0(v27);
  Class isa = sub_10096B030().super.isa;
  id v12 = [a2 stringFromDate:isa];

  uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  id v15 = v14;

  v28._countAndFlagsBits = v13;
  v28._object = v15;
  sub_10096BDC0(v28);
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = 0x3A534F205DLL;
  v29._object = (void *)0xE500000000000000;
  sub_10096BDC0(v29);
  uint64_t v16 = v3[1];
  id v17 = (void *)v3[2];
  swift_bridgeObjectRetain();
  v30._countAndFlagsBits = v16;
  v30._object = v17;
  sub_10096BDC0(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 977421344;
  v31._object = (void *)0xE400000000000000;
  sub_10096BDC0(v31);
  v32._countAndFlagsBits = sub_1004EE86C();
  sub_10096BDC0(v32);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 46;
  v33._object = (void *)0xE100000000000000;
  sub_10096BDC0(v33);
  v23[1] = v3[4];
  v24._countAndFlagsBits = 114;
  v24._object = (void *)0xE100000000000000;
  v34._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v34);
  swift_bridgeObjectRelease();
  sub_10096BDC0(v24);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 978535968;
  v35._object = (void *)0xE400000000000000;
  sub_10096BDC0(v35);
  uint64_t v18 = v3[5];
  id v19 = (void *)v3[6];
  swift_bridgeObjectRetain();
  v36._countAndFlagsBits = v18;
  v36._object = v19;
  sub_10096BDC0(v36);
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = 978339360;
  v37._object = (void *)0xE400000000000000;
  sub_10096BDC0(v37);
  uint64_t v21 = v3[7];
  id v20 = (void *)v3[8];
  swift_bridgeObjectRetain();
  v38._countAndFlagsBits = v21;
  v38._object = v20;
  sub_10096BDC0(v38);
  swift_bridgeObjectRelease();
  sub_10059A0E8(v25, v26, v10, v23[0]);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10069E944()
{
  return sub_10069EA1C(sub_10069E610, &unk_100A96468);
}

uint64_t sub_10069E9B0()
{
  return sub_10069EA1C(sub_10069E62C, &unk_100A96440);
}

uint64_t sub_10069EA1C(void *a1, void *a2)
{
  Swift::String v3 = *(void **)(v2 + 16);
  aBlock[4] = a1;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = a2;
  uint64_t v4 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v5 = [v3 executeSwift:v4 error:aBlock];
  _Block_release(v4);
  id v6 = aBlock[0];
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  if (!v5)
  {
    sub_10096ABF0();

    return swift_willThrow();
  }
  return result;
}

void sub_10069EB58(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = *(void **)(v3 + 16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = sub_1006A0118;
  v10[3] = v9;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A96418;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  aBlock[0] = 0;
  id v12 = [v8 fetchSwift:v11 error:aBlock];
  _Block_release(v11);
  id v13 = aBlock[0];
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11) {
    __break(1u);
  }
  if (!v12)
  {
    sub_10096ABF0();

    swift_willThrow();
    goto LABEL_7;
  }
  if (![v12 next])
  {
    swift_release();

    uint64_t v24 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    goto LABEL_9;
  }
  sub_10069FE00(v12, (uint64_t)v31);
  if (v4)
  {
LABEL_7:
    swift_release();
    return;
  }
  uint64_t v28 = v31[1];
  uint64_t v29 = v31[0];
  uint64_t v26 = v32;
  uint64_t v27 = v31[2];
  uint64_t v14 = v34;
  uint64_t v25 = v33;
  uint64_t v15 = v35;
  uint64_t v16 = v36;
  uint64_t v17 = v37;
  uint64_t v18 = v38;
  uint64_t v19 = v39;
  swift_release();
  uint64_t v21 = v25;
  uint64_t v20 = v26;
  uint64_t v23 = v27;
  uint64_t v22 = v28;
  uint64_t v24 = v29;
LABEL_9:
  *a3 = v24;
  a3[1] = v22;
  a3[2] = v23;
  a3[3] = v20;
  a3[4] = v21;
  a3[5] = v14;
  a3[6] = v15;
  a3[7] = v16;
  a3[8] = v17;
  a3[9] = v18;
  a3[10] = v19;
}

uint64_t sub_10069EDF8(uint64_t a1, uint64_t a2, void *a3)
{
  sub_10096CBD0(128);
  v6._object = (void *)0x80000001009AF9B0;
  v6._countAndFlagsBits = 0xD000000000000075;
  sub_10096BDC0(v6);
  v7._countAndFlagsBits = a2;
  v7._object = a3;
  sub_10096BDC0(v7);
  v8._countAndFlagsBits = 0x2054494D494C200ALL;
  v8._object = (void *)0xE900000000000031;
  sub_10096BDC0(v8);
  return 0;
}

uint64_t sub_10069EE9C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  id v16 = (id)FPOSVersion();
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v39 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v40 = v18;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  uint64_t v42 = a7;
  uint64_t v43 = a8;
  swift_bridgeObjectRetain();
  if ((a9 & 1) == 0)
  {
    sub_10069EB58(1129530692, 0xE400000000000000, v44);
    if (v10)
    {
      swift_errorRelease();
      char v19 = 0;
      goto LABEL_25;
    }
    sub_1006A00B0((uint64_t)v44, (uint64_t)v45);
    if (v47)
    {
      if (v40)
      {
        int v20 = v48;
        uint64_t v21 = v49;
        uint64_t v22 = v50;
        uint64_t v23 = v51;
        uint64_t v34 = v53;
        uint64_t v35 = v52;
        if (v46 == v39 && v40 == v47)
        {
          int v24 = a1;
        }
        else
        {
          int v33 = v48;
          if ((sub_10096D2D0() & 1) == 0) {
            goto LABEL_23;
          }
          int v24 = a1;
          int v20 = v33;
        }
        if (v20 == v24 && v21 == a2 && (v22 == a3 && v23 == a4 || (sub_10096D2D0() & 1) != 0))
        {
          if (v35 == a5 && v34 == a6)
          {
            sub_100352C88(v44);
LABEL_32:
            swift_bridgeObjectRelease();
            char v19 = 0;
            goto LABEL_28;
          }
          char v32 = sub_10096D2D0();
          sub_100352C88(v44);
          if (v32) {
            goto LABEL_32;
          }
LABEL_24:
          uint64_t v42 = 0;
          uint64_t v43 = 0;
          swift_bridgeObjectRelease();
          char v19 = 1;
          goto LABEL_25;
        }
      }
LABEL_23:
      sub_100352C88(v44);
      goto LABEL_24;
    }
  }
  char v19 = 0;
LABEL_25:
  uint64_t v25 = *(void **)(v9 + 16);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v39;
  *(void *)(v26 + 24) = v40;
  *(_DWORD *)(v26 + 32) = a1;
  *(void *)(v26 + 40) = a2;
  *(void *)(v26 + 48) = a3;
  *(void *)(v26 + 56) = a4;
  *(void *)(v26 + 64) = a5;
  *(void *)(v26 + 72) = a6;
  *(void *)(v26 + 80) = &v42;
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = sub_1006A0068;
  v27[3] = v26;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A963A0;
  uint64_t v28 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v29 = [v25 executeSwift:v28 error:aBlock];
  _Block_release(v28);
  id v30 = aBlock[0];
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28) {
    __break(1u);
  }
  if (!v29)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    return v19 & 1;
  }
  swift_release();
LABEL_28:
  swift_bridgeObjectRelease();
  return v19 & 1;
}

uint64_t sub_10069F274(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v49[2] = a7;
  v49[3] = a8;
  v49[1] = a6;
  uint64_t v15 = sub_10096B0E0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  sub_10096CBD0(167);
  uint64_t v53 = v50;
  unint64_t v54 = v51;
  v55._countAndFlagsBits = 0xD000000000000072;
  v55._object = (void *)0x80000001009AF930;
  sub_10096BDC0(v55);
  sub_10096B0D0();
  sub_10096B080();
  double v20 = v19;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  double v21 = v20 * 1000000000.0;
  if ((~COERCE__INT64(v20 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v52 = &type metadata for Int;
  uint64_t v50 = (uint64_t)v21;
  uint64_t v22 = sub_1003AC444((uint64_t)&v50);
  int v24 = v23;
  sub_10017D1A4((uint64_t)&v50);
  if (!v24)
  {
LABEL_12:
    uint64_t result = sub_10096CE20();
    __break(1u);
    return result;
  }
  v56._countAndFlagsBits = v22;
  v56._object = v24;
  sub_10096BDC0(v56);
  swift_bridgeObjectRelease();
  v57._countAndFlagsBits = 8236;
  v57._object = (void *)0xE200000000000000;
  sub_10096BDC0(v57);
  v58._countAndFlagsBits = sub_10025DBD8(a2, a3);
  sub_10096BDC0(v58);
  swift_bridgeObjectRelease();
  v59._countAndFlagsBits = 0x2020202020200A2CLL;
  v59._object = (void *)0xEF20202020202020;
  sub_10096BDC0(v59);
  id v25 = [a1 bindUnsignedIntegerParameter:a4];
  uint64_t v26 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v28 = v27;

  v60._countAndFlagsBits = v26;
  v60._object = v28;
  sub_10096BDC0(v60);
  swift_bridgeObjectRelease();
  v61._countAndFlagsBits = 8236;
  v61._object = (void *)0xE200000000000000;
  sub_10096BDC0(v61);
  id v29 = [a1 bindUnsignedLongParameter:a5];
  uint64_t v30 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  char v32 = v31;

  v62._countAndFlagsBits = v30;
  v62._object = v32;
  sub_10096BDC0(v62);
  swift_bridgeObjectRelease();
  v63._countAndFlagsBits = 0x2020202020200A2CLL;
  v63._object = (void *)0xEF20202020202020;
  sub_10096BDC0(v63);
  NSString v33 = sub_10096BC00();
  id v34 = [a1 bindStringParameter:v33];

  uint64_t v35 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v37 = v36;

  v64._countAndFlagsBits = v35;
  v64._object = v37;
  sub_10096BDC0(v64);
  swift_bridgeObjectRelease();
  v65._countAndFlagsBits = 8236;
  v65._object = (void *)0xE200000000000000;
  sub_10096BDC0(v65);
  NSString v38 = sub_10096BC00();
  id v39 = [a1 bindStringParameter:v38];

  uint64_t v40 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v42 = v41;

  v66._countAndFlagsBits = v40;
  v66._object = v42;
  sub_10096BDC0(v66);
  swift_bridgeObjectRelease();
  v67._countAndFlagsBits = 8236;
  v67._object = (void *)0xE200000000000000;
  sub_10096BDC0(v67);
  if (*(void *)(a10 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v43 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v43 = 0;
  }
  id v44 = [a1 bindObjectParameter:v43];
  swift_unknownObjectRelease();
  uint64_t v45 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v47 = v46;

  v68._countAndFlagsBits = v45;
  v68._object = v47;
  sub_10096BDC0(v68);
  swift_bridgeObjectRelease();
  v69._countAndFlagsBits = 41;
  v69._object = (void *)0xE100000000000000;
  sub_10096BDC0(v69);
  return v53;
}

void sub_10069F710(void *a1)
{
  uint64_t v3 = v2;
  unsigned int v5 = *(void **)(v1 + 16);
  uint64_t v23 = sub_10069E648;
  uint64_t v24 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v20 = 1107296256;
  double v21 = sub_10017090C;
  uint64_t v22 = &unk_100A96328;
  Swift::String v6 = _Block_copy(&aBlock);
  swift_release();
  uint64_t aBlock = 0;
  id v7 = [v5 fetchSwift:v6 error:&aBlock];
  _Block_release(v6);
  Swift::String v8 = aBlock;
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v7)
  {
    id v9 = [objc_allocWithZone((Class)NSDateFormatter) init];
    NSString v10 = sub_10096BC00();
    [v9 setDateFormat:v10];

    if ([v7 next])
    {
      id v16 = v9;
      while (1)
      {
        id v12 = v7;
        sub_10069FE00(v12, (uint64_t)v25);
        if (v3) {
          break;
        }
        sub_10069E664(a1, v9);
        id v13 = v27;
        if (v27)
        {
          uint64_t v17 = v26;
          swift_bridgeObjectRetain();
          sub_10069FFC8((uint64_t)v25);
          uint64_t v14 = a1[3];
          uint64_t v18 = a1[4];
          sub_10002689C(a1, v14);
          uint64_t aBlock = 0;
          unint64_t v20 = 0xE000000000000000;
          sub_10096CBD0(19);
          swift_bridgeObjectRelease();
          uint64_t aBlock = (void **)0xD000000000000011;
          unint64_t v20 = 0x80000001009AF890;
          v28._countAndFlagsBits = v17;
          v28._object = v13;
          sub_10096BDC0(v28);
          swift_bridgeObjectRelease();
          uint64_t v15 = v14;
          id v9 = v16;
          uint64_t v3 = 0;
          sub_10059A0E8((uint64_t)aBlock, (void *)v20, v15, v18);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10069FFC8((uint64_t)v25);
        }
        if (([v12 next] & 1) == 0) {
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
  }
}

uint64_t sub_10069FA24(uint64_t a1, uint64_t a2)
{
  unsigned int v5 = *(void **)(v2 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  id v7 = (void *)swift_allocObject();
  unsigned __int8 v8 = v7;
  v7[2] = sub_10069FDE8;
  v7[3] = v6;
  aBlock[4] = sub_1001F8FDC;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A96300;
  id v9 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  aBlock[0] = 0;
  id v10 = [v5 fetchSwift:v9 error:aBlock];
  _Block_release(v9);
  id v11 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v10)
  {
    unsigned __int8 v8 = [v10 next];
    swift_release();
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
  }
  return v8 & 1;
}

unint64_t sub_10069FC1C(void *a1)
{
  sub_10096CBD0(42);
  swift_bridgeObjectRelease();
  NSString v2 = sub_10096BC00();
  id v3 = [a1 bindStringParameter:v2];

  uint64_t v4 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v6 = v5;

  v8._countAndFlagsBits = v4;
  v8._object = v6;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  return 0xD000000000000028;
}

uint64_t sub_10069FCF0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLHistoryTable()
{
  return self;
}

uint64_t sub_10069FD5C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10069FD68()
{
  return sub_10069E944();
}

uint64_t sub_10069FD8C()
{
  return sub_10069E9B0();
}

uint64_t sub_10069FDB0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_10069FDE8(void *a1)
{
  return sub_10069FC1C(a1);
}

uint64_t sub_10069FDF0()
{
  return swift_deallocObject();
}

void sub_10069FE00(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v24 = [a1 longAtIndex:0];
  id v4 = [a1 stringAtIndex:1];
  uint64_t v5 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v22 = v6;
  uint64_t v23 = v5;

  unsigned int v7 = [a1 unsignedIntAtIndex:2];
  id v8 = [a1 unsignedLongAtIndex:3];
  id v9 = [a1 stringAtIndex:4];
  uint64_t v10 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v20 = v11;
  uint64_t v21 = v10;

  id v12 = [a1 stringAtIndex:5];
  uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v15 = v14;

  if ([a1 isNullAtIndex:6])
  {

    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  else
  {
    id v18 = [a1 stringAtIndex:6];
    uint64_t v16 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v17 = v19;
  }
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = v22;
  *(_DWORD *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = v13;
  *(void *)(a2 + 64) = v15;
  *(void *)(a2 + 72) = v16;
  *(void *)(a2 + 80) = v17;
}

uint64_t sub_10069FFC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006A0020()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006A0068(void *a1)
{
  return sub_10069F274(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned int *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1006A00A0()
{
  return swift_deallocObject();
}

uint64_t sub_1006A00B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100AD70C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A0118(uint64_t a1)
{
  return sub_10069EDF8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1006A0120()
{
  return swift_deallocObject();
}

uint64_t destroy for SQLHistoryTable.Entry()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLHistoryTable.Entry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLHistoryTable.Entry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLHistoryTable.Entry()
{
  return &type metadata for SQLHistoryTable.Entry;
}

BOOL sub_1006A0440(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

BOOL sub_1006A0450(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t sub_1006A045C(char a1, unsigned __int8 a2, unsigned __int8 a3)
{
  return sub_1005EBAF8(*(void *)(v3 + 208), *(void *)(v3 + 216), 0, a1, a2, a3);
}

uint64_t sub_1006A0474()
{
  sub_10001AE98(v0 + 40, (uint64_t)v15, &qword_100AD9D30);
  sub_10001AE98((uint64_t)v15, (uint64_t)&v16, &qword_100AD9D30);
  if (v16 && *(void *)(v16 + 16))
  {
    uint64_t v18 = 980510012;
    unint64_t v19 = 0xE400000000000000;
    v20._countAndFlagsBits = sub_10096C0B0();
    sub_10096BDC0(v20);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 62;
    v21._object = (void *)0xE100000000000000;
    sub_10096BDC0(v21);
    uint64_t v1 = (void *)v19;
    uint64_t v12 = v18;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v1 = (void *)0xE000000000000000;
  }
  sub_10001AE98(v0 + 16, (uint64_t)v14, &qword_100AD9D30);
  sub_10001AE98((uint64_t)v14, (uint64_t)&v17, &qword_100AD9D30);
  if (v17 && *(void *)(v17 + 16))
  {
    uint64_t v18 = 980510012;
    unint64_t v19 = 0xE400000000000000;
    v22._countAndFlagsBits = sub_10096C0B0();
    sub_10096BDC0(v22);
    swift_bridgeObjectRelease();
    uint64_t v3 = v18;
    unint64_t v2 = (void *)v19;
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v2 = (void *)0xE000000000000000;
  }
  sub_10001AE98(v0 + 48, (uint64_t)v13, &qword_100ACF700);
  sub_10001AE98((uint64_t)v13, (uint64_t)&v18, &qword_100ACF700);
  if (v19)
  {
    NSString v4 = sub_10096BC00();
    id v5 = objc_msgSend(v4, "fp_obfuscatedFilename");

    uint64_t v6 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v8 = v7;

    v23._countAndFlagsBits = v6;
    v23._object = v8;
    sub_10096BDC0(v23);
    swift_bridgeObjectRelease();
    v24._countAndFlagsBits = 41;
    v24._object = (void *)0xE100000000000000;
    sub_10096BDC0(v24);
    uint64_t v10 = 0x3A65636976656420;
    id v9 = (void *)0xE800000000000000;
  }
  else
  {
    uint64_t v10 = 0;
    id v9 = (void *)0xE000000000000000;
  }
  sub_10096CBD0(21);
  v25._countAndFlagsBits = 0x3A72657673;
  v25._object = (void *)0xE500000000000000;
  sub_10096BDC0(v25);
  sub_10096CDF0();
  v26._countAndFlagsBits = v12;
  v26._object = v1;
  sub_10096BDC0(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 0x3A7265766320;
  v27._object = (void *)0xE600000000000000;
  sub_10096BDC0(v27);
  sub_10096CDF0();
  v28._countAndFlagsBits = v3;
  v28._object = v2;
  sub_10096BDC0(v28);
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = v10;
  v29._object = v9;
  sub_10096BDC0(v29);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1006A076C()
{
  sub_10001AE98(v0 + 72, (uint64_t)v15, &qword_100AD9C80);
  sub_10001AE98((uint64_t)v15, (uint64_t)&v16, &qword_100AD9C80);
  if (v16 && *(void *)(v16 + 16))
  {
    sub_10002B7CC((uint64_t *)&unk_100ACB930);
    v19._countAndFlagsBits = sub_10096C0B0();
    sub_10096BDC0(v19);
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = 62;
    v20._object = (void *)0xE100000000000000;
    sub_10096BDC0(v20);
    uint64_t v1 = (void *)0xE400000000000000;
    uint64_t v2 = 980510012;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v1 = (void *)0xE000000000000000;
  }
  sub_10001AE98(v0 + 32, (uint64_t)v14, &qword_100AD9C88);
  sub_10001AE98((uint64_t)v14, (uint64_t)&v17, &qword_100AD9C88);
  if (v17 && *(void *)(v17 + 16))
  {
    v21._countAndFlagsBits = sub_10096C0B0();
    sub_10096BDC0(v21);
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)0xE400000000000000;
    uint64_t v4 = 980510012;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = (void *)0xE000000000000000;
  }
  sub_10001AE98(v0 + 80, (uint64_t)v13, &qword_100ACF700);
  sub_10001AE98((uint64_t)v13, (uint64_t)v18, &qword_100ACF700);
  if (v18[1])
  {
    NSString v5 = sub_10096BC00();
    id v6 = objc_msgSend(v5, "fp_obfuscatedFilename");

    uint64_t v7 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v9 = v8;

    v22._countAndFlagsBits = v7;
    v22._object = v9;
    sub_10096BDC0(v22);
    swift_bridgeObjectRelease();
    v23._countAndFlagsBits = 41;
    v23._object = (void *)0xE100000000000000;
    sub_10096BDC0(v23);
    uint64_t v10 = (void *)0xE800000000000000;
    uint64_t v11 = 0x3A65636976656420;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v10 = (void *)0xE000000000000000;
  }
  sub_10096CBD0(21);
  v24._countAndFlagsBits = 0x3A72657673;
  v24._object = (void *)0xE500000000000000;
  sub_10096BDC0(v24);
  sub_10002B7CC((uint64_t *)&unk_100ACB930);
  sub_10096CDF0();
  v25._countAndFlagsBits = v2;
  v25._object = v1;
  sub_10096BDC0(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 0x3A7265766320;
  v26._object = (void *)0xE600000000000000;
  sub_10096BDC0(v26);
  sub_10096CDF0();
  v27._countAndFlagsBits = v4;
  v27._object = v3;
  sub_10096BDC0(v27);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = v11;
  v28._object = v10;
  sub_10096BDC0(v28);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1006A0A80(char a1, unsigned char *a2)
{
  uint64_t v5 = type metadata accessor for ItemMetadata();
  uint64_t v6 = __chkstk_darwin(v5);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  int v11 = *a2;
  uint64_t v12 = (char *)&v16 - v9;
  if (v11 == 2)
  {
    sub_10010DA98((uint64_t)a2, (uint64_t)v12);
LABEL_4:
    sub_10010DAFC((uint64_t)v10);
    sub_10010DA98((uint64_t)a2, (uint64_t)v8);
LABEL_5:
    sub_10010DAFC((uint64_t)v8);
    return 0;
  }
  sub_10010DA98((uint64_t)a2, (uint64_t)v12);
  if (v11 == 1) {
    goto LABEL_4;
  }
  char v14 = v10[*(int *)(v5 + 48)];
  sub_10010DAFC((uint64_t)v10);
  sub_10010DA98((uint64_t)a2, (uint64_t)v8);
  if (v14) {
    goto LABEL_5;
  }
  char v15 = v8[*(int *)(v5 + 44)];
  sub_10010DAFC((uint64_t)v8);
  if (v15) {
    return 0;
  }
  if (a2[*(int *)(v5 + 48)]) {
    return 5;
  }
  else {
    return sub_1005EBA68(*(void *)(v2 + 208), *(void *)(v2 + 216), a1 & 1, *a2 == 1);
  }
}

id sub_1006A0BD8()
{
  id v0 = objc_allocWithZone((Class)FPUserInfo);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Class isa = sub_10096C080().super.isa;
  swift_bridgeObjectRelease();
  Class v2 = sub_10096C080().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v0 initWithKeys:isa values:v2];

  return v3;
}

uint64_t ItemNonSyncableAttributes.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  if (*v0) {
    v3._int64_t countAndFlagsBits = 114;
  }
  else {
    v3._int64_t countAndFlagsBits = 45;
  }
  v3._object = (void *)0xE100000000000000;
  sub_10096BDC0(v3);
  swift_bridgeObjectRelease();
  if ((v2 & 2) != 0) {
    v4._int64_t countAndFlagsBits = 119;
  }
  else {
    v4._int64_t countAndFlagsBits = 45;
  }
  v4._object = (void *)0xE100000000000000;
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  if ((v2 & 0x20) != 0) {
    v5._int64_t countAndFlagsBits = 100;
  }
  else {
    v5._int64_t countAndFlagsBits = 45;
  }
  v5._object = (void *)0xE100000000000000;
  sub_10096BDC0(v5);
  swift_bridgeObjectRelease();
  if ((v2 & 4) != 0) {
    v6._int64_t countAndFlagsBits = 112;
  }
  else {
    v6._int64_t countAndFlagsBits = 45;
  }
  v6._object = (void *)0xE100000000000000;
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  if ((v2 & 8) != 0) {
    v7._int64_t countAndFlagsBits = 102;
  }
  else {
    v7._int64_t countAndFlagsBits = 45;
  }
  v7._object = (void *)0xE100000000000000;
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  if ((v2 & 0x10) != 0) {
    v8._int64_t countAndFlagsBits = 84;
  }
  else {
    v8._int64_t countAndFlagsBits = 45;
  }
  v8._object = (void *)0xE100000000000000;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  if ((v2 & 0x40) != 0) {
    v9._int64_t countAndFlagsBits = 101;
  }
  else {
    v9._int64_t countAndFlagsBits = 45;
  }
  v9._object = (void *)0xE100000000000000;
  sub_10096BDC0(v9);
  swift_bridgeObjectRelease();
  if ((v2 & 0x80) != 0) {
    v10._int64_t countAndFlagsBits = 120;
  }
  else {
    v10._int64_t countAndFlagsBits = 45;
  }
  v10._object = (void *)0xE100000000000000;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  if ((NSFileProviderItemCapabilitiesAllowsEvadeSpotlight & ~v2) != 0) {
    v11._int64_t countAndFlagsBits = 45;
  }
  else {
    v11._int64_t countAndFlagsBits = 83;
  }
  v11._object = (void *)0xE100000000000000;
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  sub_10001AE98((uint64_t)(v0 + 20), (uint64_t)v110, &qword_100ADF5E0);
  sub_10001AE98((uint64_t)v110, (uint64_t)v112, &qword_100ADF5E0);
  if (v112[1])
  {
    v111[0]._int64_t countAndFlagsBits = 574254112;
    v111[0]._object = (void *)0xE400000000000000;
    NSString v12 = sub_10096BC00();
    id v13 = objc_msgSend(v12, "fp_obfuscatedFilename");

    uint64_t v14 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v16 = v15;

    v128._int64_t countAndFlagsBits = v14;
    v128._object = v16;
    sub_10096BDC0(v128);
    swift_bridgeObjectRelease();
    v129._int64_t countAndFlagsBits = 34;
    v129._object = (void *)0xE100000000000000;
    sub_10096BDC0(v129);
    sub_10096BDC0(v111[0]);
    swift_bridgeObjectRelease();
  }
  if (v1[22])
  {
    v130._object = (void *)0xE900000000000074;
    v130._int64_t countAndFlagsBits = 0x63696C666E6F6320;
    sub_10096BDC0(v130);
  }
  if (*((unsigned char *)v1 + 9))
  {
    v132._int64_t countAndFlagsBits = 980186400;
    v132._object = (void *)0xE400000000000000;
    sub_10096BDC0(v132);
    uint64_t v17 = sub_100072CCC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v19 = *((void *)v17 + 2);
    unint64_t v18 = *((void *)v17 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v17 = sub_100072CCC((char *)(v18 > 1), v19 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v19 + 1;
    Swift::String v20 = &v17[16 * v19];
    *((void *)v20 + 4) = 0x646564616F6C7075;
    *((void *)v20 + 5) = 0xE800000000000000;
    if ((v1[1] & 1) == 0) {
      goto LABEL_45;
    }
    goto LABEL_40;
  }
  if ((v1[1] & 1) == 0)
  {
    sub_10001AE98((uint64_t)(v1 + 2), (uint64_t)v109, &qword_100AD7360);
    sub_10001AE98((uint64_t)v109, (uint64_t)&v113, &qword_100AD7360);
    if (!v113) {
      goto LABEL_52;
    }
  }
  v131._int64_t countAndFlagsBits = 980186400;
  v131._object = (void *)0xE400000000000000;
  sub_10096BDC0(v131);
  uint64_t v17 = (char *)_swiftEmptyArrayStorage;
  if (v1[1])
  {
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_100072CCC(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v22 = *((void *)v17 + 2);
    unint64_t v21 = *((void *)v17 + 3);
    if (v22 >= v21 >> 1) {
      uint64_t v17 = sub_100072CCC((char *)(v21 > 1), v22 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v22 + 1;
    Swift::String v23 = &v17[16 * v22];
    *((void *)v23 + 4) = 0x6E6964616F6C7075;
    *((void *)v23 + 5) = 0xE900000000000067;
  }
LABEL_45:
  sub_10001AE98((uint64_t)(v1 + 2), (uint64_t)v108, &qword_100AD7360);
  sub_10001AE98((uint64_t)v108, (uint64_t)&v114, &qword_100AD7360);
  uint64_t v24 = v114;
  if (v114)
  {
    v111[0]._int64_t countAndFlagsBits = 0;
    v111[0]._object = (void *)0xE000000000000000;
    sub_10058E0B0((uint64_t)v108);
    v133._int64_t countAndFlagsBits = 0x28726F727265;
    v133._object = (void *)0xE600000000000000;
    sub_10096BDC0(v133);
    v127._int64_t countAndFlagsBits = v24;
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    sub_10096CDF0();
    v134._int64_t countAndFlagsBits = 41;
    v134._object = (void *)0xE100000000000000;
    sub_10096BDC0(v134);
    Swift::String v25 = v111[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_100072CCC(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v27 = *((void *)v17 + 2);
    unint64_t v26 = *((void *)v17 + 3);
    if (v27 >= v26 >> 1) {
      uint64_t v17 = sub_100072CCC((char *)(v26 > 1), v27 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v27 + 1;
    *(Swift::String *)&v17[16 * v27 + 32] = v25;
    sub_10058E0DC((uint64_t)v108);
  }
  v111[0]._int64_t countAndFlagsBits = (uint64_t)v17;
  sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  sub_1000A6FD8();
  uint64_t v28 = sub_10096BB50();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  v135._int64_t countAndFlagsBits = v28;
  v135._object = v30;
  sub_10096BDC0(v135);
  swift_bridgeObjectRelease();
LABEL_52:
  sub_10001AE98((uint64_t)(v1 + 3), (uint64_t)v107, &qword_100AD7360);
  sub_10001AE98((uint64_t)v107, (uint64_t)&v115, &qword_100AD7360);
  uint64_t v31 = v115;
  if (v115)
  {
    v111[0]._int64_t countAndFlagsBits = 0;
    v111[0]._object = (void *)0xE000000000000000;
    sub_10058E0B0((uint64_t)v107);
    v136._object = (void *)0xE900000000000028;
    v136._int64_t countAndFlagsBits = 0x726F7272653A6C64;
    sub_10096BDC0(v136);
    v127._int64_t countAndFlagsBits = v31;
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    sub_10096CDF0();
    v137._int64_t countAndFlagsBits = 41;
    v137._object = (void *)0xE100000000000000;
    sub_10096BDC0(v137);
    sub_10096BDC0(v111[0]);
    swift_bridgeObjectRelease();
    sub_10058E0DC((uint64_t)v107);
  }
  if (v1[4])
  {
    v138._int64_t countAndFlagsBits = 0x3A64657261687320;
    v138._object = (void *)0xE90000000000003CLL;
    sub_10096BDC0(v138);
    if (*((unsigned char *)v1 + 33))
    {
      v139._int64_t countAndFlagsBits = 0x206C766C2D706F74;
      v139._object = (void *)0xE800000000000000;
      sub_10096BDC0(v139);
    }
    uint64_t v32 = 0x6E776F6E6B6E753CLL;
    if (*((unsigned char *)v1 + 34))
    {
      v140._int64_t countAndFlagsBits = 0x3E656D3C3A7962;
      v140._object = (void *)0xE700000000000000;
      sub_10096BDC0(v140);
    }
    else
    {
      v111[0]._int64_t countAndFlagsBits = 3832162;
      v111[0]._object = (void *)0xE300000000000000;
      sub_10001AE98((uint64_t)(v1 + 5), (uint64_t)v106, &qword_100ACF700);
      sub_10001AE98((uint64_t)v106, (uint64_t)v116, &qword_100ACF700);
      if (v116[1])
      {
        NSString v33 = sub_10096BC00();
        id v34 = objc_msgSend(v33, "fp_obfuscatedFilename");

        uint64_t v35 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v37 = v36;
      }
      else
      {
        uint64_t v37 = (void *)0xE90000000000003ELL;
        uint64_t v35 = 0x6E776F6E6B6E753CLL;
      }
      v141._int64_t countAndFlagsBits = v35;
      v141._object = v37;
      sub_10096BDC0(v141);
      swift_bridgeObjectRelease();
      sub_10096BDC0(v111[0]);
      swift_bridgeObjectRelease();
    }
    if (v1[9])
    {
      v142._int64_t countAndFlagsBits = 0x3A726F7469646520;
      v142._object = (void *)0xEC0000003E656D3CLL;
      sub_10096BDC0(v142);
    }
    else
    {
      v111[0]._int64_t countAndFlagsBits = 0x3A726F7469646520;
      v111[0]._object = (void *)0xE800000000000000;
      sub_10001AE98((uint64_t)(v1 + 7), (uint64_t)v105, &qword_100ACF700);
      sub_10001AE98((uint64_t)v105, (uint64_t)v117, &qword_100ACF700);
      if (v117[1])
      {
        NSString v38 = sub_10096BC00();
        id v39 = objc_msgSend(v38, "fp_obfuscatedFilename");

        uint64_t v32 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        char v41 = v40;
      }
      else
      {
        char v41 = (void *)0xE90000000000003ELL;
      }
      v143._int64_t countAndFlagsBits = v32;
      v143._object = v41;
      sub_10096BDC0(v143);
      swift_bridgeObjectRelease();
      sub_10096BDC0(v111[0]);
      swift_bridgeObjectRelease();
    }
    sub_10001AE98((uint64_t)(v1 + 10), (uint64_t)v104, &qword_100ACF700);
    sub_10001AE98((uint64_t)v104, (uint64_t)&v118, &qword_100ACF700);
    v42._object = v119;
    if (v119)
    {
      v42._int64_t countAndFlagsBits = v118;
      v111[0]._int64_t countAndFlagsBits = 3829792;
      v111[0]._object = (void *)0xE300000000000000;
      sub_10096BDC0(v42);
      sub_10096BDC0(v111[0]);
      swift_bridgeObjectRelease();
    }
    sub_10001AE98((uint64_t)(v1 + 12), (uint64_t)&v103, &qword_100AD9C50);
    sub_10001AE98((uint64_t)&v103, (uint64_t)&v120, &qword_100AD9C50);
    if (v120)
    {
      v111[0]._int64_t countAndFlagsBits = 979985184;
      v111[0]._object = (void *)0xE400000000000000;
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_1006A48B0(&v103);
      NSString v43 = sub_10096BC00();
      swift_bridgeObjectRelease();
      id v44 = objc_msgSend(v43, "fp_obfuscatedFilename");

      uint64_t v45 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v47 = v46;

      v144._int64_t countAndFlagsBits = v45;
      v144._object = v47;
      sub_10096BDC0(v144);
      swift_bridgeObjectRelease();
      sub_10096BDC0(v111[0]);
      swift_bridgeObjectRelease();
      sub_1006A48DC(&v103);
    }
    v145._int64_t countAndFlagsBits = 62;
    v145._object = (void *)0xE100000000000000;
    sub_10096BDC0(v145);
  }
  if (v1[13])
  {
    v146._int64_t countAndFlagsBits = 0x3C3A70706120;
    v146._object = (void *)0xE600000000000000;
    sub_10096BDC0(v146);
    sub_10001AE98((uint64_t)(v1 + 14), (uint64_t)v102, &qword_100ACF700);
    sub_10001AE98((uint64_t)v102, (uint64_t)v121, &qword_100ACF700);
    if (v121[1])
    {
      v111[0]._int64_t countAndFlagsBits = 0x3A656C646E7562;
      v111[0]._object = (void *)0xE700000000000000;
      NSString v48 = sub_10096BC00();
      id v49 = objc_msgSend(v48, "fp_obfuscatedDotSeparatedComponents");

      uint64_t v50 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v52 = v51;

      v147._int64_t countAndFlagsBits = v50;
      v147._object = v52;
      sub_10096BDC0(v147);
      swift_bridgeObjectRelease();
      v148._int64_t countAndFlagsBits = 32;
      v148._object = (void *)0xE100000000000000;
      sub_10096BDC0(v148);
      sub_10096BDC0(v111[0]);
      swift_bridgeObjectRelease();
    }
    sub_10001AE98((uint64_t)(v1 + 16), (uint64_t)v101, &qword_100ACF700);
    sub_10001AE98((uint64_t)v101, (uint64_t)v122, &qword_100ACF700);
    if (v122[1])
    {
      v111[0]._int64_t countAndFlagsBits = 0x656E6961746E6F63;
      v111[0]._object = (void *)0xEA00000000003A72;
      NSString v53 = sub_10096BC00();
      id v54 = objc_msgSend(v53, "fp_obfuscatedDotSeparatedComponents");

      uint64_t v55 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      Swift::String v57 = v56;

      v149._int64_t countAndFlagsBits = v55;
      v149._object = v57;
      sub_10096BDC0(v149);
      swift_bridgeObjectRelease();
      v150._int64_t countAndFlagsBits = 32;
      v150._object = (void *)0xE100000000000000;
      sub_10096BDC0(v150);
      sub_10096BDC0(v111[0]);
      swift_bridgeObjectRelease();
    }
    sub_10001AE98((uint64_t)(v1 + 18), (uint64_t)v100, &qword_100ACF700);
    sub_10001AE98((uint64_t)v100, (uint64_t)v123, &qword_100ACF700);
    if (v123[1])
    {
      v111[0]._int64_t countAndFlagsBits = 0x3A79616C70736964;
      v111[0]._object = (void *)0xE900000000000022;
      NSString v58 = sub_10096BC00();
      id v59 = objc_msgSend(v58, "fp_obfuscatedFilename");

      uint64_t v60 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      Swift::String v62 = v61;

      v151._int64_t countAndFlagsBits = v60;
      v151._object = v62;
      sub_10096BDC0(v151);
      swift_bridgeObjectRelease();
      v152._int64_t countAndFlagsBits = 8226;
      v152._object = (void *)0xE200000000000000;
      sub_10096BDC0(v152);
      sub_10096BDC0(v111[0]);
      swift_bridgeObjectRelease();
    }
    if (*((unsigned char *)v1 + 105))
    {
      v153._int64_t countAndFlagsBits = 0x656E697473697270;
      v153._object = (void *)0xE800000000000000;
      sub_10096BDC0(v153);
    }
    v154._int64_t countAndFlagsBits = 62;
    v154._object = (void *)0xE100000000000000;
    sub_10096BDC0(v154);
  }
  sub_10001AE98((uint64_t)(v1 + 23), (uint64_t)v99, (uint64_t *)&unk_100AD74F0);
  sub_10001AE98((uint64_t)v99, (uint64_t)&v124, (uint64_t *)&unk_100AD74F0);
  if (v124 && *(void *)(v124 + 16))
  {
    v111[0]._int64_t countAndFlagsBits = 0x3C3A6F63656420;
    v111[0]._object = (void *)0xE700000000000000;
    v127._int64_t countAndFlagsBits = v124;
    sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
    sub_1000A6FD8();
    v155._int64_t countAndFlagsBits = sub_10096BB50();
    sub_10096BDC0(v155);
    swift_bridgeObjectRelease();
    v156._int64_t countAndFlagsBits = 62;
    v156._object = (void *)0xE100000000000000;
    sub_10096BDC0(v156);
    sub_10096BDC0(v111[0]);
    swift_bridgeObjectRelease();
  }
  sub_10001AE98((uint64_t)(v1 + 24), (uint64_t)v98, &qword_100AD0680);
  sub_10001AE98((uint64_t)v98, (uint64_t)&v125, &qword_100AD0680);
  if (v125)
  {
    id v63 = objc_allocWithZone((Class)FPUserInfo);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Class isa = sub_10096C080().super.isa;
    swift_bridgeObjectRelease();
    Class v65 = sub_10096C080().super.isa;
    swift_bridgeObjectRelease();
    id v66 = [v63 initWithKeys:isa values:v65];

    id v67 = [v66 keys];
    uint64_t v68 = sub_10096C0A0();

    uint64_t v69 = *(void *)(v68 + 16);
    swift_bridgeObjectRelease();
    if (v69)
    {
      v111[0]._int64_t countAndFlagsBits = 0;
      v111[0]._object = (void *)0xE000000000000000;
      sub_10096CBD0(19);
      swift_bridgeObjectRelease();
      v111[0]._int64_t countAndFlagsBits = 0x666E497265737520;
      v111[0]._object = (void *)0xEB000000003C3A6FLL;
      id v70 = [v66 keys];
      uint64_t v71 = sub_10096C0A0();

      uint64_t v72 = *(void *)(v71 + 16);
      swift_bridgeObjectRelease();
      v127._int64_t countAndFlagsBits = v72;
      v157._int64_t countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v157);
      swift_bridgeObjectRelease();
      v158._int64_t countAndFlagsBits = 0x3E7379656B20;
      v158._object = (void *)0xE600000000000000;
      sub_10096BDC0(v158);
      sub_10096BDC0(v111[0]);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  uint64_t v73 = v1[26];
  if (v73 != 501)
  {
    if (v73)
    {
      v111[0]._int64_t countAndFlagsBits = 980443936;
      v111[0]._object = (void *)0xE400000000000000;
      v163._int64_t countAndFlagsBits = NSFileProviderContentPolicy.description.getter(v73);
      sub_10096BDC0(v163);
      swift_bridgeObjectRelease();
      goto LABEL_96;
    }
    if (!v1[27])
    {
      v170._int64_t countAndFlagsBits = 0x747379733A706320;
      v170._object = (void *)0xEA00000000006D65;
      sub_10096BDC0(v170);
      goto LABEL_97;
    }
  }
  v111[0]._int64_t countAndFlagsBits = 980443936;
  v111[0]._object = (void *)0xE400000000000000;
  v159._int64_t countAndFlagsBits = NSFileProviderContentPolicy.description.getter(v73);
  sub_10096BDC0(v159);
  swift_bridgeObjectRelease();
  v160._int64_t countAndFlagsBits = 40;
  v160._object = (void *)0xE100000000000000;
  sub_10096BDC0(v160);
  v161._int64_t countAndFlagsBits = NSFileProviderContentPolicy.description.getter(v1[27]);
  sub_10096BDC0(v161);
  swift_bridgeObjectRelease();
  v162._int64_t countAndFlagsBits = 41;
  v162._object = (void *)0xE100000000000000;
  sub_10096BDC0(v162);
LABEL_96:
  sub_10096BDC0(v111[0]);
  swift_bridgeObjectRelease();
LABEL_97:
  sub_10001AE98((uint64_t)(v1 + 28), (uint64_t)v97, &qword_100AD0698);
  sub_10001AE98((uint64_t)v97, (uint64_t)&v126, &qword_100AD0698);
  uint64_t v74 = v126;
  if (v126)
  {
    int64_t countAndFlagsBits = v126[1]._countAndFlagsBits;
    if (countAndFlagsBits)
    {
      v127._int64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
      sub_100021770(0, countAndFlagsBits, 0);
      uint64_t v76 = v127._countAndFlagsBits;
      uint64_t v77 = v74 + 2;
      do
      {
        Swift::String v78 = *v77;
        Swift::String v79 = v77[1];
        Swift::String v80 = v77[3];
        v111[2] = v77[2];
        v111[3] = v80;
        v111[0] = v78;
        v111[1] = v79;
        sub_10007897C(&v111[0]._countAndFlagsBits);
        uint64_t v81 = sub_1006A0474();
        uint64_t v83 = v82;
        sub_1000789EC(&v111[0]._countAndFlagsBits);
        v127._int64_t countAndFlagsBits = v76;
        unint64_t v85 = *(void *)(v76 + 16);
        unint64_t v84 = *(void *)(v76 + 24);
        if (v85 >= v84 >> 1)
        {
          sub_100021770((char *)(v84 > 1), v85 + 1, 1);
          uint64_t v76 = v127._countAndFlagsBits;
        }
        *(void *)(v76 + 16) = v85 + 1;
        uint64_t v86 = v76 + 16 * v85;
        *(void *)(v86 + 32) = v81;
        *(void *)(v86 + 40) = v83;
        v77 += 4;
        --countAndFlagsBits;
      }
      while (countAndFlagsBits);
      v127._int64_t countAndFlagsBits = v76;
      sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
      sub_1000A6FD8();
      uint64_t v87 = sub_10096BB50();
      id v89 = v88;
      swift_release();
      strcpy((char *)&v127, " conflicts:<");
      BYTE5(v127._object) = 0;
      HIWORD(v127._object) = -5120;
      v164._int64_t countAndFlagsBits = v87;
      v164._object = v89;
      sub_10096BDC0(v164);
      swift_bridgeObjectRelease();
      v165._int64_t countAndFlagsBits = 62;
      v165._object = (void *)0xE100000000000000;
      sub_10096BDC0(v165);
      sub_10096BDC0(v127);
      swift_bridgeObjectRelease();
    }
  }
  sub_10001AE98((uint64_t)(v1 + 29), (uint64_t)v96, &qword_100ACF700);
  sub_10001AE98((uint64_t)v96, (uint64_t)&v127, &qword_100ACF700);
  if (v127._object)
  {
    NSString v90 = sub_10096BC00();
    id v91 = objc_msgSend(v90, "fp_obfuscatedFilename");

    uint64_t v92 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v94 = v93;

    v166._int64_t countAndFlagsBits = v92;
    v166._object = v94;
    sub_10096BDC0(v166);
    swift_bridgeObjectRelease();
    v167._int64_t countAndFlagsBits = 62;
    v167._object = (void *)0xE100000000000000;
    sub_10096BDC0(v167);
    v168._int64_t countAndFlagsBits = 0x3A65636976656420;
    v168._object = (void *)0xE90000000000003CLL;
    sub_10096BDC0(v168);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v169._int64_t countAndFlagsBits = 62;
  v169._object = (void *)0xE100000000000000;
  sub_10096BDC0(v169);
  swift_bridgeObjectRelease();
  return 0x3A7061633CLL;
}

uint64_t sub_1006A1E78(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10002B7CC(&qword_100AD9C68);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_1006A6C80();
  sub_10096D590();
  uint64_t v14 = a2;
  char v13 = 0;
  sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  sub_100078DBC(&qword_100ACB9A0);
  sub_10096D1A0();
  if (!v3)
  {
    uint64_t v14 = a3;
    char v13 = 1;
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1006A2038()
{
  if (*v0) {
    return 0x7365756C6176;
  }
  else {
    return 1937335659;
  }
}

uint64_t sub_1006A2068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006A6964(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006A2090(uint64_t a1)
{
  unint64_t v2 = sub_1006A6C80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006A20CC(uint64_t a1)
{
  unint64_t v2 = sub_1006A6C80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006A2108@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1006A6A40(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1006A2134(void *a1)
{
  return sub_1006A1E78(a1, *v1, v1[1]);
}

uint64_t sub_1006A2150(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a2 + 8);
  if ((sub_1006111F4(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }

  return sub_1006111F4(v2, v3);
}

uint64_t sub_1006A21AC()
{
  return ItemNonSyncableAttributes.description.getter();
}

void ItemNonSyncableAttributes.init(from:)()
{
}

void ItemNonSyncableAttributes.encode(to:)()
{
}

char *sub_1006A2270()
{
  uint64_t v1 = *v0;
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  *id v0 = v1;
  if (!result)
  {
    uint64_t result = sub_100072CCC(result, *((void *)v1 + 2) + 1, 1, v1);
    *id v0 = result;
  }
  return result;
}

char *sub_1006A22BC(char *result)
{
  unint64_t v2 = *((void *)*v1 + 3);
  if ((uint64_t)(result + 1) > (uint64_t)(v2 >> 1))
  {
    uint64_t result = sub_100072CCC((char *)(v2 > 1), (int64_t)(result + 1), 1, *v1);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_1006A2300(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

void *sub_1006A2318(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A2330(a1, a2, a3, a4, &qword_100AD5738);
}

void *sub_1006A2324(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A2330(a1, a2, a3, a4, &qword_100AD57F0);
}

void *sub_1006A2330(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = a4[2];
    if (v8 <= v9) {
      int64_t v10 = a4[2];
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_10002B7CC(a5);
      Swift::String v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * v12 - 64;
      char v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (void *)((char *)a4 + v9 + 32)) {
          memmove(v13, a4 + 4, v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      Swift::String v11 = _swiftEmptyArrayStorage;
      char v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A5A34(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1006A2428(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100ACEC78);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      char v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A51B8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A2538(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC((uint64_t *)&unk_100ACE100);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A5A34(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A2634(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A2330(a1, a2, a3, a4, &qword_100AD5730);
}

void *sub_1006A2640(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A2330(a1, a2, a3, a4, &qword_100AD4F10);
}

void *sub_1006A264C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A2330(a1, a2, a3, a4, &qword_100AD5758);
}

void *sub_1006A2658(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A3A58(a1, a2, a3, a4, &qword_100AD7488, &qword_100AD6E60);
}

void *sub_1006A266C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD9CF0);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A6054(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A2794(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A2DC4(a1, a2, a3, a4, &qword_100AD5718);
}

void *sub_1006A27A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD9C70);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = &_swiftEmptyArrayStorage;
      char v13 = &_swiftEmptyArrayStorage + 4;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A6164(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006A28B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1006A28D8(a1, a2, a3, a4, &qword_100AD6FA0, (uint64_t *)&unk_100AD6F90);
}

uint64_t sub_1006A28C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1006A28D8(a1, a2, a3, a4, (uint64_t *)&unk_100AD6F80, (uint64_t *)&unk_100AD6F70);
}

uint64_t sub_1006A28D8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10002B7CC(a5);
  uint64_t v13 = *(void *)(sub_10002B7CC(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_10096CE10();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10002B7CC(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1006A6FE0(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_1006A2B44(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A47A4(a1, a2, a3, a4, (uint64_t *)&unk_100ACB6F0);
}

uint64_t sub_1006A2B50(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10002B7CC((uint64_t *)&unk_100ACA8D0);
  uint64_t v10 = *(void *)(sub_10096AE50() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_10096CE10();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10096AE50() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1006A58DC(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_1006A2DB8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A2DC4(a1, a2, a3, a4, &qword_100ACB7C8);
}

void *sub_1006A2DC4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10002B7CC(a5);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      size_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A6258(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1006A2ED0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD5780);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A53D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A2FF8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A4058(a1, a2, a3, a4, (uint64_t *)&unk_100AD0C80, (uint64_t *)&unk_100AD62C0);
}

void *sub_1006A300C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD5768);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A52C4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A3130(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD7550);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A54E4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006A3240(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1006A28D8(a1, a2, a3, a4, &qword_100AD9CB8, &qword_100AD6750);
}

void *sub_1006A3254(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A3560(a1, a2, a3, a4, (uint64_t *)&unk_100AD7600, &qword_100AD4F50);
}

void *sub_1006A3268(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A341C(a1, a2, a3, a4, (uint64_t *)&unk_100AD0D00, &qword_100AD6818);
}

void *sub_1006A327C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A37C8(a1, a2, a3, a4, &qword_100AD9CF8, &qword_100AD9D00);
}

void *sub_1006A3290(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A32B8(a1, a2, a3, a4, (uint64_t *)&unk_100AD68C0, &qword_100AD9C90);
}

void *sub_1006A32A4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A32B8(a1, a2, a3, a4, (uint64_t *)&unk_100AD6BD0, &qword_100AD9C98);
}

void *sub_1006A32B8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10002B7CC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 48);
      BOOL v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[6 * v11 + 4]) {
          memmove(v15, a4 + 4, 48 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      BOOL v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A5E3C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1006A33E8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A2330(a1, a2, a3, a4, &qword_100AD5740);
}

uint64_t sub_1006A33F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1006A28D8(a1, a2, a3, a4, &qword_100AD9CA8, &qword_100AD7008);
}

void *sub_1006A3408(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A341C(a1, a2, a3, a4, &qword_100AD9CB0, &qword_100AD7058);
}

void *sub_1006A341C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10002B7CC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 120);
      BOOL v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[15 * v11 + 4]) {
          memmove(v15, a4 + 4, 120 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      BOOL v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A644C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1006A354C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A3560(a1, a2, a3, a4, &qword_100AD9CC0, &qword_100AD9CC8);
}

void *sub_1006A3560(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10002B7CC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A6CD4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1006A367C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC((uint64_t *)&unk_100AD6F58);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A6650(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006A37A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1006A28D8(a1, a2, a3, a4, &qword_100AD9CA0, &qword_100AD0D90);
}

void *sub_1006A37B4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A37C8(a1, a2, a3, a4, &qword_100AD9D10, &qword_100AD9D00);
}

void *sub_1006A37C8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10002B7CC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A5C2C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1006A38E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A390C(a1, a2, a3, a4, &qword_100AD9CD0, &qword_100AD9CD8);
}

void *sub_1006A38F8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A390C(a1, a2, a3, a4, &qword_100AD9CE0, &qword_100AD9CE8);
}

void *sub_1006A390C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10002B7CC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 88);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[11 * v11 + 4]) {
          memmove(v15, a4 + 4, 88 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A5D34(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1006A3A44(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A3A58(a1, a2, a3, a4, &qword_100AD70D0, (uint64_t *)&unk_100AD70F0);
}

void *sub_1006A3A58(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10002B7CC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A5F48(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1006A3B88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC((uint64_t *)&unk_100AD73F0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A56E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A3C98(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100ADA360);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A57EC(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A3DBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD5750);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A5B1C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A3EE8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A41D0(a1, a2, a3, a4, &qword_100AD75B8, (void (*)(void, int64_t, void *, void *))sub_1006A55D0);
}

void *sub_1006A3F08(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A37C8(a1, a2, a3, a4, &qword_100AD9D28, &qword_100AD0F68);
}

void *sub_1006A3F1C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD9D38);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A6DDC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A4044(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A4058(a1, a2, a3, a4, &qword_100AD6E50, (uint64_t *)&unk_100AD0DC0);
}

void *sub_1006A4058(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10002B7CC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A5C2C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006A4174(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1006A28D8(a1, a2, a3, a4, &qword_100AD9D50, (uint64_t *)&unk_100AD0F10);
}

uint64_t sub_1006A4188(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1006A28D8(a1, a2, a3, a4, &qword_100AD9D48, &qword_100AD68D8);
}

uint64_t sub_1006A419C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1006A28D8(a1, a2, a3, a4, &qword_100AD7610, &qword_100AD65C0);
}

void *sub_1006A41B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A41D0(a1, a2, a3, a4, &qword_100AD57E0, (void (*)(void, int64_t, void *, void *))sub_1006A6558);
}

void *sub_1006A41D0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      sub_10002B7CC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[3 * v11 + 4]) {
          memmove(v15, a4 + 4, 24 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = &_swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage + 4;
      if (result) {
        goto LABEL_13;
      }
    }
    a6(0, v11, v15, a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1006A4300(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD9D18);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A6760(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A4410(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD9D20);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 496);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[62 * v8 + 4]) {
          memmove(v12, a4 + 4, 496 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1006A6854(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A4540(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD9D08);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A6258(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1006A4650(void *result, int64_t a2, char a3, unint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *(void *)(a4 + 16);
    if (v7 <= v8) {
      uint64_t v9 = *(void *)(a4 + 16);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002B7CC(&qword_100AD57A0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if ((unint64_t)v10 < a4 || (unint64_t)v13 >= a4 + 32 + 8 * v8)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (void *)a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_1006A6EEC(0, v8, (unint64_t)v13, a4);
LABEL_26:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006A4784(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1006A28D8(a1, a2, a3, a4, &qword_100AD0D48, (uint64_t *)&unk_100AD0D50);
}

void *sub_1006A4798(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1006A47A4(a1, a2, a3, a4, &qword_100AD9C78);
}

void *sub_1006A47A4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10002B7CC(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      size_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1006A54E4(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

id *sub_1006A48B0(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_1006A48DC(id *a1)
{
  return a1;
}

uint64_t destroy for ItemNonSyncableAttributes(uint64_t a1)
{
  swift_errorRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 192))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ItemNonSyncableAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  swift_errorRetain();
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  swift_errorRetain();
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  unint64_t v17 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v17;
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  uint64_t v18 = *(void *)(a2 + 192);
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18)
  {
    uint64_t v14 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = v18;
    *(void *)(a1 + 200) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  }
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  uint64_t v15 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v15;
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ItemNonSyncableAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 16);
  swift_errorRetain();
  *(void *)(a1 + 16) = v4;
  swift_errorRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  swift_errorRetain();
  *(void *)(a1 + 24) = v5;
  swift_errorRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 96);
  uint64_t v7 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v7;
  id v8 = v7;

  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 192);
  if (!*(void *)(a1 + 192))
  {
    if (v9)
    {
      *(void *)(a1 + 192) = v9;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_8;
  }
  if (!v9)
  {
    sub_1002651E8(a1 + 192);
    goto LABEL_7;
  }
  *(void *)(a1 + 192) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ItemNonSyncableAttributes(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(void *)(a1 + 240) = *((void *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for ItemNonSyncableAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_errorRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_errorRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 192);
  if (!*(void *)(a1 + 192)) {
    goto LABEL_5;
  }
  if (!v12)
  {
    sub_1002651E8(a1 + 192);
LABEL_5:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_6;
  }
  *(void *)(a1 + 192) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ItemNonSyncableAttributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 248)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ItemNonSyncableAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 248) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 248) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemNonSyncableAttributes()
{
  return &type metadata for ItemNonSyncableAttributes;
}

ValueMetadata *type metadata accessor for UserInfo()
{
  return &type metadata for UserInfo;
}

uint64_t sub_1006A50C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A51B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A52C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      sub_10002B7CC(&qword_100AD5770);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A53D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      sub_10002B7CC(&qword_100AD5788);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

char *sub_1006A54E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    long long v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A55D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_10002B7CC(&qword_100ACE950);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A56E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_10002B7CC(&qword_100ACE948);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

char *sub_1006A57EC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 48 * a1 + 32);
    size_t v6 = 48 * v4;
    long long v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A58DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_10096AE50() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

char *sub_1006A5A34(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    size_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A5B1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_10002B7CC((uint64_t *)&unk_100AD7490);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A5C2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_10002B7CC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A5D34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 88 * a1 + 32;
    unint64_t v7 = a3 + 88 * v5;
    if (v6 >= v7 || v6 + 88 * v5 <= a3)
    {
      sub_10002B7CC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A5E3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 48 * a1 + 32;
    unint64_t v7 = a3 + 48 * v5;
    if (v6 >= v7 || v6 + 48 * v5 <= a3)
    {
      sub_10002B7CC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A5F48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_10002B7CC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6054(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_10002B7CC((uint64_t *)&unk_100AD70B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6164(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

char *sub_1006A6258(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6344(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for NSFileProviderItemIdentifier(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A644C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 120 * a1 + 32;
    unint64_t v7 = a3 + 120 * v5;
    if (v6 >= v7 || v6 + 120 * v5 <= a3)
    {
      sub_10002B7CC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6558(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6650(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_10002B7CC(&qword_100AD6F50);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6760(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6854(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 496 * a1 + 32;
    unint64_t v6 = a3 + 496 * v4;
    if (v5 >= v6 || v5 + 496 * v4 <= a3)
    {
      sub_10002B7CC(&qword_100AD4F00);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6964(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1937335659 && a2 == 0xE400000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1006A6A40(void *a1)
{
  uint64_t v3 = sub_10002B7CC(&qword_100AD9C58);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_10002689C(a1, v7);
  sub_1006A6C80();
  sub_10096D570();
  if (v1)
  {
    sub_1000268E0((uint64_t)a1);
  }
  else
  {
    sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
    char v10 = 0;
    sub_100078DBC((unint64_t *)&unk_100ACB9C0);
    sub_10096D040();
    uint64_t v7 = v11;
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_10096D040();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_1000268E0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1006A6C80()
{
  unint64_t result = qword_100AD9C60;
  if (!qword_100AD9C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9C60);
  }
  return result;
}

uint64_t sub_1006A6CD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_10002B7CC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6DDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_10002B7CC(&qword_100AD9D40);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6EEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A6FE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_10002B7CC(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for UserInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006A7204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserInfo.CodingKeys()
{
  return &type metadata for UserInfo.CodingKeys;
}

unint64_t sub_1006A7240()
{
  unint64_t result = qword_100AD9D58;
  if (!qword_100AD9D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9D58);
  }
  return result;
}

unint64_t sub_1006A7298()
{
  unint64_t result = qword_100AD9D60;
  if (!qword_100AD9D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9D60);
  }
  return result;
}

unint64_t sub_1006A72F0()
{
  unint64_t result = qword_100AD9D68;
  if (!qword_100AD9D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9D68);
  }
  return result;
}

uint64_t sub_1006A734C(uint64_t a1, uint64_t a2)
{
  sub_10002B7CC(&qword_100AD70D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100973BB0;
  *(void *)(v5 + 56) = a1;
  *(void *)(v5 + 64) = a2;
  unsigned int v6 = sub_10009C958((uint64_t *)(v5 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(v6, v2, a1);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return v5;
  }
  uint64_t v9 = v7 + 32;
  while (1)
  {
    sub_10009CA78(v9, (uint64_t)v25);
    uint64_t v10 = v26;
    uint64_t v11 = v27;
    sub_10002689C(v25, v26);
    uint64_t v12 = sub_1006A734C(v10, v11);
    uint64_t v13 = *(void *)(v12 + 16);
    uint64_t v14 = *(void *)(v5 + 16);
    uint64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      break;
    }
    uint64_t v16 = v12;
    if (v15 > *(void *)(v5 + 24) >> 1)
    {
      if (v14 <= v15) {
        int64_t v23 = v14 + v13;
      }
      else {
        int64_t v23 = *(void *)(v5 + 16);
      }
      uint64_t v5 = (uint64_t)sub_1006A3A44((void *)1, v23, 1, (void *)v5);
      if (*(void *)(v16 + 16))
      {
LABEL_8:
        uint64_t v17 = *(void *)(v5 + 16);
        if ((*(void *)(v5 + 24) >> 1) - v17 < v13) {
          goto LABEL_25;
        }
        unint64_t v18 = v5 + 40 * v17 + 32;
        if (v16 + 32 < v18 + 40 * v13 && v18 < v16 + 32 + 40 * v13) {
          goto LABEL_27;
        }
        sub_10002B7CC((uint64_t *)&unk_100AD70F0);
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v20 = *(void *)(v5 + 16);
          BOOL v21 = __OFADD__(v20, v13);
          uint64_t v22 = v20 + v13;
          if (v21) {
            goto LABEL_26;
          }
          *(void *)(v5 + 16) = v22;
        }
        goto LABEL_4;
      }
    }
    else if (v13)
    {
      goto LABEL_8;
    }
    if (v13) {
      goto LABEL_24;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    sub_1000268E0((uint64_t)v25);
    v9 += 40;
    if (!--v8) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1006A75AC()
{
  id v0 = (id)fpfs_current_or_default_log();

  return sub_10096B490();
}

uint64_t (*sub_1006A75EC(os_log_type_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6))(uint64_t a1)
{
  id v12 = [objc_allocWithZone((Class)FPLoggerScope) init];
  uint64_t v13 = sub_10096B470();
  os_log_type_t v14 = a1;
  if (os_log_type_enabled(v13, a1))
  {
    uint64_t v26 = a2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = a6;
    uint64_t v16 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412546;
    os_log_type_t v24 = a1;
    uint64_t v17 = a3;
    char v18 = a4;
    id v19 = [v12 fork];
    sub_10096C8C0();
    *uint64_t v16 = v19;

    *(_WORD *)(v15 + 12) = 2082;
    uint64_t v20 = sub_10096CC10();
    sub_100719D44(v20, v21, &v27);
    sub_10096C8C0();
    a4 = v18;
    a3 = v17;
    a1 = v24;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%@ %{public}s", (uint8_t *)v15, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    a6 = v25;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v26;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = v12;
  *(void *)(v22 + 32) = a2;
  *(void *)(v22 + 40) = a3;
  *(unsigned char *)(v22 + 48) = a4;
  *(void *)(v22 + 56) = a5;
  *(void *)(v22 + 64) = a6;
  swift_retain();
  return sub_1006A7BA8;
}

uint64_t sub_1006A7874(uint64_t a1, os_log_type_t a2, void *a3, uint64_t a4, uint64_t a5, int a6, void (*a7)(void), uint64_t a8)
{
  int v37 = a6;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v13 = sub_10096B480();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  id v18 = a3;
  id v19 = sub_10096B470();
  if (os_log_type_enabled(v19, a2))
  {
    uint64_t v20 = swift_slowAlloc();
    id v38 = v18;
    uint64_t v21 = v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v30 = v14;
    int64_t v23 = (void *)v22;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v40 = v31;
    *(_DWORD *)uint64_t v21 = 138412546;
    id v34 = a7;
    id v24 = [v38 adopt];
    uint64_t v32 = v13;
    uint64_t v33 = a8;
    id v25 = v24;
    uint64_t v39 = (uint64_t)v24;
    sub_10096C8C0();
    *int64_t v23 = v25;

    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v26 = sub_10096CC10();
    uint64_t v39 = sub_100719D44(v26, v27, &v40);
    a7 = v34;
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, a2, "%@ %{public}s", (uint8_t *)v21, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    id v18 = v38;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v32);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  a7(a1);
  return sub_1006A7BC0(a2, v18);
}

uint64_t sub_1006A7B68()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006A7BA8(uint64_t a1)
{
  return sub_1006A7874(a1, (os_log_type_t)*(unsigned char *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void (**)(void))(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_1006A7BC0(os_log_type_t a1, void *a2)
{
  uint64_t v4 = sub_10096B480();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v9 = a2;
  uint64_t v10 = sub_10096B470();
  os_log_type_t v11 = a1;
  if (os_log_type_enabled(v10, a1))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v17[0] = v4;
    uint64_t v14 = (void *)v13;
    *(_DWORD *)id v12 = 138412290;
    id v15 = [v9 leave];
    v17[1] = v15;
    sub_10096C8C0();
    *uint64_t v14 = v15;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%@", v12, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    uint64_t v4 = v17[0];
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v10 = v9;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1006A7DC0()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x64657070617277;
  }
}

uint64_t sub_1006A7DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006A8938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006A7E1C(uint64_t a1)
{
  unint64_t v2 = sub_1006A88E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006A7E58(uint64_t a1)
{
  unint64_t v2 = sub_1006A88E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1006A7E94()
{
  dword_100AD9D70 = 0;
}

void *sub_1006A7EA0()
{
  uint64_t result = (void *)sub_100093B7C((uint64_t)_swiftEmptyArrayStorage);
  off_100AD9D78 = result;
  return result;
}

uint64_t sub_1006A7EC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10002B7CC(qword_100AD9E40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_log_type_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_1006A88E4();
  sub_10096D590();
  swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  char v16 = 1;
  uint64_t v12 = v14[0];
  sub_10096D150();
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v14[1] = a2;
    char v15 = 0;
    sub_10096D1A0();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1006A809C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  uint64_t v6 = sub_10002B7CC(&qword_100AD9D90);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_1006A88E4();
  sub_10096D570();
  if (v3)
  {
    sub_1000268E0((uint64_t)a1);
    return a2;
  }
  uint64_t v10 = v7;
  uint64_t v11 = a2;
  LOBYTE(v20) = 1;
  uint64_t v12 = sub_10096D000();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  if (qword_100ACC0D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_100AD9D70);
  swift_endAccess();
  if (qword_100ACC0D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*((void *)off_100AD9D78 + 2))
  {
    swift_bridgeObjectRetain();
    sub_10000DDD0(v19, (uint64_t)v14);
    if (v15)
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v16 = swift_dynamicCastMetatype();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  uint64_t v16 = 0;
LABEL_11:
  swift_beginAccess();
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_100AD9D70);
  swift_endAccess();
  if (v16)
  {
    swift_bridgeObjectRelease();
    a2 = (*(uint64_t (**)(char *, uint64_t))(v22 + 32))(v9, v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
    sub_1000268E0((uint64_t)a1);
    return a2;
  }
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_10096CBD0(112);
  v23._int64_t countAndFlagsBits = 0x7473696765726E75;
  v23._object = (void *)0xED00002064657265;
  sub_10096BDC0(v23);
  v24._int64_t countAndFlagsBits = sub_10096D5D0();
  sub_10096BDC0(v24);
  swift_bridgeObjectRelease();
  v25._int64_t countAndFlagsBits = 0x206570797420;
  v25._object = (void *)0xE600000000000000;
  sub_10096BDC0(v25);
  uint64_t v18 = v19;
  v26._int64_t countAndFlagsBits = v19;
  v26._object = v14;
  sub_10096BDC0(v26);
  v27._int64_t countAndFlagsBits = 0xD00000000000003ELL;
  v27._object = (void *)0x80000001009AFC40;
  sub_10096BDC0(v27);
  v28._int64_t countAndFlagsBits = sub_10096D5D0();
  sub_10096BDC0(v28);
  swift_bridgeObjectRelease();
  v29._object = (void *)0x80000001009AFC80;
  v29._int64_t countAndFlagsBits = 0xD000000000000011;
  sub_10096BDC0(v29);
  v30._int64_t countAndFlagsBits = v18;
  v30._object = v14;
  sub_10096BDC0(v30);
  v31._int64_t countAndFlagsBits = 0x29666C65732ELL;
  v31._object = (void *)0xE600000000000000;
  sub_10096BDC0(v31);
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_1006A84EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1006A809C(a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1006A8520(void *a1, uint64_t a2)
{
  return sub_1006A7EC8(a1, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1006A8544()
{
  return sub_10096BCC0();
}

uint64_t sub_1006A857C()
{
  sub_10002B7CC(&qword_100AD9D90);
  sub_1006A867C(&qword_100AD9D80);
  uint64_t result = sub_10096D040();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1006A8614(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1006A867C(&qword_100AD9D80);
  uint64_t result = sub_1006A867C(&qword_100AD9D88);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1006A867C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Continuation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CodableClassCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006A878CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableClassCodingKeys()
{
  return &type metadata for CodableClassCodingKeys;
}

uint64_t type metadata accessor for CodableClassWrapper()
{
  return sub_10014D080();
}

unint64_t sub_1006A87E0()
{
  unint64_t result = qword_100AD9E20;
  if (!qword_100AD9E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9E20);
  }
  return result;
}

unint64_t sub_1006A8838()
{
  unint64_t result = qword_100AD9E28;
  if (!qword_100AD9E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9E28);
  }
  return result;
}

unint64_t sub_1006A8890()
{
  unint64_t result = qword_100AD9E30;
  if (!qword_100AD9E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9E30);
  }
  return result;
}

unint64_t sub_1006A88E4()
{
  unint64_t result = qword_100AD9E38;
  if (!qword_100AD9E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9E38);
  }
  return result;
}

uint64_t sub_1006A8938(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64657070617277 && a2 == 0xE700000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t *sub_1006A8A1C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1000CE628(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1006A8A50(unint64_t *a1)
{
  return sub_1000B6C28(*a1);
}

unint64_t *sub_1006A8A58(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1000CE628(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1000B6C28(v4);
  return a1;
}

unint64_t *sub_1006A8A94(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1000B6C28(v3);
  return a1;
}

uint64_t sub_1006A8AC8(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x57 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 87);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 1) & 0xFFFFFFBF | ((*(void *)a1 & 1) << 6)) ^ 0x7F;
  if (v3 >= 0x56) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1006A8B24(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x56)
  {
    *(void *)unint64_t result = a2 - 87;
    if (a3 >= 0x57) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x57) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 6) & 1 | (2 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1006A8B74(void *a1)
{
  unsigned int v1 = (*a1 >> 58) & 0x3C | (*a1 >> 1) & 3;
  if (v1 <= 0x28) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 41;
  }
}

void *sub_1006A8B98(void *result)
{
  *result &= 0xFFFFFFFFFFFFFF9uLL;
  return result;
}

unint64_t *sub_1006A8BAC(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x29) {
    *unint64_t result = (a2 << 58) & 0xF000000000000000 | (2 * (a2 & 3)) | *result & 0xFFFFFFFFFFFFFF8;
  }
  else {
    *unint64_t result = (8 * (a2 - 41)) | 0xA000000000000002;
  }
  return result;
}

uint64_t type metadata accessor for UserRequest()
{
  return swift_getGenericMetadata();
}

char *sub_1006A8C00(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v28 = sub_10096AE50();
  unint64_t v4 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  char v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    if (!v7) {
      return (char *)v8;
    }
    Swift::String v29 = _swiftEmptyArrayStorage;
    unint64_t result = sub_100021770(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v29;
    v24[1] = v2;
    unint64_t v25 = a1 & 0xC000000000000001;
    uint64_t v11 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v26 = v7;
    unint64_t v27 = a1;
    while (v7 != v10)
    {
      if (v25) {
        id v12 = (id)sub_10096CC30();
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      id v13 = v12;
      id v14 = [v13 knownFolder];
      sub_10096ADD0();

      sub_10096AD20(v15);
      id v17 = v16;
      id v18 = objc_msgSend(v16, "fp_shortDescription");

      uint64_t v2 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v20 = v19;

      (*v11)(v6, v28);
      Swift::String v29 = v8;
      unint64_t v22 = v8[2];
      unint64_t v21 = v8[3];
      unint64_t v4 = v22 + 1;
      if (v22 >= v21 >> 1)
      {
        sub_100021770((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v8 = v29;
      }
      ++v10;
      v8[2] = v4;
      Swift::String v23 = &v8[2 * v22];
      v23[4] = v2;
      v23[5] = v20;
      uint64_t v7 = v26;
      a1 = v27;
      if (v26 == v10) {
        return (char *)v8;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_10096CE70();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_1006A8E5C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100021770(0, v1, 0);
    uint64_t v3 = *(void *)(sub_10096AE50() - 8);
    unint64_t v4 = (NSURL *)((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = (char *)v4 + a1;
    uint64_t v6 = *(void *)(v3 + 72);
    do
    {
      sub_10096AD20(v4);
      uint64_t v8 = v7;
      id v9 = objc_msgSend(v7, "fp_shortDescription");

      uint64_t v10 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      id v12 = v11;

      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_100021770((char *)(v13 > 1), v14 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      unint64_t v4 = (NSURL *)&_swiftEmptyArrayStorage[2 * v14];
      v4->_reserved = (void *)v10;
      v4[1].super.Class isa = v12;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1006A8FC0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v15 = (char *)&v36 - v14;
  uint64_t v16 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v36 - v20;
  unint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  unint64_t v22 = sub_1006A93D4(a1);
  if (v22)
  {
    Swift::String v23 = v22;
    id v24 = [v22 date];

    sub_10096B0A0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v21, 1, 1, v10);
  }
  sub_10016D1D8((uint64_t)v21, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v19, 1, v10) != 1) {
    goto LABEL_9;
  }
  sub_10016D178((uint64_t)v21);
  sub_10096B0D0();
  sub_10096B080();
  double v26 = v25;
  unint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v11 += 8;
  unint64_t result = v27(v15, v10);
  double v29 = v26 * 1000000000.0;
  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v29 < 9.22337204e18) {
    goto LABEL_13;
  }
  __break(1u);
LABEL_9:
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v19, v10);
  Swift::String v30 = v36;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v15, v10);
  sub_10096B080();
  double v32 = v31;
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  unint64_t result = v33(v30, v10);
  double v34 = v32 * 1000000000.0;
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v34 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v33(v15, v10);
  sub_10016D178((uint64_t)v21);
LABEL_13:
  unint64_t result = sub_1006AC330(v37, v38, v39, v40, v41);
  if (v35) {
    return 0;
  }
  return result;
}

uint64_t sub_1006A935C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (((a1 >> 58) & 0x3C | (a1 >> 1) & 3) == 0x1E)
  {
    unint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
    uint64_t v2 = v1;
  }
  else
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    uint64_t v2 = v3 | 0x7000000000000004;
  }
  sub_1000CE628(v1);
  return v2;
}

void *sub_1006A93D4(unint64_t a1)
{
  unint64_t v1 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      swift_getAssociatedTypeWitness();
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      goto LABEL_16;
    case 1uLL:
    case 3uLL:
    case 0x16uLL:
    case 0x24uLL:
      swift_getAssociatedTypeWitness();
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      goto LABEL_15;
    case 2uLL:
      uint64_t v4 = sub_10002B7CC(&qword_100ACD5F0);
      uint64_t v5 = swift_projectBox();
      uint64_t v6 = *(int *)(v4 + 64);
      goto LABEL_19;
    case 4uLL:
    case 5uLL:
      swift_getAssociatedTypeWitness();
      sub_10096C890();
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      goto LABEL_15;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      uint64_t v2 = (uint64_t *)&unk_100AD6F40;
      goto LABEL_18;
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
      swift_getAssociatedTypeWitness();
      goto LABEL_4;
    case 0xEuLL:
    case 0xFuLL:
      unint64_t v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      goto LABEL_20;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ReconciliationID();
LABEL_4:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
LABEL_15:
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
LABEL_16:
      uint64_t v5 = swift_projectBox();
      uint64_t v6 = *(int *)(TupleTypeMetadata2 + 48);
      goto LABEL_19;
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      unint64_t v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      goto LABEL_20;
    case 0x1AuLL:
      unint64_t v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      if (!v1) {
        return v1;
      }
      goto LABEL_20;
    case 0x23uLL:
      uint64_t v2 = &qword_100AD0820;
      goto LABEL_18;
    case 0x28uLL:
      uint64_t v2 = (uint64_t *)&unk_100AD08D0;
LABEL_18:
      uint64_t v7 = sub_10002B7CC(v2);
      uint64_t v5 = swift_projectBox();
      uint64_t v6 = *(int *)(v7 + 48);
LABEL_19:
      unint64_t v1 = *(void **)(v5 + v6);
LABEL_20:
      id v8 = v1;
      break;
    default:
      return v1;
  }
  return v1;
}

unint64_t sub_1006A9894(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v273 = sub_10096C890();
  uint64_t v271 = *(void *)(v273 - 8);
  __chkstk_darwin(v273);
  unint64_t v272 = (char *)&v270 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  v279[0] = v12;
  v279[1] = AssociatedTypeWitness;
  v279[2] = AssociatedConformanceWitness;
  v279[3] = v14;
  uint64_t v276 = v14;
  uint64_t v15 = type metadata accessor for ReconciliationID();
  uint64_t v275 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v274 = (char *)&v270 - v16;
  uint64_t v17 = sub_10096AE50();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v270 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v277 = AssociatedTypeWitness;
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v27 = 0xD000000000000016;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v29 = v277;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v36 = swift_projectBox();
      unint64_t v37 = *(void **)(v36 + *(int *)(TupleTypeMetadata2 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v36, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v37;
      sub_10096CBD0(26);
      v282._object = (void *)0x80000001009A5840;
      v282._int64_t countAndFlagsBits = 0xD000000000000010;
      sub_10096BDC0(v282);
      sub_10096D270();
      v283._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v283._object = (void *)0xE500000000000000;
      sub_10096BDC0(v283);
      id v34 = [v33 description];
      goto LABEL_65;
    case 2uLL:
      uint64_t v38 = v23;
      uint64_t v39 = v26;
      uint64_t v40 = v25;
      uint64_t v41 = sub_10002B7CC(&qword_100ACD5F0);
      Swift::String v42 = (uint64_t *)swift_projectBox();
      uint64_t v43 = *v42;
      id v44 = (void *)v42[1];
      uint64_t v45 = *(void **)((char *)v42 + *(int *)(v41 + 64));
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v40, (char *)v42 + *(int *)(v41 + 48), v38);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v46 = v45;
      sub_10096CBD0(27);
      swift_bridgeObjectRelease();
      strcpy((char *)v279, "coordination(");
      HIWORD(v279[1]) = -4864;
      v284._int64_t countAndFlagsBits = v43;
      v284._object = v44;
      sub_10096BDC0(v284);
      v285._int64_t countAndFlagsBits = 8236;
      v285._object = (void *)0xE200000000000000;
      sub_10096BDC0(v285);
      sub_10096AD20(v47);
      id v49 = v48;
      id v50 = objc_msgSend(v48, "fp_shortDescription");

      uint64_t v51 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      NSString v53 = v52;

      v286._int64_t countAndFlagsBits = v51;
      v286._object = v53;
      sub_10096BDC0(v286);
      swift_bridgeObjectRelease();
      v287._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v287._object = (void *)0xE500000000000000;
      sub_10096BDC0(v287);
      id v54 = [v46 description];
      goto LABEL_44;
    case 3uLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v29 = v277;
      uint64_t v55 = swift_getTupleTypeMetadata2();
      uint64_t v56 = swift_projectBox();
      Swift::String v57 = *(void **)(v56 + *(int *)(v55 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v56, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v57;
      sub_10096CBD0(22);
      v288._int64_t countAndFlagsBits = 0x3E2D44496D657469;
      v288._object = (void *)0xEC000000284C5255;
      sub_10096BDC0(v288);
      sub_10096D270();
      v289._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v289._object = (void *)0xE500000000000000;
      sub_10096BDC0(v289);
      id v34 = [v33 description];
      goto LABEL_65;
    case 4uLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v58 = v273;
      uint64_t v59 = swift_getTupleTypeMetadata2();
      uint64_t v60 = swift_projectBox();
      Swift::String v61 = *(void **)(v60 + *(int *)(v59 + 48));
      uint64_t v29 = v277;
      if ((*(unsigned int (**)(void))(v22 + 48))() == 1)
      {
        v279[0] = 0;
        v279[1] = 0xE000000000000000;
        id v62 = v61;
        sub_10096CBD0(29);
        swift_bridgeObjectRelease();
        v279[0] = 0xD00000000000001ALL;
        v279[1] = 0x80000001009A5800;
        id v63 = [v62 description];
        goto LABEL_54;
      }
      unint64_t v263 = v272;
      (*(void (**)(char *, uint64_t, uint64_t))(v271 + 16))(v272, v60, v58);
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v263, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v61;
      sub_10096CBD0(22);
      v352._int64_t countAndFlagsBits = 0x746172656D756E65;
      v352._object = (void *)0xEC000000286E6F69;
      sub_10096BDC0(v352);
      sub_10096D270();
      v353._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v353._object = (void *)0xE500000000000000;
      sub_10096BDC0(v353);
      id v34 = [v33 description];
      goto LABEL_65;
    case 5uLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v64 = v273;
      uint64_t v65 = swift_getTupleTypeMetadata2();
      uint64_t v66 = swift_projectBox();
      id v67 = *(void **)(v66 + *(int *)(v65 + 48));
      uint64_t v29 = v277;
      if ((*(unsigned int (**)(void))(v22 + 48))() == 1)
      {
        v279[0] = 0;
        v279[1] = 0xE000000000000000;
        id v62 = v67;
        sub_10096CBD0(30);
        swift_bridgeObjectRelease();
        v279[0] = 0xD00000000000001BLL;
        v279[1] = 0x80000001009A57E0;
        id v63 = [v62 description];
LABEL_54:
        id v227 = v63;
        uint64_t v228 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v230 = v229;

        v339._int64_t countAndFlagsBits = v228;
        v339._object = v230;
        sub_10096BDC0(v339);
LABEL_55:
        swift_bridgeObjectRelease();
        v340._int64_t countAndFlagsBits = 41;
        v340._object = (void *)0xE100000000000000;
        sub_10096BDC0(v340);

        return v279[0];
      }
      else
      {
        uint64_t v264 = v272;
        (*(void (**)(char *, uint64_t, uint64_t))(v271 + 16))(v272, v66, v64);
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v264, v29);
        v279[0] = 0;
        v279[1] = 0xE000000000000000;
        id v33 = v67;
        sub_10096CBD0(23);
        v354._int64_t countAndFlagsBits = 0x616572436D657469;
        v354._object = (void *)0xED0000286E6F6974;
        sub_10096BDC0(v354);
        sub_10096D270();
        v355._int64_t countAndFlagsBits = 0x3A7962202CLL;
        v355._object = (void *)0xE500000000000000;
        sub_10096BDC0(v355);
        id v34 = [v33 description];
LABEL_65:
        id v265 = v34;
        uint64_t v266 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        unint64_t v268 = v267;

        v356._int64_t countAndFlagsBits = v266;
        v356._object = v268;
        sub_10096BDC0(v356);
        swift_bridgeObjectRelease();
        v357._int64_t countAndFlagsBits = 41;
        v357._object = (void *)0xE100000000000000;
        sub_10096BDC0(v357);

        uint64_t v27 = v279[0];
        (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v29);
      }
      return v27;
    case 6uLL:
      uint64_t v38 = v23;
      uint64_t v39 = v26;
      uint64_t v40 = v25;
      uint64_t v68 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v69 = swift_projectBox();
      id v70 = *(void **)(v69 + *(int *)(v68 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v40, v69, v38);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v46 = v70;
      sub_10096CBD0(19);
      swift_bridgeObjectRelease();
      strcpy((char *)v279, "eviction(");
      WORD1(v279[1]) = 0;
      HIDWORD(v279[1]) = -385875968;
      sub_10096AD20((NSURL *)0x6E6F697463697665);
      uint64_t v72 = v71;
      id v73 = objc_msgSend(v71, "fp_shortDescription");

      uint64_t v74 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v76 = v75;

      v290._int64_t countAndFlagsBits = v74;
      v290._object = v76;
      sub_10096BDC0(v290);
      swift_bridgeObjectRelease();
      v291._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v291._object = (void *)0xE500000000000000;
      sub_10096BDC0(v291);
      id v54 = [v46 description];
      goto LABEL_44;
    case 7uLL:
      uint64_t v77 = v23;
      uint64_t v78 = v26;
      uint64_t v79 = v25;
      uint64_t v80 = swift_projectBox();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v79, v80, v77);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      sub_10096CBD0(18);
      swift_bridgeObjectRelease();
      v279[0] = 0x676E496563726F66;
      v279[1] = 0xEF286E6F69747365;
      sub_10096AD20((NSURL *)0x676E496563726F66);
      uint64_t v82 = v81;
      id v83 = objc_msgSend(v81, "fp_shortDescription");

      uint64_t v84 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v86 = v85;

      v292._int64_t countAndFlagsBits = v84;
      v292._object = v86;
      sub_10096BDC0(v292);
      swift_bridgeObjectRelease();
      v293._int64_t countAndFlagsBits = 41;
      v293._object = (void *)0xE100000000000000;
      sub_10096BDC0(v293);
      uint64_t v27 = v279[0];
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v79, v77);
      return v27;
    case 8uLL:
      uint64_t v87 = (char *)&v270 - v24;
      uint64_t v88 = swift_projectBox();
      uint64_t v89 = v277;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v87, v88, v277);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      sub_10096CBD0(27);
      v90._int64_t countAndFlagsBits = 0xD000000000000018;
      id v91 = "forceIngestionForItemID(";
      goto LABEL_59;
    case 9uLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v29 = v277;
      uint64_t v92 = swift_getTupleTypeMetadata2();
      uint64_t v93 = swift_projectBox();
      uint64_t v94 = *(void **)(v93 + *(int *)(v92 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v93, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v94;
      sub_10096CBD0(19);
      v294._int64_t countAndFlagsBits = 0x6E6F697463697665;
      v294._object = (void *)0xE900000000000028;
      sub_10096BDC0(v294);
      sub_10096D270();
      v295._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v295._object = (void *)0xE500000000000000;
      sub_10096BDC0(v295);
      id v34 = [v33 description];
      goto LABEL_65;
    case 0xAuLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v29 = v277;
      uint64_t v95 = swift_getTupleTypeMetadata2();
      uint64_t v96 = swift_projectBox();
      uint64_t v97 = *(void **)(v96 + *(int *)(v95 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v96, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v97;
      sub_10096CBD0(26);
      v296._object = (void *)0x80000001009A57C0;
      v296._int64_t countAndFlagsBits = 0xD000000000000010;
      sub_10096BDC0(v296);
      sub_10096D270();
      v297._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v297._object = (void *)0xE500000000000000;
      sub_10096BDC0(v297);
      id v34 = [v33 description];
      goto LABEL_65;
    case 0xBuLL:
      unint64_t v98 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      strcpy((char *)v279, "background(");
      HIDWORD(v279[1]) = -352321536;
      v99._int64_t countAndFlagsBits = sub_100609068(v98);
      goto LABEL_30;
    case 0xCuLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v29 = v277;
      uint64_t v100 = swift_getTupleTypeMetadata2();
      uint64_t v101 = swift_projectBox();
      uint64_t v102 = *(void **)(v101 + *(int *)(v100 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v101, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v102;
      sub_10096CBD0(18);
      v298._int64_t countAndFlagsBits = 0x286D6574496E6970;
      v298._object = (void *)0xE800000000000000;
      sub_10096BDC0(v298);
      sub_10096D270();
      v299._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v299._object = (void *)0xE500000000000000;
      sub_10096BDC0(v299);
      id v34 = [v33 description];
      goto LABEL_65;
    case 0xDuLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v29 = v277;
      uint64_t v103 = swift_getTupleTypeMetadata2();
      uint64_t v104 = swift_projectBox();
      uint64_t v105 = *(void **)(v104 + *(int *)(v103 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v104, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v105;
      sub_10096CBD0(20);
      v300._int64_t countAndFlagsBits = 0x6574496E69706E75;
      v300._object = (void *)0xEA0000000000286DLL;
      sub_10096BDC0(v300);
      sub_10096D270();
      v301._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v301._object = (void *)0xE500000000000000;
      sub_10096BDC0(v301);
      id v34 = [v33 description];
      goto LABEL_65;
    case 0xEuLL:
      unint64_t v107 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v106 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v62 = v106;
      sub_10096CBD0(21);
      swift_bridgeObjectRelease();
      strcpy((char *)v279, "detachRoots(");
      BYTE5(v279[1]) = 0;
      HIWORD(v279[1]) = -5120;
      uint64_t v278 = sub_1006A8C00(v107);
      sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
      sub_1000A6FD8();
      uint64_t v108 = sub_10096BB50();
      uint64_t v110 = v109;
      swift_bridgeObjectRelease();
      v302._int64_t countAndFlagsBits = v108;
      v302._object = v110;
      sub_10096BDC0(v302);
      swift_bridgeObjectRelease();
      v303._int64_t countAndFlagsBits = 981033504;
      v303._object = (void *)0xE400000000000000;
      sub_10096BDC0(v303);
      id v63 = [v62 description];
      goto LABEL_54;
    case 0xFuLL:
      uint64_t v112 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v111 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v62 = v111;
      sub_10096CBD0(21);
      swift_bridgeObjectRelease();
      strcpy((char *)v279, "attachRoots(");
      BYTE5(v279[1]) = 0;
      HIWORD(v279[1]) = -5120;
      uint64_t v278 = sub_1006A8E5C(v112);
      sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
      sub_1000A6FD8();
      uint64_t v113 = sub_10096BB50();
      uint64_t v115 = v114;
      swift_bridgeObjectRelease();
      v304._int64_t countAndFlagsBits = v113;
      v304._object = v115;
      sub_10096BDC0(v304);
      swift_bridgeObjectRelease();
      v305._int64_t countAndFlagsBits = 981033504;
      v305._object = (void *)0xE400000000000000;
      sub_10096BDC0(v305);
      id v63 = [v62 description];
      goto LABEL_54;
    case 0x10uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v116 = v15;
      uint64_t v117 = swift_getTupleTypeMetadata2();
      uint64_t v118 = swift_projectBox();
      uint64_t v119 = *(void **)(v118 + *(int *)(v117 + 48));
      unint64_t v121 = v274;
      uint64_t v120 = v275;
      (*(void (**)(char *, uint64_t, uint64_t))(v275 + 16))(v274, v118, v116);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v122 = v119;
      sub_10096CBD0(21);
      v306._object = (void *)0xEB00000000286D65;
      v306._int64_t countAndFlagsBits = 0x744965726F6E6769;
      sub_10096BDC0(v306);
      swift_getWitnessTable();
      sub_10096D270();
      v307._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v307._object = (void *)0xE500000000000000;
      sub_10096BDC0(v307);
      id v123 = [v122 description];
      goto LABEL_49;
    case 0x11uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v116 = v15;
      uint64_t v124 = swift_getTupleTypeMetadata2();
      uint64_t v125 = swift_projectBox();
      unint64_t v126 = *(void **)(v125 + *(int *)(v124 + 48));
      unint64_t v121 = v274;
      uint64_t v120 = v275;
      (*(void (**)(char *, uint64_t, uint64_t))(v275 + 16))(v274, v125, v116);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v122 = v126;
      sub_10096CBD0(23);
      v308._int64_t countAndFlagsBits = 0x65726F6E67696E75;
      v308._object = (void *)0xED0000286D657449;
      sub_10096BDC0(v308);
      swift_getWitnessTable();
      sub_10096D270();
      v309._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v309._object = (void *)0xE500000000000000;
      sub_10096BDC0(v309);
      id v123 = [v122 description];
      goto LABEL_49;
    case 0x12uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v116 = v15;
      uint64_t v215 = swift_getTupleTypeMetadata2();
      uint64_t v216 = swift_projectBox();
      unint64_t v217 = *(void **)(v216 + *(int *)(v215 + 48));
      unint64_t v121 = v274;
      uint64_t v120 = v275;
      (*(void (**)(char *, uint64_t, uint64_t))(v275 + 16))(v274, v216, v116);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v122 = v217;
      sub_10096CBD0(27);
      v332._int64_t countAndFlagsBits = 0xD000000000000011;
      v332._object = (void *)0x80000001009A5820;
      sub_10096BDC0(v332);
      swift_getWitnessTable();
      sub_10096D270();
      v333._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v333._object = (void *)0xE500000000000000;
      sub_10096BDC0(v333);
      id v123 = [v122 description];
      goto LABEL_49;
    case 0x13uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v116 = v15;
      uint64_t v127 = swift_getTupleTypeMetadata2();
      uint64_t v128 = swift_projectBox();
      Swift::String v129 = *(void **)(v128 + *(int *)(v127 + 48));
      unint64_t v121 = v274;
      uint64_t v120 = v275;
      (*(void (**)(char *, uint64_t, uint64_t))(v275 + 16))(v274, v128, v116);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v122 = v129;
      sub_10096CBD0(25);
      v310._int64_t countAndFlagsBits = 0x6D6574496B6C7562;
      v310._object = (void *)0xEF2865676E616843;
      sub_10096BDC0(v310);
      swift_getWitnessTable();
      sub_10096D270();
      v311._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v311._object = (void *)0xE500000000000000;
      sub_10096BDC0(v311);
      id v123 = [v122 description];
LABEL_49:
      id v218 = v123;
      uint64_t v219 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v221 = v220;

      v334._int64_t countAndFlagsBits = v219;
      v334._object = v221;
      sub_10096BDC0(v334);
      swift_bridgeObjectRelease();
      v335._int64_t countAndFlagsBits = 41;
      v335._object = (void *)0xE100000000000000;
      sub_10096BDC0(v335);

      uint64_t v27 = v279[0];
      (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v116);
      return v27;
    case 0x14uLL:
      uint64_t v38 = v23;
      uint64_t v39 = v26;
      uint64_t v40 = v25;
      uint64_t v130 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v131 = swift_projectBox();
      Swift::String v132 = *(void **)(v131 + *(int *)(v130 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v40, v131, v38);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v46 = v132;
      sub_10096CBD0(20);
      swift_bridgeObjectRelease();
      strcpy((char *)v279, "trashItem(");
      BYTE3(v279[1]) = 0;
      HIDWORD(v279[1]) = -369098752;
      sub_10096AD20((NSURL *)0x6574496873617274);
      Swift::String v134 = v133;
      id v135 = objc_msgSend(v133, "fp_shortDescription");

      uint64_t v136 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      Swift::String v138 = v137;

      v312._int64_t countAndFlagsBits = v136;
      v312._object = v138;
      sub_10096BDC0(v312);
      swift_bridgeObjectRelease();
      v313._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v313._object = (void *)0xE500000000000000;
      sub_10096BDC0(v313);
      id v54 = [v46 description];
      goto LABEL_44;
    case 0x15uLL:
      uint64_t v222 = swift_projectBox();
      unint64_t v178 = v274;
      uint64_t v177 = v275;
      (*(void (**)(char *, uint64_t, uint64_t))(v275 + 16))(v274, v222, v15);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      sub_10096CBD0(30);
      v179._int64_t countAndFlagsBits = 0xD00000000000001BLL;
      unint64_t v180 = "materializeParentHierarchy(";
      goto LABEL_51;
    case 0x16uLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v29 = v277;
      uint64_t v223 = swift_getTupleTypeMetadata2();
      uint64_t v224 = swift_projectBox();
      uint64_t v225 = *(void **)(v224 + *(int *)(v223 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v224, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v225;
      sub_10096CBD0(24);
      v337._int64_t countAndFlagsBits = 0x614264616F6C7075;
      v337._object = (void *)0xEE00287265697272;
      sub_10096BDC0(v337);
      sub_10096D270();
      v338._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v338._object = (void *)0xE500000000000000;
      sub_10096BDC0(v338);
      id v34 = [v33 description];
      goto LABEL_65;
    case 0x17uLL:
      Swift::String v139 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v62 = v139;
      sub_10096CBD0(20);
      swift_bridgeObjectRelease();
      v279[0] = 0xD000000000000011;
      v279[1] = 0x80000001009A5750;
      id v63 = [v62 description];
      goto LABEL_54;
    case 0x18uLL:
      Swift::String v140 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v62 = v140;
      sub_10096CBD0(29);
      swift_bridgeObjectRelease();
      v279[0] = 0xD00000000000001ALL;
      v279[1] = 0x80000001009A5730;
      id v63 = [v62 description];
      goto LABEL_54;
    case 0x19uLL:
      long long v226 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v62 = v226;
      sub_10096CBD0(28);
      swift_bridgeObjectRelease();
      v279[0] = 0xD000000000000019;
      v279[1] = 0x80000001009A5710;
      id v63 = [v62 description];
      goto LABEL_54;
    case 0x1AuLL:
      Swift::String v141 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v62 = v141;
      sub_10096CBD0(33);
      swift_bridgeObjectRelease();
      v279[0] = 0xD00000000000001ELL;
      v279[1] = 0x80000001009A56F0;
      if (v141)
      {
        id v142 = [v62 description];
        uint64_t v143 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        Swift::String v145 = v144;
      }
      else
      {
        Swift::String v145 = (void *)0xE600000000000000;
        uint64_t v143 = 0x29656E6F6E28;
      }
      v358._int64_t countAndFlagsBits = v143;
      v358._object = v145;
      sub_10096BDC0(v358);
      goto LABEL_55;
    case 0x1BuLL:
      return v27;
    case 0x1CuLL:
      return 0xD000000000000019;
    case 0x1DuLL:
      uint64_t v87 = (char *)&v270 - v24;
      uint64_t v231 = swift_projectBox();
      uint64_t v89 = v277;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v87, v231, v277);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      sub_10096CBD0(25);
      v90._int64_t countAndFlagsBits = 0xD000000000000016;
      id v91 = "testingHarnessBarrier(";
LABEL_59:
      v90._object = (void *)((unint64_t)(v91 - 32) | 0x8000000000000000);
      sub_10096BDC0(v90);
      sub_10096D270();
      v341._int64_t countAndFlagsBits = 41;
      v341._object = (void *)0xE100000000000000;
      sub_10096BDC0(v341);
      uint64_t v27 = v279[0];
      (*(void (**)(char *, uint64_t))(v22 + 8))(v87, v89);
      return v27;
    case 0x1EuLL:
      unint64_t v146 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_1000CE628(v146);
      uint64_t v27 = sub_1006A9894(v146, a3, a2, a5, a4);
      sub_1000B6C28(v146);
      return v27;
    case 0x1FuLL:
      unint64_t v147 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      sub_10096CBD0(18);
      swift_bridgeObjectRelease();
      v279[0] = 0x756F72676B636162;
      v279[1] = 0xEF286B726F57646ELL;
      v99._int64_t countAndFlagsBits = sub_100609068(v147);
LABEL_30:
      sub_10096BDC0(v99);
      swift_bridgeObjectRelease();
      v314._int64_t countAndFlagsBits = 41;
      v314._object = (void *)0xE100000000000000;
      sub_10096BDC0(v314);
      return v279[0];
    case 0x20uLL:
      uint64_t v148 = v23;
      uint64_t v149 = v26;
      uint64_t v150 = sub_10002B7CC(&qword_100AD0F60);
      uint64_t v151 = swift_projectBox();
      int v152 = *(unsigned __int8 *)(v151 + *(int *)(v150 + 48));
      Swift::String v153 = *(void **)(v151 + *(int *)(v150 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v149 + 16))(v20, v151, v148);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v154 = v153;
      sub_10096CBD0(45);
      swift_bridgeObjectRelease();
      strcpy((char *)v279, "itemID(");
      v279[1] = 0xE700000000000000;
      sub_10096AD20((NSURL *)0x2844496D657469);
      Swift::String v156 = v155;
      id v157 = objc_msgSend(v155, "fp_shortDescription");

      uint64_t v158 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      Swift::String v160 = v159;

      v315._int64_t countAndFlagsBits = v158;
      v315._object = v160;
      sub_10096BDC0(v315);
      swift_bridgeObjectRelease();
      v316._int64_t countAndFlagsBits = 0xD000000000000019;
      v316._object = (void *)0x80000001009A5610;
      sub_10096BDC0(v316);
      if (v152) {
        v161._int64_t countAndFlagsBits = 1702195828;
      }
      else {
        v161._int64_t countAndFlagsBits = 0x65736C6166;
      }
      if (v152) {
        Swift::String v162 = (void *)0xE400000000000000;
      }
      else {
        Swift::String v162 = (void *)0xE500000000000000;
      }
      v161._object = v162;
      sub_10096BDC0(v161);
      swift_bridgeObjectRelease();
      v317._int64_t countAndFlagsBits = 0x203A7962202CLL;
      v317._object = (void *)0xE600000000000000;
      sub_10096BDC0(v317);
      id v163 = [v154 description];
      uint64_t v164 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      Swift::String v166 = v165;

      v318._int64_t countAndFlagsBits = v164;
      v318._object = v166;
      sub_10096BDC0(v318);
      swift_bridgeObjectRelease();
      v319._int64_t countAndFlagsBits = 41;
      v319._object = (void *)0xE100000000000000;
      sub_10096BDC0(v319);

      uint64_t v27 = v279[0];
      (*(void (**)(char *, uint64_t))(v149 + 8))(v20, v148);
      return v27;
    case 0x21uLL:
      uint64_t v38 = v23;
      uint64_t v39 = v26;
      uint64_t v40 = v25;
      uint64_t v167 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v168 = swift_projectBox();
      Swift::String v169 = *(void **)(v168 + *(int *)(v167 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v40, v168, v38);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v46 = v169;
      sub_10096CBD0(26);
      swift_bridgeObjectRelease();
      v279[0] = 0xD000000000000010;
      v279[1] = 0x80000001009A55D0;
      sub_10096AD20((NSURL *)0x80000001009A55D0);
      uint64_t v171 = v170;
      id v172 = objc_msgSend(v170, "fp_shortDescription");

      uint64_t v173 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v175 = v174;

      v320._int64_t countAndFlagsBits = v173;
      v320._object = v175;
      sub_10096BDC0(v320);
      swift_bridgeObjectRelease();
      v321._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v321._object = (void *)0xE500000000000000;
      sub_10096BDC0(v321);
      id v54 = [v46 description];
      goto LABEL_44;
    case 0x22uLL:
      uint64_t v176 = swift_projectBox();
      unint64_t v178 = v274;
      uint64_t v177 = v275;
      (*(void (**)(char *, uint64_t, uint64_t))(v275 + 16))(v274, v176, v15);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      sub_10096CBD0(40);
      v179._int64_t countAndFlagsBits = 0xD000000000000025;
      unint64_t v180 = "backgroundMaterializeParentHierarchy(";
LABEL_51:
      v179._object = (void *)((unint64_t)(v180 - 32) | 0x8000000000000000);
      sub_10096BDC0(v179);
      swift_getWitnessTable();
      sub_10096D270();
      v336._int64_t countAndFlagsBits = 41;
      v336._object = (void *)0xE100000000000000;
      sub_10096BDC0(v336);
      uint64_t v27 = v279[0];
      (*(void (**)(char *, uint64_t))(v177 + 8))(v178, v15);
      return v27;
    case 0x23uLL:
      uint64_t v38 = v23;
      uint64_t v39 = v26;
      uint64_t v40 = v25;
      uint64_t v181 = sub_10002B7CC(&qword_100AD0820);
      uint64_t v182 = swift_projectBox();
      uint64_t v183 = *(void **)(v182 + *(int *)(v181 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v40, v182, v38);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v46 = v183;
      sub_10096CBD0(22);
      swift_bridgeObjectRelease();
      strcpy((char *)v279, "itemForURL(");
      HIDWORD(v279[1]) = -352321536;
      sub_10096AD20((NSURL *)0x55726F466D657469);
      uint64_t v185 = v184;
      id v186 = objc_msgSend(v184, "fp_shortDescription");

      uint64_t v187 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v189 = v188;

      v322._int64_t countAndFlagsBits = v187;
      v322._object = v189;
      sub_10096BDC0(v322);
      swift_bridgeObjectRelease();
      v323._int64_t countAndFlagsBits = 0x203A7962202CLL;
      v323._object = (void *)0xE600000000000000;
      sub_10096BDC0(v323);
      id v54 = [v46 description];
      goto LABEL_44;
    case 0x24uLL:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v29 = v277;
      uint64_t v190 = swift_getTupleTypeMetadata2();
      uint64_t v191 = swift_projectBox();
      uint64_t v192 = *(void **)(v191 + *(int *)(v190 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v191, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v192;
      sub_10096CBD0(22);
      v324._int64_t countAndFlagsBits = 0x55726F466D657469;
      v324._object = (void *)0xEB00000000284C52;
      sub_10096BDC0(v324);
      sub_10096D270();
      v325._int64_t countAndFlagsBits = 0x203A7962202CLL;
      v325._object = (void *)0xE600000000000000;
      sub_10096BDC0(v325);
      id v34 = [v33 description];
      goto LABEL_65;
    case 0x25uLL:
      uint64_t v38 = v23;
      uint64_t v39 = v26;
      uint64_t v40 = v25;
      uint64_t v193 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v194 = swift_projectBox();
      uint64_t v195 = *(void **)(v194 + *(int *)(v193 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v40, v194, v38);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v46 = v195;
      sub_10096CBD0(35);
      swift_bridgeObjectRelease();
      v279[0] = 0xD000000000000018;
      v279[1] = 0x80000001009A55F0;
      sub_10096AD20((NSURL *)0xD000000000000018);
      uint64_t v197 = v196;
      id v198 = objc_msgSend(v196, "fp_shortDescription");

      uint64_t v199 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      Swift::String v201 = v200;

      v326._int64_t countAndFlagsBits = v199;
      v326._object = v201;
      sub_10096BDC0(v326);
      swift_bridgeObjectRelease();
      v327._int64_t countAndFlagsBits = 0x203A7962202CLL;
      v327._object = (void *)0xE600000000000000;
      sub_10096BDC0(v327);
      id v54 = [v46 description];
      goto LABEL_44;
    case 0x26uLL:
      uint64_t v232 = v23;
      uint64_t v233 = v26;
      uint64_t v234 = v25;
      uint64_t v235 = sub_10002B7CC((uint64_t *)&unk_100AD08C0);
      uint64_t v236 = swift_projectBox();
      unint64_t v237 = *(void **)(v236 + *(int *)(v235 + 48));
      long long v238 = *(void **)(v236 + *(int *)(v235 + 64));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v233 + 16))(v234, v236, v232);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v239 = v238;
      sub_10096CBD0(37);
      v342._int64_t countAndFlagsBits = 0x636E7953656C6966;
      v342._object = (void *)0xEE00286573756150;
      sub_10096BDC0(v342);
      sub_10096AD20(v240);
      long long v242 = v241;
      id v243 = objc_msgSend(v241, "fp_shortDescription");

      uint64_t v244 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v246 = v245;

      v343._int64_t countAndFlagsBits = v244;
      v343._object = v246;
      sub_10096BDC0(v343);
      swift_bridgeObjectRelease();
      v344._int64_t countAndFlagsBits = 0x697661686562202CLL;
      v344._object = (void *)0xEC000000203A726FLL;
      sub_10096BDC0(v344);
      uint64_t v278 = v237;
      type metadata accessor for FPPauseBehavior(0);
      sub_10096CDF0();
      v345._int64_t countAndFlagsBits = 981033504;
      v345._object = (void *)0xE400000000000000;
      sub_10096BDC0(v345);
      id v247 = [v239 description];
      goto LABEL_62;
    case 0x27uLL:
      uint64_t v232 = v23;
      uint64_t v233 = v26;
      uint64_t v234 = v25;
      uint64_t v248 = sub_10002B7CC((uint64_t *)&unk_100AD6F30);
      uint64_t v249 = swift_projectBox();
      unint64_t v250 = *(void **)(v249 + *(int *)(v248 + 48));
      uint64_t v251 = *(void **)(v249 + *(int *)(v248 + 64));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v233 + 16))(v234, v249, v232);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v239 = v251;
      sub_10096CBD0(38);
      v346._int64_t countAndFlagsBits = 0x636E7953656C6966;
      v346._object = (void *)0xEF28656D75736552;
      sub_10096BDC0(v346);
      sub_10096AD20(v252);
      unint64_t v254 = v253;
      id v255 = objc_msgSend(v253, "fp_shortDescription");

      uint64_t v256 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v258 = v257;

      v347._int64_t countAndFlagsBits = v256;
      v347._object = v258;
      sub_10096BDC0(v347);
      swift_bridgeObjectRelease();
      v348._int64_t countAndFlagsBits = 0x697661686562202CLL;
      v348._object = (void *)0xEC000000203A726FLL;
      sub_10096BDC0(v348);
      uint64_t v278 = v250;
      type metadata accessor for FPResumeBehavior(0);
      sub_10096CDF0();
      v349._int64_t countAndFlagsBits = 981033504;
      v349._object = (void *)0xE400000000000000;
      sub_10096BDC0(v349);
      id v247 = [v239 description];
LABEL_62:
      id v259 = v247;
      uint64_t v260 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v262 = v261;

      v350._int64_t countAndFlagsBits = v260;
      v350._object = v262;
      sub_10096BDC0(v350);
      swift_bridgeObjectRelease();
      v351._int64_t countAndFlagsBits = 41;
      v351._object = (void *)0xE100000000000000;
      sub_10096BDC0(v351);

      uint64_t v27 = v279[0];
      (*(void (**)(uint64_t, uint64_t))(v233 + 8))(v234, v232);
      return v27;
    case 0x28uLL:
      uint64_t v38 = v23;
      uint64_t v39 = v26;
      uint64_t v40 = v25;
      uint64_t v202 = sub_10002B7CC((uint64_t *)&unk_100AD08D0);
      uint64_t v203 = swift_projectBox();
      uint64_t v204 = *(void **)(v203 + *(int *)(v202 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v40, v203, v38);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v46 = v204;
      sub_10096CBD0(24);
      swift_bridgeObjectRelease();
      v279[0] = 0x636E7953656C6966;
      v279[1] = 0xEF28656D75736552;
      sub_10096AD20((NSURL *)0x636E7953656C6966);
      unint64_t v206 = v205;
      id v207 = objc_msgSend(v205, "fp_shortDescription");

      uint64_t v208 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v210 = v209;

      v328._int64_t countAndFlagsBits = v208;
      v328._object = v210;
      sub_10096BDC0(v328);
      swift_bridgeObjectRelease();
      v329._int64_t countAndFlagsBits = 981033504;
      v329._object = (void *)0xE400000000000000;
      sub_10096BDC0(v329);
      id v54 = [v46 description];
LABEL_44:
      id v211 = v54;
      uint64_t v212 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v214 = v213;

      v330._int64_t countAndFlagsBits = v212;
      v330._object = v214;
      sub_10096BDC0(v330);
      swift_bridgeObjectRelease();
      v331._int64_t countAndFlagsBits = 41;
      v331._object = (void *)0xE100000000000000;
      sub_10096BDC0(v331);

      uint64_t v27 = v279[0];
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
      return v27;
    case 0x29uLL:
      if (a1 == 0xA000000000000002) {
        return 0xD00000000000001BLL;
      }
      if (a1 == 0xA00000000000000ALL) {
        return 0xD000000000000018;
      }
      return 0xD000000000000015;
    default:
      uint64_t v28 = (char *)&v270 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v29 = v277;
      uint64_t v30 = swift_getTupleTypeMetadata2();
      uint64_t v31 = swift_projectBox();
      double v32 = *(void **)(v31 + *(int *)(v30 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v31, v29);
      v279[0] = 0;
      v279[1] = 0xE000000000000000;
      id v33 = v32;
      sub_10096CBD0(26);
      v280._object = (void *)0x80000001009A5860;
      v280._int64_t countAndFlagsBits = 0xD000000000000010;
      sub_10096BDC0(v280);
      sub_10096D270();
      v281._int64_t countAndFlagsBits = 0x3A7962202CLL;
      v281._object = (void *)0xE500000000000000;
      sub_10096BDC0(v281);
      id v34 = [v33 description];
      goto LABEL_65;
  }
}

unint64_t sub_1006AC330(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      swift_getAssociatedTypeWitness();
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      goto LABEL_17;
    case 1uLL:
    case 3uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0x16uLL:
    case 0x24uLL:
      swift_getAssociatedTypeWitness();
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      goto LABEL_16;
    case 2uLL:
      uint64_t v27 = sub_10002B7CC(&qword_100ACD5F0);
      uint64_t v28 = swift_projectBox();
      uint64_t v29 = *(int *)(v27 + 64);
      goto LABEL_20;
    case 4uLL:
    case 5uLL:
      swift_getAssociatedTypeWitness();
      sub_10096C890();
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
LABEL_16:
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      goto LABEL_17;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      uint64_t v20 = (uint64_t *)&unk_100AD6F40;
      goto LABEL_19;
    case 0xEuLL:
    case 0xFuLL:
      uint64_t v21 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 24);
      goto LABEL_21;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      v42[1] = a1 & 0xFFFFFFFFFFFFFF9;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v16 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v18 = swift_getAssociatedConformanceWitness();
      uint64_t v43 = AssociatedTypeWitness;
      uint64_t v44 = v16;
      uint64_t v45 = AssociatedConformanceWitness;
      uint64_t v46 = v18;
      type metadata accessor for ReconciliationID();
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
LABEL_17:
      uint64_t v28 = swift_projectBox();
      uint64_t v29 = *(int *)(TupleTypeMetadata2 + 48);
      goto LABEL_20;
    case 0x15uLL:
    case 0x22uLL:
      uint64_t v22 = swift_getAssociatedTypeWitness();
      uint64_t v23 = swift_getAssociatedTypeWitness();
      uint64_t v24 = swift_getAssociatedConformanceWitness();
      uint64_t v25 = swift_getAssociatedConformanceWitness();
      uint64_t v43 = v22;
      uint64_t v44 = v23;
      uint64_t v45 = v24;
      uint64_t v46 = v25;
      type metadata accessor for ReconciliationID();
      uint64_t v26 = swift_getTupleTypeMetadata2();
      return *(void *)(swift_projectBox() + *(int *)(v26 + 48));
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      uint64_t v21 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 16);
      goto LABEL_21;
    case 0x1AuLL:
      return *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
    case 0x1BuLL:
    case 0x1CuLL:
      return *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
    case 0x1EuLL:
      unint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_1000CE628(v30);
      uint64_t v14 = sub_1006AC330(v30, a3, a2, a5, a4);
      sub_1000B6C28(v30);
      return v14;
    case 0x1FuLL:
      return 0;
    case 0x23uLL:
      uint64_t v20 = &qword_100AD0820;
      goto LABEL_19;
    case 0x28uLL:
      uint64_t v20 = (uint64_t *)&unk_100AD08D0;
LABEL_19:
      uint64_t v31 = sub_10002B7CC(v20);
      uint64_t v28 = swift_projectBox();
      uint64_t v29 = *(int *)(v31 + 48);
LABEL_20:
      uint64_t v21 = (id *)(v28 + v29);
LABEL_21:
      id v32 = *v21;
      unsigned int v33 = [v32 qos];
      uint64_t v34 = 0x6000000000000000;
      unint64_t v35 = 0x4000000000000000;
      if (v33 <= 0x14) {
        unint64_t v35 = (unint64_t)(v33 - 17 < 0xFFFFFFF0) << 61;
      }
      if (v33 <= 0x18) {
        uint64_t v34 = v35;
      }
      if (v33 <= 0x20) {
        unint64_t v36 = v34;
      }
      else {
        unint64_t v36 = 0x8000000000000000;
      }
      id v37 = [v32 date];

      sub_10096B0A0();
      sub_10096B080();
      double v39 = v38;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      double v40 = v39 * 1000000000.0;
      if ((~COERCE__INT64(v39 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      if (v40 <= -9.22337204e18)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v40 >= 9.22337204e18)
      {
LABEL_35:
        __break(1u);
        JUMPOUT(0x1006ACA4CLL);
      }
      return ((uint64_t)v40 & ~((uint64_t)v40 >> 63)) + v36;
    default:
      return v14;
  }
}

void sub_1006ACAF0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v153 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v154 = AssociatedTypeWitness;
  uint64_t v155 = v12;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v157 = swift_getAssociatedConformanceWitness();
  uint64_t v152 = v157;
  uint64_t v149 = type metadata accessor for ReconciliationID();
  uint64_t v151 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v150 = (char *)&v148 - v13;
  uint64_t v14 = sub_10096C890();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v148 - v16;
  uint64_t v18 = sub_10096AE50();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v23 = __chkstk_darwin(v22);
  switch((a2 >> 58) & 0x3C | (a2 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v148 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v35 = swift_projectBox();
      id v32 = *(void **)(v35 + *(int *)(TupleTypeMetadata2 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v35, v12);
      Swift::UInt v33 = 1;
      goto LABEL_46;
    case 2uLL:
      uint64_t v36 = v23;
      uint64_t v37 = v26;
      double v38 = v27;
      double v39 = (int *)sub_10002B7CC(&qword_100ACD5F0);
      uint64_t v40 = swift_projectBox();
      uint64_t v41 = *(void **)(v40 + v39[16]);
      Swift::UInt v42 = *(void *)(v40 + v39[20]);
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v38, v40 + v39[12], v36);
      sub_10096D4C0(2uLL);
      id v43 = v41;
      sub_10096BD50();
      sub_10038EF3C();
      sub_10096BAD0();
      sub_10096C840();
      sub_10096D4C0(v42);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
      return;
    case 3uLL:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v148 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v44 = swift_getTupleTypeMetadata2();
      uint64_t v45 = swift_projectBox();
      id v32 = *(void **)(v45 + *(int *)(v44 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v45, v12);
      Swift::UInt v33 = 3;
      goto LABEL_46;
    case 4uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v46 = swift_getTupleTypeMetadata2();
      uint64_t v47 = swift_projectBox();
      NSString v48 = *(void **)(v47 + *(int *)(v46 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v47, v14);
      Swift::UInt v49 = 4;
      goto LABEL_8;
    case 5uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v50 = swift_getTupleTypeMetadata2();
      uint64_t v51 = swift_projectBox();
      NSString v48 = *(void **)(v51 + *(int *)(v50 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v51, v14);
      Swift::UInt v49 = 5;
LABEL_8:
      sub_10096D4C0(v49);
      id v52 = v48;
      sub_10096C8A0();
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);

      return;
    case 6uLL:
      uint64_t v53 = v23;
      uint64_t v54 = v26;
      uint64_t v55 = v27;
      uint64_t v56 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v57 = swift_projectBox();
      uint64_t v58 = *(void **)(v57 + *(int *)(v56 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, v57, v53);
      Swift::UInt v59 = 6;
      goto LABEL_38;
    case 7uLL:
      uint64_t v12 = v23;
      uint64_t v60 = v26;
      Swift::String v61 = v27;
      uint64_t v62 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v61, v62, v12);
      sub_10096D4C0(7uLL);
      sub_10038EF3C();
      goto LABEL_57;
    case 8uLL:
      uint64_t v60 = v25;
      Swift::String v61 = (char *)&v148 - v24;
      uint64_t v63 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v61, v63, v12);
      Swift::UInt v64 = 8;
      goto LABEL_56;
    case 9uLL:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v148 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v65 = swift_getTupleTypeMetadata2();
      uint64_t v66 = swift_projectBox();
      id v32 = *(void **)(v66 + *(int *)(v65 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v66, v12);
      Swift::UInt v33 = 9;
      goto LABEL_46;
    case 0xAuLL:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v148 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v67 = swift_getTupleTypeMetadata2();
      uint64_t v68 = swift_projectBox();
      id v32 = *(void **)(v68 + *(int *)(v67 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v68, v12);
      Swift::UInt v33 = 10;
      goto LABEL_46;
    case 0xBuLL:
      Swift::UInt v69 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v70 = 11;
      goto LABEL_53;
    case 0xCuLL:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v148 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v71 = swift_getTupleTypeMetadata2();
      uint64_t v72 = swift_projectBox();
      id v32 = *(void **)(v72 + *(int *)(v71 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v72, v12);
      Swift::UInt v33 = 12;
      goto LABEL_46;
    case 0xDuLL:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v148 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v73 = swift_getTupleTypeMetadata2();
      uint64_t v74 = swift_projectBox();
      id v32 = *(void **)(v74 + *(int *)(v73 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v74, v12);
      Swift::UInt v33 = 13;
      goto LABEL_46;
    case 0xEuLL:
      unint64_t v75 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v76 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v77 = v153;
      sub_10096D4C0(0xEuLL);
      id v78 = v76;
      sub_1006B153C(v77, v75);
      goto LABEL_49;
    case 0xFuLL:
      uint64_t v79 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v80 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v81 = v153;
      sub_10096D4C0(0xFuLL);
      id v78 = v80;
      sub_1006B12F8(v81, v79);
      goto LABEL_49;
    case 0x10uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v82 = v149;
      uint64_t v83 = swift_getTupleTypeMetadata2();
      uint64_t v84 = swift_projectBox();
      unint64_t v85 = *(void **)(v84 + *(int *)(v83 + 48));
      uint64_t v87 = v150;
      uint64_t v86 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v84, v82);
      Swift::UInt v88 = 16;
      goto LABEL_44;
    case 0x11uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v82 = v149;
      uint64_t v89 = swift_getTupleTypeMetadata2();
      uint64_t v90 = swift_projectBox();
      unint64_t v85 = *(void **)(v90 + *(int *)(v89 + 48));
      uint64_t v87 = v150;
      uint64_t v86 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v90, v82);
      Swift::UInt v88 = 17;
      goto LABEL_44;
    case 0x12uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v82 = v149;
      uint64_t v91 = swift_getTupleTypeMetadata2();
      uint64_t v92 = swift_projectBox();
      unint64_t v85 = *(void **)(v92 + *(int *)(v91 + 48));
      uint64_t v87 = v150;
      uint64_t v86 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v92, v82);
      Swift::UInt v88 = 18;
      goto LABEL_44;
    case 0x13uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v82 = v149;
      uint64_t v129 = swift_getTupleTypeMetadata2();
      uint64_t v130 = swift_projectBox();
      unint64_t v85 = *(void **)(v130 + *(int *)(v129 + 48));
      uint64_t v87 = v150;
      uint64_t v86 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v130, v82);
      Swift::UInt v88 = 19;
LABEL_44:
      uint64_t v131 = v153;
      sub_10096D4C0(v88);
      id v132 = v85;
      sub_1005EC6F4(v131, v82);
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v82);

      return;
    case 0x14uLL:
      uint64_t v53 = v23;
      uint64_t v54 = v26;
      uint64_t v55 = v27;
      uint64_t v93 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v94 = swift_projectBox();
      uint64_t v58 = *(void **)(v94 + *(int *)(v93 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, v94, v53);
      Swift::UInt v59 = 20;
      goto LABEL_38;
    case 0x15uLL:
      uint64_t v95 = v149;
      uint64_t v96 = swift_getTupleTypeMetadata2();
      uint64_t v97 = swift_projectBox();
      Swift::UInt v98 = *(void *)(v97 + *(int *)(v96 + 48));
      uint64_t v100 = v150;
      uint64_t v99 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v97, v95);
      Swift::UInt v101 = 21;
      goto LABEL_33;
    case 0x16uLL:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v148 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v133 = swift_getTupleTypeMetadata2();
      uint64_t v134 = swift_projectBox();
      id v32 = *(void **)(v134 + *(int *)(v133 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v134, v12);
      Swift::UInt v33 = 22;
      goto LABEL_46;
    case 0x17uLL:
      uint64_t v102 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v103 = 23;
      goto LABEL_48;
    case 0x18uLL:
      uint64_t v102 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v103 = 24;
      goto LABEL_48;
    case 0x19uLL:
      uint64_t v102 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v103 = 25;
LABEL_48:
      sub_10096D4C0(v103);
      id v78 = v102;
LABEL_49:
      sub_10096C840();

      return;
    case 0x1AuLL:
      id v136 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v135 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      sub_10096D4C0(0x1AuLL);
      if (v136)
      {
        sub_10096D4D0(1u);
        id v136 = v136;
        sub_10096C840();
      }
      else
      {
        sub_10096D4D0(0);
      }
      sub_10096D4C0(v135);

      return;
    case 0x1BuLL:
      Swift::UInt v69 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v70 = 27;
      goto LABEL_53;
    case 0x1CuLL:
      Swift::UInt v69 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v70 = 28;
      goto LABEL_53;
    case 0x1DuLL:
      uint64_t v60 = v25;
      Swift::String v61 = (char *)&v148 - v24;
      uint64_t v137 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v61, v137, v12);
      Swift::UInt v64 = 30;
LABEL_56:
      sub_10096D4C0(v64);
LABEL_57:
      sub_10096BAD0();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v12);
      return;
    case 0x1EuLL:
      uint64_t v104 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v105 = v153;
      sub_10096D4C0(0x20uLL);
      sub_1006ACAF0(v105, v104, a4, a3, a6, a5);
      return;
    case 0x1FuLL:
      Swift::UInt v69 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v70 = 33;
LABEL_53:
      sub_10096D4C0(v70);
      Swift::UInt v147 = v69;
      goto LABEL_54;
    case 0x20uLL:
      uint64_t v106 = v23;
      uint64_t v107 = v26;
      uint64_t v108 = sub_10002B7CC(&qword_100AD0F60);
      uint64_t v109 = swift_projectBox();
      Swift::UInt8 v110 = *(unsigned char *)(v109 + *(int *)(v108 + 48));
      uint64_t v111 = *(void **)(v109 + *(int *)(v108 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v21, v109, v106);
      sub_10096D4C0(0x23uLL);
      sub_10038EF3C();
      id v112 = v111;
      sub_10096BAD0();
      sub_10096D4D0(v110);
      sub_10096C840();
      uint64_t v113 = *(void (**)(char *, uint64_t))(v107 + 8);
      uint64_t v114 = v21;
      goto LABEL_61;
    case 0x21uLL:
      uint64_t v53 = v23;
      uint64_t v54 = v26;
      uint64_t v55 = v27;
      uint64_t v115 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v116 = swift_projectBox();
      uint64_t v58 = *(void **)(v116 + *(int *)(v115 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, v116, v53);
      Swift::UInt v59 = 36;
      goto LABEL_38;
    case 0x22uLL:
      uint64_t v95 = v149;
      uint64_t v117 = swift_getTupleTypeMetadata2();
      uint64_t v118 = swift_projectBox();
      Swift::UInt v98 = *(void *)(v118 + *(int *)(v117 + 48));
      uint64_t v100 = v150;
      uint64_t v99 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v118, v95);
      Swift::UInt v101 = 37;
LABEL_33:
      uint64_t v119 = v153;
      sub_10096D4C0(v101);
      sub_1005EC6F4(v119, v95);
      sub_10096D4C0(v98);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v95);
      return;
    case 0x23uLL:
      uint64_t v53 = v23;
      uint64_t v54 = v26;
      uint64_t v55 = v27;
      uint64_t v120 = sub_10002B7CC(&qword_100AD0820);
      uint64_t v121 = swift_projectBox();
      uint64_t v58 = *(void **)(v121 + *(int *)(v120 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, v121, v53);
      Swift::UInt v59 = 38;
      goto LABEL_38;
    case 0x24uLL:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v148 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v122 = swift_getTupleTypeMetadata2();
      uint64_t v123 = swift_projectBox();
      id v32 = *(void **)(v123 + *(int *)(v122 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v123, v12);
      Swift::UInt v33 = 39;
      goto LABEL_46;
    case 0x25uLL:
      uint64_t v53 = v23;
      uint64_t v54 = v26;
      uint64_t v55 = v27;
      uint64_t v124 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v125 = swift_projectBox();
      uint64_t v58 = *(void **)(v125 + *(int *)(v124 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, v125, v53);
      Swift::UInt v59 = 40;
      goto LABEL_38;
    case 0x26uLL:
      uint64_t v106 = v23;
      uint64_t v138 = v26;
      Swift::String v139 = v27;
      uint64_t v140 = sub_10002B7CC((uint64_t *)&unk_100AD08C0);
      uint64_t v141 = swift_projectBox();
      Swift::UInt v142 = *(void *)(v141 + *(int *)(v140 + 48));
      uint64_t v143 = *(void **)(v141 + *(int *)(v140 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v139, v141, v106);
      Swift::UInt v144 = 41;
      goto LABEL_60;
    case 0x27uLL:
      uint64_t v106 = v23;
      uint64_t v138 = v26;
      Swift::String v139 = v27;
      uint64_t v145 = sub_10002B7CC((uint64_t *)&unk_100AD6F30);
      uint64_t v146 = swift_projectBox();
      Swift::UInt v142 = *(void *)(v146 + *(int *)(v145 + 48));
      uint64_t v143 = *(void **)(v146 + *(int *)(v145 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v139, v146, v106);
      Swift::UInt v144 = 42;
LABEL_60:
      sub_10096D4C0(v144);
      sub_10038EF3C();
      id v112 = v143;
      sub_10096BAD0();
      sub_10096D4C0(v142);
      sub_10096C840();
      uint64_t v113 = *(void (**)(char *, uint64_t))(v138 + 8);
      uint64_t v114 = v139;
LABEL_61:
      v113(v114, v106);
      goto LABEL_62;
    case 0x28uLL:
      uint64_t v53 = v23;
      uint64_t v54 = v26;
      uint64_t v55 = v27;
      uint64_t v126 = sub_10002B7CC((uint64_t *)&unk_100AD08D0);
      uint64_t v127 = swift_projectBox();
      uint64_t v58 = *(void **)(v127 + *(int *)(v126 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, v127, v53);
      Swift::UInt v59 = 43;
LABEL_38:
      sub_10096D4C0(v59);
      sub_10038EF3C();
      id v128 = v58;
      sub_10096BAD0();
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);

      return;
    case 0x29uLL:
      if (a2 == 0xA000000000000002)
      {
        Swift::UInt v147 = 29;
      }
      else if (a2 == 0xA00000000000000ALL)
      {
        Swift::UInt v147 = 31;
      }
      else
      {
        Swift::UInt v147 = 34;
      }
LABEL_54:
      sub_10096D4C0(v147);
      return;
    default:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v148 - v24;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v30 = swift_getTupleTypeMetadata2();
      uint64_t v31 = swift_projectBox();
      id v32 = *(void **)(v31 + *(int *)(v30 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v31, v12);
      Swift::UInt v33 = 0;
LABEL_46:
      sub_10096D4C0(v33);
      id v112 = v32;
      sub_10096BAD0();
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v12);
LABEL_62:

      return;
  }
}

uint64_t sub_1006AE040(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v534 = a2;
  unint64_t v535 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v517 = a5;
  uint64_t v515 = a3;
  uint64_t v516 = a6;
  uint64_t v514 = a4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v529 = AssociatedTypeWitness;
  v536[0] = AssociatedTypeWitness;
  v536[1] = v11;
  uint64_t v537 = AssociatedConformanceWitness;
  uint64_t v538 = swift_getAssociatedConformanceWitness();
  unint64_t v532 = v538;
  uint64_t v12 = type metadata accessor for ReconciliationID();
  unint64_t v530 = *(void *)(v12 - 8);
  uint64_t v531 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v509 = (char *)&v476 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v510 = (char *)&v476 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v505 = (char *)&v476 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v506 = (char *)&v476 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v512[1] = (char *)&v476 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v513 = (char *)&v476 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v511 = (char *)&v476 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v512[0] = (char *)&v476 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  unsigned int v507 = (char *)&v476 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  size_t v508 = (char *)&v476 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v503 = (char *)&v476 - v34;
  __chkstk_darwin(v33);
  uint64_t v504 = (char *)&v476 - v35;
  uint64_t v36 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v518 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v37 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v520 = (char *)&v476 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v519 = (char *)&v476 - v40;
  uint64_t v527 = v36;
  uint64_t v526 = *(void *)(v36 - 8);
  uint64_t v41 = __chkstk_darwin(v39);
  int v478 = (char *)&v476 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  unsigned int v524 = (char *)&v476 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  int v477 = (char *)&v476 - v46;
  __chkstk_darwin(v45);
  int v523 = (char *)&v476 - v47;
  uint64_t v48 = sub_10096AE50();
  uint64_t v49 = __chkstk_darwin(v48);
  uint64_t v50 = __chkstk_darwin(v49);
  uint64_t v51 = __chkstk_darwin(v50);
  uint64_t v52 = __chkstk_darwin(v51);
  uint64_t v53 = __chkstk_darwin(v52);
  uint64_t v54 = __chkstk_darwin(v53);
  uint64_t v55 = __chkstk_darwin(v54);
  uint64_t v56 = __chkstk_darwin(v55);
  uint64_t v57 = __chkstk_darwin(v56);
  uint64_t v501 = (char *)&v476 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v502 = (char *)&v476 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v497 = (char *)&v476 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v498 = (char *)&v476 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  size_t v499 = (char *)&v476 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v500 = (char *)&v476 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  unint64_t v495 = (char *)&v476 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v496 = (char *)&v476 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  uint64_t v490 = (char *)&v476 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v77 = (char *)&v476 - v76;
  uint64_t v78 = __chkstk_darwin(v75);
  uint64_t v493 = (char *)&v476 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  size_t v494 = (char *)&v476 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  size_t v521 = (char *)&v476 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  unint64_t v522 = (char *)&v476 - v85;
  uint64_t v533 = v11;
  uint64_t v86 = __chkstk_darwin(v84);
  size_t v491 = (char *)&v476 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __chkstk_darwin(v86);
  uint64_t v492 = (char *)&v476 - v89;
  uint64_t v90 = __chkstk_darwin(v88);
  size_t v479 = (char *)&v476 - v91;
  uint64_t v92 = __chkstk_darwin(v90);
  uint64_t v94 = (char *)&v476 - v93;
  uint64_t v95 = __chkstk_darwin(v92);
  unsigned int v488 = (char *)&v476 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  uint64_t v489 = (char *)&v476 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  uint64_t v486 = (char *)&v476 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  unsigned int v487 = (char *)&v476 - v102;
  uint64_t v103 = __chkstk_darwin(v101);
  unsigned int v484 = (char *)&v476 - v104;
  uint64_t v105 = __chkstk_darwin(v103);
  unsigned int v485 = (char *)&v476 - v106;
  uint64_t v107 = __chkstk_darwin(v105);
  uint64_t v482 = (char *)&v476 - v108;
  uint64_t v109 = __chkstk_darwin(v107);
  size_t v483 = (char *)&v476 - v110;
  uint64_t v111 = __chkstk_darwin(v109);
  unsigned int v480 = (char *)&v476 - v112;
  uint64_t v113 = __chkstk_darwin(v111);
  unsigned int v481 = (char *)&v476 - v114;
  uint64_t v115 = __chkstk_darwin(v113);
  uint64_t v117 = (char *)&v476 - v116;
  uint64_t v118 = __chkstk_darwin(v115);
  uint64_t v120 = (char *)&v476 - v119;
  uint64_t v121 = __chkstk_darwin(v118);
  uint64_t v476 = (char *)&v476 - v122;
  uint64_t v123 = __chkstk_darwin(v121);
  uint64_t v125 = (char *)&v476 - v124;
  uint64_t v126 = __chkstk_darwin(v123);
  id v128 = (char *)&v476 - v127;
  uint64_t v129 = __chkstk_darwin(v126);
  uint64_t v131 = (char *)&v476 - v130;
  uint64_t v132 = __chkstk_darwin(v129);
  uint64_t v134 = (char *)&v476 - v133;
  uint64_t v135 = __chkstk_darwin(v132);
  uint64_t v137 = (char *)&v476 - v136;
  uint64_t v138 = __chkstk_darwin(v135);
  uint64_t v150 = (char *)&v476 - v149;
  switch((v535 >> 58) & 0x3C | (v535 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v164 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v165 = swift_getTupleTypeMetadata2();
      uint64_t v166 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 1) {
        goto LABEL_153;
      }
      uint64_t v167 = v166;
      uint64_t v168 = *(int *)(v165 + 48);
      Swift::String v169 = *(void **)(v166 + v168);
      uint64_t v170 = swift_projectBox();
      uint64_t v171 = *(void **)(v170 + v168);
      id v172 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 16);
      uint64_t v173 = v533;
      v172(v134, v167, v533);
      v172(v131, v170, v173);
      id v174 = v169;
      id v175 = v171;
      if ((sub_10096BBE0() & 1) == 0)
      {

        unint64_t v435 = *(void (**)(char *, uint64_t))(v164 + 8);
        v435(v131, v173);
        v435(v134, v173);
        goto LABEL_153;
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v176 = sub_10096C830();

      uint64_t v177 = *(void (**)(char *, uint64_t))(v164 + 8);
      unint64_t v178 = v131;
      char v162 = v176;
      v177(v178, v173);
      v177(v134, v173);
      return v162 & 1;
    case 2uLL:
      uint64_t v533 = v138;
      unint64_t v179 = v147;
      unint64_t v180 = (int *)sub_10002B7CC(&qword_100ACD5F0);
      uint64_t v181 = (uint64_t *)swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 2) {
        goto LABEL_153;
      }
      uint64_t v182 = *v181;
      uint64_t v183 = v181[1];
      uint64_t v184 = v180[16];
      unint64_t v535 = *(uint64_t *)((char *)v181 + v184);
      uint64_t v185 = v180[20];
      unint64_t v532 = *(uint64_t *)((char *)v181 + v185);
      uint64_t v186 = v180[12];
      uint64_t v187 = (char *)v181 + v186;
      unint64_t v188 = (uint64_t *)swift_projectBox();
      uint64_t v189 = *v188;
      uint64_t v190 = v188[1];
      uint64_t v191 = *(void **)((char *)v188 + v184);
      uint64_t v192 = (char *)v188 + v186;
      unint64_t v534 = *(uint64_t *)((char *)v188 + v185);
      uint64_t v193 = *(void (**)(char *, char *, uint64_t))(v179 + 16);
      uint64_t v194 = v187;
      uint64_t v195 = v533;
      v193(v522, v194, v533);
      v193(v521, v192, v195);
      if ((v182 != v189 || v183 != v190) && (sub_10096D2D0() & 1) == 0)
      {
        unsigned int v416 = *(void (**)(char *, uint64_t))(v179 + 8);
        uint64_t v417 = v533;
        v416(v521, v533);
        uint64_t v418 = v522;
        goto LABEL_138;
      }
      id v196 = (id)v535;
      id v197 = v191;
      uint64_t v199 = v521;
      id v198 = v522;
      if ((sub_10096ADA0() & 1) == 0)
      {

        unsigned int v416 = *(void (**)(char *, uint64_t))(v179 + 8);
        uint64_t v417 = v533;
        v416(v199, v533);
        uint64_t v418 = v198;
        goto LABEL_138;
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v200 = sub_10096C830();

      Swift::String v201 = *(void (**)(char *, uint64_t))(v179 + 8);
      uint64_t v202 = v533;
      v201(v199, v533);
      v201(v198, v202);
      char v162 = v200 & (v532 == v534);
      return v162 & 1;
    case 3uLL:
      uint64_t v203 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v204 = swift_getTupleTypeMetadata2();
      uint64_t v205 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 3) {
        goto LABEL_153;
      }
      uint64_t v206 = v205;
      uint64_t v207 = *(int *)(v204 + 48);
      uint64_t v208 = *(void **)(v205 + v207);
      uint64_t v209 = swift_projectBox();
      unint64_t v210 = *(void **)(v209 + v207);
      id v211 = *(void (**)(char *, uint64_t, uint64_t))(v203 + 16);
      uint64_t v212 = v533;
      v211(v128, v206, v533);
      v211(v125, v209, v212);
      id v213 = v208;
      id v214 = v210;
      if ((sub_10096BBE0() & 1) == 0)
      {

        uint64_t v436 = *(void (**)(char *, uint64_t))(v203 + 8);
        v436(v125, v212);
        v436(v128, v212);
        goto LABEL_153;
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v162 = sub_10096C830();

      uint64_t v215 = *(void (**)(char *, uint64_t))(v203 + 8);
      v215(v125, v212);
      v215(v128, v212);
      return v162 & 1;
    case 4uLL:
      uint64_t v216 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v217 = v527;
      uint64_t v218 = swift_getTupleTypeMetadata2();
      uint64_t v219 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 4) {
        goto LABEL_153;
      }
      uint64_t v220 = v219;
      uint64_t v221 = *(int *)(v218 + 48);
      unint64_t v535 = *(void *)(v219 + v221);
      uint64_t v222 = swift_projectBox();
      uint64_t v223 = *(void **)(v222 + v221);
      uint64_t v224 = *(void (**)(char *, uint64_t, uint64_t))(v526 + 16);
      uint64_t v225 = v523;
      v224(v523, v222, v217);
      long long v226 = v519;
      id v227 = &v519[*(int *)(TupleTypeMetadata2 + 48)];
      v224(v519, v220, v217);
      v224(v227, (uint64_t)v225, v217);
      uint64_t v228 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48);
      uint64_t v229 = v533;
      if (v228(v226, 1, v533) == 1)
      {
        if (v228(v227, 1, v229) == 1)
        {
          uint64_t v230 = *(void (**)(char *, uint64_t))(v526 + 8);
          id v231 = (id)v535;
          id v232 = (id)v535;
          id v233 = v223;
          v230(v519, v217);
LABEL_149:
          sub_100011348(0, (unint64_t *)&qword_100ACBF00);
          char v464 = sub_10096C830();

          unint64_t v465 = v523;
          goto LABEL_157;
        }
        id v231 = (id)v535;
        id v452 = (id)v535;
        id v453 = v223;
        uint64_t v443 = v519;
        goto LABEL_145;
      }
      unint64_t v534 = (unint64_t)v223;
      unsigned int v437 = v477;
      v224(v477, (uint64_t)v226, v217);
      if (v228(v227, 1, v229) == 1)
      {
        size_t v438 = *(void (**)(char *, uint64_t))(v216 + 8);
        id v231 = (id)v535;
        id v439 = (id)v535;
        unint64_t v440 = v534;
        id v441 = (id)v534;
        uint64_t v442 = v437;
        uint64_t v223 = (void *)v440;
        v438(v442, v229);
        uint64_t v443 = v226;
LABEL_145:
        (*(void (**)(char *, uint64_t))(v518 + 8))(v443, TupleTypeMetadata2);
        uint64_t v230 = *(void (**)(char *, uint64_t))(v526 + 8);
        goto LABEL_150;
      }
      uint64_t v456 = v216;
      uint64_t v457 = v476;
      (*(void (**)(char *, char *, uint64_t))(v216 + 32))(v476, v227, v229);
      id v231 = (id)v535;
      id v458 = (id)v535;
      unint64_t v459 = v534;
      id v460 = (id)v534;
      char v461 = sub_10096BBE0();
      uint64_t v462 = *(void (**)(char *, uint64_t))(v456 + 8);
      v462(v457, v229);
      uint64_t v463 = v437;
      uint64_t v223 = (void *)v459;
      v462(v463, v229);
      uint64_t v230 = *(void (**)(char *, uint64_t))(v526 + 8);
      v230(v226, v217);
      if (v461) {
        goto LABEL_149;
      }
LABEL_150:
      unsigned int v466 = v523;
      goto LABEL_151;
    case 5uLL:
      uint64_t v321 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v217 = v527;
      uint64_t v322 = swift_getTupleTypeMetadata2();
      uint64_t v323 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 5) {
        goto LABEL_153;
      }
      uint64_t v324 = v323;
      uint64_t v325 = *(int *)(v322 + 48);
      unint64_t v535 = *(void *)(v323 + v325);
      uint64_t v326 = swift_projectBox();
      uint64_t v223 = *(void **)(v326 + v325);
      Swift::String v327 = *(void (**)(char *, uint64_t, uint64_t))(v526 + 16);
      Swift::String v328 = v524;
      v327(v524, v326, v217);
      Swift::String v329 = v520;
      Swift::String v330 = &v520[*(int *)(TupleTypeMetadata2 + 48)];
      v327(v520, v324, v217);
      v327(v330, (uint64_t)v328, v217);
      Swift::String v331 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v321 + 48);
      uint64_t v332 = v533;
      if (v331(v329, 1, v533) == 1)
      {
        if (v331(v330, 1, v332) == 1)
        {
          uint64_t v230 = *(void (**)(char *, uint64_t))(v526 + 8);
          id v231 = (id)v535;
          id v333 = (id)v535;
          id v334 = v223;
          v230(v520, v217);
          goto LABEL_156;
        }
        id v231 = (id)v535;
        id v454 = (id)v535;
        id v455 = v223;
        size_t v450 = v520;
LABEL_147:
        (*(void (**)(char *, uint64_t))(v518 + 8))(v450, TupleTypeMetadata2);
        (*(void (**)(char *, uint64_t))(v526 + 8))(v524, v217);
        goto LABEL_152;
      }
      unint64_t v534 = (unint64_t)v223;
      uint64_t v444 = v478;
      v327(v478, (uint64_t)v329, v217);
      if (v331(v330, 1, v332) == 1)
      {
        unint64_t v445 = *(void (**)(char *, uint64_t))(v321 + 8);
        id v231 = (id)v535;
        id v446 = (id)v535;
        unint64_t v447 = v534;
        id v448 = (id)v534;
        uint64_t v449 = v444;
        uint64_t v223 = (void *)v447;
        v445(v449, v332);
        size_t v450 = v329;
        goto LABEL_147;
      }
      uint64_t v468 = v321;
      uint64_t v469 = v476;
      (*(void (**)(char *, char *, uint64_t))(v321 + 32))(v476, v330, v332);
      id v231 = (id)v535;
      id v470 = (id)v535;
      unint64_t v471 = v534;
      id v472 = (id)v534;
      char v473 = sub_10096BBE0();
      uint64_t v474 = *(void (**)(char *, uint64_t))(v468 + 8);
      v474(v469, v332);
      unint64_t v475 = v444;
      uint64_t v223 = (void *)v471;
      v474(v475, v332);
      uint64_t v230 = *(void (**)(char *, uint64_t))(v526 + 8);
      v230(v329, v217);
      if ((v473 & 1) == 0)
      {
        unsigned int v466 = v524;
LABEL_151:
        v230(v466, v217);
LABEL_152:

        goto LABEL_153;
      }
LABEL_156:
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v464 = sub_10096C830();

      unint64_t v465 = v524;
LABEL_157:
      v230(v465, v217);
      char v162 = v464;
      return v162 & 1;
    case 6uLL:
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v335 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v336 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 6) {
        goto LABEL_153;
      }
      uint64_t v337 = v336;
      uint64_t v338 = *(int *)(v335 + 48);
      Swift::String v288 = *(void **)(v336 + v338);
      uint64_t v289 = swift_projectBox();
      Swift::String v290 = *(void **)(v289 + v338);
      Swift::String v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      uint64_t v278 = (uint64_t)v494;
      v291(v494, v337, v268);
      p_uint64_t AssociatedConformanceWitness = (unint64_t *)&v524;
      goto LABEL_72;
    case 7uLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 7) {
        goto LABEL_153;
      }
      uint64_t v234 = v138;
      unint64_t v235 = v147;
      uint64_t v236 = swift_projectBox();
      uint64_t v237 = swift_projectBox();
      long long v238 = *(void (**)(char *, uint64_t, uint64_t))(v235 + 16);
      uint64_t v239 = v236;
      uint64_t v240 = v234;
      v238(v77, v239, v234);
      long long v241 = v490;
      v238(v490, v237, v240);
      char v162 = sub_10096ADA0();
      long long v242 = *(void (**)(char *, uint64_t))(v235 + 8);
      v242(v241, v240);
      v242(v77, v240);
      return v162 & 1;
    case 8uLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 8) {
        goto LABEL_153;
      }
      uint64_t v342 = v146;
      uint64_t v343 = swift_projectBox();
      uint64_t v344 = swift_projectBox();
      Swift::String v345 = *(void (**)(char *, uint64_t, uint64_t))(v342 + 16);
      uint64_t v346 = v343;
      uint64_t v347 = v533;
      v345(v120, v346, v533);
      v345(v117, v344, v347);
      char v162 = sub_10096BBE0();
      Swift::String v348 = *(void (**)(char *, uint64_t))(v342 + 8);
      v348(v117, v347);
      Swift::String v349 = v120;
      goto LABEL_109;
    case 9uLL:
      uint64_t v243 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v244 = swift_getTupleTypeMetadata2();
      uint64_t v245 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 9) {
        goto LABEL_153;
      }
      uint64_t v246 = v245;
      uint64_t v247 = *(int *)(v244 + 48);
      uint64_t v248 = *(void **)(v245 + v247);
      uint64_t v249 = swift_projectBox();
      unint64_t v250 = *(void **)(v249 + v247);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v481;
      uint64_t v253 = v533;
      v251(v481, v246, v533);
      unint64_t v254 = (char **)v512;
      goto LABEL_95;
    case 0xAuLL:
      uint64_t v243 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v350 = swift_getTupleTypeMetadata2();
      uint64_t v351 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xA) {
        goto LABEL_153;
      }
      uint64_t v352 = v351;
      uint64_t v353 = *(int *)(v350 + 48);
      uint64_t v248 = *(void **)(v351 + v353);
      uint64_t v249 = swift_projectBox();
      unint64_t v250 = *(void **)(v249 + v353);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v483;
      uint64_t v253 = v533;
      v251(v483, v352, v533);
      unint64_t v254 = &v513;
      goto LABEL_95;
    case 0xBuLL:
      unint64_t v255 = v534;
      if (((v255 >> 58) & 0x3C | (v255 >> 1) & 3) != 0xB) {
        goto LABEL_153;
      }
      goto LABEL_106;
    case 0xCuLL:
      uint64_t v243 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v256 = swift_getTupleTypeMetadata2();
      uint64_t v257 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xC) {
        goto LABEL_153;
      }
      uint64_t v258 = v257;
      uint64_t v259 = *(int *)(v256 + 48);
      uint64_t v248 = *(void **)(v257 + v259);
      uint64_t v249 = swift_projectBox();
      unint64_t v250 = *(void **)(v249 + v259);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v485;
      uint64_t v253 = v533;
      v251(v485, v258, v533);
      unint64_t v254 = (char **)&v515;
      goto LABEL_95;
    case 0xDuLL:
      uint64_t v243 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v354 = swift_getTupleTypeMetadata2();
      uint64_t v355 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xD) {
        goto LABEL_153;
      }
      uint64_t v356 = v355;
      uint64_t v357 = *(int *)(v354 + 48);
      uint64_t v248 = *(void **)(v355 + v357);
      uint64_t v249 = swift_projectBox();
      unint64_t v250 = *(void **)(v249 + v357);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v487;
      uint64_t v253 = v533;
      v251(v487, v356, v533);
      unint64_t v254 = (char **)&v517;
      goto LABEL_95;
    case 0xEuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xE) {
        goto LABEL_153;
      }
      uint64_t v260 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v262 = *(void *)((v534 & 0xFFFFFFFFFFFFFF9) + 0x10);
      long long v261 = *(void **)((v534 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v263 = *(id *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v264 = v261;
      if (sub_100611678(v260, v262)) {
        goto LABEL_31;
      }
      goto LABEL_34;
    case 0xFuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xF) {
        goto LABEL_153;
      }
      uint64_t v265 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v267 = *(void *)((v534 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v266 = *(void **)((v534 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v263 = *(id *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v264 = v266;
      if (sub_1006118F8(v265, v267))
      {
LABEL_31:
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v162 = sub_10096C830();

        return v162 & 1;
      }
LABEL_34:

      goto LABEL_153;
    case 0x10uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v268 = v531;
      uint64_t v269 = swift_getTupleTypeMetadata2();
      uint64_t v270 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x10) {
        goto LABEL_153;
      }
      uint64_t v271 = v270;
      uint64_t v272 = *(int *)(v269 + 48);
      uint64_t v273 = *(void **)(v270 + v272);
      uint64_t v274 = swift_projectBox();
      uint64_t v275 = *(void **)(v274 + v272);
      unint64_t v276 = v530;
      uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v504;
      v277(v504, v271, v268);
      size_t v279 = &v534;
      goto LABEL_86;
    case 0x11uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v268 = v531;
      uint64_t v280 = swift_getTupleTypeMetadata2();
      uint64_t v281 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x11) {
        goto LABEL_153;
      }
      uint64_t v282 = v281;
      uint64_t v283 = *(int *)(v280 + 48);
      uint64_t v273 = *(void **)(v281 + v283);
      uint64_t v274 = swift_projectBox();
      uint64_t v275 = *(void **)(v274 + v283);
      unint64_t v276 = v530;
      uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v508;
      v277(v508, v282, v268);
      size_t v279 = (unint64_t *)&v537;
      goto LABEL_86;
    case 0x12uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v268 = v531;
      uint64_t v358 = swift_getTupleTypeMetadata2();
      uint64_t v359 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x12) {
        goto LABEL_153;
      }
      uint64_t v360 = v359;
      uint64_t v361 = *(int *)(v358 + 48);
      uint64_t v273 = *(void **)(v359 + v361);
      uint64_t v274 = swift_projectBox();
      uint64_t v275 = *(void **)(v274 + v361);
      unint64_t v276 = v530;
      uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = v512[0];
      v277((char *)v512[0], v360, v268);
      size_t v279 = (unint64_t *)&v540;
      goto LABEL_86;
    case 0x13uLL:
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v268 = v531;
      uint64_t v362 = swift_getTupleTypeMetadata2();
      uint64_t v363 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x13) {
        goto LABEL_153;
      }
      uint64_t v364 = v363;
      uint64_t v365 = *(int *)(v362 + 48);
      uint64_t v273 = *(void **)(v363 + v365);
      uint64_t v274 = swift_projectBox();
      uint64_t v275 = *(void **)(v274 + v365);
      unint64_t v276 = v530;
      uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v513;
      v277(v513, v364, v268);
      size_t v279 = (unint64_t *)&v541;
LABEL_86:
      uint64_t v315 = *(v279 - 32);
      v277((char *)v315, v274, v268);
      id v339 = v273;
      id v340 = v275;
      if ((sub_1005EC104(v278, v315, v529, v533) & 1) == 0) {
        goto LABEL_87;
      }
      goto LABEL_74;
    case 0x14uLL:
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v284 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v285 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x14) {
        goto LABEL_153;
      }
      uint64_t v286 = v285;
      uint64_t v287 = *(int *)(v284 + 48);
      Swift::String v288 = *(void **)(v285 + v287);
      uint64_t v289 = swift_projectBox();
      Swift::String v290 = *(void **)(v289 + v287);
      Swift::String v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      uint64_t v278 = (uint64_t)v496;
      v291(v496, v286, v268);
      p_uint64_t AssociatedConformanceWitness = (unint64_t *)&v526;
      goto LABEL_72;
    case 0x15uLL:
      uint64_t v268 = v531;
      uint64_t v367 = swift_getTupleTypeMetadata2();
      uint64_t v368 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x15) {
        goto LABEL_153;
      }
      uint64_t v369 = v368;
      uint64_t v370 = *(int *)(v367 + 48);
      uint64_t v302 = *(void *)(v368 + v370);
      uint64_t v303 = swift_projectBox();
      uint64_t v304 = *(void *)(v303 + v370);
      unint64_t v276 = v530;
      Swift::String v305 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v506;
      v305(v506, v369, v268);
      Swift::String v306 = (char *)v536;
      goto LABEL_91;
    case 0x16uLL:
      uint64_t v243 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v371 = swift_getTupleTypeMetadata2();
      uint64_t v372 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x16) {
        goto LABEL_153;
      }
      uint64_t v373 = v372;
      uint64_t v374 = *(int *)(v371 + 48);
      uint64_t v248 = *(void **)(v372 + v374);
      uint64_t v249 = swift_projectBox();
      unint64_t v250 = *(void **)(v249 + v374);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v489;
      uint64_t v253 = v533;
      v251(v489, v373, v533);
      unint64_t v254 = &v519;
      goto LABEL_95;
    case 0x17uLL:
      unint64_t v293 = v534;
      if (((v293 >> 58) & 0x3C | (v293 >> 1) & 3) == 0x17) {
        goto LABEL_99;
      }
      goto LABEL_153;
    case 0x18uLL:
      unint64_t v293 = v534;
      if (((v293 >> 58) & 0x3C | (v293 >> 1) & 3) != 0x18) {
        goto LABEL_153;
      }
      goto LABEL_99;
    case 0x19uLL:
      unint64_t v293 = v534;
      if (((v293 >> 58) & 0x3C | (v293 >> 1) & 3) != 0x19) {
        goto LABEL_153;
      }
LABEL_99:
      long long v380 = *(void **)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      long long v381 = *(void **)((v293 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      id v382 = v380;
      id v383 = v381;
      char v162 = sub_10096C830();

      return v162 & 1;
    case 0x1AuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x1A) {
        goto LABEL_153;
      }
      uint64_t v384 = *(void **)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v385 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x18);
      unint64_t v386 = *(void **)((v534 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v387 = *(void *)((v534 & 0xFFFFFFFFFFFFFF9) + 0x18);
      if (!v384)
      {
        if (v386) {
          goto LABEL_153;
        }
        goto LABEL_142;
      }
      if (v386)
      {
        sub_100011348(0, (unint64_t *)&qword_100ADA390);
        id v388 = v386;
        id v389 = v384;
        char v390 = sub_10096C830();

        if (v390)
        {
LABEL_142:
          char v162 = v385 == v387;
          return v162 & 1;
        }
      }
      goto LABEL_153;
    case 0x1BuLL:
      unint64_t v255 = v534;
      if (((v255 >> 58) & 0x3C | (v255 >> 1) & 3) != 0x1B) {
        goto LABEL_153;
      }
      goto LABEL_106;
    case 0x1CuLL:
      unint64_t v255 = v534;
      if (((v255 >> 58) & 0x3C | (v255 >> 1) & 3) == 0x1C) {
        goto LABEL_106;
      }
      goto LABEL_153;
    case 0x1DuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x1D) {
        goto LABEL_153;
      }
      uint64_t v391 = v146;
      uint64_t v392 = swift_projectBox();
      uint64_t v393 = swift_projectBox();
      size_t v394 = *(void (**)(char *, uint64_t, uint64_t))(v391 + 16);
      uint64_t v395 = v392;
      uint64_t v347 = v533;
      v394(v94, v395, v533);
      unint64_t v396 = v479;
      v394(v479, v393, v347);
      char v162 = sub_10096BBE0();
      Swift::String v348 = *(void (**)(char *, uint64_t))(v391 + 8);
      v348(v396, v347);
      Swift::String v349 = v94;
      goto LABEL_109;
    case 0x1EuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x1E) {
        goto LABEL_153;
      }
      unint64_t v397 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      unint64_t v398 = *(void *)((v534 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_1000CE628(v397);
      sub_1000CE628(v398);
      char v162 = sub_1006AE040(v397, v398, v514, v515, v516, v517);
      sub_1000B6C28(v398);
      sub_1000B6C28(v397);
      return v162 & 1;
    case 0x1FuLL:
      unint64_t v255 = v534;
      if (((v255 >> 58) & 0x3C | (v255 >> 1) & 3) != 0x1F) {
        goto LABEL_153;
      }
LABEL_106:
      char v162 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10) == *(void *)((v255 & 0xFFFFFFFFFFFFFF9) + 0x10);
      return v162 & 1;
    case 0x20uLL:
      uint64_t v533 = v138;
      unint64_t v399 = v147;
      uint64_t v400 = sub_10002B7CC(&qword_100AD0F60);
      uint64_t v401 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x20) {
        goto LABEL_153;
      }
      uint64_t v402 = v401;
      uint64_t v403 = *(int *)(v400 + 48);
      LODWORD(v535) = *(unsigned __int8 *)(v401 + v403);
      uint64_t v404 = *(int *)(v400 + 64);
      int v405 = *(void **)(v401 + v404);
      uint64_t v406 = swift_projectBox();
      LODWORD(v534) = *(unsigned __int8 *)(v406 + v403);
      size_t v407 = *(void **)(v406 + v404);
      unsigned int v408 = *(void (**)(char *, uint64_t, uint64_t))(v399 + 16);
      unsigned int v409 = v500;
      uint64_t v410 = v533;
      v408(v500, v402, v533);
      uint64_t v411 = v499;
      v408(v499, v406, v410);
      id v412 = v405;
      unsigned int v413 = v411;
      id v414 = v412;
      id v415 = v407;
      if ((sub_10096ADA0() & 1) == 0)
      {

        uint64_t v433 = *(void (**)(char *, uint64_t))(v399 + 8);
        v433(v413, v410);
        uint64_t v434 = v409;
        goto LABEL_136;
      }
      if (v535 != v534)
      {

        unsigned int v416 = *(void (**)(char *, uint64_t))(v399 + 8);
        uint64_t v417 = v533;
        v416(v413, v533);
        uint64_t v418 = v409;
        goto LABEL_138;
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v162 = sub_10096C830();

      Swift::String v348 = *(void (**)(char *, uint64_t))(v399 + 8);
      uint64_t v347 = v533;
      v348(v413, v533);
      Swift::String v349 = v409;
      goto LABEL_109;
    case 0x21uLL:
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v294 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v295 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x21) {
        goto LABEL_153;
      }
      uint64_t v296 = v295;
      uint64_t v297 = *(int *)(v294 + 48);
      Swift::String v288 = *(void **)(v295 + v297);
      uint64_t v289 = swift_projectBox();
      Swift::String v290 = *(void **)(v289 + v297);
      Swift::String v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      uint64_t v278 = (uint64_t)v498;
      v291(v498, v296, v268);
      p_uint64_t AssociatedConformanceWitness = (unint64_t *)&AssociatedConformanceWitness;
      goto LABEL_72;
    case 0x22uLL:
      uint64_t v268 = v531;
      uint64_t v298 = swift_getTupleTypeMetadata2();
      uint64_t v299 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x22) {
        goto LABEL_153;
      }
      uint64_t v300 = v299;
      uint64_t v301 = *(int *)(v298 + 48);
      uint64_t v302 = *(void *)(v299 + v301);
      uint64_t v303 = swift_projectBox();
      uint64_t v304 = *(void *)(v303 + v301);
      unint64_t v276 = v530;
      Swift::String v305 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v510;
      v305(v510, v300, v268);
      Swift::String v306 = &v539;
LABEL_91:
      uint64_t v315 = *((void *)v306 - 32);
      v305((char *)v315, v303, v268);
      if ((sub_1005EC104(v278, v315, v529, v533) & 1) == 0) {
        goto LABEL_88;
      }
      char v162 = v302 == v304;
      goto LABEL_75;
    case 0x23uLL:
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v307 = sub_10002B7CC(&qword_100AD0820);
      uint64_t v308 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x23) {
        goto LABEL_153;
      }
      uint64_t v309 = v308;
      uint64_t v310 = *(int *)(v307 + 48);
      Swift::String v288 = *(void **)(v308 + v310);
      uint64_t v289 = swift_projectBox();
      Swift::String v290 = *(void **)(v289 + v310);
      Swift::String v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      uint64_t v278 = (uint64_t)v502;
      v291(v502, v309, v268);
      p_uint64_t AssociatedConformanceWitness = &v532;
LABEL_72:
      uint64_t v315 = *(p_AssociatedConformanceWitness - 32);
      goto LABEL_73;
    case 0x24uLL:
      uint64_t v243 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v311 = swift_getTupleTypeMetadata2();
      uint64_t v312 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x24) {
        goto LABEL_153;
      }
      uint64_t v313 = v312;
      uint64_t v314 = *(int *)(v311 + 48);
      uint64_t v248 = *(void **)(v312 + v314);
      uint64_t v249 = swift_projectBox();
      unint64_t v250 = *(void **)(v249 + v314);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v492;
      uint64_t v253 = v533;
      v251(v492, v313, v533);
      unint64_t v254 = &v522;
LABEL_95:
      long long v375 = *(v254 - 32);
      v251(v375, v249, v253);
      id v376 = v248;
      id v377 = v250;
      if (sub_10096BBE0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v162 = sub_10096C830();

        long long v378 = *(void (**)(uint64_t, uint64_t))(v243 + 8);
        v378((uint64_t)v375, v253);
        v378((uint64_t)v252, v253);
        return v162 & 1;
      }

      long long v379 = *(void (**)(uint64_t, uint64_t))(v243 + 8);
      v379((uint64_t)v375, v253);
      v379((uint64_t)v252, v253);
      goto LABEL_153;
    case 0x25uLL:
      uint64_t v315 = v145;
      uint64_t v278 = v144;
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v316 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v317 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x25) {
        goto LABEL_153;
      }
      goto LABEL_60;
    case 0x26uLL:
      unint64_t v530 = v143;
      uint64_t v531 = v142;
      unint64_t v532 = v147;
      uint64_t v533 = v138;
      uint64_t v419 = sub_10002B7CC((uint64_t *)&unk_100AD08C0);
      uint64_t v420 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x26) {
        goto LABEL_153;
      }
      goto LABEL_119;
    case 0x27uLL:
      unint64_t v530 = v139;
      uint64_t v531 = v148;
      unint64_t v532 = v147;
      uint64_t v533 = v138;
      uint64_t v419 = sub_10002B7CC((uint64_t *)&unk_100AD6F30);
      uint64_t v420 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x27) {
        goto LABEL_153;
      }
LABEL_119:
      uint64_t v421 = v420;
      uint64_t v422 = *(int *)(v419 + 48);
      unint64_t v535 = *(void *)(v420 + v422);
      uint64_t v423 = *(int *)(v419 + 64);
      unint64_t v424 = *(void **)(v420 + v423);
      uint64_t v425 = swift_projectBox();
      unint64_t v534 = *(void *)(v425 + v422);
      uint64_t v426 = *(void **)(v425 + v423);
      uint64_t v427 = v531;
      unint64_t v428 = v532;
      uint64_t v429 = *(void (**)(uint64_t, uint64_t, uint64_t))(v532 + 16);
      uint64_t v410 = v533;
      v429(v531, v421, v533);
      unint64_t v430 = v530;
      v429(v530, v425, v410);
      id v431 = v424;
      id v432 = v426;
      if ((sub_10096ADA0() & 1) == 0)
      {

        uint64_t v433 = *(void (**)(char *, uint64_t))(v428 + 8);
        v433((char *)v430, v410);
        uint64_t v434 = (char *)v427;
LABEL_136:
        v433(v434, v410);
        goto LABEL_153;
      }
      if (v535 != v534)
      {

        uint64_t v417 = v533;
        unsigned int v416 = *(void (**)(char *, uint64_t))(v532 + 8);
        v416((char *)v530, v533);
        uint64_t v418 = (char *)v531;
LABEL_138:
        v416(v418, v417);
        goto LABEL_153;
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v162 = sub_10096C830();

      uint64_t v347 = v533;
      Swift::String v348 = *(void (**)(char *, uint64_t))(v532 + 8);
      v348((char *)v530, v533);
      Swift::String v349 = (char *)v531;
LABEL_109:
      v348(v349, v347);
      return v162 & 1;
    case 0x28uLL:
      uint64_t v315 = v141;
      uint64_t v278 = v140;
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v316 = sub_10002B7CC((uint64_t *)&unk_100AD08D0);
      uint64_t v317 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x28) {
        goto LABEL_153;
      }
LABEL_60:
      uint64_t v318 = v317;
      uint64_t v319 = *(int *)(v316 + 48);
      Swift::String v288 = *(void **)(v317 + v319);
      uint64_t v289 = swift_projectBox();
      Swift::String v290 = *(void **)(v289 + v319);
      Swift::String v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      v291((char *)v278, v318, v268);
LABEL_73:
      v291((char *)v315, v289, v268);
      id v339 = v288;
      id v340 = v290;
      if ((sub_10096ADA0() & 1) == 0)
      {
LABEL_87:

LABEL_88:
        unint64_t v366 = *(void (**)(uint64_t, uint64_t))(v276 + 8);
        v366(v315, v268);
        v366(v278, v268);
        goto LABEL_153;
      }
LABEL_74:
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v162 = sub_10096C830();

LABEL_75:
      Swift::String v341 = *(void (**)(uint64_t, uint64_t))(v276 + 8);
      v341(v315, v268);
      v341(v278, v268);
      return v162 & 1;
    case 0x29uLL:
      if (v535 == 0xA000000000000002)
      {
        if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x29 || v534 != 0xA000000000000002) {
          goto LABEL_153;
        }
      }
      else
      {
        int v320 = (v534 >> 58) & 0x3C | (v534 >> 1) & 3;
        if (v535 == 0xA00000000000000ALL)
        {
          if (v320 != 41 || v534 != 0xA00000000000000ALL)
          {
LABEL_153:
            char v162 = 0;
            return v162 & 1;
          }
        }
        else if (v320 != 41 || v534 != 0xA000000000000012)
        {
          goto LABEL_153;
        }
      }
      char v162 = 1;
      return v162 & 1;
    default:
      uint64_t v151 = v146;
      sub_100011348(255, (unint64_t *)&qword_100ADA390);
      uint64_t v152 = swift_getTupleTypeMetadata2();
      uint64_t v153 = swift_projectBox();
      if ((v534 >> 58) & 0x3C | (v534 >> 1) & 3) {
        goto LABEL_153;
      }
      uint64_t v154 = *(int *)(v152 + 48);
      uint64_t v155 = *(void **)(v153 + v154);
      uint64_t v156 = swift_projectBox();
      uint64_t v157 = *(void **)(v156 + v154);
      uint64_t v158 = *(void (**)(char *, uint64_t, uint64_t))(v151 + 16);
      uint64_t v159 = v533;
      v158(v150, v153, v533);
      v158(v137, v156, v159);
      id v160 = v155;
      id v161 = v157;
      if (sub_10096BBE0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v162 = sub_10096C830();

        id v163 = *(void (**)(char *, uint64_t))(v151 + 8);
        v163(v137, v159);
        v163(v150, v159);
        return v162 & 1;
      }

      unint64_t v451 = *(void (**)(char *, uint64_t))(v151 + 8);
      v451(v137, v159);
      v451(v150, v159);
      goto LABEL_153;
  }
}

Swift::Int sub_1006B11C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10096D4B0();
  sub_1006ACAF0((uint64_t)v11, a1, a2, a3, a4, a5);
  return sub_10096D500();
}

unint64_t sub_1006B123C(uint64_t *a1)
{
  return sub_1006A9894(*v1, a1[2], a1[3], a1[4], a1[5]);
}

Swift::Int sub_1006B1250(uint64_t *a1)
{
  return sub_1006B11C4(*v1, a1[2], a1[3], a1[4], a1[5]);
}

void sub_1006B1264(uint64_t a1, uint64_t *a2)
{
  sub_1006ACAF0(a1, *v2, a2[2], a2[3], a2[4], a2[5]);
}

Swift::Int sub_1006B1278(uint64_t a1, uint64_t *a2)
{
  sub_10096D4B0();
  sub_1006ACAF0((uint64_t)v5, *v2, a2[2], a2[3], a2[4], a2[5]);
  return sub_10096D500();
}

uint64_t sub_1006B12C4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1006AE040(*a1, *a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_1006B12DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1006B12F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10096AE50();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::UInt v11 = *(void *)(a2 + 16);
  uint64_t v27 = a1;
  sub_10096D4C0(v11);
  if (v11)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    unint64_t v15 = v12 + 40;
    uint64_t v16 = v12;
    uint64_t v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v25 = v13;
    uint64_t v18 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v26 = v16;
    uint64_t v19 = *(void *)(v16 + 56);
    unint64_t v22 = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v19;
    while (1)
    {
      v25(v10, v14, v4);
      uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v10, 0, 1, v4);
      uint64_t result = (*v17)(v10, 1, v4);
      if (result == 1) {
        break;
      }
      (*v24)(v7, v10, v4);
      sub_10038EF3C();
      sub_10096BAD0();
      (*v18)(v7, v4);
      v14 += v23;
      if (!--v11) {
        return v20(v10, 1, 1, v4);
      }
    }
  }
  else
  {
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v20(v10, 1, 1, v4);
  }
  return result;
}

void sub_1006B153C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    Swift::UInt v8 = sub_10096CE70();
    swift_bridgeObjectRelease();
    sub_10096D4C0(v8);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10096CE70();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_10096D4C0(*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10));
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      sub_10096CC30();
      sub_10096C840();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      sub_10096C840();

      --v3;
    }
    while (v3);
  }
}

BOOL sub_1006B1654(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

uint64_t sub_1006B1660()
{
  sub_1000B6C28(*(void *)(v0 + 16));

  return swift_deallocObject();
}

uint64_t FPDAccessControlStore.swift_bookmark(for:consumerIdentifier:installSessionIdentifier:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v65 = a5;
  uint64_t v58 = a4;
  uint64_t v66 = a3;
  uint64_t v59 = sub_10002B7CC(&qword_100AD9EC8);
  uint64_t v61 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v64 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002B7CC(&qword_100AD9ED0);
  __chkstk_darwin(v7 - 8);
  uint64_t v63 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10096B8E0();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v62 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096BCB0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [a1 providerID];
  id v15 = [a1 domainIdentifier];
  id v16 = [a1 identifier];
  uint64_t v17 = sub_1006B384C();
  uint64_t v19 = v18;

  sub_10096BC90();
  v60._int64_t countAndFlagsBits = v17;
  v60._object = v19;
  uint64_t v20 = sub_10096BC40();
  unint64_t v22 = (unint64_t)v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v13, v10);
  if (v22 >> 60 == 15) {
    goto LABEL_17;
  }
  uint64_t v73 = v20;
  uint64_t v74 = (char *)v22;
  sub_10096BC90();
  uint64_t v24 = sub_10096BC40();
  unint64_t v26 = v25;
  v23(v13, v10);
  if (v26 >> 60 == 15)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_10096AFA0();
  sub_10001E9AC(v24, v26);
  unint64_t v27 = v65;
  if (v65 >> 60 == 15)
  {
    sub_10096BC90();
    uint64_t v28 = sub_10096BC40();
    unint64_t v30 = v29;
    v23(v13, v10);
    if (v30 >> 60 == 15)
    {
      __break(1u);
      JUMPOUT(0x1006B1F00);
    }
    sub_10096AFA0();
    uint64_t v31 = v28;
    unint64_t v32 = v30;
  }
  else
  {
    uint64_t v33 = v58;
    sub_10001EBB0(v58, v65);
    sub_10096AFA0();
    uint64_t v31 = v33;
    unint64_t v32 = v27;
  }
  sub_10001E9AC(v31, v32);
  uint64_t v34 = v69;
  uint64_t v35 = v67;
  uint64_t v36 = v63;
  uint64_t v37 = v64;
  uint64_t v39 = v73;
  unint64_t v38 = (unint64_t)v74;
  sub_1006B200C(1, v63);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v36, 1, v34) == 1) {
LABEL_19:
  }
    __break(1u);
  uint64_t v40 = v62;
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 32))(v62, v36, v34);
  __chkstk_darwin(v41);
  switch(v38 >> 62)
  {
    case 1uLL:
      if (v39 >> 32 < (int)v39)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v42 = v37;
      swift_retain();
      sub_1006B363C((int)v39, v39 >> 32, (uint64_t (*)(uint64_t, uint64_t))sub_1006B3980);
      sub_10001E9C0(v39, v38);
LABEL_15:
      uint64_t v45 = v40;
      uint64_t v46 = v59;
      uint64_t v75 = v59;
      unint64_t v76 = sub_1006B399C();
      uint64_t v47 = sub_10009C958(&v73);
      uint64_t v48 = v61;
      (*(void (**)(uint64_t *, char *, uint64_t))(v61 + 16))(v47, v42, v46);
      sub_10002689C(&v73, v75);
      sub_10096A970();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v46);
      long long v49 = v72;
      sub_1000268E0((uint64_t)&v73);
      uint64_t v73 = sub_10096AF30(0);
      uint64_t v74 = v50;
      *(void *)&long long v72 = 47;
      *((void *)&v72 + 1) = 0xE100000000000000;
      uint64_t v70 = 95;
      unint64_t v71 = 0xE100000000000000;
      sub_10001F9C0();
      uint64_t v51 = sub_10096C910();
      uint64_t v53 = v52;
      swift_bridgeObjectRelease();
      Class isa = sub_10096AF20().super.isa;
      [v68 addLRUSignature:isa];

      uint64_t v73 = 792359014;
      uint64_t v74 = (char *)0xE400000000000000;
      v77._int64_t countAndFlagsBits = v51;
      v77._object = v53;
      sub_10096BDC0(v77);
      swift_bridgeObjectRelease();
      v78._int64_t countAndFlagsBits = 47;
      v78._object = (void *)0xE100000000000000;
      sub_10096BDC0(v78);
      sub_10096BDC0(v60);
      swift_bridgeObjectRelease();
      sub_10001E9C0(v49, *((unint64_t *)&v49 + 1));
      sub_10001E9C0(v39, v38);
      uint64_t v55 = v73;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v69);
      return v55;
    case 2uLL:
      uint64_t v42 = v37;
      uint64_t v43 = *(void *)(v39 + 16);
      uint64_t v44 = *(void *)(v39 + 24);
      swift_retain();
      swift_retain();
      sub_1006B363C(v43, v44, (uint64_t (*)(uint64_t, uint64_t))sub_1006B3980);
      swift_release();
      swift_release();
      goto LABEL_15;
    case 3uLL:
      *(void *)((char *)&v72 + 6) = 0;
      *(void *)&long long v72 = 0;
      uint64_t v73 = (uint64_t)&v72;
      uint64_t v74 = (char *)&v72;
      goto LABEL_12;
    default:
      *(void *)&long long v72 = v39;
      WORD4(v72) = v38;
      BYTE10(v72) = BYTE2(v38);
      BYTE11(v72) = BYTE3(v38);
      BYTE12(v72) = BYTE4(v38);
      BYTE13(v72) = BYTE5(v38);
      uint64_t v73 = (uint64_t)&v72;
      uint64_t v74 = (char *)&v72 + BYTE6(v38);
LABEL_12:
      sub_10096B950();
      sub_1006B39F8();
      sub_1006B3A50();
      sub_10096B910();
      uint64_t v42 = v37;
      goto LABEL_15;
  }
}

uint64_t sub_1006B200C@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10096B8E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = sub_10096BC00();
  uint64_t v37 = sub_1006B2410;
  uint64_t v38 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  uint64_t v35 = sub_1006B25B4;
  uint64_t v36 = &unk_100A96890;
  uint64_t v10 = _Block_copy(&aBlock);
  id v11 = [v2 keyForBundleIdentifier:v9 generateIfNotFound:a1 & 1 keyGenBlock:v10];
  _Block_release(v10);

  if (!v11)
  {
    uint64_t v15 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v15, 1, v5);
  }
  uint64_t v12 = sub_10096AF60();
  unint64_t v14 = v13;

  switch(v14 >> 62)
  {
    case 1uLL:
      if (v12 >> 32 < (int)v12)
      {
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_10001EBB0(v12, v14);
      uint64_t v16 = sub_10096A880();
      if (!v16) {
        goto LABEL_9;
      }
      uint64_t v17 = sub_10096A8A0();
      if (__OFSUB__((int)v12, v17))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
      }
      v16 += (int)v12 - v17;
LABEL_9:
      uint64_t v18 = sub_10096A890();
      if (v18 >= (v12 >> 32) - (int)v12) {
        uint64_t v19 = (v12 >> 32) - (int)v12;
      }
      else {
        uint64_t v19 = v18;
      }
      uint64_t v20 = v16 + v19;
      if (!v16) {
        uint64_t v20 = 0;
      }
      uint64_t aBlock = (void **)v16;
      uint64_t v34 = v20;
      sub_10096B8C0();
      sub_10001E9C0(v12, v14);
LABEL_27:
      sub_10001E9C0(v12, v14);
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
      uint64_t v15 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v15, 1, v5);
    case 2uLL:
      uint64_t v21 = *(void *)(v12 + 16);
      uint64_t v22 = *(void *)(v12 + 24);
      swift_retain();
      swift_retain();
      uint64_t v23 = sub_10096A880();
      if (!v23) {
        goto LABEL_18;
      }
      uint64_t v24 = sub_10096A8A0();
      if (__OFSUB__(v21, v24)) {
        goto LABEL_32;
      }
      v23 += v21 - v24;
LABEL_18:
      BOOL v25 = __OFSUB__(v22, v21);
      uint64_t v26 = v22 - v21;
      if (v25) {
        goto LABEL_30;
      }
      uint64_t v27 = sub_10096A890();
      if (v27 >= v26) {
        uint64_t v28 = v26;
      }
      else {
        uint64_t v28 = v27;
      }
      uint64_t v29 = v23 + v28;
      if (!v23) {
        uint64_t v29 = 0;
      }
      uint64_t aBlock = (void **)v23;
      uint64_t v34 = v29;
      sub_10096B8C0();
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v32, 0, 14);
      uint64_t aBlock = (void **)v32;
      uint64_t v34 = (uint64_t)v32;
      goto LABEL_26;
    default:
      v32[0] = v12;
      LOWORD(v32[1]) = v14;
      BYTE2(v32[1]) = BYTE2(v14);
      BYTE3(v32[1]) = BYTE3(v14);
      BYTE4(v32[1]) = BYTE4(v14);
      BYTE5(v32[1]) = BYTE5(v14);
      uint64_t aBlock = (void **)v32;
      uint64_t v34 = (uint64_t)v32 + BYTE6(v14);
LABEL_26:
      sub_10096B8C0();
      goto LABEL_27;
  }
}

uint64_t sub_1006B2410()
{
  uint64_t v0 = sub_10096B900();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10096B8E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096B8F0();
  sub_10096B8D0();
  sub_10096B8B0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6[2];
}

uint64_t sub_1006B255C@<X0>(size_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v4 = sub_1006B3798(a1, a2);
  uint64_t v5 = sub_10079F41C(v4);
  uint64_t v7 = v6;
  uint64_t result = swift_release();
  *a3 = v5;
  a3[1] = v7;
  return result;
}

Class sub_1006B25B4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  unint64_t v5 = v4;
  swift_release();
  v6.super.Class isa = sub_10096AF20().super.isa;
  sub_10001E9C0(v3, v5);

  return v6.super.isa;
}

id sub_1006B262C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = sub_10002B7CC(&qword_100AD9EC8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[4] = a3;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_1006B363C((int)a1, a1 >> 32, (uint64_t (*)(uint64_t, uint64_t))sub_1006B3E9C);
      sub_10001E9C0(a1, a2);
      break;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_1006B363C(v12, v13, (uint64_t (*)(uint64_t, uint64_t))sub_1006B3E9C);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      *(void *)((char *)&v20 + 6) = 0;
      *(void *)&long long v20 = 0;
      uint64_t v21 = &v20;
      uint64_t v22 = (char *)&v20;
      goto LABEL_7;
    default:
      *(void *)&long long v20 = a1;
      WORD4(v20) = a2;
      BYTE10(v20) = BYTE2(a2);
      BYTE11(v20) = BYTE3(a2);
      BYTE12(v20) = BYTE4(a2);
      BYTE13(v20) = BYTE5(a2);
      uint64_t v21 = &v20;
      uint64_t v22 = (char *)&v20 + BYTE6(a2);
LABEL_7:
      sub_10096B950();
      sub_1006B39F8();
      sub_1006B3A50();
      sub_10096B910();
      break;
  }
  uint64_t v23 = v8;
  unint64_t v24 = sub_1006B399C();
  unint64_t v14 = sub_10009C958((uint64_t *)&v21);
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  sub_10002689C(&v21, v23);
  sub_10096A970();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  long long v15 = v20;
  sub_1000268E0((uint64_t)&v21);
  Class isa = sub_10096AF20().super.isa;
  id v17 = [v4 lookupLRUSignature:isa];
  sub_10001E9C0(v15, *((unint64_t *)&v15 + 1));

  return v17;
}

uint64_t sub_1006B29B0()
{
  return sub_10096B910();
}

id sub_1006B2A34(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6)
{
  uint64_t v78 = a5;
  id v82 = a4;
  uint64_t v79 = sub_10096BCB0();
  unint64_t v80 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100AD9ED0);
  __chkstk_darwin(v13 - 8);
  long long v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10096B8E0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  long long v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v81 = (char *)&v68 - v21;
  sub_1006B3AA4(a1, a2, v88);
  sub_1006B3D60((uint64_t)v88, (uint64_t)&v89);
  uint64_t v22 = v90;
  if (!v90) {
    return 0;
  }
  unint64_t v76 = a6;
  uint64_t v73 = v20;
  uint64_t v74 = v89;
  uint64_t v23 = v91;
  unint64_t v24 = v92;
  BOOL v25 = v93;
  uint64_t v75 = a3;
  uint64_t v77 = v6;
  sub_1006B200C(0, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    swift_bridgeObjectRelease();

    sub_1006B3DC8((uint64_t)v15);
    return 0;
  }
  uint64_t v69 = v17;
  uint64_t v26 = *(void (**)(void, void, void))(v17 + 32);
  uint64_t v70 = v16;
  v26(v81, v15, v16);
  id v68 = v24;
  id v72 = v25;
  sub_1006B384C();
  uint64_t v28 = v27;
  sub_10096BC90();
  uint64_t v71 = v28;
  uint64_t v29 = sub_10096BC40();
  unint64_t v31 = (unint64_t)v30;
  unint64_t v32 = *(void (**)(void, void))(v80 + 8);
  uint64_t v33 = v79;
  v32(v12, v79);
  if (v31 >> 60 == 15)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v34 = v23;
  uint64_t v86 = (long long *)v29;
  uint64_t v87 = (char *)v31;
  sub_10096BC90();
  uint64_t v35 = sub_10096BC40();
  unint64_t v37 = v36;
  v32(v12, v33);
  unint64_t v38 = v76;
  if (v37 >> 60 == 15)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v82 = v34;
  sub_10096AFA0();
  sub_10001E9AC(v35, v37);
  if (v38 >> 60 != 15)
  {
    uint64_t v44 = v78;
    sub_10001EBB0(v78, v38);
    sub_10096AFA0();
    sub_10001E9AC(v44, v38);
    uint64_t v43 = v81;
    id v42 = v72;
    goto LABEL_10;
  }
  sub_10096BC90();
  uint64_t v39 = sub_10096BC40();
  unint64_t v41 = v40;
  v32(v12, v33);
  id v42 = v72;
  if (v41 >> 60 == 15)
  {
LABEL_30:
    __break(1u);
    JUMPOUT(0x1006B3348);
  }
  sub_10096AFA0();
  sub_10001E9AC(v39, v41);
  uint64_t v43 = v81;
LABEL_10:
  uint64_t v45 = v74;
  swift_bridgeObjectRelease();
  uint64_t v47 = (uint64_t)v86;
  unint64_t v46 = (unint64_t)v87;
  uint64_t v86 = v45;
  uint64_t v87 = v22;
  uint64_t v84 = 95;
  unint64_t v85 = 0xE100000000000000;
  *(void *)&long long v83 = 47;
  *((void *)&v83 + 1) = 0xE100000000000000;
  sub_10001F9C0();
  sub_10096C910();
  uint64_t v48 = sub_10096AEB0();
  unint64_t v50 = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = swift_bridgeObjectRelease();
  if (v50 >> 60 != 15)
  {
    __chkstk_darwin(v51);
    unint64_t v80 = v46;
    uint64_t v79 = v47;
    uint64_t v78 = v54;
    switch(v50 >> 62)
    {
      case 1uLL:
        if (v48 >> 32 < (int)v48) {
          __break(1u);
        }
        swift_retain();
        char v57 = sub_1006B36E4((int)v48, v48 >> 32, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1006B3E28);
        sub_10001E9AC(v48, v50);
        break;
      case 2uLL:
        uint64_t v55 = *(void *)(v48 + 16);
        uint64_t v56 = *(void *)(v48 + 24);
        swift_retain();
        swift_retain();
        char v57 = sub_1006B36E4(v55, v56, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1006B3E28);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        *(void *)((char *)&v83 + 6) = 0;
        *(void *)&long long v83 = 0;
        uint64_t v86 = &v83;
        uint64_t v87 = (char *)&v83;
        goto LABEL_20;
      default:
        *(void *)&long long v83 = v48;
        WORD4(v83) = v50;
        BYTE10(v83) = BYTE2(v50);
        BYTE11(v83) = BYTE3(v50);
        BYTE12(v83) = BYTE4(v50);
        BYTE13(v83) = BYTE5(v50);
        uint64_t v86 = &v83;
        uint64_t v87 = (char *)&v83 + BYTE6(v50);
LABEL_20:
        uint64_t v84 = v47;
        unint64_t v85 = v46;
        sub_10096B950();
        sub_1006B39F8();
        sub_1006B3E48();
        char v57 = sub_10096B920();
        break;
    }
    uint64_t v58 = v69;
    uint64_t v59 = (uint64_t)v73;
    uint64_t v60 = v70;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v73, v43, v70);
    if (v57)
    {
      uint64_t v61 = *(void (**)(void, void))(v58 + 8);
      v61(v59, v60);
      id v62 = v68;
    }
    else
    {
      uint64_t v63 = v79;
      unint64_t v64 = v80;
      unsigned __int8 v65 = sub_1006B262C(v79, v80, v59);
      uint64_t v61 = *(void (**)(void, void))(v58 + 8);
      v61(v59, v60);
      if ((v65 & 1) == 0)
      {
        sub_10001E9C0(v63, v64);

        sub_10001E9AC(v48, v50);
        v61(v81, v60);
        return 0;
      }
      id v62 = v68;
      id v42 = v72;
      uint64_t v43 = v81;
    }
    id v66 = objc_allocWithZone((Class)FPItemID);
    id v67 = v82;
    id v52 = [v66 initWithProviderID:v82 domainIdentifier:v62 itemIdentifier:v42];

    sub_10001E9C0(v79, v80);
    sub_10001E9AC(v48, v50);
    v61(v43, v60);
    return v52;
  }
  sub_10001E9C0(v47, v46);

  (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v70);
  return 0;
}

uint64_t sub_1006B3358@<X0>(unsigned char *a1@<X8>)
{
  sub_10096B950();
  sub_1006B39F8();
  sub_1006B3E48();
  uint64_t result = sub_10096B920();
  *a1 = result & 1;
  return result;
}

unsigned char *sub_1006B35C4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_100078C44(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_100795240((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1007952BC((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1006B363C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = sub_10096A880();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_10096A8A0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_10096A890();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return a3(v7, v13);
}

uint64_t sub_1006B36E4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_10096A880();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = sub_10096A8A0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v11 = sub_10096A890();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = v8 + v12;
  if (v8) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  a3(&v16, v8, v14);
  if (!v3) {
    char v15 = v16;
  }
  return v15 & 1;
}

size_t sub_1006B3798(size_t result, unint64_t a2)
{
  if (!result) {
    return (size_t)_swiftEmptyArrayStorage;
  }
  uint64_t v3 = (const void *)result;
  int64_t v4 = a2 - result;
  if (a2 == result) {
    return (size_t)_swiftEmptyArrayStorage;
  }
  if (v4 < 1)
  {
    unint64_t v5 = _swiftEmptyArrayStorage;
    if (!a2) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_10002B7CC(&qword_100ACAFB8);
    unint64_t v5 = (void *)swift_allocObject();
    uint64_t result = j__malloc_size(v5);
    v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2) {
      goto LABEL_13;
    }
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1006B384C()
{
  uint64_t v0 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  char v5 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_8:
    uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    v6._int64_t countAndFlagsBits = 12079;
    v6._object = (void *)0xE200000000000000;
    goto LABEL_9;
  }
  uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  v9._int64_t countAndFlagsBits = 47;
  v9._object = (void *)0xE100000000000000;
  sub_10096BDC0(v9);
  v10._int64_t countAndFlagsBits = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v6._int64_t countAndFlagsBits = 47;
  v6._object = (void *)0xE100000000000000;
LABEL_9:
  sub_10096BDC0(v6);
  v11._int64_t countAndFlagsBits = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1006B3980()
{
  return sub_1006B29B0();
}

unint64_t sub_1006B399C()
{
  unint64_t result = qword_100AD9ED8;
  if (!qword_100AD9ED8)
  {
    sub_100033BE8(&qword_100AD9EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9ED8);
  }
  return result;
}

unint64_t sub_1006B39F8()
{
  unint64_t result = qword_100AD9EE0;
  if (!qword_100AD9EE0)
  {
    sub_10096B950();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9EE0);
  }
  return result;
}

unint64_t sub_1006B3A50()
{
  unint64_t result = qword_100AD9EE8;
  if (!qword_100AD9EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9EE8);
  }
  return result;
}

id sub_1006B3AA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  v25[0] = 47;
  v25[1] = 0xE100000000000000;
  void v24[2] = v25;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100915C50(4, 0, sub_100353A9C, (uint64_t)v24, a1, a2);
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    v25[0] = _swiftEmptyArrayStorage;
    sub_100021770(0, v7, 0);
    uint64_t v8 = (void *)v25[0];
    uint64_t v9 = v6 + 56;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_10096BD10();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      v25[0] = v8;
      unint64_t v14 = v8[2];
      unint64_t v13 = v8[3];
      if (v14 >= v13 >> 1)
      {
        sub_100021770((char *)(v13 > 1), v14 + 1, 1);
        uint64_t v8 = (void *)v25[0];
      }
      v8[2] = v14 + 1;
      char v15 = &v8[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
      v9 += 32;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  if (v8[2] != 5
    || (v8[4] == 3829862 ? (BOOL v16 = v8[5] == 0xE300000000000000) : (BOOL v16 = 0), !v16 && (sub_10096D2D0() & 1) == 0))
  {
    id result = (id)swift_bridgeObjectRelease();
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    NSString v19 = 0;
    NSString v22 = 0;
    NSString v23 = 0;
LABEL_21:
    *a3 = v18;
    a3[1] = v17;
    a3[2] = v19;
    a3[3] = v22;
    a3[4] = v23;
    return result;
  }
  uint64_t v18 = v8[6];
  uint64_t v17 = v8[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v19 = sub_10096BC00();
  id result = (id)swift_bridgeObjectRelease();
  if (v8[2] < 4uLL)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_10096BD60();
    swift_bridgeObjectRelease();
    if (v21)
    {
      swift_bridgeObjectRetain();
      NSString v22 = sub_10096BC00();
      id result = (id)swift_bridgeObjectRelease();
    }
    else
    {
      id result = NSFileProviderDomainDefaultIdentifier;
      NSString v22 = result;
    }
    if (v8[2] >= 5uLL)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      NSString v23 = sub_10096BC00();
      id result = (id)swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1006B3D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100AD9EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006B3DC8(uint64_t a1)
{
  uint64_t v2 = sub_10002B7CC(&qword_100AD9ED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006B3E28@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006B3358(a1);
}

unint64_t sub_1006B3E48()
{
  unint64_t result = qword_100ADF5D0;
  if (!qword_100ADF5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF5D0);
  }
  return result;
}

uint64_t sub_1006B3E9C()
{
  return sub_1006B3980();
}

uint64_t sub_1006B3EB4(char a1, char a2)
{
  if (a2 == 1) {
    char v2 = a1 ^ 1;
  }
  else {
    char v2 = 1;
  }
  if (a2 == 2) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  return v3 & 1;
}

BOOL sub_1006B3ED8(char a1)
{
  return a1 == 1;
}

uint64_t sub_1006B3EE8(char a1, char a2)
{
  if (qword_100989B38[a2] == qword_100989B38[a1]) {
    return 1;
  }
  if (a2 != 3) {
    return !a2 && a1 == 3;
  }
  return !a1;
}

BOOL FileItemKind.hasContent.getter(char a1)
{
  return a1 != 1;
}

uint64_t FileItemKind.contentType.getter(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t result = sub_10096B310();
      break;
    case 2:
      uint64_t result = sub_10096B2A0();
      break;
    case 3:
      uint64_t result = sub_10096B340();
      break;
    default:
      uint64_t result = sub_10096B300();
      break;
  }
  return result;
}

BOOL FileItemKind.canConflict.getter(unsigned __int8 a1)
{
  return a1 - 3 < 0xFFFFFFFE;
}

uint64_t FileItemKind.rawValue.getter(char a1)
{
  return qword_100989B38[a1];
}

uint64_t FileItemKind.description.getter(char a1)
{
  uint64_t result = 6516580;
  switch(a1)
  {
    case 1:
      uint64_t result = 7498084;
      break;
    case 2:
      uint64_t result = 0x6B6E696C6D7973;
      break;
    case 3:
      uint64_t result = 0x7361696C61;
      break;
    default:
      return result;
  }
  return result;
}

BOOL _s9libfssync12FileItemKindO23supportsMaterializationSbvg_0(char a1)
{
  return a1 != 2;
}

_UNKNOWN **static FileItemKind.allCases.getter()
{
  return &off_100A6CD50;
}

uint64_t FileItemKind.typeIdentifier.getter(char a1)
{
  uint64_t v2 = sub_10096B370();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      sub_10096B310();
      break;
    case 2:
      sub_10096B2A0();
      break;
    case 3:
      sub_10096B340();
      break;
    default:
      sub_10096B300();
      break;
  }
  uint64_t v6 = sub_10096B280();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

Swift::Int sub_1006B4190()
{
  uint64_t v1 = *v0;
  sub_10096D4B0();
  sub_10096D4C0(qword_100989B38[v1]);
  return sub_10096D500();
}

void sub_1006B41E0()
{
  sub_10096D4C0(qword_100989B38[*v0]);
}

Swift::Int sub_1006B4218()
{
  uint64_t v1 = *v0;
  sub_10096D4B0();
  sub_10096D4C0(qword_100989B38[v1]);
  return sub_10096D500();
}

uint64_t sub_1006B4264@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s9libfssync12FileItemKindO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1006B4290(void *a1@<X8>)
{
  *a1 = qword_100989B38[*v1];
}

uint64_t sub_1006B42A8()
{
  uint64_t result = 6516580;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7498084;
      break;
    case 2:
      uint64_t result = 0x6B6E696C6D7973;
      break;
    case 3:
      uint64_t result = 0x7361696C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006B4320()
{
  return sub_10096C040();
}

uint64_t sub_1006B4380()
{
  return sub_10096BFD0();
}

BOOL sub_1006B43D0(char *a1, char *a2)
{
  return qword_100989B38[*a1] == qword_100989B38[*a2];
}

void sub_1006B43F4(void *a1@<X8>)
{
  *a1 = &off_100A6A568;
}

uint64_t _s9libfssync12FileItemKindO8rawValueACSgSi_tcfC_0(unint64_t a1)
{
  if (a1 >= 5) {
    return 4;
  }
  else {
    return (0x304020100uLL >> (8 * a1));
  }
}

unint64_t sub_1006B442C()
{
  unint64_t result = qword_100AD9EF8;
  if (!qword_100AD9EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9EF8);
  }
  return result;
}

unint64_t sub_1006B4484()
{
  unint64_t result = qword_100AD9F00;
  if (!qword_100AD9F00)
  {
    sub_100033BE8(&qword_100AD9F08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FileItemKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006B45ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileItemKind()
{
  return &type metadata for FileItemKind;
}

void *sub_1006B45E4()
{
  sub_1004462D4(0, 1, 1);
  unint64_t v1 = _swiftEmptyArrayStorage[2];
  unint64_t v0 = _swiftEmptyArrayStorage[3];
  if (v1 >= v0 >> 1) {
    sub_1004462D4(v0 > 1, v1 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v1 + 1;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v1) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1004462D4(0, _swiftEmptyArrayStorage[2] + 1, 1);
  }
  unint64_t v3 = _swiftEmptyArrayStorage[2];
  unint64_t v2 = _swiftEmptyArrayStorage[3];
  if (v3 >= v2 >> 1) {
    sub_1004462D4(v2 > 1, v3 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v3 + 1;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3) = 1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1004462D4(0, _swiftEmptyArrayStorage[2] + 1, 1);
  }
  unint64_t v5 = _swiftEmptyArrayStorage[2];
  unint64_t v4 = _swiftEmptyArrayStorage[3];
  if (v5 >= v4 >> 1) {
    sub_1004462D4(v4 > 1, v5 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v5 + 1;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v5) = 3;
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1006B47F4()
{
  unint64_t result = qword_100AD9F10;
  if (!qword_100AD9F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F10);
  }
  return result;
}

unint64_t Fields.removingNonPropagatedFields.getter(uint64_t a1)
{
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  return a1 & 0xFFFFFFFFFF7FFFEFLL & (static Fields.all | 0x409000000C000);
}

uint64_t sub_1006B48C4(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

uint64_t *Fields.all.unsafeMutableAddressor()
{
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  return &static Fields.all;
}

void *Fields.isDataless.unsafeMutableAddressor()
{
  return &static Fields.isDataless;
}

void *Fields.childItemCount.unsafeMutableAddressor()
{
  return &static Fields.childItemCount;
}

void *Fields.kind.unsafeMutableAddressor()
{
  return &static Fields.kind;
}

void *Fields.mayAlreadyExist.unsafeMutableAddressor()
{
  return &static Fields.mayAlreadyExist;
}

void *Fields.isResurrected.unsafeMutableAddressor()
{
  return &static Fields.isResurrected;
}

void *Fields.conflictingVersions.unsafeMutableAddressor()
{
  return &static Fields.conflictingVersions;
}

void *Fields.syncPause.unsafeMutableAddressor()
{
  return &static Fields.syncPause;
}

void *Fields.syncResumingWithDropLocalChanges.unsafeMutableAddressor()
{
  return &static Fields.syncResumingWithDropLocalChanges;
}

void *Fields.isSyncRoot.unsafeMutableAddressor()
{
  return &static Fields.isSyncRoot;
}

void *Fields.parentID.unsafeMutableAddressor()
{
  return &static Fields.parentID;
}

void *Fields.filename.unsafeMutableAddressor()
{
  return &static Fields.filename;
}

uint64_t sub_1006B499C(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

void *Fields.structure.unsafeMutableAddressor()
{
  return &static Fields.structure;
}

void *Fields.content.unsafeMutableAddressor()
{
  return &static Fields.content;
}

uint64_t sub_1006B49BC(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

void *Fields.isPackage.unsafeMutableAddressor()
{
  return &static Fields.isPackage;
}

void *Fields.locked.unsafeMutableAddressor()
{
  return &static Fields.locked;
}

void *Fields.posixPermissions.unsafeMutableAddressor()
{
  return &static Fields.posixPermissions;
}

void *Fields.creationDate.unsafeMutableAddressor()
{
  return &static Fields.creationDate;
}

void *Fields.contentModificationDate.unsafeMutableAddressor()
{
  return &static Fields.contentModificationDate;
}

void *Fields.isHidden.unsafeMutableAddressor()
{
  return &static Fields.isHidden;
}

void *Fields.isPathExtensionHidden.unsafeMutableAddressor()
{
  return &static Fields.isPathExtensionHidden;
}

void *Fields.evictionUrgency.unsafeMutableAddressor()
{
  return &static Fields.evictionUrgency;
}

void *Fields.isIgnoreRoot.unsafeMutableAddressor()
{
  return &static Fields.isIgnoreRoot;
}

void *Fields.lastUsedDate.unsafeMutableAddressor()
{
  return &static Fields.lastUsedDate;
}

void *Fields.tags.unsafeMutableAddressor()
{
  return &static Fields.tags;
}

void *Fields.favoriteRank.unsafeMutableAddressor()
{
  return &static Fields.favoriteRank;
}

void *Fields.extendedAttributes.unsafeMutableAddressor()
{
  return &static Fields.extendedAttributes;
}

void *Fields.isPinned.unsafeMutableAddressor()
{
  return &static Fields.isPinned;
}

void *Fields.typeAndCreator.unsafeMutableAddressor()
{
  return &static Fields.typeAndCreator;
}

void *Fields.linkCount.unsafeMutableAddressor()
{
  return &static Fields.linkCount;
}

void *Fields.collaborationIdentifier.unsafeMutableAddressor()
{
  return &static Fields.collaborationIdentifier;
}

void *Fields.isShared.unsafeMutableAddressor()
{
  return &static Fields.isShared;
}

void *Fields.isSharedByCurrentUser.unsafeMutableAddressor()
{
  return &static Fields.isSharedByCurrentUser;
}

void *Fields.preformattedOwnerName.unsafeMutableAddressor()
{
  return &static Fields.preformattedOwnerName;
}

void *Fields.isDetachedRoot.unsafeMutableAddressor()
{
  return &static Fields.isDetachedRoot;
}

void *Fields.evictionReason.unsafeMutableAddressor()
{
  return &static Fields.evictionReason;
}

uint64_t static NSFileProviderItemFields.conflictingVersions.getter()
{
  return 0x80000000;
}

uint64_t static NSFileProviderItemFields.trashed.getter()
{
  return 0x40000000;
}

uint64_t *sub_1006B4AE0()
{
  if (qword_100ACC108 != -1) {
    swift_once();
  }
  return &qword_100B0B2E8;
}

void *Fields.inheritedContentPolicy.unsafeMutableAddressor()
{
  return &static Fields.inheritedContentPolicy;
}

void *Fields.isInPinnedFolder.unsafeMutableAddressor()
{
  return &static Fields.isInPinnedFolder;
}

void *Fields.contentPolicy.unsafeMutableAddressor()
{
  return &static Fields.contentPolicy;
}

BOOL sub_1006B4B50(char a1)
{
  return (a1 & 0x18) != 0;
}

unint64_t sub_1006B4B5C(uint64_t a1)
{
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  return a1 & 0xFE9FFFFFFFFEBFE7 & (static Fields.all | 0x10000000000);
}

void *Fields.capabilities.unsafeMutableAddressor()
{
  return &static Fields.capabilities;
}

void *Fields.isUploading.unsafeMutableAddressor()
{
  return &static Fields.isUploading;
}

void *Fields.isUploaded.unsafeMutableAddressor()
{
  return &static Fields.isUploaded;
}

void *Fields.uploadingError.unsafeMutableAddressor()
{
  return &static Fields.uploadingError;
}

void *Fields.downloadingError.unsafeMutableAddressor()
{
  return &static Fields.downloadingError;
}

void *Fields.isTopLevelSharedItem.unsafeMutableAddressor()
{
  return &static Fields.isTopLevelSharedItem;
}

void *Fields.preformattedMostRecentEditorName.unsafeMutableAddressor()
{
  return &static Fields.preformattedMostRecentEditorName;
}

void *Fields.lastEditedByCurrentUser.unsafeMutableAddressor()
{
  return &static Fields.lastEditedByCurrentUser;
}

void *Fields.sharingPermissions.unsafeMutableAddressor()
{
  return &static Fields.sharingPermissions;
}

void *Fields.isContainer.unsafeMutableAddressor()
{
  return &static Fields.isContainer;
}

void *Fields.isContainerPristine.unsafeMutableAddressor()
{
  return &static Fields.isContainerPristine;
}

void *Fields.appContainerBundleIdentifier.unsafeMutableAddressor()
{
  return &static Fields.appContainerBundleIdentifier;
}

void *Fields.cloudContainerIdentifier.unsafeMutableAddressor()
{
  return &static Fields.cloudContainerIdentifier;
}

void *Fields.containerDisplayName.unsafeMutableAddressor()
{
  return &static Fields.containerDisplayName;
}

void *Fields.displayName.unsafeMutableAddressor()
{
  return &static Fields.displayName;
}

void *Fields.hasUnresolvedConflicts.unsafeMutableAddressor()
{
  return &static Fields.hasUnresolvedConflicts;
}

void *Fields.itemDecoration.unsafeMutableAddressor()
{
  return &static Fields.itemDecoration;
}

void *Fields.userInfo.unsafeMutableAddressor()
{
  return &static Fields.userInfo;
}

void *Fields.lastEditorDeviceName.unsafeMutableAddressor()
{
  return &static Fields.lastEditorDeviceName;
}

uint64_t *Fields.nonSyncableFields.unsafeMutableAddressor()
{
  if (qword_100ACC0E8 != -1) {
    swift_once();
  }
  return &static Fields.nonSyncableFields;
}

uint64_t static Fields.kind.getter()
{
  return 0x10000000000;
}

uint64_t static Fields.isDataless.getter()
{
  return 16;
}

uint64_t static Fields.isPackage.getter()
{
  return 0x200000000000;
}

uint64_t static Fields.isPathExtensionHidden.getter()
{
  return 0x2000;
}

uint64_t static Fields.evictionUrgency.getter()
{
  return 0x10000;
}

uint64_t static Fields.isPinned.getter()
{
  return 0x20000;
}

uint64_t static Fields.structure.getter()
{
  return 0x20000000000;
}

uint64_t static Fields.isResurrected.getter()
{
  return 0x8000;
}

uint64_t static Fields.capabilities.getter()
{
  return 0x40000;
}

uint64_t static Fields.isUploading.getter()
{
  return 0x80000;
}

uint64_t static Fields.isUploaded.getter()
{
  return 0x100000;
}

uint64_t static Fields.uploadingError.getter()
{
  return 0x200000;
}

uint64_t static Fields.downloadingError.getter()
{
  return 0x400000;
}

uint64_t static Fields.isShared.getter()
{
  return 0x1000000;
}

uint64_t static Fields.isTopLevelSharedItem.getter()
{
  return 0x2000000;
}

uint64_t static Fields.isSharedByCurrentUser.getter()
{
  return 0x4000000;
}

uint64_t static Fields.preformattedOwnerName.getter()
{
  return 0x8000000;
}

uint64_t static Fields.preformattedMostRecentEditorName.getter()
{
  return 0x10000000;
}

uint64_t static Fields.lastEditedByCurrentUser.getter()
{
  return 0x20000000;
}

const mach_header_64 *static Fields.isContainerPristine.getter()
{
  return &_mh_execute_header;
}

uint64_t static Fields.appContainerBundleIdentifier.getter()
{
  return 0x200000000;
}

uint64_t static Fields.cloudContainerIdentifier.getter()
{
  return 0x400000000;
}

uint64_t static Fields.containerDisplayName.getter()
{
  return 0x800000000;
}

uint64_t static Fields.displayName.getter()
{
  return 0x1000000000;
}

uint64_t static Fields.hasUnresolvedConflicts.getter()
{
  return 0x2000000000;
}

uint64_t static Fields.itemDecoration.getter()
{
  return 0x4000000000;
}

uint64_t static Fields.userInfo.getter()
{
  return 0x8000000000;
}

uint64_t static Fields.mayAlreadyExist.getter()
{
  return 0x80000000000;
}

uint64_t static Fields.isSyncRoot.getter()
{
  return 0x100000000000;
}

uint64_t static Fields.isIgnoreRoot.getter()
{
  return 0x800000;
}

uint64_t static Fields.typeAndCreator.getter()
{
  return 0x400000000000;
}

uint64_t static Fields.linkCount.getter()
{
  return 0x800000000000;
}

uint64_t static Fields.collaborationIdentifier.getter()
{
  return 0x1000000000000;
}

uint64_t static Fields.contentPolicy.getter()
{
  return 0x2000000000000;
}

uint64_t static Fields.conflictingVersions.getter()
{
  return 0x4000000000000;
}

uint64_t static Fields.lastEditorDeviceName.getter()
{
  return 0x8000000000000;
}

uint64_t static Fields.isDetachedRoot.getter()
{
  return 0x10000000000000;
}

uint64_t static Fields.syncPause.getter()
{
  return 0x20000000000000;
}

uint64_t static Fields.syncResumingWithDropLocalChanges.getter()
{
  return 0x40000000000000;
}

uint64_t static Fields.evictionReason.getter()
{
  return 0x100000000000000;
}

uint64_t static Fields.inheritedContentPolicy.getter()
{
  return 0x400000000000000;
}

uint64_t static Fields.isInPinnedFolder.getter()
{
  return 0x800000000000000;
}

void sub_1006B4E50()
{
  qword_100AD9F18 = 0x1F2000D033FEFLL;
}

void sub_1006B4FA8()
{
  unint64_t v0 = &_mh_execute_header;
  if (((unint64_t)&_mh_execute_header & 0xFFFFFFFF52E3FFFFLL) == 0) {
    unint64_t v0 = 0;
  }
  uint64_t v1 = (unint64_t)v0 | 0xAD1C0000;
  if ((~((unint64_t)v0 | 0xAD1C0000) & 0x2000000000) != 0) {
    uint64_t v2 = 0x2000000000;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | v1;
  uint64_t v4 = 0x2000000;
  if ((~v3 & 0x2000000) == 0) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v4 | v3;
  if ((~v5 & 0x20000000000000) != 0) {
    uint64_t v6 = 0x20000000000000;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = v6 | v5;
  uint64_t v9 = 0x40000000000000;
  uint64_t v8 = 0x100000000000000;
  if ((~v7 & 0x40000000000000) == 0) {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | v7;
  if ((~v10 & 0x100000000000000) == 0) {
    uint64_t v8 = 0;
  }
  static Fields.nonSyncableFields = v8 | v10;
}

uint64_t static Fields.nonSyncableFields.getter()
{
  return sub_1006B5110(&qword_100ACC0E8, (uint64_t)&static Fields.nonSyncableFields);
}

uint64_t sub_1006B5098()
{
  if (qword_100ACC0E0 != -1) {
    uint64_t result = swift_once();
  }
  static Fields.all = qword_100AD9F18;
  return result;
}

uint64_t static Fields.all.getter()
{
  return sub_1006B5110(&qword_100ACC0F0, (uint64_t)&static Fields.all);
}

uint64_t sub_1006B5110(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(void *)a2;
}

uint64_t sub_1006B514C()
{
  if (qword_100ACC0F0 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = static Fields.all;
  if (qword_100ACC108 != -1) {
    uint64_t result = swift_once();
  }
  qword_100B0B2D8 = v0 & ~qword_100B0B2E8;
  return result;
}

uint64_t sub_1006B51E4()
{
  if (qword_100ACC0F0 != -1) {
    uint64_t result = swift_once();
  }
  qword_100B0B2E0 = static Fields.all | 0x4000;
  return result;
}

uint64_t Fields.bitDescription.getter(const mach_header_64 *a1)
{
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  if ((const mach_header_64 *)static Fields.all == a1) {
    return 7105633;
  }
  if (qword_100ACC0F8 != -1) {
    swift_once();
  }
  if ((const mach_header_64 *)qword_100B0B2D8 == a1) {
    return 0x70662D6C6C61;
  }
  uint64_t result = 0;
  if ((uint64_t)a1 > 0xFFFFFFF)
  {
    if ((uint64_t)a1 > 0x7FFFFFFFFFFLL)
    {
      if ((uint64_t)a1 <= 0x3FFFFFFFFFFFFLL)
      {
        if ((uint64_t)a1 <= 0x3FFFFFFFFFFFLL)
        {
          if (a1 == (const mach_header_64 *)0x80000000000)
          {
            return 0x6165726C4179616DLL;
          }
          else if (a1 == (const mach_header_64 *)0x100000000000)
          {
            return 0x746F6F72636E7973;
          }
          else if (a1 == (const mach_header_64 *)0x200000000000)
          {
            return 0x6567616B636170;
          }
        }
        else if ((uint64_t)a1 > 0xFFFFFFFFFFFFLL)
        {
          if (a1 == (const mach_header_64 *)0x1000000000000)
          {
            return 0xD000000000000017;
          }
          else if (a1 == (const mach_header_64 *)0x2000000000000)
          {
            return 0x50746E65746E6F63;
          }
        }
        else if (a1 == (const mach_header_64 *)0x400000000000)
        {
          return 0x43646E4165707974;
        }
        else if (a1 == (const mach_header_64 *)0x800000000000)
        {
          return 0x6E756F436B6E696CLL;
        }
        return result;
      }
      if ((uint64_t)a1 > 0x1FFFFFFFFFFFFFLL)
      {
        if ((uint64_t)a1 > 0xFFFFFFFFFFFFFFLL)
        {
          if (a1 == (const mach_header_64 *)0x100000000000000) {
            return 0x6E6F697463697665;
          }
          if (a1 == (const mach_header_64 *)0x400000000000000) {
            return 0xD000000000000016;
          }
        }
        else if (a1 == (const mach_header_64 *)0x20000000000000)
        {
          return 0x73756150636E7973;
        }
        else if (a1 == (const mach_header_64 *)0x40000000000000)
        {
          return 0xD000000000000020;
        }
        return result;
      }
      if (a1 == (const mach_header_64 *)0x4000000000000) {
        return 0xD000000000000013;
      }
      if (a1 != (const mach_header_64 *)0x8000000000000)
      {
        if (a1 == (const mach_header_64 *)0x10000000000000) {
          return 0x6465686361746564;
        }
        return result;
      }
    }
    else
    {
      if ((uint64_t)a1 <= 0x7FFFFFFFFLL)
      {
        if ((uint64_t)a1 <= 0x7FFFFFFF)
        {
          if (a1 == (const mach_header_64 *)0x10000000)
          {
            return 0xD000000000000020;
          }
          else if (a1 == (const mach_header_64 *)0x20000000)
          {
            return 0xD000000000000017;
          }
          else if (a1 == (const mach_header_64 *)0x40000000)
          {
            return 0xD000000000000012;
          }
        }
        else if ((uint64_t)a1 > 0x1FFFFFFFFLL)
        {
          if (a1 == (const mach_header_64 *)0x200000000)
          {
            return 0xD00000000000001CLL;
          }
          else if (a1 == (const mach_header_64 *)0x400000000)
          {
            return 0xD000000000000018;
          }
        }
        else if (a1 == (const mach_header_64 *)0x80000000)
        {
          return 0x6961746E6F437369;
        }
        else if (a1 == &_mh_execute_header)
        {
          return 0xD000000000000013;
        }
        return result;
      }
      if ((uint64_t)a1 > 0x3FFFFFFFFFLL)
      {
        if ((uint64_t)a1 > 0xFFFFFFFFFFLL)
        {
          if (a1 == (const mach_header_64 *)0x10000000000)
          {
            return 1684957547;
          }
          else if (a1 == (const mach_header_64 *)0x20000000000)
          {
            return 0x7275746375727473;
          }
        }
        else if (a1 == (const mach_header_64 *)0x4000000000)
        {
          return 0x6F6365446D657469;
        }
        else if (a1 == (const mach_header_64 *)0x8000000000)
        {
          return 0x6F666E4972657375;
        }
        return result;
      }
      if (a1 != (const mach_header_64 *)0x800000000)
      {
        if (a1 == (const mach_header_64 *)0x1000000000) {
          return 0x4E79616C70736964;
        }
        if (a1 == (const mach_header_64 *)0x2000000000) {
          return 0xD000000000000016;
        }
        return result;
      }
    }
    return 0xD000000000000014;
  }
  if ((uint64_t)a1 < 0x4000)
  {
    if ((uint64_t)a1 > 127)
    {
      if ((uint64_t)a1 <= 1023)
      {
        if (a1 == (const mach_header_64 *)128)
        {
          return 0x657469726F766166;
        }
        else if (a1 == (const mach_header_64 *)256)
        {
          return 0x737274746178;
        }
        else if (a1 == (const mach_header_64 *)512)
        {
          return 0x64656B636F6CLL;
        }
      }
      else if ((uint64_t)a1 > 4095)
      {
        if (a1 == (const mach_header_64 *)4096)
        {
          return 0x6E6564646968;
        }
        else if (a1 == (const mach_header_64 *)0x2000)
        {
          return 0x6564646948747865;
        }
      }
      else if (a1 == (const mach_header_64 *)1024)
      {
        return 0x656D697462;
      }
      else if (a1 == (const mach_header_64 *)2048)
      {
        return 0x656D69746DLL;
      }
    }
    else
    {
      switch((unint64_t)a1)
      {
        case 1uLL:
          uint64_t result = 0x656D616E656C6966;
          break;
        case 2uLL:
          uint64_t result = 0x4449746E65726170;
          break;
        case 4uLL:
          uint64_t result = 0xD000000000000010;
          break;
        case 8uLL:
          uint64_t result = 0x746E65746E6F63;
          break;
        case 0x10uLL:
          uint64_t result = 0x7373656C61746164;
          break;
        case 0x20uLL:
          uint64_t result = 0x646573557473616CLL;
          break;
        case 0x40uLL:
          uint64_t result = 1936154996;
          break;
        default:
          return result;
      }
    }
    return result;
  }
  if ((uint64_t)a1 < 0x200000)
  {
    if ((uint64_t)a1 >= 0x20000)
    {
      if ((uint64_t)a1 >= 0x80000)
      {
        if (a1 == (const mach_header_64 *)0x80000 || a1 == (const mach_header_64 *)0x100000) {
          return 0x64616F6C70557369;
        }
      }
      else if (a1 == (const mach_header_64 *)0x20000)
      {
        return 0x64656E6E6970;
      }
      else if (a1 == (const mach_header_64 *)0x40000)
      {
        return 0x696C696261706163;
      }
      return result;
    }
    if (a1 == (const mach_header_64 *)0x4000) {
      return 0x6572646C6968636ELL;
    }
    if (a1 == (const mach_header_64 *)0x8000) {
      return 0x7272757365527369;
    }
    if (a1 == (const mach_header_64 *)0x10000) {
      return 0x6E6F697463697665;
    }
    return result;
  }
  if ((uint64_t)a1 <= 0xFFFFFF)
  {
    if (a1 == (const mach_header_64 *)0x200000) {
      return 0x6E6964616F6C7075;
    }
    if (a1 == (const mach_header_64 *)0x400000) {
      return 0xD000000000000010;
    }
    if (a1 == (const mach_header_64 *)0x800000) {
      return 0x65726F6E6769;
    }
    return result;
  }
  if ((uint64_t)a1 > 0x3FFFFFF)
  {
    if (a1 == (const mach_header_64 *)0x4000000) {
      return 0xD000000000000015;
    }
    if (a1 == (const mach_header_64 *)0x8000000) {
      return 0xD000000000000015;
    }
    return result;
  }
  if (a1 == (const mach_header_64 *)0x1000000) {
    return 0x6465726168537369;
  }
  if (a1 == (const mach_header_64 *)0x2000000) {
    return 0xD000000000000014;
  }
  return result;
}

uint64_t Fields.bitSetDescription.getter(uint64_t a1)
{
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  if ((static Fields.all & a1) == static Fields.all) {
    return 7105633;
  }
  else {
    return 0;
  }
}

unint64_t Fields.removingContentFields.getter(uint64_t a1)
{
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  return a1 & 0xFFFFDFFFFFFEF6E7 & (static Fields.all | 0x6409000000C000);
}

uint64_t Fields.addingContentFields.getter(uint64_t a1)
{
  return a1 | 0x918;
}

unint64_t Fields.removingNonMetadataFields.getter(uint64_t a1)
{
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  return a1 & 0xFFFFFFFFFFFFFFF4 & (static Fields.all | 0x409000000C000);
}

void sub_1006B5E74()
{
  qword_100B0B2E8 = 0x16180000D034200;
}

uint64_t sub_1006B5F24()
{
  return Fields.bitDescription.getter(*v0);
}

int8x16_t sub_1006B5F2C@<Q0>(int8x16_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  uint64_t v4 = v3 & ~static Fields.all;
  if ((static Fields.all & v3) != static Fields.all) {
    uint64_t v4 = 0;
  }
  int32x2_t v5 = vdup_n_s32((static Fields.all & v3) == static Fields.all);
  v6.i64[0] = v5.u32[0];
  v6.i64[1] = v5.u32[1];
  int8x16_t result = vandq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v6, 0x3FuLL)), (int8x16_t)xmmword_100989B60);
  *a1 = result;
  a1[1].i64[0] = v4;
  return result;
}

uint64_t sub_1006B5FC0()
{
  return sub_1006096B0(*v0);
}

uint64_t sub_1006B5FC8()
{
  return sub_1006F013C(*v0);
}

uint64_t NSFileProviderItemFields.bitDescription.getter(uint64_t a1)
{
  uint64_t result = 0;
  if (a1 > 127)
  {
    uint64_t v3 = 0x43646E4165707974;
    if (a1 == 0x80000000) {
      unint64_t v4 = 0xD000000000000013;
    }
    else {
      unint64_t v4 = 0;
    }
    if (a1 == 0x40000000) {
      uint64_t v5 = 0x64656873617274;
    }
    else {
      uint64_t v5 = v4;
    }
    if (a1 != 1024) {
      uint64_t v3 = v5;
    }
    uint64_t v6 = 0x656D69746DLL;
    uint64_t v7 = 0x74737953656C6966;
    uint64_t v8 = 0x737274746178;
    if (a1 != 512) {
      uint64_t v8 = 0;
    }
    if (a1 != 256) {
      uint64_t v7 = v8;
    }
    if (a1 != 128) {
      uint64_t v6 = v7;
    }
    if (a1 <= 1023) {
      return v6;
    }
    else {
      return v3;
    }
  }
  else
  {
    switch(a1)
    {
      case 1:
        uint64_t result = 0x73746E65746E6F63;
        break;
      case 2:
        uint64_t result = 0x656D616E656C6966;
        break;
      case 4:
        uint64_t result = 0x4449746E65726170;
        break;
      case 8:
        uint64_t result = 0x646573557473616CLL;
        break;
      case 16:
        uint64_t result = 0x61746144676174;
        break;
      case 32:
        uint64_t result = 0x657469726F766166;
        break;
      case 64:
        uint64_t result = 0x656D697463;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1006B62B4()
{
  return NSFileProviderItemFields.bitDescription.getter(*v0);
}

unint64_t sub_1006B62BC()
{
  return sub_100609ADC(*v0);
}

uint64_t sub_1006B62C4()
{
  return sub_1006F02C8(*v0);
}

uint64_t sub_1006B62CC(uint64_t a1)
{
  if ((a1 & 1) == 0)
  {
    if ((a1 & 2) == 0)
    {
      if ((a1 & 0x3004) == 0)
      {
        if ((a1 & 0x800) != 0)
        {
          uint64_t v1 = 128;
          if ((a1 & 0x400) == 0) {
            goto LABEL_21;
          }
        }
        else
        {
          if ((a1 & 0x400) == 0)
          {
            if ((a1 & 0x18) != 0)
            {
              uint64_t v1 = 0;
              goto LABEL_22;
            }
            uint64_t v1 = 0;
            if ((a1 & 0x20) == 0) {
              goto LABEL_34;
            }
LABEL_23:
            v1 |= 8uLL;
            if ((a1 & 0x40) != 0) {
              goto LABEL_24;
            }
            goto LABEL_35;
          }
          uint64_t v1 = 0;
        }
        goto LABEL_32;
      }
      uint64_t v1 = 0;
      goto LABEL_11;
    }
    uint64_t v1 = 4;
LABEL_10:
    if ((a1 & 0x3004) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if ((a1 & 2) != 0)
  {
    uint64_t v1 = 6;
    goto LABEL_10;
  }
  if ((a1 & 0x3004) != 0)
  {
    uint64_t v1 = 2;
LABEL_11:
    v1 |= 0x100uLL;
LABEL_12:
    if ((a1 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_20:
    v1 |= 0x80uLL;
    if ((a1 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_32;
  }
  uint64_t v1 = 2;
  if ((a1 & 0x800) != 0) {
    goto LABEL_20;
  }
LABEL_13:
  if ((a1 & 0x400) == 0)
  {
LABEL_21:
    if ((a1 & 0x18) != 0) {
      goto LABEL_22;
    }
    goto LABEL_33;
  }
LABEL_32:
  v1 |= 0x40uLL;
  if ((a1 & 0x18) == 0)
  {
LABEL_33:
    if ((a1 & 0x20) == 0) {
      goto LABEL_34;
    }
    goto LABEL_23;
  }
LABEL_22:
  v1 |= 1uLL;
  if ((a1 & 0x20) != 0) {
    goto LABEL_23;
  }
LABEL_34:
  if ((a1 & 0x40) != 0)
  {
LABEL_24:
    v1 |= 0x10uLL;
    if ((a1 & 0x80) != 0) {
      goto LABEL_25;
    }
    goto LABEL_36;
  }
LABEL_35:
  if ((a1 & 0x80) != 0)
  {
LABEL_25:
    v1 |= 0x20uLL;
    if ((a1 & 0x100) != 0) {
      goto LABEL_26;
    }
    goto LABEL_37;
  }
LABEL_36:
  if ((a1 & 0x100) != 0)
  {
LABEL_26:
    v1 |= 0x200uLL;
    if ((a1 & 0x400000000000) != 0) {
      goto LABEL_27;
    }
    goto LABEL_38;
  }
LABEL_37:
  if ((a1 & 0x400000000000) != 0)
  {
LABEL_27:
    v1 |= 0x400uLL;
    if ((a1 & 0x4000000000000) == 0) {
      return v1;
    }
    return v1 | 0x80000000;
  }
LABEL_38:
  if ((a1 & 0x4000000000000) != 0) {
    return v1 | 0x80000000;
  }
  return v1;
}

uint64_t sub_1006B63DC(int a1)
{
  if ((a1 & 2) != 0)
  {
    if ((a1 & 4) == 0)
    {
      if ((a1 & 0x100) == 0)
      {
        uint64_t v1 = 1;
        if ((a1 & 0x80) == 0) {
          goto LABEL_27;
        }
        goto LABEL_5;
      }
      uint64_t v2 = a1 & 0x100;
      uint64_t v1 = 1;
      goto LABEL_23;
    }
    uint64_t v1 = 3;
    if ((a1 & 0x100) != 0)
    {
LABEL_19:
      uint64_t v2 = a1 & 0x100;
LABEL_23:
      v1 |= 4uLL;
LABEL_24:
      if (v2) {
        v1 |= 0x3000uLL;
      }
      if ((a1 & 0x80) == 0) {
        goto LABEL_27;
      }
LABEL_5:
      v1 |= 0x800uLL;
      if ((a1 & 0x40) != 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_21:
    uint64_t v2 = 0;
    goto LABEL_24;
  }
  if ((a1 & 4) != 0)
  {
    uint64_t v1 = 2;
    if ((a1 & 0x100) != 0) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  uint64_t v1 = 0;
  if ((a1 & 0x100) != 0) {
    goto LABEL_19;
  }
  if ((a1 & 0x80) != 0) {
    goto LABEL_5;
  }
LABEL_27:
  if ((a1 & 0x40) != 0)
  {
LABEL_6:
    v1 |= 0x400uLL;
    if (a1) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  if (a1)
  {
LABEL_7:
    v1 |= 8uLL;
    if ((a1 & 8) != 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  if ((a1 & 8) != 0)
  {
LABEL_8:
    v1 |= 0x20uLL;
    if ((a1 & 0x10) != 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  if ((a1 & 0x10) != 0)
  {
LABEL_9:
    v1 |= 0x40uLL;
    if ((a1 & 0x20) != 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  if ((a1 & 0x20) != 0)
  {
LABEL_10:
    v1 |= 0x80uLL;
    if ((a1 & 0x200) != 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  if ((a1 & 0x200) != 0)
  {
LABEL_11:
    v1 |= 0x100uLL;
    if ((a1 & 0x400) != 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  if ((a1 & 0x400) != 0)
  {
LABEL_12:
    v1 |= 0x400000000000uLL;
    if ((a1 & 0x80000000) == 0) {
      return v1;
    }
    return v1 | 0x4000000000000;
  }
LABEL_34:
  if (a1 < 0) {
    return v1 | 0x4000000000000;
  }
  return v1;
}

uint64_t sub_1006B64B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B6608(a1, a2, a3, (uint64_t (*)(void))sub_1006B64DC, (uint64_t (*)(void))sub_1006B6530);
}

unint64_t sub_1006B64DC()
{
  unint64_t result = qword_100AD9F20;
  if (!qword_100AD9F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F20);
  }
  return result;
}

unint64_t sub_1006B6530()
{
  unint64_t result = qword_100AD9F28;
  if (!qword_100AD9F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F28);
  }
  return result;
}

unint64_t sub_1006B6588()
{
  unint64_t result = qword_100AD9F30;
  if (!qword_100AD9F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F30);
  }
  return result;
}

uint64_t sub_1006B65DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B6608(a1, a2, a3, (uint64_t (*)(void))sub_1006B6644, (uint64_t (*)(void))sub_1006B6698);
}

uint64_t sub_1006B6608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1006B6644()
{
  unint64_t result = qword_100AD9F58;
  if (!qword_100AD9F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F58);
  }
  return result;
}

unint64_t sub_1006B6698()
{
  unint64_t result = qword_100AD9F60;
  if (!qword_100AD9F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F60);
  }
  return result;
}

unint64_t sub_1006B66F0()
{
  unint64_t result = qword_100AD9F68;
  if (!qword_100AD9F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F68);
  }
  return result;
}

unint64_t sub_1006B6748()
{
  unint64_t result = qword_100AD9F70;
  if (!qword_100AD9F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F70);
  }
  return result;
}

uint64_t sub_1006B679C()
{
  return sub_1006B6950(&qword_100AD9F78, &qword_100AD9F80);
}

unint64_t sub_1006B67C8()
{
  unint64_t result = qword_100AD9F88;
  if (!qword_100AD9F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9F88);
  }
  return result;
}

uint64_t sub_1006B681C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B6858(a1, a2, a3, (unint64_t *)&unk_100ACB5D0, (uint64_t)&protocol conformance descriptor for NSFileProviderItemFields, &qword_100AD9F90);
}

uint64_t sub_1006B6858(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  *(void *)(a1 + 8) = sub_1006B68E4(a4);
  uint64_t result = sub_1006B68E4(a6);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1006B68A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B6858(a1, a2, a3, &qword_100AD9FB8, (uint64_t)&unk_1009746A8, &qword_100AD9FC0);
}

uint64_t sub_1006B68E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSFileProviderItemFields(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006B6928()
{
  return sub_1006B6950(&qword_100AD9FC8, &qword_100AD9FD0);
}

uint64_t sub_1006B6950(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100033BE8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Fields()
{
  return &type metadata for Fields;
}

uint64_t *NSFileProviderItemIdentifier.root.unsafeMutableAddressor()
{
  if (qword_100ACC110 != -1) {
    swift_once();
  }
  return &static NSFileProviderItemIdentifier.root;
}

uint64_t *NSFileProviderItemIdentifier.trash.unsafeMutableAddressor()
{
  if (qword_100ACC118 != -1) {
    swift_once();
  }
  return &static NSFileProviderItemIdentifier.trash;
}

NSString NSFileProviderItemIdentifier.init(rs:at:)(void *a1, uint64_t a2)
{
  NSString v3 = [a1 stringAtIndex:a2];
  if (!v3)
  {
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    NSString v3 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }

  return v3;
}

uint64_t NSFileProviderItemIdentifier.encode(_:)(void *a1)
{
  uint64_t v2 = sub_10096BCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096BC90();
  uint64_t v6 = sub_10096BC40();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    Class isa = sub_10096AF20().super.isa;
    sub_10001E9AC(v6, v8);
    id v11 = [a1 bindObjectParameter:isa];

    uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    return v12;
  }
  return result;
}

uint64_t static NSFileProviderItemIdentifier.< infix(_:_:)()
{
  uint64_t v0 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v2 == v3) {
    char v4 = 0;
  }
  else {
    char v4 = sub_10096D2D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1006B6CC0()
{
  uint64_t v0 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_10096D2D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1006B6D4C()
{
  uint64_t v0 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_1006B6DE4()
{
  uint64_t v0 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_1006B6E7C()
{
  uint64_t v0 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_10096D2D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

const char *NSFileProviderItemIdentifier.sqlType.unsafeMutableAddressor()
{
  return "BLOB";
}

__C::NSFileProviderItemIdentifier_optional __swiftcall NSFileProviderItemIdentifier.init(parsing:)(Swift::String parsing)
{
  NSString v1 = sub_10096BC00();
  swift_bridgeObjectRelease();
  uint64_t v3 = v1;
  result.value._rawValue = v3;
  result.is_nil = v2;
  return result;
}

NSFileProviderItemIdentifier sub_1006B6F4C()
{
  static NSFileProviderItemIdentifier.root = (uint64_t)NSFileProviderRootContainerItemIdentifier;
  return NSFileProviderRootContainerItemIdentifier;
}

id static NSFileProviderItemIdentifier.root.getter()
{
  return sub_1006B6FC4(&qword_100ACC110, (void **)&static NSFileProviderItemIdentifier.root);
}

NSFileProviderItemIdentifier sub_1006B6F88()
{
  static NSFileProviderItemIdentifier.trash = (uint64_t)NSFileProviderTrashContainerItemIdentifier;
  return NSFileProviderTrashContainerItemIdentifier;
}

id static NSFileProviderItemIdentifier.trash.getter()
{
  return sub_1006B6FC4(&qword_100ACC118, (void **)&static NSFileProviderItemIdentifier.trash);
}

id sub_1006B6FC4(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

__C::NSFileProviderItemIdentifier __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSFileProviderItemIdentifier.init(sqliteValue:)(Swift::OpaquePointer sqliteValue)
{
  return (__C::NSFileProviderItemIdentifier)sub_1006B74B4((sqlite3_value *)sqliteValue._rawValue);
}

id sub_1006B7028@<X0>(void **a1@<X8>)
{
  return sub_1006B7070(&qword_100ACC110, (void **)&static NSFileProviderItemIdentifier.root, a1);
}

id sub_1006B704C@<X0>(void **a1@<X8>)
{
  return sub_1006B7070(&qword_100ACC118, (void **)&static NSFileProviderItemIdentifier.trash, a1);
}

id sub_1006B7070@<X0>(void *a1@<X2>, void **a2@<X3>, void **a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  char v5 = *a2;
  *a3 = *a2;

  return v5;
}

uint64_t sub_1006B70C8()
{
  return _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
}

uint64_t sub_1006B70D0@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_10096BC00();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1006B7110()
{
  return NSFileProviderItemIdentifier.description.getter();
}

void sub_1006B7118(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  NSString v5 = [a1 stringAtIndex:a2];
  if (!v5)
  {
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    NSString v5 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }

  *a3 = v5;
}

NSString sub_1006B7194@<X0>(sqlite3_value *a1@<X0>, void *a2@<X8>)
{
  NSString result = sub_1006B74B4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1006B71C0(void *a1)
{
  return NSFileProviderItemIdentifier.encode(_:)(a1);
}

uint64_t sub_1006B71C8()
{
  return sub_10096C030();
}

uint64_t sub_1006B7244()
{
  return sub_10096BFC0();
}

NSFileProviderItemIdentifier sub_1006B72B0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 64))(v12, v11) & 1) != 0 && (a2)
  {
    uint64_t v13 = &NSFileProviderRootContainerItemIdentifier;
LABEL_7:
    NSFileProviderItemIdentifier v14 = *v13;
    return v14;
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(a3, a4) & 1) != 0 && (a2)
  {
    uint64_t v13 = &NSFileProviderTrashContainerItemIdentifier;
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  type metadata accessor for NSFileProviderItemIdentifier(0);
  if (swift_dynamicCast())
  {
    BOOL v16 = (void *)v18[0];
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    NSString v17 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18[0] = 0x2F73662F70665F5FLL;
    v18[1] = 0xE800000000000000;
    v20._int64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 80))(a3, a4);
    sub_10096BDC0(v20);
    swift_bridgeObjectRelease();
    NSString v17 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }
  return (NSFileProviderItemIdentifier)v17;
}

NSString sub_1006B74B4(sqlite3_value *a1)
{
  uint64_t v3 = sub_10096BCB0();
  __chkstk_darwin(v3 - 8);
  char v4 = sqlite3_value_blob(a1);
  NSString result = (NSString)sqlite3_value_bytes(a1);
  if (v4)
  {
    uint64_t v6 = sub_100078D08(v4, (int)result);
    unint64_t v8 = v7;
    sub_10096BC90();
    uint64_t v9 = sub_10096BC50();
    if (v10)
    {
      uint64_t v11 = HIBYTE(v10) & 0xF;
      if ((v10 & 0x2000000000000000) == 0) {
        uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
      }
      if (v11)
      {
        NSString v1 = sub_10096BC00();
        sub_10001E9C0(v6, v8);
        swift_bridgeObjectRelease();
        return v1;
      }
      swift_bridgeObjectRelease();
    }
    sub_10010F2A0();
    swift_allocError();
    *(_OWORD *)uint64_t v12 = 0u;
    *(_OWORD *)(v12 + 16) = 0u;
    *(_OWORD *)(v12 + 32) = 0u;
    *(unsigned char *)(v12 + 48) = 9;
    swift_willThrow();
    sub_10001E9C0(v6, v8);
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006B7610()
{
  return sub_1006B76F4((unint64_t *)&unk_100ACA860);
}

uint64_t sub_1006B7644(void *a1)
{
  a1[1] = sub_1006B76F4(&qword_100AD9FD8);
  a1[2] = sub_1006B76F4(&qword_100AD9FE0);
  a1[3] = sub_1006B76F4(&qword_100AD9FE8);
  uint64_t result = sub_1006B76F4((unint64_t *)&unk_100ACA8E0);
  a1[4] = result;
  return result;
}

uint64_t sub_1006B76F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSFileProviderItemIdentifier(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static DispatchQoS.current.getter()
{
  uint64_t v0 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10096B760();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  qos_class_self();
  sub_10096B740();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchQoS.QoSClass.utility(_:), v3);
    sub_1006B78BC((uint64_t)v2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  }
  return sub_10096B7B0();
}

uint64_t sub_1006B78BC(uint64_t a1)
{
  uint64_t v2 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1006B791C(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a7;
  uint64_t v32 = a6;
  uint64_t v31 = sub_10096B730();
  uint64_t v37 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10096B7D0();
  uint64_t v35 = *(void *)(v14 - 8);
  uint64_t v36 = v14;
  __chkstk_darwin(v14);
  BOOL v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = a4;
  if (!a4) {
    id v17 = (id)fpfs_current_log();
  }
  id v18 = a4;
  id v33 = (id)fpfs_adopt_log();
  uint64_t v19 = swift_allocObject();
  uint64_t aBlock = sub_10096C6D0();
  uint64_t v40 = v20;
  v45._int64_t countAndFlagsBits = 16416;
  v45._object = (void *)0xE200000000000000;
  sub_10096BDC0(v45);
  v46._int64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v46);
  swift_bridgeObjectRelease();
  sub_10096BCF0();
  swift_bridgeObjectRelease();
  uint64_t v21 = __fp_log_fork();
  swift_release();
  *(void *)(v19 + 16) = v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v17;
  *(void *)(v22 + 24) = v19;
  *(void *)(v22 + 32) = a5;
  *(void *)(v22 + 40) = a1;
  *(void *)(v22 + 48) = a2;
  *(unsigned char *)(v22 + 56) = a3;
  uint64_t v23 = v34;
  *(void *)(v22 + 64) = v32;
  *(void *)(v22 + 72) = v23;
  uint64_t v43 = sub_1006B95B8;
  uint64_t v44 = v22;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v40 = 1107296256;
  unint64_t v41 = sub_100020480;
  id v42 = &unk_100A96AE8;
  unint64_t v24 = _Block_copy(&aBlock);
  id v25 = v17;
  swift_retain();
  id v26 = a5;
  swift_retain();
  sub_10096B780();
  unint64_t v38 = _swiftEmptyArrayStorage;
  sub_1006B9384((unint64_t *)&unk_100ACAEF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002B7CC((uint64_t *)&unk_100ACB5C0);
  sub_1006B93CC();
  uint64_t v27 = v31;
  sub_10096CA60();
  sub_10096C610();
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v36);
  swift_release();
  swift_release();
  uint64_t v28 = v33;
  id v29 = (id)fpfs_adopt_log();
}

uint64_t sub_1006B7CE4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_10096B730();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = a1;
  if (!a1) {
    id v11 = (id)fpfs_current_log();
  }
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = a3;
  v12[4] = a4;
  aBlock[4] = sub_100394C64;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100020480;
  aBlock[3] = &unk_100A96A70;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v11;
  swift_retain();
  id v15 = a1;
  sub_1000256F4();
  sub_10096C710();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1006B7EAC(dispatch_time_t a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClassUnconditional();

  dispatch_source_set_timer(v2, a1, 0xFFFFFFFFFFFFFFFFLL, 0);
}

void OS_dispatch_queue.asyncAndWaitWithLogs<A>(_:quiet:function:block:)(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10 = v9;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v32 = a9;
  id v17 = a1;
  if (!a1) {
    id v17 = (id)fpfs_current_log();
  }
  id v18 = a1;
  id v19 = (id)fpfs_adopt_log();
  uint64_t v20 = v19;
  uint64_t v35 = 0;
  char v36 = 1;
  if ((a2 & 1) == 0)
  {
    uint64_t v33 = sub_10096C6D0();
    uint64_t v34 = v21;
    v37._int64_t countAndFlagsBits = 16416;
    v37._object = (void *)0xE200000000000000;
    sub_10096BDC0(v37);
    v38._int64_t countAndFlagsBits = sub_10096CC10();
    sub_10096BDC0(v38);
    swift_bridgeObjectRelease();
    sub_10096BCF0();
    swift_bridgeObjectRelease();
    uint64_t v22 = __fp_log_fork();
    id v19 = (id)swift_release();
    uint64_t v35 = v22;
    char v36 = 0;
  }
  uint64_t v23 = __chkstk_darwin(v19);
  v26[6] = a8;
  v26[7] = v17;
  v26[8] = &v35;
  v26[9] = v10;
  v26[10] = a3;
  v26[11] = a4;
  char v27 = a5;
  uint64_t v28 = v30;
  uint64_t v29 = v31;
  __chkstk_darwin(v23);
  v26[2] = a8;
  sub_1006B8958((uint64_t)sub_1006B8DF0, v24, (void (*)(uint64_t))sub_1006B8E28, (uint64_t)v26, a8, v32);
  id v25 = (id)fpfs_adopt_log();
}

void sub_1006B8108(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v32 = a6;
  uint64_t v30 = a5;
  uint64_t v29 = sub_10096B730();
  uint64_t v35 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10096B7D0();
  uint64_t v33 = *(void *)(v14 - 8);
  uint64_t v34 = v14;
  __chkstk_darwin(v14);
  BOOL v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = a1;
  if (!a1) {
    id v17 = (id)fpfs_current_log();
  }
  id v18 = a1;
  id v31 = (id)fpfs_adopt_log();
  uint64_t v19 = swift_allocObject();
  uint64_t aBlock = sub_10096C6D0();
  uint64_t v38 = v20;
  v43._int64_t countAndFlagsBits = 16416;
  v43._object = (void *)0xE200000000000000;
  sub_10096BDC0(v43);
  v44._int64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v44);
  swift_bridgeObjectRelease();
  sub_10096BCF0();
  swift_bridgeObjectRelease();
  uint64_t v21 = __fp_log_fork();
  swift_release();
  *(void *)(v19 + 16) = v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v17;
  *(void *)(v22 + 24) = v19;
  *(void *)(v22 + 32) = v7;
  *(void *)(v22 + 40) = a2;
  *(void *)(v22 + 48) = a3;
  *(unsigned char *)(v22 + 56) = a4;
  uint64_t v23 = v32;
  *(void *)(v22 + 64) = v30;
  *(void *)(v22 + 72) = v23;
  unint64_t v41 = sub_1006B95B8;
  uint64_t v42 = v22;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_100020480;
  uint64_t v40 = &unk_100A96B38;
  uint64_t v24 = _Block_copy(&aBlock);
  id v25 = v17;
  swift_retain();
  v7;
  swift_retain();
  sub_10096B780();
  char v36 = _swiftEmptyArrayStorage;
  sub_1006B9384((unint64_t *)&unk_100ACAEF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002B7CC((uint64_t *)&unk_100ACB5C0);
  sub_1006B93CC();
  uint64_t v26 = v29;
  sub_10096CA60();
  sub_10096C6B0();
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v34);
  swift_release();
  swift_release();
  char v27 = v31;
  id v28 = (id)fpfs_adopt_log();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:target:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a5;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v20 = sub_10096C690();
  uint64_t v7 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096C620();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10096B7D0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v20);
  uint64_t v17 = sub_10096C6C0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a4, v10);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a3, v14);
  return v17;
}

uint64_t sub_1006B873C(const void *a1)
{
  uint64_t v2 = sub_10096B730();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096B7D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _Block_copy(a1);
  sub_10096B7A0();
  v12[1] = _swiftEmptyArrayStorage;
  sub_1006B9384((unint64_t *)&unk_100ACAEF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002B7CC((uint64_t *)&unk_100ACB5C0);
  sub_1006B93CC();
  sub_10096CA60();
  sub_10096C710();
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1006B8958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v27 = a6;
  v25[1] = a4;
  uint64_t v26 = a3;
  uint64_t v29 = sub_10096C890();
  uint64_t v10 = *(void *)(v29 - 8);
  uint64_t v11 = __chkstk_darwin(v29);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v25 - v14;
  uint64_t v16 = *(void *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))((char *)v25 - v14, 1, 1, a5);
  uint64_t v31 = 0;
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a5;
  v17[3] = v15;
  v17[4] = a1;
  v17[5] = a2;
  v17[6] = &v31;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1006B964C;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_1000140A8;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100014080;
  aBlock[3] = &unk_100A96BB0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  FPDispatchAsyncAndWait(v6, v19);
  _Block_release(v19);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v22 = v31;
    if (v31)
    {
      swift_errorRetain();
      uint64_t v23 = v28;
      v26(v22);
      if (v23)
      {
        swift_errorRelease();
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v29);
        return swift_release();
      }
      swift_errorRelease();
      uint64_t v24 = v29;
LABEL_8:
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v24);
      return swift_release();
    }
    uint64_t v24 = v29;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v29);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, a5);
    if (result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v27, v13, a5);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1006B8CA8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_10096C890();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v14 - v11;
  a2(v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56))(v12, 0, 1, a5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 40))(a1, v12, v8);
}

void sub_1006B8DF0()
{
  sub_10031AE54(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(void (**)(void))(v0 + 72));
}

uint64_t sub_1006B8E28()
{
  return swift_errorRetain();
}

BOOL static DispatchQoS.< infix(_:_:)()
{
  uint64_t v0 = sub_10096B760();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_10096B7C0();
  unsigned int v7 = sub_10096B750();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_10096B7C0();
  unsigned int v9 = sub_10096B750();
  v8(v4, v0);
  return v7 < v9;
}

uint64_t sub_1006B8F94()
{
  return sub_1006B9384((unint64_t *)&unk_100AD9FF0, (void (*)(uint64_t))&type metadata accessor for DispatchQoS);
}

BOOL sub_1006B8FDC()
{
  uint64_t v0 = sub_10096B760();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_10096B7C0();
  unsigned int v7 = sub_10096B750();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_10096B7C0();
  unsigned int v9 = sub_10096B750();
  v8(v4, v0);
  return v7 >= v9;
}

BOOL sub_1006B9114()
{
  uint64_t v0 = sub_10096B760();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_10096B7C0();
  unsigned int v7 = sub_10096B750();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_10096B7C0();
  unsigned int v9 = sub_10096B750();
  v8(v4, v0);
  return v7 >= v9;
}

BOOL sub_1006B924C()
{
  uint64_t v0 = sub_10096B760();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_10096B7C0();
  unsigned int v7 = sub_10096B750();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_10096B7C0();
  unsigned int v9 = sub_10096B750();
  v8(v4, v0);
  return v7 < v9;
}

uint64_t sub_1006B9384(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006B93CC()
{
  unint64_t result = qword_100ACAF00;
  if (!qword_100ACAF00)
  {
    sub_100033BE8((uint64_t *)&unk_100ACB5C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ACAF00);
  }
  return result;
}

uint64_t sub_1006B9428()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006B9468()
{
  return swift_deallocObject();
}

void sub_1006B9478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t))
{
  id v8 = (id)fpfs_adopt_log();
  sub_10096C6D0();
  v11._int64_t countAndFlagsBits = 16416;
  v11._object = (void *)0xE200000000000000;
  sub_10096BDC0(v11);
  v12._int64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v12);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_10096BCF0();
  __fp_log_adopt();
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_release();
  a7(v9);
  swift_beginAccess();
  __fp_leave_section_Debug();
  swift_endAccess();
  id v10 = (id)fpfs_adopt_log();
}

uint64_t sub_1006B95C0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1006B9610()
{
  sub_1006B9478(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void (**)(uint64_t))(v0 + 64));
}

uint64_t sub_1006B963C()
{
  return swift_deallocObject();
}

uint64_t sub_1006B964C()
{
  return sub_1006B8CA8(*(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16));
}

uint64_t sub_1006B965C()
{
  return swift_deallocObject();
}

void sub_1006B9684()
{
  sub_1006E7F18();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DBCounters();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

id sub_1006B984C()
{
  unint64_t v0 = (void *)sub_1006F2F2C();

  return v0;
}

void sub_1006B9878(void (*a1)(void, void, void), unint64_t a2, unint64_t a3, void (*a4)(void), void (*a5)(void))
{
  uint64_t v118 = a5;
  uint64_t v119 = a4;
  unint64_t v113 = a2;
  unint64_t v114 = a3;
  uint64_t v108 = a1;
  uint64_t v6 = *(void *)(*(void *)v5 + 584);
  uint64_t v7 = *(void *)(*(void *)v5 + 600);
  uint64_t v8 = *(void *)(*(void *)v5 + 592);
  uint64_t v107 = *(ValueMetadata **)(*(void *)v5 + 576);
  uint64_t v106 = v8;
  uint64_t v121 = type metadata accessor for UserRequest();
  uint64_t v122 = &type metadata for NSecTimestamp;
  uint64_t v123 = sub_10096B7D0();
  uint64_t v124 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v96 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v9 = *(void *)(v96 + 64);
  uint64_t v10 = __chkstk_darwin(TupleTypeMetadata);
  unint64_t v11 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v100 = (void *)((char *)v92 - v11);
  __chkstk_darwin(v10);
  uint64_t v105 = (void *)((char *)v92 - v11);
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v99 = (char *)v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v92 - v15;
  uint64_t v17 = sub_10096B760();
  uint64_t v109 = *(void *)(v17 - 8);
  uint64_t v110 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v98 = (char *)v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v102 = (char *)v92 - v20;
  uint64_t v117 = sub_10096B7D0();
  uint64_t v111 = *(void *)(v117 - 8);
  uint64_t v21 = __chkstk_darwin(v117);
  uint64_t v97 = (char *)v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v101 = (char *)v92 - v24;
  __chkstk_darwin(v23);
  uint64_t v104 = (void *)((char *)v92 - v11);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v116 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v26 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v28 = (char *)v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v103 = (char *)v92 - v30;
  __chkstk_darwin(v29);
  uint64_t v115 = (void *)((char *)v92 - v31);
  uint64_t v32 = sub_10096B830();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (void *)((char *)v92 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v36 = *(void **)(v5 + 64);
  *uint64_t v35 = v36;
  (*(void (**)(void *, void, uint64_t))(v33 + 104))(v35, enum case for DispatchPredicate.onQueue(_:), v32);
  id v37 = v36;
  LOBYTE(v36) = sub_10096B860();
  (*(void (**)(void *, uint64_t))(v33 + 8))(v35, v32);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (*(unsigned char *)(v5 + 184) == 1)
  {
    id v38 = (id)FPDomainUnavailableError();
    v119();

    return;
  }
  uint64_t v93 = v28;
  uint64_t v39 = v5 + qword_100B0B320;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v121 = v6;
  uint64_t v122 = v107;
  uint64_t v123 = v7;
  uint64_t v124 = v106;
  uint64_t v121 = type metadata accessor for UserRequest();
  uint64_t v122 = &type metadata for NSecTimestamp;
  uint64_t v123 = v117;
  uint64_t v124 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  uint64_t v40 = swift_getTupleTypeMetadata();
  uint64_t v41 = sub_10096C1C0();
  uint64_t v42 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  Swift::String v43 = v108;
  sub_10096BAA0();
  swift_bridgeObjectRelease();
  uint64_t v44 = v121;
  swift_bridgeObjectRelease();
  Swift::String v45 = *(void (**)(char *, void, uint64_t))(v116 + 16);
  uint64_t v95 = AssociatedTypeWitness;
  uint64_t v94 = v39;
  uint64_t v107 = (ValueMetadata *)v41;
  uint64_t v106 = v42;
  if (!v44)
  {
    v45(v93, v43, AssociatedTypeWitness);
    sub_10096D230();
    swift_allocObject();
    uint64_t v49 = sub_10096C0D0();
    uint64_t v115 = v50;
    uint64_t v116 = v49;
    unint64_t v51 = v113;
    sub_1000CE628(v113);
    qos_class_self();
    uint64_t v52 = (uint64_t)v99;
    sub_10096B740();
    uint64_t v54 = v109;
    uint64_t v53 = v110;
    int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v52, 1, v110);
    v92[1] = v40;
    if (v55 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v98, enum case for DispatchQoS.QoSClass.utility(_:), v53);
      sub_10002B770(v52, (uint64_t *)&unk_100ACD990);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v98, v52, v53);
    }
    uint64_t v79 = v97;
    sub_10096B7B0();
    uint64_t v80 = TupleTypeMetadata;
    uint64_t v81 = v100;
    id v82 = (char *)v100 + *(int *)(TupleTypeMetadata + 64);
    long long v83 = (void (**)(void))((char *)v100 + *(int *)(TupleTypeMetadata + 80));
    unint64_t v84 = v114;
    *uint64_t v100 = v51;
    v81[1] = v84;
    unint64_t v85 = *(void (**)(char *, char *, uint64_t))(v111 + 32);
    uint64_t v86 = v117;
    v85(v82, v79, v117);
    uint64_t v88 = v118;
    uint64_t v87 = v119;
    *long long v83 = v119;
    v83[1] = v88;
    uint64_t v89 = v115;
    *uint64_t v115 = v51;
    v89[1] = v84;
    v85((char *)v89 + *(int *)(v80 + 64), v82, v86);
    uint64_t v90 = (unint64_t *)((char *)v89 + *(int *)(v80 + 80));
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = v87;
    *(void *)(v91 + 24) = v88;
    *uint64_t v90 = sub_1006FB200;
    v90[1] = v91;
    uint64_t v120 = sub_1003FC080(v116);
    swift_beginAccess();
    sub_10096BA80();
    swift_retain();
    sub_10096BAB0();
    goto LABEL_14;
  }
  uint64_t v108 = (void (*)(void, void, void))v45;
  uint64_t v100 = (unint64_t *)(v116 + 16);
  v45((char *)v115, v43, AssociatedTypeWitness);
  unint64_t v46 = v113;
  sub_1000CE628(v113);
  qos_class_self();
  sub_10096B740();
  uint64_t v48 = v109;
  uint64_t v47 = v110;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v16, 1, v110) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v102, enum case for DispatchQoS.QoSClass.utility(_:), v47);
    sub_10002B770((uint64_t)v16, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v102, v16, v47);
  }
  uint64_t v56 = v119;
  char v57 = v105;
  uint64_t v58 = v101;
  sub_10096B7B0();
  uint64_t v60 = v111;
  uint64_t v59 = TupleTypeMetadata;
  uint64_t v61 = (char *)v57 + *(int *)(TupleTypeMetadata + 64);
  id v62 = (void (**)(void))((char *)v57 + *(int *)(TupleTypeMetadata + 80));
  unint64_t v63 = v46;
  unint64_t v64 = v114;
  *char v57 = v46;
  v57[1] = v64;
  unsigned __int8 v65 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
  uint64_t v66 = v117;
  v65(v61, v58, v117);
  id v67 = v118;
  *id v62 = v56;
  v62[1] = v67;
  id v68 = v104;
  unint64_t *v104 = v63;
  v68[1] = v64;
  uint64_t v69 = v68;
  v65((char *)v68 + *(int *)(v59 + 64), v61, v66);
  uint64_t v70 = (unint64_t *)((char *)v69 + *(int *)(v59 + 80));
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = v56;
  *(void *)(v71 + 24) = v67;
  *uint64_t v70 = sub_1006FB200;
  v70[1] = v71;
  swift_beginAccess();
  id v72 = v103;
  uint64_t v73 = v115;
  uint64_t v74 = v95;
  v108(v103, v115, v95);
  swift_retain();
  sub_10096BA60();
  uint64_t v75 = sub_10096BA70();
  if (!*v76)
  {
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v77 = (void (*)(uint64_t *, void))v75;
  sub_10096C180();
  v77(&v121, 0);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v116 + 8);
  v78(v72, v74);
  v78((char *)v73, v74);
LABEL_14:
  swift_endAccess();
}

void sub_1006BA410(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v88 = a7;
  uint64_t v89 = a8;
  uint64_t v85 = a6;
  uint64_t v81 = a5;
  int v73 = a4;
  uint64_t v79 = *v10;
  uint64_t v14 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v14 - 8);
  uint64_t v87 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10096B3D0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v72 = (uint64_t (*)(uint64_t))((char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v70 - v23;
  uint64_t v25 = type metadata accessor for Signpost(0);
  uint64_t v74 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v77 = (uint64_t)&v70 - ((unint64_t)(v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v27;
  __chkstk_darwin(v26);
  uint64_t v86 = (uint64_t)&v70 - v28;
  uint64_t v90 = v10;
  id v80 = (id)fpfs_adopt_log();
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v78 = a10;
  uint64_t v76 = a9;
  uint64_t v29 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v24, 1, 1, v16);
  strcpy((char *)v91, "async batch ");
  BYTE5(v91[1]) = 0;
  HIWORD(v91[1]) = -5120;
  uint64_t v82 = a1;
  uint64_t v83 = a2;
  int v84 = a3;
  v92._int64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v92);
  swift_bridgeObjectRelease();
  uint64_t v30 = v91[1];
  uint64_t v71 = v91[0];
  sub_10002B70C((uint64_t)v24, (uint64_t)v22, &qword_100AD0830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16) == 1)
  {
    id v31 = v29;
    uint64_t v32 = v72;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v22, &qword_100AD0830);
  }
  else
  {
    uint64_t v32 = v72;
    (*(void (**)(uint64_t (*)(uint64_t), char *, uint64_t))(v17 + 32))(v72, v22, v16);
  }
  v73 &= 1u;
  uint64_t v33 = v86;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v17 + 16))(v86, v32, v16);
  *(void *)(v33 + *(int *)(v25 + 20)) = v29;
  uint64_t v34 = v33 + *(int *)(v25 + 24);
  *(void *)uint64_t v34 = "DB queue wait";
  *(void *)(v34 + 8) = 13;
  *(unsigned char *)(v34 + 16) = 2;
  id v35 = v29;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_100973BB0;
  *(void *)(v36 + 56) = &type metadata for String;
  *(void *)(v36 + 64) = sub_1000240A4();
  *(void *)(v36 + 32) = v71;
  *(void *)(v36 + 40) = v30;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(v17 + 8))(v32, v16);
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v24, &qword_100AD0830);
  uint64_t v37 = v77;
  sub_1006F90F0(v33, v77, type metadata accessor for Signpost);
  uint64_t v38 = *(unsigned __int8 *)(v74 + 80);
  uint64_t v39 = (v38 + 16) & ~v38;
  uint64_t v40 = v75 + 7;
  unint64_t v41 = (unint64_t)&v75[v39 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  id v72 = type metadata accessor for Signpost;
  sub_1006F9158(v37, v42 + v39, type metadata accessor for Signpost);
  Swift::String v43 = (void *)(v42 + v41);
  uint64_t v44 = v89;
  *Swift::String v43 = v88;
  v43[1] = v44;
  Swift::String v45 = (char *)v90[8];
  uint64_t v74 = v90[25];
  uint64_t v75 = v45;
  uint64_t v46 = sub_10096B7D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v87, 1, 1, v46);
  sub_1006F90F0(v33, v37, type metadata accessor for Signpost);
  uint64_t v47 = (v38 + 48) & ~v38;
  unint64_t v48 = (unint64_t)&v40[v47] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = (v50 + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = (v52 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v79;
  *(void *)(v54 + 16) = *(void *)(v79 + 576);
  *(_OWORD *)(v54 + 24) = *(_OWORD *)(v55 + 584);
  *(void *)(v54 + 40) = *(void *)(v55 + 600);
  sub_1006F9158(v37, v54 + v47, v72);
  uint64_t v56 = (void *)(v54 + v48);
  uint64_t v57 = v85;
  *uint64_t v56 = v81;
  v56[1] = v57;
  *(void *)(v54 + v49) = v90;
  unint64_t v58 = v54 + v50;
  uint64_t v59 = v83;
  *(void *)unint64_t v58 = v82;
  *(void *)(v58 + 8) = v59;
  *(unsigned char *)(v58 + 16) = v84;
  *(unsigned char *)(v58 + 17) = v73;
  uint64_t v60 = (void *)(v54 + v51);
  uint64_t v61 = v89;
  *uint64_t v60 = v88;
  v60[1] = v61;
  id v62 = (void *)(v54 + v52);
  uint64_t v63 = v78;
  *id v62 = v76;
  v62[1] = v63;
  unint64_t v64 = (void *)(v54 + v53);
  *unint64_t v64 = sub_1006F72D0;
  v64[1] = v42;
  unsigned __int8 v65 = (void *)swift_allocObject();
  v65[2] = sub_1006F72D0;
  v65[3] = v42;
  v65[4] = v74;
  swift_retain_n();
  swift_retain_n();
  uint64_t v66 = v75;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v67 = v87;
  sub_1003946CC(v66, v87, (void (*)())sub_100248430, v65, (uint64_t)sub_1006F7818, v54);
  swift_release();

  swift_release();
  swift_release();
  sub_10002B770(v67, (uint64_t *)&unk_100ACF600);
  sub_1006F7C48(v86, type metadata accessor for Signpost);
  id v68 = v80;
  id v69 = (id)fpfs_adopt_log();
}

void sub_1006BAC04(void (*a1)(void, void, void), unint64_t a2, unint64_t a3, void (*a4)(void), void (*a5)(void))
{
  uint64_t v118 = a5;
  uint64_t v119 = a4;
  unint64_t v113 = a2;
  unint64_t v114 = a3;
  uint64_t v108 = a1;
  uint64_t v6 = *(void *)(*(void *)v5 + 576);
  uint64_t v7 = *(void *)(*(void *)v5 + 592);
  uint64_t v8 = *(void *)(*(void *)v5 + 600);
  uint64_t v107 = *(ValueMetadata **)(*(void *)v5 + 584);
  uint64_t v106 = v8;
  uint64_t v121 = type metadata accessor for UserRequest();
  uint64_t v122 = &type metadata for NSecTimestamp;
  uint64_t v123 = sub_10096B7D0();
  uint64_t v124 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v96 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v9 = *(void *)(v96 + 64);
  uint64_t v10 = __chkstk_darwin(TupleTypeMetadata);
  unint64_t v11 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v100 = (void *)((char *)v92 - v11);
  __chkstk_darwin(v10);
  uint64_t v105 = (void *)((char *)v92 - v11);
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v99 = (char *)v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v92 - v15;
  uint64_t v17 = sub_10096B760();
  uint64_t v109 = *(void *)(v17 - 8);
  uint64_t v110 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v98 = (char *)v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v102 = (char *)v92 - v20;
  uint64_t v117 = sub_10096B7D0();
  uint64_t v111 = *(void *)(v117 - 8);
  uint64_t v21 = __chkstk_darwin(v117);
  uint64_t v97 = (char *)v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v101 = (char *)v92 - v24;
  __chkstk_darwin(v23);
  uint64_t v104 = (void *)((char *)v92 - v11);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v116 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v26 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v28 = (char *)v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v103 = (char *)v92 - v30;
  __chkstk_darwin(v29);
  uint64_t v115 = (void *)((char *)v92 - v31);
  uint64_t v32 = sub_10096B830();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  id v35 = (void *)((char *)v92 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = *(void **)(v5 + 64);
  *id v35 = v36;
  (*(void (**)(void *, void, uint64_t))(v33 + 104))(v35, enum case for DispatchPredicate.onQueue(_:), v32);
  id v37 = v36;
  LOBYTE(v36) = sub_10096B860();
  (*(void (**)(void *, uint64_t))(v33 + 8))(v35, v32);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (*(unsigned char *)(v5 + 184) == 1)
  {
    id v38 = (id)FPDomainUnavailableError();
    v119();

    return;
  }
  uint64_t v93 = v28;
  uint64_t v39 = v5 + qword_100B0B328;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v121 = v6;
  uint64_t v122 = v107;
  uint64_t v123 = v7;
  uint64_t v124 = v106;
  uint64_t v121 = type metadata accessor for UserRequest();
  uint64_t v122 = &type metadata for NSecTimestamp;
  uint64_t v123 = v117;
  uint64_t v124 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  uint64_t v40 = swift_getTupleTypeMetadata();
  uint64_t v41 = sub_10096C1C0();
  uint64_t v42 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  Swift::String v43 = v108;
  sub_10096BAA0();
  swift_bridgeObjectRelease();
  uint64_t v44 = v121;
  swift_bridgeObjectRelease();
  Swift::String v45 = *(void (**)(char *, void, uint64_t))(v116 + 16);
  uint64_t v95 = AssociatedTypeWitness;
  uint64_t v94 = v39;
  uint64_t v107 = (ValueMetadata *)v41;
  uint64_t v106 = v42;
  if (!v44)
  {
    v45(v93, v43, AssociatedTypeWitness);
    sub_10096D230();
    swift_allocObject();
    uint64_t v49 = sub_10096C0D0();
    uint64_t v115 = v50;
    uint64_t v116 = v49;
    unint64_t v51 = v113;
    sub_1000CE628(v113);
    qos_class_self();
    uint64_t v52 = (uint64_t)v99;
    sub_10096B740();
    uint64_t v54 = v109;
    uint64_t v53 = v110;
    int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v52, 1, v110);
    v92[1] = v40;
    if (v55 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v98, enum case for DispatchQoS.QoSClass.utility(_:), v53);
      sub_10002B770(v52, (uint64_t *)&unk_100ACD990);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v98, v52, v53);
    }
    uint64_t v79 = v97;
    sub_10096B7B0();
    uint64_t v80 = TupleTypeMetadata;
    uint64_t v81 = v100;
    uint64_t v82 = (char *)v100 + *(int *)(TupleTypeMetadata + 64);
    uint64_t v83 = (void (**)(void))((char *)v100 + *(int *)(TupleTypeMetadata + 80));
    unint64_t v84 = v114;
    *uint64_t v100 = v51;
    v81[1] = v84;
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v111 + 32);
    uint64_t v86 = v117;
    v85(v82, v79, v117);
    uint64_t v88 = v118;
    uint64_t v87 = v119;
    *uint64_t v83 = v119;
    v83[1] = v88;
    uint64_t v89 = v115;
    *uint64_t v115 = v51;
    v89[1] = v84;
    v85((char *)v89 + *(int *)(v80 + 64), v82, v86);
    uint64_t v90 = (unint64_t *)((char *)v89 + *(int *)(v80 + 80));
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = v87;
    *(void *)(v91 + 24) = v88;
    *uint64_t v90 = sub_1006FB200;
    v90[1] = v91;
    uint64_t v120 = sub_1003FC080(v116);
    swift_beginAccess();
    sub_10096BA80();
    swift_retain();
    sub_10096BAB0();
    goto LABEL_14;
  }
  uint64_t v108 = (void (*)(void, void, void))v45;
  uint64_t v100 = (unint64_t *)(v116 + 16);
  v45((char *)v115, v43, AssociatedTypeWitness);
  unint64_t v46 = v113;
  sub_1000CE628(v113);
  qos_class_self();
  sub_10096B740();
  uint64_t v48 = v109;
  uint64_t v47 = v110;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v16, 1, v110) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v102, enum case for DispatchQoS.QoSClass.utility(_:), v47);
    sub_10002B770((uint64_t)v16, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v102, v16, v47);
  }
  uint64_t v56 = v119;
  uint64_t v57 = v105;
  unint64_t v58 = v101;
  sub_10096B7B0();
  uint64_t v60 = v111;
  uint64_t v59 = TupleTypeMetadata;
  uint64_t v61 = (char *)v57 + *(int *)(TupleTypeMetadata + 64);
  id v62 = (void (**)(void))((char *)v57 + *(int *)(TupleTypeMetadata + 80));
  unint64_t v63 = v46;
  unint64_t v64 = v114;
  *uint64_t v57 = v46;
  v57[1] = v64;
  unsigned __int8 v65 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
  uint64_t v66 = v117;
  v65(v61, v58, v117);
  uint64_t v67 = v118;
  *id v62 = v56;
  v62[1] = v67;
  id v68 = v104;
  unint64_t *v104 = v63;
  v68[1] = v64;
  id v69 = v68;
  v65((char *)v68 + *(int *)(v59 + 64), v61, v66);
  uint64_t v70 = (unint64_t *)((char *)v69 + *(int *)(v59 + 80));
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = v56;
  *(void *)(v71 + 24) = v67;
  *uint64_t v70 = sub_1006FB200;
  v70[1] = v71;
  swift_beginAccess();
  id v72 = v103;
  int v73 = v115;
  uint64_t v74 = v95;
  v108(v103, v115, v95);
  swift_retain();
  sub_10096BA60();
  uint64_t v75 = sub_10096BA70();
  if (!*v76)
  {
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v77 = (void (*)(uint64_t *, void))v75;
  sub_10096C180();
  v77(&v121, 0);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v116 + 8);
  v78(v72, v74);
  v78((char *)v73, v74);
LABEL_14:
  swift_endAccess();
}

uint64_t sub_1006BB798(uint64_t a1, void (*a2)(void))
{
  uint64_t v335 = a2;
  uint64_t v340 = a1;
  uint64_t v3 = (void *)*v2;
  uint64_t v302 = sub_10096B0E0();
  uint64_t v301 = *(void *)(v302 - 8);
  __chkstk_darwin(v302);
  uint64_t v300 = (char *)&v278 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v3[72];
  uint64_t v6 = v3[73];
  uint64_t v7 = v3[74];
  uint64_t v8 = v3[75];
  uint64_t v359 = (void (*)(void, void, void))v5;
  uint64_t v360 = v6;
  uint64_t v361 = v7;
  uint64_t v362 = v8;
  uint64_t v338 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v318 = sub_10096C890();
  uint64_t v317 = *(void *)(v318 - 8);
  uint64_t v9 = __chkstk_darwin(v318);
  uint64_t v299 = (char *)&v278 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v308 = (char *)&v278 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v309 = (char *)&v278 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v307 = (void (*)(void))((char *)&v278 - v16);
  __chkstk_darwin(v15);
  uint64_t v323 = (char *)&v278 - v17;
  uint64_t v320 = sub_10096B480();
  uint64_t v319 = *(void (***)(char *, uint64_t))(v320 - 8);
  __chkstk_darwin(v320);
  uint64_t v324 = (char *)&v278 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v359 = (void (*)(void, void, void))v5;
  uint64_t v360 = v6;
  uint64_t v342 = v6;
  uint64_t v361 = v7;
  uint64_t v362 = v8;
  uint64_t v343 = (unsigned __int8 *)v8;
  uint64_t v359 = (void (*)(void, void, void))type metadata accessor for UserRequest();
  uint64_t v334 = sub_100011348(255, &qword_100AD62F0);
  uint64_t v360 = v334;
  uint64_t v333 = sub_10096B7D0();
  uint64_t v361 = v333;
  uint64_t v362 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  Swift::String v348 = *(uint64_t (**)())(TupleTypeMetadata - 8);
  uint64_t v20 = __chkstk_darwin(TupleTypeMetadata);
  Swift::String v331 = (char *)&v278 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  Swift::String v341 = (unsigned __int8 *)&v278 - v23;
  __chkstk_darwin(v22);
  uint64_t v336 = (int64_t *)((char *)&v278 - v24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v27 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v297 = (char *)&v278 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v310 = (char *)&v278 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v311 = (void (**)(void))((char *)&v278 - v32);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v278 - v33;
  uint64_t v350 = TupleTypeMetadata;
  uint64_t v349 = sub_10096C890();
  uint64_t v326 = *(void *)(v349 - 8);
  uint64_t v35 = __chkstk_darwin(v349);
  uint64_t v295 = (char *)&v278 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v332 = (char *)&v278 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  id v339 = (char *)&v278 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v296 = (char *)&v278 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v298 = (char *)&v278 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  Swift::String v330 = (int64_t *)((char *)&v278 - v46);
  uint64_t v47 = __chkstk_darwin(v45);
  Swift::String v329 = (char *)&v278 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v325 = (char *)&v278 - v50;
  __chkstk_darwin(v49);
  uint64_t v52 = (id *)((char *)&v278 - v51);
  uint64_t v337 = v26;
  uint64_t v54 = *(void (**)(void, void, void))(v26 + 16);
  uint64_t v53 = v26 + 16;
  uint64_t v312 = v54;
  v54(v34, v340, AssociatedTypeWitness);
  uint64_t v313 = v2;
  uint64_t v347 = sub_1006CC0AC();
  uint64_t v344 = v7;
  Swift::String v345 = (void (*)(void, void, void))v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v56 = *(void *)(AssociatedConformanceWitness + 32);
  uint64_t v328 = AssociatedTypeWitness;
  uint64_t v57 = v338;
  uint64_t v58 = sub_10096BA80();
  uint64_t v351 = (uint64_t)v34;
  uint64_t v346 = (void (*)(uint64_t *, void))sub_10096BA90();
  uint64_t v59 = *(void *)(v57 - 8);
  uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  if (v60(v61, 1, v57))
  {
    v346(&v357, 0);
    (*(void (**)(uint64_t, uint64_t))(v337 + 8))(v351, v328);
    ((void (*)(void, void))v347)(&v359, 0);
    (*((void (**)(id *, uint64_t, uint64_t, uint64_t))v348 + 7))(v52, 1, 1, v350);
    uint64_t v62 = v349;
    uint64_t v63 = v326;
    return (*(uint64_t (**)(id *, uint64_t))(v63 + 8))(v52, v62);
  }
  uint64_t v322 = v52;
  Swift::String v305 = (_OWORD *)AssociatedConformanceWitness;
  uint64_t v306 = v56;
  uint64_t v288 = v59;
  uint64_t v290 = v53;
  uint64_t v285 = v58;
  Swift::String v291 = v60;
  Swift::String v292 = (unsigned __int8 *)(v59 + 48);
  uint64_t v352 = (uint64_t)v345;
  uint64_t v353 = v342;
  uint64_t v354 = v344;
  uint64_t v355 = (uint64_t)v343;
  uint64_t v356 = v335;
  uint64_t v352 = type metadata accessor for UserRequest();
  uint64_t v353 = v334;
  uint64_t v354 = v333;
  uint64_t v355 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  uint64_t v64 = swift_getTupleTypeMetadata();
  uint64_t v65 = sub_10096BA80();
  uint64_t v66 = v339;
  sub_10096B9E0();
  v346(&v357, 0);
  uint64_t v67 = v337 + 8;
  uint64_t v68 = v328;
  uint64_t v287 = *(void (**)(uint64_t, uint64_t))(v337 + 8);
  v287(v351, v328);
  ((void (*)(void, void))v347)(&v359, 0);
  id v69 = v348;
  uint64_t v70 = v66;
  uint64_t v71 = v350;
  uint64_t v346 = (void (*)(uint64_t *, void))*((void *)v348 + 6);
  uint64_t v347 = (uint64_t (*)())((char *)v348 + 48);
  int v72 = ((uint64_t (*)(char *, uint64_t, uint64_t))v346)(v70, 1, v350);
  uint64_t v337 = v67;
  uint64_t v284 = v65;
  if (v72 == 1)
  {
    int v73 = (char *)*((void *)v69 + 7);
    uint64_t v74 = v325;
    uint64_t v75 = v325;
    uint64_t v76 = 1;
  }
  else
  {
    uint64_t v77 = *(int *)(v71 + 64);
    uint64_t v78 = v339;
    uint64_t v79 = &v339[v77];
    uint64_t v351 = *(int *)(v71 + 80);
    uint64_t v80 = *((void *)v339 + 1);
    uint64_t v81 = v336;
    *uint64_t v336 = *(void *)v339;
    v81[1] = v80;
    uint64_t v82 = v64;
    uint64_t v83 = (char *)v81 + v77;
    uint64_t v84 = sub_10096B7D0();
    uint64_t v85 = v68;
    uint64_t v86 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32);
    v86(v83, v79, v84);
    uint64_t v87 = swift_allocObject();
    uint64_t v88 = v350;
    *(_OWORD *)(v87 + 16) = *(_OWORD *)&v78[v351];
    uint64_t v89 = *v81;
    uint64_t v90 = v81[1];
    uint64_t v91 = v325;
    Swift::String v92 = &v325[*(int *)(v88 + 64)];
    uint64_t v93 = (uint64_t (**)(uint64_t))&v325[*(int *)(v350 + 80)];
    *(void *)uint64_t v325 = v89;
    *((void *)v91 + 1) = v90;
    uint64_t v94 = v83;
    uint64_t v64 = v82;
    v86(v92, v94, v84);
    uint64_t v68 = v85;
    uint64_t v74 = v91;
    uint64_t v71 = v350;
    *uint64_t v93 = sub_1006FB2C0;
    v93[1] = (uint64_t (*)(uint64_t))v87;
    int v73 = (char *)*((void *)v348 + 7);
    uint64_t v75 = v74;
    uint64_t v76 = 0;
  }
  id v339 = v73;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v73)(v75, v76, 1, v71);
  uint64_t v95 = v340;
  uint64_t v62 = v349;
  uint64_t v63 = v326;
  uint64_t v52 = v322;
  uint64_t v96 = *(void (**)(void, void, void))(v326 + 32);
  uint64_t v97 = v322;
  uint64_t v322 = (id *)(v326 + 32);
  uint64_t v321 = (void (*)(char *, void *, uint64_t))v96;
  v96(v97, v74, v349);
  if (((unsigned int (*)(id *, uint64_t, uint64_t))v346)(v52, 1, v71) == 1) {
    return (*(uint64_t (**)(id *, uint64_t))(v63 + 8))(v52, v62);
  }
  uint64_t v334 = v64;
  unint64_t v99 = (unint64_t)*v52;

  uint64_t v100 = (char *)v52 + *(int *)(v71 + 64);
  uint64_t v101 = (void (**)(void))((char *)v52 + *(int *)(v71 + 80));
  uint64_t v103 = *v101;
  uint64_t v102 = v101[1];
  uint64_t v335 = v103;
  uint64_t v286 = v102;
  uint64_t v104 = sub_10096B7D0();
  uint64_t v325 = *(char **)(v104 - 8);
  uint64_t v105 = (void (*)(void))*((void *)v325 + 1);
  uint64_t v351 = v104;
  uint64_t v316 = v325 + 8;
  uint64_t v315 = (void (*)(void (*)(void), uint64_t))v105;
  v105(v100);
  id v106 = [objc_allocWithZone((Class)FPLoggerScope) init];
  id v107 = (id)fpfs_current_or_default_log();
  uint64_t v108 = v324;
  sub_10096B490();
  uint64_t v109 = v311;
  uint64_t v110 = (void (*)(char *, void (**)(void), uint64_t))v312;
  v312(v311, v95, v68);
  sub_1000CE628(v99);
  sub_1000CE628(v99);
  id v111 = v106;
  uint64_t v112 = sub_10096B470();
  os_log_type_t v113 = sub_10096C5A0();
  LODWORD(v333) = v113;
  BOOL v114 = os_log_type_enabled(v112, v113);
  unint64_t v314 = v99;
  uint64_t v283 = v111;
  if (v114)
  {
    uint64_t v115 = v111;
    uint64_t v116 = swift_slowAlloc();
    uint64_t v117 = (void *)swift_slowAlloc();
    uint64_t v303 = v117;
    uint64_t v304 = (void (*)(void, void, void))swift_slowAlloc();
    uint64_t v359 = v304;
    *(_DWORD *)uint64_t v116 = 138412802;
    uint64_t v118 = v109;
    id v119 = [v115 enter];
    os_log_t v294 = v112;
    uint64_t v120 = v68;
    id v121 = v119;
    uint64_t v357 = (uint64_t)v119;
    unint64_t v293 = (unsigned __int8 *)&v358;
    sub_10096C8C0();
    void *v117 = v121;

    *(_WORD *)(v116 + 12) = 2080;
    uint64_t v122 = v310;
    v110(v310, v118, v120);
    uint64_t v123 = (void (*)(char *, uint64_t))v287;
    v287((uint64_t)v118, v120);
    uint64_t v124 = sub_10096D220();
    unint64_t v126 = v125;
    v123(v122, v120);
    uint64_t v357 = sub_100719D44(v124, v126, (uint64_t *)&v359);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v116 + 22) = 2080;
    unint64_t v127 = v314;
    unint64_t v128 = sub_1006A9894(v314, (uint64_t)v345, v342, v344, (uint64_t)v343);
    unint64_t v130 = v129;
    sub_1000B6C28(v127);
    uint64_t v357 = sub_100719D44(v128, v130, (uint64_t *)&v359);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_1000B6C28(v127);
    os_log_t v131 = v294;
    _os_log_impl((void *)&_mh_execute_header, v294, (os_log_type_t)v333, "%@ 🛑  cancelling request for %s: %s", (uint8_t *)v116, 0x20u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v319[1](v324, v320);
  }
  else
  {
    sub_1000B6C28(v99);
    v287((uint64_t)v109, v68);

    sub_1000B6C28(v99);
    v319[1](v108, v320);
  }
  uint64_t v132 = v318;
  uint64_t v133 = v313;
  sub_1000DBD10();
  swift_allocError();
  *uint64_t v134 = 0;
  v335();
  swift_errorRelease();
  uint64_t v135 = (char *)v133 + qword_100B0B318;
  swift_beginAccess();
  uint64_t v281 = v135;
  swift_bridgeObjectRetain();
  uint64_t v136 = v323;
  uint64_t v137 = v338;
  sub_10096BAA0();
  swift_bridgeObjectRelease();
  uint64_t v138 = v292;
  unint64_t v139 = v133;
  uint64_t v140 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v291;
  if (v291(v136, 1, v137))
  {
    uint64_t v141 = *(void (**)(char *, uint64_t))(v317 + 8);
    v141(v136, v132);
LABEL_19:
    unint64_t v150 = v314;
    uint64_t v151 = sub_1006A93D4(v314);
    if (v151)
    {
      uint64_t v152 = v151;
      unsigned __int8 v153 = [v151 selectedForMaterialization];

      if ((v153 & 1) == 0) {
        goto LABEL_68;
      }
    }
    uint64_t v138 = v343;
    uint64_t v154 = sub_1006A93D4(v150);
    if (v154)
    {
      uint64_t v155 = v154;
      id v156 = [v154 requestedExtent];

      uint64_t v138 = v343;
      if (v156 == (id)-1)
      {
LABEL_68:
        long long v226 = v283;
        sub_1006EF7CC(v283, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
        swift_release();

        return sub_1000B6C28(v150);
      }
    }
    uint64_t v280 = (void (*)(unsigned __int8 *, uint64_t))v141;
    uint64_t v157 = sub_1006A93D4(v150);
    if (!v157) {
      goto LABEL_105;
    }
    uint64_t v158 = v157;
    uint64_t v159 = (char *)[v157 requestedExtent];

    id v160 = sub_1006A93D4(v150);
    if (!v160)
    {
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      v280(v138, v318);
      goto LABEL_111;
    }
    id v161 = v160;
    [v160 requestedExtent];
    uint64_t v163 = v162;

    unint64_t v293 = (unsigned __int8 *)&v159[v163];
    uint64_t v164 = v350;
    uint64_t v165 = v308;
    if (!__OFADD__(v159, v163))
    {
      swift_bridgeObjectRetain();
      uint64_t v166 = v309;
      uint64_t v167 = v338;
      sub_10096BAA0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v317 + 16))(v165, v166, v318);
      unsigned int v168 = v291(v165, 1, v167);
      Swift::String v169 = (char *)v336;
      if (v168 != 1)
      {
        uint64_t v170 = *(void *)&v165[*(int *)(v167 + 56)];
        uint64_t v171 = *(void (**)(void, void))(v288 + 8);
        v288 += 8;
        swift_bridgeObjectRetain();
        size_t v279 = (void (*)(unsigned __int8 *, uint64_t))v171;
        v171(v165, v167);
        v172._object = &type metadata for ObjectIdentifier;
        v172._uint64_t countAndFlagsBits = v170;
        uint64_t countAndFlagsBits = Filename.init(rawValue:)(v172).rawValue._countAndFlagsBits;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v174 = 0;
        uint64_t v175 = *(void *)(countAndFlagsBits + 64);
        uint64_t v282 = countAndFlagsBits + 64;
        uint64_t v303 = (void *)countAndFlagsBits;
        uint64_t v176 = 1 << *(unsigned char *)(countAndFlagsBits + 32);
        uint64_t v177 = -1;
        if (v176 < 64) {
          uint64_t v177 = ~(-1 << v176);
        }
        unint64_t v178 = v177 & v175;
        os_log_t v294 = (os_log_t)((char *)v348 + 16);
        uint64_t v324 = v325 + 32;
        uint64_t v311 = (void (**)(void))(v325 + 16);
        uint64_t v310 = (char *)v348 + 8;
        int64_t v289 = (unint64_t)(v176 + 63) >> 6;
        int64_t v278 = v289 - 1;
        unint64_t v179 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v339;
        unint64_t v180 = v332;
        uint64_t v323 = (char *)v348 + 56;
        while (1)
        {
          if (v178)
          {
            uint64_t v333 = (v178 - 1) & v178;
            uint64_t v334 = v174;
            unint64_t v181 = __clz(__rbit64(v178)) | (v174 << 6);
            goto LABEL_34;
          }
          int64_t v183 = v174 + 1;
          if (__OFADD__(v174, 1)) {
            goto LABEL_94;
          }
          if (v183 >= v289) {
            break;
          }
          unint64_t v184 = *(void *)(v282 + 8 * v183);
          if (v184) {
            goto LABEL_38;
          }
          int64_t v225 = v174 + 2;
          if (v174 + 2 >= v289)
          {
            uint64_t v333 = 0;
            uint64_t v182 = 1;
LABEL_55:
            uint64_t v334 = v183;
          }
          else
          {
            unint64_t v184 = *(void *)(v282 + 8 * v225);
            if (v184) {
              goto LABEL_53;
            }
            if (v174 + 3 >= v289)
            {
              uint64_t v334 = v174 + 2;
              goto LABEL_40;
            }
            unint64_t v184 = *(void *)(v282 + 8 * (v174 + 3));
            if (v184)
            {
              int64_t v183 = v174 + 3;
              goto LABEL_38;
            }
            int64_t v225 = v174 + 4;
            if (v174 + 4 < v289)
            {
              unint64_t v184 = *(void *)(v282 + 8 * v225);
              if (!v184)
              {
                while (1)
                {
                  int64_t v183 = v225 + 1;
                  if (__OFADD__(v225, 1)) {
                    goto LABEL_102;
                  }
                  if (v183 >= v289)
                  {
                    uint64_t v333 = 0;
                    uint64_t v182 = 1;
                    int64_t v183 = v278;
                    goto LABEL_55;
                  }
                  unint64_t v184 = *(void *)(v282 + 8 * v183);
                  ++v225;
                  if (v184) {
                    goto LABEL_38;
                  }
                }
              }
LABEL_53:
              int64_t v183 = v225;
LABEL_38:
              uint64_t v333 = (v184 - 1) & v184;
              unint64_t v181 = __clz(__rbit64(v184)) + (v183 << 6);
              uint64_t v334 = v183;
LABEL_34:
              (*((void (**)(char *, unint64_t, uint64_t))v348 + 2))(v180, v303[7] + *((void *)v348 + 9) * v181, v164);
              uint64_t v182 = 0;
              goto LABEL_41;
            }
            uint64_t v333 = 0;
            uint64_t v182 = 1;
            uint64_t v334 = v174 + 3;
          }
LABEL_41:
          v179(v180, v182, 1, v164);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v346)(v180, 1, v164) == 1)
          {
            uint64_t v185 = v330;
            v179((char *)v330, 1, 1, v164);
            uint64_t v186 = v349;
            uint64_t v187 = v331;
            uint64_t v188 = v351;
          }
          else
          {
            uint64_t v189 = *(int *)(v164 + 64);
            id v339 = (char *)*(int *)(v164 + 80);
            uint64_t v190 = *((void *)v180 + 1);
            *(void *)Swift::String v169 = *(void *)v180;
            *((void *)v169 + 1) = v190;
            uint64_t v191 = &v169[v189];
            uint64_t v192 = *(void (**)(char *, char *, uint64_t))v324;
            uint64_t v193 = (char *)v179;
            uint64_t v194 = v351;
            (*(void (**)(char *, char *, uint64_t))v324)(&v169[v189], &v180[v189], v351);
            uint64_t v195 = swift_allocObject();
            *(_OWORD *)(v195 + 16) = *(_OWORD *)&v339[(void)v180];
            uint64_t v196 = *(void *)v169;
            uint64_t v197 = *((void *)v169 + 1);
            uint64_t v188 = v194;
            unint64_t v179 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v193;
            uint64_t v185 = v330;
            id v198 = (char *)v330 + *(int *)(v164 + 64);
            uint64_t v199 = (uint64_t (**)(uint64_t))((char *)v330 + *(int *)(v164 + 80));
            void *v330 = v196;
            v185[1] = v197;
            v192(v198, v191, v188);
            *uint64_t v199 = sub_1006FB2C0;
            v199[1] = (uint64_t (*)(uint64_t))v195;
            v179((char *)v185, 0, 1, v164);
            uint64_t v186 = v349;
            uint64_t v187 = v331;
          }
          char v200 = v329;
          v321(v329, (char *)v185, v186);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v346)(v200, 1, v164) == 1) {
            goto LABEL_91;
          }
          id v339 = (char *)v179;
          uint64_t v201 = *(int *)(v164 + 64);
          uint64_t v202 = v341;
          uint64_t v203 = (char *)&v341[v201];
          uint64_t v204 = *(int *)(v164 + 80);
          uint64_t v205 = &v341[v204];
          uint64_t v206 = *(char **)v200;
          uint64_t v207 = (char *)*((void *)v200 + 1);
          uint64_t v208 = &v200[v201];
          uint64_t v209 = v188;
          uint64_t v211 = *(void *)&v200[v204];
          uint64_t v210 = *(void *)&v200[v204 + 8];
          *(void *)Swift::String v341 = v206;
          *((void *)v202 + 1) = v207;
          uint64_t v304 = *(void (**)(void, void, void))v324;
          v304(v203, v208, v209);
          *(void *)uint64_t v205 = v211;
          *((void *)v205 + 1) = v210;
          Swift::String v305 = v205;
          uint64_t v212 = (void (*)(void))((char *)v187 + *(int *)(v164 + 64));
          id v213 = (void *)((char *)v187 + *(int *)(v164 + 80));
          void *v187 = v206;
          v187[1] = v207;
          uint64_t v325 = v207;
          id v214 = *v311;
          uint64_t v335 = v212;
          uint64_t v308 = v203;
          uint64_t v307 = v214;
          v214();
          uint64_t v306 = v211;
          *id v213 = v211;
          v213[1] = v210;
          uint64_t v215 = v342;
          uint64_t v216 = sub_1006A93D4((unint64_t)v206);
          if (v216)
          {
            uint64_t v217 = v216;
            uint64_t v319 = v325;
            uint64_t v320 = v210;
            swift_retain();
            uint64_t v325 = v206;
            sub_1000CE628((unint64_t)v206);
            uint64_t v138 = (unsigned __int8 *)[v217 requestedExtent];
            uint64_t v219 = v218;

            v315(v335, v351);
            uint64_t v220 = sub_1006A93D4(v314);
            if (!v220) {
              goto LABEL_104;
            }
            uint64_t v221 = v220;
            uint64_t v222 = (unsigned __int8 *)[v220 requestedExtent];

            BOOL v223 = (uint64_t)v138 < (uint64_t)v222;
            uint64_t v164 = v350;
            uint64_t v224 = v351;
            unint64_t v179 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v339;
            if (v223)
            {
LABEL_69:
              uint64_t v359 = v345;
              uint64_t v360 = v215;
              uint64_t v361 = v344;
              uint64_t v362 = (uint64_t)v343;
              type metadata accessor for ConcreteJobResult();
              uint64_t v227 = sub_100591720();
              swift_beginAccess();
              uint64_t v138 = (unsigned __int8 *)v299;
              sub_10096B9E0();
              swift_endAccess();
              uint64_t v228 = v338;
              if (v291(v138, 1, v338) == 1) {
                goto LABEL_108;
              }
              int v229 = *v138;
              v279(v138, v228);
              uint64_t v138 = (unsigned __int8 *)v313;
              uint64_t v230 = (void (*)(char *, uint64_t, uint64_t))v312;
              id v231 = v319;
              if (v229) {
                goto LABEL_111;
              }
              uint64_t v232 = v327;
              sub_1008B25B8(v340, v313, v227);
              if (v232)
              {

                swift_release();
                swift_release();
                sub_1000B6C28((unint64_t)v325);
                (*(void (**)(unsigned __int8 *, uint64_t))v310)(v341, v164);
                swift_release();
                v280((unsigned __int8 *)v309, v318);
                goto LABEL_92;
              }
              id v233 = v300;
              sub_10096B0D0();
              sub_10096B080();
              double v235 = v234;
              (*(void (**)(char *, uint64_t))(v301 + 8))(v233, v302);
              double v236 = v235 * 1000000000.0;
              if ((~COERCE__INT64(v235 * 1000000000.0) & 0x7FF0000000000000) != 0)
              {
                if (v236 <= -9.22337204e18) {
                  goto LABEL_100;
                }
                if (v236 >= 9.22337204e18) {
                  goto LABEL_101;
                }
                sub_10059C6F4(v227, (uint64_t)v236);
                uint64_t v327 = 0;
                uint64_t v240 = v336;
                long long v241 = (char *)v336 + *(int *)(v164 + 64);
                long long v242 = (uint64_t *)((char *)v336 + *(int *)(v164 + 80));
                *uint64_t v336 = (uint64_t)v325;
                v240[1] = (uint64_t)v231;
                ((void (*)(void (*)(void), char *, uint64_t))v307)((void (*)(void))v241, v308, v224);
                uint64_t v243 = v320;
                void *v242 = v306;
                v242[1] = v243;

                v315((void (*)(void))v241, v224);
                uint64_t v244 = v297;
                v230(v297, v340, v328);
                Swift::String v348 = sub_1006CC0AC();
                uint64_t v245 = (void (*)(uint64_t *, void))sub_10096BA90();
                if (v291(v246, 1, v338))
                {
                  v245(&v357, 0);
                  v287((uint64_t)v244, v328);
                  ((void (*)(void, void))v348)(&v359, 0);
                  uint64_t v247 = v298;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v339)(v298, 1, 1, v164);
                  uint64_t v248 = v349;
                }
                else
                {
                  uint64_t v356 = (void (*)(void))v319;
                  uint64_t v249 = (uint64_t *)v295;
                  sub_10096B9E0();
                  v245(&v357, 0);
                  v287((uint64_t)v244, v328);
                  ((void (*)(void, void))v348)(&v359, 0);
                  uint64_t v250 = 1;
                  int v251 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v346)(v249, 1, v164);
                  uint64_t v252 = v164;
                  uint64_t v253 = (uint64_t *)v296;
                  if (v251 != 1)
                  {
                    uint64_t v254 = *(int *)(v252 + 64);
                    uint64_t v347 = (uint64_t (*)())*(int *)(v252 + 80);
                    uint64_t v255 = v249[1];
                    uint64_t v256 = v336;
                    *uint64_t v336 = *v249;
                    v256[1] = v255;
                    Swift::String v348 = (uint64_t (*)())((char *)v256 + v254);
                    uint64_t v257 = (void (*)(char *, uint64_t (*)(), uint64_t))v304;
                    ((void (*)(void))v304)();
                    uint64_t v258 = swift_allocObject();
                    uint64_t v259 = v348;
                    *(_OWORD *)(v258 + 16) = *(_OWORD *)((char *)v347 + (void)v249);
                    uint64_t v260 = v256[1];
                    long long v261 = (char *)v253 + *(int *)(v252 + 64);
                    uint64_t v262 = (uint64_t (**)(uint64_t))((char *)v253 + *(int *)(v252 + 80));
                    *uint64_t v253 = *v256;
                    v253[1] = v260;
                    v257(v261, v259, v224);
                    uint64_t v250 = 0;
                    *uint64_t v262 = sub_1006FB2C0;
                    v262[1] = (uint64_t (*)(uint64_t))v258;
                  }
                  ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v339)(v253, v250, 1, v252);
                  uint64_t v247 = v298;
                  uint64_t v248 = v349;
                  v321(v298, v253, v349);
                  uint64_t v164 = v252;
                }
                unint64_t v263 = (unint64_t)v325;
                uint64_t v264 = v320;
                (*(void (**)(char *, uint64_t))(v326 + 8))(v247, v248);
                uint64_t v265 = v308;
                uint64_t v266 = (void *)sub_1000B5C20(v340, v263, v308, v306, v264);
                swift_release();
                sub_1000B6C28(v263);
                uint64_t v267 = *(int *)(v164 + 64);
                uint64_t v268 = v164;
                uint64_t v269 = v336;
                uint64_t v270 = (char *)v336 + v267;
                uint64_t v271 = *(int *)(v268 + 80);
                uint64_t v272 = v341;
                uint64_t v138 = (unsigned __int8 *)*((void *)v341 + 1);
                *uint64_t v336 = *(void *)v341;
                v269[1] = (uint64_t)v138;
                uint64_t v273 = v265;
                uint64_t v274 = v351;
                ((void (*)(char *, char *, uint64_t))v307)((char *)v269 + v267, v273, v351);
                *(_OWORD *)((char *)v269 + v271) = *v305;
                uint64_t v275 = v138;
                v315((void (*)(void))v270, v274);
                unint64_t v276 = (char *)[v275 totalUnitCount];
                if (!__OFADD__(v276, 1))
                {
                  [v275 setTotalUnitCount:v276 + 1];
                  [v275 addChild:v266 withPendingUnitCount:1];
                  swift_release();

                  (*(void (**)(unsigned __int8 *, uint64_t))v310)(v272, v268);
LABEL_91:
                  swift_release();
                  v280((unsigned __int8 *)v309, v318);
                  goto LABEL_92;
                }
LABEL_103:
                __break(1u);
LABEL_104:
                __break(1u);
LABEL_105:
                __break(1u);
                goto LABEL_106;
              }
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
              goto LABEL_103;
            }
            if (__OFADD__(v138, v219))
            {
              __break(1u);
LABEL_94:
              __break(1u);
              goto LABEL_95;
            }
            if ((uint64_t)v293 < (uint64_t)&v138[v219]) {
              goto LABEL_69;
            }
            (*(void (**)(unsigned __int8 *, uint64_t))v310)(v341, v350);
            swift_release();
            sub_1000B6C28((unint64_t)v325);

            Swift::String v169 = (char *)v336;
          }
          else
          {
            uint64_t v138 = v202;
            v315(v335, v351);
            (*(void (**)(unsigned __int8 *, uint64_t))v310)(v202, v164);
            Swift::String v169 = (char *)v336;
            unint64_t v179 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v339;
          }
          unint64_t v180 = v332;
          uint64_t v174 = v334;
          unint64_t v178 = v333;
        }
        uint64_t v334 = v174;
LABEL_40:
        uint64_t v333 = 0;
        uint64_t v182 = 1;
        goto LABEL_41;
      }
      goto LABEL_107;
    }
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v142 = *(void (**)(void, void))(v317 + 8);
  swift_bridgeObjectRetain();
  uint64_t v280 = (void (*)(unsigned __int8 *, uint64_t))v142;
  v142(v136, v132);
  LOBYTE(v142) = sub_10096BA50();
  swift_bridgeObjectRelease();
  if ((v142 & 1) == 0)
  {
    uint64_t v141 = (void (*)(char *, uint64_t))v280;
    goto LABEL_19;
  }
  uint64_t v359 = v345;
  uint64_t v360 = v342;
  uint64_t v361 = v344;
  uint64_t v362 = (uint64_t)v343;
  type metadata accessor for ConcreteJobResult();
  uint64_t v143 = sub_100591720();
  swift_beginAccess();
  uint64_t v144 = (unsigned __int8 *)v307;
  sub_10096B9E0();
  swift_endAccess();
  if (v140(v144, 1, v137) == 1)
  {
    v280(v144, v318);
LABEL_111:
    uint64_t result = sub_10096CE20();
    __break(1u);
    return result;
  }
  int v145 = *v144;
  (*(void (**)(unsigned __int8 *, uint64_t))(v288 + 8))(v144, v137);
  uint64_t v146 = v302;
  uint64_t v147 = v301;
  uint64_t v148 = v300;
  if (!v145)
  {
    uint64_t v149 = v327;
    sub_1008B25B8(v340, v139, v143);
LABEL_78:
    if (v149) {
      goto LABEL_83;
    }
    goto LABEL_79;
  }
  if (v145 == 1)
  {
    uint64_t v149 = v327;
    sub_1008B3ADC(v340, v139, v143);
    goto LABEL_78;
  }
LABEL_79:
  sub_10096B0D0();
  sub_10096B080();
  double v238 = v237;
  (*(void (**)(char *, uint64_t))(v147 + 8))(v148, v146);
  double v239 = v238 * 1000000000.0;
  if ((~COERCE__INT64(v238 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  if (v239 <= -9.22337204e18)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  if (v239 >= 9.22337204e18)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  sub_10059C6F4(v143, (uint64_t)v239);
LABEL_83:
  swift_release();
LABEL_92:
  uint64_t v277 = v283;
  sub_1006EF7CC(v283, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  swift_release();

  return sub_1000B6C28(v314);
}

uint64_t sub_1006BDE9C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v24 = a6;
  uint64_t v23 = a5;
  uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10096B760();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10096B7D0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  qos_class_self();
  sub_10096B740();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchQoS.QoSClass.utility(_:), v12);
    sub_10002B770((uint64_t)v11, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  }
  sub_10096B7B0();
  uint64_t v20 = sub_1006ED17C(0, a1, a2, a3, v19, v23, v24);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return v20;
}

void sub_1006BE104(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_1006DB088(v8, a2, a3, a4, a1, a5, a6, a7, a8);
}

void sub_1006BE1AC(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v74 = a6;
  uint64_t v75 = a7;
  uint64_t v77 = a5;
  uint64_t v11 = *v7;
  id v67 = a4;
  uint64_t v68 = v11;
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v12 - 8);
  uint64_t v78 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10096B3D0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v63 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v23 = type metadata accessor for Signpost(0);
  uint64_t v64 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v65 = v25;
  uint64_t v66 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v76 = (uint64_t)&v62 - v26;
  int v72 = v7;
  id v69 = (id)fpfs_adopt_log();
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v22, 1, 1, v14);
  uint64_t v79 = 0x657220636E797361;
  unint64_t v80 = 0xEB00000000206461;
  uint64_t v70 = a1;
  uint64_t v71 = a2;
  int v73 = a3;
  v81._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v81);
  swift_bridgeObjectRelease();
  unint64_t v28 = v80;
  uint64_t v62 = v79;
  sub_10002B70C((uint64_t)v22, (uint64_t)v20, &qword_100AD0830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
  {
    id v29 = v27;
    uint64_t v30 = v63;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v20, &qword_100AD0830);
  }
  else
  {
    uint64_t v30 = v63;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v63, v20, v14);
  }
  uint64_t v31 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v76, v30, v14);
  *(void *)(v31 + *(int *)(v23 + 20)) = v27;
  uint64_t v32 = v31 + *(int *)(v23 + 24);
  *(void *)uint64_t v32 = "DB queue wait";
  *(void *)(v32 + 8) = 13;
  *(unsigned char *)(v32 + 16) = 2;
  id v33 = v27;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_100973BB0;
  *(void *)(v34 + 56) = &type metadata for String;
  *(void *)(v34 + 64) = sub_1000240A4();
  *(void *)(v34 + 32) = v62;
  *(void *)(v34 + 40) = v28;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v14);
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v22, &qword_100AD0830);
  uint64_t v35 = v31;
  uint64_t v36 = v66;
  sub_1006F90F0(v31, v66, type metadata accessor for Signpost);
  uint64_t v37 = v65;
  uint64_t v38 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v39 = (v38 + 16) & ~v38;
  unint64_t v40 = (v65 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  sub_1006F9158(v36, v41 + v39, type metadata accessor for Signpost);
  uint64_t v42 = (void *)(v41 + v40);
  uint64_t v43 = v77;
  *uint64_t v42 = v67;
  v42[1] = v43;
  uint64_t v44 = v72;
  uint64_t v64 = v72[25];
  id v67 = (id)v72[8];
  uint64_t v45 = sub_10096B7D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v78, 1, 1, v45);
  sub_1006F90F0(v35, v36, type metadata accessor for Signpost);
  uint64_t v46 = (v38 + 48) & ~v38;
  unint64_t v47 = (v46 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (v46 + v37 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v68;
  *(void *)(v50 + 16) = *(void *)(v68 + 576);
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v51 + 584);
  *(void *)(v50 + 40) = *(void *)(v51 + 600);
  sub_1006F9158(v36, v50 + v46, type metadata accessor for Signpost);
  unint64_t v52 = v50 + v47;
  uint64_t v53 = v71;
  *(void *)unint64_t v52 = v70;
  *(void *)(v52 + 8) = v53;
  *(unsigned char *)(v52 + 16) = v73;
  uint64_t v54 = (void *)(v50 + v48);
  uint64_t v55 = v75;
  *uint64_t v54 = v74;
  v54[1] = v55;
  *(void *)(v50 + v49) = v44;
  uint64_t v56 = (void *)(v50 + ((v49 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v56 = sub_1006F72D0;
  v56[1] = v41;
  uint64_t v57 = (void *)swift_allocObject();
  v57[2] = sub_1006F72D0;
  v57[3] = v41;
  v57[4] = v64;
  swift_retain_n();
  id v58 = v67;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v59 = v78;
  sub_1003946CC(v58, v78, (void (*)())sub_100243CEC, v57, (uint64_t)sub_1006F7408, v50);
  swift_release();

  swift_release();
  swift_release();
  sub_10002B770(v59, (uint64_t *)&unk_100ACF600);
  sub_1006F7C48(v76, type metadata accessor for Signpost);
  uint64_t v60 = v69;
  id v61 = (id)fpfs_adopt_log();
}

uint64_t sub_1006BE92C()
{
  sub_10002B7CC((uint64_t *)&unk_100AD0D38);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100973BA0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100973BA0;
  *(void *)(v2 + 32) = 0x756F436873756C66;
  *(void *)(v2 + 40) = 0xEA0000000000746ELL;
  uint64_t v3 = *v0;
  *(void *)(v2 + 88) = &type metadata for UInt64;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = v3;
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACECD0);
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 32) = v2;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100973BA0;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 32) = 0x7461447465736572;
  *(void *)(v5 + 40) = 0xE900000000000065;
  uint64_t v6 = (char *)v0 + *(int *)(type metadata accessor for DBCounters() + 20);
  uint64_t v7 = sub_10096B0E0();
  *(void *)(v5 + 88) = v7;
  uint64_t v8 = sub_10009C958((uint64_t *)(v5 + 64));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v8, v6, v7);
  *(void *)(v1 + 88) = v4;
  *(void *)(v1 + 64) = v5;
  return v1;
}

uint64_t sub_1006BEAA0(int a1)
{
  uint64_t v3 = v1;
  int v43 = a1;
  uint64_t v4 = *v1;
  uint64_t v47 = sub_10096B480();
  uint64_t v44 = *(void *)(v47 - 8);
  uint64_t v5 = __chkstk_darwin(v47);
  uint64_t v41 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v42 = (char *)&v41 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v41 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = sub_10096B830();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char **)((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = (void *)v3[8];
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  LOBYTE(v18) = sub_10096B860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    long long v21 = *(_OWORD *)(v4 + 592);
    long long v45 = *(_OWORD *)(v4 + 576);
    long long v46 = v21;
    type metadata accessor for FSOrFPJob();
    char v22 = sub_10096BA50();
    uint64_t v23 = swift_bridgeObjectRelease();
    if (v22)
    {
      uint64_t v24 = v3[3];
      if ((*(uint64_t (**)(uint64_t))(*(void *)v24 + 192))(v23))
      {
        id v25 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v26 = sub_10096B470();
        os_log_type_t v27 = sub_10096C5A0();
        if (!os_log_type_enabled(v26, v27))
        {
          uint64_t v13 = v11;
          goto LABEL_14;
        }
        unint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "🚀  scheduler not stable: some throttles are still active", v28, 2u);
        uint64_t v13 = v11;
        goto LABEL_10;
      }
      char v35 = (*(uint64_t (**)(void))(*(void *)v24 + 184))(v43 & 1);
      if (v2) {
        return v36 & 1;
      }
      if (v35)
      {
        id v37 = (id)fpfs_current_or_default_log();
        uint64_t v13 = v42;
        sub_10096B490();
        uint64_t v26 = sub_10096B470();
        os_log_type_t v30 = sub_10096C5A0();
        if (!os_log_type_enabled(v26, v30)) {
          goto LABEL_14;
        }
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        uint64_t v32 = "🚀  scheduler not stable: some jobs are still pending execution";
        goto LABEL_8;
      }
      char v38 = (*(uint64_t (**)(void))(*(void *)v3[2] + 304))();
      if ((v38 & 1) == 0)
      {
        char v36 = 1;
        return v36 & 1;
      }
      id v39 = (id)fpfs_current_or_default_log();
      uint64_t v13 = v41;
      sub_10096B490();
      uint64_t v26 = sub_10096B470();
      os_log_type_t v40 = sub_10096C5A0();
      if (os_log_type_enabled(v26, v40))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        uint64_t v32 = "🚀  scheduler not stable: some reconciliations are pending scheduling";
        id v33 = v26;
        os_log_type_t v34 = v40;
        goto LABEL_9;
      }
    }
    else
    {
      id v29 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      uint64_t v26 = sub_10096B470();
      os_log_type_t v30 = sub_10096C5A0();
      if (os_log_type_enabled(v26, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        uint64_t v32 = "🚀  scheduler not stable: jobs are running";
LABEL_8:
        id v33 = v26;
        os_log_type_t v34 = v30;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v33, v34, v32, v31, 2u);
LABEL_10:
        swift_slowDealloc();
      }
    }
LABEL_14:

    (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v47);
    char v36 = 0;
    return v36 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006BEFE8(char a1)
{
  sub_1006F2FD8(a1);

  return swift_retain();
}

uint64_t sub_1006BF010()
{
  sub_10096CBD0(26);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0x6144746573657220;
  v2._object = (void *)0xEB000000003D6574;
  sub_10096BDC0(v2);
  type metadata accessor for DBCounters();
  v3._uint64_t countAndFlagsBits = sub_10096AFE0();
  sub_10096BDC0(v3);
  swift_bridgeObjectRelease();
  return 0x756F436873756C66;
}

void sub_1006BF104()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_10096B480();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v83 = v3;
  uint64_t v84 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  Swift::String v81 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v82 = ((char *)v74 - v8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v74 - v9;
  uint64_t v11 = sub_10096B830();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (void *)((char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v2 + 64);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  LOBYTE(v15) = sub_10096B860();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if ((*(unsigned char *)(v2 + 112) & 0x40) == 0)
  {
    if ((fp_task_tracker_is_cancelled(*(void **)(*(void *)(v2 + 200) + 16)) & 1) != 0 || *(unsigned char *)(v2 + 184) == 1)
    {
      sub_100394C70();
      swift_allocError();
      swift_willThrow();
      return;
    }
    uint64_t v17 = *(void **)(v2 + qword_100B0B360);
    uint64_t v18 = (uint8_t *)type metadata accessor for FileTreeChangeAggregator();
    uint64_t v78 = type metadata accessor for FileTreeChangeAggregator();
    uint64_t v79 = v18;
    swift_getTupleTypeMetadata2();
    sub_10026BFF4(v17, (void (*)(void))sub_1006F37FC);
    uint64_t v19 = v1;
    long long v97 = v85;
    long long v98 = v86;
    long long v99 = v87;
    long long v100 = v88;
    long long v93 = v89;
    long long v94 = v90;
    long long v95 = v91;
    long long v96 = v92;
    id v20 = [objc_allocWithZone((Class)FPLoggerScope) init];
    id v21 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    unint64_t v80 = v20;
    char v22 = sub_10096B470();
    os_log_type_t v23 = sub_10096C5A0();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      LODWORD(v77) = v24;
      id v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v76 = v25;
      *(_DWORD *)id v25 = 138412290;
      uint64_t v19 = v1;
      uint64_t v75 = v25 + 4;
      os_log_type_t v27 = v80;
      id v28 = [v80 enter];
      *(void *)&long long v85 = v28;
      sub_10096C8C0();
      *uint64_t v26 = v28;

      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v77, "%@ 👁  processing ingestion", v76, 0xCu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      char v22 = v80;
    }
    uint64_t v29 = v83;
    uint64_t v30 = v84;

    id v33 = *(void (**)(void, void))(v30 + 8);
    uint64_t v31 = v30 + 8;
    uint64_t v32 = v33;
    v33(v10, v29);
    if (!sub_1006D09C0())
    {
      uint64_t v77 = v32;
      id v34 = [objc_allocWithZone((Class)FPLoggerScope) init];
      id v35 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      char v36 = (uint8_t *)v34;
      id v37 = sub_10096B470();
      os_log_type_t v38 = sub_10096C590();
      if (os_log_type_enabled(v37, v38))
      {
        id v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v41 = v36;
        uint64_t v42 = (void *)v40;
        uint64_t v84 = v31;
        *(_DWORD *)id v39 = 138412290;
        v74[1] = v39 + 4;
        uint64_t v75 = v39;
        int v43 = v41;
        uint64_t v76 = v41;
        id v44 = [(uint8_t *)v41 enter];
        *(void *)&long long v85 = v44;
        uint64_t v31 = v84;
        sub_10096C8C0();
        *uint64_t v42 = v44;

        _os_log_impl((void *)&_mh_execute_header, v37, v38, "%@ 👁  processing FS tree changes", v75, 0xCu);
        sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v29 = v83;
        swift_slowDealloc();
        char v36 = v76;
      }
      else
      {

        id v37 = v36;
      }

      uint64_t v32 = v77;
      v77(v82, v29);
      sub_1006D33C0((void *)v2, (uint64_t)v79);
      if (v19)
      {
        sub_1004A6230((uint64_t)&v93);
        sub_1004A6230((uint64_t)&v97);
        sub_1006EF7CC(v36, (uint64_t (*)(void))&static os_log_type_t.info.getter);

LABEL_38:
        int v73 = v80;
        sub_1006EF7CC(v80, (uint64_t (*)(void))&static os_log_type_t.debug.getter);

        return;
      }
      sub_1006EF7CC(v36, (uint64_t (*)(void))&static os_log_type_t.info.getter);
    }
    if (!sub_1006D09C0())
    {
      id v45 = [objc_allocWithZone((Class)FPLoggerScope) init];
      id v46 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      uint64_t v82 = v45;
      uint64_t v47 = sub_10096B470();
      os_log_type_t v48 = sub_10096C590();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v77 = v32;
        uint64_t v50 = (uint8_t *)v49;
        uint64_t v51 = (void *)swift_slowAlloc();
        uint64_t v84 = v31;
        uint64_t v79 = v50;
        *(_DWORD *)uint64_t v50 = 138412290;
        uint64_t v76 = v50 + 4;
        unint64_t v52 = v82;
        id v53 = [v82 enter];
        *(void *)&long long v85 = v53;
        sub_10096C8C0();
        *uint64_t v51 = v53;
        uint64_t v29 = v83;

        _os_log_impl((void *)&_mh_execute_header, v47, v48, "%@ 👁  processing FP tree changes", v79, 0xCu);
        sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v32 = v77;
        swift_slowDealloc();
      }
      else
      {

        unint64_t v52 = v82;
        uint64_t v47 = v82;
      }

      v32(v81, v29);
      uint64_t v54 = sub_1006CBFF8();
      sub_1006D33C0(v54, v78);
      if (v19)
      {
        sub_1004A6230((uint64_t)&v93);
        sub_1004A6230((uint64_t)&v97);
        swift_release();
        sub_1006EF7CC(v52, (uint64_t (*)(void))&static os_log_type_t.info.getter);

        goto LABEL_38;
      }
      swift_release();
      sub_1006EF7CC(v52, (uint64_t (*)(void))&static os_log_type_t.info.getter);
    }
    if (*(unsigned char *)(*(void *)(v2 + 192) + 48) == 1)
    {
      uint64_t v55 = v19;
      uint64_t v56 = swift_allocObject();
      long long v57 = v98;
      *(_OWORD *)(v56 + 16) = v97;
      *(_OWORD *)(v56 + 32) = v57;
      long long v58 = v100;
      *(_OWORD *)(v56 + 48) = v99;
      *(_OWORD *)(v56 + 64) = v58;
      *(void *)(v56 + 80) = v2;
      uint64_t v59 = *(void (**)(const char *, uint64_t, uint64_t, void, uint64_t, libfssync::Filename (__swiftcall *)(Swift::String), void, void (*)(), uint64_t))(*(void *)v2 + 424);
      swift_retain();
      v59("processPendingIngestion()", 25, 2, 0, 1, Filename.init(rawValue:), 0, sub_1006F3840, v56);
      swift_release();
LABEL_31:
      if (*(unsigned char *)(*(void *)(v2 + 192) + 49) == 1)
      {
        uint64_t v64 = swift_allocObject();
        long long v65 = v94;
        *(_OWORD *)(v64 + 16) = v93;
        *(_OWORD *)(v64 + 32) = v65;
        long long v66 = v96;
        *(_OWORD *)(v64 + 48) = v95;
        *(_OWORD *)(v64 + 64) = v66;
        *(void *)(v64 + 80) = v2;
        id v67 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, libfssync::Filename (__swiftcall *)(Swift::String), void, void (*)(), uint64_t))(*(void *)v2 + 424);
        swift_retain();
        v67("processPendingIngestion()", 25, 2, 1, 1, Filename.init(rawValue:), 0, sub_1006F381C, v64);
        swift_release();
        goto LABEL_38;
      }
      uint64_t v68 = *((void *)&v96 + 1);
      uint64_t v102 = *((void *)&v96 + 1);
      swift_bridgeObjectRetain();
      sub_1004A6230((uint64_t)&v93);
      uint64_t v69 = *(void *)(v68 + 16);
      uint64_t v70 = v55;
      if (!v69)
      {
LABEL_37:
        sub_100130294((uint64_t)&v102);
        goto LABEL_38;
      }
      uint64_t v71 = (_OWORD *)(v68 + 32);
      while (1)
      {
        uint64_t v72 = swift_allocObject();
        *(_OWORD *)(v72 + 16) = *v71;
        swift_retain();
        (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v2 + 2368))(sub_1006FB2C0, v72);
        if (v70) {
          goto LABEL_40;
        }
        swift_release();
        ++v71;
        if (!--v69) {
          goto LABEL_37;
        }
      }
    }
    uint64_t v60 = *((void *)&v100 + 1);
    uint64_t v101 = *((void *)&v100 + 1);
    swift_bridgeObjectRetain();
    sub_1004A6230((uint64_t)&v97);
    uint64_t v61 = *(void *)(v60 + 16);
    if (!v61)
    {
LABEL_30:
      uint64_t v55 = v19;
      sub_100130294((uint64_t)&v101);
      goto LABEL_31;
    }
    uint64_t v62 = (_OWORD *)(v60 + 32);
    while (1)
    {
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = *v62;
      swift_retain();
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v2 + 2368))(sub_1006FB2C0, v63);
      if (v19) {
        break;
      }
      swift_release();
      ++v62;
      if (!--v61) {
        goto LABEL_30;
      }
    }
LABEL_40:
    __break(1u);
  }
}

void sub_1006BFD34(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a5;
  uint64_t v8 = v7;
  uint64_t v56 = a4;
  LODWORD(v54) = a3;
  unint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v51 = a7;
  uint64_t v60 = a6;
  uint64_t v9 = sub_10096C890();
  __chkstk_darwin(v9 - 8);
  uint64_t v59 = (char *)&v49 - v10;
  uint64_t v11 = sub_10096B3D0();
  uint64_t v55 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v62 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  id v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v19);
  uint64_t v61 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10096B830();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  int v24 = (uint64_t *)((char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v65 = (id)fpfs_adopt_log();
  id v25 = *(void **)(v8 + 64);
  *int v24 = v25;
  (*(void (**)(void *, void, uint64_t))(v22 + 104))(v24, enum case for DispatchPredicate.onQueue(_:), v21);
  id v26 = v25;
  LOBYTE(v25) = sub_10096B860();
  (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  if ((v25 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_8;
  }
  if ((fp_task_tracker_is_cancelled(*(void **)(*(void *)(v8 + 200) + 16)) & 1) != 0 || *(unsigned char *)(v8 + 184) == 1)
  {
    sub_100394C70();
    swift_allocError();
    swift_willThrow();
LABEL_5:
    os_log_type_t v27 = v65;
    id v28 = (void *)fpfs_adopt_log();
LABEL_6:
    id v29 = v28;

    return;
  }
  if (qword_100ACC1C8 != -1) {
    goto LABEL_18;
  }
LABEL_8:
  uint64_t v30 = (void *)qword_100B0B648;
  uint64_t v31 = v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v18, 1, 1, v11);
  uint64_t v63 = 0x63746162206E7572;
  unint64_t v64 = 0xEA00000000002068;
  v66._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v66);
  swift_bridgeObjectRelease();
  unint64_t v32 = v64;
  uint64_t v53 = v63;
  sub_10002B70C((uint64_t)v18, (uint64_t)v16, &qword_100AD0830);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v16, 1, v11);
  unint64_t v54 = v32;
  if (v33 == 1)
  {
    id v34 = v30;
    id v35 = v62;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v16, &qword_100AD0830);
  }
  else
  {
    id v35 = v62;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v62, v16, v11);
  }
  char v36 = v61;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v61, v35, v11);
  uint64_t v50 = *(int *)(v19 + 20);
  *(void *)&v36[v50] = v30;
  id v37 = &v36[*(int *)(v19 + 24)];
  *(void *)id v37 = "DB queue";
  *((void *)v37 + 1) = 8;
  unint64_t v52 = v37;
  v37[16] = 2;
  id v38 = v30;
  unint64_t v39 = v54;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_100973BB0;
  *(void *)(v40 + 56) = &type metadata for String;
  *(void *)(v40 + 64) = sub_1000240A4();
  *(void *)(v40 + 32) = v53;
  *(void *)(v40 + 40) = v39;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v62, v11);
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_10002B770((uint64_t)v18, &qword_100AD0830);
  __chkstk_darwin(v41);
  int v43 = v59;
  uint64_t v42 = v60;
  uint64_t v44 = v58;
  (*(void (**)(uint64_t (*)()))(*(void *)v8 + 2376))(sub_1006F7944);
  if (v44)
  {
    uint64_t v63 = v44;
    swift_errorRetain();
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_100394C70();
      swift_allocError();
      swift_willThrow();
      swift_errorRelease();
      sub_10096C760();
      uint64_t v45 = (uint64_t)v61;
      sub_10096B3A0();
      sub_1006F7C48(v45, type metadata accessor for Signpost);
    }
    else
    {
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t, const char *, uint64_t, uint64_t))(*(void *)v8 + 464))(v44, 1, "runBatch(function:updateBlock:)", 31, 2);
      swift_errorRelease();
      sub_10096C760();
      uint64_t v48 = (uint64_t)v61;
      sub_10096B3A0();
      sub_1006F7C48(v48, type metadata accessor for Signpost);
    }
    goto LABEL_5;
  }
  uint64_t v46 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v43, 1, v42) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v51, v43, v42);
    sub_10096C760();
    uint64_t v47 = (uint64_t)v61;
    sub_10096B3A0();
    sub_1006F7C48(v47, type metadata accessor for Signpost);
    os_log_type_t v27 = v65;
    id v28 = (void *)fpfs_adopt_log();
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1006C05B4()
{
  uint64_t v1 = sub_10096B3D0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v14[-v9];
  uint64_t result = fp_task_tracker_is_cancelled(*(void **)(*(void *)(v0 + 200) + 16));
  if ((result & 1) == 0 && (*(unsigned char *)(v0 + 184) & 1) == 0)
  {
    if (qword_100ACC1C8 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_100B0B648;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
    sub_10002B70C((uint64_t)v10, (uint64_t)v8, &qword_100AD0830);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
    {
      id v13 = v12;
      sub_10096B3B0();
      sub_10002B770((uint64_t)v8, &qword_100AD0830);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v4, v8, v1);
    }
    sub_10096C780();
    sub_10096B3A0();
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
    sub_10002B770((uint64_t)v10, &qword_100AD0830);
    sub_10026BFF4((void *)v0, sub_1006F79B0);
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10096C7F0(1uLL);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1006C0860(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v3[24];
  uint64_t v7 = *(void *)(v6 + 16);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v6 + 16) = v9;
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = a1;
    *(void *)(v2 + 24) = a2;
    uint64_t v4 = (void **)((char *)v3 + qword_100B0B350);
    swift_beginAccess();
    uint64_t v5 = *v4;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v4 = v5;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  uint64_t v5 = sub_1006A327C(0, v5[2] + 1, 1, v5);
  *uint64_t v4 = v5;
LABEL_3:
  unint64_t v14 = v5[2];
  unint64_t v13 = v5[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t v5 = sub_1006A327C((void *)(v13 > 1), v14 + 1, 1, v5);
    *uint64_t v4 = v5;
  }
  v5[2] = v14 + 1;
  uint64_t v15 = &v5[2 * v14];
  v15[4] = sub_1006FB200;
  v15[5] = v2;
  uint64_t v16 = swift_endAccess();
  return (*(uint64_t (**)(uint64_t))(*v3 + 2352))(v16);
}

uint64_t sub_1006C09C0()
{
  sub_1006F2FD0();

  return swift_retain();
}

uint64_t sub_1006C09E8()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v93 = sub_10096B480();
  uint64_t v92 = *(void *)(v93 - 8);
  uint64_t v2 = __chkstk_darwin(v93);
  long long v91 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  long long v90 = (char *)&v85 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  long long v88 = (char *)&v85 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  long long v87 = (char *)&v85 - v9;
  __chkstk_darwin(v8);
  long long v89 = (char *)&v85 - v10;
  uint64_t v11 = v1[73];
  uint64_t v12 = v1[74];
  uint64_t v13 = v1[75];
  uint64_t v98 = v1[72];
  uint64_t v105 = v98;
  uint64_t v106 = v11;
  uint64_t v97 = v11;
  uint64_t v96 = v12;
  uint64_t v107 = v12;
  uint64_t v108 = v13;
  uint64_t v95 = v13;
  uint64_t v14 = type metadata accessor for PersistenceTrigger();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v85 - v19;
  uint64_t v102 = v0;
  uint64_t v21 = (void *)((char *)v0 + qword_100B0B370);
  swift_beginAccess();
  uint64_t v22 = sub_10096C1C0();
  uint64_t v105 = *v21;
  swift_getWitnessTable();
  long long v99 = (uint8_t *)v22;
  if (sub_10096C460())
  {
LABEL_2:
    uint64_t v23 = (uint64_t)v102;
    if (fp_task_tracker_is_cancelled(*(void **)(v102[25] + 16))) {
      int v24 = 1;
    }
    else {
      int v24 = *(unsigned __int8 *)(v23 + 184);
    }
    LODWORD(v101) = v24;
    int v37 = v24 ^ 1;
    id v38 = (void *)(v23 + qword_100B0B3A0);
    if (*(_OWORD *)(v23 + qword_100B0B3A0) == 0 || (int v39 = v24 ^ 1, (~*(_DWORD *)(v23 + 112) & 0x1C0) == 0)) {
      int v39 = 0;
    }
    uint64_t v40 = (void *)(v23 + qword_100B0B3A8);
    if (*(_OWORD *)(v23 + qword_100B0B3A8) == 0 || (~*(_DWORD *)(v23 + 112) & 0x1C0) == 0) {
      int v37 = 0;
    }
    uint64_t v41 = (uint64_t *)(v23 + qword_100B0B330);
    swift_beginAccess();
    uint64_t v110 = *v41;
    uint64_t v105 = v98;
    uint64_t v106 = v97;
    uint64_t v107 = v96;
    uint64_t v108 = v95;
    type metadata accessor for UserRequest();
    sub_100033BE8((uint64_t *)&unk_100ADA328);
    swift_getTupleTypeMetadata2();
    sub_10096C1C0();
    swift_getWitnessTable();
    if (!(v39 & 1 | ((sub_10096C460() & 1) == 0)) && !v37) {
      goto LABEL_27;
    }
    uint64_t v52 = v103;
    uint64_t result = sub_1006BEAA0(1);
    if (v52) {
      return result;
    }
    uint64_t v103 = 0;
    if ((result & 1) == 0)
    {
LABEL_27:
      uint64_t v42 = (uint64_t)v102;
      goto LABEL_28;
    }
    if (v39)
    {
      if (*((unsigned char *)v102 + 121) == 1) {
        goto LABEL_74;
      }
      id v53 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      unint64_t v54 = sub_10096B470();
      os_log_type_t v55 = sub_10096C5B0();
      long long v100 = v54;
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v100, v55, "🤯  job scheduler is stable, upload jobs are not!", v56, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v92 + 8))(v89, v93);
      *id v38 = 0;
      v38[1] = 0;
      *(int64x2_t *)((char *)v102 + qword_100B0B390) = vdupq_n_s64(1uLL);
    }
    if (!v37) {
      goto LABEL_45;
    }
    if (*((unsigned char *)v102 + 121) != 1)
    {
      id v57 = (id)fpfs_current_or_default_log();
      uint64_t v58 = v87;
      sub_10096B490();
      uint64_t v59 = sub_10096B470();
      os_log_type_t v60 = sub_10096C5B0();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl((void *)&_mh_execute_header, v59, v60, "🤯  job scheduler is stable, download jobs are not!", v61, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v93);
      *uint64_t v40 = 0;
      v40[1] = 0;
      *(int64x2_t *)((char *)v102 + qword_100B0B398) = vdupq_n_s64(1uLL);
LABEL_45:
      uint64_t v105 = *v41;
      char v62 = sub_10096C460();
      uint64_t v42 = (uint64_t)v102;
      if ((v62 & 1) == 0)
      {
        id v63 = (id)fpfs_current_or_default_log();
        uint64_t v28 = (uint64_t)v88;
        sub_10096B490();
        unint64_t v64 = sub_10096B470();
        os_log_type_t v65 = sub_10096C5D0();
        if (os_log_type_enabled(v64, v65))
        {
          Swift::String v66 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Swift::String v66 = 0;
          _os_log_impl((void *)&_mh_execute_header, v64, v65, "🚀  job scheduler is stable, calling the stabilization waiters", v66, 2u);
          uint64_t v42 = (uint64_t)v102;
          swift_slowDealloc();
        }

        (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v28, v93);
        uint64_t v67 = *v41;
        swift_bridgeObjectRetain();
        if (sub_10096C1A0())
        {
          uint64_t v68 = 0;
          uint64_t v69 = v67 + 48;
          while (1)
          {
            BOOL v70 = sub_10096C130();
            sub_10096C0E0();
            if (!v70) {
              break;
            }
            uint64_t v28 = *(void *)(v69 - 16);
            uint64_t v71 = *(void (**)(NSObject **))(v69 - 8);
            sub_1000CE628(v28);
            uint64_t v72 = v68 + 1;
            BOOL v73 = __OFADD__(v68, 1);
            swift_retain();
            if (v73) {
              goto LABEL_70;
            }
            uint64_t v105 = 0;
            v71(&v105);
            sub_1000B6C28(v28);
            swift_release();
            ++v68;
            v69 += 24;
            if (v72 == sub_10096C1A0())
            {
              swift_bridgeObjectRelease();
              uint64_t v42 = (uint64_t)v102;
              goto LABEL_68;
            }
          }
          sub_10096CC20();
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          swift_retain();
          sub_100716230((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 111, 2, 1383, v28);
        }
        swift_bridgeObjectRelease();
LABEL_68:
        *uint64_t v41 = sub_10096C110();
        swift_bridgeObjectRelease();
      }
LABEL_28:
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v105 = v98;
      uint64_t v106 = v97;
      uint64_t v107 = v96;
      uint64_t v108 = v95;
      type metadata accessor for FSOrFPJob();
      char v43 = sub_10096BA50();
      swift_bridgeObjectRelease();
      if ((v43 & 1) != 0 && ((sub_1001E6128() | v101) & 1) == 0)
      {
        uint64_t v44 = type metadata accessor for StringDumper();
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 32) = 0;
        *(void *)(v28 + 40) = 0xE000000000000000;
        *(void *)(v28 + 16) = 0;
        *(void *)(v28 + 24) = 0xE000000000000000;
        uint64_t v108 = v44;
        uint64_t v109 = &off_100A8F830;
        uint64_t v105 = v28;
        swift_retain();
        sub_1001E64A8();
        sub_1000268E0((uint64_t)&v105);
        if ((*(unsigned char *)(v42 + 113) & 4) != 0) {
          goto LABEL_72;
        }
        id v45 = (id)fpfs_current_or_default_log();
        uint64_t v46 = v90;
        sub_10096B490();
        swift_retain();
        uint64_t v47 = sub_10096B470();
        os_log_type_t v48 = sub_10096C5C0();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          long long v100 = swift_slowAlloc();
          uint64_t v105 = v100;
          *(_DWORD *)uint64_t v49 = 136315138;
          long long v99 = v49 + 4;
          swift_beginAccess();
          uint64_t v50 = *(void *)(v28 + 16);
          unint64_t v51 = *(void *)(v28 + 24);
          swift_bridgeObjectRetain();
          uint64_t v111 = sub_100719D44(v50, v51, (uint64_t *)&v105);
          sub_10096C8C0();
          swift_release();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "🤯  there is no running jobs but the FS job lock is not empty!\n%s", v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v92 + 8))(v90, v93);
        }
        else
        {

          swift_release();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v46, v93);
        }
        sub_1001E62D4();
        sub_1006C05B4();
        swift_release();
      }
      swift_bridgeObjectRetain();
      char v74 = sub_10096BA50();
      uint64_t result = swift_bridgeObjectRelease();
      if (v74)
      {
        uint64_t v75 = (uint64_t)v102;
        uint64_t result = sub_1001E6128();
        if (((result | v101) & 1) == 0)
        {
          uint64_t v76 = type metadata accessor for StringDumper();
          uint64_t v77 = swift_allocObject();
          v77[4].uint64_t isa = 0;
          v77[5].uint64_t isa = (Class)0xE000000000000000;
          v77[2].uint64_t isa = 0;
          v77[3].uint64_t isa = (Class)0xE000000000000000;
          uint64_t v108 = v76;
          uint64_t v109 = &off_100A8F830;
          uint64_t v105 = v77;
          swift_retain();
          sub_1001E64A8();
          sub_1000268E0((uint64_t)&v105);
          if ((*(unsigned char *)(v75 + 113) & 4) != 0)
          {
            swift_retain();
            sub_100716244((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 111, 2, 1397, (uint64_t)v77);
          }
          id v78 = (id)fpfs_current_or_default_log();
          uint64_t v79 = v91;
          sub_10096B490();
          swift_retain();
          unint64_t v80 = sub_10096B470();
          os_log_type_t v81 = sub_10096C5C0();
          if (os_log_type_enabled(v80, v81))
          {
            uint64_t v82 = (uint8_t *)swift_slowAlloc();
            uint64_t v111 = swift_slowAlloc();
            *(_DWORD *)uint64_t v82 = 136315138;
            swift_beginAccess();
            uint64_t isa = (uint64_t)v77[2].isa;
            unint64_t v84 = (unint64_t)v77[3].isa;
            swift_bridgeObjectRetain();
            uint64_t v104 = sub_100719D44(isa, v84, &v111);
            sub_10096C8C0();
            swift_release();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v80, v81, "🤯  there is no running jobs but the FP job lock is not empty!\n%s", v82, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
          }
          else
          {

            swift_release();
            (*(void (**)(char *, uint64_t))(v92 + 8))(v79, v93);
          }
          sub_1001E62D4();
          sub_1006C05B4();
          return swift_release();
        }
      }
      return result;
    }
LABEL_74:
    uint64_t result = sub_10096CE20();
    __break(1u);
    return result;
  }
  uint64_t v101 = v20;
  uint64_t v86 = v16;
  long long v100 = (v15 + 16);
  id v25 = (void (**)(char *, uint64_t))(v15 + 8);
  long long v94 = v21;
  while (1)
  {
    id v26 = *v21;
    swift_bridgeObjectRetain();
    *uint64_t v21 = sub_10096C110();
    swift_bridgeObjectRelease();
    if (sub_10096C1A0()) {
      break;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v21 = v94;
    uint64_t v105 = *v94;
    swift_getWitnessTable();
    if (sub_10096C460()) {
      goto LABEL_2;
    }
  }
  uint64_t v27 = 0;
  while (1)
  {
    uint64_t v28 = sub_10096C130();
    sub_10096C0E0();
    if ((v28 & 1) == 0) {
      break;
    }
    id v29 = v101;
    uint64_t v30 = (void *)(*(uint64_t (**)(char *, unint64_t, uint64_t))(v15 + 16))(v101, (unint64_t)v26+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v27, v14);
    uint64_t v31 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      goto LABEL_16;
    }
LABEL_10:
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v29, v14);
    uint64_t v33 = v103;
    sub_1006D9F80((uint64_t)v18, (uint64_t)v102);
    uint64_t v103 = v33;
    uint64_t v30 = v32;
    if (v33) {
      goto LABEL_17;
    }
    (*v25)(v18, v14);
    ++v27;
    if (v31 == sub_10096C1A0()) {
      goto LABEL_5;
    }
  }
  uint64_t v34 = sub_10096CC20();
  if (v86 != 8) {
    goto LABEL_71;
  }
  uint64_t v105 = v34;
  id v35 = v101;
  ((void (*)(char *, NSObject **, uint64_t))v100->isa)(v101, &v105, v14);
  id v29 = v35;
  uint64_t v30 = (void *)swift_unknownObjectRelease();
  uint64_t v31 = v27 + 1;
  if (!__OFADD__(v27, 1)) {
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))*v25)(v18, v14);
}

uint64_t sub_1006C1A2C()
{
  uint64_t v0 = sub_10035D334();

  swift_bridgeObjectRelease();
  swift_release();
  sub_1000705CC(*(void *)(v0 + 128));
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_10002B770(v0 + qword_100B0B310, (uint64_t *)&unk_100AD63E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  sub_1006F7C48(v0 + qword_100B0B388, (uint64_t (*)(void))type metadata accessor for DBCounters);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

void sub_1006C1CA8()
{
  uint64_t v0 = sub_10096B480();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v82 = (char *)&v78 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  long long v87 = (char *)&v78 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  os_log_type_t v81 = (char *)&v78 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v86 = (char *)&v78 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v85 = (char *)&v78 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v80 = (char *)&v78 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v79 = (char *)&v78 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v78 - v19;
  id v21 = [objc_allocWithZone((Class)FPLoggerScope) init];
  id v22 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v23 = v21;
  int v24 = sub_10096B470();
  os_log_type_t v25 = sub_10096C5D0();
  BOOL v26 = os_log_type_enabled(v24, v25);
  unint64_t v84 = v4;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v78 = v1;
    uint64_t v28 = (uint8_t *)v27;
    id v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 138412290;
    id v30 = [v23 enter];
    id v88 = v30;
    sub_10096C8C0();
    *id v29 = v30;
    uint64_t v31 = v23;

    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%@ ✋🏻  invalidating database", v28, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v78;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v31 = v23;
    int v24 = v23;
  }

  unint64_t v32 = *(void (**)(char *, uint64_t))(v1 + 8);
  v32(v20, v0);
  uint64_t v33 = v83;
  id v34 = *(id *)(v83 + 64);
  sub_100270A48(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_1006F79F8, v33);

  id v35 = v79;
  if (qword_100ACC120 != -1) {
    swift_once();
  }
  [(id)qword_100B0B300 removeWatcher:v33];
  id v36 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  int v37 = sub_10096B470();
  os_log_type_t v38 = sub_10096C5D0();
  if (os_log_type_enabled(v37, v38))
  {
    int v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "disable event aggregation", v39, 2u);
    swift_slowDealloc();
  }

  v32(v35, v0);
  uint64_t v40 = *(void (**)(uint64_t))(**(void **)(*(void *)(v33 + 32) + 16) + 824);
  uint64_t v41 = swift_retain();
  v40(v41);
  swift_release();
  uint64_t v42 = *(void (**)(uint64_t))(**(void **)(*(void *)(v33 + 40) + 16) + 824);
  uint64_t v43 = swift_retain();
  v42(v43);
  swift_release();
  uint64_t v44 = v31;
  id v45 = v82;
  if (*(unsigned char *)(v33 + 104) == 1)
  {
    id v46 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v47 = sub_10096B470();
    os_log_type_t v48 = sub_10096C5D0();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "cancel trees", v49, 2u);
      swift_slowDealloc();
    }

    v32(v80, v0);
    sub_1006CC7E4();
  }
  id v50 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  unint64_t v51 = sub_10096B470();
  os_log_type_t v52 = sub_10096C5D0();
  if (os_log_type_enabled(v51, v52))
  {
    id v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "stopping scheduler", v53, 2u);
    swift_slowDealloc();
  }

  v32(v85, v0);
  sub_1006CC974();
  (*(void (**)(void))(**(void **)(v33 + 24) + 120))();
  id v54 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  os_log_type_t v55 = sub_10096B470();
  os_log_type_t v56 = sub_10096C5D0();
  if (os_log_type_enabled(v55, v56))
  {
    id v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v57 = 0;
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "cancelling in-flight requests", v57, 2u);
    swift_slowDealloc();
  }

  v32(v86, v0);
  id v58 = *(id *)(v33 + 64);
  sub_100270A48(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_1006F7A14, v33);

  uint64_t v59 = v84;
  if (*(unsigned char *)(v33 + 104) == 1)
  {
    id v60 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v61 = sub_10096B470();
    os_log_type_t v62 = sub_10096C5D0();
    if (os_log_type_enabled(v61, v62))
    {
      id v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "closing trees", v63, 2u);
      swift_slowDealloc();
    }

    v32(v81, v0);
    sub_1006CC7E4();
    sub_1006CC8AC();
  }
  id v64 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  os_log_type_t v65 = sub_10096B470();
  os_log_type_t v66 = sub_10096C5D0();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v67 = 0;
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "waiting for job completion", v67, 2u);
    swift_slowDealloc();
  }

  v32(v87, v0);
  id v68 = *(id *)(v33 + 208);
  sub_10096C600();

  id v69 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  BOOL v70 = sub_10096B470();
  os_log_type_t v71 = sub_10096C5D0();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v72 = 0;
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "stopping tracker", v72, 2u);
    swift_slowDealloc();
  }

  v32(v45, v0);
  BOOL v73 = *(void **)(*(void *)(v33 + 200) + 16);
  fp_task_tracker_cancel(v73);
  fp_task_tracker_wait((uint64_t)v73);
  id v74 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v75 = sub_10096B470();
  os_log_type_t v76 = sub_10096C5D0();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v77 = 0;
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "closing the wharf", v77, 2u);
    swift_slowDealloc();
  }

  v32(v59, v0);
  if (*(unsigned char *)(v33 + 104) == 1) {
    DocumentWharf.invalidate()();
  }
  sub_1006EF7CC(v44, (uint64_t (*)(void))&static os_log_type_t.default.getter);
}

uint64_t sub_1006C26FC(unsigned __int8 *a1)
{
  long long v733 = a1;
  uint64_t v3 = *(void (**)(void, void, void))(*(void *)v1 + 576);
  uint64_t v4 = *(void (**)(void, void))(*(void *)v1 + 600);
  uint64_t v5 = *(void (**)(void, void))(*(void *)v1 + 592);
  long long v734 = *(void (**)(void, void, void))(*(void *)v1 + 584);
  uint64_t v2 = v734;
  long long v735 = v3;
  long long v736 = v4;
  uint64_t v737 = (uint64_t)v5;
  uint64_t v685 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v684 = *(void *)(v685 - 8);
  uint64_t v6 = __chkstk_darwin(v685);
  long long v660 = (char *)&v616 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v683 = (char *)&v616 - v8;
  long long v734 = v3;
  long long v735 = v2;
  long long v736 = v5;
  uint64_t v737 = (uint64_t)v4;
  uint64_t v682 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v681 = *(void *)(v682 - 8);
  uint64_t v9 = __chkstk_darwin(v682);
  long long v659 = (char *)&v616 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v680 = (char *)&v616 - v11;
  long long v734 = v2;
  long long v735 = v3;
  long long v736 = v4;
  uint64_t v737 = (uint64_t)v5;
  uint64_t v12 = type metadata accessor for TestingOperation();
  uint64_t v648 = sub_10096C890();
  uint64_t v665 = *(void *)(v648 - 8);
  uint64_t v13 = __chkstk_darwin(v648);
  long long v664 = (char *)&v616 - v14;
  unint64_t v647 = (void *)v12;
  uint64_t v646 = *(void *)(v12 - 8);
  __chkstk_darwin(v13);
  long long v662 = (char *)&v616 - v15;
  long long v734 = v3;
  long long v735 = v2;
  long long v736 = v5;
  uint64_t v737 = (uint64_t)v4;
  uint64_t v16 = type metadata accessor for TestingOperation();
  uint64_t v644 = sub_10096C890();
  uint64_t v643 = *(void *)(v644 - 8);
  uint64_t v17 = __chkstk_darwin(v644);
  uint64_t v642 = (char *)&v616 - v18;
  uint64_t v708 = v16;
  uint64_t v669 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  long long v661 = (char *)&v616 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v633 = (uint64_t)&v616 - v22;
  __chkstk_darwin(v21);
  long long v632 = (char *)&v616 - v23;
  uint64_t v707 = type metadata accessor for SnapshotItem();
  uint64_t v706 = *(void *)(v707 - 8);
  __chkstk_darwin(v707);
  uint64_t v689 = (uint64_t)&v616 - v24;
  long long v663 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v641 = *((void *)v663 - 1);
  __chkstk_darwin(v663);
  unint64_t v640 = (char *)&v616 - v25;
  uint64_t v26 = type metadata accessor for SnapshotItem();
  uint64_t v709 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  unint64_t v635 = (char *)&v616 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  long long v655 = (char *)&v616 - v30;
  __chkstk_darwin(v29);
  unint64_t v696 = (char *)&v616 - v31;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v651 = sub_10096C890();
  uint64_t v650 = *(void *)(v651 - 8);
  uint64_t v33 = __chkstk_darwin(v651);
  long long v667 = (char *)&v616 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  long long v658 = (char *)&v616 - v35;
  uint64_t v636 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v636);
  uint64_t v625 = (uint64_t)&v616 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v710 = v26;
  uint64_t v717 = sub_10096C890();
  uint64_t v711 = *(void *)(v717 - 8);
  uint64_t v37 = __chkstk_darwin(v717);
  unint64_t v671 = (char *)&v616 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  size_t v705 = (char *)&v616 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v716 = (char *)&v616 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  unsigned int v715 = (char *)&v616 - v44;
  __chkstk_darwin(v43);
  unint64_t v629 = (char *)&v616 - v45;
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t v653 = sub_10096C890();
  uint64_t v652 = *(void *)(v653 - 8);
  uint64_t v47 = __chkstk_darwin(v653);
  size_t v639 = (char *)&v616 - v48;
  uint64_t v723 = (void (*)(void, void, void))v46;
  unsigned int v718 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 - 8);
  uint64_t v49 = __chkstk_darwin(v47);
  unint64_t v634 = (char *)&v616 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v49);
  size_t v626 = (char *)&v616 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  size_t v704 = (char *)&v616 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  size_t v679 = (char *)&v616 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v703 = (char *)&v616 - v58;
  __chkstk_darwin(v57);
  unint64_t v637 = (char *)&v616 - v59;
  long long v734 = v3;
  long long v735 = v2;
  long long v736 = v5;
  uint64_t v737 = (uint64_t)v4;
  uint64_t v60 = type metadata accessor for ItemReconciliation();
  uint64_t v687 = sub_10096C890();
  uint64_t v670 = *(void *)(v687 - 8);
  uint64_t v61 = __chkstk_darwin(v687);
  uint64_t v678 = (uint64_t)&v616 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __chkstk_darwin(v61);
  long long v657 = (char *)&v616 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v692 = (uint64_t)&v616 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v638 = (uint64_t)&v616 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v628 = (uint64_t)&v616 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v677 = (uint64_t)&v616 - v72;
  uint64_t v695 = v60;
  uint64_t v694 = *(void *)(v60 - 8);
  uint64_t v73 = __chkstk_darwin(v71);
  uint64_t v649 = (char *)&v616 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __chkstk_darwin(v73);
  unint64_t v624 = (char *)&v616 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  unint64_t v630 = (char *)&v616 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  long long v656 = (char *)&v616 - v80;
  uint64_t v725 = AssociatedTypeWitness;
  uint64_t v719 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v81 = __chkstk_darwin(v79);
  uint64_t v688 = (uint64_t)&v616 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __chkstk_darwin(v81);
  size_t v676 = (char *)&v616 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  long long v654 = (char *)&v616 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  long long v627 = (char *)&v616 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  uint64_t v690 = (char *)&v616 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  unint64_t v645 = (char *)&v616 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  unint64_t v668 = (char *)&v616 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  unint64_t v714 = (char *)&v616 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  uint64_t v675 = (char *)&v616 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  unint64_t v713 = (char *)&v616 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  uint64_t v691 = (uint64_t)&v616 - v102;
  uint64_t v103 = __chkstk_darwin(v101);
  unint64_t v666 = (char *)&v616 - v104;
  uint64_t v105 = __chkstk_darwin(v103);
  unint64_t v631 = (char *)&v616 - v106;
  uint64_t v107 = __chkstk_darwin(v105);
  uint64_t v686 = (char *)&v616 - v108;
  uint64_t v109 = __chkstk_darwin(v107);
  uint64_t v674 = (char *)&v616 - v110;
  uint64_t v111 = __chkstk_darwin(v109);
  unint64_t v673 = (char *)&v616 - v112;
  uint64_t v113 = __chkstk_darwin(v111);
  unint64_t v672 = (char *)&v616 - v114;
  __chkstk_darwin(v113);
  uint64_t v693 = (char *)&v616 - v115;
  unint64_t v720 = v3;
  long long v734 = v3;
  long long v735 = v2;
  uint64_t v721 = v2;
  uint64_t v724 = v5;
  long long v736 = v5;
  uint64_t v737 = (uint64_t)v4;
  uint64_t v722 = v4;
  uint64_t v116 = type metadata accessor for PersistenceTrigger();
  uint64_t v729 = *(void *)(v116 - 8);
  uint64_t v730 = v116;
  uint64_t v117 = __chkstk_darwin(v116);
  int v702 = (char *)&v616 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __chkstk_darwin(v117);
  uint64_t v728 = (char *)&v616 - v120;
  uint64_t v121 = __chkstk_darwin(v119);
  unint64_t v727 = (unint64_t)&v616 - v122;
  uint64_t v123 = __chkstk_darwin(v121);
  size_t v699 = (char *)&v616 - v124;
  uint64_t v125 = __chkstk_darwin(v123);
  unint64_t v726 = (char *)&v616 - v126;
  uint64_t v127 = __chkstk_darwin(v125);
  long long v698 = (char *)&v616 - v128;
  uint64_t v129 = __chkstk_darwin(v127);
  uint64_t v701 = (char *)&v616 - v130;
  uint64_t v131 = __chkstk_darwin(v129);
  size_t v700 = (char *)&v616 - v132;
  uint64_t v133 = __chkstk_darwin(v131);
  uint64_t v697 = (char *)&v616 - v134;
  uint64_t v135 = __chkstk_darwin(v133);
  uint64_t v137 = (char *)&v616 - v136;
  uint64_t v138 = __chkstk_darwin(v135);
  uint64_t v140 = (char *)&v616 - v139;
  uint64_t v141 = __chkstk_darwin(v138);
  uint64_t v143 = (char *)&v616 - v142;
  uint64_t v144 = __chkstk_darwin(v141);
  uint64_t v146 = (char *)&v616 - v145;
  uint64_t v147 = __chkstk_darwin(v144);
  uint64_t v149 = (char *)&v616 - v148;
  uint64_t v150 = __chkstk_darwin(v147);
  uint64_t v152 = (char *)&v616 - v151;
  uint64_t v153 = __chkstk_darwin(v150);
  uint64_t v155 = (char *)&v616 - v154;
  uint64_t v156 = __chkstk_darwin(v153);
  uint64_t v158 = (char *)&v616 - v157;
  __chkstk_darwin(v156);
  id v160 = (char *)&v616 - v159;
  uint64_t v161 = v731;
  uint64_t result = sub_1003F6554((uint64_t)v733, v732);
  if (v161) {
    return result;
  }
  unint64_t v617 = v158;
  v618 = v155;
  size_t v619 = v140;
  size_t v620 = v152;
  size_t v621 = v149;
  uint64_t v163 = v726;
  uint64_t v622 = v146;
  int v623 = v137;
  unint64_t v165 = v727;
  uint64_t v164 = (unsigned __int8 *)v728;
  uint64_t v616 = v143;
  uint64_t v731 = 0;
  uint64_t v166 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v729 + 16);
  v166(v160, v733, v730);
  uint64_t v712 = v160;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v167 = v697;
      uint64_t v168 = v730;
      v166(v697, (unsigned __int8 *)v712, v730);
      uint64_t v169 = v725;
      uint64_t v170 = v723;
      uint64_t v171 = &v167[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v172 = v719;
      uint64_t v173 = (uint64_t)v713;
      (*(void (**)(char *, char *, uint64_t))(v719 + 32))(v713, v167, v169);
      uint64_t v174 = v718;
      uint64_t v175 = (uint64_t)v703;
      (*((void (**)(char *, char *, void))v718 + 4))(v703, v171, v170);
      uint64_t v176 = v731;
      sub_1006DF600(v173, 0);
      if (v176) {
        goto LABEL_28;
      }
      sub_1006E0E5C(v175, 0);
      uint64_t v731 = 0;
      (*((void (**)(uint64_t, void (*)(void, void, void)))v174 + 1))(v175, v170);
      uint64_t v436 = *(void (**)(void, uint64_t))(v172 + 8);
      unsigned int v437 = (uint64_t *)&v740;
      goto LABEL_111;
    case 2u:
      uint64_t v164 = (unsigned __int8 *)v617;
      v166(v617, (unsigned __int8 *)v712, v730);
      uint64_t v177 = v725;
      unint64_t v178 = v720;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      unint64_t v180 = v721;
      unint64_t v181 = v723;
      uint64_t v182 = swift_getAssociatedConformanceWitness();
      long long v734 = (void (*)(void, void, void))v177;
      long long v735 = v181;
      long long v736 = (void (*)(void, void))AssociatedConformanceWitness;
      uint64_t v737 = v182;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_37;
      }
      uint64_t v184 = v719;
      uint64_t v185 = (uint64_t)v693;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v719 + 32))(v693, v164, v177);
      uint64_t v186 = v731;
      uint64_t v187 = v732;
      uint64_t v188 = v677;
      sub_1000DEDD8(v185, v677);
      uint64_t v731 = v186;
      if (v186)
      {
        (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v185, v177);
        goto LABEL_151;
      }
      uint64_t v402 = v694;
      uint64_t v403 = v695;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v694 + 48))(v188, 1, v695) == 1)
      {
        (*(void (**)(char *, uint64_t))(v719 + 8))(v693, v177);
        goto LABEL_86;
      }
      char v461 = v656;
      (*(void (**)(char *, uint64_t, uint64_t))(v402 + 32))(v656, v188, v403);
      uint64_t v462 = *(void (**)(char *))(v652 + 16);
      uint64_t v463 = v639;
      long long v733 = (unsigned __int8 *)&v461[*(int *)(v403 + 52)];
      v462(v639);
      char v464 = v718;
      unint64_t v465 = v723;
      if ((*((unsigned int (**)(char *, uint64_t, void))v718 + 6))(v463, 1, v723) == 1)
      {
        (*(void (**)(char *, uint64_t))(v694 + 8))(v461, v695);
        (*(void (**)(char *, uint64_t))(v719 + 8))(v693, v177);
        (*(void (**)(char *, uint64_t))(v652 + 8))(v463, v653);
        goto LABEL_151;
      }
      uint64_t v505 = (void (*)(char *, char *, void))*((void *)v464 + 4);
      uint64_t v506 = (uint64_t)v637;
      v505(v637, v463, v465);
      if ((v733[*(int *)(type metadata accessor for ItemReconciliationHalf() + 52)] | 4) == 4)
      {
        int v507 = v656[v663[14]];
        uint64_t v508 = v694;
        unint64_t v509 = v630;
        uint64_t v510 = v695;
        (*(void (**)(char *))(v694 + 16))(v630);
        if (v507 == 6)
        {
          uint64_t v511 = v509;
          uint64_t v512 = *(void (**)(char *, uint64_t))(v508 + 8);
          v512(v511, v510);
          goto LABEL_201;
        }
        int v549 = v509[*(int *)(v510 + 56)];
        uint64_t v550 = v509;
        uint64_t v512 = *(void (**)(char *, uint64_t))(v508 + 8);
        v512(v550, v510);
        if (v549 != 1)
        {
LABEL_201:
          size_t v551 = v629;
          uint64_t v552 = v731;
          (*(void (**)(char *, uint64_t))(*(void *)v187[2].Kind + 240))(v693, 1);
          long long v733 = (unsigned __int8 *)v512;
          if (v552)
          {
            swift_errorRelease();
            uint64_t v731 = 0;
          }
          else
          {
            uint64_t v731 = 0;
            uint64_t v561 = v709;
            uint64_t v562 = v710;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v709 + 48))(v551, 1, v710) == 1)
            {
              (*(void (**)(char *, uint64_t))(v711 + 8))(v551, v717);
            }
            else
            {
              uint64_t v575 = v625;
              sub_1006F90F0((uint64_t)&v551[*(int *)(v562 + 48)], v625, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
              (*(void (**)(char *, uint64_t))(v561 + 8))(v551, v562);
              int v576 = *(unsigned __int8 *)(v575 + *(int *)(v636 + 80));
              sub_1006F7C48(v575, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
              if (v576 == 1)
              {
                (*((void (**)(char *, void (*)(void, void, void)))v718 + 1))(v637, v723);
                v512(v656, v695);
LABEL_266:
                (*(void (**)(char *, uint64_t))(v719 + 8))(v693, v725);
                goto LABEL_151;
              }
            }
          }
          long long v734 = v178;
          long long v735 = v180;
          unint64_t v577 = v724;
          uint64_t v578 = (uint64_t)v722;
          long long v736 = v724;
          uint64_t v737 = (uint64_t)v722;
          type metadata accessor for Mutation();
          uint64_t v728 = (char *)sub_10096C110();
          long long v734 = v178;
          long long v735 = v180;
          long long v736 = v577;
          uint64_t v737 = v578;
          type metadata accessor for ReconciliationMutation();
          sub_10096D230();
          swift_allocObject();
          uint64_t v579 = sub_10096C0D0();
          uint64_t v581 = v580;
          type metadata accessor for ReconciliationSideMutation();
          unint64_t v582 = (unsigned char *)(v581 + *(int *)(swift_getTupleTypeMetadata2() + 48));
          uint64_t v583 = v719;
          long long v584 = v693;
          uint64_t v585 = v725;
          (*(void (**)(uint64_t, char *, uint64_t))(v719 + 16))(v581, v693, v725);
          swift_storeEnumTagMultiPayload();
          *unint64_t v582 = 2;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          uint64_t v586 = v579;
          uint64_t v587 = (uint64_t)v728;
          sub_1003FC080(v586);
          uint64_t v588 = v731;
          sub_10035B6FC(v587);
          uint64_t v731 = v588;
          if (v588)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*((void (**)(char *, void (*)(void, void, void)))v718 + 1))(v637, v723);
            ((void (*)(char *, uint64_t))v733)(v656, v695);
            (*(void (**)(char *, uint64_t))(v583 + 8))(v584, v585);
            goto LABEL_151;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v589 = v695;
          long long v590 = v656;
          if (v656[*(int *)(v695 + 56)] == 1)
          {
            sub_1006CBFF8();
            long long v734 = v721;
            long long v735 = v720;
            long long v736 = v722;
            uint64_t v737 = (uint64_t)v724;
            type metadata accessor for Ingestion.FetchChildrenMetadata();
            uint64_t v591 = sub_100437D5C();
            uint64_t v592 = (uint64_t)v637;
            uint64_t v594 = sub_1008AA760((uint64_t)v637, v591, v593, 0);
            sub_10063ADA8();
            uint64_t v595 = v731;
            sub_10059C450(v594);
            uint64_t v731 = v595;
            if (v595)
            {
              swift_release();
              swift_release();
              (*((void (**)(uint64_t, void (*)(void, void, void)))v718 + 1))(v592, v723);
              unint64_t v596 = v590;
              uint64_t v597 = v695;
LABEL_265:
              ((void (*)(char *, uint64_t))v733)(v596, v597);
              goto LABEL_266;
            }
            swift_release();
            swift_release();
            uint64_t v589 = v695;
          }
          else
          {
            uint64_t v592 = (uint64_t)v637;
          }
          (*((void (**)(uint64_t, void (*)(void, void, void)))v718 + 1))(v592, v723);
          unint64_t v596 = v590;
          uint64_t v597 = v589;
          goto LABEL_265;
        }
        (*((void (**)(char *, void (*)(void, void, void)))v718 + 1))(v637, v723);
        v512(v656, v510);
      }
      else
      {
        (*((void (**)(uint64_t, void (*)(void, void, void)))v718 + 1))(v506, v723);
        (*(void (**)(char *, uint64_t))(v694 + 8))(v656, v695);
      }
      (*(void (**)(char *, uint64_t))(v719 + 8))(v693, v177);
      goto LABEL_151;
    case 3u:
      uint64_t v164 = (unsigned __int8 *)v618;
      uint64_t v189 = (void (*)(char *, char *, uint64_t))v166;
      uint64_t v190 = v712;
      uint64_t v191 = v730;
      v189(v618, v712, v730);
      uint64_t v192 = v725;
      uint64_t v193 = swift_getAssociatedConformanceWitness();
      uint64_t v194 = v723;
      uint64_t v195 = swift_getAssociatedConformanceWitness();
      long long v734 = (void (*)(void, void, void))v192;
      long long v735 = v194;
      long long v736 = (void (*)(void, void))v193;
      uint64_t v737 = v195;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_37;
      }
      uint64_t v196 = v719;
      uint64_t v197 = (uint64_t)v672;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v719 + 32))(v672, v164, v192);
      uint64_t v198 = v731;
      sub_1006DCA18(v197, 0, 0);
      uint64_t v731 = v198;
      if (v198)
      {
        (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v197, v192);
        uint64_t v199 = *(uint64_t (**)(char *, uint64_t))(v729 + 8);
        char v200 = v190;
        goto LABEL_49;
      }
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v197, v192);
      goto LABEL_151;
    case 4u:
      uint64_t v201 = v621;
      uint64_t v202 = v712;
      uint64_t v191 = v730;
      v166(v621, (unsigned __int8 *)v712, v730);
      uint64_t v203 = v725;
      uint64_t v204 = swift_getAssociatedConformanceWitness();
      uint64_t v205 = v723;
      uint64_t v206 = swift_getAssociatedConformanceWitness();
      long long v734 = (void (*)(void, void, void))v203;
      long long v735 = v205;
      long long v736 = (void (*)(void, void))v204;
      uint64_t v737 = v206;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      uint64_t v207 = &v201[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v208 = *(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8);
        v208(v207, v183);
        v208(v201, v183);
        goto LABEL_151;
      }
      uint64_t v329 = v719;
      uint64_t v330 = (uint64_t)v674;
      (*(void (**)(char *, char *, uint64_t))(v719 + 32))(v674, v201, v203);
      uint64_t v331 = v731;
      sub_1006DCA18(v330, 1, 0);
      uint64_t v731 = v331;
      if (!v331)
      {
        (*(void (**)(uint64_t, uint64_t))(v329 + 8))(v330, v203);
        goto LABEL_90;
      }
      (*(void (**)(uint64_t, uint64_t))(v329 + 8))(v330, v203);
      (*(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8))(v207, v183);
      uint64_t v199 = *(uint64_t (**)(char *, uint64_t))(v729 + 8);
      char v200 = v202;
LABEL_49:
      uint64_t v332 = v191;
      return v199(v200, v332);
    case 5u:
      uint64_t v209 = (void (*)(char *, char *, uint64_t))v166;
      uint64_t v210 = v619;
      v209(v619, v712, v730);
      uint64_t v211 = v717;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      id v213 = &v210[*(int *)(TupleTypeMetadata3 + 48)];
      unint64_t v727 = *(void *)&v210[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v214 = v711;
      uint64_t v215 = *(void (**)(char *, char *, uint64_t))(v711 + 32);
      uint64_t v216 = v715;
      v215(v715, v210, v211);
      uint64_t v217 = v716;
      v215(v716, v213, v211);
      uint64_t v218 = v705;
      long long v733 = *(unsigned __int8 **)(v214 + 16);
      uint64_t v728 = (char *)(v214 + 16);
      ((void (*)(char *, char *, uint64_t))v733)(v705, v216, v211);
      uint64_t v219 = v709;
      uint64_t v220 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v709 + 48);
      uint64_t v221 = v710;
      if (v220(v218, 1, v710) == 1)
      {
        uint64_t v222 = *(void (**)(char *, uint64_t))(v214 + 8);
        v222(v216, v211);
        v222(v217, v211);
        v222(v218, v211);
        goto LABEL_151;
      }
      uint64_t v333 = *(void (**)(void, void, void))(v219 + 32);
      uint64_t v334 = v217;
      uint64_t v335 = v696;
      unint64_t v726 = (char *)(v219 + 32);
      uint64_t v723 = v333;
      v333(v696, v218, v221);
      if (v220(v334, 1, v221) == 1)
      {
        unsigned int v718 = v220;
        uint64_t v336 = v719;
        uint64_t v337 = (uint64_t)v666;
        uint64_t v338 = v335;
        uint64_t v339 = (uint64_t)v335;
        uint64_t v340 = v725;
        (*(void (**)(char *, char *, uint64_t))(v719 + 16))(v666, v338, v725);
        sub_1000DBD10();
        uint64_t v341 = swift_allocError();
        *uint64_t v342 = 2;
        uint64_t v343 = v731;
        sub_1006DCA18(v337, 3, v341);
        uint64_t v344 = v671;
        if (v343)
        {
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t))(v336 + 8))(v337, v340);
          (*(void (**)(uint64_t, uint64_t))(v709 + 8))(v339, v710);
          Swift::String v345 = *(void (**)(char *, uint64_t))(v711 + 8);
          uint64_t v346 = v717;
          v345(v715, v717);
          v345(v716, v346);
          return (*(uint64_t (**)(char *, uint64_t))(v729 + 8))(v712, v730);
        }
        (*(void (**)(uint64_t, uint64_t))(v336 + 8))(v337, v340);
        swift_errorRelease();
        uint64_t v456 = v638;
        sub_1000DEDD8(v339, v638);
        uint64_t v731 = 0;
        uint64_t v457 = v339;
        uint64_t v516 = v694;
        uint64_t v517 = v695;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v694 + 48))(v456, 1, v695) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v670 + 8))(v456, v687);
          size_t v394 = v722;
          uint64_t v214 = v711;
LABEL_193:
          uint64_t v544 = v731;
          sub_1006DF600(v457, 0);
          uint64_t v731 = v544;
          uint64_t v220 = v718;
          if (v544)
          {
            (*(void (**)(uint64_t, uint64_t))(v709 + 8))(v457, v710);
            goto LABEL_117;
          }
          uint64_t v221 = v710;
          uint64_t v219 = v709;
          goto LABEL_79;
        }
        BOOL v543 = sub_100827AAC(v517);
        (*(void (**)(uint64_t, uint64_t))(v516 + 8))(v456, v517);
        uint64_t v457 = (uint64_t)v696;
        size_t v394 = v722;
        uint64_t v214 = v711;
        if (!v543) {
          goto LABEL_193;
        }
        uint64_t v221 = v710;
        uint64_t v219 = v709;
        uint64_t v220 = v718;
      }
      else
      {
        size_t v394 = v722;
        uint64_t v344 = v671;
      }
LABEL_79:
      uint64_t v395 = v716;
      uint64_t v396 = v717;
      ((void (*)(char *, char *, uint64_t))v733)(v344, v716, v717);
      if (v220(v344, 1, v221) == 1)
      {
        (*(void (**)(char *, uint64_t))(v219 + 8))(v696, v221);
        unint64_t v397 = *(void (**)(char *, uint64_t))(v214 + 8);
        v397(v715, v396);
        v397(v395, v396);
        v397(v344, v396);
        goto LABEL_151;
      }
      id v439 = v655;
      v723(v655, v344, v221);
      if ((v727 & 0x100000000000) == 0)
      {
        unint64_t v440 = *(void (**)(char *, uint64_t))(v219 + 8);
        v440(v439, v221);
        v440(v696, v221);
LABEL_117:
        id v441 = *(void (**)(char *, uint64_t))(v214 + 8);
        uint64_t v442 = v717;
        v441(v715, v717);
        v441(v716, v442);
        goto LABEL_151;
      }
      uint64_t v485 = (uint64_t)v394;
      uint64_t v486 = v636;
      uint64_t v487 = v219;
      char v488 = v439[*(int *)(v221 + 48) + *(int *)(v636 + 60)];
      uint64_t v489 = v635;
      (*(void (**)(char *, char *, uint64_t))(v487 + 16))(v635, v439, v221);
      uint64_t v490 = v717;
      if (v488)
      {
        size_t v491 = *(void (**)(char *, uint64_t))(v487 + 8);
        v491(v489, v221);
LABEL_142:
        uint64_t v492 = v696;
        uint64_t v493 = v716;
LABEL_211:
        unint64_t v559 = v715;
        v491(v439, v221);
        v491(v492, v221);
        unint64_t v560 = *(void (**)(char *, uint64_t))(v711 + 8);
        v560(v559, v490);
        v560(v493, v490);
        goto LABEL_151;
      }
      uint64_t v529 = *(void *)&v489[*(int *)(v221 + 48) + *(int *)(v486 + 76)];
      size_t v491 = *(void (**)(char *, uint64_t))(v487 + 8);
      v491(v489, v221);
      uint64_t v377 = v729;
      if (!v529)
      {
        uint64_t v492 = v696;
        uint64_t v493 = v716;
        id v439 = v655;
        goto LABEL_211;
      }
      long long v734 = v720;
      long long v735 = v721;
      long long v736 = v724;
      uint64_t v737 = v485;
      uint64_t updated = type metadata accessor for Maintenance.UpdateClosestSyncRoot();
      uint64_t v531 = sub_100437D58(updated);
      id v439 = v655;
      uint64_t v533 = sub_1003A9380(v655, v531, v532, 0x4000000);
      sub_10063ADA8();
      uint64_t v534 = v731;
      sub_10059C450(v533);
      uint64_t v731 = v534;
      if (!v534)
      {
        swift_release();
        uint64_t v221 = v710;
        goto LABEL_142;
      }
      swift_release();
      uint64_t v535 = v710;
      v491(v439, v710);
      v491(v696, v535);
      uint64_t v536 = *(void (**)(char *, uint64_t))(v711 + 8);
      v536(v715, v490);
      v536(v716, v490);
      return (*(uint64_t (**)(char *, uint64_t))(v377 + 8))(v712, v730);
    case 6u:
      BOOL v223 = v701;
      uint64_t v224 = (void (*)(char *, char *, uint64_t))v166;
      int64_t v225 = v712;
      uint64_t v226 = v730;
      v224(v701, v712, v730);
      uint64_t v227 = v707;
      uint64_t v183 = sub_10096C890();
      uint64_t v228 = swift_getTupleTypeMetadata3();
      uint64_t v207 = &v223[*(int *)(v228 + 48)];
      uint64_t v229 = v706;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v706 + 48))(v223, 1, v227) == 1)
      {
        uint64_t v230 = *(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8);
        v230(v207, v183);
        id v231 = v223;
        goto LABEL_40;
      }
      uint64_t v347 = *(void *)&v223[*(int *)(v228 + 64)];
      uint64_t v348 = v689;
      (*(void (**)(uint64_t, char *, uint64_t))(v229 + 32))(v689, v223, v227);
      if ((v347 & 2) != 0)
      {
        long long v733 = (unsigned __int8 *)v207;
        uint64_t v398 = v731;
        unint64_t v399 = v667;
        (*(void (**)(uint64_t))(*(void *)v732[1].Kind + 152))(v348);
        uint64_t v400 = v348;
        uint64_t v401 = v729;
        uint64_t v731 = v398;
        if (v398)
        {
          (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v400, v227);
          (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v733, v183);
          return (*(uint64_t (**)(char *, uint64_t))(v401 + 8))(v225, v226);
        }
        int v458 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v719 + 48))(v399, 1, v725);
        (*(void (**)(char *, uint64_t))(v650 + 8))(v399, v651);
        if (v458 == 1)
        {
          uint64_t v459 = v689;
          uint64_t v460 = v731;
          sub_1006E0E5C(v689, 0);
          uint64_t v731 = v460;
          uint64_t v164 = v733;
          if (v460)
          {
            (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v459, v227);
            (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v164, v183);
            return (*(uint64_t (**)(char *, uint64_t))(v401 + 8))(v225, v226);
          }
        }
        else
        {
          uint64_t v164 = v733;
        }
        (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v689, v227);
LABEL_37:
        (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v164, v183);
        goto LABEL_151;
      }
      (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v348, v227);
LABEL_90:
      (*(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8))(v207, v183);
LABEL_151:
      uint64_t v332 = v730;
      uint64_t v199 = *(uint64_t (**)(char *, uint64_t))(v729 + 8);
      char v200 = v712;
      return v199(v200, v332);
    case 9u:
      uint64_t v232 = v700;
      id v233 = v712;
      uint64_t v234 = v730;
      v166(v700, (unsigned __int8 *)v712, v730);
      uint64_t v235 = v725;
      uint64_t v236 = swift_getAssociatedConformanceWitness();
      double v237 = v723;
      uint64_t v238 = swift_getAssociatedConformanceWitness();
      long long v734 = (void (*)(void, void, void))v235;
      long long v735 = v237;
      long long v736 = (void (*)(void, void))v236;
      uint64_t v737 = v238;
      type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        double v239 = v718;
        uint64_t v240 = (uint64_t)v679;
        (*((void (**)(char *, char *, void))v718 + 4))(v679, v232, v237);
        uint64_t v241 = v731;
        sub_1006E0E5C(v240, 0);
        uint64_t v242 = v729;
        uint64_t v731 = v241;
        if (!v241)
        {
          (*((void (**)(uint64_t, void (*)(void, void, void)))v239 + 1))(v240, v237);
          goto LABEL_151;
        }
        (*((void (**)(uint64_t, void (*)(void, void, void)))v239 + 1))(v240, v237);
      }
      else
      {
        uint64_t v349 = v719;
        uint64_t v350 = (uint64_t)v675;
        (*(void (**)(char *, char *, uint64_t))(v719 + 32))(v675, v232, v235);
        uint64_t v351 = v731;
        sub_1006DF600(v350, 0);
        uint64_t v242 = v729;
        uint64_t v731 = v351;
        if (!v351)
        {
          (*(void (**)(uint64_t, uint64_t))(v349 + 8))(v350, v235);
          goto LABEL_151;
        }
        (*(void (**)(uint64_t, uint64_t))(v349 + 8))(v350, v235);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v242 + 8))(v233, v234);
    case 0xEu:
      uint64_t v243 = v620;
      uint64_t v244 = (void (*)(char *, char *, uint64_t))v166;
      uint64_t v245 = v712;
      uint64_t v246 = v730;
      v244(v620, v712, v730);
      uint64_t v247 = v725;
      uint64_t v248 = swift_getAssociatedConformanceWitness();
      uint64_t v249 = v723;
      uint64_t v250 = swift_getAssociatedConformanceWitness();
      long long v734 = (void (*)(void, void, void))v247;
      long long v735 = v249;
      long long v736 = (void (*)(void, void))v248;
      uint64_t v737 = v250;
      uint64_t v251 = type metadata accessor for ReconciliationID();
      sub_100033BE8((uint64_t *)&unk_100ACB6B0);
      uint64_t v252 = *(void *)&v243[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(*(void *)(v251 - 8) + 8))(v243, v251);
        goto LABEL_151;
      }
      uint64_t v352 = v719;
      uint64_t v353 = (uint64_t)v673;
      (*(void (**)(char *, char *, uint64_t))(v719 + 32))(v673, v243, v247);
      swift_errorRetain();
      uint64_t v354 = v731;
      sub_1006DCA18(v353, 0, v252);
      uint64_t v731 = v354;
      if (v354)
      {
        (*(void (**)(uint64_t, uint64_t))(v352 + 8))(v353, v247);
        swift_errorRelease();
        swift_errorRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v729 + 8))(v245, v246);
      }
      (*(void (**)(uint64_t, uint64_t))(v352 + 8))(v353, v247);
      swift_errorRelease();
      swift_errorRelease();
      goto LABEL_151;
    case 0xFu:
      uint64_t v253 = v622;
      v166(v622, (unsigned __int8 *)v712, v730);
      uint64_t v254 = v725;
      uint64_t v255 = (unsigned __int8 *)swift_getAssociatedConformanceWitness();
      uint64_t v256 = v723;
      uint64_t v257 = swift_getAssociatedConformanceWitness();
      long long v734 = (void (*)(void, void, void))v254;
      long long v735 = v256;
      long long v736 = (void (*)(void, void))v255;
      uint64_t v737 = v257;
      uint64_t v258 = type metadata accessor for ReconciliationID();
      sub_100033BE8((uint64_t *)&unk_100ACB6B0);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v260 = *(void *)&v253[*(int *)(TupleTypeMetadata2 + 48)];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_errorRelease();
        long long v261 = *(void (**)(void, uint64_t))(*(void *)(v258 - 8) + 8);
        uint64_t v262 = (void (*)(void, void))v253;
        goto LABEL_24;
      }
      long long v733 = v255;
      uint64_t v728 = (char *)TupleTypeMetadata2;
      uint64_t v355 = v719;
      uint64_t v356 = *(void (**)(char *, char *, uint64_t))(v719 + 32);
      uint64_t v357 = (uint64_t)v686;
      v356(v686, v253, v254);
      swift_errorRetain();
      uint64_t v359 = v731;
      char v358 = v732;
      sub_1006DCA18(v357, 1, v260);
      uint64_t v360 = v254;
      uint64_t v361 = v729;
      if (v359)
      {
        (*(void (**)(uint64_t, uint64_t))(v355 + 8))(v357, v360);
        swift_errorRelease();
        swift_errorRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v361 + 8))(v712, v730);
      }
      unint64_t v727 = (unint64_t)v356;
      swift_errorRelease();
      uint64_t v404 = v658;
      (*(void (**)(uint64_t))(*(void *)v358[2].Kind + 280))(v357);
      uint64_t v731 = 0;
      uint64_t v483 = v719;
      uint64_t v484 = v725;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v719 + 48))(v404, 1, v725) == 1)
      {
        (*(void (**)(char *, uint64_t))(v483 + 8))(v686, v484);
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v650 + 8))(v404, v651);
        goto LABEL_151;
      }
      uint64_t v525 = (uint64_t)v631;
      ((void (*)(char *, char *, uint64_t))v727)(v631, v404, v484);
      uint64_t v526 = v686;
      if (sub_10096BBE0())
      {
        swift_errorRelease();
        uint64_t v527 = *(void (**)(uint64_t, uint64_t))(v483 + 8);
        v527(v525, v484);
        uint64_t v528 = v526;
        goto LABEL_178;
      }
      uint64_t v545 = v731;
      uint64_t v188 = v628;
      sub_1000DEDD8(v525, v628);
      uint64_t v731 = v545;
      unint64_t v546 = v712;
      if (v545)
      {
        swift_errorRelease();
        uint64_t v547 = *(void (**)(uint64_t, uint64_t))(v483 + 8);
        uint64_t v548 = v725;
        v547(v525, v725);
        v547((uint64_t)v526, v548);
        return (*(uint64_t (**)(char *, uint64_t))(v361 + 8))(v546, v730);
      }
      uint64_t v569 = v694;
      uint64_t v570 = v695;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v694 + 48))(v188, 1, v695) != 1)
      {
        long long v598 = v624;
        (*(void (**)(char *, uint64_t, uint64_t))(v569 + 32))(v624, v188, v570);
        uint64_t v599 = v569;
        if (v598[v663[11]] == 1)
        {
          uint64_t v600 = *((int *)v728 + 12);
          uint64_t v601 = (uint64_t)v616;
          uint64_t v602 = v525;
          uint64_t v603 = v725;
          (*(void (**)(char *, uint64_t, uint64_t))(v483 + 16))(v616, v602, v725);
          swift_storeEnumTagMultiPayload();
          *(void *)(v601 + v600) = v260;
          uint64_t v604 = v730;
          swift_storeEnumTagMultiPayload();
          swift_errorRetain();
          sub_1006C8248(v601);
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t))(v729 + 8))(v601, v604);
          (*(void (**)(char *, uint64_t))(v599 + 8))(v598, v695);
          uint64_t v605 = *(void (**)(char *, uint64_t))(v483 + 8);
          v605(v631, v603);
          v605(v686, v603);
          goto LABEL_151;
        }
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v569 + 8))(v598, v695);
        uint64_t v527 = *(void (**)(uint64_t, uint64_t))(v483 + 8);
        uint64_t v484 = v725;
        v527(v525, v725);
        uint64_t v528 = v686;
LABEL_178:
        v527((uint64_t)v528, v484);
        goto LABEL_151;
      }
      swift_errorRelease();
      unint64_t v571 = *(void (**)(uint64_t, uint64_t))(v483 + 8);
      uint64_t v572 = v725;
      v571(v525, v725);
      v571((uint64_t)v526, v572);
LABEL_86:
      long long v261 = *(void (**)(void, uint64_t))(v670 + 8);
      uint64_t v262 = (void (*)(void, void))v188;
LABEL_101:
      uint64_t v263 = v687;
      goto LABEL_150;
    case 0x10u:
      uint64_t v264 = v698;
      uint64_t v265 = v712;
      uint64_t v266 = v730;
      v166(v698, (unsigned __int8 *)v712, v730);
      long long v267 = *((_OWORD *)v264 + 1);
      v738[0] = *(_OWORD *)v264;
      v738[1] = v267;
      v738[2] = *((_OWORD *)v264 + 2);
      uint64_t v739 = *((void *)v264 + 6);
      long long v734 = v720;
      long long v735 = v721;
      long long v736 = v724;
      uint64_t v737 = (uint64_t)v722;
      type metadata accessor for Ingestion.CollectCapturedContent();
      uint64_t v268 = sub_100243DB8((uint64_t)v738);
      uint64_t v269 = sub_100437D58(v268);
      uint64_t v271 = sub_10086C890((uint64_t)v738, v269, v270, 0x4000);
      sub_10063ADA8();
      uint64_t v272 = v731;
      sub_10059C450(v271);
      uint64_t v731 = v272;
      if (v272)
      {
        swift_release();
        sub_1002458B0((uint64_t)v738);
        return (*(uint64_t (**)(char *, uint64_t))(v729 + 8))(v265, v266);
      }
      swift_release();
      sub_1002458B0((uint64_t)v738);
      goto LABEL_151;
    case 0x12u:
      uint64_t v273 = v163;
      uint64_t v168 = v730;
      v166(v163, (unsigned __int8 *)v712, v730);
      uint64_t v169 = v725;
      uint64_t v170 = v723;
      uint64_t v274 = &v163[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v172 = v719;
      uint64_t v173 = (uint64_t)v714;
      (*(void (**)(char *, char *, uint64_t))(v719 + 32))(v714, v273, v169);
      uint64_t v174 = v718;
      uint64_t v175 = (uint64_t)v704;
      (*((void (**)(char *, char *, void))v718 + 4))(v704, v274, v170);
      uint64_t v275 = v731;
      sub_1006DF600(v173, 0);
      if (v275)
      {
LABEL_28:
        (*((void (**)(uint64_t, void (*)(void, void, void)))v174 + 1))(v175, v170);
        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v173, v169);
        return (*(uint64_t (**)(char *, uint64_t))(v729 + 8))(v712, v168);
      }
      sub_1006E0E5C(v175, 0);
      uint64_t v731 = 0;
      (*((void (**)(uint64_t, void (*)(void, void, void)))v174 + 1))(v175, v170);
      uint64_t v436 = *(void (**)(void, uint64_t))(v172 + 8);
      unsigned int v437 = &v741;
LABEL_111:
      v436(*(v437 - 32), v169);
      goto LABEL_151;
    case 0x15u:
      unint64_t v276 = (uint64_t *)v699;
      v166(v699, (unsigned __int8 *)v712, v730);
      uint64_t v277 = *v276;
      if ((*v276 & 0x8000000000000000) == 0)
      {
        int64_t v278 = v721;
        size_t v279 = v724;
        if ((*(unsigned char *)(v277 + 137) & 0x80) != 0)
        {
          uint64_t v385 = v731;
          sub_1006CCB00();
          uint64_t v280 = v729;
          uint64_t v731 = v385;
          uint64_t v281 = (uint64_t)v690;
          if (v385)
          {
LABEL_74:
            swift_release();
            return (*(uint64_t (**)(char *, uint64_t))(v280 + 8))(v712, v730);
          }
        }
        else
        {
          uint64_t v280 = v729;
          uint64_t v281 = (uint64_t)v690;
        }
        unint64_t v386 = v720;
        long long v734 = v720;
        long long v735 = v278;
        uint64_t v387 = v722;
        long long v736 = v279;
        uint64_t v737 = (uint64_t)v722;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v388 = swift_dynamicCastClass();
        if (v388)
        {
          uint64_t v389 = v388;
          uint64_t v390 = v388 + *(void *)(*(void *)v388 + 576);
          uint64_t v391 = *(void (**)(char *, uint64_t, uint64_t))(v719 + 16);
          uint64_t v392 = (uint64_t)v668;
          v391(v668, v390, v725);
          if (*(unsigned char *)(v389 + 112) == 3)
          {
            uint64_t v393 = *(void *)(v389 + 96);
            swift_errorRetain();
          }
          else
          {
            uint64_t v393 = 0;
          }
          swift_retain();
          uint64_t v438 = v731;
          sub_1006DF600(v392, v393);
          if (v438)
          {
            swift_release();
            swift_errorRelease();
            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v719 + 8))(v392, v725);
            return (*(uint64_t (**)(char *, uint64_t))(v729 + 8))(v712, v730);
          }
          uint64_t v443 = v392;
          uint64_t v444 = *(void (**)(uint64_t, uint64_t))(v719 + 8);
          uint64_t v445 = v725;
          v719 += 8;
          v444(v443, v725);
          swift_errorRelease();
          uint64_t v446 = (uint64_t)v645;
          v391(v645, v390, v445);
          int v447 = sub_1007B24CC();
          id v448 = *(void (**)(long long *))(v389 + 128);
          if (*(unsigned char *)(v389 + 112) == 3)
          {
            uint64_t v449 = *(void *)(v389 + 96);
            swift_errorRetain();
          }
          else
          {
            uint64_t v449 = 0;
          }
          sub_1006E26F0(v446, v447, v448, v449);
          uint64_t v731 = 0;
          swift_release();
          swift_errorRelease();
          uint64_t v494 = ((uint64_t (*)(uint64_t, uint64_t))v444)(v446, v725);
          goto LABEL_252;
        }
        long long v734 = v386;
        long long v735 = v278;
        long long v736 = v279;
        uint64_t v737 = (uint64_t)v387;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v430 = swift_dynamicCastClass();
        if (v430)
        {
          uint64_t v431 = v430;
          uint64_t v432 = v430 + *(void *)(*(void *)v430 + 576);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v719 + 16))(v281, v432, v725);
          int v433 = sub_1007B24CC();
          uint64_t v434 = *(void (**)(long long *))(v431 + 128);
          if (*(unsigned char *)(v431 + 112) == 3)
          {
            uint64_t v435 = *(void *)(v431 + 96);
            swift_errorRetain();
          }
          else
          {
            uint64_t v435 = 0;
          }
          swift_retain();
          uint64_t v504 = v731;
          sub_1006E26F0(v281, v433, v434, v435);
          uint64_t v731 = v504;
          if (v504)
          {
            swift_release();
            swift_errorRelease();
            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v719 + 8))(v281, v725);
            return (*(uint64_t (**)(char *, uint64_t))(v280 + 8))(v712, v730);
          }
          (*(void (**)(uint64_t, uint64_t))(v719 + 8))(v281, v725);
          swift_errorRelease();
          if (*(unsigned char *)(v431 + 112) == 3)
          {
            uint64_t v514 = *(void *)(v431 + 96);
            uint64_t v513 = *(void *)(v431 + 104);
            swift_errorRetain();
            uint64_t v515 = v731;
            sub_1006DF600(v432, v514);
            uint64_t v731 = v515;
            if (v515)
            {
              swift_release();
              uint64_t v499 = v514;
              uint64_t v500 = v513;
              goto LABEL_168;
            }
            swift_release();
            uint64_t v566 = v514;
            uint64_t v567 = v513;
            goto LABEL_251;
          }
          uint64_t v494 = swift_release();
LABEL_252:
          uint64_t v258 = v708;
          uint64_t v608 = v644;
          uint64_t v609 = v643;
          size_t v610 = v642;
          (*(void (**)(uint64_t))(*(void *)v277 + 528))(v494);
          uint64_t v611 = v669;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v669 + 48))(v610, 1, v258) == 1)
          {
            swift_release();
            (*(void (**)(char *, uint64_t))(v609 + 8))(v610, v608);
            goto LABEL_151;
          }
          uint64_t v612 = (uint64_t)v632;
          (*(void (**)(char *, char *, uint64_t))(v611 + 32))(v632, v610, v258);
          if (*(unsigned char *)(v277 + 112) == 3)
          {
            uint64_t v613 = *(void *)(v277 + 96);
            swift_errorRetain();
          }
          else
          {
            uint64_t v613 = 0;
          }
          sub_1006C93E8(v612, v613);
          swift_errorRelease();
          swift_release();
          long long v261 = *(void (**)(void, uint64_t))(v669 + 8);
          uint64_t v262 = (void (*)(void, void))v612;
LABEL_24:
          uint64_t v263 = v258;
LABEL_150:
          v261(v262, v263);
          goto LABEL_151;
        }
        long long v734 = v386;
        long long v735 = v278;
        long long v736 = v279;
        uint64_t v737 = (uint64_t)v387;
        type metadata accessor for Ingestion.FetchContent();
        uint64_t v494 = swift_dynamicCastClass();
        if (v494)
        {
          if (*(unsigned char *)(v494 + 112) != 3) {
            goto LABEL_252;
          }
          uint64_t v495 = *(void *)(v494 + 96);
          uint64_t v496 = *(void *)(v494 + 104);
          uint64_t v497 = v494 + *(void *)(*(void *)v494 + 576);
          swift_retain();
          sub_10009C5FC(v495, v496, 3);
          uint64_t v498 = v731;
          sub_1006DF600(v497, v495);
          uint64_t v731 = v498;
          if (v498)
          {
            swift_release();
            uint64_t v499 = v495;
            uint64_t v500 = v496;
LABEL_168:
            sub_1000D31F8(v499, v500, 3);
            goto LABEL_74;
          }
        }
        else
        {
          long long v734 = v386;
          long long v735 = v278;
          long long v736 = v279;
          uint64_t v737 = (uint64_t)v387;
          type metadata accessor for Ingestion.MergeItems();
          uint64_t v538 = swift_dynamicCastClass();
          if (v538)
          {
            uint64_t v539 = v538;
            uint64_t v540 = (uint64_t)v627;
            (*(void (**)(char *, uint64_t, uint64_t))(v719 + 16))(v627, v538 + *(void *)(*(void *)v538 + 584), v725);
            if (*(unsigned char *)(v539 + 112) == 3)
            {
              uint64_t v541 = *(void *)(v539 + 96);
              swift_errorRetain();
            }
            else
            {
              uint64_t v541 = 0;
            }
            swift_retain();
            uint64_t v568 = v731;
            sub_1006DF600(v540, v541);
            uint64_t v731 = v568;
            if (v568)
            {
              swift_errorRelease();
              swift_release_n();
              (*(void (**)(uint64_t, uint64_t))(v719 + 8))(v540, v725);
              return (*(uint64_t (**)(char *, uint64_t))(v280 + 8))(v712, v730);
            }
            swift_errorRelease();
            swift_release();
            uint64_t v494 = (*(uint64_t (**)(uint64_t, uint64_t))(v719 + 8))(v540, v725);
            goto LABEL_252;
          }
          long long v734 = v278;
          long long v735 = v386;
          long long v736 = v387;
          uint64_t v737 = (uint64_t)v279;
          type metadata accessor for Propagation.PropagationJob();
          uint64_t v563 = swift_dynamicCastClass();
          if (v563)
          {
            uint64_t v564 = v563;
            (*((void (**)(char *, uint64_t, void))v718 + 2))(v626, v563 + *(void *)(*(void *)v563 + 576), v723);
            if (*(unsigned char *)(v564 + 112) == 3)
            {
              uint64_t v565 = *(void *)(v564 + 96);
              swift_errorRetain();
            }
            else
            {
              uint64_t v565 = 0;
            }
            swift_retain();
            uint64_t v614 = (uint64_t)v626;
            uint64_t v615 = v731;
            sub_1006E0E5C((uint64_t)v626, v565);
            uint64_t v731 = v615;
            if (v615)
            {
              swift_errorRelease();
              swift_release_n();
              (*((void (**)(uint64_t, void (*)(void, void, void)))v718 + 1))(v614, v723);
              goto LABEL_151;
            }
            swift_errorRelease();
            swift_release();
            uint64_t v494 = (*((uint64_t (**)(uint64_t, void (*)(void, void, void)))v718 + 1))(v614, v723);
            goto LABEL_252;
          }
          long long v734 = v386;
          long long v735 = v278;
          long long v736 = v279;
          uint64_t v737 = (uint64_t)v387;
          type metadata accessor for Materialization.MaterializeItem();
          uint64_t v494 = swift_dynamicCastClass();
          if (!v494 || *(unsigned char *)(v494 + 112) != 3) {
            goto LABEL_252;
          }
          uint64_t v495 = *(void *)(v494 + 96);
          uint64_t v496 = *(void *)(v494 + 104);
          uint64_t v606 = v494 + *(void *)(*(void *)v494 + 576);
          swift_retain();
          sub_10009C5FC(v495, v496, 3);
          uint64_t v607 = v731;
          sub_1006DCA18(v606, 0, v495);
          uint64_t v731 = v607;
          if (v607)
          {
            swift_release();
            sub_1000D31F8(v495, v496, 3);
            swift_release();
            goto LABEL_151;
          }
        }
        swift_release();
        uint64_t v566 = v495;
        uint64_t v567 = v496;
LABEL_251:
        uint64_t v494 = sub_1000D31F8(v566, v567, 3);
        goto LABEL_252;
      }
      uint64_t v383 = v277 & 0x7FFFFFFFFFFFFFFFLL;
      if ((*(unsigned char *)((v277 & 0x7FFFFFFFFFFFFFFFLL) + 0x89) & 0x80) != 0)
      {
        uint64_t v418 = v731;
        sub_1006CCB00();
        uint64_t v377 = v729;
        uint64_t v419 = v730;
        uint64_t v731 = v418;
        uint64_t v420 = v712;
        uint64_t v384 = v719;
        if (v418)
        {
          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v377 + 8))(v420, v419);
        }
      }
      else
      {
        uint64_t v377 = v729;
        uint64_t v384 = v719;
      }
      uint64_t v421 = v720;
      uint64_t v422 = v721;
      long long v734 = v720;
      long long v735 = v721;
      uint64_t v423 = (uint64_t)v724;
      unint64_t v424 = v722;
      long long v736 = v724;
      uint64_t v737 = (uint64_t)v722;
      type metadata accessor for Propagation.PropagationJob();
      uint64_t v425 = swift_dynamicCastClass();
      if (v425)
      {
        uint64_t v426 = v425;
        uint64_t v427 = (uint64_t)v654;
        (*(void (**)(char *, uint64_t, uint64_t))(v384 + 16))(v654, v425 + *(void *)(*(void *)v425 + 576), v725);
        if (*(unsigned char *)(v426 + 112) == 3)
        {
          uint64_t v428 = *(void *)(v426 + 96);
          swift_errorRetain();
        }
        else
        {
          uint64_t v428 = 0;
        }
        size_t v479 = v662;
        uint64_t v480 = v665;
        unsigned int v481 = v664;
        swift_retain();
        uint64_t v482 = v731;
        sub_1006DF600(v427, v428);
        uint64_t v731 = v482;
        if (v482)
        {
          swift_errorRelease();
          swift_release_n();
          (*(void (**)(uint64_t, uint64_t))(v384 + 8))(v427, v725);
          return (*(uint64_t (**)(char *, uint64_t))(v377 + 8))(v712, v730);
        }
        swift_errorRelease();
        swift_release();
        uint64_t v501 = (*(uint64_t (**)(uint64_t, uint64_t))(v384 + 8))(v427, v725);
        uint64_t v502 = v647;
        uint64_t v503 = v646;
LABEL_189:
        uint64_t v542 = v648;
        goto LABEL_229;
      }
      long long v734 = v422;
      long long v735 = v421;
      long long v736 = v424;
      uint64_t v737 = v423;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v450 = swift_dynamicCastClass();
      if (v450)
      {
        uint64_t v451 = v450;
        id v452 = v718;
        uint64_t v453 = (uint64_t)v634;
        id v454 = v723;
        (*((void (**)(char *, uint64_t, void))v718 + 2))(v634, v450 + *(void *)(*(void *)v450 + 576), v723);
        if (*(unsigned char *)(v451 + 112) == 3)
        {
          uint64_t v455 = *(void *)(v451 + 96);
          swift_errorRetain();
        }
        else
        {
          uint64_t v455 = 0;
        }
        uint64_t v480 = v665;
        unsigned int v481 = v664;
        swift_retain();
        uint64_t v537 = v731;
        sub_1006E0E5C(v453, v455);
        uint64_t v731 = v537;
        if (v537)
        {
          swift_release();
          swift_errorRelease();
          swift_release();
          (*((void (**)(uint64_t, void (*)(void, void, void)))v452 + 1))(v453, v454);
          return (*(uint64_t (**)(char *, uint64_t))(v377 + 8))(v712, v730);
        }
        swift_release();
        swift_errorRelease();
        uint64_t v501 = (*((uint64_t (**)(uint64_t, void (*)(void, void, void)))v452 + 1))(v453, v454);
        uint64_t v502 = v647;
        uint64_t v503 = v646;
        size_t v479 = v662;
        goto LABEL_189;
      }
      long long v734 = v422;
      long long v735 = v421;
      long long v736 = v424;
      uint64_t v737 = v423;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      uint64_t v501 = swift_dynamicCastClass();
      if (v501)
      {
        if (*(unsigned char *)(v501 + 112) != 3)
        {
LABEL_227:
          uint64_t v502 = v647;
          uint64_t v503 = v646;
          size_t v479 = v662;
          uint64_t v542 = v648;
          goto LABEL_228;
        }
      }
      else
      {
        long long v734 = v422;
        long long v735 = v421;
        long long v736 = v424;
        uint64_t v737 = v423;
        type metadata accessor for Ingestion.FetchContent();
        uint64_t v501 = swift_dynamicCastClass();
        uint64_t v542 = v648;
        if (!v501 || *(unsigned char *)(v501 + 112) != 3)
        {
          uint64_t v502 = v647;
          uint64_t v503 = v646;
          size_t v479 = v662;
LABEL_228:
          uint64_t v480 = v665;
          unsigned int v481 = v664;
LABEL_229:
          (*(void (**)(uint64_t))(*(void *)v383 + 528))(v501);
          if ((*(unsigned int (**)(char *, uint64_t, void *))(v503 + 48))(v481, 1, v502) == 1)
          {
            swift_release();
            (*(void (**)(char *, uint64_t))(v480 + 8))(v481, v542);
          }
          else
          {
            (*(void (**)(char *, char *, void *))(v503 + 32))(v479, v481, v502);
            uint64_t v573 = v633;
            sub_100690E68(v502, v633);
            if (*(unsigned char *)(v383 + 112) == 3)
            {
              uint64_t v574 = *(void *)(v383 + 96);
              swift_errorRetain();
            }
            else
            {
              uint64_t v574 = 0;
            }
            sub_1006C93E8(v573, v574);
            swift_errorRelease();
            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v669 + 8))(v573, v708);
            (*(void (**)(char *, void *))(v503 + 8))(v479, v502);
          }
          goto LABEL_151;
        }
      }
      uint64_t v553 = *(void *)(v501 + 96);
      uint64_t v554 = *(void *)(v501 + 104);
      uint64_t v555 = v501 + *(void *)(*(void *)v501 + 576);
      swift_retain();
      sub_10009C5FC(v553, v554, 3);
      uint64_t v556 = v731;
      sub_1006E0E5C(v555, v553);
      uint64_t v731 = v556;
      if (v556)
      {
        swift_release();
        sub_1000D31F8(v553, v554, 3);
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v377 + 8))(v712, v730);
      }
      swift_release();
      uint64_t v501 = sub_1000D31F8(v553, v554, 3);
      goto LABEL_227;
    case 0x1Bu:
      unint64_t v282 = v165;
      unint64_t v283 = v165;
      uint64_t v284 = v712;
      uint64_t v285 = v730;
      v166((char *)v283, (unsigned __int8 *)v712, v730);
      uint64_t v286 = v708;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v287 = v684;
        uint64_t v288 = v683;
        uint64_t v289 = v685;
        (*(void (**)(char *, unint64_t, uint64_t))(v684 + 32))(v683, v282, v685);
        uint64_t v290 = v732;
        Swift::String v291 = (void *)__chkstk_darwin(*(uint64_t *)((char *)&v732->Kind + qword_100B0B360));
        *(&v616 - 2) = (char *)v290;
        *(&v616 - 1) = v288;
        uint64_t v292 = v731;
        sub_10026BFF4(v291, (void (*)(void))sub_1006F7C10);
        uint64_t v293 = v729;
        uint64_t v731 = v292;
        if (!v292)
        {
          os_log_t v294 = *(void (**)(char *, char *, uint64_t))(v287 + 16);
          uint64_t v295 = v660;
          v294(v660, v288, v289);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            uint64_t v296 = sub_10096C890();
            long long v733 = (unsigned __int8 *)v294;
            uint64_t v297 = v296;
            uint64_t v298 = v723;
            uint64_t v299 = swift_getTupleTypeMetadata2();
            (*(void (**)(char *, uint64_t))(*(void *)(v297 - 8) + 8))(&v295[*(int *)(v299 + 48)], v297);
            (*((void (**)(char *, void (*)(void, void, void)))v718 + 1))(v295, v298);
            uint64_t v300 = (uint64_t)v661;
            ((void (*)(char *, char *, uint64_t))v733)(v661, v288, v289);
LABEL_96:
            swift_storeEnumTagMultiPayload();
            sub_1006C93E8(v300, 0);
            (*(void (**)(uint64_t, uint64_t))(v669 + 8))(v300, v286);
            (*(void (**)(char *, uint64_t))(v287 + 8))(v288, v289);
            goto LABEL_151;
          }
          goto LABEL_107;
        }
      }
      else
      {
        uint64_t v287 = v681;
        uint64_t v288 = v680;
        uint64_t v289 = v682;
        (*(void (**)(char *, unint64_t, uint64_t))(v681 + 32))(v680, v282, v682);
        uint64_t v362 = v732;
        uint64_t v363 = (void *)__chkstk_darwin(*(uint64_t *)((char *)&v732->Kind + qword_100B0B360));
        *(&v616 - 2) = (char *)v362;
        *(&v616 - 1) = v288;
        uint64_t v364 = v731;
        sub_10026BFF4(v363, (void (*)(void))sub_1006F7C2C);
        uint64_t v293 = v729;
        uint64_t v731 = v364;
        if (!v364)
        {
          int v405 = *(void (**)(char *, char *, uint64_t))(v287 + 16);
          uint64_t v295 = v659;
          v405(v659, v288, v289);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            uint64_t v406 = sub_10096C890();
            long long v733 = (unsigned __int8 *)v405;
            uint64_t v407 = v406;
            uint64_t v408 = v725;
            uint64_t v409 = swift_getTupleTypeMetadata2();
            (*(void (**)(char *, uint64_t))(*(void *)(v407 - 8) + 8))(&v295[*(int *)(v409 + 48)], v407);
            (*(void (**)(char *, uint64_t))(v719 + 8))(v295, v408);
            uint64_t v300 = (uint64_t)v661;
            ((void (*)(char *, char *, uint64_t))v733)(v661, v288, v289);
            goto LABEL_96;
          }
LABEL_107:
          uint64_t v429 = *(void (**)(char *, uint64_t))(v287 + 8);
          v429(v288, v289);
          v429(v295, v289);
          goto LABEL_151;
        }
      }
      (*(void (**)(char *, uint64_t))(v287 + 8))(v288, v289);
      return (*(uint64_t (**)(char *, uint64_t))(v293 + 8))(v284, v285);
    case 0x1Eu:
      v166((char *)v164, (unsigned __int8 *)v712, v730);
      uint64_t v301 = v725;
      uint64_t v302 = v720;
      uint64_t v303 = swift_getAssociatedConformanceWitness();
      uint64_t v304 = (uint64_t)v722;
      Swift::String v305 = v721;
      uint64_t v306 = v723;
      uint64_t v307 = swift_getAssociatedConformanceWitness();
      long long v734 = (void (*)(void, void, void))v301;
      long long v735 = v306;
      long long v736 = (void (*)(void, void))v303;
      uint64_t v737 = v307;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_37;
      }
      uint64_t v365 = v719;
      unint64_t v366 = v676;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v719 + 32))(v676, v164, v301);
      long long v734 = v302;
      long long v735 = v305;
      long long v736 = v724;
      uint64_t v737 = v304;
      uint64_t v367 = type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
      uint64_t v368 = sub_100437D58(v367);
      uint64_t v370 = sub_1003A9380(v366, v368, v369, 0);
      sub_10063ADA8();
      uint64_t v371 = v731;
      sub_10059C450(v370);
      uint64_t v731 = v371;
      (*(void (**)(char *, uint64_t))(v365 + 8))(v366, v301);
      swift_release();
      goto LABEL_151;
    case 0x1Fu:
      uint64_t v308 = v623;
      uint64_t v309 = (void (*)(char *, char *, uint64_t))v166;
      uint64_t v310 = v730;
      v309(v623, v712, v730);
      uint64_t v311 = v725;
      uint64_t v312 = swift_getAssociatedConformanceWitness();
      uint64_t v313 = v723;
      uint64_t v314 = swift_getAssociatedConformanceWitness();
      long long v734 = (void (*)(void, void, void))v311;
      long long v735 = v313;
      long long v736 = (void (*)(void, void))v312;
      uint64_t v737 = v314;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      uint64_t v315 = (unsigned __int8 *)&v308[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v230 = *(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8);
        v230((char *)v315, v183);
        id v231 = v308;
LABEL_40:
        v230(v231, v183);
        goto LABEL_151;
      }
      long long v733 = v315;
      uint64_t v372 = v308;
      uint64_t v373 = v719;
      uint64_t v374 = v691;
      (*(void (**)(uint64_t, char *, uint64_t))(v719 + 32))(v691, v372, v311);
      uint64_t v375 = v731;
      uint64_t v376 = v692;
      sub_1000DEDD8(v374, v692);
      uint64_t v377 = v729;
      uint64_t v731 = v375;
      if (v375)
      {
        (*(void (**)(uint64_t, uint64_t))(v373 + 8))(v374, v311);
        (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v733, v183);
        return (*(uint64_t (**)(char *, uint64_t))(v377 + 8))(v712, v310);
      }
      uint64_t v410 = v670;
      uint64_t v411 = v657;
      uint64_t v412 = v376;
      uint64_t v413 = v687;
      (*(void (**)(char *, uint64_t, uint64_t))(v670 + 16))(v657, v412, v687);
      uint64_t v414 = v694;
      uint64_t v415 = v695;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v694 + 48))(v411, 1, v695) == 1)
      {
        (*(void (**)(char *, uint64_t))(v410 + 8))(v411, v413);
      }
      else
      {
        uint64_t v466 = v641;
        uint64_t v467 = v640;
        uint64_t v468 = v663;
        (*(void (**)(char *, char *, int *))(v641 + 16))(v640, v411, v663);
        (*(void (**)(char *, uint64_t))(v414 + 8))(v411, v415);
        uint64_t v469 = *(void *)&v467[v468[9]];
        id v470 = v468;
        uint64_t v410 = v670;
        (*(void (**)(char *, int *))(v466 + 8))(v467, v470);
        if ((v469 & 1) == 0)
        {
          uint64_t v471 = v725;
          uint64_t v472 = v687;
          uint64_t v473 = v692;
          uint64_t v474 = v691;
LABEL_149:
          (*(void (**)(uint64_t, uint64_t))(v410 + 8))(v473, v472);
          (*(void (**)(uint64_t, uint64_t))(v373 + 8))(v474, v471);
          long long v261 = *(void (**)(void, uint64_t))(*(void *)(v183 - 8) + 8);
          uint64_t v262 = (void (*)(void, void))v733;
          uint64_t v263 = v183;
          goto LABEL_150;
        }
      }
      sub_1000DBD10();
      uint64_t v475 = swift_allocError();
      *uint64_t v476 = 2;
      uint64_t v474 = v691;
      uint64_t v477 = v731;
      sub_1006DCA18(v691, 3, v475);
      uint64_t v731 = v477;
      uint64_t v473 = v692;
      if (v477)
      {
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v410 + 8))(v473, v687);
        (*(void (**)(uint64_t, uint64_t))(v373 + 8))(v474, v725);
        (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v733, v183);
        return (*(uint64_t (**)(char *, uint64_t))(v377 + 8))(v712, v730);
      }
      swift_errorRelease();
      uint64_t v471 = v725;
      uint64_t v472 = v687;
      goto LABEL_149;
    case 0x27u:
      uint64_t v316 = v702;
      v166(v702, (unsigned __int8 *)v712, v730);
      uint64_t v317 = v725;
      uint64_t v318 = v720;
      uint64_t v319 = swift_getAssociatedConformanceWitness();
      uint64_t v320 = (uint64_t)v722;
      uint64_t v321 = v723;
      uint64_t v322 = swift_getAssociatedConformanceWitness();
      long long v734 = (void (*)(void, void, void))v317;
      long long v735 = v321;
      long long v736 = (void (*)(void, void))v319;
      uint64_t v737 = v322;
      uint64_t v323 = type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, uint64_t))(*(void *)(v323 - 8) + 8))(v316, v323);
        goto LABEL_151;
      }
      uint64_t v378 = v719;
      uint64_t v379 = v688;
      (*(void (**)(uint64_t, char *, uint64_t))(v719 + 32))(v688, v316, v317);
      uint64_t v380 = v731;
      uint64_t v381 = v678;
      sub_1000DEDD8(v379, v678);
      uint64_t v382 = v729;
      uint64_t v731 = v380;
      if (v380)
      {
        (*(void (**)(uint64_t, uint64_t))(v378 + 8))(v379, v317);
        return (*(uint64_t (**)(char *, uint64_t))(v382 + 8))(v712, v730);
      }
      uint64_t v416 = v694;
      uint64_t v417 = v695;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v694 + 48))(v381, 1, v695) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v378 + 8))(v379, v317);
        long long v261 = *(void (**)(void, uint64_t))(v670 + 8);
        uint64_t v262 = (void (*)(void, void))v381;
        goto LABEL_101;
      }
      int v478 = v649;
      (*(void (**)(char *, uint64_t, uint64_t))(v416 + 32))(v649, v381, v417);
      if (*(void *)&v478[v663[9]])
      {
        (*(void (**)(char *, uint64_t))(v416 + 8))(v478, v417);
        (*(void (**)(uint64_t, uint64_t))(v378 + 8))(v688, v317);
      }
      else
      {
        long long v734 = v318;
        long long v735 = v721;
        long long v736 = v724;
        uint64_t v737 = v320;
        uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v519 = sub_100437D58(ItemMetadata);
        uint64_t v520 = v688;
        uint64_t v522 = sub_1008AA66C(v688, v519, v521, 0x80000000000);
        sub_10058364C(0x2000000);
        sub_10063ADA8();
        uint64_t v524 = v731;
        int v523 = v732;
        sub_10059C450(v522);
        uint64_t v731 = v524;
        if (!v524)
        {
          unint64_t v557 = *(void (**)(uint64_t))(**(void **)(v523[2].Kind + 16) + 848);
          uint64_t v558 = swift_retain();
          v557(v558);
          swift_release();
        }
        swift_release();
        (*(void (**)(char *, uint64_t))(v694 + 8))(v649, v695);
        (*(void (**)(uint64_t, uint64_t))(v378 + 8))(v520, v317);
      }
      goto LABEL_151;
    case 0x2Au:
      uint64_t v324 = (uint64_t *)((char *)&v732->Kind + qword_100B0B350);
      swift_beginAccess();
      uint64_t v325 = *v324;
      uint64_t *v324 = (uint64_t)_swiftEmptyArrayStorage;
      uint64_t v326 = *(void *)(v325 + 16);
      if (v326)
      {
        uint64_t v327 = v325 + 40;
        do
        {
          uint64_t v328 = *(void (**)(uint64_t *))(v327 - 8);
          uint64_t v742 = 0;
          swift_retain();
          v328(&v742);
          swift_release();
          v327 += 16;
          --v326;
        }
        while (v326);
      }
      swift_bridgeObjectRelease();
      goto LABEL_151;
    default:
      goto LABEL_151;
  }
}

uint64_t sub_1006C7C58(void *a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = a1;
  char v7 = a2 & 1;
  char v27 = a2;
  sub_1006BE104(0, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, (uint64_t)sub_1006F7A54, (uint64_t)v25, (uint64_t)&type metadata for () + 8, (uint64_t)&type metadata for ());
  uint64_t v8 = *(void (**)(void *))(**(void **)(*(void *)(v3 + 32) + 16) + 864);
  swift_retain();
  v8(a1);
  uint64_t v9 = swift_release();
  if (a3)
  {
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_10002689C(a1, v10);
    sub_10059A0E8(0x662065657274202BLL, (void *)0xEA00000000003A73, v10, v11);
    uint64_t v12 = a1[3];
    uint64_t v13 = a1[4];
    sub_10002689C(a1, v12);
    uint64_t v9 = sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1006F7B14, v4, v12, (uint64_t)&type metadata for () + 8, v13);
  }
  uint64_t v14 = *(void **)(v4 + qword_100B0B360);
  __chkstk_darwin(v9);
  uint64_t v23 = v4;
  uint64_t v24 = a1;
  uint64_t v15 = sub_10026BFF4(v14, (void (*)(void))sub_1006F7A74);
  __chkstk_darwin(v15);
  v22[2] = a1;
  v22[3] = v4;
  LOBYTE(v23) = v7;
  sub_1006BE104(0, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, (uint64_t)sub_1006F7A90, (uint64_t)v22, (uint64_t)&type metadata for () + 8, (uint64_t)v25);
  if (a3)
  {
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_10002689C(a1, v17);
    sub_10059A0E8(0x662065657274202BLL, (void *)0xEA00000000003A70, v17, v18);
    uint64_t v19 = a1[3];
    uint64_t v20 = a1[4];
    sub_10002689C(a1, v19);
    uint64_t v16 = sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1006F7ACC, v4, v19, (uint64_t)&type metadata for () + 8, v20);
  }
  __chkstk_darwin(v16);
  uint64_t v23 = v4;
  uint64_t v24 = a1;
  return sub_10026BFF4(v14, (void (*)(void))sub_1006F7AB0);
}

uint64_t sub_1006C7F60()
{
  return *(void *)(v0 + 112);
}

uint64_t sub_1006C7F68()
{
  return *(unsigned __int8 *)(v0 + 122);
}

uint64_t sub_1006C7F70()
{
  swift_retain();
  sub_10058FBF4((uint64_t)&v1);
  swift_release();
  return v1;
}

uint64_t sub_1006C7FBC()
{
  sub_1006F2F34();

  return swift_retain();
}

uint64_t sub_1006C7FE4()
{
  sub_1006F2F3C();

  return swift_retain();
}

id sub_1006C800C()
{
  uint64_t v0 = (void *)sub_1006F7A30();

  return v0;
}

uint64_t sub_1006C8038()
{
  if (fp_task_tracker_is_cancelled(*(void **)(*(void *)(v0 + 200) + 16))) {
    return 1;
  }
  else {
    return *(unsigned __int8 *)(v0 + 184);
  }
}

uint64_t sub_1006C806C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 224);
  type metadata accessor for FSOrFPJob();
  v2._uint64_t countAndFlagsBits = v1;
  v2._object = &type metadata for String;
  Filename.init(rawValue:)(v2);
  sub_10096BA30();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  return sub_10096CB60();
}

uint64_t sub_1006C816C()
{
  return sub_10026BE58(v0, (void (*)(uint64_t *__return_ptr))sub_1006F799C) & 1;
}

uint64_t sub_1006C81B8()
{
  return sub_10026BF28(v0, (void (*)(uint64_t *__return_ptr))sub_1006F7964);
}

uint64_t sub_1006C8200()
{
  return sub_10026BF28(v0, (void (*)(uint64_t *__return_ptr))sub_1006F9580);
}

uint64_t sub_1006C8248(uint64_t a1)
{
  long long v3 = *(_OWORD *)(*(void *)v1 + 592);
  v8[0] = *(_OWORD *)(*(void *)v1 + 576);
  v8[1] = v3;
  uint64_t v4 = type metadata accessor for PersistenceTrigger();
  uint64_t result = __chkstk_darwin(v4);
  if (*(unsigned char *)(v1 + qword_100ADA018) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v8 - v6, a1, v4);
    swift_beginAccess();
    sub_10096C1C0();
    sub_10096C180();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1006C838C(uint64_t a1, void *a2)
{
  id v58 = a2;
  uint64_t v65 = a1;
  long long v3 = (void *)*v2;
  uint64_t v4 = sub_10002B7CC(&qword_100AD6540);
  __chkstk_darwin(v4 - 8);
  uint64_t v60 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v3[74];
  uint64_t v7 = v3[72];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = v3[75];
  uint64_t v10 = v3[73];
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v66 = v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v64 = v9;
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v67 = AssociatedTypeWitness;
  uint64_t v68 = v11;
  uint64_t v69 = AssociatedConformanceWitness;
  uint64_t v70 = v13;
  uint64_t v14 = type metadata accessor for ReconciliationID();
  uint64_t v61 = *(void **)(v14 - 8);
  uint64_t v15 = v61[8];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v59 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v63 = (char *)&v50 - v17;
  uint64_t v62 = sub_10096C890();
  uint64_t v18 = *(void *)(v62 - 8);
  uint64_t v19 = __chkstk_darwin(v62);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v50 - v23;
  if (*(void *)((char *)v2 + qword_100B0B3C8))
  {
    uint64_t v56 = *(void *)((char *)v2 + qword_100B0B3C8);
    uint64_t v57 = v18;
    uint64_t v25 = v65;
    if (v65 < 0)
    {
      uint64_t v67 = v7;
      uint64_t v68 = v10;
      uint64_t v31 = v66;
      uint64_t v54 = v10;
      uint64_t v32 = v64;
      uint64_t v69 = v66;
      uint64_t v70 = v64;
      type metadata accessor for Propagation.PropagationJob();
      uint64_t v55 = v25 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v33 = swift_dynamicCastClass();
      if (v33)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v24, v33 + *(void *)(*(void *)v33 + 576), AssociatedTypeWitness);
        LODWORD(v55) = 253;
        uint64_t v30 = v61;
        uint64_t v29 = v62;
        uint64_t v10 = v54;
        goto LABEL_12;
      }
      uint64_t v34 = v54;
      uint64_t v67 = v54;
      uint64_t v68 = v7;
      uint64_t v69 = v32;
      uint64_t v70 = v31;
      type metadata accessor for ItemJob();
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        return result;
      }
      uint64_t v10 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v24, result + *(void *)(*(void *)result + 576), v11);
      LODWORD(v55) = 255;
    }
    else
    {
      uint64_t v54 = v15;
      uint64_t v67 = v10;
      uint64_t v68 = v7;
      uint64_t v26 = v64;
      uint64_t v27 = v66;
      uint64_t v69 = v64;
      uint64_t v70 = v66;
      type metadata accessor for Propagation.PropagationJob();
      uint64_t v28 = swift_dynamicCastClass();
      if (v28)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v24, v28 + *(void *)(*(void *)v28 + 576), v11);
        LODWORD(v55) = 252;
        uint64_t v30 = v61;
        uint64_t v29 = v62;
        goto LABEL_12;
      }
      uint64_t v67 = v7;
      uint64_t v68 = v10;
      uint64_t v69 = v27;
      uint64_t v70 = v26;
      type metadata accessor for ItemJob();
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        return result;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v24, result + *(void *)(*(void *)result + 576), AssociatedTypeWitness);
      LODWORD(v55) = 251;
    }
    uint64_t v30 = v61;
    uint64_t v29 = v62;
LABEL_12:
    swift_storeEnumTagMultiPayload();
    ((void (*)(char *, void, uint64_t, uint64_t))v30[7])(v24, 0, 1, v14);
    uint64_t v35 = v57;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v21, v24, v29);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v30[6])(v21, 1, v14) == 1)
    {
      uint64_t v36 = *(void (**)(char *, uint64_t))(v35 + 8);
      v36(v24, v29);
      return ((uint64_t (*)(char *, uint64_t))v36)(v21, v29);
    }
    else
    {
      uint64_t v50 = v7;
      uint64_t v37 = (void *)v30[4];
      uint64_t v54 = (uint64_t)(v30 + 4);
      uint64_t v61 = v37;
      ((void (*)(char *, char *, uint64_t))v37)(v63, v21, v14);
      swift_retain();
      uint64_t v38 = (void *)sub_10096ABE0();
      id v58 = v38;
      id v39 = [v38 domain];
      uint64_t v40 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v52 = v41;
      uint64_t v53 = v40;

      id v51 = [v38 code];
      uint64_t v42 = v64;
      LODWORD(v65) = sub_1006153F8();
      uint64_t v43 = sub_10096C270();
      uint64_t v44 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v60, 1, 1, v43);
      uint64_t v45 = v59;
      ((void (*)(char *, char *, uint64_t))v30[2])(v59, v63, v14);
      unint64_t v46 = (*((unsigned __int8 *)v30 + 80) + 106) & ~(unint64_t)*((unsigned __int8 *)v30 + 80);
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = 0;
      *(void *)(v47 + 24) = 0;
      *(void *)(v47 + 32) = v50;
      *(void *)(v47 + 40) = v10;
      *(void *)(v47 + 48) = v66;
      *(void *)(v47 + 56) = v42;
      uint64_t v48 = v53;
      *(void *)(v47 + 64) = v56;
      *(void *)(v47 + 72) = v48;
      id v49 = v51;
      *(void *)(v47 + 80) = v52;
      *(void *)(v47 + 88) = v49;
      *(void *)(v47 + 96) = 0;
      *(unsigned char *)(v47 + 104) = v55;
      *(unsigned char *)(v47 + 105) = v65;
      ((void (*)(unint64_t, char *, uint64_t))v61)(v47 + v46, v45, v14);
      swift_retain();
      sub_1007E0F04(v44, (uint64_t)&unk_100ADA380, v47);
      swift_release();

      swift_release();
      ((void (*)(char *, uint64_t))v30[1])(v63, v14);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v24, v62);
    }
  }
  return result;
}

void sub_1006C8B2C()
{
  uint64_t v1 = v0;
  if ((sub_10026BE58((void *)v0, (void (*)(uint64_t *__return_ptr))sub_1006F799C) & 1) == 0)
  {
    sub_10026BFF4((void *)v0, sub_1006F7D10);
    Swift::String v2 = (void *)sub_10026BF28((void *)v0, (void (*)(uint64_t *__return_ptr))sub_1006F7964);
    [v2 addWatcher:v0];

    if ((*(unsigned char *)(v0 + 184) & 1) == 0
      && (fp_task_tracker_is_cancelled(*(void **)(*(void *)(v0 + 200) + 16)) & 1) == 0
      && (*(unsigned char *)(v0 + 184) & 1) == 0
      && (*(unsigned char *)(v0 + 113) & 0x20) != 0)
    {
      type metadata accessor for DiskImport.Monitor();
      uint64_t v3 = swift_retain();
      uint64_t v4 = sub_1003E8A98(v3, 600, 600, 60);
      uint64_t v5 = qword_100B0B3B8;
      *(void *)(v1 + qword_100B0B3B8) = v4;
      swift_release();
      if (*(void *)(v1 + v5))
      {
        swift_retain();
        sub_1003E8BEC();
        swift_release();
      }
    }
  }
}

uint64_t sub_1006C8CB4()
{
  uint64_t v1 = v0;
  uint64_t result = sub_10026BE58(v0, (void (*)(uint64_t *__return_ptr))sub_1006F799C);
  if (result)
  {
    uint64_t v3 = qword_100B0B3B8;
    if (*(void *)&v0[qword_100B0B3B8])
    {
      swift_retain();
      sub_1003E9FB8(1);
      swift_release();
    }
    *(void *)&v0[v3] = 0;
    swift_release();
    uint64_t v4 = (void *)sub_10026BF28(v0, (void (*)(uint64_t *__return_ptr))sub_1006F7964);
    [v4 removeWatcher:v1];

    return sub_10026BFF4(v1, sub_1006F7D10);
  }
  return result;
}

void *sub_1006C8DB0()
{
  return sub_1006CBEA0(&qword_100B0B3E0, &qword_100ACC000, (void **)&qword_100B0B0C8);
}

void *sub_1006C8DDC()
{
  return sub_1006CBEA0(&qword_100B0B3D0, &qword_100ACC1B0, (void **)&qword_100B0B618);
}

uint64_t sub_1006C8E08(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 576);
  uint64_t v4 = *(void *)(*(void *)v1 + 584);
  uint64_t v5 = *(void *)(*(void *)v1 + 592);
  uint64_t v6 = *(void *)(*(void *)v1 + 600);
  sub_100615324(a1, (uint64_t)v11);
  if (!v12) {
    return sub_10002B770((uint64_t)v11, qword_100ACE608);
  }
  sub_10002689C(v11, v12);
  sub_10096D220();
  sub_1000268E0((uint64_t)v11);
  swift_beginAccess();
  swift_retain();
  v11[0] = v3;
  v11[1] = v4;
  v11[2] = v5;
  uint64_t v12 = v6;
  type metadata accessor for FSOrFPJob();
  sub_10096BA80();
  sub_10096BAB0();
  swift_endAccess();
  uint64_t result = sub_10061541C(a1);
  if ((result & 0x8000) != 0)
  {
    uint64_t v8 = *(void *)(v1 + qword_100ADA038);
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      __break(1u);
    }
    else {
      *(void *)(v1 + qword_100ADA038) = v10;
    }
  }
  return result;
}

uint64_t sub_1006C8FB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 576);
  uint64_t v4 = *(void *)(*(void *)v1 + 584);
  uint64_t v5 = *(void *)(*(void *)v1 + 592);
  uint64_t v6 = *(void *)(*(void *)v1 + 600);
  sub_100615324(a1, (uint64_t)v11);
  if (!v12) {
    return sub_10002B770((uint64_t)v11, qword_100ACE608);
  }
  sub_10002689C(v11, v12);
  sub_10096D220();
  sub_1000268E0((uint64_t)v11);
  swift_beginAccess();
  v11[0] = v3;
  v11[1] = v4;
  v11[2] = v5;
  uint64_t v12 = v6;
  type metadata accessor for FSOrFPJob();
  sub_10096BA80();
  sub_10096BAB0();
  swift_endAccess();
  uint64_t result = sub_10061541C(a1);
  if ((result & 0x8000) != 0)
  {
    uint64_t v8 = *(void *)(v1 + qword_100ADA038);
    BOOL v9 = __OFSUB__(v8, 1);
    uint64_t v10 = v8 - 1;
    if (v9) {
      __break(1u);
    }
    else {
      *(void *)(v1 + qword_100ADA038) = v10;
    }
  }
  return result;
}

uint64_t sub_1006C9158(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(*(void *)v1 + 576);
  uint64_t v4 = *(void *)(*(void *)v1 + 584);
  uint64_t v5 = *(void *)(*(void *)v1 + 592);
  uint64_t v6 = *(void *)(*(void *)v1 + 600);
  sub_100615324(a1, (uint64_t)v9);
  if (v10)
  {
    sub_10002689C(v9, v10);
    sub_10096D220();
    sub_1000268E0((uint64_t)v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v9[0] = v3;
    v9[1] = v4;
    v9[2] = v5;
    uint64_t v10 = v6;
    type metadata accessor for FSOrFPJob();
    sub_10096BAA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v9[0];
    if ((~v9[0] & 0xF000000000000007) == 0)
    {
      swift_retain();
      return v2;
    }
    return v7;
  }
  else
  {
    sub_10002B770((uint64_t)v9, qword_100ACE608);
    swift_retain();
  }
  return v2;
}

BOOL sub_1006C92EC(char a1)
{
  if (a1)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(**(void **)(v1[5] + 16) + 304);
    uint64_t v6 = swift_retain();
    LOBYTE(v5) = v5(v6);
    swift_release();
    if (v5)
    {
      uint64_t v4 = (void *)(v1[24] + 40);
      return *v4 > 0;
    }
  }
  else
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(v1[4] + 16) + 304);
    uint64_t v3 = swift_retain();
    LOBYTE(v2) = v2(v3);
    swift_release();
    if (v2)
    {
      uint64_t v4 = (void *)(v1[24] + 32);
      return *v4 > 0;
    }
  }
  return 0;
}

uint64_t sub_1006C93D8(uint64_t a1)
{
  return sub_1006CCC7C(a1, 0);
}

uint64_t sub_1006C93E0(uint64_t a1)
{
  return sub_1006CCC7C(a1, 1);
}

uint64_t sub_1006C93E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_10096B480();
  uint64_t v38 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v39 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *(_OWORD *)(v5 + 592);
  v41[0] = *(_OWORD *)(v5 + 576);
  v41[1] = v8;
  BOOL v9 = (void *)type metadata accessor for TestingOperation();
  uint64_t v10 = *(v9 - 1);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  sub_100697000(0, v9, (uint64_t)&v31 - v14);
  swift_beginAccess();
  sub_100033BE8((uint64_t *)&unk_100ADA368);
  swift_getWitnessTable();
  sub_10096BA80();
  sub_10096B9E0();
  uint64_t v16 = *(void (**)(char *, void *))(v10 + 8);
  v16(v15, v9);
  uint64_t result = swift_endAccess();
  uint64_t v37 = v40;
  if (v40)
  {
    uint64_t v36 = v6;
    id v18 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v19 = *(void (**)(char *, uint64_t, void *))(v10 + 16);
    v19(v13, a1, v9);
    uint64_t v20 = sub_10096B470();
    os_log_type_t v21 = sub_10096C5A0();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      os_log_t v35 = v20;
      uint64_t v23 = swift_slowAlloc();
      int v33 = v22;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v34 = swift_slowAlloc();
      *(void *)&v41[0] = v34;
      uint64_t v32 = v24;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v31 = v24 + 4;
      v19(v15, (uint64_t)v13, v9);
      v16(v13, v9);
      unint64_t v25 = sub_100696CEC(v9);
      unint64_t v27 = v26;
      v16(v15, v9);
      uint64_t v40 = sub_100719D44(v25, v27, (uint64_t *)v41);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      uint64_t v20 = v35;
      _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v33, "unblocking waiters on %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v16(v13, v9);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v36);
    uint64_t v28 = *(void *)(v37 + 16);
    if (v28)
    {
      uint64_t v29 = v37 + 40;
      do
      {
        uint64_t v30 = *(void (**)(_OWORD *))(v29 - 8);
        *(void *)&v41[0] = a2;
        swift_retain();
        v30(v41);
        swift_release();
        v29 += 16;
        --v28;
      }
      while (v28);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1006C9844(char a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  int v9 = a1 & 1;
  uint64_t v10 = sub_10096B480();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (!v9)
    {
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
LABEL_14:
    if (a3)
    {
      int v22 = (uint64_t *)(v5 + qword_100B0B3A8);
      uint64_t v23 = *(void *)(v5 + qword_100B0B3A8);
      uint64_t v24 = v23 + 1;
      if (!__OFADD__(v23, 1))
      {
        *int v22 = v24;
        goto LABEL_19;
      }
    }
    else
    {
      int v22 = (uint64_t *)(v5 + qword_100B0B3A8);
      uint64_t v25 = *(void *)(v5 + qword_100B0B3A8);
      uint64_t v24 = v25 - 1;
      if (!__OFSUB__(v25, 1))
      {
        *int v22 = v24;
        BOOL v18 = __OFSUB__(0, a2);
        a2 = -a2;
        if (v18)
        {
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
LABEL_19:
        uint64_t v26 = v22[1];
        uint64_t v27 = v26 + a2;
        if (!__OFADD__(v26, a2))
        {
          v22[1] = v27;
          uint64_t v28 = 1;
          if ((a3 & 1) == 0) {
            uint64_t v28 = -1;
          }
          if ((a4 & 1) == 0) {
            uint64_t v28 = 0;
          }
          uint64_t v29 = qword_100B0B3B0;
          uint64_t v30 = *(void *)(v5 + qword_100B0B3B0);
          BOOL v18 = __OFADD__(v30, v28);
          uint64_t v31 = v30 + v28;
          if (!v18)
          {
            *(void *)(v5 + qword_100B0B3B0) = v31;
            uint64_t result = sub_1006CDE58(v24, v27, v9);
            if (*v22 < 1 || v22[1] <= 0)
            {
              *int v22 = 0;
              v22[1] = 0;
            }
            else
            {
              if ((*(void *)(v5 + v29) & 0x8000000000000000) == 0) {
                return result;
              }
              if (*(unsigned char *)(v5 + 121) == 1)
              {
LABEL_42:
                uint64_t result = sub_10096CE20();
                __break(1u);
                return result;
              }
              id v32 = (id)fpfs_current_or_default_log();
              sub_10096B490();
              int v33 = sub_10096B470();
              os_log_type_t v34 = sub_10096C5B0();
              if (os_log_type_enabled(v33, v34))
              {
                os_log_t v35 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)os_log_t v35 = 0;
                _os_log_impl((void *)&_mh_execute_header, v33, v34, "🤯 [GlobalProgress] pausableDownloadsCounter counter is negative", v35, 2u);
                swift_slowDealloc();
              }

              uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
            }
            *(void *)(v5 + v29) = 0;
            return result;
          }
          goto LABEL_39;
        }
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  a2 = 1;
  if (v9) {
    goto LABEL_14;
  }
  if (a3)
  {
LABEL_4:
    uint64_t v14 = (uint64_t *)(v5 + qword_100B0B3A0);
    uint64_t v15 = *(void *)(v5 + qword_100B0B3A0);
    uint64_t v16 = v15 + 1;
    if (!__OFADD__(v15, 1))
    {
      *uint64_t v14 = v16;
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_8:
  uint64_t v14 = (uint64_t *)(v5 + qword_100B0B3A0);
  uint64_t v17 = *(void *)(v5 + qword_100B0B3A0);
  uint64_t v16 = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  *uint64_t v14 = v16;
  BOOL v18 = __OFSUB__(0, a2);
  a2 = -a2;
  if (v18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_10:
  uint64_t v19 = v14[1];
  uint64_t v20 = v19 + a2;
  if (__OFADD__(v19, a2))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v14[1] = v20;
  uint64_t result = sub_1006CDE58(v16, v20, 0);
  if (*v14 < 1 || v14[1] <= 0)
  {
    *uint64_t v14 = 0;
    v14[1] = 0;
  }
  return result;
}

uint64_t sub_1006C9B7C(unsigned char *a1, int a2)
{
  uint64_t v4 = v2;
  LODWORD(v44) = a2;
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = sub_10096B480();
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  __chkstk_darwin(v7);
  uint64_t v48 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v6[72];
  uint64_t v10 = v6[74];
  uint64_t v11 = type metadata accessor for SnapshotItem();
  id v49 = *(void (**)(char *, uint64_t))(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v45 = (char *)v43 - v12;
  uint64_t v13 = sub_10096C890();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  uint64_t v51 = v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v52 = (char *)v43 - v18;
  uint64_t v19 = v6[73];
  uint64_t v20 = v6[75];
  uint64_t v53 = (char *)v9;
  uint64_t v54 = v19;
  uint64_t v55 = v10;
  uint64_t v56 = v20;
  type metadata accessor for Propagation.CreateItem();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    if (*(unsigned char *)(result + 138)) {
      return result;
    }
LABEL_6:
    int v22 = &a1[*(void *)(*(void *)a1 + 576)];
    uint64_t v23 = v52;
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(**((void **)v4 + 4) + 240))(v22, 1);
    if (v3) {
      return result;
    }
    v43[1] = v22;
    v43[2] = 0;
    uint64_t v25 = v50;
    uint64_t v24 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v17, v23, v50);
    uint64_t v26 = v49;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v49 + 6))(v17, 1, v11) == 1)
    {
      uint64_t v4 = *(void (**)(char *, uint64_t))(v24 + 8);
      uint64_t v51 = v24 + 8;
      v4(v17, v25);
      id v27 = (id)fpfs_current_or_default_log();
      uint64_t v28 = (unsigned __int8 *)v48;
      sub_10096B490();
      swift_retain();
      uint64_t v11 = sub_10096B470();
      os_log_type_t v29 = sub_10096C5B0();
      if (os_log_type_enabled((os_log_t)v11, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = (char *)swift_slowAlloc();
        uint64_t v53 = v45;
        *(_DWORD *)uint64_t v30 = 136446210;
        uint64_t v44 = v30 + 4;
        swift_getAssociatedTypeWitness();
        id v49 = v4;
        swift_getAssociatedConformanceWitness();
        uint64_t v31 = sub_10096D220();
        uint64_t v57 = sub_100719D44(v31, v32, (uint64_t *)&v53);
        sub_10096C8C0();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v11, v29, "[GlobalProgress] accountUploadJob, snapshot missing for itemID %{public}s", v30, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v47);
        return ((uint64_t (*)(char *, uint64_t))v49)(v52, v50);
      }
      goto LABEL_19;
    }
    int v33 = v45;
    (*((void (**)(char *, char *, uint64_t))v26 + 4))(v45, v17, v11);
    uint64_t v28 = (unsigned __int8 *)&v33[*(int *)(v11 + 48)];
    int v34 = *v28;
    uint64_t result = type metadata accessor for ItemMetadata();
    if (v34 == 1) {
      goto LABEL_23;
    }
    uint64_t v35 = *(void *)&v28[*(int *)(result + 100)];
    char v36 = (char)v44;
    if ((v44 & 1) != 0 || a1[112] == 3)
    {
LABEL_22:
      sub_1006C9844(0, v35, v36 & 1, 1);
LABEL_23:
      (*((void (**)(char *, uint64_t))v26 + 1))(v33, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v52, v25);
    }
    uint64_t v37 = (void *)((char *)v4 + qword_100B0B390);
    uint64_t v38 = *(void *)((char *)v4 + qword_100B0B390);
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39)
    {
      __break(1u);
    }
    else
    {
      *uint64_t v37 = v40;
      uint64_t v41 = v37[1];
      if (v35)
      {
        BOOL v39 = __OFADD__(v41, v35);
        uint64_t v42 = v41 + v35;
        if (v39)
        {
          __break(1u);
LABEL_19:
          swift_release();

          (*(void (**)(unsigned __int8 *, uint64_t))(v46 + 8))(v28, v47);
          return ((uint64_t (*)(char *, uint64_t))v4)(v52, v25);
        }
        goto LABEL_21;
      }
      BOOL v39 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (!v39)
      {
LABEL_21:
        v37[1] = v42;
        goto LABEL_22;
      }
    }
    __break(1u);
    return result;
  }
  uint64_t v53 = (char *)v9;
  uint64_t v54 = v19;
  uint64_t v55 = v10;
  uint64_t v56 = v20;
  type metadata accessor for Propagation.UpdateItem();
  uint64_t result = swift_dynamicCastClass();
  if (result && (*(unsigned char *)(result + *(void *)(*(void *)result + 640)) & 8) != 0) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1006CA1C4(uint64_t a1, int a2)
{
  int v179 = a2;
  uint64_t v212 = a1;
  uint64_t v3 = *v2;
  uint64_t v4 = (*v2)[72];
  uint64_t v5 = (*v2)[74];
  uint64_t v6 = type metadata accessor for SnapshotItem();
  uint64_t v176 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v171 = (char *)&v162 - v7;
  uint64_t v178 = v8;
  uint64_t v177 = sub_10096C890();
  unint64_t v180 = *(char **)(v177 - 8);
  uint64_t v9 = __chkstk_darwin(v177);
  uint64_t v175 = (char *)&v162 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v188 = (char *)&v162 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v194 = sub_10096C890();
  uint64_t v193 = *(void *)(v194 - 8);
  uint64_t v13 = __chkstk_darwin(v194);
  uint64_t v192 = (char *)&v162 - v14;
  uint64_t v199 = AssociatedTypeWitness;
  uint64_t v196 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v168 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v170 = (char *)&v162 - v18;
  __chkstk_darwin(v17);
  uint64_t v191 = (char *)&v162 - v19;
  uint64_t v20 = sub_10096B480();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v208 = v20;
  uint64_t v209 = v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v204 = (uint8_t *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v190 = (char *)&v162 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v172 = (char *)&v162 - v27;
  __chkstk_darwin(v26);
  unint64_t v181 = (char *)&v162 - v28;
  uint64_t v29 = v3[73];
  uint64_t v30 = v3[75];
  uint64_t v31 = type metadata accessor for SnapshotItem();
  uint64_t v185 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v174 = (char *)&v162 - v32;
  uint64_t v186 = v33;
  uint64_t v187 = sub_10096C890();
  uint64_t v189 = *(void *)(v187 - 8);
  uint64_t v34 = __chkstk_darwin(v187);
  uint64_t v184 = (char *)&v162 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v195 = (char *)&v162 - v36;
  uint64_t v37 = (uint8_t *)swift_getAssociatedTypeWitness();
  uint64_t v38 = sub_10096C890();
  uint64_t v202 = *(void *)(v38 - 8);
  uint64_t v203 = (uint8_t *)v38;
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v201 = (char *)&v162 - v40;
  uint64_t v207 = v37;
  uint64_t v206 = (uint8_t *)*((void *)v37 - 1);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v169 = (char *)&v162 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v173 = (char *)&v162 - v44;
  __chkstk_darwin(v43);
  uint64_t v198 = (char *)&v162 - v45;
  uint64_t v205 = v4;
  v213[0] = (uint64_t)v4;
  v213[1] = v29;
  uint64_t v182 = v29;
  uint64_t v197 = v5;
  v213[2] = v5;
  v213[3] = v30;
  uint64_t v183 = v30;
  uint64_t v46 = type metadata accessor for ItemReconciliation();
  uint64_t v47 = sub_10096C890();
  uint64_t v200 = *(void *)(v47 - 8);
  uint64_t v48 = __chkstk_darwin(v47);
  uint64_t v50 = (char *)&v162 - v49;
  uint64_t v210 = *(void *)(v46 - 8);
  uint64_t v51 = __chkstk_darwin(v48);
  uint64_t v53 = (char *)&v162 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __chkstk_darwin(v51);
  uint64_t v56 = (char *)&v162 - v55;
  __chkstk_darwin(v54);
  id v58 = (char *)&v162 - v57;
  uint64_t v59 = v2;
  uint64_t v60 = v211;
  uint64_t v61 = v212 + *(void *)(*(void *)v212 + 576);
  uint64_t result = sub_1000DEDD8(v61, (uint64_t)v50);
  if (v60) {
    return result;
  }
  uint64_t v166 = v47;
  uint64_t v165 = v61;
  uint64_t v164 = v56;
  uint64_t v163 = v53;
  uint64_t v167 = v58;
  uint64_t v63 = v210;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48))(v50, 1, v46) != 1)
  {
    uint64_t v71 = v167;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v167, v50, v46);
    uint64_t v162 = v46;
    uint64_t v72 = &v71[*(int *)(v46 + 52)];
    uint64_t v73 = v201;
    uint64_t v74 = v202;
    uint64_t v75 = v203;
    (*(void (**)(char *, char *, uint8_t *))(v202 + 16))(v201, v72, v203);
    uint64_t v76 = v206;
    uint64_t v77 = v207;
    if ((*((unsigned int (**)(char *, uint64_t, uint8_t *))v206 + 6))(v73, 1, v207) == 1)
    {
      uint64_t v211 = 0;
      (*(void (**)(char *, uint8_t *))(v74 + 8))(v73, v75);
      uint64_t v78 = v193;
      uint64_t v79 = v192;
      uint64_t v80 = v194;
      (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v192, v71, v194);
      uint64_t v81 = v196;
      uint64_t v82 = (uint8_t *)v199;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48))(v79, 1, v199) == 1)
      {
        (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
        id v83 = (id)fpfs_current_or_default_log();
        uint64_t v84 = v190;
        sub_10096B490();
        uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        uint64_t v86 = v164;
        uint64_t v87 = v162;
        v85(v164, v71, v162);
        uint64_t v88 = sub_10096B470();
        os_log_type_t v89 = sub_10096C5B0();
        if (os_log_type_enabled(v88, v89))
        {
          uint64_t v90 = (uint8_t *)swift_slowAlloc();
          uint64_t v212 = swift_slowAlloc();
          v213[0] = v212;
          uint64_t v207 = v90;
          *(_DWORD *)uint64_t v90 = 136315138;
          uint64_t v206 = v90 + 4;
          uint64_t v91 = v163;
          v85(v163, v86, v87);
          uint64_t v92 = *(void (**)(char *, uint64_t))(v63 + 8);
          v92(v86, v87);
          uint64_t v93 = sub_10082F470(v87);
          uint64_t v94 = v87;
          unint64_t v96 = v95;
          v92(v91, v94);
          uint64_t v214 = sub_100719D44(v93, v96, v213);
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v88, v89, "RT entry missing both sides, cannot account download job: %s", v207, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v209 + 8))(v190, v208);
          return ((uint64_t (*)(char *, uint64_t))v92)(v167, v94);
        }
        else
        {
          uint64_t v133 = *(void (**)(char *, uint64_t))(v63 + 8);
          v133(v86, v87);

          (*(void (**)(char *, uint64_t))(v209 + 8))(v84, v208);
          return ((uint64_t (*)(char *, uint64_t))v133)(v167, v87);
        }
      }
      uint64_t v99 = v191;
      (*(void (**)(char *, char *, uint8_t *))(v81 + 32))(v191, v79, v82);
      uint64_t v100 = *(void (**)(char *, uint64_t))(*v59[4] + 240);
      uint64_t v101 = v59;
      uint64_t v102 = v81;
      uint64_t v103 = v188;
      uint64_t v104 = v211;
      v100(v99, 1);
      uint64_t v105 = v162;
      if (v104)
      {
        (*(void (**)(char *, uint8_t *))(v102 + 8))(v99, v82);
        return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v71, v105);
      }
      uint64_t v211 = v101;
      uint64_t v98 = v180;
      uint64_t v134 = v175;
      uint64_t v135 = v177;
      (*((void (**)(char *, char *, uint64_t))v180 + 2))(v175, v103, v177);
      uint64_t v136 = v176;
      int v137 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v176 + 48))(v134, 1, v178);
      uint64_t v138 = (void (*)(char *, uint64_t))*((void *)v98 + 1);
      if (v137 == 1)
      {
        uint64_t v211 = 0;
        uint64_t v212 = (uint64_t)v138;
        unint64_t v180 = v98 + 8;
        v138(v134, v135);
        id v139 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v117 = v82;
        uint64_t v107 = v196;
        uint64_t v140 = *(void (**)(char *, char *, uint8_t *))(v196 + 16);
        uint64_t v98 = v170;
        v140(v170, v191, v82);
        uint64_t v141 = sub_10096B470();
        os_log_type_t v142 = sub_10096C5B0();
        int v143 = v142;
        if (os_log_type_enabled(v141, v142))
        {
          uint64_t v144 = swift_slowAlloc();
          LODWORD(v207) = v143;
          uint64_t v145 = (uint8_t *)v144;
          v213[0] = swift_slowAlloc();
          uint64_t v206 = v145;
          *(_DWORD *)uint64_t v145 = 136315138;
          uint64_t v204 = v145 + 4;
          uint64_t v146 = v168;
          v140(v168, v98, v82);
          uint64_t v147 = *(void (**)(char *, uint8_t *))(v107 + 8);
          v147(v98, v82);
          uint64_t v127 = v147;
          swift_getAssociatedConformanceWitness();
          uint64_t v148 = sub_10096D220();
          unint64_t v150 = v149;
          v147(v146, v117);
          uint64_t v214 = sub_100719D44(v148, v150, v213);
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v141, (os_log_type_t)v207, "item missing from FS snapshot, cannot account for download job: %s", v206, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v209 + 8))(v172, v208);
          ((void (*)(char *, uint64_t))v212)(v188, v177);
          uint64_t v132 = v191;
          goto LABEL_21;
        }
        goto LABEL_32;
      }
      v138(v103, v135);
      (*(void (**)(char *, uint8_t *))(v196 + 8))(v191, v82);
      uint64_t v107 = (uint64_t)v171;
      uint64_t v153 = v178;
      (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v171, v134, v178);
      uint64_t v141 = sub_1006F389C(v107);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v136 + 8))(v107, v153);
    }
    else
    {
      uint64_t v97 = v198;
      (*((void (**)(char *, char *, uint8_t *))v76 + 4))(v198, v73, v77);
      uint64_t v98 = v195;
      (*(void (**)(char *, uint64_t))(*v2[5] + 240))(v97, 1);
      uint64_t v211 = v2;
      uint64_t v106 = v189;
      uint64_t v107 = (uint64_t)v184;
      uint64_t v108 = v187;
      (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v184, v98, v187);
      uint64_t v109 = v185;
      uint64_t v110 = v186;
      int v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v185 + 48))(v107, 1, v186);
      uint64_t v114 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
      uint64_t v113 = v106 + 8;
      uint64_t v112 = v114;
      uint64_t v105 = v162;
      if (v111 == 1)
      {
        uint64_t v211 = 0;
        uint64_t v212 = (uint64_t)v112;
        v112(v107, v108);
        id v115 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v189 = v113;
        uint64_t v116 = v206;
        uint64_t v117 = v207;
        uint64_t v118 = (void (*)(char *, char *, uint8_t *))*((void *)v206 + 2);
        uint64_t v119 = v173;
        v118(v173, v198, v207);
        uint64_t v120 = sub_10096B470();
        uint64_t v121 = v108;
        os_log_type_t v122 = sub_10096C5B0();
        uint64_t v205 = v120;
        BOOL v123 = os_log_type_enabled(v120, v122);
        uint64_t v63 = v210;
        if (v123)
        {
          uint64_t v124 = (uint8_t *)swift_slowAlloc();
          v213[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v124 = 136315138;
          uint64_t v203 = v124 + 4;
          uint64_t v204 = v124;
          uint64_t v125 = v169;
          v118(v169, v119, v117);
          uint64_t v126 = (void (*)(char *, uint8_t *))*((void *)v116 + 1);
          v126(v119, v117);
          uint64_t v127 = v126;
          swift_getAssociatedConformanceWitness();
          uint64_t v128 = sub_10096D220();
          unint64_t v130 = v129;
          v126(v125, v117);
          uint64_t v214 = sub_100719D44(v128, v130, v213);
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          uint64_t v131 = v205;
          _os_log_impl((void *)&_mh_execute_header, v205, v122, "item missing from FP snapshot, cannot account for download job: %s", v204, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v209 + 8))(v181, v208);
          ((void (*)(char *, uint64_t))v212)(v195, v187);
          uint64_t v132 = v198;
LABEL_21:
          v127(v132, v117);
          return (*(uint64_t (**)(char *, uint64_t))(v210 + 8))(v167, v162);
        }
        uint64_t v152 = (void (*)(char *, uint8_t *))*((void *)v116 + 1);
        v152(v119, v117);

        (*(void (**)(char *, uint64_t))(v209 + 8))(v181, v208);
        ((void (*)(char *, uint64_t))v212)(v195, v121);
        v152(v198, v117);
        return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v167, v105);
      }
      v112((uint64_t)v98, v108);
      (*((void (**)(char *, uint8_t *))v206 + 1))(v198, v207);
      uint64_t v151 = (uint64_t)v174;
      (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(v174, v107, v110);
      uint64_t v141 = sub_1006F389C(v151);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v151, v110);
      uint64_t v63 = v210;
    }
    uint64_t v117 = 0;
    char v154 = v179;
    if ((v179 & 1) != 0 || *(unsigned char *)(v212 + 112) == 3)
    {
LABEL_36:
      sub_1006C9844(1, (uint64_t)v141, v154 & 1, (*(void *)(v212 + 136) & 0x4000000000) != 0);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v167, v105);
    }
    uint64_t v155 = (void **)((char *)v211 + qword_100B0B398);
    uint64_t v156 = *(uint64_t *)((char *)v211 + qword_100B0B398);
    BOOL v157 = __OFADD__(v156, 1);
    uint64_t v158 = v156 + 1;
    if (v157)
    {
      __break(1u);
    }
    else
    {
      *uint64_t v155 = v158;
      uint64_t v159 = v155[1];
      if (v141)
      {
        BOOL v157 = __OFADD__(v159, v141);
        id v160 = (char *)v141 + v159;
        if (v157)
        {
          __break(1u);
LABEL_32:
          uint64_t v161 = *(void (**)(char *, uint8_t *))(v107 + 8);
          v161(v98, v117);

          (*(void (**)(char *, uint64_t))(v209 + 8))(v172, v208);
          ((void (*)(char *, uint64_t))v212)(v188, v177);
          v161(v191, v117);
          return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v167, v105);
        }
        goto LABEL_35;
      }
      BOOL v157 = __OFADD__(v159, 1);
      id v160 = (char *)(v159 + 1);
      if (!v157)
      {
LABEL_35:
        v155[1] = v160;
        goto LABEL_36;
      }
    }
    __break(1u);
    return result;
  }
  uint64_t v211 = 0;
  (*(void (**)(char *, uint64_t))(v200 + 8))(v50, v166);
  id v64 = (id)fpfs_current_or_default_log();
  uint64_t v65 = v204;
  sub_10096B490();
  swift_retain();
  uint64_t v66 = sub_10096B470();
  os_log_type_t v67 = sub_10096C5B0();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    v213[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 136315138;
    swift_getAssociatedConformanceWitness();
    uint64_t v69 = sub_10096D220();
    uint64_t v214 = sub_100719D44(v69, v70, v213);
    sub_10096C8C0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "item missing from RT, cannot account for download job: %s", v68, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(uint8_t *, uint64_t))(v209 + 8))(v65, v208);
}

uint64_t sub_1006CB99C()
{
  return (*(unsigned __int8 *)(v0 + 113) >> 1) & 1;
}

uint64_t sub_1006CB9A8()
{
  return *(unsigned __int8 *)(v0 + 113) >> 7;
}

uint64_t sub_1006CB9B4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_10096B830();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)v0[8];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_10096B860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    long long v9 = *(_OWORD *)(v1 + 576);
    long long v11 = *(_OWORD *)(v1 + 592);
    long long v12 = v9;
    swift_getAssociatedTypeWitness();
    long long v13 = v11;
    *(void *)&long long v12 = type metadata accessor for UserRequest();
    *((void *)&v12 + 1) = &type metadata for NSecTimestamp;
    *(void *)&long long v13 = sub_10096B7D0();
    *((void *)&v13 + 1) = sub_100033BE8((uint64_t *)&unk_100ADA328);
    swift_getTupleTypeMetadata();
    sub_10096C1C0();
    swift_getAssociatedConformanceWitness();
    sub_10096BAA0();
    swift_bridgeObjectRelease();
    uint64_t v10 = v12;
    if ((void)v12) {
      swift_bridgeObjectRelease();
    }
    return v10 != 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006CBC14()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = sub_10096B830();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)v0[8];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_10096B860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    swift_beginAccess();
    uint64_t v9 = v1[75];
    uint64_t v10 = v1[73];
    swift_getAssociatedTypeWitness();
    swift_bridgeObjectRetain();
    long long v11 = (ValueMetadata *)v1[72];
    uint64_t v12 = v1[74];
    uint64_t v15 = v10;
    uint64_t v16 = v11;
    uint64_t v17 = v9;
    uint64_t v18 = v12;
    uint64_t v15 = type metadata accessor for UserRequest();
    uint64_t v16 = &type metadata for NSecTimestamp;
    uint64_t v17 = sub_10096B7D0();
    uint64_t v18 = sub_100033BE8((uint64_t *)&unk_100ADA328);
    swift_getTupleTypeMetadata();
    sub_10096C1C0();
    swift_getAssociatedConformanceWitness();
    sub_10096BAA0();
    swift_bridgeObjectRelease();
    uint64_t v13 = v15;
    if (v15) {
      swift_bridgeObjectRelease();
    }
    return v13 != 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1006CBE74()
{
  return sub_1006CBEA0(&qword_100B0B3D8, &qword_100ACC070, (void **)&qword_100B0B148);
}

void *sub_1006CBEA0(void *result, void *a2, void **a3)
{
  if ((*(unsigned char *)(v3 + *result) & 1) == 0)
  {
    *(unsigned char *)(v3 + *result) = 1;
    if (*a2 != -1) {
      swift_once();
    }
    uint64_t v5 = *a3;
    return [v5 addWatcher:v3];
  }
  return result;
}

id sub_1006CBF1C()
{
  uint64_t v1 = qword_100B0B3D8;
  if (*(unsigned char *)(v0 + qword_100B0B3D8) == 1)
  {
    if (qword_100ACC070 != -1) {
      swift_once();
    }
    id result = [(id)qword_100B0B148 removeWatcher:v0];
    *(unsigned char *)(v0 + v1) = 0;
  }
  return result;
}

void sub_1006CBF98(char a1)
{
  *(unsigned char *)(v1 + 122) = a1 & 1;
  sub_1006D5F48();
}

uint64_t sub_1006CBFA4()
{
  return sub_10026BFF4(v0, sub_1006F7DC4);
}

void *sub_1006CBFF8()
{
  if (*(void *)(v0 + 248))
  {
    uint64_t v1 = *(void **)(v0 + 248);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for SwappedDatabase();
    uint64_t v3 = (uint64_t *)swift_retain();
    uint64_t v1 = sub_1006174B0(v3);
    swift_release();
    *(void *)(v2 + 248) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t (*sub_1006CC0AC())()
{
  return j_j__swift_endAccess_0;
}

uint64_t (*sub_1006CC108())()
{
  return j__swift_endAccess_0;
}

void sub_1006CC164(void *a1)
{
  id v3 = (id)fpfs_adopt_log();
  id v4 = [a1 label];
  uint64_t v5 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v7 = v6;

  if (qword_100ACC120 != -1) {
    swift_once();
  }
  id v8 = [(id)qword_100B0B300 label];
  uint64_t v9 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v11 = v10;

  if (v9 == v5 && v11 == v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v13 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void (**)(void, id (*)(void *), void *))(*(void *)v1 + 2456);
    swift_retain();
    v19(0, sub_1006F7DBC, v1);
LABEL_15:
    swift_release();
    goto LABEL_16;
  }
  uint64_t v14 = (void *)sub_10026BF28(v1, (void (*)(uint64_t *__return_ptr))sub_1006F7964);
  id v15 = [v14 label];

  uint64_t v16 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v18 = v17;

  if (v16 == v5 && v18 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    swift_retain();
    sub_10035B320((uint64_t)"sharedSchedulerCanRun(_:)", 25, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1006F7DA0, (uint64_t)v1);
    goto LABEL_15;
  }
  char v20 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_14;
  }
  if (qword_100ACC1B0 != -1) {
    swift_once();
  }
  id v21 = [(id)qword_100B0B618 label];
  uint64_t v22 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v24 = v23;

  if (v22 == v5 && v24 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    swift_retain();
    sub_10035B320((uint64_t)"sharedSchedulerCanRun(_:)", 25, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1006F7D80, (uint64_t)v1);
    goto LABEL_15;
  }
  char v25 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_25;
  }
  if (qword_100ACC000 != -1) {
    swift_once();
  }
  id v26 = [(id)qword_100B0B0C8 label];
  uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v29 = v28;

  if (v27 == v5 && v29 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    swift_bridgeObjectRelease();
    swift_retain();
    sub_10035B320((uint64_t)"sharedSchedulerCanRun(_:)", 25, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1006F7D64, (uint64_t)v1);
    goto LABEL_15;
  }
  char v30 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_32;
  }
  if (qword_100ACC128 != -1) {
    swift_once();
  }
  id v31 = [(id)qword_100B0B308 label];
  uint64_t v32 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v34 = v33;

  if (v32 == v5 && v34 == v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v35 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      if (qword_100ACC070 != -1) {
        swift_once();
      }
      id v36 = [(id)qword_100B0B148 label];
      uint64_t v37 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v39 = v38;

      if (v37 == v5 && v39 == v7)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v40 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v40 & 1) == 0) {
          sub_10071538C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 111, 2, 810, a1);
        }
      }
      swift_retain();
      sub_10035B320((uint64_t)"sharedSchedulerCanRun(_:)", 25, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1006F7D44, (uint64_t)v1);
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  sub_1006CDCD4(0);
LABEL_16:
  id v41 = (id)fpfs_adopt_log();
}

uint64_t sub_1006CC7E4()
{
  uint64_t v1 = *(void (**)(uint64_t))(**(void **)(*(void *)(v0 + 32) + 16) + 832);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  id v3 = *(void (**)(uint64_t))(**(void **)(*(void *)(v0 + 40) + 16) + 832);
  uint64_t v4 = swift_retain();
  v3(v4);

  return swift_release();
}

uint64_t sub_1006CC8AC()
{
  uint64_t v1 = *(void (**)(uint64_t))(**(void **)(*(void *)(v0 + 32) + 16) + 840);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  id v3 = *(void (**)(uint64_t))(**(void **)(*(void *)(v0 + 40) + 16) + 840);
  uint64_t v4 = swift_retain();
  v3(v4);

  return swift_release();
}

void sub_1006CC974()
{
  uint64_t v1 = v0;
  id v2 = *(id *)(v0 + 64);
  sub_100270A48(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_1006F7D28, v1);

  id v3 = *(id *)(v1 + 64);
  sub_100270A48(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)Filename.init(rawValue:), 0);
}

uint64_t sub_1006CCA48()
{
  return sub_10026BFF4(v0, sub_1006F7D10);
}

id sub_1006CCA98()
{
  if (qword_100ACC1B0 != -1) {
    swift_once();
  }
  id result = [(id)qword_100B0B618 removeWatcher:v0];
  *(unsigned char *)(v0 + qword_100B0B3D0) = 0;
  return result;
}

void sub_1006CCB00()
{
  if (*(unsigned char *)(v0 + qword_100B0B3D0) == 1 && !*(void *)(v0 + qword_100ADA038))
  {
    char v2 = (*(uint64_t (**)(void))(**(void **)(v0 + 24) + 488))();
    if (!v1 && (v2 & 1) == 0) {
      sub_1006CCA98();
    }
  }
}

id sub_1006CCB9C()
{
  return sub_1006CCBB4((const char **)&selRef_addWatcher_);
}

id sub_1006CCBA8()
{
  return sub_1006CCBB4((const char **)&selRef_removeWatcher_);
}

id sub_1006CCBB4(const char **a1)
{
  if (qword_100ACC128 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_100B0B308;
  uint64_t v4 = *a1;

  return objc_msgSend(v3, v4, v1);
}

uint64_t sub_1006CCC24()
{
  ((void (*)(void))(*v0)[69])();
  return sub_1006DA850(v0);
}

uint64_t sub_1006CCC7C(uint64_t a1, int a2)
{
  LODWORD(v71) = a2;
  uint64_t v88 = a1;
  uint64_t v4 = (*v2)[73];
  uint64_t v5 = (*v2)[74];
  uint64_t v6 = (*v2)[75];
  *(void *)&long long v107 = (*v2)[72];
  uint64_t v3 = v107;
  *((void *)&v107 + 1) = v4;
  *(void *)&long long v108 = v5;
  *((void *)&v108 + 1) = v6;
  uint64_t v89 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v85 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v74 = (char *)&v65 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_10096C890();
  uint64_t v72 = *(void *)(v9 - 8);
  uint64_t v73 = v9;
  __chkstk_darwin(v9);
  *(void *)&long long v77 = (char *)&v65 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  *(void *)&long long v78 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  *(void *)&long long v76 = (char *)&v65 - v13;
  uint64_t v86 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v66 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  *(void *)&long long v75 = (char *)&v65 - v16;
  uint64_t v68 = v5;
  uint64_t v70 = v3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v67 = v6;
  uint64_t v69 = v4;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v107 = AssociatedTypeWitness;
  *((void *)&v107 + 1) = v11;
  uint64_t v79 = v11;
  *(void *)&long long v108 = AssociatedConformanceWitness;
  *((void *)&v108 + 1) = v18;
  uint64_t v19 = type metadata accessor for ReconciliationID();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v65 - v21;
  uint64_t v23 = sub_10096C890();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v83 = v23;
  uint64_t v84 = v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v81 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v82 = (char *)&v65 - v27;
  swift_beginAccess();
  uint64_t v28 = *(void *)(AssociatedConformanceWitness + 32);
  swift_bridgeObjectRetain();
  *(void *)&long long v87 = AssociatedTypeWitness;
  uint64_t v80 = v28;
  LOBYTE(v11) = sub_10096BA50();
  swift_bridgeObjectRelease();
  uint64_t v29 = 0;
  if ((v11 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v88, v19);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = v78;
      uint64_t v31 = v76;
      uint64_t v32 = v79;
      (*(void (**)(void, char *, uint64_t))(v78 + 32))(v76, v22, v79);
      uint64_t v33 = v77;
      (*(void (**)(uint64_t))(*v2[2] + 152))(v31);
      uint64_t v34 = v87;
      uint64_t v46 = v86;
      int v47 = (*(uint64_t (**)(uint64_t, uint64_t, void))(v86 + 48))(v33, 1, v87);
      if (v47 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v33, v73);
        return 0;
      }
      uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 32);
      uint64_t v88 = 0;
      uint64_t v60 = v66;
      v59(v66, v33, v34);
      swift_bridgeObjectRetain();
      uint64_t v38 = v82;
      uint64_t v39 = v89;
      sub_10096BAA0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v60, v34);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
    }
    else
    {
      uint64_t v36 = v86;
      uint64_t v35 = v87;
      uint64_t v37 = v75;
      (*(void (**)(void, char *, void))(v86 + 32))(v75, v22, v87);
      swift_bridgeObjectRetain();
      uint64_t v38 = v82;
      uint64_t v39 = v89;
      sub_10096BAA0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v35);
    }
    uint64_t v41 = v83;
    uint64_t v40 = v84;
    uint64_t v42 = v81;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v38, v83);
    uint64_t v43 = v85;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v42, 1, v39) == 1)
    {
      uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
      v44(v38, v41);
      v44(v42, v41);
      return 0;
    }
    uint64_t v45 = v74;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v74, v42, v39);
    if (*v45)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v39);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v41);
      return 0;
    }
    *(void *)&long long v98 = *(void *)&v45[*(int *)(v39 + 56)];
    uint64_t v50 = v69;
    uint64_t v49 = v70;
    *(void *)&long long v107 = v70;
    *((void *)&v107 + 1) = v69;
    uint64_t v52 = v67;
    uint64_t v51 = v68;
    *(void *)&long long v108 = v68;
    *((void *)&v108 + 1) = v67;
    *(void *)&long long v107 = type metadata accessor for UserRequest();
    *((void *)&v107 + 1) = sub_100011348(255, &qword_100AD62F0);
    *(void *)&long long v108 = sub_10096B7D0();
    *((void *)&v108 + 1) = sub_100033BE8((uint64_t *)&unk_100ADA328);
    swift_getTupleTypeMetadata();
    sub_10096BA80();
    swift_getWitnessTable();
    sub_10096BF50();
    *(void *)&long long v103 = v107;
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v49;
    v53[3] = v50;
    v53[4] = v51;
    v53[5] = v52;
    sub_10096CC00();
    sub_100011348(0, (unint64_t *)&qword_100ADA390);
    swift_getWitnessTable();
    sub_10096CEE0();
    swift_release();
    swift_bridgeObjectRelease();
    long long v103 = v98;
    long long v104 = v99;
    long long v105 = v100;
    uint64_t v106 = v101;
    uint64_t v54 = swift_allocObject();
    char v55 = v71;
    *(unsigned char *)(v54 + 16) = v71 & 1;
    sub_100033BE8((uint64_t *)&unk_100ADA398);
    sub_10096CD60();
    swift_getWitnessTable();
    uint64_t v56 = sub_10096CE50();
    swift_getWitnessTable();
    *(void *)&long long v87 = v56;
    sub_10096CD60();
    swift_getWitnessTable();
    sub_10096CF00();
    swift_release();
    uint64_t v57 = (char *)v108;
    uint64_t v58 = v109;
    uint64_t v88 = v110;
    if (v55)
    {
      swift_getWitnessTable();
      sub_10096CE50();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v92 = swift_getWitnessTable();
      uint64_t v91 = swift_getWitnessTable();
      uint64_t v90 = swift_getWitnessTable();
      swift_getWitnessTable();
      sub_10096C450();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v74, v89);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v82, v83);
      return v98;
    }
    else
    {
      long long v98 = v107;
      uint64_t v70 = *((void *)&v107 + 1);
      uint64_t v71 = *((void *)&v108 + 1);
      long long v99 = v108;
      long long v100 = v109;
      uint64_t v72 = *((void *)&v109 + 1);
      uint64_t v73 = *((void *)&v110 + 1);
      long long v101 = v110;
      uint64_t v102 = v111;
      uint64_t v86 = v107;
      uint64_t v61 = v111;
      swift_bridgeObjectRetain();
      uint64_t v81 = v57;
      swift_retain();
      uint64_t v80 = v58;
      swift_retain();
      swift_retain();
      uint64_t v79 = v61;
      swift_retain();
      swift_getWitnessTable();
      sub_10096CE50();
      sub_10096CE40();
      long long v77 = v108;
      long long v78 = v107;
      long long v98 = v107;
      long long v99 = v108;
      long long v75 = v110;
      long long v76 = v109;
      long long v100 = v109;
      long long v101 = v110;
      uint64_t v102 = v111;
      uint64_t v97 = swift_getWitnessTable();
      uint64_t v96 = swift_getWitnessTable();
      uint64_t v95 = swift_getWitnessTable();
      uint64_t v94 = swift_getWitnessTable();
      swift_getWitnessTable();
      sub_10096C450();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v29 = v103;
      if ((void)v103)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v74, v89);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v82, v83);
      }
      else
      {
        *(void *)&long long v98 = v86;
        *((void *)&v98 + 1) = v70;
        *(void *)&long long v99 = v81;
        *((void *)&v99 + 1) = v71;
        *(void *)&long long v100 = v80;
        *((void *)&v100 + 1) = v72;
        *(void *)&long long v101 = v88;
        *((void *)&v101 + 1) = v73;
        uint64_t v102 = v79;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_10096CE40();
        long long v87 = v107;
        long long v98 = v107;
        long long v99 = v108;
        long long v77 = v109;
        long long v78 = v108;
        long long v76 = v110;
        long long v100 = v109;
        long long v101 = v110;
        uint64_t v102 = v111;
        sub_10096C450();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v29 = v103;
        uint64_t v63 = v83;
        uint64_t v62 = v84;
        id v64 = v82;
        if ((void)v103)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v85 + 8))(v74, v89);
          (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v63);
        }
        else
        {
          *(void *)&long long v107 = v86;
          *((void *)&v107 + 1) = v70;
          *(void *)&long long v108 = v81;
          *((void *)&v108 + 1) = v71;
          *(void *)&long long v109 = v80;
          *((void *)&v109 + 1) = v72;
          *(void *)&long long v110 = v88;
          *((void *)&v110 + 1) = v73;
          uint64_t v111 = v79;
          swift_getWitnessTable();
          sub_10096BF40();
          (*(void (**)(char *, uint64_t))(v85 + 8))(v74, v89);
          (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v63);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return v98;
        }
      }
    }
  }
  return v29;
}

uint64_t sub_1006CDCD4(char a1)
{
  char v2 = a1 & 1;
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  sub_10035B320((uint64_t)"updateSchedulingState(_:)", 25, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1006F7BF0, v3);
  return swift_release();
}

uint64_t sub_1006CDD98(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_10002689C(a1, v4);
  sub_10059A0E8(0xD000000000000015, (void *)0x80000001009A3D40, v4, v5);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_10002689C(a1, v6);
  return sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1006F7BD4, v2, v6, (uint64_t)&type metadata for () + 8, v7);
}

uint64_t sub_1006CDE58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10096B480();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = 0x64616F6C6E776F64;
  if ((a3 & 1) == 0) {
    uint64_t v15 = 0x64616F6C7075;
  }
  uint64_t v39 = v15;
  if (a3) {
    uint64_t v16 = (void *)0xE800000000000000;
  }
  else {
    uint64_t v16 = (void *)0xE600000000000000;
  }
  if (a1 <= 0)
  {
    if (!(a1 | a2))
    {
LABEL_8:
      if (a1 < 0) {
        goto LABEL_18;
      }
      goto LABEL_16;
    }
  }
  else if (a2 > 0)
  {
    goto LABEL_8;
  }
  if (*(unsigned char *)(v4 + 121) == 1)
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_10096CBD0(56);
    v47._object = (void *)0x80000001009B0560;
    v47._uint64_t countAndFlagsBits = 0x1000000000000016;
    sub_10096BDC0(v47);
    v48._uint64_t countAndFlagsBits = v39;
    v48._object = v16;
    sub_10096BDC0(v48);
    v49._object = (void *)0x80000001009B05B0;
    v49._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    sub_10096BDC0(v49);
    v50._uint64_t countAndFlagsBits = sub_1007BEC38();
    sub_10096BDC0(v50);
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  id v17 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_10096B470();
  os_log_type_t v19 = sub_10096C5B0();
  int v35 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v36 = a2;
    uint64_t v21 = v20;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v40 = v34;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v38 = v8;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_100719D44(v39, (unint64_t)v16, &v40);
    uint64_t v37 = v9;
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v22 = sub_1007BEC38();
    os_log_t v33 = v18;
    uint64_t v42 = sub_100719D44(v22, v23, &v40);
    uint64_t v9 = v37;
    uint64_t v8 = v38;
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    os_log_t v24 = v33;
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v35, "🤯 [GlobalProgress] %s counter in unexpected state: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v36;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  if ((a1 & 0x8000000000000000) == 0)
  {
LABEL_16:
    if ((a2 & 0x8000000000000000) == 0) {
      return swift_bridgeObjectRelease();
    }
  }
LABEL_18:
  if (*(unsigned char *)(v4 + 121) == 1)
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_10096CBD0(67);
    v43._object = (void *)0x80000001009B0560;
    v43._uint64_t countAndFlagsBits = 0x1000000000000016;
    sub_10096BDC0(v43);
    v44._uint64_t countAndFlagsBits = v39;
    v44._object = v16;
    sub_10096BDC0(v44);
    v45._uint64_t countAndFlagsBits = 0xD000000000000029;
    v45._object = (void *)0x80000001009B0580;
    sub_10096BDC0(v45);
    v46._uint64_t countAndFlagsBits = sub_1007BEC38();
    sub_10096BDC0(v46);
    swift_bridgeObjectRelease();
LABEL_25:
    uint64_t result = sub_10096CE20();
    __break(1u);
    return result;
  }
  id v26 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_10096B470();
  os_log_type_t v28 = sub_10096C5B0();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v37 = v9;
    uint64_t v30 = v29;
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315394;
    uint64_t v38 = v8;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_100719D44(v39, (unint64_t)v16, &v40);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v31 = sub_1007BEC38();
    uint64_t v42 = sub_100719D44(v31, v32, &v40);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "🤯 [GlobalProgress] %s counter in unexpected negative counter: %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v12, v38);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
}

uint64_t sub_1006CE468(uint64_t a1, uint64_t a2)
{
  uint64_t v87 = a1;
  uint64_t v5 = *(void *)(*(void *)v2 + 584);
  uint64_t v6 = *(void *)(*(void *)v2 + 592);
  uint64_t v7 = *(void *)(*(void *)v2 + 600);
  uint64_t v90 = *(void *)(*(void *)v2 + 576);
  uint64_t v4 = v90;
  uint64_t v91 = v5;
  uint64_t v73 = v7;
  uint64_t v74 = v5;
  uint64_t v92 = v6;
  uint64_t v93 = v7;
  uint64_t v8 = type metadata accessor for ItemReconciliation();
  uint64_t v9 = sub_10096C890();
  uint64_t v79 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v84 = (void (*)(char *, uint64_t))((char *)v70 - v11);
  uint64_t v82 = v8;
  uint64_t v83 = *(void *)(v8 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  long long v75 = (char *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v81 = (char *)v70 - v14;
  uint64_t v76 = v6;
  uint64_t v77 = v4;
  uint64_t v15 = type metadata accessor for SnapshotItem();
  uint64_t v16 = sub_10096C890();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v88 = (char *)v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v70 - v21;
  uint64_t v23 = *(void *)(v15 - 8);
  uint64_t v24 = __chkstk_darwin(v20);
  long long v78 = (char *)v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v86 = (char *)v70 - v27;
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)v70 - v28;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v17 + 16);
  uint64_t v31 = v30;
  v29(v22, a2);
  unint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v32(v22, 1, v15) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v31);
  }
  uint64_t v72 = v17;
  v70[1] = v23;
  uint64_t v71 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  v71(v89, v22, v15);
  uint64_t v34 = v88;
  ((void (*)(char *, uint64_t, uint64_t))v29)(v88, v87, v31);
  if (v32(v34, 1, v15) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v89, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v88, v31);
  }
  int v35 = v86;
  v71((uint64_t)v86, v88, v15);
  uint64_t v36 = v84;
  uint64_t v37 = v89;
  uint64_t v38 = v94;
  sub_1000DEDD8(v89, (uint64_t)v84);
  uint64_t v94 = v38;
  if (v38)
  {
    uint64_t v39 = *(void (**)(char *, uint64_t))(v23 + 8);
    v39(v35, v15);
    return ((uint64_t (*)(uint64_t, uint64_t))v39)(v37, v15);
  }
  uint64_t v41 = v82;
  uint64_t v40 = v83;
  if ((*(unsigned int (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v83 + 48))(v36, 1, v82) == 1)
  {
    uint64_t v42 = *(void (**)(char *, uint64_t))(v23 + 8);
    v42(v35, v15);
    v42((char *)v37, v15);
    return (*(uint64_t (**)(void, uint64_t))(v79 + 8))(v36, v80);
  }
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v40 + 32))(v81, v36, v41);
  LODWORD(v88) = sub_10082F0AC(v41);
  uint64_t v43 = v15;
  Swift::String v44 = &v35[*(int *)(v15 + 48)];
  uint64_t v45 = type metadata accessor for ItemMetadata();
  int v46 = v44[*(int *)(v45 + 68)];
  if (v46 == 2)
  {
    Swift::String v47 = v78;
    uint64_t v48 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v78, v37, v43);
  }
  else
  {
    Swift::String v47 = v78;
    uint64_t v48 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v78, v37, v43);
    if (v46)
    {
      Swift::String v50 = *(void (**)(char *, uint64_t))(v23 + 8);
      v50(v47, v43);
LABEL_17:
      uint64_t v51 = *(int *)(v45 + 100);
      uint64_t v52 = v48 + *(int *)(v43 + 48);
      if (*(void *)&v44[v51] == *(void *)(v52 + v51))
      {
        (*(void (**)(char *, uint64_t))(v83 + 8))(v81, v82);
        v50(v86, v43);
        return ((uint64_t (*)(uint64_t, uint64_t))v50)(v48, v43);
      }
      uint64_t v87 = v43;
      uint64_t v53 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v54 = v82;
      uint64_t v55 = *(void *)&v81[*(int *)(v53 + 76)];
      uint64_t v56 = v83;
      uint64_t v57 = v75;
      (*(void (**)(char *))(v83 + 16))(v75);
      if ((v55 & 4) != 0)
      {
        id v64 = *(void (**)(char *, uint64_t))(v56 + 8);
        v64(v57, v54);
        v64(v81, v54);
        goto LABEL_31;
      }
      uint64_t v58 = &v57[*(int *)(v54 + 52)];
      uint64_t v59 = *(void *)&v58[*(int *)(type metadata accessor for ItemReconciliationHalf() + 76)];
      uint64_t v60 = *(void (**)(char *, uint64_t))(v56 + 8);
      v60(v57, v54);
      if ((v59 & 4) != 0)
      {
        v60(v81, v82);
        goto LABEL_31;
      }
      uint64_t v84 = v60;
      if v88 == 2 || (v88)
      {
        uint64_t v67 = v89;
        uint64_t v68 = v94;
        char v69 = (*(uint64_t (**)(uint64_t))(**(void **)(v85 + 24) + 224))(v89);
        uint64_t v94 = v68;
        if (v68)
        {
          v84(v81, v82);
          uint64_t v65 = v87;
          v50(v86, v87);
          uint64_t v66 = v67;
          return ((uint64_t (*)(uint64_t, uint64_t))v50)(v66, v65);
        }
        if ((v69 & 1) == 0) {
          goto LABEL_25;
        }
        uint64_t v61 = *(void *)(v52 + v51);
      }
      else
      {
        uint64_t v61 = *(void *)(v52 + v51);
      }
      sub_1006C9844(0, v61, 1, 1);
      sub_1006C9844(0, *(void *)&v44[v51], 0, 1);
LABEL_25:
      v84(v81, v82);
LABEL_31:
      uint64_t v65 = v87;
      v50(v86, v87);
      uint64_t v66 = v89;
      return ((uint64_t (*)(uint64_t, uint64_t))v50)(v66, v65);
    }
  }
  char v49 = v47[*(int *)(v43 + 48) + *(int *)(v45 + 68)];
  Swift::String v50 = *(void (**)(char *, uint64_t))(v23 + 8);
  v50(v47, v43);
  if ((v49 & 1) == 0) {
    goto LABEL_17;
  }
  if (v88 != 2 && (v88 & 1) == 0
    || (uint64_t v62 = v94, v63 = (*(uint64_t (**)(uint64_t))(**(void **)(v85 + 24) + 216))(v48), (v94 = v62) == 0)
    && (v63 & 1) != 0)
  {
    sub_1006C9844(0, *(void *)&v44[*(int *)(v45 + 100)], 0, 1);
  }
  (*(void (**)(char *, uint64_t))(v83 + 8))(v81, v41);
  v50(v86, v43);
  return ((uint64_t (*)(uint64_t, uint64_t))v50)(v48, v43);
}

uint64_t sub_1006CEDB8(uint64_t a1, void (*a2)(void, void, void))
{
  uint64_t v168 = a2;
  uint64_t v157 = a1;
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = sub_10096B480();
  uint64_t v158 = *(void *)(v4 - 8);
  uint64_t v159 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  id v160 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v150 = (char *)&v127 - v7;
  uint64_t v8 = v3[72];
  uint64_t v9 = v3[74];
  uint64_t v10 = type metadata accessor for SnapshotItem();
  uint64_t v133 = sub_10096C890();
  uint64_t v132 = *(void *)(v133 - 8);
  uint64_t v11 = __chkstk_darwin(v133);
  id v139 = (char *)&v127 - v12;
  uint64_t v135 = v10;
  uint64_t v134 = *(void *)(v10 - 8);
  __chkstk_darwin(v11);
  uint64_t v131 = (char *)&v127 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v145 = sub_10096C890();
  uint64_t v144 = *(void *)(v145 - 8);
  uint64_t v15 = __chkstk_darwin(v145);
  int v143 = (char *)&v127 - v16;
  uint64_t v147 = AssociatedTypeWitness;
  uint64_t v146 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v15);
  uint64_t v138 = (char *)&v127 - v17;
  uint64_t v161 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v161);
  uint64_t v148 = (uint64_t)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v3[73];
  uint64_t v166 = v2;
  uint64_t v20 = v3[75];
  uint64_t v170 = (uint8_t *)v19;
  uint64_t v171 = v8;
  uint64_t v172 = v20;
  uint64_t v173 = v9;
  uint64_t v164 = type metadata accessor for ItemReconciliation();
  uint64_t v21 = sub_10096C890();
  uint64_t v155 = *(void *)(v21 - 8);
  uint64_t v156 = v21;
  __chkstk_darwin(v21);
  uint64_t v167 = (uint8_t *)&v127 - v22;
  uint64_t v170 = (uint8_t *)v8;
  uint64_t v171 = v19;
  uint64_t v172 = v9;
  uint64_t v173 = v20;
  uint64_t v23 = type metadata accessor for ItemReconciliation();
  uint64_t v162 = *(void *)(v23 - 8);
  uint64_t v163 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  unint64_t v149 = (char *)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  int v137 = (char *)&v127 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v140 = (char *)&v127 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v153 = (uint64_t)&v127 - v31;
  __chkstk_darwin(v30);
  uint64_t v165 = (char *)&v127 - v32;
  uint64_t v33 = type metadata accessor for SnapshotItem();
  uint64_t v34 = sub_10096C890();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  char v154 = (char *)&v127 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v127 - v39;
  uint64_t v41 = *(void *)(v33 - 8);
  uint64_t v42 = __chkstk_darwin(v38);
  os_log_type_t v142 = (char *)&v127 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v152 = (char *)&v127 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v141 = (char *)&v127 - v47;
  __chkstk_darwin(v46);
  char v49 = (char *)&v127 - v48;
  Swift::String v50 = v168;
  uint64_t v168 = *(void (**)(void, void, void))(v35 + 16);
  v168(v40, v50, v34);
  uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  if (v51(v40, 1, v33) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v40, v34);
  }
  uint64_t v136 = v41;
  uint64_t v53 = *(void (**)(char *, char *))(v41 + 32);
  uint64_t v151 = (int *)v33;
  v53(v49, v40);
  uint64_t v54 = v169;
  sub_1000DF200((uint64_t)v49, (uint64_t)v167);
  if (v54) {
    goto LABEL_4;
  }
  uint64_t v128 = (void (*)(char *, char *, int *))v53;
  uint64_t v57 = v164;
  uint64_t v129 = *(void *)(v164 - 8);
  int v58 = (*(uint64_t (**)(uint8_t *, uint64_t, uint64_t))(v129 + 48))(v167, 1, v164);
  uint64_t v169 = 0;
  if (v58 == 1)
  {
    (*(void (**)(uint8_t *, uint64_t))(v155 + 8))(v167, v156);
    id v59 = (id)fpfs_current_or_default_log();
    uint64_t v60 = v160;
    sub_10096B490();
    uint64_t v61 = v136;
    uint64_t v62 = *(void (**)(char *, char *, int *))(v136 + 16);
    char v63 = v152;
    id v64 = v151;
    v62(v152, v49, v151);
    uint64_t v65 = v49;
    uint64_t v66 = sub_10096B470();
    os_log_type_t v67 = sub_10096C5B0();
    if (os_log_type_enabled(v66, v67))
    {
      unint64_t v130 = v65;
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v168 = (void (*)(void, void, void))swift_slowAlloc();
      uint64_t v170 = (uint8_t *)v168;
      uint64_t v167 = v68;
      *(_DWORD *)uint64_t v68 = 136315138;
      uint64_t v166 = v68 + 4;
      char v69 = v142;
      v62(v142, v63, v64);
      uint64_t v70 = *(void (**)(char *, int *))(v61 + 8);
      v70(v63, v64);
      uint64_t v71 = SnapshotItem.description.getter(v64);
      unint64_t v73 = v72;
      v70(v69, v64);
      uint64_t v174 = sub_100719D44(v71, v73, (uint64_t *)&v170);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "Couldn't find RT entry in updateDownloadJob: %s", v167, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v158 + 8))(v160, v159);
      return ((uint64_t (*)(char *, int *))v70)(v130, v64);
    }
    else
    {
      long long v101 = *(void (**)(char *, int *))(v61 + 8);
      v101(v63, v64);

      (*(void (**)(char *, uint64_t))(v158 + 8))(v60, v159);
      return ((uint64_t (*)(char *, int *))v101)(v65, v64);
    }
  }
  unint64_t v130 = v49;
  uint64_t v74 = v153;
  long long v75 = v167;
  sub_100827044(v57, v153);
  (*(void (**)(uint8_t *, uint64_t))(v129 + 8))(v75, v57);
  uint64_t v76 = v74;
  char v49 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v162 + 32))(v165, v76, v163);
  uint64_t v77 = v151;
  uint64_t v167 = *(uint8_t **)&v49[v151[12] + *(int *)(v161 + 100)];
  long long v78 = v154;
  v168(v154, v157, v34);
  uint64_t v79 = v78;
  uint64_t v80 = v77;
  if (v51(v79, 1, (uint64_t)v77) != 1)
  {
    uint64_t v102 = v49;
    long long v103 = v141;
    v128(v141, v79, v77);
    uint64_t v104 = v148;
    sub_1006F90F0((uint64_t)&v103[v77[12]], v148, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    uint64_t v56 = v136;
    (*(void (**)(char *, int *))(v136 + 8))(v103, v77);
    uint64_t v105 = v169;
    uint64_t v106 = v80;
    uint64_t v87 = v162;
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v79, v34);
  uint64_t v81 = v144;
  uint64_t v82 = v143;
  uint64_t v83 = v165;
  uint64_t v84 = v145;
  (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v143, v165, v145);
  uint64_t v85 = v146;
  uint64_t v86 = v147;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v82, 1, v147) == 1)
  {
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v84);
    uint64_t v56 = v136;
    uint64_t v87 = v162;
    goto LABEL_12;
  }
  uint64_t v113 = v138;
  (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v138, v82, v86);
  uint64_t v114 = v139;
  uint64_t v115 = v169;
  (*(void (**)(char *, uint64_t))(**((void **)v166 + 4) + 240))(v113, 1);
  uint64_t v105 = v115;
  if (v115)
  {
    (*(void (**)(char *, uint64_t))(v85 + 8))(v113, v86);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v165, v163);
LABEL_4:
    uint64_t v55 = v151;
    uint64_t v56 = v136;
    return (*(uint64_t (**)(char *, int *))(v56 + 8))(v49, v55);
  }
  (*(void (**)(char *, uint64_t))(v85 + 8))(v113, v86);
  uint64_t v120 = v134;
  uint64_t v121 = v135;
  int v122 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v134 + 48))(v114, 1, v135);
  uint64_t v56 = v136;
  uint64_t v87 = v162;
  if (v122 != 1)
  {
    uint64_t v102 = v49;
    uint64_t v125 = v131;
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v131, v114, v121);
    uint64_t v126 = v148;
    sub_1006F90F0((uint64_t)&v125[*(int *)(v121 + 48)], v148, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    (*(void (**)(char *, uint64_t))(v120 + 8))(v125, v121);
    uint64_t v104 = v126;
    uint64_t v106 = v151;
LABEL_16:
    uint64_t v107 = (uint64_t)v149;
    long long v108 = *(uint8_t **)(v104 + *(int *)(v161 + 100));
    sub_1006F7C48(v104, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    uint64_t v109 = v163;
    if (v108 == v167)
    {
      (*(void (**)(char *, uint64_t))(v87 + 8))(v165, v163);
      return (*(uint64_t (**)(char *, int *))(v56 + 8))(v102, v106);
    }
    uint64_t v110 = v105;
    uint64_t v111 = v165;
    char v112 = sub_10082F0AC(v163);
    if (v112 == 2)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v87 + 16))(v107, v111, v109);
      char v49 = v102;
    }
    else
    {
      char v117 = v112;
      (*(void (**)(uint64_t, char *, uint64_t))(v87 + 16))(v107, v111, v109);
      char v49 = v102;
      if (v117)
      {
        uint64_t v124 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
        v124(v107, v109);
LABEL_31:
        sub_1006C9844(1, (uint64_t)v167, 1, 0);
        sub_1006C9844(1, (uint64_t)v108, 0, 0);
LABEL_32:
        v124((uint64_t)v165, v109);
        return (*(uint64_t (**)(char *, int *))(v56 + 8))(v102, v151);
      }
    }
    char v118 = sub_1006EFC3C(v107);
    if (v110)
    {
      uint64_t v119 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
      v119(v107, v109);
      v119((uint64_t)v165, v109);
      uint64_t v55 = v151;
      return (*(uint64_t (**)(char *, int *))(v56 + 8))(v49, v55);
    }
    char v123 = v118;
    uint64_t v102 = v49;
    uint64_t v124 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
    v124(v107, v109);
    if ((v123 & 1) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  uint64_t v169 = 0;
  (*(void (**)(char *, uint64_t))(v132 + 8))(v114, v133);
  uint64_t v83 = v165;
LABEL_12:
  id v88 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  uint64_t v90 = v140;
  uint64_t v91 = v163;
  v89(v140, v83, v163);
  uint64_t v92 = sub_10096B470();
  os_log_type_t v93 = sub_10096C5B0();
  uint64_t v168 = (void (*)(void, void, void))v92;
  if (os_log_type_enabled(v92, v93))
  {
    uint64_t v94 = (uint8_t *)swift_slowAlloc();
    uint64_t v167 = (uint8_t *)swift_slowAlloc();
    uint64_t v170 = v167;
    uint64_t v166 = v94;
    *(_DWORD *)uint64_t v94 = 136315138;
    uint64_t v164 = (uint64_t)(v94 + 4);
    uint64_t v95 = v137;
    v89(v137, v90, v91);
    uint64_t v96 = *(void (**)(char *, uint64_t))(v87 + 8);
    v96(v90, v91);
    uint64_t v97 = sub_10082F470(v91);
    unint64_t v99 = v98;
    v96(v95, v91);
    uint64_t v174 = sub_100719D44(v97, v99, (uint64_t *)&v170);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    id v100 = v168;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v168, v93, "couldn't find FS snap for download job update: %s", v166, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v158 + 8))(v150, v159);
    v96(v165, v91);
    return (*(uint64_t (**)(char *, int *))(v136 + 8))(v130, v151);
  }
  else
  {
    uint64_t v116 = *(void (**)(char *, uint64_t))(v87 + 8);
    v116(v90, v91);

    (*(void (**)(char *, uint64_t))(v158 + 8))(v150, v159);
    v116(v165, v91);
    return (*(uint64_t (**)(char *, int *))(v56 + 8))(v49, v151);
  }
}

uint64_t sub_1006D009C()
{
  sub_100584270(v0, (uint64_t)&v8);
  char v1 = v8;
  uint64_t result = v14;
  switch(v14)
  {
    case 1u:
      sub_10021FAE0((uint64_t)&v8);
      uint64_t result = 1;
      break;
    case 2u:
      sub_10021FAE0((uint64_t)&v8);
      uint64_t result = 2;
      break;
    case 3u:
      uint64_t result = 3;
      break;
    case 4u:
      swift_bridgeObjectRelease();
      sub_10002B770((uint64_t)&v8, (uint64_t *)&unk_100ACE0F0);
      uint64_t result = 5;
      break;
    case 5u:
      sub_10021FAE0((uint64_t)&v8);
      uint64_t result = 7;
      break;
    case 6u:
      sub_10021FAE0((uint64_t)&v8);
      uint64_t result = 8;
      break;
    case 7u:
      swift_bridgeObjectRelease();
      if (v1) {
        uint64_t result = 10;
      }
      else {
        uint64_t result = 9;
      }
      break;
    case 8u:
      sub_10021FAE0((uint64_t)&v8);
      uint64_t result = 117049988;
      break;
    case 9u:
      uint64_t v3 = v12 | v13 | v11 | v10 | v9;
      if (v3) {
        BOOL v4 = 0;
      }
      else {
        BOOL v4 = v8 == 2;
      }
      uint64_t v5 = 112600553;
      if (v4) {
        uint64_t v5 = 111342181;
      }
      if (v8 == 1 && v3 == 0) {
        uint64_t v7 = 105155714;
      }
      else {
        uint64_t v7 = v5;
      }
      if (v12 | v13 | v8 | v11 | v10 | v9) {
        uint64_t result = v7;
      }
      else {
        uint64_t result = 4;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1006D0218()
{
  sub_10002B7CC(&qword_100ACE1E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(inited + 40) = v2;
  sub_100584270(v0, (uint64_t)v15);
  uint64_t v3 = sub_10096BCC0();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  unint64_t v5 = sub_10004621C(inited);
  sub_100584270(v0, (uint64_t)v15);
  if (v17 - 1 > 1)
  {
    sub_10021FAE0((uint64_t)v15);
  }
  else
  {
    uint64_t v6 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v8 = v7;
    swift_getErrorValue();
    uint64_t v16 = v14;
    uint64_t v9 = sub_10009C958(v15);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v13, v14);
    sub_100042A48(v15, v12);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10037BFD0(v12, v6, v8, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  return v5;
}

uint64_t sub_1006D03A8()
{
  return sub_10096BCE0();
}

uint64_t sub_1006D03E8(uint64_t a1)
{
  unint64_t v2 = sub_1006FB1A8();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1006D0424(uint64_t a1)
{
  unint64_t v2 = sub_1006FB1A8();

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1006D0460(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_10096C890();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v2 + *(int *)(a1 + 40));
  if (v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v2 + *(int *)(a1 + 36), v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
      uint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      swift_retain();
      sub_10096CBD0(26);
      v22._uint64_t countAndFlagsBits = 0x616863206D657469;
      v22._object = (void *)0xED0000206465676ELL;
      sub_10096BDC0(v22);
      sub_10096D270();
      v23._uint64_t countAndFlagsBits = 0x3A73656C7572202CLL;
      v23._object = (void *)0xE900000000000020;
      sub_10096BDC0(v23);
      v17[1] = v13;
      type metadata accessor for JobLockAggregator();
      swift_getWitnessTable();
      sub_10096D270();
      swift_release();
      uint64_t v15 = v18;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v4);
      return v15;
    }
    uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
    swift_retain();
    v14(v9, v5);
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    v20._uint64_t countAndFlagsBits = 0x616863206D657469;
    v20._object = (void *)0xED0000206465676ELL;
    sub_10096BDC0(v20);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_10096D270();
    swift_release();
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    sub_10096CBD0(28);
    v21._object = (void *)0x80000001009A1980;
    v21._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    sub_10096BDC0(v21);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_10096D270();
  }
  return v18;
}

uint64_t sub_1006D0848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_10096C890();
  type metadata accessor for JobLockAggregator();
  sub_10096C890();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v8 = a2 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v9 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, v2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v8, v2 + *(int *)(a1 + 36), v6);
  *(void *)(a2 + v9) = *(void *)(v2 + *(int *)(a1 + 40));
  type metadata accessor for FileTreeWriter.FileTreeChange();
  swift_storeEnumTagMultiPayload();

  return swift_retain();
}

BOOL sub_1006D09C0()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for FileTreeChangeAggregator.Change();
  swift_getAssociatedConformanceWitness();
  if ((sub_10096BA50() & 1) == 0) {
    return 0;
  }
  type metadata accessor for FileTreeWriter.StreamResetReason();
  swift_getTupleTypeMetadata2();
  uint64_t v1 = sub_10096C890();
  uint64_t v2 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v1 - 8) + 32);
  v2(v4, v0 + 16, v1);
  v2(v5, v4, v1);
  return v5[0] == 2 && (v0[49] & 1) == 0 && (v0[48] & 1) == 0 && (v0[50] & 1) == 0;
}

uint64_t sub_1006D0B34(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_1006D0B60(void *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = *a1;
  uint64_t v8 = type metadata accessor for SyncState();
  uint64_t v269 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v268 = (char *)&v259 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v267 = (uint64_t)&v259 - v11;
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v14 = *(void *)(v7 + 88);
  uint64_t v15 = *(void *)(v7 + 104);
  uint64_t v312 = (unsigned __int8 *)v13;
  uint64_t v313 = v14;
  uint64_t v295 = v14;
  uint64_t v314 = v12;
  uint64_t v315 = v15;
  uint64_t v293 = v15;
  uint64_t v263 = type metadata accessor for PersistenceTrigger();
  uint64_t v262 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  long long v261 = (char *)&v259 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = type metadata accessor for FileTreeWriter.StreamResetReason();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v289 = sub_10096C890();
  uint64_t v286 = *(void (***)(char *, uint64_t))(v289 - 8);
  uint64_t v20 = __chkstk_darwin(v289);
  uint64_t v290 = (char *)&v259 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  Swift::String v291 = (char *)&v259 - v22;
  uint64_t v23 = sub_10096B0E0();
  uint64_t v24 = *(char **)(v23 - 8);
  uint64_t v308 = v23;
  uint64_t v309 = v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v307 = (char *)&v259 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v287 = (char *)&v259 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v297 = (char *)&v259 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v306 = (uint64_t)&v259 - v32;
  __chkstk_darwin(v31);
  uint64_t v302 = (char *)&v259 - v33;
  uint64_t v298 = sub_10096B480();
  Swift::String v305 = *(void (***)(char *, uint64_t))(v298 - 8);
  uint64_t v34 = __chkstk_darwin(v298);
  uint64_t v265 = (char *)&v259 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v264 = (char *)&v259 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v260 = (char *)&v259 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v300 = (char *)&v259 - v41;
  __chkstk_darwin(v40);
  uint64_t v304 = (char *)&v259 - v42;
  uint64_t v296 = v13;
  uint64_t v294 = v12;
  uint64_t v43 = type metadata accessor for FileTreeWriter.FileTreeChange();
  uint64_t v310 = *(char ***)(v43 - 8);
  uint64_t v44 = __chkstk_darwin(v43);
  int64_t v278 = (char *)&v259 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v303 = (uint64_t *)((char *)&v259 - v47);
  __chkstk_darwin(v46);
  char v49 = (char *)&v259 - v48;
  uint64_t v299 = a1;
  uint64_t v270 = a1[4];
  uint64_t v271 = v2;
  uint64_t v277 = v18;
  swift_getTupleTypeMetadata2();
  uint64_t v50 = sub_10096C890();
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32);
  v51(v316, v2 + 16, v50);
  v51((char *)v317, (uint64_t)v316, v50);
  uint64_t v279 = v43;
  uint64_t v288 = TupleTypeMetadata2;
  if (LOBYTE(v317[0]) == 2)
  {
    uint64_t v52 = v291;
    uint64_t v53 = v297;
    uint64_t v54 = v310;
    goto LABEL_4;
  }
  uint64_t v292 = v3;
  uint64_t v110 = v317[1];
  char v111 = v318;
  uint64_t v285 = v317[0] & 1;
  *char v49 = v317[0] & 1;
  *((void *)v49 + 1) = v110;
  v49[16] = v111;
  swift_storeEnumTagMultiPayload();
  id v112 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v113 = v310;
  uint64_t v114 = v310[2];
  uint64_t v301 = (char **)v49;
  ((void (*)(void *, char *, uint64_t))v114)(v303, v49, v43);
  uint64_t v115 = sub_10096B470();
  os_log_type_t v116 = sub_10096C5B0();
  BOOL v117 = os_log_type_enabled(v115, v116);
  uint64_t v266 = AssociatedTypeWitness;
  if (v117)
  {
    char v118 = (uint8_t *)swift_slowAlloc();
    uint64_t v284 = (unsigned __int8 *)swift_slowAlloc();
    uint64_t v312 = v284;
    *(_DWORD *)char v118 = 136446210;
    uint64_t v281 = (uint64_t)(v118 + 4);
    uint64_t v119 = v278;
    os_log_t v283 = v115;
    uint64_t v120 = (uint64_t)v303;
    ((void (*)(char *, void *, uint64_t))v114)(v278, v303, v43);
    uint64_t v121 = (void (*)(uint64_t, uint64_t))v113[1];
    v121(v120, v43);
    unint64_t v122 = sub_10045016C(v43);
    unint64_t v124 = v123;
    v121((uint64_t)v119, v43);
    uint64_t v311 = sub_100719D44(v122, v124, (uint64_t *)&v312);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    uint64_t v115 = v283;
    _os_log_impl((void *)&_mh_execute_header, v283, v116, "%{public}s", v118, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v121 = (void (*)(uint64_t, uint64_t))v113[1];
    v121((uint64_t)v303, v43);
  }

  v305[1](v304, v298);
  uint64_t v138 = v309;
  uint64_t v304 = (char *)v121;
  if (v285)
  {
    uint64_t v303 = v309;
    uint64_t v154 = v299[3];
    sub_10085378C();
    uint64_t v155 = v296;
    uint64_t v156 = v295;
    uint64_t v312 = (unsigned __int8 *)v296;
    uint64_t v313 = v295;
    uint64_t v157 = v294;
    uint64_t v158 = v293;
    uint64_t v314 = v294;
    uint64_t v315 = v293;
    type metadata accessor for ItemJob();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
    swift_allocObject();
    uint64_t v160 = sub_10096C0D0();
    uint64_t v312 = (unsigned __int8 *)v155;
    uint64_t v313 = v156;
    uint64_t v314 = v157;
    uint64_t v315 = v158;
    uint64_t v161 = v302;
    *uint64_t v162 = type metadata accessor for Ingestion.DeferredRescan();
    uint64_t v163 = sub_1003FC080(v160);
    uint64_t v164 = v292;
    uint64_t v165 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v154 + 272))(v161, v163);
    if (v164)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v282 + 8))(v161, v266);
      return ((uint64_t (*)(char **, uint64_t))v304)(v301, v279);
    }
    uint64_t v166 = v165;
    uint64_t v292 = 0;
    uint64_t v167 = *(void (**)(char *, uint64_t))(v282 + 8);
    v167(v161, v266);
    swift_bridgeObjectRelease();
    uint64_t v311 = v166;
    sub_10096C1C0();
    swift_getWitnessTable();
    sub_10096C450();
    swift_bridgeObjectRelease();
    uint64_t v168 = v301;
    if (v312)
    {
      uint64_t v170 = *((void *)v312 + 12);
      uint64_t v169 = *((void *)v312 + 13);
      int v171 = v312[112];
      sub_10009C5FC(v170, v169, v312[112]);
      swift_release();
      if (v171 != 3)
      {
        uint64_t AssociatedTypeWitness = v266;
        uint64_t v53 = v297;
        if (v171 == 4)
        {
          sub_1000D31F8(v170, v169, 4);
          if (!(v170 & 0xFFFFFFFFFFFFFFFELL | v169)) {
            goto LABEL_126;
          }
        }
        else
        {
          sub_1000D31F8(v170, v169, v171);
        }
        return ((uint64_t (*)(char **, uint64_t))v304)(v168, v279);
      }
      sub_1000D31F8(v170, v169, 3);
    }
    uint64_t AssociatedTypeWitness = v266;
    uint64_t v53 = v297;
LABEL_126:
    sub_10085378C();
    uint64_t v245 = v307;
    sub_10096B0D0();
    sub_10096B080();
    double v247 = v246;
    uint64_t v248 = (uint64_t (*)(char *, uint64_t))v303[1];
    uint64_t result = v248(v245, v308);
    double v249 = v247 * 1000000000.0;
    if ((~COERCE__INT64(v247 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
LABEL_164:
      __break(1u);
      goto LABEL_165;
    }
    if (v249 <= -9.22337204e18)
    {
LABEL_165:
      __break(1u);
      goto LABEL_166;
    }
    if (v249 >= 9.22337204e18)
    {
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    uint64_t v250 = v306;
    sub_1008AA5EC(v306, 0, (uint64_t)v249, 0x8000);
    v167((char *)v250, AssociatedTypeWitness);
    uint64_t v251 = sub_10058364C(0x20000);
    swift_retain();
    swift_release();
    uint64_t v252 = v307;
    sub_10096B0D0();
    sub_10096B080();
    double v254 = v253;
    uint64_t result = v248(v252, v308);
    double v255 = v254 * 1000000000.0;
    uint64_t v256 = v292;
    if ((~COERCE__INT64(v254 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
LABEL_167:
      __break(1u);
      goto LABEL_168;
    }
    TupleTypeMetadata2 = v288;
    uint64_t v52 = v291;
    uint64_t v54 = v310;
    if (v255 <= -9.22337204e18)
    {
LABEL_168:
      __break(1u);
      goto LABEL_169;
    }
    if (v255 >= 9.22337204e18)
    {
LABEL_169:
      __break(1u);
      goto LABEL_170;
    }
    sub_10059C450(v251);
    uint64_t v4 = v256;
    if (!v256)
    {
      swift_release();
      uint64_t v257 = *(void (**)(uint64_t))(**(void **)(v270 + 16) + 848);
      uint64_t v258 = swift_retain();
      v257(v258);
      swift_release();
      ((void (*)(char **, uint64_t))v304)(v301, v279);
      goto LABEL_4;
    }
    swift_release();
    return ((uint64_t (*)(char **, uint64_t))v304)(v301, v279);
  }
  uint64_t v312 = (unsigned __int8 *)v296;
  uint64_t v313 = v295;
  uint64_t v314 = v294;
  uint64_t v315 = v293;
  uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
  sub_10085378C();
  uint64_t v140 = v307;
  sub_10096B0D0();
  sub_10096B080();
  double v142 = v141;
  int v143 = (uint64_t (*)(char *, uint64_t))*((void *)v138 + 1);
  uint64_t result = v143(v140, v308);
  double v144 = v142 * 1000000000.0;
  uint64_t v145 = v266;
  if ((~COERCE__INT64(v142 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_146;
  }
  if (v144 <= -9.22337204e18)
  {
LABEL_147:
    __break(1u);
    goto LABEL_148;
  }
  if (v144 >= 9.22337204e18)
  {
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  uint64_t v146 = v306;
  uint64_t v147 = sub_1008AA66C(v306, 0, (uint64_t)v144, 0x8000);
  uint64_t v148 = *(void (**)(uint64_t, uint64_t))(v282 + 8);
  v148(v146, v145);
  unint64_t v149 = v307;
  sub_10096B0D0();
  sub_10096B080();
  double v151 = v150;
  uint64_t result = v143(v149, v308);
  double v152 = v151 * 1000000000.0;
  if ((~COERCE__INT64(v151 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  if (v152 <= -9.22337204e18)
  {
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  if (v152 >= 9.22337204e18)
  {
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  uint64_t v303 = (void *)ItemMetadata;
  uint64_t v153 = v292;
  sub_10059C450(v147);
  if (v153)
  {
    swift_release();
    return ((uint64_t (*)(char **, uint64_t))v304)(v301, v279);
  }
  swift_release();
  sub_1008537D0();
  uint64_t v172 = v307;
  sub_10096B0D0();
  sub_10096B080();
  double v174 = v173;
  uint64_t result = v143(v172, v308);
  double v175 = v174 * 1000000000.0;
  if ((~COERCE__INT64(v174 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_158;
  }
  uint64_t v54 = v310;
  if (v175 <= -9.22337204e18)
  {
LABEL_159:
    __break(1u);
    goto LABEL_160;
  }
  if (v175 >= 9.22337204e18)
  {
LABEL_160:
    __break(1u);
    goto LABEL_161;
  }
  uint64_t v176 = v306;
  uint64_t v303 = (void *)sub_1008AA66C(v306, 0, (uint64_t)v175, 0x8000);
  v148(v176, v145);
  uint64_t v177 = v307;
  sub_10096B0D0();
  sub_10096B080();
  double v179 = v178;
  uint64_t result = v143(v177, v308);
  double v180 = v179 * 1000000000.0;
  if ((~COERCE__INT64(v179 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
  uint64_t v181 = v279;
  TupleTypeMetadata2 = v288;
  uint64_t v53 = v297;
  if (v180 <= -9.22337204e18)
  {
LABEL_162:
    __break(1u);
    goto LABEL_163;
  }
  if (v180 >= 9.22337204e18)
  {
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  uint64_t AssociatedTypeWitness = v145;
  sub_10059C450((uint64_t)v303);
  uint64_t v4 = 0;
  ((void (*)(char **, uint64_t))v304)(v301, v181);
  swift_release();
  uint64_t v52 = v291;
LABEL_4:
  uint64_t v55 = *(void *)(v271 + 40);
  uint64_t v56 = *(void *)(v55 + 64);
  uint64_t v272 = v55 + 64;
  uint64_t v57 = 1 << *(unsigned char *)(v55 + 32);
  uint64_t v58 = -1;
  if (v57 < 64) {
    uint64_t v58 = ~(-1 << v57);
  }
  unint64_t v59 = v58 & v56;
  uint64_t v285 = TupleTypeMetadata2 - 8;
  uint64_t v301 = (char **)(v282 + 16);
  uint64_t v284 = (unsigned __int8 *)(v286 + 4);
  os_log_t v283 = (os_log_t)(v282 + 32);
  uint64_t v310 = (char **)(v282 + 8);
  uint64_t v286 = v305 + 1;
  unint64_t v276 = (void (**)(char *, uint64_t))(v54 + 1);
  Swift::String v305 = (void (**)(char *, uint64_t))(v309 + 8);
  int64_t v274 = (unint64_t)(v57 + 63) >> 6;
  uint64_t v259 = v274 - 1;
  uint64_t v280 = v55;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v61 = 0;
  *(void *)&long long v62 = 136446210;
  long long v275 = v62;
  uint64_t v273 = (char *)&type metadata for Any + 8;
  char v63 = v290;
  if (!v59) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v64 = __clz(__rbit64(v59));
  uint64_t v65 = (v59 - 1) & v59;
  uint64_t v303 = (void *)v61;
  unint64_t v66 = v64 | (v61 << 6);
LABEL_8:
  uint64_t v67 = v280;
  (*(void (**)(char *, unint64_t, uint64_t))(v282 + 16))(v63, *(void *)(v280 + 48) + *(void *)(v282 + 72) * v66, AssociatedTypeWitness);
  uint64_t v68 = 0;
  uint64_t v69 = *(void *)(v67 + 56) + 16 * v66;
  uint64_t v70 = &v63[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v71 = *(void *)v69;
  LOBYTE(v69) = *(unsigned char *)(v69 + 8);
  *(void *)uint64_t v70 = v71;
  v70[8] = v69;
LABEL_15:
  while (1)
  {
    uint64_t v74 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v63, v68, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))v284)(v52, v63, v289);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v52, 1, TupleTypeMetadata2) == 1) {
      break;
    }
    uint64_t v302 = (char *)v65;
    uint64_t v75 = v4;
    uint64_t v76 = &v52[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v77 = *(void *)v76;
    int v78 = v76[8];
    ((void (*)(char *, char *, uint64_t))v283->isa)(v53, v52, AssociatedTypeWitness);
    id v79 = (id)fpfs_current_or_default_log();
    uint64_t v80 = v300;
    sub_10096B490();
    uint64_t v81 = v287;
    uint64_t v309 = *v301;
    ((void (*)(char *, char *, uint64_t))v309)(v287, v53, AssociatedTypeWitness);
    uint64_t v82 = sub_10096B470();
    os_log_type_t v83 = sub_10096C5A0();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = swift_slowAlloc();
      uint64_t v292 = v4;
      LODWORD(v304) = v78;
      uint64_t v85 = v77;
      uint64_t v86 = v84;
      uint64_t v281 = swift_slowAlloc();
      uint64_t v312 = (unsigned __int8 *)v281;
      *(_DWORD *)uint64_t v86 = v275;
      uint64_t v87 = swift_getTupleTypeMetadata2();
      id v88 = v278;
      uint64_t v89 = v81;
      uint64_t v90 = &v278[*(int *)(v87 + 48)];
      ((void (*)(char *, char *, uint64_t))v309)(v278, v89, AssociatedTypeWitness);
      *(void *)uint64_t v90 = v85;
      v90[8] = (char)v304;
      uint64_t v91 = v279;
      swift_storeEnumTagMultiPayload();
      uint64_t v304 = *v310;
      ((void (*)(char *, uint64_t))v304)(v89, AssociatedTypeWitness);
      unint64_t v92 = sub_10045016C(v91);
      unint64_t v94 = v93;
      (*v276)(v88, v91);
      *(void *)(v86 + 4) = sub_100719D44(v92, v94, (uint64_t *)&v312);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "%{public}s", (uint8_t *)v86, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v75 = v292;
      swift_slowDealloc();

      (*v286)(v300, v298);
    }
    else
    {
      uint64_t v304 = *v310;
      ((void (*)(char *, uint64_t))v304)(v81, AssociatedTypeWitness);

      (*v286)(v80, v298);
    }
    uint64_t v312 = (unsigned __int8 *)v296;
    uint64_t v313 = v295;
    uint64_t v314 = v294;
    uint64_t v315 = v293;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v53 = v297;
    ((void (*)(uint64_t, char *, uint64_t))v309)(v306, v297, AssociatedTypeWitness);
    uint64_t v95 = v307;
    sub_10096B0D0();
    sub_10096B080();
    double v97 = v96;
    unint64_t v98 = *v305;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v305)(v95, v308);
    double v99 = v97 * 1000000000.0;
    TupleTypeMetadata2 = v288;
    if ((~COERCE__INT64(v97 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
    if (v99 <= -9.22337204e18) {
      goto LABEL_138;
    }
    if (v99 >= 9.22337204e18) {
      goto LABEL_139;
    }
    uint64_t v100 = v306;
    uint64_t v101 = sub_1008AA66C(v306, 0, (uint64_t)v99, 0x8000);
    uint64_t v102 = v100;
    long long v103 = v304;
    ((void (*)(uint64_t, uint64_t))v304)(v102, AssociatedTypeWitness);
    uint64_t v104 = v307;
    sub_10096B0D0();
    sub_10096B080();
    double v106 = v105;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v98)(v104, v308);
    double v107 = v106 * 1000000000.0;
    if ((~COERCE__INT64(v106 * 1000000000.0) & 0x7FF0000000000000) == 0) {
      goto LABEL_140;
    }
    if (v107 <= -9.22337204e18) {
      goto LABEL_141;
    }
    if (v107 >= 9.22337204e18) {
      goto LABEL_142;
    }
    sub_10059C450(v101);
    uint64_t v4 = v75;
    if (v75)
    {
      swift_release();
      ((void (*)(char *, uint64_t))v103)(v53, AssociatedTypeWitness);
      return swift_release();
    }
    ((void (*)(char *, uint64_t))v103)(v53, AssociatedTypeWitness);
    uint64_t result = swift_release();
    char v63 = v290;
    uint64_t v52 = v291;
    unint64_t v59 = (unint64_t)v302;
    uint64_t v61 = (uint64_t)v303;
    if (v302) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v72 = v61 + 1;
    if (__OFADD__(v61, 1)) {
      goto LABEL_143;
    }
    if (v72 >= v274)
    {
      uint64_t v303 = (void *)v61;
      goto LABEL_14;
    }
    unint64_t v73 = *(void *)(v272 + 8 * v72);
    if (v73) {
      goto LABEL_12;
    }
    uint64_t v108 = v61 + 2;
    if (v61 + 2 >= v274)
    {
      uint64_t v65 = 0;
      uint64_t v68 = 1;
      uint64_t v303 = (void *)(v61 + 1);
    }
    else
    {
      unint64_t v73 = *(void *)(v272 + 8 * v108);
      if (v73)
      {
        uint64_t v72 = v61 + 2;
LABEL_12:
        uint64_t v65 = (v73 - 1) & v73;
        unint64_t v66 = __clz(__rbit64(v73)) + (v72 << 6);
        uint64_t v303 = (void *)v72;
        goto LABEL_8;
      }
      int64_t v109 = v61 + 3;
      if (v109 < v274)
      {
        unint64_t v73 = *(void *)(v272 + 8 * v109);
        if (!v73)
        {
          while (1)
          {
            uint64_t v72 = v109 + 1;
            if (__OFADD__(v109, 1)) {
              goto LABEL_144;
            }
            if (v72 >= v274)
            {
              uint64_t v65 = 0;
              uint64_t v68 = 1;
              uint64_t v303 = (void *)v259;
              goto LABEL_15;
            }
            unint64_t v73 = *(void *)(v272 + 8 * v72);
            ++v109;
            if (v73) {
              goto LABEL_12;
            }
          }
        }
        uint64_t v72 = v109;
        goto LABEL_12;
      }
      uint64_t v303 = (void *)v108;
LABEL_14:
      uint64_t v65 = 0;
      uint64_t v68 = 1;
    }
  }
  uint64_t result = swift_release();
  uint64_t v125 = v264;
  uint64_t v126 = v299;
  if (*(unsigned char *)(v271 + 48))
  {
    id v127 = (id)fpfs_current_or_default_log();
    uint64_t v128 = v260;
    sub_10096B490();
    uint64_t v129 = sub_10096B470();
    os_log_type_t v130 = sub_10096C5A0();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = (uint8_t *)swift_slowAlloc();
      uint64_t v132 = swift_slowAlloc();
      uint64_t v292 = v4;
      uint64_t v312 = (unsigned __int8 *)v132;
      *(_DWORD *)uint64_t v131 = v275;
      uint64_t v309 = (char *)(v131 + 4);
      uint64_t v133 = v278;
      uint64_t v134 = v279;
      swift_storeEnumTagMultiPayload();
      unint64_t v135 = sub_10045016C(v134);
      uint64_t v266 = AssociatedTypeWitness;
      unint64_t v137 = v136;
      (*v276)(v133, v134);
      uint64_t v311 = sub_100719D44(v135, v137, (uint64_t *)&v312);
      sub_10096C8C0();
      uint64_t AssociatedTypeWitness = v266;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "%{public}s", v131, 0xCu);
      swift_arrayDestroy();
      uint64_t v4 = v292;
      swift_slowDealloc();
      uint64_t v126 = v299;
      swift_slowDealloc();

      (*v286)(v260, v298);
    }
    else
    {

      (*v286)(v128, v298);
    }
    uint64_t v182 = v261;
    *long long v261 = 0;
    uint64_t v183 = v263;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *))(*v126 + 312))(v182);
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v262 + 8))(v182, v183);
    uint64_t v125 = v264;
  }
  uint64_t v184 = v265;
  if (*(unsigned char *)(v271 + 49))
  {
    id v185 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v186 = sub_10096B470();
    os_log_type_t v187 = sub_10096C5A0();
    if (os_log_type_enabled(v186, v187))
    {
      uint64_t v188 = (uint8_t *)swift_slowAlloc();
      uint64_t v189 = swift_slowAlloc();
      uint64_t v292 = v4;
      uint64_t v312 = (unsigned __int8 *)v189;
      *(_DWORD *)uint64_t v188 = v275;
      uint64_t v309 = (char *)(v188 + 4);
      uint64_t v190 = v278;
      uint64_t v191 = v279;
      swift_storeEnumTagMultiPayload();
      unint64_t v192 = sub_10045016C(v191);
      uint64_t v266 = AssociatedTypeWitness;
      unint64_t v194 = v193;
      (*v276)(v190, v191);
      uint64_t v311 = sub_100719D44(v192, v194, (uint64_t *)&v312);
      sub_10096C8C0();
      uint64_t AssociatedTypeWitness = v266;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v186, v187, "%{public}s", v188, 0xCu);
      swift_arrayDestroy();
      uint64_t v4 = v292;
      swift_slowDealloc();
      uint64_t v126 = v299;
      swift_slowDealloc();

      (*v286)(v264, v298);
    }
    else
    {

      (*v286)(v125, v298);
    }
    uint64_t v195 = v261;
    *long long v261 = 0;
    uint64_t v196 = v263;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *))(*v126 + 312))(v195);
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v262 + 8))(v195, v196);
    uint64_t v184 = v265;
  }
  if ((*(unsigned char *)(v271 + 50) & 1) == 0)
  {
    uint64_t v197 = v270;
    goto LABEL_91;
  }
  id v198 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v199 = sub_10096B470();
  os_log_type_t v200 = sub_10096C5A0();
  if (os_log_type_enabled(v199, v200))
  {
    uint64_t v201 = (uint8_t *)swift_slowAlloc();
    uint64_t v202 = swift_slowAlloc();
    uint64_t v292 = v4;
    uint64_t v312 = (unsigned __int8 *)v202;
    *(_DWORD *)uint64_t v201 = v275;
    uint64_t v309 = (char *)(v201 + 4);
    uint64_t v203 = v278;
    uint64_t v204 = v279;
    swift_storeEnumTagMultiPayload();
    unint64_t v205 = sub_10045016C(v204);
    uint64_t v266 = AssociatedTypeWitness;
    unint64_t v207 = v206;
    (*v276)(v203, v204);
    uint64_t v311 = sub_100719D44(v205, v207, (uint64_t *)&v312);
    sub_10096C8C0();
    uint64_t AssociatedTypeWitness = v266;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v199, v200, "%{public}s", v201, 0xCu);
    swift_arrayDestroy();
    uint64_t v4 = v292;
    swift_slowDealloc();
    swift_slowDealloc();

    (*v286)(v265, v298);
  }
  else
  {

    (*v286)(v184, v298);
  }
  uint64_t v312 = (unsigned __int8 *)v296;
  uint64_t v313 = v295;
  uint64_t v314 = v294;
  uint64_t v315 = v293;
  type metadata accessor for Ingestion.FetchEventStream();
  sub_10085378C();
  uint64_t v208 = v307;
  sub_10096B0D0();
  sub_10096B080();
  double v210 = v209;
  uint64_t v211 = *v305;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))*v305)(v208, v308);
  double v212 = v210 * 1000000000.0;
  if ((~COERCE__INT64(v210 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_152;
  }
  if (v212 <= -9.22337204e18)
  {
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
  if (v212 >= 9.22337204e18)
  {
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  uint64_t v213 = v306;
  uint64_t v214 = sub_1008AA604(v306, 0x2000000000000000, (uint64_t)v212, 0);
  ((void (*)(uint64_t, uint64_t))*v310)(v213, AssociatedTypeWitness);
  uint64_t v215 = v307;
  sub_10096B0D0();
  sub_10096B080();
  double v217 = v216;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v211)(v215, v308);
  double v218 = v217 * 1000000000.0;
  if ((~COERCE__INT64(v217 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  uint64_t v197 = v270;
  if (v218 <= -9.22337204e18)
  {
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  if (v218 >= 9.22337204e18)
  {
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
  uint64_t v126 = v299;
  sub_10059C450(v214);
  uint64_t result = swift_release();
  if (v4) {
    return result;
  }
LABEL_91:
  if ((*(unsigned char *)(v197 + 32) & 1) == 0)
  {
    char v220 = *(unsigned char *)((*(uint64_t (**)(uint64_t))(*v126 + 192))(result) + 48);
    uint64_t result = swift_release();
    if ((v220 & 1) == 0)
    {
      if (*(unsigned char *)(v197 + 32) == 1) {
        goto LABEL_92;
      }
      goto LABEL_96;
    }
LABEL_97:
    uint64_t v221 = *(unsigned __int8 *)(v197 + 32);
    uint64_t v222 = swift_allocObject();
    uint64_t v223 = v271;
    long long v224 = *(_OWORD *)(v271 + 16);
    *(_OWORD *)(v222 + 16) = *(_OWORD *)v271;
    *(_OWORD *)(v222 + 32) = v224;
    long long v225 = *(_OWORD *)(v223 + 48);
    *(_OWORD *)(v222 + 48) = *(_OWORD *)(v223 + 32);
    *(_OWORD *)(v222 + 64) = v225;
    *(void *)(v222 + 80) = v126;
    uint64_t v226 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, libfssync::Filename (__swiftcall *)(Swift::String), void, uint64_t (*)(), uint64_t))(*v126 + 424);
    sub_1004A61D8(v223);
    swift_retain();
    v226("processStreamEvent(db:)", 23, 2, v221, 1, Filename.init(rawValue:), 0, sub_1006F387C, v222);
    return swift_release();
  }
LABEL_92:
  char v219 = *(unsigned char *)((*(uint64_t (**)(uint64_t))(*v126 + 192))(result) + 49);
  uint64_t result = swift_release();
  if (v219) {
    goto LABEL_97;
  }
LABEL_96:
  if (((*(uint64_t (**)(uint64_t))(*v126 + 152))(result) & 4) == 0) {
    goto LABEL_97;
  }
  uint64_t v227 = v4;
  uint64_t v228 = *(void *)(v271 + 8);
  uint64_t v229 = v228 + 64;
  uint64_t v230 = 1 << *(unsigned char *)(v228 + 32);
  uint64_t v231 = -1;
  if (v230 < 64) {
    uint64_t v231 = ~(-1 << v230);
  }
  unint64_t v232 = v231 & *(void *)(v228 + 64);
  int64_t v233 = (unint64_t)(v230 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v234 = 0;
  uint64_t v235 = (uint64_t)v268;
  while (2)
  {
    if (v232)
    {
      unint64_t v236 = __clz(__rbit64(v232));
      v232 &= v232 - 1;
      unint64_t v237 = v236 | (v234 << 6);
      uint64_t v238 = v299;
      goto LABEL_104;
    }
    BOOL v242 = __OFADD__(v234++, 1);
    uint64_t v238 = v299;
    if (v242) {
      goto LABEL_145;
    }
    if (v234 >= v233) {
      return swift_release();
    }
    unint64_t v243 = *(void *)(v229 + 8 * v234);
    if (v243)
    {
LABEL_118:
      unint64_t v232 = (v243 - 1) & v243;
      unint64_t v237 = __clz(__rbit64(v243)) + (v234 << 6);
LABEL_104:
      uint64_t v239 = v267;
      sub_1006F90F0(*(void *)(v228 + 56) + *(void *)(v269 + 72) * v237, v267, (uint64_t (*)(void))type metadata accessor for SyncState);
      sub_1006F9158(v239, v235, (uint64_t (*)(void))type metadata accessor for SyncState);
      uint64_t v240 = v238[7];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v240 + 8))(v235, ObjectType, v240);
      uint64_t result = sub_1006F7C48(v235, (uint64_t (*)(void))type metadata accessor for SyncState);
      if (v227) {
        return swift_release();
      }
      continue;
    }
    break;
  }
  int64_t v244 = v234 + 1;
  if (v234 + 1 >= v233) {
    return swift_release();
  }
  unint64_t v243 = *(void *)(v229 + 8 * v244);
  if (v243) {
    goto LABEL_117;
  }
  int64_t v244 = v234 + 2;
  if (v234 + 2 >= v233) {
    return swift_release();
  }
  unint64_t v243 = *(void *)(v229 + 8 * v244);
  if (v243) {
    goto LABEL_117;
  }
  int64_t v244 = v234 + 3;
  if (v234 + 3 >= v233) {
    return swift_release();
  }
  unint64_t v243 = *(void *)(v229 + 8 * v244);
  if (v243) {
    goto LABEL_117;
  }
  int64_t v244 = v234 + 4;
  if (v234 + 4 >= v233) {
    return swift_release();
  }
  unint64_t v243 = *(void *)(v229 + 8 * v244);
  if (v243)
  {
LABEL_117:
    int64_t v234 = v244;
    goto LABEL_118;
  }
  while (1)
  {
    int64_t v234 = v244 + 1;
    if (__OFADD__(v244, 1)) {
      break;
    }
    if (v234 >= v233) {
      return swift_release();
    }
    unint64_t v243 = *(void *)(v229 + 8 * v234);
    ++v244;
    if (v243) {
      goto LABEL_118;
    }
  }
LABEL_170:
  __break(1u);
  return result;
}

uint64_t sub_1006D30F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SyncState();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v25 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (v15)
  {
    unint64_t v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v19 = v18 | (v17 << 6);
LABEL_5:
    sub_1006F90F0(*(void *)(v11 + 56) + *(void *)(v27 + 72) * v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SyncState);
    sub_1006F9158((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SyncState);
    uint64_t v20 = *(void *)(a2 + 56);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 8))(v8, ObjectType, v20);
    uint64_t result = sub_1006F7C48((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SyncState);
    if (v2) {
      return swift_release();
    }
  }
  if (__OFADD__(v17++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v17 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v17);
  if (v23)
  {
LABEL_19:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v17 << 6);
    goto LABEL_5;
  }
  int64_t v24 = v17 + 1;
  if (v17 + 1 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v17 + 2;
  if (v17 + 2 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v17 + 3;
  if (v17 + 3 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v17 + 4;
  if (v17 + 4 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
LABEL_18:
    int64_t v17 = v24;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v17 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v17 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v17);
    ++v24;
    if (v23) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1006D33C0(void *a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v30 = a2;
  uint64_t v4 = type metadata accessor for FileTreeChangeAggregator.Change();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v31 = v2;
  uint64_t v11 = *v2;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v13._uint64_t countAndFlagsBits = v11;
  v13._object = AssociatedTypeWitness;
  uint64_t countAndFlagsBits = Filename.init(rawValue:)(v13).rawValue._countAndFlagsBits;
  uint64_t v15 = *(void *)(countAndFlagsBits + 64);
  uint64_t v32 = countAndFlagsBits + 64;
  uint64_t v16 = 1 << *(unsigned char *)(countAndFlagsBits + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v35 = v5 + 16;
  int64_t v33 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v34 = v5 + 32;
  unint64_t v19 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v37 = countAndFlagsBits;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (!v18) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v37 + 56) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    sub_1006D3720((uint64_t)v8, v36);
    if (v3)
    {
      swift_release();
      return (*v19)(v8, v4);
    }
    uint64_t result = (*v19)(v8, v4);
    if (v18) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v21++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v21 >= v33) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v21);
    if (!v25) {
      break;
    }
LABEL_15:
    unint64_t v18 = (v25 - 1) & v25;
  }
  int64_t v26 = v21 + 1;
  if (v21 + 1 >= v33) {
    goto LABEL_24;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v21 + 2;
  if (v21 + 2 >= v33) {
    goto LABEL_24;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v21 + 3;
  if (v21 + 3 >= v33)
  {
LABEL_24:
    uint64_t v28 = v30;
    swift_release();
    return sub_1006D0B60(v36, v28);
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_14:
    int64_t v21 = v26;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v21 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v21 >= v33) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v21);
    ++v26;
    if (v25) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1006D3720(uint64_t a1, void *a2)
{
  uint64_t v25 = a1;
  uint64_t v3 = (void *)*a2;
  uint64_t v4 = sub_10096B0E0();
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v3[10];
  uint64_t v8 = v3[12];
  uint64_t v9 = type metadata accessor for FileTreeWriter.FileTreeChange();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = ((char *)&v23 - v11);
  uint64_t v13 = v3[11];
  uint64_t v14 = v3[13];
  uint64_t v27 = v7;
  uint64_t v28 = v13;
  uint64_t v29 = v8;
  uint64_t v30 = v14;
  type metadata accessor for ConcreteJobResult();
  uint64_t v15 = sub_100591720();
  uint64_t v16 = type metadata accessor for FileTreeChangeAggregator.Change();
  sub_1006D0848(v16, (uint64_t)v12);
  uint64_t v17 = v26;
  sub_1008726B4(v12, 0, v15, a2);
  if (v17)
  {
    swift_release();
    return (*(uint64_t (**)(NSObject *, uint64_t))(v10 + 8))(v12, v9);
  }
  (*(void (**)(NSObject *, uint64_t))(v10 + 8))(v12, v9);
  sub_10096B0D0();
  sub_10096B080();
  double v20 = v19;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  double v21 = v20 * 1000000000.0;
  if ((~COERCE__INT64(v20 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v21 < 9.22337204e18)
  {
    uint64_t v22 = sub_10059C6F4((uint64_t)v15, (uint64_t)v21);
    (*(void (**)(uint64_t))(*a2 + 552))(v22);
    return swift_release();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1006D3A2C(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v94 = (char *)a1;
  uint64_t v5 = *a2;
  uint64_t v90 = sub_10096B0E0();
  uint64_t v84 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v89 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v78 = sub_10096C890();
  uint64_t v79 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  unint64_t v73 = (char *)&v71 - v8;
  uint64_t v9 = *(void *)(a3 + 24);
  type metadata accessor for SnapshotItem();
  uint64_t v72 = sub_10096C890();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v74 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v71 - v10);
  uint64_t v11 = type metadata accessor for FileTreeChangeAggregator.Change();
  uint64_t v12 = sub_10096C890();
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v76 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v77 = (char *)&v71 - v16;
  uint64_t v88 = v11;
  uint64_t v87 = *(void *)(v11 - 8);
  __chkstk_darwin(v15);
  uint64_t v75 = (char *)&v71 - v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v91 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = __chkstk_darwin(AssociatedTypeWitness);
  double v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v85 = (char *)&v71 - v22;
  __chkstk_darwin(v21);
  uint64_t v80 = (uint64_t)&v71 - v23;
  uint64_t v24 = *(void *)(v5 + 88);
  os_log_type_t v83 = a2;
  uint64_t v25 = *(void *)(v5 + 104);
  uint64_t v95 = v7;
  uint64_t v96 = v24;
  uint64_t v97 = v9;
  uint64_t v98 = v25;
  uint64_t v26 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v71 - v28;
  uint64_t v95 = v7;
  uint64_t v96 = v24;
  uint64_t v97 = v9;
  uint64_t v98 = v25;
  type metadata accessor for ConcreteJobResult();
  uint64_t v92 = sub_100591720();
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v29, v94, v26);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 7)
  {
    if (EnumCaseMultiPayload == 6)
    {
      uint64_t v31 = AssociatedTypeWitness;
      uint64_t v32 = v78;
      unint64_t v94 = &v29[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v33 = v91;
      uint64_t v34 = v80;
      (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v80, v29, v31);
      swift_getAssociatedConformanceWitness();
      uint64_t v35 = v88;
      sub_10096BA80();
      uint64_t v36 = v77;
      sub_10096B9E0();
      uint64_t v37 = v87;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v36, 1, v35) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v31);
        swift_release();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v36, v82);
        return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v94, v32);
      }
      uint64_t v45 = v75;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v75, v36, v35);
      uint64_t v46 = (uint64_t)v73;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v73, &v45[*(int *)(v35 + 36)], v32);
      uint64_t v47 = v74;
      sub_10060A8A0(v46, v7, v9, (uint64_t)v74);
      uint64_t v48 = v89;
      sub_10096B0D0();
      sub_10096B080();
      double v50 = v49;
      uint64_t v44 = v84;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v48, v90);
      double v51 = v50 * 1000000000.0;
      if ((~COERCE__INT64(v50 * 1000000000.0) & 0x7FF0000000000000) == 0) {
        goto LABEL_25;
      }
      uint64_t v52 = v93;
      uint64_t v53 = v80;
      if (v51 <= -9.22337204e18)
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v43 = v92;
      if (v51 >= 9.22337204e18)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      sub_10086C908(v47, v80, 0, 0, 1, v83, 0x2000000000000000, (uint64_t)v51, 2048, v92);
      if (v52)
      {
        swift_release();
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v71 + 8))(v47, v72);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v75, v88);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v53, v31);
        return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v94, v32);
      }
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v71 + 8))(v47, v72);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v75, v88);
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v53, v31);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v94, v32);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
      uint64_t v43 = v92;
      uint64_t v44 = v84;
    }
LABEL_18:
    uint64_t v66 = v90;
    uint64_t v67 = v89;
    sub_10096B0D0();
    sub_10096B080();
    double v69 = v68;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v67, v66);
    double v70 = v69 * 1000000000.0;
    if ((~COERCE__INT64(v69 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v70 > -9.22337204e18)
      {
        if (v70 < 9.22337204e18)
        {
          sub_10059C6F4(v43, (uint64_t)v70);
          return swift_release();
        }
        goto LABEL_24;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v94 = v20;
  uint64_t v39 = v91;
  uint64_t v40 = AssociatedTypeWitness;
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v85, v29, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  uint64_t v41 = v88;
  sub_10096BA80();
  uint64_t v42 = v76;
  sub_10096B9E0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v42, 1, v41) == 1)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v42, v82);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v85, v40);
  }
  (*(void (**)(char *, uint64_t))(v81 + 8))(v42, v82);
  uint64_t v95 = v7;
  uint64_t v96 = v24;
  uint64_t v97 = v9;
  uint64_t v98 = v25;
  type metadata accessor for Ingestion.FetchItemMetadata();
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v94, v85, v40);
  uint64_t v54 = v89;
  sub_10096B0D0();
  sub_10096B080();
  double v56 = v55;
  uint64_t v44 = v84;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v54, v90);
  double v57 = v56 * 1000000000.0;
  if ((~COERCE__INT64(v56 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_28;
  }
  if (v57 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v88 = v24;
  uint64_t v58 = (uint64_t)v94;
  if (v57 < 9.22337204e18)
  {
    uint64_t v59 = sub_1008AA66C((uint64_t)v94, 0x2000000000000000, (uint64_t)v57, 2048);
    uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
    uint64_t v61 = v58;
    uint64_t v62 = AssociatedTypeWitness;
    v60(v61, AssociatedTypeWitness);
    uint64_t v63 = *(void *)(v59 + 96);
    uint64_t v64 = *(void *)(v59 + 104);
    *(void *)(v59 + 96) = 0;
    *(void *)(v59 + 104) = 0;
    char v65 = *(unsigned char *)(v59 + 112);
    *(unsigned char *)(v59 + 112) = 1;
    sub_1000D31F8(v63, v64, v65);
    uint64_t v95 = v7;
    uint64_t v96 = v88;
    uint64_t v97 = v9;
    uint64_t v98 = v25;
    type metadata accessor for JobResult();
    uint64_t v43 = v92;
    sub_1004D4360(v92, v59);
    swift_release();
    v60((uint64_t)v85, v62);
    goto LABEL_18;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1006D45E4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v40 = *(void *)(a2 + 16);
  type metadata accessor for FileTreeWriter.StreamResetReason();
  swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_10096C890();
  uint64_t v7 = *(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(v45, v2 + 16, v6);
  v7(v46, v45, v6);
  char v8 = v46[0];
  if (v46[0] != 2)
  {
    uint64_t v9 = v47;
    char v10 = v48;
    uint64_t v12 = a1[3];
    uint64_t v11 = a1[4];
    uint64_t v39 = sub_10002689C(a1, v12);
    uint64_t v43 = 0;
    uint64_t v44 = (void *)0xE000000000000000;
    sub_10096CBD0(24);
    v49._uint64_t countAndFlagsBits = 0x3A7465736572202BLL;
    v49._object = (void *)0xE900000000000020;
    sub_10096BDC0(v49);
    uint64_t v41 = v9;
    char v42 = v10;
    swift_getWitnessTable();
    sub_10096D270();
    v50._uint64_t countAndFlagsBits = 0x6579616C6564202CLL;
    v50._object = (void *)0xEB00000000203A64;
    sub_10096BDC0(v50);
    if (v8) {
      v13._uint64_t countAndFlagsBits = 1702195828;
    }
    else {
      v13._uint64_t countAndFlagsBits = 0x65736C6166;
    }
    if (v8) {
      uint64_t v14 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v14 = (void *)0xE500000000000000;
    }
    v13._object = v14;
    sub_10096BDC0(v13);
    swift_bridgeObjectRelease();
    sub_10059A0E8(v43, v44, v12, v11);
    swift_bridgeObjectRelease();
  }
  if (v2[48])
  {
    uint64_t v15 = 0x6B636F6C626E7520;
    uint64_t v16 = (void *)0xE800000000000000;
  }
  else
  {
    if ((v2[49] & 1) == 0) {
      goto LABEL_20;
    }
    uint64_t v15 = 0;
    uint64_t v16 = (void *)0xE000000000000000;
  }
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  sub_10002689C(a1, v17);
  uint64_t v43 = 0x3A656C6469202BLL;
  uint64_t v44 = (void *)0xE700000000000000;
  v51._uint64_t countAndFlagsBits = v15;
  v51._object = v16;
  sub_10096BDC0(v51);
  swift_bridgeObjectRelease();
  if (v2[49]) {
    v19._uint64_t countAndFlagsBits = 0x6E616373657220;
  }
  else {
    v19._uint64_t countAndFlagsBits = 0;
  }
  if (v2[49]) {
    double v20 = (void *)0xE700000000000000;
  }
  else {
    double v20 = (void *)0xE000000000000000;
  }
  v19._object = v20;
  sub_10096BDC0(v19);
  swift_bridgeObjectRelease();
  sub_10059A0E8(v43, v44, v17, v18);
  swift_bridgeObjectRelease();
LABEL_20:
  if (v2[50])
  {
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    sub_10002689C(a1, v21);
    sub_10059A0E8(0x6C616E676973202BLL, (void *)0xEA00000000006465, v21, v22);
  }
  uint64_t v23 = v40;
  swift_getAssociatedTypeWitness();
  type metadata accessor for FileTreeChangeAggregator.Change();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_10096BA50();
  if ((result & 1) == 0)
  {
    uint64_t v25 = a1[3];
    uint64_t v26 = a1[4];
    sub_10002689C(a1, v25);
    sub_10059A0E8(0x65676E616863202BLL, (void *)0xEA00000000003A73, v25, v26);
    uint64_t v27 = a1[3];
    uint64_t v28 = a1[4];
    uint64_t v29 = sub_10002689C(a1, v27);
    __chkstk_darwin(v29);
    uint64_t v36 = v40;
    uint64_t v37 = v5;
    uint64_t v38 = v3;
    uint64_t result = sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1006F7B78, (uint64_t)v35, v27, (uint64_t)&type metadata for () + 8, v28);
  }
  if (*(void *)(*((void *)v3 + 1) + 16))
  {
    uint64_t v30 = a1[3];
    uint64_t v31 = a1[4];
    sub_10002689C(a1, v30);
    sub_10059A0E8(0x697469736F70202BLL, (void *)0xEC0000003A736E6FLL, v30, v31);
    uint64_t v32 = a1[3];
    uint64_t v33 = a1[4];
    uint64_t v34 = sub_10002689C(a1, v32);
    __chkstk_darwin(v34);
    uint64_t v36 = v23;
    uint64_t v37 = v5;
    uint64_t v38 = v3;
    return sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1006F7B98, (uint64_t)v35, v32, (uint64_t)&type metadata for () + 8, v33);
  }
  return result;
}

uint64_t sub_1006D4AE0(void *a1, uint64_t *a2)
{
  uint64_t v35 = a1;
  uint64_t v3 = type metadata accessor for FileTreeChangeAggregator.Change();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v33 = (char *)&v27 - v5;
  uint64_t v6 = *a2;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v8._uint64_t countAndFlagsBits = v6;
  v8._object = AssociatedTypeWitness;
  uint64_t v32 = v3;
  uint64_t countAndFlagsBits = Filename.init(rawValue:)(v8).rawValue._countAndFlagsBits;
  uint64_t v10 = *(void *)(countAndFlagsBits + 64);
  uint64_t v28 = countAndFlagsBits + 64;
  uint64_t v11 = 1 << *(unsigned char *)(countAndFlagsBits + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v31 = v4 + 16;
  uint64_t v34 = v4;
  int64_t v29 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v30 = v4 + 8;
  uint64_t v36 = countAndFlagsBits;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  uint64_t v16 = v33;
  uint64_t v17 = v34;
  uint64_t v18 = v32;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      int64_t v39 = v15;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_5;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v23 >= v29) {
      return swift_release();
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    int64_t v25 = v15 + 1;
    if (!v24)
    {
      int64_t v25 = v15 + 2;
      if (v15 + 2 >= v29) {
        return swift_release();
      }
      unint64_t v24 = *(void *)(v28 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v15 + 3;
        if (v15 + 3 >= v29) {
          return swift_release();
        }
        unint64_t v24 = *(void *)(v28 + 8 * v25);
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v24 - 1) & v24;
    int64_t v39 = v25;
    unint64_t v20 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v16, *(void *)(v36 + 56) + *(void *)(v17 + 72) * v20, v18);
    uint64_t v21 = v35[3];
    uint64_t v22 = v35[4];
    sub_10002689C(v35, v21);
    uint64_t v37 = 0;
    uint64_t v38 = (void *)0xE000000000000000;
    swift_getWitnessTable();
    sub_10096D270();
    sub_10059A0E8(v37, v38, v21, v22);
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v16, v18);
    int64_t v15 = v39;
  }
  uint64_t v26 = v15 + 4;
  if (v15 + 4 >= v29) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v28 + 8 * v26);
  if (v24)
  {
    int64_t v25 = v15 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v29) {
      return swift_release();
    }
    unint64_t v24 = *(void *)(v28 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1006D4E20(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SyncState();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v24 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v25 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v27 = v7;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v13;
    if (!v21)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v25) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v24 + 8 * v13);
      if (!v21)
      {
        int64_t v13 = v20 + 2;
        if (v20 + 2 >= v25) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v24 + 8 * v13);
        if (!v21)
        {
          int64_t v13 = v20 + 3;
          if (v20 + 3 >= v25) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v24 + 8 * v13);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_5:
    sub_1006F90F0(*(void *)(v27 + 56) + *(void *)(v26 + 72) * v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SyncState);
    uint64_t v16 = a1[3];
    uint64_t v17 = a1[4];
    sub_10002689C(a1, v16);
    uint64_t v18 = sub_100598FFC();
    sub_10059A0E8(v18, v19, v16, v17);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1006F7C48((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SyncState);
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v25) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v13 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v13);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

double sub_1006D50B4@<D0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for FileTreeChangeAggregator.Change();
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_10096BA00();
  unint64_t v3 = sub_10009471C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for FileTreeWriter.StreamResetReason();
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  uint64_t v4 = sub_10096BA00();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)&double result = 2;
  *(_OWORD *)(a1 + 16) = xmmword_100984A70;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v4;
  *(_WORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 50) = 0;
  *(void *)(a1 + 56) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1006D520C()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_INTERVAL, XPC_ACTIVITY_INTERVAL_1_DAY);
  xpc_dictionary_set_string(v0, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_MAINTENANCE);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_ALLOW_BATTERY, 0);
  id v1 = objc_allocWithZone((Class)FPDSharedScheduler);
  NSString v2 = sub_10096BC00();
  id v3 = [v1 initWithLabel:v2 criteria:v0];

  uint64_t result = swift_unknownObjectRelease();
  qword_100B0B300 = (uint64_t)v3;
  return result;
}

uint64_t sub_1006D52F8()
{
  id v0 = objc_allocWithZone((Class)FPDSharedScheduler);
  NSString v1 = sub_10096BC00();
  v5[4] = sub_1006D53F4;
  v5[5] = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_1006EFFE0;
  v5[3] = &unk_100A97110;
  NSString v2 = _Block_copy(v5);
  id v3 = [v0 initWithLabel:v1 options:2 criteriaBuilder:v2];

  _Block_release(v2);
  uint64_t result = swift_release();
  qword_100B0B308 = (uint64_t)v3;
  return result;
}

xpc_object_t sub_1006D53F4()
{
  uint64_t v0 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v0 - 8);
  NSString v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10096B210();
  uint64_t v3 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096B1F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096A930();
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v26 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10096B0E0();
  uint64_t v27 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  xpc_object_t v16 = xpc_dictionary_create(0, 0, 0);
  sub_10096B0D0();
  sub_10096B1D0();
  sub_10096B200();
  int64_t v29 = v15;
  sub_10096B1B0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v28);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10096A900();
  sub_10096A910();
  sub_10096A920();
  sub_10096A8E0();
  if ((sub_10096A8D0() & 1) == 0) {
LABEL_23:
  }
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 111, 2, 346);
  sub_10096A8F0();
  uint64_t v17 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v2, 1, v13) == 1)
  {
    sub_10002B770((uint64_t)v2, (uint64_t *)&unk_100ACB5E0);
    double v18 = 0.0;
    unint64_t v19 = v29;
  }
  else
  {
    unint64_t v19 = v29;
    sub_10096B010();
    double v18 = v20;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v2, v13);
    if (v18 > 0.0) {
      goto LABEL_6;
    }
  }
  double v18 = v18 + 86400.0;
LABEL_6:
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v18 < 9.22337204e18)
  {
    xpc_dictionary_set_int64(v16, XPC_ACTIVITY_DELAY, (uint64_t)v18);
    xpc_dictionary_set_int64(v16, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_1_HOUR);
    xpc_dictionary_set_BOOL(v16, XPC_ACTIVITY_REPEATING, 0);
    xpc_dictionary_set_string(v16, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
    if (qword_100ACC1A8 == -1) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  swift_once();
LABEL_10:
  BOOL v22 = dword_100B0B5E8 == 3 || dword_100B0B5E8 == 9;
  xpc_dictionary_set_BOOL(v16, XPC_ACTIVITY_ALLOW_BATTERY, v22);
  if (!XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY)
  {
    __break(1u);
    goto LABEL_23;
  }
  xpc_dictionary_set_BOOL(v16, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 1);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v13);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v26);
  return v16;
}

uint64_t sub_1006D5924()
{
  return sub_1006F0154(*v0, &qword_100ADA2C0);
}

unint64_t *sub_1006D5948(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1006F0D14(a1, a2, a3, *v3);
}

uint64_t sub_1006D5964(void *a1)
{
  uint64_t v3 = sub_10002B7CC((uint64_t *)&unk_100ADA2E0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002689C(a1, a1[3]);
  sub_1006F2F44();
  sub_10096D590();
  v8[15] = 0;
  sub_10096D1F0();
  if (!v1)
  {
    type metadata accessor for DBCounters();
    v8[14] = 1;
    sub_10096B0E0();
    sub_1006F9218(&qword_100ACB9B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1006D5B1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v22 = sub_10096B0E0();
  uint64_t v20 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10002B7CC(&qword_100ADA2C8);
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DBCounters();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v11 = 0;
  uint64_t v12 = (char *)v11 + *(int *)(v9 + 28);
  sub_10096B0B0();
  sub_10002689C(a1, a1[3]);
  sub_1006F2F44();
  sub_10096D570();
  if (!v2)
  {
    double v18 = v12;
    uint64_t v14 = v21;
    uint64_t v13 = v22;
    char v25 = 0;
    *uint64_t v11 = sub_10096D090();
    char v24 = 1;
    sub_1006F9218(&qword_100ACB9F0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v15 = v23;
    sub_10096D040();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v15);
    uint64_t v16 = v19;
    (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v18, v5, v13);
    sub_1006F90F0((uint64_t)v11, v16, (uint64_t (*)(void))type metadata accessor for DBCounters);
  }
  sub_1000268E0((uint64_t)a1);
  return sub_1006F7C48((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DBCounters);
}

uint64_t sub_1006D5E30()
{
  if (*v0) {
    return 0x7461447465736572;
  }
  else {
    return 0x756F436873756C66;
  }
}

uint64_t sub_1006D5E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006FB09C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006D5E9C(uint64_t a1)
{
  unint64_t v2 = sub_1006F2F44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006D5ED8(uint64_t a1)
{
  unint64_t v2 = sub_1006F2F44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006D5F14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006D5B1C(a1, a2);
}

uint64_t sub_1006D5F2C(void *a1)
{
  return sub_1006D5964(a1);
}

void sub_1006D5F48()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 128);
  if (v1)
  {
    uint64_t v2 = *(unsigned __int8 *)(v0 + 122);
    swift_retain();
    v1(v2);
    sub_1000705CC((uint64_t)v1);
  }
}

uint64_t sub_1006D5FBC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v8 = &a4[*(int *)(v7 + 52)];
  uint64_t v9 = sub_10096B7D0();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *(void *)&a4[*(int *)(v7 + 56)] = a3;
  return result;
}

uint64_t sub_1006D6064(void *a1)
{
  return sub_1006EF7CC(a1, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
}

id sub_1006D607C()
{
  sub_1006F90E4();
  swift_bridgeObjectRetain();
  NSString v0 = sub_10096BC00();
  swift_bridgeObjectRelease();

  return v0;
}

id sub_1006D60DC(id result, uint64_t a2)
{
  if (result)
  {
    if (qword_100ACC120 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_100B0B300;
    return [v3 markWatcherDone:a2];
  }
  return result;
}

uint64_t sub_1006D6158(void *a1)
{
  uint64_t v3 = *(void *)(*a1 + 576);
  uint64_t v4 = *(void *)(*a1 + 584);
  uint64_t v5 = *(void *)(*a1 + 592);
  uint64_t v6 = *(void *)(*a1 + 600);
  uint64_t v63 = v3;
  uint64_t v64 = v4;
  uint64_t v65 = v5;
  uint64_t v66 = v6;
  uint64_t v7 = type metadata accessor for PersistenceTrigger();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  __chkstk_darwin(v7);
  uint64_t v60 = (char *)v48 - v8;
  uint64_t v9 = sub_10096B0E0();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  __chkstk_darwin(v9);
  uint64_t v54 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B480();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v58 = AssociatedTypeWitness;
  uint64_t v59 = v15;
  uint64_t v16 = __chkstk_darwin(AssociatedTypeWitness);
  double v57 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v48 - v19;
  uint64_t v21 = a1[2];
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 240))(v18);
  if (!v1)
  {
    if (result) {
      goto LABEL_3;
    }
    if (((*(uint64_t (**)(void))(*(void *)v21 + 248))() & 1) == 0) {
      goto LABEL_3;
    }
    uint64_t v25 = a1[4];
    uint64_t v51 = a1[3];
    v48[1] = v25;
    sub_10085378C();
    uint64_t v63 = v3;
    uint64_t v64 = v4;
    uint64_t v65 = v5;
    uint64_t v66 = v6;
    v48[0] = type metadata accessor for ItemJob();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
    swift_allocObject();
    uint64_t v27 = (void (*)(char *, uint64_t))sub_10096C0D0();
    Swift::String v49 = v28;
    Swift::String v50 = v27;
    uint64_t v63 = v3;
    uint64_t v64 = v4;
    uint64_t v65 = v5;
    uint64_t v66 = v6;
    uint64_t v29 = type metadata accessor for DiskImport.ContinueDiskImport();
    *Swift::String v49 = v29;
    uint64_t v30 = sub_1003FC080((uint64_t)v50);
    uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v51 + 272))(v20, v30);
    uint64_t v51 = v29;
    uint64_t v32 = v59 + 8;
    Swift::String v50 = *(void (**)(char *, uint64_t))(v59 + 8);
    v50(v20, v58);
    swift_bridgeObjectRelease();
    uint64_t v63 = v31;
    sub_10096C1C0();
    swift_getWitnessTable();
    LOBYTE(v25) = sub_10096C460();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0) {
      goto LABEL_3;
    }
    uint64_t v59 = v32;
    id v33 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v34 = sub_10096B470();
    os_log_type_t v35 = sub_10096C5C0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "👽  missing continue-disk-import job, adding a new one", v36, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v53);
    sub_10085378C();
    uint64_t v37 = v54;
    sub_10096B0D0();
    sub_10096B080();
    double v39 = v38;
    uint64_t v40 = v56;
    uint64_t v41 = *(uint64_t (**)(char *, uint64_t))(v55 + 8);
    uint64_t result = v41(v37, v56);
    double v42 = v39 * 1000000000.0;
    if ((~COERCE__INT64(v39 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v42 > -9.22337204e18)
      {
        if (v42 < 9.22337204e18)
        {
          uint64_t v43 = v57;
          uint64_t v44 = sub_1003A9380(v57, 0x2000000000000000, (uint64_t)v42, 0x20000);
          v50(v43, v58);
          sub_10096B0D0();
          sub_10096B080();
          double v46 = v45;
          uint64_t result = v41(v37, v40);
          double v47 = v46 * 1000000000.0;
          if ((~COERCE__INT64(v46 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v47 > -9.22337204e18)
            {
              if (v47 < 9.22337204e18)
              {
                sub_10059C450(v44);
                swift_release();
LABEL_3:
                uint64_t v23 = (uint64_t)v60;
                uint64_t v24 = v62;
                swift_storeEnumTagMultiPayload();
                sub_1006C8248(v23);
                return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v23, v24);
              }
              goto LABEL_22;
            }
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
            return result;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
  return result;
}

id sub_1006D6860(uint64_t a1)
{
  id result = (id)(*(uint64_t (**)(void))(**(void **)(a1 + 24) + 408))();
  if (!v1)
  {
    if (qword_100ACC000 != -1) {
      swift_once();
    }
    id result = [(id)qword_100B0B0C8 removeWatcher:a1];
    *(unsigned char *)(a1 + qword_100B0B3E0) = 0;
  }
  return result;
}

uint64_t sub_1006D6910(uint64_t a1)
{
  long long v1 = *(_OWORD *)(*(void *)a1 + 592);
  v7[0] = *(_OWORD *)(*(void *)a1 + 576);
  v7[1] = v1;
  uint64_t v2 = type metadata accessor for PersistenceTrigger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - v4;
  swift_storeEnumTagMultiPayload();
  sub_1006C8248((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1006D6A28(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  swift_retain();
  sub_1006CC164(v3);

  return swift_release();
}

uint64_t sub_1006D6A7C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 120) & 1) == 0)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10096C730();
    swift_unknownObjectRelease();
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_10096C750();
  swift_unknownObjectRelease();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_10096C720();
  return swift_unknownObjectRelease();
}

uint64_t sub_1006D6B50(void *a1)
{
  return sub_1006EF7CC(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter);
}

uint64_t sub_1006D6B68(uint64_t a1)
{
  *(unsigned char *)(a1 + 184) = 1;
  uint64_t v2 = qword_100B0B3B8;
  if (*(void *)(a1 + qword_100B0B3B8))
  {
    swift_retain();
    sub_1003E9FB8(0);
    swift_release();
  }
  *(void *)(a1 + v2) = 0;
  swift_release();
  uint64_t v3 = qword_100B0B3C0;
  if (*(void *)(a1 + qword_100B0B3C0))
  {
    swift_retain();
    sub_1006504DC();
    swift_release();
  }
  *(void *)(a1 + v3) = 0;
  return swift_release();
}

void sub_1006D6C14(void *a1)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v329 = sub_10096B480();
  uint64_t v331 = *(void *)(v329 - 8);
  uint64_t v3 = __chkstk_darwin(v329);
  uint64_t v330 = (char *)&v322 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v324 = (char *)&v322 - v5;
  uint64_t v6 = v2[72];
  uint64_t v7 = v2[73];
  uint64_t v8 = (ValueMetadata *)v2[74];
  uint64_t v9 = (ValueMetadata *)v2[75];
  uint64_t v392 = (void *)v6;
  uint64_t v393 = (ValueMetadata *)v7;
  uint64_t v10 = v6;
  size_t v394 = v8;
  uint64_t v395 = (uint64_t)v9;
  uint64_t v11 = v8;
  uint64_t v392 = (void *)type metadata accessor for UserRequest();
  uint64_t v393 = &type metadata for NSecTimestamp;
  uint64_t v12 = sub_10096B7D0();
  size_t v394 = (ValueMetadata *)v12;
  uint64_t v395 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v354 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v14 = __chkstk_darwin(TupleTypeMetadata);
  uint64_t v362 = (uint64_t *)((char *)&v322 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v361 = (uint64_t *)((char *)&v322 - v17);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v352 = (uint64_t *)((char *)&v322 - v19);
  uint64_t v322 = v20;
  __chkstk_darwin(v18);
  uint64_t v353 = (char *)&v322 - v21;
  uint64_t v390 = v22;
  uint64_t v364 = sub_10096C890();
  uint64_t v326 = *(void *)(v364 - 8);
  uint64_t v23 = __chkstk_darwin(v364);
  *(void *)&long long v388 = (char *)&v322 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v371 = (uint64_t *)((char *)&v322 - v26);
  __chkstk_darwin(v25);
  uint64_t v363 = (char *)&v322 - v27;
  uint64_t v392 = (void *)v7;
  uint64_t v393 = (ValueMetadata *)v10;
  size_t v394 = v9;
  uint64_t v395 = (uint64_t)v11;
  uint64_t v392 = (void *)type metadata accessor for UserRequest();
  uint64_t v393 = &type metadata for NSecTimestamp;
  size_t v394 = (ValueMetadata *)v12;
  uint64_t v395 = sub_100033BE8(&qword_100AD9D00);
  uint64_t v28 = (char *)swift_getTupleTypeMetadata();
  uint64_t v358 = *((void *)v28 - 1);
  uint64_t v29 = __chkstk_darwin(v28);
  unint64_t v366 = (uint64_t *)((char *)&v322 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v365 = (uint64_t *)((char *)&v322 - v32);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v356 = (uint64_t *)((char *)&v322 - v34);
  uint64_t v323 = v35;
  __chkstk_darwin(v33);
  uint64_t v357 = (char *)&v322 - v36;
  uint64_t v368 = sub_10096C890();
  uint64_t v328 = *(void *)(v368 - 8);
  uint64_t v37 = __chkstk_darwin(v368);
  uint64_t v381 = (char *)&v322 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v379 = (uint64_t *)((char *)&v322 - v40);
  __chkstk_darwin(v39);
  uint64_t v367 = (char *)&v322 - v41;
  uint64_t v392 = (void *)v10;
  uint64_t v393 = (ValueMetadata *)v7;
  uint64_t v42 = v10;
  uint64_t v349 = v10;
  size_t v394 = v11;
  uint64_t v395 = (uint64_t)v9;
  uint64_t v392 = (void *)type metadata accessor for UserRequest();
  uint64_t v342 = sub_100011348(255, &qword_100AD62F0);
  uint64_t v393 = (ValueMetadata *)v342;
  size_t v394 = (ValueMetadata *)v12;
  Swift::String v345 = (ValueMetadata *)v12;
  uint64_t v395 = sub_100033BE8(&qword_100AD9D00);
  uint64_t v43 = swift_getTupleTypeMetadata();
  uint64_t v370 = *(void *)(v43 - 8);
  uint64_t v44 = __chkstk_darwin(v43);
  uint64_t v375 = (uint64_t *)((char *)&v322 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v374 = (uint64_t *)((char *)&v322 - v47);
  __chkstk_darwin(v46);
  uint64_t v360 = (uint64_t *)((char *)&v322 - v48);
  uint64_t v378 = (char *)sub_10096C890();
  int64_t v391 = *((void *)v378 - 1);
  uint64_t v49 = __chkstk_darwin(v378);
  uint64_t v51 = (char *)&v322 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v49);
  uint64_t v382 = (uint64_t *)((char *)&v322 - v53);
  __chkstk_darwin(v52);
  uint64_t v377 = (char *)&v322 - v54;
  uint64_t v392 = (void *)v42;
  uint64_t v393 = (ValueMetadata *)v7;
  uint64_t v348 = (ValueMetadata *)v7;
  uint64_t v55 = v11;
  size_t v394 = v11;
  uint64_t v395 = (uint64_t)v9;
  uint64_t v346 = (uint64_t)v9;
  uint64_t v56 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v57 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v340 = (char *)&v322 - v58;
  uint64_t v334 = a1;
  uint64_t v59 = (void *)((char *)a1 + qword_100B0B318);
  swift_beginAccess();
  uint64_t v327 = v59;
  uint64_t v60 = *v59;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v347 = v55;
  uint64_t v62 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  v63._uint64_t countAndFlagsBits = v60;
  uint64_t v333 = AssociatedTypeWitness;
  v63._object = AssociatedTypeWitness;
  uint64_t v344 = v56;
  uint64_t v332 = v62;
  uint64_t countAndFlagsBits = Filename.init(rawValue:)(v63).rawValue._countAndFlagsBits;
  uint64_t v65 = *(void *)(countAndFlagsBits + 64);
  uint64_t v335 = countAndFlagsBits + 64;
  uint64_t v66 = 1 << *(unsigned char *)(countAndFlagsBits + 32);
  if (v66 < 64) {
    uint64_t v67 = ~(-1 << v66);
  }
  else {
    uint64_t v67 = -1;
  }
  unint64_t v68 = v67 & v65;
  int64_t v336 = (unint64_t)(v66 + 63) >> 6;
  uint64_t v339 = v57 + 16;
  uint64_t v341 = v57;
  uint64_t v338 = v57 + 8;
  uint64_t v387 = (char *)(v370 + 56);
  uint64_t v369 = (uint64_t *)(v370 + 16);
  unint64_t v386 = (char *)(v370 + 48);
  uint64_t v376 = v391 + 32;
  uint64_t v373 = v370 + 8;
  uint64_t v343 = countAndFlagsBits;
  swift_bridgeObjectRetain();
  int64_t v69 = 0;
  uint64_t v389 = v28;
  int64_t v391 = v43;
  k = v51;
  if (!v68) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v350 = (v68 - 1) & v68;
  int64_t v351 = v69;
  for (unint64_t i = __clz(__rbit64(v68)) | (v69 << 6); ; unint64_t i = __clz(__rbit64(v72)) + (v73 << 6))
  {
    uint64_t v75 = (char *)v341;
    uint64_t v76 = v340;
    uint64_t v77 = v344;
    (*(void (**)(char *, unint64_t, uint64_t))(v341 + 16))(v340, *(void *)(v343 + 56) + *(void *)(v341 + 72) * i, v344);
    uint64_t v78 = *(void *)&v76[*(int *)(v77 + 56)];
    uint64_t v79 = (void (*)(char *, uint64_t))*((void *)v75 + 1);
    swift_bridgeObjectRetain();
    v79(v76, v77);
    uint64_t v392 = (void *)v349;
    uint64_t v393 = v348;
    size_t v394 = v347;
    uint64_t v395 = v346;
    uint64_t v392 = (void *)type metadata accessor for UserRequest();
    uint64_t v393 = (ValueMetadata *)v342;
    size_t v394 = v345;
    uint64_t v395 = sub_100033BE8((uint64_t *)&unk_100ADA328);
    swift_getTupleTypeMetadata();
    v80._uint64_t countAndFlagsBits = v78;
    v80._object = &type metadata for ObjectIdentifier;
    uint64_t v81 = Filename.init(rawValue:)(v80).rawValue._countAndFlagsBits;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    int64_t v380 = 0;
    uint64_t v82 = *(void *)(v81 + 64);
    uint64_t v355 = v81 + 64;
    int64_t v372 = v81;
    uint64_t v83 = 1 << *(unsigned char *)(v81 + 32);
    if (v83 < 64) {
      uint64_t v84 = ~(-1 << v83);
    }
    else {
      uint64_t v84 = -1;
    }
    unint64_t v85 = v84 & v82;
    int64_t v359 = (unint64_t)(v83 + 63) >> 6;
    int64_t v337 = v359 - 1;
    if (!v85)
    {
LABEL_28:
      int64_t v104 = v380 + 1;
      if (!__OFADD__(v380, 1))
      {
        if (v104 < v359)
        {
          unint64_t v105 = *(void *)(v355 + 8 * v104);
          if (v105)
          {
LABEL_31:
            uint64_t j = (v105 - 1) & v105;
            unint64_t v101 = __clz(__rbit64(v105)) + (v104 << 6);
            int64_t v380 = v104;
            goto LABEL_27;
          }
          int64_t v106 = v380 + 2;
          ++v380;
          if (v104 + 1 < v359)
          {
            unint64_t v105 = *(void *)(v355 + 8 * v106);
            if (v105)
            {
LABEL_34:
              int64_t v104 = v106;
              goto LABEL_31;
            }
            int64_t v380 = v104 + 1;
            if (v104 + 2 < v359)
            {
              unint64_t v105 = *(void *)(v355 + 8 * (v104 + 2));
              if (v105)
              {
                v104 += 2;
                goto LABEL_31;
              }
              int64_t v106 = v104 + 3;
              int64_t v380 = v104 + 2;
              if (v104 + 3 < v359)
              {
                unint64_t v105 = *(void *)(v355 + 8 * v106);
                if (v105) {
                  goto LABEL_34;
                }
                while (1)
                {
                  int64_t v104 = v106 + 1;
                  if (__OFADD__(v106, 1)) {
                    goto LABEL_212;
                  }
                  if (v104 >= v359) {
                    break;
                  }
                  unint64_t v105 = *(void *)(v355 + 8 * v104);
                  ++v106;
                  if (v105) {
                    goto LABEL_31;
                  }
                }
                int64_t v380 = v337;
              }
            }
          }
        }
        long long v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v387;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v387)(v51, 1, 1, v43);
        uint64_t j = 0;
        goto LABEL_46;
      }
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      swift_bridgeObjectRelease();
      goto LABEL_135;
    }
    while (1)
    {
      uint64_t j = (v85 - 1) & v85;
      unint64_t v101 = __clz(__rbit64(v85)) | (v380 << 6);
LABEL_27:
      uint64_t v102 = v370;
      (*(void (**)(char *, unint64_t, uint64_t))(v370 + 16))(v51, *(void *)(v372 + 56) + *(void *)(v370 + 72) * v101, v43);
      long long v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
      v103(v51, 0, 1, v43);
LABEL_46:
      double v107 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))v386;
      uint64_t v108 = 1;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v386)(v51, 1, v43) != 1)
      {
        uint64_t v109 = *(int *)(v43 + 64);
        uint64_t v110 = &v51[v109];
        uint64_t v383 = *(int *)(v43 + 80);
        uint64_t v111 = *((void *)v51 + 1);
        id v112 = v360;
        *uint64_t v360 = *(void *)v51;
        v112[1] = v111;
        uint64_t v113 = (char *)v112 + v109;
        uint64_t v114 = sub_10096B7D0();
        uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32);
        v115(v113, v110, v114);
        uint64_t v116 = swift_allocObject();
        *(_OWORD *)(v116 + 16) = *(_OWORD *)&k[v383];
        uint64_t v117 = *v112;
        uint64_t v118 = v112[1];
        uint64_t v119 = v382;
        uint64_t v120 = (char *)v382 + *(int *)(v391 + 64);
        uint64_t v121 = (uint64_t (**)(uint64_t))((char *)v382 + *(int *)(v391 + 80));
        void *v382 = v117;
        v119[1] = v118;
        v115(v120, v113, v114);
        uint64_t v43 = v391;
        uint64_t v108 = 0;
        *uint64_t v121 = sub_1006FB2C0;
        v121[1] = (uint64_t (*)(uint64_t))v116;
        uint64_t v51 = k;
      }
      unint64_t v122 = v382;
      v103((char *)v382, v108, 1, v43);
      unint64_t v123 = (uint64_t *)v377;
      (*(void (**)(char *, void *, char *))v376)(v377, v122, v378);
      if (v107(v123, 1, v43) == 1) {
        break;
      }
      uint64_t v86 = *(int *)(v43 + 64);
      uint64_t v87 = v374;
      uint64_t v88 = (char *)v374 + v86;
      uint64_t v89 = *v123;
      uint64_t v90 = v123[1];
      uint64_t v383 = (uint64_t)v123 + v86;
      uint64_t v91 = *(int *)(v391 + 80);
      uint64_t v93 = *(void (**)(void))((char *)v123 + v91);
      uint64_t v92 = *(void (**)(void))((char *)v123 + v91 + 8);
      unint64_t v94 = (void (**)(void))((char *)v374 + v91);
      void *v374 = v89;
      v87[1] = v90;
      uint64_t v95 = sub_10096B7D0();
      uint64_t v96 = *(void *)(v95 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v88, v383, v95);
      *unint64_t v94 = v93;
      v94[1] = v92;
      uint64_t v97 = v375;
      uint64_t v98 = (char *)v375 + *(int *)(v391 + 64);
      uint64_t v28 = (char *)v375 + *(int *)(v391 + 80);
      void *v375 = v89;
      v97[1] = v90;
      uint64_t v43 = v391;
      uint64_t v81 = (uint64_t)v98;
      (*(void (**)(void))(v96 + 16))();
      *(void *)uint64_t v28 = v93;
      *((void *)v28 + 1) = v92;
      swift_retain();
      id v99 = (id)FPDomainUnavailableError();
      v93();
      swift_release();

      uint64_t v51 = k;
      (*(void (**)(void *, uint64_t))v373)(v87, v43);
      uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      uint64_t v75 = (char *)(v96 + 8);
      v100(v81, v95);
      unint64_t v85 = j;
      if (!j) {
        goto LABEL_28;
      }
    }
    swift_release();
    uint64_t v28 = v389;
    int64_t v69 = v351;
    unint64_t v68 = v350;
    if (v350) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v71 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
LABEL_211:
      __break(1u);
LABEL_212:
      __break(1u);
LABEL_213:
      sub_10096CC20();
      __break(1u);
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
LABEL_217:
      __break(1u);
LABEL_218:
      __break(1u);
      goto LABEL_219;
    }
    if (v71 >= v336)
    {
      swift_release();
      goto LABEL_53;
    }
    unint64_t v72 = *(void *)(v335 + 8 * v71);
    int64_t v73 = v69 + 1;
    if (!v72)
    {
      int64_t v73 = v69 + 2;
      if (v69 + 2 >= v336) {
        goto LABEL_52;
      }
      unint64_t v72 = *(void *)(v335 + 8 * v73);
      if (!v72)
      {
        int64_t v73 = v69 + 3;
        if (v69 + 3 >= v336) {
          goto LABEL_52;
        }
        unint64_t v72 = *(void *)(v335 + 8 * v73);
        if (!v72) {
          break;
        }
      }
    }
LABEL_19:
    uint64_t v350 = (v72 - 1) & v72;
    int64_t v351 = v73;
  }
  uint64_t v74 = v69 + 4;
  if (v69 + 4 < v336)
  {
    unint64_t v72 = *(void *)(v335 + 8 * v74);
    if (!v72)
    {
      while (1)
      {
        int64_t v73 = v74 + 1;
        if (__OFADD__(v74, 1)) {
          goto LABEL_216;
        }
        if (v73 >= v336) {
          goto LABEL_52;
        }
        unint64_t v72 = *(void *)(v335 + 8 * v73);
        ++v74;
        if (v72) {
          goto LABEL_19;
        }
      }
    }
    int64_t v73 = v69 + 4;
    goto LABEL_19;
  }
LABEL_52:
  swift_release();
  uint64_t v28 = v389;
LABEL_53:
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  *uint64_t v327 = sub_10096BA00();
  swift_bridgeObjectRelease();
  unint64_t v124 = (void *)((char *)v334 + qword_100B0B320);
  swift_beginAccess();
  uint64_t v369 = v124;
  uint64_t v125 = *v124;
  uint64_t v126 = (ValueMetadata *)v346;
  uint64_t v127 = (uint64_t)v348;
  uint64_t v128 = (uint64_t *)swift_getAssociatedTypeWitness();
  uint64_t v392 = (void *)v127;
  uint64_t v393 = (ValueMetadata *)v349;
  size_t v394 = v126;
  uint64_t v395 = (uint64_t)v347;
  uint64_t v392 = (void *)type metadata accessor for UserRequest();
  uint64_t v393 = &type metadata for NSecTimestamp;
  size_t v394 = v345;
  uint64_t v395 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  uint64_t v383 = swift_getTupleTypeMetadata();
  uint64_t v129 = sub_10096C1C0();
  uint64_t v130 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  v131._uint64_t countAndFlagsBits = v125;
  uint64_t v360 = v128;
  v131._object = v128;
  int64_t v359 = v129;
  uint64_t v355 = v130;
  uint64_t v132 = Filename.init(rawValue:)(v131).rawValue._countAndFlagsBits;
  uint64_t v133 = *(void *)(v132 + 64);
  uint64_t v370 = v132 + 64;
  uint64_t v134 = 1 << *(unsigned char *)(v132 + 32);
  uint64_t v135 = -1;
  if (v134 < 64) {
    uint64_t v135 = ~(-1 << v134);
  }
  unint64_t v136 = v135 & v133;
  int64_t v372 = (unint64_t)(v134 + 63) >> 6;
  uint64_t v376 = v358 + 16;
  uint64_t v377 = (char *)(v358 + 32);
  int64_t v391 = v358 + 56;
  uint64_t v387 = (char *)(v358 + 48);
  uint64_t v382 = (void *)(v328 + 32);
  uint64_t v378 = (char *)(v358 + 8);
  uint64_t v373 = v132;
  swift_bridgeObjectRetain();
  unint64_t v137 = 0;
  uint64_t v75 = (char *)v388;
  uint64_t v51 = v381;
  while (2)
  {
    if (v136)
    {
      uint64_t v374 = (void *)((v136 - 1) & v136);
      uint64_t v375 = v137;
      unint64_t v138 = __clz(__rbit64(v136)) | ((void)v137 << 6);
LABEL_73:
      uint64_t v143 = *(void *)(*(void *)(v373 + 56) + 8 * v138);
      swift_bridgeObjectRetain();
      double v144 = 0;
      for (j = v143; ; uint64_t v143 = j)
      {
        if (v144 == (char *)sub_10096C1A0())
        {
          uint64_t v145 = *(char **)v391;
          (*(void (**)(char *, uint64_t, uint64_t, char *))v391)(v51, 1, 1, v28);
        }
        else
        {
          BOOL v146 = sub_10096C130();
          sub_10096C0E0();
          if (v146)
          {
            uint64_t v81 = (uint64_t)v357;
            (*(void (**)(char *, unint64_t, char *))(v358 + 16))(v357, v143+ ((*(unsigned __int8 *)(v358 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v358 + 80))+ *(void *)(v358 + 72) * (void)v144, v28);
          }
          else
          {
            uint64_t v186 = sub_10096CC20();
            if (v323 != 8) {
              goto LABEL_223;
            }
            uint64_t v392 = (void *)v186;
            uint64_t v81 = (uint64_t)v357;
            (*(void (**)(char *, void **, char *))v376)(v357, &v392, v28);
            swift_unknownObjectRelease();
          }
          (*(void (**)(char *, uint64_t, char *))v377)(v51, v81, v28);
          BOOL v147 = __OFADD__(v144++, 1);
          if (v147) {
            goto LABEL_133;
          }
          uint64_t v145 = *(char **)v391;
          (*(void (**)(char *, void, uint64_t, char *))v391)(v51, 0, 1, v28);
        }
        uint64_t v148 = *(unsigned int (**)(uint64_t *, uint64_t, char *))v387;
        uint64_t v149 = 1;
        int v150 = (*(uint64_t (**)(char *, uint64_t, char *))v387)(v51, 1, v28);
        unint64_t v386 = v144;
        if (v150 != 1)
        {
          uint64_t v151 = *((int *)v28 + 16);
          double v152 = &v51[v151];
          int64_t v380 = *((int *)v28 + 20);
          uint64_t v153 = *((void *)v51 + 1);
          uint64_t v154 = v28;
          uint64_t v155 = v356;
          *uint64_t v356 = *(void *)v51;
          v155[1] = v153;
          uint64_t v156 = (char *)v155 + v151;
          uint64_t v157 = sub_10096B7D0();
          k = v145;
          uint64_t v158 = v157;
          uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32);
          v159(v156, v152, v157);
          uint64_t v160 = swift_allocObject();
          *(_OWORD *)(v160 + 16) = *(_OWORD *)&v381[v380];
          uint64_t v161 = *v155;
          uint64_t v162 = v379;
          uint64_t v163 = (char *)v379 + *((int *)v154 + 16);
          uint64_t v164 = (uint64_t (**)(uint64_t))((char *)v379 + *((int *)v154 + 20));
          *uint64_t v379 = v161;
          v162[1] = v153;
          uint64_t v75 = (char *)v388;
          uint64_t v165 = v156;
          uint64_t v51 = v381;
          uint64_t v166 = v158;
          uint64_t v145 = k;
          v159(v163, v165, v166);
          uint64_t v149 = 0;
          *uint64_t v164 = sub_1006FB2C0;
          v164[1] = (uint64_t (*)(uint64_t))v160;
          uint64_t v28 = v389;
        }
        uint64_t v167 = v379;
        ((void (*)(void *, uint64_t, uint64_t, char *))v145)(v379, v149, 1, v28);
        uint64_t v168 = (uint64_t *)v367;
        ((void (*)(char *, void *, uint64_t))*v382)(v367, v167, v368);
        if (v148(v168, 1, v28) == 1) {
          break;
        }
        uint64_t v169 = *((int *)v28 + 16);
        uint64_t v170 = v365;
        int v171 = (char *)v365 + v169;
        uint64_t v172 = *v168;
        uint64_t v173 = v168[1];
        k = (char *)v168 + v169;
        uint64_t v174 = *((int *)v28 + 20);
        uint64_t v176 = *(void (**)(void))((char *)v168 + v174);
        double v175 = *(void (**)(void))((char *)v168 + v174 + 8);
        uint64_t v177 = (void (**)(void))((char *)v365 + v174);
        void *v365 = v172;
        v170[1] = v173;
        uint64_t v178 = sub_10096B7D0();
        uint64_t v179 = *(void *)(v178 - 8);
        (*(void (**)(char *, char *, uint64_t))(v179 + 32))(v171, k, v178);
        *uint64_t v177 = v176;
        v177[1] = v175;
        double v180 = v366;
        uint64_t v181 = (char *)v366 + *((int *)v389 + 16);
        uint64_t v182 = (void (**)(void))((char *)v366 + *((int *)v389 + 20));
        *unint64_t v366 = v172;
        v180[1] = v173;
        uint64_t v75 = (char *)v388;
        uint64_t v183 = v181;
        (*(void (**)(void))(v179 + 16))();
        *uint64_t v182 = v176;
        v182[1] = v175;
        double v144 = v386;
        swift_retain();
        id v184 = (id)FPDomainUnavailableError();
        v176();
        uint64_t v28 = v389;
        swift_release();

        (*(void (**)(void *, char *))v378)(v170, v28);
        uint64_t v185 = v178;
        uint64_t v51 = v381;
        (*(void (**)(char *, uint64_t))(v179 + 8))(v183, v185);
      }
      swift_bridgeObjectRelease();
      unint64_t v137 = v375;
      unint64_t v136 = (unint64_t)v374;
      continue;
    }
    break;
  }
  int64_t v139 = (int64_t)v137 + 1;
  if (__OFADD__(v137, 1)) {
    goto LABEL_211;
  }
  if (v139 < v372)
  {
    unint64_t v140 = *(void *)(v370 + 8 * v139);
    int64_t v141 = (int64_t)v137 + 1;
    if (!v140)
    {
      int64_t v141 = (int64_t)v137 + 2;
      if ((uint64_t)v137 + 2 >= v372) {
        goto LABEL_86;
      }
      unint64_t v140 = *(void *)(v370 + 8 * v141);
      if (!v140)
      {
        int64_t v141 = (int64_t)v137 + 3;
        if ((uint64_t)v137 + 3 >= v372) {
          goto LABEL_86;
        }
        unint64_t v140 = *(void *)(v370 + 8 * v141);
        if (!v140)
        {
          double v142 = (char *)v137 + 4;
          if ((uint64_t)v137 + 4 >= v372) {
            goto LABEL_86;
          }
          unint64_t v140 = *(void *)(v370 + 8 * (void)v142);
          if (!v140)
          {
            while (1)
            {
              int64_t v141 = (int64_t)(v142 + 1);
              if (__OFADD__(v142, 1)) {
                break;
              }
              if (v141 >= v372) {
                goto LABEL_86;
              }
              unint64_t v140 = *(void *)(v370 + 8 * v141);
              ++v142;
              if (v140) {
                goto LABEL_72;
              }
            }
LABEL_219:
            __break(1u);
            goto LABEL_220;
          }
          int64_t v141 = (int64_t)v137 + 4;
        }
      }
    }
LABEL_72:
    uint64_t v374 = (void *)((v140 - 1) & v140);
    uint64_t v375 = (void *)v141;
    unint64_t v138 = __clz(__rbit64(v140)) + (v141 << 6);
    goto LABEL_73;
  }
LABEL_86:
  swift_release();
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  *uint64_t v369 = sub_10096BA00();
  swift_bridgeObjectRelease();
  os_log_type_t v187 = (void *)((char *)v334 + qword_100B0B328);
  swift_beginAccess();
  uint64_t v373 = (uint64_t)v187;
  uint64_t v188 = *v187;
  uint64_t v392 = (void *)v349;
  uint64_t v393 = v348;
  size_t v394 = v347;
  uint64_t v395 = v346;
  uint64_t v392 = (void *)type metadata accessor for UserRequest();
  uint64_t v393 = &type metadata for NSecTimestamp;
  size_t v394 = v345;
  uint64_t v395 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  uint64_t v189 = swift_getTupleTypeMetadata();
  uint64_t v190 = sub_10096C1C0();
  v191._uint64_t countAndFlagsBits = v188;
  v191._object = v333;
  int64_t v372 = v190;
  uint64_t v192 = Filename.init(rawValue:)(v191).rawValue._countAndFlagsBits;
  uint64_t v193 = *(void *)(v192 + 64);
  uint64_t v374 = (void *)(v192 + 64);
  uint64_t v194 = 1 << *(unsigned char *)(v192 + 32);
  uint64_t v195 = -1;
  if (v194 < 64) {
    uint64_t v195 = ~(-1 << v194);
  }
  unint64_t v196 = v195 & v193;
  uint64_t v375 = (void *)((unint64_t)(v194 + 63) >> 6);
  uint64_t v379 = (void *)(v354 + 16);
  int64_t v380 = v354 + 32;
  int64_t v391 = v354 + 56;
  uint64_t v389 = (char *)(v354 + 48);
  uint64_t v383 = v326 + 32;
  uint64_t v381 = (char *)(v354 + 8);
  uint64_t v376 = v192;
  swift_bridgeObjectRetain();
  uint64_t v197 = 0;
  id v198 = v390;
  uint64_t j = v189;
  while (2)
  {
    if (v196)
    {
      uint64_t v377 = (char *)((v196 - 1) & v196);
      uint64_t v378 = v197;
      unint64_t v199 = __clz(__rbit64(v196)) | ((void)v197 << 6);
LABEL_106:
      uint64_t v204 = *(char **)(*(void *)(v376 + 56) + 8 * v199);
      swift_bridgeObjectRetain();
      unint64_t v205 = 0;
      for (k = v204; ; uint64_t v204 = k)
      {
        if (v205 == (char *)sub_10096C1A0())
        {
          unint64_t v206 = *(char **)v391;
          (*(void (**)(char *, uint64_t, uint64_t, void *))v391)(v75, 1, 1, v198);
        }
        else
        {
          BOOL v207 = sub_10096C130();
          sub_10096C0E0();
          if (v207)
          {
            uint64_t v208 = v353;
            (*(void (**)(char *, char *, void *))(v354 + 16))(v353, &v204[((*(unsigned __int8 *)(v354 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v354 + 80))+ *(void *)(v354 + 72) * (void)v205], v198);
          }
          else
          {
            uint64_t v241 = sub_10096CC20();
            if (v322 != 8) {
              goto LABEL_224;
            }
            uint64_t v392 = (void *)v241;
            uint64_t v208 = v353;
            ((void (*)(char *, void **, void *))*v379)(v353, &v392, v198);
            swift_unknownObjectRelease();
          }
          (*(void (**)(char *, char *, void *))v380)(v75, v208, v198);
          BOOL v147 = __OFADD__(v205++, 1);
          if (v147)
          {
            __break(1u);
            goto LABEL_193;
          }
          unint64_t v206 = *(char **)v391;
          (*(void (**)(char *, void, uint64_t, void *))v391)(v75, 0, 1, v198);
        }
        double v209 = *(uint64_t (**)(uint64_t *, uint64_t, void *))v389;
        uint64_t v210 = 1;
        int v211 = (*(uint64_t (**)(char *, uint64_t, void *))v389)(v75, 1, v198);
        uint64_t v387 = v205;
        if (v211 != 1)
        {
          uint64_t v212 = *((int *)v198 + 16);
          uint64_t v213 = &v75[v212];
          uint64_t v382 = (void *)*((int *)v198 + 20);
          unint64_t v386 = v206;
          uint64_t v214 = *(void *)v75;
          uint64_t v215 = *((void *)v75 + 1);
          double v216 = v352;
          uint64_t *v352 = v214;
          v216[1] = v215;
          uint64_t v28 = (char *)v216 + v212;
          uint64_t v217 = sub_10096B7D0();
          double v218 = *(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 32);
          v218(v28, v213, v217);
          uint64_t v219 = swift_allocObject();
          *(_OWORD *)(v219 + 16) = *(_OWORD *)((char *)v382 + v388);
          uint64_t v220 = *v216;
          uint64_t v221 = v371;
          uint64_t v222 = (char *)v371 + *((int *)v390 + 16);
          uint64_t v223 = (uint64_t (**)(uint64_t))((char *)v371 + *((int *)v390 + 20));
          void *v371 = v220;
          v221[1] = v215;
          unint64_t v206 = v386;
          v218(v222, v28, v217);
          uint64_t v210 = 0;
          *uint64_t v223 = sub_1006FB2C0;
          v223[1] = (uint64_t (*)(uint64_t))v219;
          uint64_t v75 = (char *)v388;
          id v198 = v390;
        }
        long long v224 = v371;
        ((void (*)(void *, uint64_t, uint64_t, void *))v206)(v371, v210, 1, v198);
        long long v225 = (uint64_t *)v363;
        (*(void (**)(char *, void *, uint64_t))v383)(v363, v224, v364);
        if (v209(v225, 1, v198) == 1) {
          break;
        }
        uint64_t v226 = *((int *)v198 + 16);
        uint64_t v227 = v361;
        uint64_t v228 = (char *)v361 + v226;
        uint64_t v229 = *v225;
        uint64_t v230 = v225[1];
        unint64_t v386 = (char *)v225 + v226;
        uint64_t v231 = *((int *)v390 + 20);
        int64_t v233 = *(void (**)(void))((char *)v225 + v231);
        unint64_t v232 = *(void (**)(void))((char *)v225 + v231 + 8);
        int64_t v234 = (void (**)(void))((char *)v361 + v231);
        *uint64_t v361 = v229;
        v227[1] = v230;
        uint64_t v28 = (char *)sub_10096B7D0();
        uint64_t v235 = *((void *)v28 - 1);
        (*(void (**)(char *, char *, char *))(v235 + 32))(v228, v386, v28);
        void *v234 = v233;
        v234[1] = v232;
        unint64_t v236 = v362;
        unint64_t v237 = (char *)v362 + *((int *)v390 + 16);
        uint64_t v238 = (void (**)(void))((char *)v362 + *((int *)v390 + 20));
        void *v362 = v229;
        v236[1] = v230;
        unint64_t v205 = v387;
        uint64_t v239 = v237;
        (*(void (**)(void))(v235 + 16))();
        void *v238 = v233;
        v238[1] = v232;
        swift_retain();
        id v240 = (id)FPDomainUnavailableError();
        v233();
        swift_release();

        id v198 = v390;
        (*(void (**)(void *, void *))v381)(v227, v390);
        (*(void (**)(char *, char *))(v235 + 8))(v239, v28);
        uint64_t v75 = (char *)v388;
      }
      swift_bridgeObjectRelease();
      uint64_t v197 = v378;
      unint64_t v196 = (unint64_t)v377;
      continue;
    }
    break;
  }
  uint64_t v200 = (uint64_t)(v197 + 1);
  if (__OFADD__(v197, 1)) {
    goto LABEL_215;
  }
  if (v200 < (uint64_t)v375)
  {
    unint64_t v201 = v374[v200];
    uint64_t v202 = (uint64_t)(v197 + 1);
    if (!v201)
    {
      uint64_t v202 = (uint64_t)(v197 + 2);
      if ((uint64_t)(v197 + 2) >= (uint64_t)v375) {
        goto LABEL_119;
      }
      unint64_t v201 = v374[v202];
      if (!v201)
      {
        uint64_t v202 = (uint64_t)(v197 + 3);
        if ((uint64_t)(v197 + 3) >= (uint64_t)v375) {
          goto LABEL_119;
        }
        unint64_t v201 = v374[v202];
        if (!v201)
        {
          uint64_t v203 = v197 + 4;
          if ((uint64_t)(v197 + 4) >= (uint64_t)v375) {
            goto LABEL_119;
          }
          unint64_t v201 = v374[(void)v203];
          if (!v201)
          {
            while (1)
            {
              uint64_t v202 = (uint64_t)(v203 + 1);
              if (__OFADD__(v203, 1)) {
                break;
              }
              if (v202 >= (uint64_t)v375) {
                goto LABEL_119;
              }
              unint64_t v201 = v374[v202];
              ++v203;
              if (v201) {
                goto LABEL_105;
              }
            }
LABEL_220:
            __break(1u);
LABEL_221:
            __break(1u);
            goto LABEL_222;
          }
          uint64_t v202 = (uint64_t)(v197 + 4);
        }
      }
    }
LABEL_105:
    uint64_t v377 = (char *)((v201 - 1) & v201);
    uint64_t v378 = (char *)v202;
    unint64_t v199 = __clz(__rbit64(v201)) + (v202 << 6);
    goto LABEL_106;
  }
LABEL_119:
  swift_release();
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  *(void *)uint64_t v373 = sub_10096BA00();
  swift_bridgeObjectRelease();
  BOOL v242 = (char *)v334 + qword_100B0B350;
  swift_beginAccess();
  uint64_t v243 = *(void *)v242;
  uint64_t v244 = *(void *)(*(void *)v242 + 16);
  if (v244)
  {
    swift_bridgeObjectRetain();
    uint64_t v245 = v243 + 40;
    do
    {
      double v246 = *(void (**)(void **))(v245 - 8);
      swift_retain();
      double v247 = (id)FPDomainUnavailableError();
      uint64_t v392 = v247;
      v246(&v392);
      swift_release();

      v245 += 16;
      --v244;
    }
    while (v244);
    swift_bridgeObjectRelease();
  }
  *(void *)BOOL v242 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v81 = (uint64_t)v334 + qword_100B0B330;
  swift_beginAccess();
  uint64_t v248 = *(void *)v81;
  swift_bridgeObjectRetain();
  uint64_t v392 = (void *)v349;
  uint64_t v393 = v348;
  size_t v394 = v347;
  uint64_t v395 = v346;
  uint64_t v51 = (char *)type metadata accessor for UserRequest();
  uint64_t v75 = (char *)sub_100033BE8((uint64_t *)&unk_100ADA328);
  swift_getTupleTypeMetadata2();
  if (!sub_10096C1A0()) {
    goto LABEL_134;
  }
  uint64_t v389 = v75;
  uint64_t v390 = v51;
  int64_t v391 = v81;
  uint64_t v249 = 0;
  uint64_t v250 = v248 + 48;
  do
  {
    BOOL v251 = sub_10096C130();
    sub_10096C0E0();
    if (!v251) {
      goto LABEL_213;
    }
    unint64_t v253 = *(void *)(v250 - 16);
    uint64_t v252 = *(void (**)(void **))(v250 - 8);
    sub_1000CE628(v253);
    uint64_t v254 = v249 + 1;
    BOOL v255 = __OFADD__(v249, 1);
    swift_retain();
    if (v255) {
      goto LABEL_214;
    }
    uint64_t v28 = (char *)(id)FPDomainUnavailableError();
    uint64_t v392 = v28;
    v252(&v392);

    sub_1000B6C28(v253);
    swift_release();
    ++v249;
    v250 += 24;
  }
  while (v254 != sub_10096C1A0());
  swift_bridgeObjectRelease();
  uint64_t v81 = v391;
  uint64_t v51 = (char *)v390;
  uint64_t v75 = v389;
LABEL_135:
  *(void *)uint64_t v81 = sub_10096C110();
  swift_bridgeObjectRelease();
  uint64_t v256 = (void *)((char *)v334 + qword_100B0B338);
  swift_beginAccess();
  unint64_t v386 = (char *)v256;
  uint64_t v257 = *v256;
  uint64_t v392 = v51;
  uint64_t v393 = &type metadata for JobCode;
  size_t v394 = &type metadata for NSecTimestamp;
  uint64_t v395 = (uint64_t)v75;
  uint64_t v75 = (char *)swift_getTupleTypeMetadata();
  uint64_t v258 = (char *)sub_10096C1C0();
  v259._uint64_t countAndFlagsBits = v257;
  v259._object = v333;
  k = v258;
  uint64_t v260 = Filename.init(rawValue:)(v259).rawValue._countAndFlagsBits;
  uint64_t v261 = *(void *)(v260 + 64);
  uint64_t v387 = (char *)(v260 + 64);
  uint64_t v262 = 1 << *(unsigned char *)(v260 + 32);
  uint64_t v263 = -1;
  if (v262 < 64) {
    uint64_t v263 = ~(-1 << v262);
  }
  unint64_t v264 = v263 & v261;
  *(void *)&long long v388 = (unint64_t)(v262 + 63) >> 6;
  uint64_t v389 = (char *)v260;
  swift_bridgeObjectRetain();
  uint64_t v265 = 0;
  if (v264) {
    goto LABEL_140;
  }
LABEL_141:
  BOOL v147 = __OFADD__(v265++, 1);
  if (v147) {
    goto LABEL_217;
  }
  if (v265 < (uint64_t)v388)
  {
    unint64_t v268 = *(void *)&v387[8 * v265];
    if (v268) {
      goto LABEL_151;
    }
    uint64_t v269 = v265 + 1;
    if (v265 + 1 < (uint64_t)v388)
    {
      unint64_t v268 = *(void *)&v387[8 * v269];
      if (v268) {
        goto LABEL_150;
      }
      uint64_t v269 = v265 + 2;
      if (v265 + 2 < (uint64_t)v388)
      {
        unint64_t v268 = *(void *)&v387[8 * v269];
        if (v268) {
          goto LABEL_150;
        }
        uint64_t v269 = v265 + 3;
        if (v265 + 3 < (uint64_t)v388)
        {
          unint64_t v268 = *(void *)&v387[8 * v269];
          if (!v268)
          {
            while (1)
            {
              uint64_t v265 = v269 + 1;
              if (__OFADD__(v269, 1)) {
                goto LABEL_221;
              }
              if (v265 >= (uint64_t)v388) {
                goto LABEL_166;
              }
              unint64_t v268 = *(void *)&v387[8 * v265];
              ++v269;
              if (v268) {
                goto LABEL_151;
              }
            }
          }
LABEL_150:
          uint64_t v265 = v269;
LABEL_151:
          unint64_t v264 = (v268 - 1) & v268;
          for (unint64_t m = __clz(__rbit64(v268)) + (v265 << 6); ; unint64_t m = v266 | (v265 << 6))
          {
            uint64_t v270 = *(void *)(*((void *)v389 + 7) + 8 * m);
            swift_bridgeObjectRetain();
            if (sub_10096C1A0()) {
              break;
            }
            swift_bridgeObjectRelease();
            if (!v264) {
              goto LABEL_141;
            }
LABEL_140:
            unint64_t v266 = __clz(__rbit64(v264));
            v264 &= v264 - 1;
          }
          uint64_t v390 = (void *)v264;
          int64_t v391 = v265;
          uint64_t v271 = 0;
          uint64_t v272 = (uint64_t *)(v270 + 64);
          while (1)
          {
            uint64_t v273 = sub_10096C130();
            sub_10096C0E0();
            if ((v273 & 1) == 0) {
              break;
            }
            unint64_t v274 = *(v272 - 4);
            uint64_t v51 = (char *)*(v272 - 1);
            uint64_t v273 = *v272;
            sub_1000CE628(v274);
            uint64_t v275 = v271 + 1;
            BOOL v276 = __OFADD__(v271, 1);
            swift_retain();
            if (v276) {
              goto LABEL_196;
            }
            uint64_t v28 = (char *)(id)FPDomainUnavailableError();
            uint64_t v392 = v28;
            ((void (*)(void **))v51)(&v392);

            sub_1000B6C28(v274);
            swift_release();
            ++v271;
            v272 += 5;
            if (v275 == sub_10096C1A0())
            {
              swift_bridgeObjectRelease();
              uint64_t v265 = v391;
              unint64_t v264 = (unint64_t)v390;
              if (!v390) {
                goto LABEL_141;
              }
              goto LABEL_140;
            }
          }
          sub_10096CC20();
          __break(1u);
LABEL_196:
          __break(1u);
          goto LABEL_197;
        }
      }
    }
  }
LABEL_166:
  swift_release();
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  *(void *)unint64_t v386 = sub_10096BA00();
  swift_bridgeObjectRelease();
  uint64_t v277 = (void *)((char *)v334 + qword_100B0B358);
  swift_beginAccess();
  uint64_t v389 = (char *)v277;
  uint64_t v278 = *v277;
  uint64_t v392 = (void *)v349;
  uint64_t v393 = v348;
  size_t v394 = v347;
  uint64_t v395 = v346;
  uint64_t v279 = (void *)type metadata accessor for TestingOperation();
  uint64_t v280 = sub_10002B7CC((uint64_t *)&unk_100ADA368);
  uint64_t WitnessTable = swift_getWitnessTable();
  v282._uint64_t countAndFlagsBits = v278;
  *(void *)&long long v388 = v279;
  v282._object = v279;
  uint64_t v387 = (char *)v280;
  unint64_t v386 = (char *)WitnessTable;
  uint64_t v283 = Filename.init(rawValue:)(v282).rawValue._countAndFlagsBits;
  uint64_t v284 = *(void *)(v283 + 64);
  uint64_t v390 = (void *)(v283 + 64);
  uint64_t v285 = 1 << *(unsigned char *)(v283 + 32);
  uint64_t v286 = -1;
  if (v285 < 64) {
    uint64_t v286 = ~(-1 << v285);
  }
  unint64_t v287 = v286 & v284;
  int64_t v391 = (unint64_t)(v285 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v288 = 0;
  while (2)
  {
    if (v287)
    {
      unint64_t v289 = __clz(__rbit64(v287));
      v287 &= v287 - 1;
      unint64_t v290 = v289 | (v288 << 6);
LABEL_182:
      uint64_t v293 = *(void *)(*(void *)(v283 + 56) + 8 * v290);
      uint64_t v294 = *(void *)(v293 + 16);
      if (v294)
      {
        swift_bridgeObjectRetain();
        uint64_t v295 = v293 + 40;
        do
        {
          uint64_t v296 = *(void (**)(void **))(v295 - 8);
          swift_retain();
          uint64_t v297 = (id)FPDomainUnavailableError();
          uint64_t v392 = v297;
          v296(&v392);
          swift_release();

          v295 += 16;
          --v294;
        }
        while (v294);
        swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  BOOL v147 = __OFADD__(v288++, 1);
  if (v147) {
    goto LABEL_218;
  }
  if (v288 < v391)
  {
    unint64_t v291 = v390[v288];
    if (!v291)
    {
      int64_t v292 = v288 + 1;
      if (v288 + 1 >= v391) {
        goto LABEL_190;
      }
      unint64_t v291 = v390[v292];
      if (!v291)
      {
        int64_t v292 = v288 + 2;
        if (v288 + 2 >= v391) {
          goto LABEL_190;
        }
        unint64_t v291 = v390[v292];
        if (!v291)
        {
          int64_t v292 = v288 + 3;
          if (v288 + 3 >= v391) {
            goto LABEL_190;
          }
          unint64_t v291 = v390[v292];
          if (!v291)
          {
            while (1)
            {
              int64_t v288 = v292 + 1;
              if (__OFADD__(v292, 1)) {
                break;
              }
              if (v288 >= v391) {
                goto LABEL_190;
              }
              unint64_t v291 = v390[v288];
              ++v292;
              if (v291) {
                goto LABEL_181;
              }
            }
LABEL_222:
            __break(1u);
LABEL_223:
            __break(1u);
LABEL_224:
            __break(1u);
            return;
          }
        }
      }
      int64_t v288 = v292;
    }
LABEL_181:
    unint64_t v287 = (v291 - 1) & v291;
    unint64_t v290 = __clz(__rbit64(v291)) + (v288 << 6);
    goto LABEL_182;
  }
LABEL_190:
  swift_release();
  uint64_t v75 = v324;
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  *(void *)uint64_t v389 = sub_10096BA00();
  swift_bridgeObjectRelease();
  uint64_t v298 = v325;
  sub_10026BFF4(*(void **)((char *)v334 + qword_100B0B360), (void (*)(void))sub_1006F7A38);
  uint64_t v208 = v298;
  uint64_t v396 = sub_1006C806C();
  uint64_t v392 = (void *)v349;
  uint64_t v393 = v348;
  size_t v394 = v347;
  uint64_t v395 = v346;
  uint64_t v204 = (char *)type metadata accessor for FSOrFPJob();
  sub_10096CB50();
  swift_getWitnessTable();
  uint64_t v28 = (char *)sub_10096C1F0();
  uint64_t v392 = v28;
  sub_10096C1C0();
  swift_getWitnessTable();
  if (sub_10096C460())
  {
    swift_bridgeObjectRelease();
    return;
  }
LABEL_193:
  uint64_t v389 = v204;
  unint64_t v386 = v208;
  id v299 = [objc_allocWithZone((Class)FPLoggerScope) init];
  id v300 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v51 = (char *)v299;
  uint64_t v273 = sub_10096B470();
  os_log_type_t v301 = sub_10096C5D0();
  BOOL v302 = os_log_type_enabled((os_log_t)v273, v301);
  int64_t v391 = (int64_t)v28;
  k = v51;
  if (v302)
  {
    uint64_t v303 = (uint8_t *)swift_slowAlloc();
    uint64_t v304 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v303 = 138412290;
    Swift::String v305 = [v51 enter];
    uint64_t v392 = v305;
    sub_10096C8C0();
    *uint64_t v304 = v305;
    uint64_t v28 = (char *)v391;

    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v273, v301, "%@ Running jobs", v303, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_198;
  }
LABEL_197:

  uint64_t v273 = (uint64_t)v51;
LABEL_198:
  uint64_t v306 = v329;

  uint64_t v307 = *(void **)(v331 + 8);
  v331 += 8;
  uint64_t v390 = v307;
  ((void (*)(char *, uint64_t))v307)(v75, v306);
  if (!sub_10096C1A0()) {
    goto LABEL_209;
  }
  uint64_t v309 = 4;
  *(void *)&long long v308 = 136315138;
  long long v388 = v308;
  uint64_t v387 = (char *)&type metadata for Any + 8;
  uint64_t v310 = v330;
  while (2)
  {
    uint64_t v311 = v309 - 4;
    BOOL v312 = sub_10096C130();
    sub_10096C0E0();
    if (v312)
    {
      uint64_t v313 = *(void *)&v28[8 * v309];
      swift_retain();
      uint64_t v314 = v309 - 3;
      if (__OFADD__(v311, 1)) {
        break;
      }
      goto LABEL_204;
    }
    uint64_t v313 = sub_10096CC20();
    swift_retain();
    swift_unknownObjectRelease();
    uint64_t v314 = v309 - 3;
    if (!__OFADD__(v311, 1))
    {
LABEL_204:
      id v315 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      swift_retain();
      uint64_t v316 = sub_10096B470();
      os_log_type_t v317 = sub_10096C5D0();
      if (os_log_type_enabled(v316, v317))
      {
        uint64_t v318 = swift_slowAlloc();
        uint64_t v392 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v318 = v388;
        uint64_t v319 = sub_1006151DC(v313);
        *(void *)(v318 + 4) = sub_100719D44(v319, v320, (uint64_t *)&v392);
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v316, v317, "running job: %s", (uint8_t *)v318, 0xCu);
        swift_arrayDestroy();
        uint64_t v306 = v329;
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();
      }
      else
      {

        swift_release_n();
      }
      ((void (*)(char *, uint64_t))v390)(v310, v306);
      uint64_t v28 = (char *)v391;
      ++v309;
      if (v314 == sub_10096C1A0()) {
        goto LABEL_209;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_209:
  swift_bridgeObjectRelease();
  uint64_t v321 = k;
  sub_1006EF7CC(k, (uint64_t (*)(void))&static os_log_type_t.default.getter);
}

uint64_t sub_1006D9CDC(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

uint64_t sub_1006D9D14(void *a1)
{
  long long v1 = a1;
  uint64_t v2 = *a1;
  uint64_t v3 = (char *)a1 + qword_100ADA000;
  swift_beginAccess();
  uint64_t v4 = *((void *)v3 + 7);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v21 = v2;
  if (v5)
  {
    uint64_t v18 = v1;
    sub_100394C70();
    swift_bridgeObjectRetain();
    uint64_t v6 = v4 + 40;
    do
    {
      uint64_t v7 = *(void (**)(_OWORD *))(v6 - 8);
      *(void *)&v20[0] = swift_allocError();
      swift_retain();
      v7(v20);
      swift_errorRelease();
      swift_release();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    long long v1 = v18;
  }
  sub_1006D50B4((uint64_t)v19);
  long long v8 = v19[1];
  *(_OWORD *)uint64_t v3 = v19[0];
  *((_OWORD *)v3 + 1) = v8;
  long long v9 = v19[3];
  *((_OWORD *)v3 + 2) = v19[2];
  *((_OWORD *)v3 + 3) = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (char *)v1 + qword_100ADA008;
  swift_beginAccess();
  uint64_t v11 = *((void *)v10 + 7);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    sub_100394C70();
    swift_bridgeObjectRetain();
    uint64_t v13 = v11 + 40;
    do
    {
      uint64_t v14 = *(void (**)(_OWORD *))(v13 - 8);
      *(void *)&v20[0] = swift_allocError();
      swift_retain();
      v14(v20);
      swift_errorRelease();
      swift_release();
      v13 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  sub_1006D50B4((uint64_t)v20);
  long long v15 = v20[1];
  *(_OWORD *)uint64_t v10 = v20[0];
  *((_OWORD *)v10 + 1) = v15;
  long long v16 = v20[3];
  *((_OWORD *)v10 + 2) = v20[2];
  *((_OWORD *)v10 + 3) = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006D9F80(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = a2;
  long long v3 = *(_OWORD *)(*(void *)a2 + 592);
  v73[0] = *(_OWORD *)(*(void *)a2 + 576);
  v73[1] = v3;
  uint64_t v4 = type metadata accessor for PersistenceTrigger();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v59 = &v55[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  int64_t v69 = &v55[-v7];
  uint64_t v8 = sub_10096B480();
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  __chkstk_darwin(v8);
  double v70 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10096B3D0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v63 = &v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  long long v16 = &v55[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v18 = &v55[-v17];
  uint64_t v19 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v19);
  unint64_t v72 = &v55[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v21 = (void *)qword_100B0B648;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v18, 1, 1, v10);
  *(void *)&v73[0] = 0;
  *((void *)&v73[0] + 1) = 0xE000000000000000;
  v75._uint64_t countAndFlagsBits = 0x2072656767697274;
  v75._object = (void *)0xE800000000000000;
  sub_10096BDC0(v75);
  sub_10096D260();
  uint64_t v22 = *((void *)&v73[0] + 1);
  uint64_t v60 = *(void (**)(unsigned char *, uint64_t, uint64_t))&v73[0];
  uint64_t v61 = v18;
  sub_10002B70C((uint64_t)v18, (uint64_t)v16, &qword_100AD0830);
  int v23 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10);
  uint64_t v71 = a1;
  uint64_t v65 = v4;
  if (v23 == 1)
  {
    id v24 = v21;
    uint64_t v25 = v63;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v16, &qword_100AD0830);
  }
  else
  {
    uint64_t v25 = v63;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v63, v16, v10);
  }
  uint64_t v26 = v72;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v72, v25, v10);
  uint64_t v62 = *(int *)(v19 + 20);
  *(void *)&v26[v62] = v21;
  uint64_t v27 = &v26[*(int *)(v19 + 24)];
  *(void *)uint64_t v27 = "SQLDB: React to trigger";
  *((void *)v27 + 1) = 23;
  Swift::String v63 = v27;
  v27[16] = 2;
  id v28 = v21;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100973BB0;
  *(void *)(v29 + 56) = &type metadata for String;
  *(void *)(v29 + 64) = sub_1000240A4();
  *(void *)(v29 + 32) = v60;
  *(void *)(v29 + 40) = v22;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v25, v10);
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v61, &qword_100AD0830);
  id v30 = [objc_allocWithZone((Class)FPLoggerScope) init];
  id v31 = (id)fpfs_current_or_default_log();
  uint64_t v32 = v70;
  sub_10096B490();
  uint64_t v34 = v64;
  uint64_t v33 = v65;
  uint64_t v35 = v69;
  uint64_t v36 = v71;
  uint64_t v60 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v64 + 16);
  v60(v69, v71, v65);
  id v37 = v30;
  uint64_t v38 = sub_10096B470();
  os_log_type_t v39 = sub_10096C590();
  int v40 = v39;
  BOOL v41 = os_log_type_enabled(v38, v39);
  uint64_t v61 = v37;
  if (v41)
  {
    uint64_t v42 = swift_slowAlloc();
    os_log_t v57 = v38;
    uint64_t v43 = v42;
    uint64_t v44 = (void *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(void *)&v73[0] = v58;
    *(_DWORD *)uint64_t v43 = 138412546;
    id v45 = [v37 enter];
    int v56 = v40;
    uint64_t v46 = v34;
    id v47 = v45;
    uint64_t v74 = (uint64_t)v45;
    sub_10096C8C0();
    *uint64_t v44 = v47;

    *(_WORD *)(v43 + 12) = 2082;
    uint64_t v48 = v69;
    v60(v59, (uint64_t)v69, v33);
    uint64_t v49 = sub_10096BCC0();
    uint64_t v74 = sub_100719D44(v49, v50, (uint64_t *)v73);
    sub_10096C8C0();
    uint64_t v36 = v71;
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v48, v33);
    os_log_t v51 = v57;
    _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v56, "%@  💡 trigger: %{public}s", (uint8_t *)v43, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v70, v67);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v35, v33);
    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v32, v67);
  }
  (*(void (**)(uint64_t))(*(void *)v68 + 2408))(v36);
  uint64_t v52 = v61;
  sub_1006EF7CC(v61, (uint64_t (*)(void))&static os_log_type_t.info.getter);

  sub_10096C760();
  uint64_t v53 = (uint64_t)v72;
  sub_10096B3A0();
  return sub_1006F7C48(v53, type metadata accessor for Signpost);
}

uint64_t sub_1006DA7D4(void *a1)
{
  return sub_1006EF7CC(a1, (uint64_t (*)(void))&static os_log_type_t.info.getter);
}

void sub_1006DA7EC()
{
}

uint64_t sub_1006DA850(void **a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*a1[2] + 504))();
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*a1[4] + 696))(v2);
  return (*(uint64_t (**)(uint64_t))(*a1[5] + 696))(v3);
}

uint64_t sub_1006DA918(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (!v1) {
    return sub_1006CCC24();
  }
  return result;
}

uint64_t sub_1006DA9B0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, unsigned char *a11, unsigned char *a12)
{
  int v44 = a8;
  LODWORD(v49) = a7;
  uint64_t v48 = a6;
  uint64_t v14 = sub_10096B3D0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v50 = &v43[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v47 = (uint64_t)&v43[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v21 = &v43[-v20];
  uint64_t v22 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v22);
  uint64_t v52 = &v43[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10096C760();
  uint64_t v24 = sub_10096B3A0();
  int v25 = a2(v24);
  uint64_t v51 = a4;
  uint64_t v53 = *(void *)(a4 + 112);
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  id v46 = (id)qword_100B0B648;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v21, 1, 1, v14);
  v54[0] = 0;
  v54[1] = 0xE000000000000000;
  sub_10096CBD0(39);
  swift_bridgeObjectRelease();
  strcpy((char *)v54, "async batch ");
  BYTE5(v54[1]) = 0;
  HIWORD(v54[1]) = -5120;
  v55._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v55);
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = 0x467265746661203ALL;
  v56._object = (void *)0xED00003D6873756CLL;
  sub_10096BDC0(v56);
  LODWORD(v48) = v25;
  if (v25) {
    v26._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v26._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (v25) {
    uint64_t v27 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v27 = (void *)0xE500000000000000;
  }
  v26._object = v27;
  sub_10096BDC0(v26);
  swift_bridgeObjectRelease();
  v57._uint64_t countAndFlagsBits = 4424054777695860000;
  v57._object = (void *)0xE800000000000000;
  sub_10096BDC0(v57);
  if ((v53 & 4) != 0) {
    v28._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v28._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if ((v53 & 4) != 0) {
    uint64_t v29 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v29 = (void *)0xE500000000000000;
  }
  v28._object = v29;
  sub_10096BDC0(v28);
  swift_bridgeObjectRelease();
  uint64_t v30 = v54[1];
  uint64_t v45 = v54[0];
  uint64_t v49 = v21;
  uint64_t v31 = (uint64_t)v21;
  uint64_t v32 = v47;
  sub_10002B70C(v31, v47, &qword_100AD0830);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v32, 1, v14) == 1)
  {
    id v33 = v46;
    id v34 = v46;
    uint64_t v35 = v50;
    sub_10096B3B0();
    sub_10002B770(v32, &qword_100AD0830);
    uint64_t v36 = (uint64_t)v52;
  }
  else
  {
    uint64_t v35 = v50;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 32))(v50, v32, v14);
    uint64_t v36 = (uint64_t)v52;
    id v33 = v46;
  }
  unint64_t v50 = a12;
  uint64_t v52 = a11;
  LODWORD(v53) = (v53 & 4) == 0;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v15 + 16))(v36, v35, v14);
  uint64_t v47 = *(int *)(v22 + 20);
  *(void *)(v36 + v47) = v33;
  uint64_t v37 = v36 + *(int *)(v22 + 24);
  *(void *)uint64_t v37 = "DB queue";
  *(void *)(v37 + 8) = 8;
  *(unsigned char *)(v37 + 16) = 2;
  id v38 = v33;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  os_log_type_t v39 = v35;
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_100973BB0;
  *(void *)(v40 + 56) = &type metadata for String;
  *(void *)(v40 + 64) = sub_1000240A4();
  *(void *)(v40 + 32) = v45;
  *(void *)(v40 + 40) = v30;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v39, v14);
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_10002B770((uint64_t)v49, &qword_100AD0830);
  if ((v48 & v53) == 1)
  {
    (*(void (**)(const char *, uint64_t, uint64_t, void, void, uint64_t, uint64_t, unsigned char *, unsigned char *))(*(void *)v51 + 424))("asyncBatch(function:side:afterNextDurableFlush:onCancel:updateBlock:)", 69, 2, v44 & 1, 0, a9, a10, v52, v50);
  }
  else
  {
    __chkstk_darwin(v41);
    (*(void (**)(void *__return_ptr, uint64_t (*)()))(*(void *)v51 + 2376))(v54, sub_1006F7908);
  }
  sub_10096C760();
  sub_10096B3A0();
  return sub_1006F7C48(v36, type metadata accessor for Signpost);
}

void sub_1006DB088(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v54 = a8;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  int v57 = a5;
  int v58 = a4;
  uint64_t v53 = a9;
  uint64_t v47 = *a1;
  uint64_t v12 = sub_10096B3D0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int v44 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v42 - v19;
  uint64_t v21 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v46 = a1;
  id v48 = (id)fpfs_adopt_log();
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v24 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v20, 1, 1, v12);
  uint64_t v55 = 0x61657220636E7973;
  unint64_t v56 = 0xEA00000000002064;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  v59._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v59);
  swift_bridgeObjectRelease();
  unint64_t v25 = v56;
  uint64_t v43 = v55;
  uint64_t v45 = v20;
  sub_10002B70C((uint64_t)v20, (uint64_t)v18, &qword_100AD0830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) == 1)
  {
    id v26 = v24;
    uint64_t v27 = v44;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v18, &qword_100AD0830);
  }
  else
  {
    uint64_t v27 = v44;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v44, v18, v12);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v23, v27, v12);
  *(void *)&v23[*(int *)(v21 + 20)] = v24;
  Swift::String v28 = &v23[*(int *)(v21 + 24)];
  *(void *)Swift::String v28 = "DB queue wait";
  *((void *)v28 + 1) = 13;
  v28[16] = 2;
  id v29 = v24;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100973BB0;
  *(void *)(v30 + 56) = &type metadata for String;
  *(void *)(v30 + 64) = sub_1000240A4();
  *(void *)(v30 + 32) = v43;
  *(void *)(v30 + 40) = v25;
  uint64_t v41 = v30;
  LOBYTE(v40) = 2;
  uint64_t v39 = 2;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v12);
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_10002B770((uint64_t)v45, &qword_100AD0830);
  __chkstk_darwin(v31);
  long long v32 = *(_OWORD *)(v47 + 592);
  *((_OWORD *)&v42 - 6) = *(_OWORD *)(v47 + 576);
  uint64_t v33 = v54;
  *(&v42 - 10) = v54;
  *(_OWORD *)(&v42 - 9) = v32;
  uint64_t v34 = v49;
  *(&v42 - 7) = (uint64_t)v23;
  *(&v42 - 6) = v34;
  *(&v42 - 5) = v50;
  LOBYTE(v39) = v58;
  uint64_t v40 = v51;
  uint64_t v41 = v52;
  id v36 = v35;
  OS_dispatch_queue.asyncAndWaitWithLogs<A>(_:quiet:function:block:)(0, v57 & 1, (uint64_t)"syncRead(quiet:function:block:)", 31, 2, (uint64_t)sub_1006F74CC, (uint64_t)(&v42 - 14), v33, v53);
  sub_1006F7C48((uint64_t)v23, type metadata accessor for Signpost);

  uint64_t v37 = v48;
  id v38 = (id)fpfs_adopt_log();
}

uint64_t sub_1006DB5EC@<X0>(uint64_t a1@<X2>, int a2@<W3>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v34 = a4;
  id v35 = a3;
  LODWORD(v30) = a2;
  uint64_t v29 = a1;
  uint64_t v33 = a5;
  uint64_t v5 = sub_10096B3D0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096C760();
  sub_10096B3A0();
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  uint64_t v36 = 0x61657220636E7973;
  unint64_t v37 = 0xEA00000000002064;
  v38._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v38);
  swift_bridgeObjectRelease();
  unint64_t v18 = v37;
  uint64_t v30 = v36;
  sub_10002B70C((uint64_t)v13, (uint64_t)v11, &qword_100AD0830);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  uint64_t v31 = v13;
  if (v19 == 1)
  {
    id v20 = v17;
    uint64_t v21 = v32;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v11, &qword_100AD0830);
  }
  else
  {
    uint64_t v21 = v32;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v32, v11, v5);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v16, v21, v5);
  long long v32 = (char *)*(int *)(v14 + 20);
  *(void *)&v32[v16] = v17;
  uint64_t v22 = *(int *)(v14 + 24);
  uint64_t v29 = v5;
  uint64_t v23 = (char *)(v16 + v22);
  *(void *)uint64_t v23 = "DB queue";
  *((void *)v23 + 1) = 8;
  v23[16] = 2;
  id v24 = v17;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100973BB0;
  *(void *)(v25 + 56) = &type metadata for String;
  *(void *)(v25 + 64) = sub_1000240A4();
  *(void *)(v25 + 32) = v30;
  *(void *)(v25 + 40) = v18;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v29);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_10002B770((uint64_t)v31, &qword_100AD0830);
  v35(v26);
  sub_10096C760();
  sub_10096B3A0();
  return sub_1006F7C48(v16, type metadata accessor for Signpost);
}

uint64_t sub_1006DBA58(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(a1);
}

uint64_t sub_1006DBAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  v30[0] = a7;
  v30[1] = a8;
  uint64_t v34 = a6;
  id v35 = a5;
  uint64_t v8 = sub_10096B3D0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v32 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v30 - v15;
  uint64_t v17 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096C760();
  sub_10096B3A0();
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  id v20 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v16, 1, 1, v8);
  uint64_t v36 = 0x657220636E797361;
  unint64_t v37 = 0xEB00000000206461;
  v38._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v38);
  swift_bridgeObjectRelease();
  unint64_t v21 = v37;
  uint64_t v31 = v36;
  sub_10002B70C((uint64_t)v16, (uint64_t)v14, &qword_100AD0830);
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8);
  uint64_t v33 = v16;
  if (v22 == 1)
  {
    id v23 = v20;
    id v24 = v32;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v14, &qword_100AD0830);
  }
  else
  {
    id v24 = v32;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v32, v14, v8);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v19, v24, v8);
  long long v32 = (char *)*(int *)(v17 + 20);
  *(void *)&v32[v19] = v20;
  uint64_t v25 = (char *)(v19 + *(int *)(v17 + 24));
  *(void *)uint64_t v25 = "DB queue";
  *((void *)v25 + 1) = 8;
  unsigned char v25[16] = 2;
  id v26 = v20;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100973BB0;
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = sub_1000240A4();
  *(void *)(v27 + 32) = v31;
  *(void *)(v27 + 40) = v21;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_10002B770((uint64_t)v33, &qword_100AD0830);
  v35(v28);
  sub_10096C760();
  sub_10096B3A0();
  return sub_1006F7C48(v19, type metadata accessor for Signpost);
}

uint64_t sub_1006DBFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  uint64_t v7 = *(void **)a4;
  uint64_t v8 = *(void *)(*(void *)a4 + 80);
  v6[17] = v8;
  uint64_t v9 = v7[11];
  v6[18] = v9;
  uint64_t v10 = v7[12];
  v6[19] = v10;
  uint64_t v11 = v7[13];
  uint64_t v12 = v7[14];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  v6[2] = v8;
  void v6[3] = v9;
  v6[4] = v10;
  v6[5] = v11;
  v6[6] = v12;
  v6[7] = WitnessTable;
  v6[8] = v14;
  v6[9] = v15;
  type metadata accessor for FPDiagnosticsManager();
  swift_getWitnessTable();
  uint64_t v17 = sub_10096C230();
  return _swift_task_switch(sub_1006DC154, v17, v16);
}

uint64_t sub_1006DC154()
{
  *(void *)(v0 + 160) = sub_1000A27F8();
  return _swift_task_switch(sub_1006DC1C0, 0, 0);
}

uint64_t sub_1006DC1C0()
{
  char v1 = sub_100943CB4(*(uint64_t **)(v0 + 120), *(void *)(v0 + 160));
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 128);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v6 = swift_getAssociatedConformanceWitness();
    *(void *)(v0 + 80) = AssociatedTypeWitness;
    *(void *)(v0 + 88) = v4;
    *(void *)(v0 + 96) = AssociatedConformanceWitness;
    *(void *)(v0 + 104) = v6;
    uint64_t v7 = type metadata accessor for ReconciliationID();
    sub_10096D230();
    uint64_t v8 = *(void *)(v7 - 8);
    swift_allocObject();
    uint64_t v9 = sub_10096C0D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v2, v7);
    uint64_t v11 = sub_1003FC080(v9);
    *(void *)(v0 + 168) = v11;
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1006DC430;
    return sub_1000A2BF4(v11, 2);
  }
  else
  {
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_1006DC430()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1006DC56C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1006DC56C()
{
  swift_bridgeObjectRelease();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006DC5D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v57 = a4;
  uint64_t v58 = a5;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  Swift::String v59 = a6;
  uint64_t v62 = type metadata accessor for UserRequest();
  uint64_t v63 = sub_100011348(255, &qword_100AD62F0);
  uint64_t v64 = sub_10096B7D0();
  uint64_t v65 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v54 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v8 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v52 = (void *)((char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v61 = (void *)((char *)v48 - v11);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (void *)((char *)v48 - v13);
  uint64_t v15 = *(int *)(v12 + 48);
  uint64_t v16 = (void *)((char *)v48 + v15 - v13);
  uint64_t v17 = *(int *)(TupleTypeMetadata + 64);
  uint64_t v18 = (char *)v16 + v17;
  uint64_t v49 = (uint64_t (*)(uint64_t))((char *)v16 + v17);
  uint64_t v19 = *(int *)(TupleTypeMetadata + 80);
  id v20 = (unint64_t *)((char *)v16 + v19);
  unint64_t v21 = (unint64_t *)((char *)a1 + v15);
  uint64_t v22 = *a1;
  *uint64_t v14 = *a1;
  id v23 = (char *)v21 + v17;
  id v24 = (uint64_t *)((char *)v21 + v19);
  unint64_t v26 = *v21;
  unint64_t v25 = v21[1];
  *uint64_t v16 = *v21;
  v16[1] = v25;
  v48[0] = v25;
  uint64_t v27 = sub_10096B7D0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v53 = v28;
  uint64_t v50 = *(void (**)(void))(v28 + 16);
  uint64_t v29 = v23;
  uint64_t v30 = v27;
  ((void (*)(char *, char *))v50)(v18, v29);
  uint64_t v32 = *v24;
  uint64_t v31 = v24[1];
  *id v20 = v32;
  v20[1] = v31;
  v48[1] = v31;
  uint64_t v33 = (void *)((char *)v61 + *(int *)(TupleTypeMetadata2 + 48));
  *uint64_t v61 = v22;
  *uint64_t v33 = v26;
  v33[1] = v25;
  uint64_t v34 = *(void (**)(void))(v28 + 32);
  uint64_t v51 = v30;
  v34();
  id v35 = (uint64_t (**)(uint64_t))((char *)v33 + *(int *)(TupleTypeMetadata + 80));
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v32;
  *(void *)(v36 + 24) = v31;
  uint64_t v49 = sub_1006FB2C0;
  *id v35 = sub_1006FB2C0;
  v35[1] = (uint64_t (*)(uint64_t))v36;
  uint64_t v37 = TupleTypeMetadata2;
  Swift::String v38 = (void *)((char *)v52 + *(int *)(TupleTypeMetadata2 + 48));
  *uint64_t v52 = v22;
  uint64_t v52 = (unint64_t *)((char *)v38 + *(int *)(TupleTypeMetadata + 64));
  uint64_t v39 = (uint64_t (**)(uint64_t))((char *)v38 + *(int *)(TupleTypeMetadata + 80));
  uint64_t v40 = (void *)v48[0];
  *Swift::String v38 = v26;
  v38[1] = (unint64_t)v40;
  v50();
  sub_1000CE628(v26);
  id v41 = v40;
  sub_1000CE628(v26);
  uint64_t v42 = *(void (**)(void *, uint64_t))(v54 + 8);
  id v43 = v41;
  swift_retain();
  swift_retain();
  v42(v61, v37);
  *uint64_t v39 = v49;
  v39[1] = (uint64_t (*)(uint64_t))v36;
  unint64_t v44 = *v38;
  uint64_t v45 = (void *)v38[1];
  swift_release();

  id v46 = sub_1006A93D4(v44);
  sub_1000B6C28(v44);
  *Swift::String v59 = v46;
  return (*(uint64_t (**)(void *, uint64_t))(v53 + 8))(v52, v51);
}

uint64_t sub_1006DC96C(id *a1)
{
  return [*a1 isFromPOSIX] ^ 1;
}

BOOL sub_1006DC994(id *a1)
{
  return [*a1 requestedExtent] == (id)-1;
}

BOOL sub_1006DC9C0(id *a1, void **a2)
{
  uint64_t v2 = *a2;
  [*a1 requestedExtent];
  uint64_t v4 = v3;
  [v2 requestedExtent];
  return v4 < v5;
}

void sub_1006DCA18(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v415 = a3;
  LODWORD(v428) = a2;
  uint64_t v394 = a1;
  uint64_t v5 = *(void **)v3;
  uint64_t v6 = *(void *)(*(void *)v3 + 592);
  uint64_t v7 = v5[72];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v430 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v432 = swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  uint64_t v375 = sub_10096C890();
  uint64_t v374 = *(void *)(v375 - 8);
  uint64_t v9 = __chkstk_darwin(v375);
  uint64_t v377 = (char *)&v357 - v10;
  uint64_t v376 = v8;
  uint64_t v391 = *(void *)(v8 - 8);
  __chkstk_darwin(v9);
  uint64_t v390 = (char *)&v357 - v11;
  uint64_t v12 = v5[73];
  uint64_t v13 = v5[75];
  uint64_t AssociatedTypeWitness = v7;
  uint64_t v430 = v12;
  uint64_t AssociatedConformanceWitness = v6;
  uint64_t v432 = v13;
  uint64_t AssociatedTypeWitness = type metadata accessor for UserRequest();
  uint64_t v422 = sub_100011348(255, &qword_100AD62F0);
  uint64_t v430 = v422;
  uint64_t v421 = (char **)sub_10096B7D0();
  uint64_t AssociatedConformanceWitness = (uint64_t)v421;
  uint64_t v432 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v420 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v15 = __chkstk_darwin(TupleTypeMetadata);
  uint64_t v417 = (char **)((char *)&v357 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v386 = (unint64_t *)((char *)&v357 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v395 = (unint64_t *)((char *)&v357 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v401 = (uint64_t *)((char *)&v357 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v413 = (char *)&v357 - v24;
  __chkstk_darwin(v23);
  uint64_t v427 = (char **)((char *)&v357 - v25);
  uint64_t v425 = sub_10096C890();
  uint64_t v423 = *(char **)(v425 - 8);
  uint64_t v26 = __chkstk_darwin(v425);
  uint64_t v419 = (char *)&v357 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v404 = (uint64_t)&v357 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v381 = (char *)&v357 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v387 = (char *)&v357 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v412 = (char *)&v357 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v418 = (char **)((char *)&v357 - v37);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v414 = (char *)&v357 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v403 = (uint64_t *)((char *)&v357 - v41);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v402 = (uint64_t)&v357 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  int64_t v380 = (char **)((char *)&v357 - v45);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v379 = (char **)((char *)&v357 - v47);
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v389 = (char **)((char *)&v357 - v49);
  uint64_t v50 = __chkstk_darwin(v48);
  long long v388 = (unint64_t *)((char *)&v357 - v51);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v411 = (char *)&v357 - v53;
  __chkstk_darwin(v52);
  int v405 = (unint64_t *)((char *)&v357 - v54);
  uint64_t v55 = v6;
  uint64_t v416 = v7;
  uint64_t v56 = swift_getAssociatedTypeWitness();
  uint64_t v383 = *(void *)(v56 - 8);
  uint64_t v373 = *(void *)(v383 + 64);
  __chkstk_darwin(v56);
  uint64_t v384 = (char *)&v357 - v57;
  uint64_t AssociatedTypeWitness = v7;
  uint64_t v430 = v12;
  uint64_t v407 = v12;
  uint64_t AssociatedConformanceWitness = v55;
  uint64_t v432 = v13;
  int64_t v408 = v13;
  uint64_t v58 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v426 = (void *)sub_10096C890();
  unint64_t v424 = (char **)*(v426 - 1);
  uint64_t v59 = __chkstk_darwin(v426);
  uint64_t v410 = (char *)&v357 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v63 = (char *)&v357 - v62;
  uint64_t v64 = *(void *)(v58 - 8);
  uint64_t v65 = __chkstk_darwin(v61);
  int64_t v372 = (char *)&v357 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v65);
  int64_t v69 = (unsigned __int8 *)&v357 - v68;
  uint64_t v371 = v70;
  __chkstk_darwin(v67);
  unint64_t v72 = (char *)&v357 - v71;
  uint64_t v378 = v4;
  int64_t v73 = (void (*)(void, void, void))(v4 + qword_100B0B318);
  swift_beginAccess();
  uint64_t v406 = (void (*)(char *, char *, uint64_t))v73;
  int64_t v409 = v55;
  uint64_t v74 = *(void **)(swift_getAssociatedConformanceWitness() + 32);
  swift_bridgeObjectRetain();
  sub_10096BAA0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v63, 1, v58) == 1)
  {
    ((void (*)(char *, void *))v424[1])(v63, v426);
    return;
  }
  uint64_t v426 = v74;
  int v75 = v428;
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  uint64_t v368 = v64 + 32;
  uint64_t v367 = v76;
  v76(v72, v63, v58);
  uint64_t v77 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v64 + 16);
  uint64_t v385 = (unsigned __int8 *)v72;
  uint64_t v366 = v64 + 16;
  uint64_t v365 = v77;
  v77((char *)v69, (unsigned __int8 *)v72, v58);
  if (v75 == 3) {
    int v75 = *v69;
  }
  uint64_t v78 = *(void (**)(void))(v64 + 8);
  ((void (*)(char *, uint64_t))v78)((char *)v69, v58);
  if (v75 != *v385)
  {
    v78();
    return;
  }
  uint64_t v369 = v78;
  uint64_t v396 = v64 + 8;
  uint64_t v79 = v383 + 16;
  Swift::String v80 = v385;
  uint64_t v364 = *(void (**)(char *, uint64_t, uint64_t))(v383 + 16);
  v364(v384, v394, v56);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v410, 1, 1, v58);
  swift_beginAccess();
  sub_10096BA80();
  sub_10096BAB0();
  swift_endAccess();
  uint64_t v81 = *(int *)(v58 + 56);
  uint64_t v82 = *(void *)&v80[v81];
  uint64_t v428 = TupleTypeMetadata;
  uint64_t v397 = v58;
  if (!v415)
  {
    uint64_t v363 = v81;
    uint64_t v360 = v64;
    uint64_t v361 = v56;
    uint64_t AssociatedTypeWitness = v416;
    uint64_t v430 = v407;
    uint64_t AssociatedConformanceWitness = v409;
    uint64_t v432 = v408;
    uint64_t AssociatedTypeWitness = type metadata accessor for UserRequest();
    uint64_t v430 = v422;
    uint64_t AssociatedConformanceWitness = (uint64_t)v421;
    uint64_t v432 = sub_100033BE8((uint64_t *)&unk_100ADA328);
    uint64_t v129 = swift_getTupleTypeMetadata();
    v130._object = &type metadata for ObjectIdentifier;
    v130._uint64_t countAndFlagsBits = v82;
    uint64_t v362 = v129;
    uint64_t countAndFlagsBits = Filename.init(rawValue:)(v130).rawValue._countAndFlagsBits;
    uint64_t v132 = *(void *)(countAndFlagsBits + 64);
    uint64_t v370 = countAndFlagsBits + 64;
    uint64_t v133 = 1 << *(unsigned char *)(countAndFlagsBits + 32);
    uint64_t v134 = -1;
    if (v133 < 64) {
      uint64_t v134 = ~(-1 << v133);
    }
    unint64_t v135 = v134 & v132;
    uint64_t v422 = v420 + 56;
    uint64_t v410 = (char *)(v420 + 16);
    unint64_t v424 = (char **)(v420 + 48);
    uint64_t v421 = (char **)(v423 + 32);
    uint64_t v418 = (char **)(v420 + 8);
    int64_t v382 = (unint64_t)(v133 + 63) >> 6;
    int64_t v358 = v382 - 1;
    uint64_t v392 = (char *)countAndFlagsBits;
    swift_bridgeObjectRetain();
    uint64_t v398 = 0;
    uint64_t v359 = v79;
    unint64_t v136 = (unint64_t *)v413;
    while (!v135)
    {
      int64_t v141 = v398 + 1;
      unint64_t v138 = (char **)v412;
      if (__OFADD__(v398, 1)) {
        goto LABEL_191;
      }
      if (v141 < v382)
      {
        unint64_t v142 = *(void *)(v370 + 8 * v141);
        if (v142) {
          goto LABEL_49;
        }
        int64_t v143 = v398 + 2;
        ++v398;
        if (v141 + 1 < v382)
        {
          unint64_t v142 = *(void *)(v370 + 8 * v143);
          if (v142) {
            goto LABEL_52;
          }
          uint64_t v398 = v141 + 1;
          if (v141 + 2 < v382)
          {
            unint64_t v142 = *(void *)(v370 + 8 * (v141 + 2));
            if (v142)
            {
              v141 += 2;
LABEL_49:
              uint64_t v415 = (v142 - 1) & v142;
              unint64_t v137 = __clz(__rbit64(v142)) + (v141 << 6);
              uint64_t v398 = v141;
LABEL_45:
              uint64_t v139 = v420;
              (*(void (**)(char **, unint64_t, uint64_t))(v420 + 16))(v138, *((void *)v392 + 7) + *(void *)(v420 + 72) * v137, TupleTypeMetadata);
              unint64_t v140 = *(void **)(v139 + 56);
              ((void (*)(char **, void, uint64_t, uint64_t))v140)(v138, 0, 1, TupleTypeMetadata);
              goto LABEL_64;
            }
            int64_t v143 = v141 + 3;
            uint64_t v398 = v141 + 2;
            if (v141 + 3 < v382)
            {
              unint64_t v142 = *(void *)(v370 + 8 * v143);
              if (v142)
              {
LABEL_52:
                int64_t v141 = v143;
                goto LABEL_49;
              }
              while (1)
              {
                int64_t v141 = v143 + 1;
                if (__OFADD__(v143, 1)) {
                  goto LABEL_197;
                }
                if (v141 >= v382) {
                  break;
                }
                unint64_t v142 = *(void *)(v370 + 8 * v141);
                ++v143;
                if (v142) {
                  goto LABEL_49;
                }
              }
              uint64_t v398 = v358;
            }
          }
        }
      }
      unint64_t v140 = *(void **)v422;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v422)(v412, 1, 1, TupleTypeMetadata);
      uint64_t v415 = 0;
LABEL_64:
      uint64_t v144 = 1;
      uint64_t v423 = *v424;
      int v145 = ((uint64_t (*)(char **, uint64_t, uint64_t))v423)(v138, 1, TupleTypeMetadata);
      uint64_t v426 = v140;
      if (v145 != 1)
      {
        uint64_t v146 = *(int *)(TupleTypeMetadata + 64);
        BOOL v147 = (char *)v138 + v146;
        uint64_t v148 = *(int *)(TupleTypeMetadata + 80);
        uint64_t v149 = v138[1];
        int v150 = v427;
        void *v427 = *v138;
        v150[1] = v149;
        uint64_t v151 = (char *)v150 + v146;
        uint64_t v152 = sub_10096B7D0();
        uint64_t v153 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32);
        v153(v151, v147, v152);
        uint64_t v154 = swift_allocObject();
        *(_OWORD *)(v154 + 16) = *(_OWORD *)&v412[v148];
        uint64_t v155 = v150[1];
        uint64_t v156 = v411;
        uint64_t v157 = &v411[*(int *)(TupleTypeMetadata + 64)];
        uint64_t v158 = (uint64_t (**)(uint64_t))&v411[*(int *)(TupleTypeMetadata + 80)];
        *(void *)uint64_t v411 = *v150;
        *((void *)v156 + 1) = v155;
        uint64_t v159 = v152;
        unint64_t v136 = (unint64_t *)v413;
        v153(v157, v151, v159);
        uint64_t v144 = 0;
        *uint64_t v158 = sub_1006FB2C0;
        v158[1] = (uint64_t (*)(uint64_t))v154;
        unint64_t v140 = v426;
      }
      uint64_t v160 = v411;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v140)(v411, v144, 1, TupleTypeMetadata);
      uint64_t v161 = v405;
      uint64_t v419 = *v421;
      ((void (*)(unint64_t *, char *, uint64_t))v419)(v405, v160, v425);
      if (((unsigned int (*)(unint64_t *, uint64_t, uint64_t))v423)(v161, 1, TupleTypeMetadata) == 1)
      {
        swift_release();
        v190._uint64_t countAndFlagsBits = *(void *)&v385[v363];
        v190._object = &type metadata for ObjectIdentifier;
        uint64_t v191 = Filename.init(rawValue:)(v190).rawValue._countAndFlagsBits;
        uint64_t v192 = *(void *)(v191 + 64);
        int64_t v409 = v191 + 64;
        uint64_t v193 = 1 << *(unsigned char *)(v191 + 32);
        uint64_t v194 = -1;
        if (v193 < 64) {
          uint64_t v194 = ~(-1 << v193);
        }
        unint64_t v195 = v194 & v192;
        uint64_t v411 = (char *)((unint64_t)(v193 + 63) >> 6);
        int64_t v408 = (int64_t)(v411 - 1);
        uint64_t v412 = (char *)v191;
        swift_bridgeObjectRetain();
        uint64_t v196 = 0;
        while (1)
        {
          uint64_t v197 = (char **)v404;
          if (v195) {
            break;
          }
          uint64_t v235 = v196 + 1;
          uint64_t v199 = v428;
          if (__OFADD__(v196, 1)) {
            goto LABEL_192;
          }
          if (v235 < (uint64_t)v411)
          {
            unint64_t v236 = *(void *)(v409 + 8 * v235);
            uint64_t v200 = (void (*)(char **, uint64_t, uint64_t, uint64_t))v426;
            if (v236) {
              goto LABEL_87;
            }
            uint64_t v237 = v196 + 2;
            if (v235 + 1 >= (uint64_t)v411)
            {
              uint64_t v415 = v235;
              uint64_t v416 = 0;
              uint64_t v201 = 1;
            }
            else
            {
              unint64_t v236 = *(void *)(v409 + 8 * v237);
              if (v236) {
                goto LABEL_91;
              }
              if (v235 + 2 >= (uint64_t)v411)
              {
                uint64_t v415 = v237;
                uint64_t v416 = 0;
                uint64_t v201 = 1;
              }
              else
              {
                unint64_t v236 = *(void *)(v409 + 8 * (v235 + 2));
                if (v236)
                {
                  v235 += 2;
LABEL_87:
                  uint64_t v415 = v235;
                  uint64_t v416 = (v236 - 1) & v236;
                  unint64_t v198 = __clz(__rbit64(v236)) + (v235 << 6);
LABEL_77:
                  (*(void (**)(uint64_t, unint64_t, uint64_t))(v420 + 16))(v404, *((void *)v412 + 7) + *(void *)(v420 + 72) * v198, v199);
                  uint64_t v201 = 0;
                }
                else
                {
                  uint64_t v237 = v235 + 3;
                  if (v235 + 3 >= (uint64_t)v411)
                  {
                    uint64_t v415 = v235 + 2;
                    uint64_t v416 = 0;
                    uint64_t v201 = 1;
                  }
                  else
                  {
                    unint64_t v236 = *(void *)(v409 + 8 * v237);
                    if (v236)
                    {
LABEL_91:
                      uint64_t v235 = v237;
                      goto LABEL_87;
                    }
                    while (1)
                    {
                      uint64_t v235 = v237 + 1;
                      if (__OFADD__(v237, 1)) {
                        goto LABEL_198;
                      }
                      if (v235 >= (uint64_t)v411) {
                        break;
                      }
                      unint64_t v236 = *(void *)(v409 + 8 * v235);
                      ++v237;
                      if (v236) {
                        goto LABEL_87;
                      }
                    }
                    uint64_t v416 = 0;
                    uint64_t v201 = 1;
                    uint64_t v415 = v408;
                  }
                }
              }
            }
            v200(v197, v201, 1, v199);
            goto LABEL_79;
          }
          uint64_t v415 = v196;
          uint64_t v416 = 0;
          uint64_t v200 = (void (*)(char **, uint64_t, uint64_t, uint64_t))v426;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v426)(v404, 1, 1, v428);
LABEL_79:
          if (((unsigned int (*)(char **, uint64_t, uint64_t))v423)(v197, 1, v199) == 1)
          {
            uint64_t v202 = (char **)v403;
            v200((char **)v403, 1, 1, v199);
          }
          else
          {
            uint64_t v203 = *(int *)(v199 + 64);
            uint64_t v204 = (char *)v197 + v203;
            uint64_t v205 = *(int *)(v199 + 80);
            unint64_t v206 = v197[1];
            BOOL v207 = v427;
            void *v427 = *v197;
            v207[1] = v206;
            uint64_t v426 = v200;
            uint64_t v208 = (char *)v207 + v203;
            uint64_t v209 = sub_10096B7D0();
            uint64_t v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 32);
            v210(v208, v204, v209);
            uint64_t v211 = swift_allocObject();
            *(_OWORD *)(v211 + 16) = *(_OWORD *)((char *)v197 + v205);
            uint64_t v212 = *v207;
            uint64_t v213 = v207[1];
            uint64_t v202 = (char **)v403;
            uint64_t v214 = (char *)v403 + *(int *)(v199 + 64);
            uint64_t v215 = (uint64_t (**)(uint64_t))((char *)v403 + *(int *)(v199 + 80));
            *uint64_t v403 = v212;
            v202[1] = v213;
            double v216 = v208;
            uint64_t v200 = (void (*)(char **, uint64_t, uint64_t, uint64_t))v426;
            v210(v214, v216, v209);
            *uint64_t v215 = sub_1006FB2C0;
            v215[1] = (uint64_t (*)(uint64_t))v211;
            v200(v202, 0, 1, v199);
          }
          uint64_t v217 = v397;
          double v218 = (char **)v402;
          ((void (*)(uint64_t, char **, uint64_t))v419)(v402, v202, v425);
          if (((unsigned int (*)(char **, uint64_t, uint64_t))v423)(v218, 1, v199) == 1)
          {
            swift_release();
            ((void (*)(unsigned __int8 *, uint64_t))v369)(v385, v217);
            return;
          }
          uint64_t v426 = v200;
          uint64_t v219 = *(int *)(v199 + 64);
          uint64_t v220 = v427;
          uint64_t v221 = (char *)v427 + v219;
          uint64_t v222 = v218[1];
          uint64_t v414 = *v218;
          uint64_t v413 = (char *)v218 + v219;
          uint64_t v223 = *(int *)(v199 + 80);
          long long v224 = (char *)v218 + v223;
          long long v225 = *(void (**)(void))((char *)v218 + v223);
          uint64_t v226 = *((void *)v224 + 1);
          uint64_t v227 = (char **)((char *)v427 + v223);
          void *v427 = v414;
          v220[1] = v222;
          uint64_t v228 = sub_10096B7D0();
          uint64_t v229 = v199;
          uint64_t v230 = *(void *)(v228 - 8);
          (*(void (**)(char *, char *, uint64_t))(v230 + 32))(v221, v413, v228);
          void *v227 = v225;
          v227[1] = v226;
          uint64_t v231 = v417;
          unint64_t v232 = (char *)v417 + *(int *)(v229 + 64);
          int64_t v233 = (char **)((char *)v417 + *(int *)(v229 + 80));
          *uint64_t v417 = v414;
          v231[1] = v222;
          int64_t v234 = v232;
          (*(void (**)(void))(v230 + 16))();
          *int64_t v233 = v225;
          v233[1] = v226;
          swift_retain();
          v225(0);
          swift_release();
          ((void (*)(char **, uint64_t))*v418)(v220, v229);
          (*(void (**)(char *, uint64_t))(v230 + 8))(v234, v228);
          uint64_t v196 = v415;
          unint64_t v195 = v416;
        }
        uint64_t v415 = v196;
        uint64_t v416 = (v195 - 1) & v195;
        unint64_t v198 = __clz(__rbit64(v195)) | (v196 << 6);
        uint64_t v199 = v428;
        uint64_t v200 = (void (*)(char **, uint64_t, uint64_t, uint64_t))v426;
        goto LABEL_77;
      }
      uint64_t v162 = *(int *)(TupleTypeMetadata + 64);
      uint64_t v163 = (char *)v136 + v162;
      uint64_t v164 = v136;
      unint64_t v166 = *v161;
      unint64_t v165 = v161[1];
      uint64_t v414 = (char *)v161 + v162;
      uint64_t v167 = *(int *)(TupleTypeMetadata + 80);
      uint64_t v169 = *(unint64_t *)((char *)v161 + v167);
      uint64_t v168 = *(unint64_t *)((char *)v161 + v167 + 8);
      uint64_t v170 = (unint64_t *)((char *)v164 + v167);
      *uint64_t v164 = v166;
      v164[1] = v165;
      uint64_t v171 = sub_10096B7D0();
      uint64_t v172 = *(void **)(v171 - 8);
      uint64_t v173 = (void (*)(void, void, void))v172[4];
      uint64_t v174 = v414;
      uint64_t v414 = (char *)(v172 + 4);
      uint64_t v406 = (void (*)(char *, char *, uint64_t))v173;
      v173(v163, v174, v171);
      *uint64_t v170 = v169;
      v170[1] = v168;
      double v175 = v401;
      uint64_t v176 = (char *)v401 + *(int *)(TupleTypeMetadata + 64);
      uint64_t v177 = (void *)((char *)v401 + *(int *)(TupleTypeMetadata + 80));
      *uint64_t v401 = v166;
      v175[1] = v165;
      uint64_t v178 = v171;
      uint64_t v179 = (void (*)(void))v172[2];
      double v180 = v176;
      uint64_t v181 = v178;
      uint64_t v400 = v172 + 2;
      unint64_t v399 = v179;
      v179();
      *uint64_t v177 = v169;
      v177[1] = v168;
      uint64_t v182 = sub_1006A93D4(v166);
      if (v182)
      {
        uint64_t v183 = v182;
        uint64_t v186 = (char *)v172[1];
        uint64_t v185 = (char *)(v172 + 1);
        id v184 = v186;
        ((void (*)(char *, uint64_t))v186)(v180, v181);
        if ([v183 selectedForMaterialization])
        {
          uint64_t v187 = v181;
          id v188 = [v183 requestedExtent];

          uint64_t v189 = (unint64_t *)*v418;
          unint64_t v136 = (unint64_t *)v413;
          ((void (*)(char *, uint64_t))*v418)(v413, TupleTypeMetadata);
          unint64_t v135 = v415;
          if (v188 != (id)-1)
          {
            uint64_t v411 = v184;
            swift_release();
            v238._uint64_t countAndFlagsBits = *(void *)&v385[v363];
            v238._object = &type metadata for ObjectIdentifier;
            uint64_t v239 = Filename.init(rawValue:)(v238).rawValue._countAndFlagsBits;
            uint64_t v240 = *(void *)(v239 + 64);
            uint64_t v398 = v239 + 64;
            uint64_t v241 = 1 << *(unsigned char *)(v239 + 32);
            uint64_t v402 = -1;
            if (v241 < 64) {
              uint64_t v242 = ~(-1 << v241);
            }
            else {
              uint64_t v242 = -1;
            }
            unint64_t v243 = v242 & v240;
            uint64_t v401 = (void *)((unint64_t)(v241 + 63) >> 6);
            uint64_t v392 = (char *)v401 - 1;
            uint64_t v403 = (void *)v239;
            swift_bridgeObjectRetain();
            uint64_t v244 = 0;
            uint64_t v404 = -1;
            uint64_t v245 = (void (*)(char **, uint64_t, uint64_t, uint64_t))v426;
            uint64_t v428 = v187;
            uint64_t v412 = v185;
            int v405 = v189;
            while (1)
            {
              if (v243)
              {
                uint64_t v415 = (v243 - 1) & v243;
                uint64_t v413 = v244;
                unint64_t v247 = __clz(__rbit64(v243)) | ((void)v244 << 6);
                goto LABEL_115;
              }
              uint64_t v250 = (uint64_t)(v244 + 1);
              if (__OFADD__(v244, 1)) {
                goto LABEL_194;
              }
              if (v250 >= (uint64_t)v401) {
                break;
              }
              unint64_t v251 = *(void *)(v398 + 8 * v250);
              if (v251) {
                goto LABEL_119;
              }
              v244 += 2;
              if (v250 + 1 >= (uint64_t)v401)
              {
                uint64_t v415 = 0;
                uint64_t v249 = 1;
              }
              else
              {
                unint64_t v251 = *(void *)(v398 + 8 * (void)v244);
                if (v251) {
                  goto LABEL_122;
                }
                if (v250 + 2 >= (uint64_t)v401) {
                  break;
                }
                unint64_t v251 = *(void *)(v398 + 8 * (v250 + 2));
                if (v251)
                {
                  v250 += 2;
LABEL_119:
                  uint64_t v415 = (v251 - 1) & v251;
                  unint64_t v247 = __clz(__rbit64(v251)) + (v250 << 6);
                  uint64_t v413 = (char *)v250;
LABEL_115:
                  uint64_t v248 = (char **)v387;
                  (*(void (**)(char *, unint64_t, uint64_t))(v420 + 16))(v387, v403[7] + *(void *)(v420 + 72) * v247, TupleTypeMetadata);
                  uint64_t v249 = 0;
                  goto LABEL_130;
                }
                uint64_t v244 = (char *)(v250 + 3);
                if (v250 + 3 >= (uint64_t)v401)
                {
                  uint64_t v415 = 0;
                  uint64_t v249 = 1;
                  uint64_t v413 = (char *)(v250 + 2);
                  goto LABEL_129;
                }
                unint64_t v251 = *(void *)(v398 + 8 * (void)v244);
                if (v251)
                {
LABEL_122:
                  uint64_t v250 = (uint64_t)v244;
                  goto LABEL_119;
                }
                while (1)
                {
                  uint64_t v250 = (uint64_t)(v244 + 1);
                  if (__OFADD__(v244, 1)) {
                    goto LABEL_199;
                  }
                  if (v250 >= (uint64_t)v401) {
                    break;
                  }
                  unint64_t v251 = *(void *)(v398 + 8 * v250);
                  ++v244;
                  if (v251) {
                    goto LABEL_119;
                  }
                }
                uint64_t v415 = 0;
                uint64_t v249 = 1;
                uint64_t v250 = (uint64_t)v392;
              }
              uint64_t v413 = (char *)v250;
LABEL_129:
              uint64_t v248 = (char **)v387;
LABEL_130:
              v245(v248, v249, 1, TupleTypeMetadata);
              if (((unsigned int (*)(char **, uint64_t, uint64_t))v423)(v248, 1, TupleTypeMetadata) == 1)
              {
                uint64_t v252 = v389;
                v245(v389, 1, 1, TupleTypeMetadata);
              }
              else
              {
                uint64_t v253 = *(int *)(TupleTypeMetadata + 64);
                uint64_t v254 = v245;
                uint64_t v255 = *(int *)(TupleTypeMetadata + 80);
                uint64_t v256 = v248[1];
                uint64_t v258 = v427;
                uint64_t v257 = v428;
                void *v427 = *v248;
                v258[1] = v256;
                Swift::String v259 = (char *)v258 + v253;
                uint64_t v260 = v406;
                v406((char *)v258 + v253, (char *)v248 + v253, v257);
                uint64_t v261 = swift_allocObject();
                *(_OWORD *)(v261 + 16) = *(_OWORD *)((char *)v248 + v255);
                uint64_t v262 = *v258;
                uint64_t v263 = v258[1];
                unint64_t v264 = v389;
                uint64_t v265 = (char *)v389 + *(int *)(TupleTypeMetadata + 64);
                unint64_t v266 = (uint64_t (**)(uint64_t))((char *)v389 + *(int *)(TupleTypeMetadata + 80));
                *uint64_t v389 = v262;
                v264[1] = v263;
                v260(v265, v259, v428);
                void *v266 = sub_1006FB2C0;
                v266[1] = (uint64_t (*)(uint64_t))v261;
                uint64_t v245 = v254;
                uint64_t v252 = v264;
                v245(v264, 0, 1, TupleTypeMetadata);
              }
              uint64_t v267 = v391;
              unint64_t v268 = v390;
              uint64_t v269 = v388;
              ((void (*)(unint64_t *, char **, uint64_t))v419)(v388, v252, v425);
              if (((unsigned int (*)(unint64_t *, uint64_t, uint64_t))v423)(v269, 1, TupleTypeMetadata) == 1)
              {
                swift_release();
                uint64_t v294 = *(void **)(v378 + 32);
                uint64_t v295 = v377;
                uint64_t v296 = v394;
                uint64_t v297 = v393;
                (*(void (**)(uint64_t))(*v294 + 616))(v394);
                uint64_t v393 = v297;
                if (!v297)
                {
                  uint64_t v298 = v376;
                  int v299 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v267 + 48))(v295, 1, v376);
                  uint64_t v300 = v397;
                  if (v299 != 1)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v267 + 32))(v268, v295, v298);
                    if (v402 < v404) {
                      goto LABEL_200;
                    }
                    uint64_t v346 = v294[2];
                    uint64_t v347 = v372;
                    v365(v372, v385, v300);
                    v364(v384, v296, v361);
                    unint64_t v348 = (*(unsigned __int8 *)(v360 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80);
                    unint64_t v349 = (v371 + v348 + 7) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v350 = v383;
                    unint64_t v351 = (*(unsigned __int8 *)(v383 + 80) + v349 + 8) & ~(unint64_t)*(unsigned __int8 *)(v383 + 80);
                    uint64_t v352 = (char *)swift_allocObject();
                    uint64_t v353 = v407;
                    *((void *)v352 + 2) = v416;
                    *((void *)v352 + 3) = v353;
                    int64_t v354 = v408;
                    *((void *)v352 + 4) = v409;
                    *((void *)v352 + 5) = v354;
                    *((void *)v352 + 6) = v378;
                    v367(&v352[v348], v347, v300);
                    *(void *)&v352[v349] = 0;
                    (*(void (**)(char *, char *, uint64_t))(v350 + 32))(&v352[v351], v384, v361);
                    uint64_t v355 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t (*)(uint64_t, char), char *))(*(void *)v346 + 768);
                    swift_retain();
                    swift_retain();
                    swift_errorRetain();
                    uint64_t v356 = v390;
                    v355(v394, v390, v404, v402, sub_1006F3320, v352);
                    swift_release();
                    swift_release();
                    (*(void (**)(char *, uint64_t))(v391 + 8))(v356, v376);
                    uint64_t v127 = v385;
                    uint64_t v128 = v300;
                    goto LABEL_37;
                  }
                  (*(void (**)(char *, uint64_t))(v374 + 8))(v295, v375);
                  v301._uint64_t countAndFlagsBits = *(void *)&v385[v363];
                  v301._object = &type metadata for ObjectIdentifier;
                  uint64_t v302 = Filename.init(rawValue:)(v301).rawValue._countAndFlagsBits;
                  uint64_t v303 = *(void *)(v302 + 64);
                  uint64_t v407 = v302 + 64;
                  uint64_t v304 = 1 << *(unsigned char *)(v302 + 32);
                  uint64_t v305 = -1;
                  if (v304 < 64) {
                    uint64_t v305 = ~(-1 << v304);
                  }
                  unint64_t v306 = v305 & v303;
                  int64_t v408 = (unint64_t)(v304 + 63) >> 6;
                  uint64_t v404 = v408 - 1;
                  int64_t v409 = v302;
                  swift_bridgeObjectRetain();
                  uint64_t v307 = 0;
                  while (2)
                  {
                    long long v308 = v381;
                    if (v306)
                    {
                      uint64_t v415 = v307;
                      uint64_t v416 = (v306 - 1) & v306;
                      unint64_t v309 = __clz(__rbit64(v306)) | (v307 << 6);
                      goto LABEL_160;
                    }
                    int64_t v311 = v307 + 1;
                    if (__OFADD__(v307, 1)) {
                      goto LABEL_195;
                    }
                    if (v311 < v408)
                    {
                      unint64_t v312 = *(void *)(v407 + 8 * v311);
                      if (v312)
                      {
LABEL_164:
                        uint64_t v415 = v311;
                        uint64_t v416 = (v312 - 1) & v312;
                        unint64_t v309 = __clz(__rbit64(v312)) + (v311 << 6);
LABEL_160:
                        (*(void (**)(char *, unint64_t, uint64_t))(v420 + 16))(v381, *(void *)(v409 + 56) + *(void *)(v420 + 72) * v309, TupleTypeMetadata);
                        uint64_t v310 = 0;
LABEL_174:
                        v245((char **)v308, v310, 1, TupleTypeMetadata);
                        if (((unsigned int (*)(char *, uint64_t, uint64_t))v423)(v308, 1, TupleTypeMetadata) == 1)
                        {
                          uint64_t v313 = v380;
                          uint64_t v314 = v380;
                          uint64_t v315 = 1;
                        }
                        else
                        {
                          uint64_t v316 = *(int *)(TupleTypeMetadata + 64);
                          uint64_t v426 = v245;
                          os_log_type_t v317 = (char **)v308;
                          uint64_t v318 = *(int *)(TupleTypeMetadata + 80);
                          uint64_t v319 = v317[1];
                          unint64_t v320 = v427;
                          void *v427 = *v317;
                          v320[1] = v319;
                          uint64_t v413 = (char *)v320 + v316;
                          uint64_t v321 = v428;
                          uint64_t v322 = v406;
                          ((void (*)(void))v406)();
                          uint64_t v323 = swift_allocObject();
                          long long v324 = *(_OWORD *)((char *)v317 + v318);
                          uint64_t v245 = (void (*)(char **, uint64_t, uint64_t, uint64_t))v426;
                          *(_OWORD *)(v323 + 16) = v324;
                          uint64_t v325 = *v320;
                          uint64_t v326 = v320[1];
                          uint64_t v313 = v380;
                          uint64_t v327 = (char *)v380 + *(int *)(TupleTypeMetadata + 64);
                          uint64_t v328 = (uint64_t (**)(uint64_t))((char *)v380 + *(int *)(TupleTypeMetadata + 80));
                          *int64_t v380 = v325;
                          v313[1] = v326;
                          v322(v327, v413, v321);
                          uint64_t v300 = v397;
                          char *v328 = sub_1006FB2C0;
                          v328[1] = (uint64_t (*)(uint64_t))v323;
                          uint64_t v314 = v313;
                          uint64_t v315 = 0;
                        }
                        v245(v314, v315, 1, TupleTypeMetadata);
                        uint64_t v329 = v369;
                        uint64_t v330 = v379;
                        ((void (*)(char **, char **, uint64_t))v419)(v379, v313, v425);
                        if (((unsigned int (*)(char **, uint64_t, uint64_t))v423)(v330, 1, TupleTypeMetadata) == 1)
                        {
                          swift_release();
                          ((void (*)(unsigned __int8 *, uint64_t))v329)(v385, v300);
                          return;
                        }
                        uint64_t v331 = *(int *)(TupleTypeMetadata + 64);
                        uint64_t v332 = v427;
                        uint64_t v333 = v428;
                        uint64_t v334 = (char *)v427 + v331;
                        uint64_t v426 = v245;
                        uint64_t v335 = *v330;
                        int64_t v336 = v330[1];
                        int64_t v337 = (char *)v330 + v331;
                        uint64_t v338 = *(int *)(TupleTypeMetadata + 80);
                        uint64_t v339 = *(void (**)(uint64_t))((char *)v330 + v338);
                        uint64_t v340 = *(uint64_t *)((char *)v330 + v338 + 8);
                        uint64_t v341 = (void (**)(uint64_t))((char *)v427 + v338);
                        void *v427 = v335;
                        v332[1] = v336;
                        v406(v334, v337, v333);
                        *uint64_t v341 = v339;
                        v341[1] = (void (*)(uint64_t))v340;
                        uint64_t v342 = v417;
                        uint64_t v343 = (char *)v417 + *(int *)(TupleTypeMetadata + 64);
                        uint64_t v344 = (void (**)(uint64_t))((char *)v417 + *(int *)(TupleTypeMetadata + 80));
                        *uint64_t v417 = v335;
                        v342[1] = v336;
                        uint64_t v245 = (void (*)(char **, uint64_t, uint64_t, uint64_t))v426;
                        ((void (*)(char *, char *, uint64_t))v399)(v343, v334, v333);
                        *uint64_t v344 = v339;
                        v344[1] = (void (*)(uint64_t))v340;
                        type metadata accessor for NSFileProviderError(0);
                        uint64_t v433 = -1005;
                        swift_retain();
                        sub_100042898((uint64_t)_swiftEmptyArrayStorage);
                        sub_1006F9218((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
                        sub_10096ABD0();
                        Swift::String v345 = (void *)AssociatedTypeWitness;
                        v339(AssociatedTypeWitness);
                        swift_release();

                        uint64_t v300 = v397;
                        ((void (*)(char **, uint64_t))v405)(v427, TupleTypeMetadata);
                        ((void (*)(char *, uint64_t))v411)(v343, v333);
                        uint64_t v307 = v415;
                        unint64_t v306 = v416;
                        continue;
                      }
                      v307 += 2;
                      if (v311 + 1 >= v408)
                      {
                        uint64_t v415 = v311;
                        uint64_t v416 = 0;
                        goto LABEL_173;
                      }
                      unint64_t v312 = *(void *)(v407 + 8 * v307);
                      if (v312) {
                        goto LABEL_167;
                      }
                      if (v311 + 2 < v408)
                      {
                        unint64_t v312 = *(void *)(v407 + 8 * (v311 + 2));
                        if (v312)
                        {
                          v311 += 2;
                          goto LABEL_164;
                        }
                        uint64_t v307 = v311 + 3;
                        if (v311 + 3 < v408)
                        {
                          unint64_t v312 = *(void *)(v407 + 8 * v307);
                          if (!v312)
                          {
                            while (1)
                            {
                              int64_t v311 = v307 + 1;
                              if (__OFADD__(v307, 1)) {
                                goto LABEL_201;
                              }
                              if (v311 >= v408) {
                                break;
                              }
                              unint64_t v312 = *(void *)(v407 + 8 * v311);
                              ++v307;
                              if (v312) {
                                goto LABEL_164;
                              }
                            }
                            uint64_t v416 = 0;
                            uint64_t v310 = 1;
                            uint64_t v415 = v404;
                            goto LABEL_174;
                          }
LABEL_167:
                          int64_t v311 = v307;
                          goto LABEL_164;
                        }
                        uint64_t v415 = v311 + 2;
                        uint64_t v416 = 0;
LABEL_173:
                        uint64_t v310 = 1;
                        goto LABEL_174;
                      }
                    }
                    break;
                  }
                  uint64_t v415 = v307;
                  uint64_t v416 = 0;
                  goto LABEL_173;
                }
LABEL_36:
                uint64_t v127 = v385;
                uint64_t v128 = v397;
LABEL_37:
                ((void (*)(unsigned __int8 *, uint64_t))v369)(v127, v128);
                return;
              }
              uint64_t v426 = v245;
              uint64_t v270 = *(int *)(TupleTypeMetadata + 64);
              uint64_t v271 = v395;
              uint64_t v272 = (char *)v395 + v270;
              uint64_t v273 = v269;
              unint64_t v274 = *v269;
              unint64_t v275 = v273[1];
              BOOL v276 = (char *)v273 + v270;
              uint64_t v277 = *(int *)(TupleTypeMetadata + 80);
              uint64_t v278 = (uint64_t *)((char *)v273 + v277);
              uint64_t v279 = *v278;
              uint64_t v280 = v278[1];
              uint64_t v281 = (unint64_t *)((char *)v395 + v277);
              unint64_t *v395 = v274;
              v271[1] = v275;
              uint64_t v282 = v428;
              v406(v272, v276, v428);
              *uint64_t v281 = v279;
              v281[1] = v280;
              uint64_t v283 = v386;
              uint64_t v284 = (char *)v386 + *(int *)(TupleTypeMetadata + 64);
              uint64_t v285 = (unint64_t *)((char *)v386 + *(int *)(TupleTypeMetadata + 80));
              *unint64_t v386 = v274;
              v283[1] = v275;
              ((void (*)(char *, char *, uint64_t))v399)(v284, v272, v282);
              *uint64_t v285 = v279;
              v285[1] = v280;
              uint64_t v286 = sub_1006A93D4(v274);
              if (!v286)
              {
                ((void (*)(char *, uint64_t))v411)(v284, v282);
LABEL_111:
                uint64_t v245 = (void (*)(char **, uint64_t, uint64_t, uint64_t))v426;
                double v246 = v405;
                goto LABEL_112;
              }
              unint64_t v287 = v286;
              int64_t v288 = (char *)[v286 requestedExtent];
              uint64_t v289 = v282;
              uint64_t v291 = v290;

              ((void (*)(char *, uint64_t))v411)(v284, v289);
              if (v291 == -1) {
                goto LABEL_111;
              }
              uint64_t v245 = (void (*)(char **, uint64_t, uint64_t, uint64_t))v426;
              double v246 = v405;
              if (__OFADD__(v288, v291)) {
                goto LABEL_193;
              }
              if ((uint64_t)v288 >= v404) {
                uint64_t v292 = v404;
              }
              else {
                uint64_t v292 = (uint64_t)v288;
              }
              if (v404 == -1) {
                uint64_t v292 = (uint64_t)v288;
              }
              uint64_t v404 = v292;
              uint64_t v293 = (char *)v402;
              if ((uint64_t)&v288[v291] > v402) {
                uint64_t v293 = &v288[v291];
              }
              uint64_t v402 = (uint64_t)v293;
LABEL_112:
              ((void (*)(unint64_t *, uint64_t))v246)(v395, TupleTypeMetadata);
              unint64_t v243 = v415;
              uint64_t v244 = v413;
            }
            uint64_t v413 = v244;
            uint64_t v415 = 0;
            uint64_t v249 = 1;
            goto LABEL_129;
          }
        }
        else
        {
          unint64_t v136 = (unint64_t *)v413;
          ((void (*)(char *, uint64_t))*v418)(v413, TupleTypeMetadata);

          unint64_t v135 = v415;
        }
      }
      else
      {
        unint64_t v136 = (unint64_t *)v413;
        ((void (*)(char *, uint64_t))*v418)(v413, TupleTypeMetadata);
        ((void (*)(char *, uint64_t))v172[1])(v180, v181);
        unint64_t v135 = v415;
      }
    }
    uint64_t v415 = (v135 - 1) & v135;
    unint64_t v137 = __clz(__rbit64(v135)) | (v398 << 6);
    unint64_t v138 = (char **)v412;
    goto LABEL_45;
  }
  uint64_t AssociatedTypeWitness = v416;
  uint64_t v430 = v407;
  uint64_t AssociatedConformanceWitness = v409;
  uint64_t v432 = v408;
  uint64_t AssociatedTypeWitness = type metadata accessor for UserRequest();
  uint64_t v430 = v422;
  uint64_t AssociatedConformanceWitness = (uint64_t)v421;
  uint64_t v432 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  swift_getTupleTypeMetadata();
  v83._object = &type metadata for ObjectIdentifier;
  v83._uint64_t countAndFlagsBits = v82;
  uint64_t v84 = Filename.init(rawValue:)(v83).rawValue._countAndFlagsBits;
  uint64_t v85 = *(void *)(v84 + 64);
  int64_t v408 = v84 + 64;
  uint64_t v86 = 1 << *(unsigned char *)(v84 + 32);
  uint64_t v87 = -1;
  if (v86 < 64) {
    uint64_t v87 = ~(-1 << v86);
  }
  unint64_t v88 = v87 & v85;
  uint64_t v426 = (void *)(v420 + 56);
  uint64_t v410 = (char *)(v420 + 16);
  unint64_t v424 = (char **)(v420 + 48);
  uint64_t v413 = v423 + 32;
  uint64_t v412 = (char *)(v420 + 8);
  int64_t v409 = (unint64_t)(v86 + 63) >> 6;
  uint64_t v407 = v409 - 1;
  uint64_t v411 = (char *)v84;
  swift_bridgeObjectRetain();
  uint64_t v416 = 0;
  uint64_t v89 = (char **)v419;
  if (!v88) {
    goto LABEL_14;
  }
LABEL_12:
  uint64_t v423 = (char *)((v88 - 1) & v88);
  unint64_t v104 = __clz(__rbit64(v88)) | (v416 << 6);
LABEL_13:
  uint64_t v105 = v420;
  (*(void (**)(char **, unint64_t, uint64_t))(v420 + 16))(v89, *((void *)v411 + 7) + *(void *)(v420 + 72) * v104, TupleTypeMetadata);
  int64_t v106 = *(void (**)(char **, void, uint64_t, uint64_t))(v105 + 56);
  v106(v89, 0, 1, TupleTypeMetadata);
  while (1)
  {
    uint64_t v110 = *v424;
    uint64_t v111 = 1;
    if (((unsigned int (*)(char **, uint64_t, uint64_t))*v424)(v89, 1, TupleTypeMetadata) != 1)
    {
      uint64_t v112 = *(int *)(TupleTypeMetadata + 64);
      uint64_t v113 = (char *)v89 + v112;
      uint64_t v114 = v427;
      uint64_t v422 = *(int *)(v428 + 80);
      uint64_t v115 = v89[1];
      void *v427 = *v89;
      v114[1] = v115;
      uint64_t v116 = (char *)v114 + v112;
      uint64_t v117 = sub_10096B7D0();
      uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32);
      v118(v116, v113, v117);
      uint64_t v119 = swift_allocObject();
      uint64_t v120 = v418;
      *(_OWORD *)(v119 + 16) = *(_OWORD *)&v419[v422];
      uint64_t v121 = *v114;
      unint64_t v122 = v114[1];
      unint64_t v123 = (char *)v120 + *(int *)(v428 + 64);
      unint64_t v124 = (uint64_t (**)(uint64_t))((char *)v120 + *(int *)(v428 + 80));
      *uint64_t v120 = v121;
      v120[1] = v122;
      v118(v123, v116, v117);
      uint64_t v111 = 0;
      *unint64_t v124 = sub_1006FB2C0;
      v124[1] = (uint64_t (*)(uint64_t))v119;
      uint64_t TupleTypeMetadata = v428;
    }
    uint64_t v125 = (char *)v418;
    v106(v418, v111, 1, TupleTypeMetadata);
    uint64_t v126 = (char **)v414;
    (*(void (**)(char *, char *, uint64_t))v413)(v414, v125, v425);
    if (((unsigned int (*)(char **, uint64_t, uint64_t))v110)(v126, 1, TupleTypeMetadata) == 1)
    {
      swift_release();
      goto LABEL_36;
    }
    uint64_t v90 = *(int *)(TupleTypeMetadata + 64);
    uint64_t v91 = v427;
    uint64_t v92 = (char *)v427 + v90;
    uint64_t v93 = *v126;
    unint64_t v94 = v126[1];
    uint64_t v421 = (char **)((char *)v427 + v90);
    uint64_t v422 = (uint64_t)v126 + v90;
    uint64_t v95 = *(int *)(v428 + 80);
    uint64_t v97 = *(void (**)(uint64_t))((char *)v126 + v95);
    uint64_t v96 = *(uint64_t *)((char *)v126 + v95 + 8);
    uint64_t v98 = (void (**)(uint64_t))((char *)v427 + v95);
    void *v427 = v93;
    v91[1] = v94;
    uint64_t v99 = sub_10096B7D0();
    uint64_t v100 = *(void *)(v99 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v92, v422, v99);
    *uint64_t v98 = v97;
    v98[1] = (void (*)(uint64_t))v96;
    unint64_t v101 = v417;
    uint64_t v102 = (char *)v417 + *(int *)(v428 + 64);
    long long v103 = (void (**)(uint64_t))((char *)v417 + *(int *)(v428 + 80));
    *uint64_t v417 = v93;
    v101[1] = v94;
    uint64_t TupleTypeMetadata = v428;
    (*(void (**)(char *, char **, uint64_t))(v100 + 16))(v102, v421, v99);
    *long long v103 = v97;
    v103[1] = (void (*)(uint64_t))v96;
    swift_retain();
    v97(v415);
    swift_release();
    (*(void (**)(char **, uint64_t))v412)(v91, TupleTypeMetadata);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v99);
    unint64_t v88 = (unint64_t)v423;
    uint64_t v89 = (char **)v419;
    if (v423) {
      goto LABEL_12;
    }
LABEL_14:
    int64_t v107 = v416 + 1;
    if (__OFADD__(v416, 1)) {
      break;
    }
    if (v107 < v409)
    {
      unint64_t v108 = *(void *)(v408 + 8 * v107);
      if (v108) {
        goto LABEL_17;
      }
      uint64_t v109 = v416 + 2;
      ++v416;
      if (v107 + 1 < v409)
      {
        unint64_t v108 = *(void *)(v408 + 8 * v109);
        if (v108) {
          goto LABEL_20;
        }
        uint64_t v416 = v107 + 1;
        if (v107 + 2 < v409)
        {
          unint64_t v108 = *(void *)(v408 + 8 * (v107 + 2));
          if (v108)
          {
            v107 += 2;
            goto LABEL_17;
          }
          uint64_t v109 = v107 + 3;
          uint64_t v416 = v107 + 2;
          if (v107 + 3 < v409)
          {
            unint64_t v108 = *(void *)(v408 + 8 * v109);
            if (!v108)
            {
              while (1)
              {
                int64_t v107 = v109 + 1;
                if (__OFADD__(v109, 1)) {
                  goto LABEL_196;
                }
                if (v107 >= v409)
                {
                  uint64_t v416 = v407;
                  goto LABEL_31;
                }
                unint64_t v108 = *(void *)(v408 + 8 * v107);
                ++v109;
                if (v108) {
                  goto LABEL_17;
                }
              }
            }
LABEL_20:
            int64_t v107 = v109;
LABEL_17:
            uint64_t v423 = (char *)((v108 - 1) & v108);
            unint64_t v104 = __clz(__rbit64(v108)) + (v107 << 6);
            uint64_t v416 = v107;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_31:
    int64_t v106 = (void (*)(char **, void, uint64_t, uint64_t))*v426;
    ((void (*)(char **, uint64_t, uint64_t, uint64_t))*v426)(v89, 1, 1, TupleTypeMetadata);
    uint64_t v423 = 0;
  }
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
}

uint64_t sub_1006DF600(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v188 = a2;
  uint64_t v187 = a1;
  uint64_t v4 = (void *)*v2;
  uint64_t v182 = sub_10096B480();
  uint64_t v213 = *(char **)(v182 - 8);
  __chkstk_darwin(v182);
  unint64_t v206 = (char *)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v4[72];
  uint64_t v7 = v4[73];
  uint64_t v8 = v4[74];
  uint64_t v9 = v4[75];
  *(void *)&long long v220 = v6;
  *((void *)&v220 + 1) = v7;
  *(void *)&long long v221 = v8;
  *((void *)&v221 + 1) = v9;
  *(void *)&long long v220 = type metadata accessor for UserRequest();
  *((void *)&v220 + 1) = &type metadata for NSecTimestamp;
  id WitnessTable = (id)sub_10096B7D0();
  *(void *)&long long v221 = WitnessTable;
  *((void *)&v221 + 1) = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v166 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v11 = __chkstk_darwin(TupleTypeMetadata);
  uint64_t v205 = (char *)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v181 = (char *)&v158 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  double v180 = (unint64_t *)((char *)&v158 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v204 = (unint64_t *)((char *)&v158 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v194 = (uint64_t *)((char *)&v158 - v20);
  uint64_t v159 = v21;
  __chkstk_darwin(v19);
  uint64_t v164 = (char *)&v158 - v22;
  uint64_t v197 = v23;
  uint64_t v185 = sub_10096C890();
  uint64_t v212 = *(char **)(v185 - 8);
  uint64_t v24 = __chkstk_darwin(v185);
  uint64_t v196 = (char *)&v158 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  unint64_t v195 = (uint64_t *)((char *)&v158 - v27);
  __chkstk_darwin(v26);
  id v184 = (unint64_t *)((char *)&v158 - v28);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v214 = *(char **)(AssociatedTypeWitness - 8);
  uint64_t v29 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v203 = (char *)&v158 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  unint64_t v165 = (char *)&v158 - v31;
  uint64_t v167 = v6;
  *(void *)&long long v220 = v6;
  *((void *)&v220 + 1) = v7;
  uint64_t v169 = v7;
  uint64_t v170 = v8;
  *(void *)&long long v221 = v8;
  *((void *)&v221 + 1) = v9;
  uint64_t v168 = v9;
  uint64_t v32 = type metadata accessor for ItemReconciliation();
  uint64_t v33 = sub_10096C890();
  uint64_t v210 = *(void *)(v33 - 8);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v158 - v35;
  uint64_t v211 = *(void (***)(char *, char *))(v32 - 8);
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v158 - v37;
  uint64_t v39 = sub_10096B830();
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v42 = (uint64_t *)((char *)&v158 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = (void *)v3[8];
  *uint64_t v42 = v43;
  (*(void (**)(void *, void, uint64_t))(v40 + 104))(v42, enum case for DispatchPredicate.onQueue(_:), v39);
  id v44 = v43;
  LOBYTE(v43) = sub_10096B860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v40 + 8))(v42, v39);
  if ((v43 & 1) == 0)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    return result;
  }
  uint64_t v46 = v188;
  if (!v188)
  {
    uint64_t v48 = v187;
    goto LABEL_9;
  }
  *(void *)&long long v216 = v188;
  swift_errorRetain();
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  sub_10002B7CC((uint64_t *)&unk_100ACECB0);
  int v47 = swift_dynamicCast();
  uint64_t v48 = v187;
  if (!v47 || !*((void *)&v221 + 1))
  {
    swift_errorRelease();
LABEL_9:
    uint64_t v50 = (void (**)(char *, char *))((char *)v3 + qword_100B0B328);
    swift_beginAccess();
    uint64_t v211 = v50;
    swift_bridgeObjectRetain();
    uint64_t v51 = v167;
    *(void *)&long long v220 = v167;
    *((void *)&v220 + 1) = v169;
    *(void *)&long long v221 = v170;
    *((void *)&v221 + 1) = v168;
    *(void *)&long long v220 = type metadata accessor for UserRequest();
    *((void *)&v220 + 1) = &type metadata for NSecTimestamp;
    *(void *)&long long v221 = WitnessTable;
    *((void *)&v221 + 1) = sub_100033BE8((uint64_t *)&unk_100ADA328);
    uint64_t v186 = swift_getTupleTypeMetadata();
    sub_10096C1C0();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_10096BAA0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v52 = v216;
    if (!(void)v216) {
      return result;
    }
    uint64_t v222 = (char **)v216;
    if (v46)
    {
      swift_bridgeObjectRetain();
LABEL_12:
      uint64_t v53 = v52;
      uint64_t v54 = v165;
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_10096C160();
      uint64_t v183 = v53;
      swift_bridgeObjectRelease();
      uint64_t v56 = sub_10096C160();
      swift_bridgeObjectRelease();
      if (v55 == v56)
      {
        (*((void (**)(char *, uint64_t, uint64_t))v214 + 2))(v54, v48, AssociatedTypeWitness);
        *(void *)&long long v216 = 0;
        swift_beginAccess();
        sub_10096BA80();
        sub_10096BAB0();
        swift_endAccess();
      }
      uint64_t v57 = v197;
      if (v46)
      {
        swift_getErrorValue();
        uint64_t v58 = Error.prettyDescription.getter(v219);
      }
      else
      {
        sub_100011348(0, &qword_100ACEC70);
        uint64_t v58 = (void *)sub_10096C860();
      }
      id WitnessTable = v58;
      uint64_t v62 = v196;
      uint64_t v63 = v183;
      uint64_t v193 = (void (**)(char *, long long *, uint64_t))(v166 + 16);
      uint64_t v192 = (uint64_t (**)(void *, char *, uint64_t))(v166 + 32);
      uint64_t v208 = (char **)(v166 + 56);
      BOOL v207 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v166 + 48);
      uint64_t v179 = (void (**)(char *, void *, uint64_t))(v212 + 32);
      uint64_t v191 = (void (**)(char *, uint64_t, uint64_t))(v214 + 16);
      Swift::String v190 = (void (**)(char *, uint64_t))(v166 + 8);
      uint64_t v178 = (void (**)(char *, uint64_t))(v214 + 8);
      uint64_t v177 = (void (**)(char *, uint64_t))(v213 + 8);
      swift_bridgeObjectRetain();
      uint64_t v64 = 0;
      *(void *)&long long v65 = 136315650;
      long long v162 = v65;
      uint64_t v161 = (char *)&type metadata for Any + 8;
      while (1)
      {
        if (v64 == sub_10096C1A0())
        {
          uint64_t v202 = v64;
          uint64_t v77 = *v208;
          ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))*v208)(v62, 1, 1, v57);
        }
        else
        {
          BOOL v78 = sub_10096C130();
          sub_10096C0E0();
          if (v78)
          {
            uint64_t v79 = v164;
            (*(void (**)(char *, unint64_t, uint64_t))(v166 + 16))(v164, v63+ ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80))+ *(void *)(v166 + 72) * v64, v57);
          }
          else
          {
            uint64_t result = sub_10096CC20();
            if (v159 != 8) {
              goto LABEL_53;
            }
            *(void *)&long long v220 = result;
            uint64_t v79 = v164;
            (*v193)(v164, &v220, v57);
            swift_unknownObjectRelease();
          }
          uint64_t result = (*v192)(v62, v79, v57);
          BOOL v80 = __OFADD__(v64, 1);
          uint64_t v81 = v64 + 1;
          if (v80)
          {
            __break(1u);
            goto LABEL_51;
          }
          uint64_t v202 = v81;
          uint64_t v77 = *v208;
          ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))*v208)(v62, 0, 1, v57);
        }
        uint64_t v82 = *v207;
        uint64_t v83 = 1;
        if ((*v207)(v62, 1, v57) != 1)
        {
          uint64_t v84 = *(int *)(v57 + 64);
          uint64_t v214 = v77;
          uint64_t v85 = (char *)v62 + v84;
          uint64_t v213 = (char *)*(int *)(v57 + 80);
          uint64_t v86 = v62[1];
          uint64_t v87 = v194;
          *uint64_t v194 = *v62;
          v87[1] = v86;
          unint64_t v88 = (char *)v87 + v84;
          uint64_t v212 = (char *)v87 + v84;
          uint64_t v89 = sub_10096B7D0();
          uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32);
          v90(v88, v85, v89);
          uint64_t v91 = swift_allocObject();
          uint64_t v92 = v212;
          *(_OWORD *)(v91 + 16) = *(_OWORD *)&v213[(void)v196];
          uint64_t v93 = v195;
          unint64_t v94 = (char *)v195 + *(int *)(v57 + 64);
          uint64_t v95 = (uint64_t (**)(uint64_t))((char *)v195 + *(int *)(v57 + 80));
          *unint64_t v195 = *v87;
          v93[1] = v86;
          v90(v94, v92, v89);
          uint64_t v83 = 0;
          char *v95 = sub_1006FB2C0;
          v95[1] = (uint64_t (*)(uint64_t))v91;
          uint64_t v77 = v214;
          uint64_t v57 = v197;
        }
        uint64_t v96 = v195;
        ((void (*)(void *, uint64_t, uint64_t, uint64_t))v77)(v195, v83, 1, v57);
        uint64_t v97 = v184;
        (*v179)((char *)v184, v96, v185);
        if (v82(v97, 1, v57) == 1)
        {

          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v98 = *(int *)(v57 + 64);
        uint64_t v99 = v204;
        uint64_t v100 = v57;
        unint64_t v101 = (char *)v204 + v98;
        unint64_t v103 = *v97;
        unint64_t v102 = v97[1];
        unint64_t v104 = (char *)v97 + v98;
        uint64_t v105 = *(int *)(v100 + 80);
        int64_t v106 = (char *)v97 + v105;
        int64_t v107 = *(char **)((char *)v97 + v105);
        unint64_t v108 = (char *)*((void *)v106 + 1);
        uint64_t v213 = v101;
        uint64_t v214 = v107;
        uint64_t v109 = (char **)((char *)v204 + v105);
        *uint64_t v204 = v103;
        v99[1] = v102;
        uint64_t v110 = sub_10096B7D0();
        uint64_t v111 = *(char **)(v110 - 8);
        (*((void (**)(char *, char *, uint64_t))v111 + 4))(v101, v104, v110);
        *uint64_t v109 = v107;
        v109[1] = v108;
        sub_1000CE628(v103);
        swift_retain();
        id v112 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v113 = v197;
        uint64_t v189 = *v191;
        v189(v203, v187, AssociatedTypeWitness);
        uint64_t v114 = v180;
        uint64_t v115 = (char *)v180 + *(int *)(v113 + 64);
        uint64_t v116 = (unint64_t *)((char *)v180 + *(int *)(v113 + 80));
        unint64_t *v180 = v103;
        v114[1] = v102;
        unint64_t v199 = v102;
        uint64_t v211 = (void (**)(char *, char *))v111;
        uint64_t v118 = (void (*)(void, void, void))(v111 + 16);
        uint64_t v117 = (void (*)(char *, char *, uint64_t))*((void *)v111 + 2);
        uint64_t v212 = (char *)v110;
        uint64_t v210 = (uint64_t)v117;
        v117(v115, v213, v110);
        *uint64_t v116 = v214;
        v116[1] = v108;
        uint64_t v119 = v181;
        (*v193)(v181, (long long *)v114, v113);
        (*v192)(v205, (char *)v114, v113);
        id v120 = WitnessTable;
        unint64_t v200 = v103;
        sub_1000CE628(v103);
        uint64_t v201 = v108;
        swift_retain();
        id v121 = v120;
        unint64_t v122 = sub_10096B470();
        os_log_type_t v123 = sub_10096C590();
        int v124 = v123;
        BOOL v125 = os_log_type_enabled(v122, v123);
        uint64_t v198 = (unint64_t)v190 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        if (v125)
        {
          uint64_t v126 = swift_slowAlloc();
          double v175 = (void *)swift_slowAlloc();
          uint64_t v176 = swift_slowAlloc();
          *(void *)&long long v220 = v176;
          *(_DWORD *)uint64_t v126 = v162;
          os_log_t v173 = v122;
          uint64_t v127 = v165;
          int v174 = v124;
          uint64_t v128 = v203;
          uint64_t v129 = AssociatedTypeWitness;
          v189(v165, (uint64_t)v203, AssociatedTypeWitness);
          id v172 = v121;
          uint64_t v189 = (void (*)(char *, uint64_t, uint64_t))v118;
          Swift::String v130 = *v178;
          (*v178)(v128, v129);
          uint64_t v131 = sub_10096D220();
          unint64_t v133 = v132;
          v130(v127, v129);
          uint64_t v134 = v212;
          *(void *)(v126 + 4) = sub_100719D44(v131, v133, (uint64_t *)&v220);
          swift_bridgeObjectRelease();
          *(_WORD *)(v126 + 12) = 2080;
          uint64_t v135 = *(int *)(v113 + 64);
          uint64_t v136 = v113;
          uint64_t v68 = v194;
          unint64_t v137 = (char *)v194 + v135;
          uint64_t v138 = *(int *)(v136 + 80);
          long long v171 = *v119;
          *(_OWORD *)uint64_t v194 = v171;
          ((void (*)(char *, char *, char *))v210)((char *)v68 + v135, (char *)v119 + v135, v134);
          *(_OWORD *)((char *)v68 + v138) = *(_OWORD *)((char *)v119 + v138);
          unint64_t v139 = v171;
          sub_1000CE628(v171);
          v211[1](v137, v134);
          unint64_t v140 = v119;
          uint64_t v67 = *v190;
          (*v190)((char *)v140, v136);
          unint64_t v141 = sub_1006A9894(v139, v167, v169, v170, v168);
          unint64_t v143 = v142;
          uint64_t v69 = v188;
          sub_1000B6C28(v139);
          *(void *)(v126 + 14) = sub_100719D44(v141, v143, (uint64_t *)&v220);
          swift_bridgeObjectRelease();
          v67(v205, v136);
          *(_WORD *)(v126 + 22) = 2112;
          uint64_t v144 = v172;
          *(void *)(v126 + 24) = v172;
          *double v175 = WitnessTable;

          os_log_t v145 = v173;
          _os_log_impl((void *)&_mh_execute_header, v173, (os_log_type_t)v174, "propagation <fs:%s reason:%s> completed: %@", (uint8_t *)v126, 0x20u);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v177)(v206, v182);
          uint64_t v57 = v136;
        }
        else
        {
          uint64_t v66 = v119;
          uint64_t v67 = *v190;
          (*v190)((char *)v66, v113);
          (*v178)(v203, AssociatedTypeWitness);
          v67(v205, v113);

          (*v177)(v206, v182);
          uint64_t v57 = v113;
          uint64_t v68 = v194;
          uint64_t v69 = v188;
        }
        uint64_t v70 = (char *)v68 + *(int *)(v57 + 64);
        uint64_t v71 = (unint64_t *)((char *)v68 + *(int *)(v57 + 80));
        unint64_t v72 = v200;
        unint64_t v73 = v199;
        *uint64_t v68 = v200;
        v68[1] = v73;
        uint64_t v74 = v212;
        ((void (*)(char *, char *, char *))v210)(v70, v213, v212);
        sub_1000B6C28(v72);
        int v75 = (void (*)(uint64_t))v214;
        uint64_t v76 = v201;
        *uint64_t v71 = v214;
        v71[1] = v76;
        v75(v69);
        swift_release();
        v67((char *)v204, v57);
        v211[1](v70, v74);
        uint64_t v62 = v196;
        uint64_t v63 = v183;
        uint64_t v64 = v202;
      }
    }
    *(void *)&long long v220 = v51;
    *((void *)&v220 + 1) = v169;
    *(void *)&long long v221 = v170;
    *((void *)&v221 + 1) = v168;
    type metadata accessor for ConcreteDatabase();
    swift_bridgeObjectRetain();
    uint64_t v59 = v160;
    uint64_t v60 = sub_1006E9030(v48, v3);
    if (v59) {
      return swift_bridgeObjectRelease_n();
    }
    if ((v60 & 1) == 0)
    {
      uint64_t v160 = 0;
      return swift_bridgeObjectRelease_n();
    }
    if (v61)
    {
      uint64_t v160 = 0;
      goto LABEL_12;
    }
    __chkstk_darwin(v60);
    uint64_t v146 = v169;
    *(&v158 - 6) = v167;
    *(&v158 - 5) = v146;
    uint64_t v147 = v168;
    *(&v158 - 4) = v170;
    *(&v158 - 3) = v147;
    *(&v158 - 2) = v148;
    swift_getWitnessTable();
    id WitnessTable = (id)swift_getWitnessTable();
    sub_10096BBC0();
    uint64_t v160 = 0;
    uint64_t v149 = v220;
    uint64_t result = (*((uint64_t (**)(void))v214 + 2))();
    if ((v149 & 0x8000000000000000) == 0)
    {
      uint64_t v208 = v222;
      *(void *)&long long v220 = sub_10096C200();
      *((void *)&v220 + 1) = v150;
      *(void *)&long long v221 = v151;
      *((void *)&v221 + 1) = v152;
      sub_10096CA20();
      uint64_t v210 = swift_getWitnessTable();
      *(void *)&long long v216 = sub_10096C1F0();
      swift_beginAccess();
      sub_10096BA80();
      sub_10096BAB0();
      swift_endAccess();
      *(void *)&long long v216 = v208;
      uint64_t v218 = v149;
      sub_10002B7CC(&qword_100ADA338);
      swift_getWitnessTable();
      sub_10096BBB0();
      long long v216 = v220;
      long long v217 = v221;
      uint64_t v53 = sub_10096C1F0();
      swift_bridgeObjectRelease();
      uint64_t v222 = (char **)v53;
      uint64_t v48 = v187;
      uint64_t v54 = v165;
      uint64_t v46 = v188;
      goto LABEL_13;
    }
    goto LABEL_52;
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = v160;
  sub_1000DEDD8(v48, (uint64_t)v36);
  if (v49) {
    return swift_errorRelease();
  }
  uint64_t v160 = 0;
  uint64_t v153 = v211;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v211[6])(v36, 1, v32) == 1)
  {
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v210 + 8))(v36, v33);
    goto LABEL_9;
  }
  ((void (*)(char *, char *, uint64_t))v153[4])(v38, v36, v32);
  uint64_t v154 = &v38[*(int *)(type metadata accessor for ItemReconciliationHalf() + 64)];
  uint64_t v155 = *(void *)v154;
  uint64_t v156 = *((void *)v154 + 1);
  int v157 = v154[16];
  sub_10009C5FC(*(void *)v154, v156, v154[16]);
  swift_errorRelease();
  v153[1](v38, (char *)v32);
  if (v157) {
    return sub_1000D31F8(v155, v156, v157);
  }
  uint64_t result = sub_1000D31F8(v155, v156, 0);
  if ((v155 & 0x100) != 0) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1006E0E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v194 = a2;
  uint64_t v193 = a1;
  uint64_t v4 = (void *)*v2;
  uint64_t v189 = sub_10096B480();
  long long v221 = *(char **)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v214 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v4[73];
  uint64_t v7 = v4[72];
  uint64_t v8 = v4[75];
  uint64_t v9 = v4[74];
  *(void *)&long long v228 = v6;
  *((void *)&v228 + 1) = v7;
  *(void *)&long long v229 = v8;
  *((void *)&v229 + 1) = v9;
  *(void *)&long long v228 = type metadata accessor for UserRequest();
  *((void *)&v228 + 1) = &type metadata for NSecTimestamp;
  id WitnessTable = (id)sub_10096B7D0();
  *(void *)&long long v229 = WitnessTable;
  *((void *)&v229 + 1) = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v174 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v11 = __chkstk_darwin(TupleTypeMetadata);
  uint64_t v213 = (char *)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v188 = (char *)&v166 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v187 = (unint64_t *)((char *)&v166 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v212 = (unint64_t *)((char *)&v166 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v202 = (unint64_t *)((char *)&v166 - v20);
  uint64_t v167 = v21;
  __chkstk_darwin(v19);
  id v172 = (char *)&v166 - v22;
  uint64_t v205 = v23;
  uint64_t v192 = sub_10096C890();
  long long v220 = *(char **)(v192 - 8);
  uint64_t v24 = __chkstk_darwin(v192);
  uint64_t v204 = (char *)&v166 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v203 = (uint64_t *)((char *)&v166 - v27);
  __chkstk_darwin(v26);
  uint64_t v191 = (unint64_t *)((char *)&v166 - v28);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v222 = *(void (***)(char *, uint64_t, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v29 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v211 = (char *)&v166 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  os_log_t v173 = (char *)&v166 - v31;
  uint64_t v175 = v6;
  *(void *)&long long v228 = v6;
  *((void *)&v228 + 1) = v7;
  uint64_t v177 = v7;
  uint64_t v178 = v8;
  *(void *)&long long v229 = v8;
  *((void *)&v229 + 1) = v9;
  uint64_t v176 = v9;
  uint64_t v32 = type metadata accessor for ItemReconciliation();
  uint64_t v33 = sub_10096C890();
  uint64_t v218 = *(void (***)(char *, uint64_t))(v33 - 8);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v166 - v35;
  uint64_t v219 = *(void (***)(char *, char *))(v32 - 8);
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v166 - v37;
  uint64_t v39 = sub_10096B830();
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v42 = (uint64_t *)((char *)&v166 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = (void *)v3[8];
  *uint64_t v42 = v43;
  (*(void (**)(void *, void, uint64_t))(v40 + 104))(v42, enum case for DispatchPredicate.onQueue(_:), v39);
  id v44 = v43;
  LOBYTE(v43) = sub_10096B860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v40 + 8))(v42, v39);
  if ((v43 & 1) == 0)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    return result;
  }
  if (!v194)
  {
    uint64_t v47 = v193;
    goto LABEL_9;
  }
  *(void *)&long long v224 = v194;
  swift_errorRetain();
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  sub_10002B7CC((uint64_t *)&unk_100ADA340);
  int v46 = swift_dynamicCast();
  uint64_t v47 = v193;
  if (!v46 || !(void)v228)
  {
    swift_errorRelease();
LABEL_9:
    uint64_t v49 = (void (**)(char *, char *))((char *)v3 + qword_100B0B320);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v50 = v175;
    *(void *)&long long v228 = v175;
    *((void *)&v228 + 1) = v177;
    *(void *)&long long v229 = v178;
    *((void *)&v229 + 1) = v176;
    *(void *)&long long v228 = type metadata accessor for UserRequest();
    *((void *)&v228 + 1) = &type metadata for NSecTimestamp;
    *(void *)&long long v229 = WitnessTable;
    *((void *)&v229 + 1) = sub_100033BE8((uint64_t *)&unk_100ADA328);
    uint64_t v206 = swift_getTupleTypeMetadata();
    sub_10096C1C0();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_10096BAA0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v51 = v224;
    if (!(void)v224) {
      return result;
    }
    uint64_t v230 = (void (***)(char *, uint64_t, uint64_t))v224;
    if (v194)
    {
      uint64_t v219 = v49;
      swift_bridgeObjectRetain();
      uint64_t v52 = v51;
LABEL_12:
      uint64_t v53 = v173;
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_10096C160();
      uint64_t v190 = v52;
      swift_bridgeObjectRelease();
      uint64_t v55 = sub_10096C160();
      swift_bridgeObjectRelease();
      uint64_t v56 = v222;
      if (v54 == v55)
      {
        v222[2](v53, v47, AssociatedTypeWitness);
        *(void *)&long long v224 = 0;
        swift_beginAccess();
        sub_10096BA80();
        sub_10096BAB0();
        swift_endAccess();
      }
      uint64_t v57 = v205;
      if (v194)
      {
        swift_getErrorValue();
        uint64_t v58 = Error.prettyDescription.getter(v227);
      }
      else
      {
        sub_100011348(0, &qword_100ACEC70);
        uint64_t v58 = (void *)sub_10096C860();
      }
      id WitnessTable = v58;
      uint64_t v74 = (unint64_t *)v204;
      uint64_t v75 = v190;
      uint64_t v201 = (void (**)(char *, long long *, uint64_t))(v174 + 16);
      unint64_t v200 = (uint64_t (**)(void *, char *, uint64_t))(v174 + 32);
      long long v216 = (void (***)(char *, uint64_t, uint64_t))(v174 + 56);
      uint64_t v215 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v174 + 48);
      uint64_t v186 = (void (**)(char *, void *, uint64_t))(v220 + 32);
      unint64_t v199 = v56 + 2;
      uint64_t v198 = (void (**)(char *, uint64_t))(v174 + 8);
      uint64_t v185 = (void (**)(char *, uint64_t))(v56 + 1);
      id v184 = (void (**)(char *, uint64_t))(v221 + 8);
      swift_bridgeObjectRetain();
      uint64_t v76 = 0;
      *(void *)&long long v77 = 136315650;
      long long v170 = v77;
      uint64_t v169 = (char *)&type metadata for Any + 8;
      while (1)
      {
        uint64_t v89 = sub_10096C1A0();
        id v90 = WitnessTable;
        if (v76 == v89)
        {
          uint64_t v210 = v76;
          uint64_t v91 = *v216;
          ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))*v216)(v74, 1, 1, v57);
        }
        else
        {
          BOOL v92 = sub_10096C130();
          sub_10096C0E0();
          if (v92)
          {
            uint64_t v93 = v172;
            (*(void (**)(char *, unint64_t, uint64_t))(v174 + 16))(v172, v75+ ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80))+ *(void *)(v174 + 72) * v76, v57);
          }
          else
          {
            uint64_t result = sub_10096CC20();
            if (v167 != 8) {
              goto LABEL_52;
            }
            *(void *)&long long v228 = result;
            uint64_t v93 = v172;
            (*v201)(v172, &v228, v57);
            swift_unknownObjectRelease();
          }
          uint64_t result = (*v200)(v74, v93, v57);
          BOOL v94 = __OFADD__(v76, 1);
          uint64_t v95 = v76 + 1;
          if (v94)
          {
            __break(1u);
            goto LABEL_50;
          }
          uint64_t v210 = v95;
          uint64_t v91 = *v216;
          ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))*v216)(v74, 0, 1, v57);
        }
        uint64_t v96 = *v215;
        uint64_t v97 = 1;
        if ((*v215)(v74, 1, v57) != 1)
        {
          uint64_t v98 = *(int *)(v57 + 64);
          uint64_t v222 = v91;
          uint64_t v99 = (char *)v74 + v98;
          long long v221 = (char *)*(int *)(v57 + 80);
          unint64_t v100 = v74[1];
          unint64_t v101 = v202;
          *uint64_t v202 = *v74;
          v101[1] = v100;
          unint64_t v102 = (char *)v101 + v98;
          long long v220 = (char *)v101 + v98;
          uint64_t v103 = sub_10096B7D0();
          unint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32);
          v104(v102, v99, v103);
          uint64_t v105 = swift_allocObject();
          int64_t v106 = v220;
          *(_OWORD *)(v105 + 16) = *(_OWORD *)&v221[(void)v204];
          int64_t v107 = v203;
          unint64_t v108 = (char *)v203 + *(int *)(v57 + 64);
          uint64_t v109 = (uint64_t (**)(uint64_t))((char *)v203 + *(int *)(v57 + 80));
          *uint64_t v203 = *v101;
          v107[1] = v100;
          v104(v108, v106, v103);
          uint64_t v97 = 0;
          *uint64_t v109 = sub_1006FB2C0;
          v109[1] = (uint64_t (*)(uint64_t))v105;
          uint64_t v91 = v222;
          id v90 = WitnessTable;
          uint64_t v57 = v205;
        }
        uint64_t v110 = v203;
        ((void (*)(void *, uint64_t, uint64_t, uint64_t))v91)(v203, v97, 1, v57);
        uint64_t v111 = v191;
        (*v186)((char *)v191, v110, v192);
        if (v96(v111, 1, v57) == 1)
        {

          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v112 = *(int *)(v57 + 64);
        uint64_t v113 = v212;
        uint64_t v114 = v57;
        uint64_t v115 = (char *)v212 + v112;
        id WitnessTable = v90;
        unint64_t v116 = *v111;
        unint64_t v117 = v111[1];
        uint64_t v118 = (char *)v111 + v112;
        uint64_t v119 = *(int *)(v114 + 80);
        id v120 = (char *)v111 + v119;
        id v121 = *(void (***)(char *, uint64_t, uint64_t))((char *)v111 + v119);
        unint64_t v122 = (void (**)(char *, uint64_t, uint64_t))*((void *)v120 + 1);
        long long v221 = v115;
        uint64_t v222 = v121;
        os_log_type_t v123 = (void (***)(char *, uint64_t, uint64_t))((char *)v212 + v119);
        *uint64_t v212 = v116;
        v113[1] = v117;
        uint64_t v124 = sub_10096B7D0();
        BOOL v125 = *(char **)(v124 - 8);
        (*((void (**)(char *, char *, uint64_t))v125 + 4))(v115, v118, v124);
        *os_log_type_t v123 = v121;
        v123[1] = v122;
        sub_1000CE628(v116);
        swift_retain();
        id v126 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v127 = v205;
        unint64_t v195 = *v199;
        v195(v211, v193, AssociatedTypeWitness);
        uint64_t v128 = v187;
        uint64_t v129 = (char *)v187 + *(int *)(v127 + 64);
        Swift::String v130 = (void (***)(char *, uint64_t, uint64_t))((char *)v187 + *(int *)(v127 + 80));
        unint64_t *v187 = v116;
        v128[1] = v117;
        unint64_t v207 = v117;
        uint64_t v219 = (void (**)(char *, char *))v125;
        unint64_t v132 = (void (**)(char *, uint64_t))*((void *)v125 + 2);
        uint64_t v131 = v125 + 16;
        long long v220 = (char *)v124;
        uint64_t v218 = v132;
        ((void (*)(char *, char *, uint64_t))v132)(v129, v221, v124);
        char *v130 = v222;
        v130[1] = v122;
        unint64_t v133 = v188;
        (*v201)(v188, (long long *)v128, v127);
        (*v200)(v213, (char *)v128, v127);
        id v134 = WitnessTable;
        unint64_t v208 = v116;
        sub_1000CE628(v116);
        uint64_t v209 = v122;
        swift_retain();
        id v135 = v134;
        uint64_t v136 = sub_10096B470();
        os_log_type_t v137 = sub_10096C590();
        int v196 = v137;
        BOOL v138 = os_log_type_enabled(v136, v137);
        uint64_t v139 = (unint64_t)v198 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        if (v138)
        {
          uint64_t v140 = swift_slowAlloc();
          uint64_t v197 = v131;
          uint64_t v141 = v140;
          uint64_t v182 = (void *)swift_slowAlloc();
          uint64_t v183 = swift_slowAlloc();
          *(void *)&long long v228 = v183;
          *(_DWORD *)uint64_t v141 = v170;
          os_log_t v181 = v136;
          unint64_t v142 = v173;
          unint64_t v143 = v211;
          uint64_t v144 = AssociatedTypeWitness;
          v195(v173, (uint64_t)v211, AssociatedTypeWitness);
          id v180 = v135;
          unint64_t v195 = (void (*)(char *, uint64_t, uint64_t))v139;
          os_log_t v145 = *v185;
          (*v185)(v143, v144);
          uint64_t v146 = sub_10096D220();
          unint64_t v148 = v147;
          v145(v142, v144);
          uint64_t v149 = v220;
          *(void *)(v141 + 4) = sub_100719D44(v146, v148, (uint64_t *)&v228);
          swift_bridgeObjectRelease();
          *(_WORD *)(v141 + 12) = 2080;
          uint64_t v150 = *(int *)(v127 + 64);
          uint64_t v151 = v127;
          BOOL v80 = v202;
          uint64_t v152 = (char *)v202 + v150;
          uint64_t v153 = *(int *)(v151 + 80);
          long long v179 = *(_OWORD *)v133;
          *(_OWORD *)uint64_t v202 = v179;
          ((void (*)(char *, char *, char *))v218)((char *)v80 + v150, &v133[v150], v149);
          *(_OWORD *)((char *)v80 + v153) = *(_OWORD *)&v133[v153];
          unint64_t v154 = v179;
          sub_1000CE628(v179);
          v219[1](v152, v149);
          uint64_t v155 = v133;
          uint64_t v79 = *v198;
          (*v198)(v155, v151);
          unint64_t v156 = sub_1006A9894(v154, v175, v177, v178, v176);
          unint64_t v158 = v157;
          uint64_t v81 = v194;
          sub_1000B6C28(v154);
          *(void *)(v141 + 14) = sub_100719D44(v156, v158, (uint64_t *)&v228);
          swift_bridgeObjectRelease();
          v79(v213, v151);
          *(_WORD *)(v141 + 22) = 2112;
          uint64_t v159 = v180;
          *(void *)(v141 + 24) = v180;
          *uint64_t v182 = WitnessTable;

          os_log_t v160 = v181;
          _os_log_impl((void *)&_mh_execute_header, v181, (os_log_type_t)v196, "propagation <fp:%s reason:%s> completed: %@", (uint8_t *)v141, 0x20u);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v184)(v214, v189);
          uint64_t v57 = v151;
        }
        else
        {
          BOOL v78 = v133;
          uint64_t v79 = *v198;
          (*v198)(v78, v127);
          (*v185)(v211, AssociatedTypeWitness);
          v79(v213, v127);

          (*v184)(v214, v189);
          uint64_t v57 = v127;
          BOOL v80 = v202;
          uint64_t v81 = v194;
        }
        uint64_t v82 = (char *)v80 + *(int *)(v57 + 64);
        uint64_t v83 = (void (***)(char *, uint64_t, uint64_t))((char *)v80 + *(int *)(v57 + 80));
        unint64_t v84 = v208;
        unint64_t v85 = v207;
        *BOOL v80 = v208;
        v80[1] = v85;
        uint64_t v86 = v220;
        ((void (*)(char *, char *, char *))v218)(v82, v221, v220);
        sub_1000B6C28(v84);
        uint64_t v87 = v222;
        unint64_t v88 = v209;
        *uint64_t v83 = v222;
        v83[1] = v88;
        ((void (*)(uint64_t))v87)(v81);
        swift_release();
        v79((char *)v212, v57);
        v219[1](v82, v86);
        uint64_t v74 = (unint64_t *)v204;
        uint64_t v75 = v190;
        uint64_t v76 = v210;
      }
    }
    *(void *)&long long v228 = v177;
    *((void *)&v228 + 1) = v50;
    *(void *)&long long v229 = v176;
    *((void *)&v229 + 1) = v178;
    type metadata accessor for ConcreteDatabase();
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1006CBFF8();
    uint64_t v60 = v168;
    char v61 = sub_1006E9030(v47, v59);
    uint64_t v63 = v62;
    char v65 = v64;
    uint64_t v66 = swift_release();
    uint64_t v168 = v60;
    if (v60 || (v61 & 1) == 0) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v219 = v49;
    if (v65)
    {
      uint64_t v52 = v51;
      uint64_t v47 = v193;
      goto LABEL_12;
    }
    __chkstk_darwin(v66);
    uint64_t v67 = v175;
    *(&v166 - 6) = v177;
    *(&v166 - 5) = v67;
    uint64_t v68 = v178;
    *(&v166 - 4) = v176;
    *(&v166 - 3) = v68;
    *(&v166 - 2) = v63;
    swift_getWitnessTable();
    id WitnessTable = (id)swift_getWitnessTable();
    uint64_t v69 = v168;
    sub_10096BBC0();
    uint64_t v168 = v69;
    uint64_t v70 = v228;
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v222[2])(v173, v193, AssociatedTypeWitness);
    if ((v70 & 0x8000000000000000) == 0)
    {
      long long v216 = v230;
      *(void *)&long long v228 = sub_10096C200();
      *((void *)&v228 + 1) = v71;
      *(void *)&long long v229 = v72;
      *((void *)&v229 + 1) = v73;
      sub_10096CA20();
      uint64_t v218 = (void (**)(char *, uint64_t))swift_getWitnessTable();
      *(void *)&long long v224 = sub_10096C1F0();
      swift_beginAccess();
      sub_10096BA80();
      uint64_t v53 = v173;
      sub_10096BAB0();
      swift_endAccess();
      *(void *)&long long v224 = v216;
      uint64_t v226 = v70;
      sub_10002B7CC(&qword_100ADA338);
      swift_getWitnessTable();
      sub_10096BBB0();
      long long v224 = v228;
      long long v225 = v229;
      uint64_t v52 = sub_10096C1F0();
      swift_bridgeObjectRelease();
      uint64_t v230 = (void (***)(char *, uint64_t, uint64_t))v52;
      uint64_t v47 = v193;
      goto LABEL_13;
    }
    goto LABEL_51;
  }

  swift_bridgeObjectRelease();
  uint64_t v48 = v168;
  sub_1000DF200(v47, (uint64_t)v36);
  if (v48) {
    return swift_errorRelease();
  }
  uint64_t v168 = 0;
  uint64_t v161 = v219;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v219[6])(v36, 1, v32) == 1)
  {
    swift_errorRelease();
    v218[1](v36, v33);
    goto LABEL_9;
  }
  ((void (*)(char *, char *, uint64_t))v161[4])(v38, v36, v32);
  long long v162 = &v38[*(int *)(type metadata accessor for ItemReconciliationHalf() + 64)];
  uint64_t v163 = *((void *)v162 + 1);
  int v164 = v162[16];
  uint64_t v218 = *(void (***)(char *, uint64_t))v162;
  sub_10009C5FC((uint64_t)v218, v163, v164);
  swift_errorRelease();
  v161[1](v38, (char *)v32);
  if (v164) {
    return sub_1000D31F8((uint64_t)v218, v163, v164);
  }
  __int16 v165 = (__int16)v218;
  uint64_t result = sub_1000D31F8((uint64_t)v218, v163, 0);
  if ((v165 & 0x100) != 0) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1006E26F0(uint64_t a1, int a2, void (*a3)(long long *), uint64_t a4)
{
  uint64_t v97 = a4;
  int64_t v107 = a3;
  LODWORD(v108) = a2;
  uint64_t v6 = (void *)*v4;
  uint64_t v94 = sub_10096B480();
  uint64_t v105 = *(NSObject **)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v103 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v6[74];
  uint64_t v9 = v6[72];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v109 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v98 = (char *)v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v86 = (char *)v78 - v13;
  uint64_t v14 = (char *)v4 + qword_100B0B338;
  swift_beginAccess();
  int64_t v106 = v14;
  swift_bridgeObjectRetain();
  uint64_t v15 = v6[73];
  uint64_t v16 = v6[75];
  uint64_t v17 = v8;
  *(void *)&long long v114 = v9;
  *((void *)&v114 + 1) = v15;
  *(void *)&long long v115 = v8;
  *((void *)&v115 + 1) = v16;
  *(void *)&long long v114 = type metadata accessor for UserRequest();
  *((void *)&v114 + 1) = &type metadata for JobCode;
  *(void *)&long long v115 = &type metadata for NSecTimestamp;
  *((void *)&v115 + 1) = sub_100033BE8((uint64_t *)&unk_100ADA328);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  sub_10096C1C0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = *(void **)(AssociatedConformanceWitness + 32);
  uint64_t v100 = a1;
  sub_10096BAA0();
  uint64_t result = swift_bridgeObjectRelease();
  if ((void)v111)
  {
    id v104 = v18;
    uint64_t v116 = v111;
    __chkstk_darwin(result);
    uint64_t v84 = v9;
    v78[-6] = v9;
    v78[-5] = v15;
    uint64_t v83 = v15;
    uint64_t v85 = v17;
    v78[-4] = v17;
    v78[-3] = v16;
    uint64_t v82 = v16;
    LOBYTE(v78[-2]) = v108;
    v78[-1] = v107;
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v21 = v78[0];
    sub_10096BBC0();
    uint64_t v22 = v114;
    uint64_t v23 = v109 + 16;
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 16);
    uint64_t result = v24(v86, v100, AssociatedTypeWitness);
    if (v22 < 0)
    {
LABEL_23:
      __break(1u);
      return result;
    }
    uint64_t v102 = v23;
    v78[0] = v21;
    int64_t v107 = (void (*)(long long *))WitnessTable;
    uint64_t v25 = v116;
    *(void *)&long long v114 = sub_10096C200();
    *((void *)&v114 + 1) = v26;
    *(void *)&long long v115 = v27;
    *((void *)&v115 + 1) = v28;
    sub_10096CA20();
    uint64_t v99 = AssociatedTypeWitness;
    swift_getWitnessTable();
    uint64_t v96 = (void (*)(char *, uint64_t, uint64_t))v24;
    *(void *)&long long v111 = sub_10096C1F0();
    swift_beginAccess();
    id v104 = (id)sub_10096BA80();
    sub_10096BAB0();
    swift_endAccess();
    *(void *)&long long v111 = v25;
    uint64_t v113 = v22;
    sub_10002B7CC(&qword_100ADA338);
    swift_getWitnessTable();
    sub_10096BBB0();
    long long v111 = v114;
    long long v112 = v115;
    uint64_t v29 = v99;
    uint64_t v30 = v96;
    uint64_t v31 = sub_10096C1F0();
    swift_bridgeObjectRelease();
    uint64_t v116 = v31;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_10096C160();
    swift_bridgeObjectRelease();
    if (v32 == v33)
    {
      v30(v86, v100, v29);
      *(void *)&long long v111 = 0;
      swift_beginAccess();
      sub_10096BAB0();
      swift_endAccess();
    }
    *(void *)&long long v114 = v84;
    *((void *)&v114 + 1) = v83;
    *(void *)&long long v115 = v85;
    *((void *)&v115 + 1) = v82;
    type metadata accessor for Job();
    uint64_t v34 = sub_1007B1CC0(v108);
    uint64_t v80 = (*(uint64_t (**)(void))(v34 + 176))();
    unint64_t v95 = v35;
    if (v97)
    {
      swift_getErrorValue();
      uint64_t v36 = (uint64_t)Error.prettyDescription.getter(v110);
    }
    else
    {
      sub_100011348(0, &qword_100ACEC70);
      uint64_t v36 = sub_10096C860();
    }
    uint64_t v37 = (void *)v36;
    uint64_t v38 = v109;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_10096C1A0();
    uint64_t v41 = v98;
    if (v39)
    {
      uint64_t v42 = 0;
      BOOL v92 = (void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v91 = (void (**)(char *, uint64_t))&v105[1];
      uint64_t v43 = (char **)(v31 + 64);
      *(void *)&long long v40 = 136315906;
      long long v79 = v40;
      v78[1] = (char *)&type metadata for Any + 8;
      uint64_t v93 = v31;
      id v90 = v37;
      while (1)
      {
        BOOL v47 = sub_10096C130();
        sub_10096C0E0();
        if (!v47) {
          break;
        }
        unint64_t v48 = (unint64_t)*(v43 - 4);
        uint64_t v50 = (void (*)(long long *))*(v43 - 1);
        uint64_t v49 = *v43;
        sub_1000CE628(v48);
        BOOL v51 = __OFADD__(v42, 1);
        uint64_t result = swift_retain();
        if (v51) {
          goto LABEL_22;
        }
        int64_t v107 = v50;
        uint64_t v108 = v42 + 1;
        uint64_t v109 = v42;
        int64_t v106 = v49;
        swift_retain();
        id v52 = (id)fpfs_current_or_default_log();
        uint64_t v53 = v103;
        sub_10096B490();
        uint64_t v54 = v99;
        uint64_t v55 = (void (*)(char *, char *, uint64_t))v96;
        v96(v41, v100, v99);
        uint64_t v56 = v37;
        unint64_t v57 = v95;
        swift_bridgeObjectRetain();
        sub_1000CE628(v48);
        id v58 = v56;
        uint64_t v59 = v41;
        id v60 = v58;
        swift_bridgeObjectRetain();
        sub_1000CE628(v48);
        id v104 = v60;
        char v61 = sub_10096B470();
        os_log_type_t v62 = sub_10096C5A0();
        uint64_t v63 = v54;
        int v64 = v62;
        uint64_t v105 = v61;
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v65 = swift_slowAlloc();
          int v88 = v64;
          uint64_t v66 = v65;
          uint64_t v87 = (void *)swift_slowAlloc();
          uint64_t v89 = swift_slowAlloc();
          *(void *)&long long v114 = v89;
          *(_DWORD *)uint64_t v66 = v79;
          swift_bridgeObjectRetain();
          *(void *)(v66 + 4) = sub_100719D44(v80, v57, (uint64_t *)&v114);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v66 + 12) = 2080;
          uint64_t v67 = v63;
          uint64_t v68 = v86;
          v55(v86, v59, v67);
          uint64_t v69 = *v92;
          (*v92)(v59, v67);
          uint64_t v70 = sub_10096D220();
          unint64_t v72 = v71;
          v69(v68, v67);
          uint64_t v45 = v97;
          *(void *)(v66 + 14) = sub_100719D44(v70, v72, (uint64_t *)&v114);
          swift_bridgeObjectRelease();
          *(_WORD *)(v66 + 22) = 2080;
          unint64_t v73 = sub_1006A9894(v48, v84, v83, v85, v82);
          unint64_t v75 = v74;
          sub_1000B6C28(v48);
          *(void *)(v66 + 24) = sub_100719D44(v73, v75, (uint64_t *)&v114);
          swift_bridgeObjectRelease();
          sub_1000B6C28(v48);
          *(_WORD *)(v66 + 32) = 2112;
          id v76 = v104;
          *(void *)(v66 + 34) = v104;
          uint64_t v37 = v90;
          *uint64_t v87 = v90;

          long long v77 = v105;
          _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v88, "%s <fs:%s reason:%s> completed: %@", (uint8_t *)v66, 0x2Au);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v91)(v103, v94);
        }
        else
        {
          sub_1000B6C28(v48);
          (*v92)(v59, v63);
          swift_bridgeObjectRelease_n();
          sub_1000B6C28(v48);

          id v44 = v104;
          (*v91)(v53, v94);
          uint64_t v37 = v90;
          uint64_t v45 = v97;
        }
        *(void *)&long long v114 = v45;
        v107(&v114);
        sub_1000B6C28(v48);
        swift_release_n();
        uint64_t v46 = sub_10096C1A0();
        uint64_t v42 = v109 + 1;
        v43 += 5;
        uint64_t v41 = v98;
        if (v108 == v46) {
          goto LABEL_19;
        }
      }
      uint64_t result = sub_10096CC20();
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_19:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1006E3348(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for FileTreeChangeAggregator();
  sub_1006D3A2C(a2, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1006E3404(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1006CBFF8();
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for FileTreeChangeAggregator();
  sub_1006D3A2C(a2, v3, v4);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1006E34D0(char a1, void *a2)
{
  uint64_t v3 = a1 & 1;
  BOOL v4 = (a1 & 1) == 0;
  uint64_t v54 = (void *)*a2;
  uint64_t v58 = sub_10096B0E0();
  uint64_t v55 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  unint64_t v57 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)v54[74];
  uint64_t v52 = v54[72];
  uint64_t v53 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v51 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v56 = (char *)&v46 - v8;
  uint64_t v59 = type metadata accessor for SyncState();
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B480();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((v4 ^ *((unsigned __int8 *)a2 + 122)) & 1) == 0)
  {
    uint64_t v50 = AssociatedTypeWitness;
    uint64_t v16 = v3;
    id v17 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v18 = sub_10096B470();
    os_log_type_t v19 = sub_10096C5D0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v48 = v21;
      BOOL v47 = v20;
      *(_DWORD *)uint64_t v20 = 136315138;
      v62[0] = v21;
      unsigned int v49 = v16;
      uint64_t v22 = (_BYTE)v16 ? 0xD000000000000019 : 0x676E696E6E7572;
      unint64_t v23 = (_BYTE)v16 ? 0x80000001009A4090 : 0xE700000000000000;
      uint64_t v46 = v20 + 4;
      uint64_t v61 = sub_100719D44(v22, v23, v62);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "changing scheduling state to %s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v24 = v49;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      uint64_t v24 = v16;
    }
    uint64_t v25 = a2[7];
    uint64_t ObjectType = swift_getObjectType();
    *uint64_t v10 = v24;
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = v60;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v25 + 8))(v10, ObjectType, v25);
    uint64_t result = sub_1006F7C48((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SyncState);
    uint64_t v60 = v27;
    if (!v27)
    {
      uint64_t v63 = a2;
      LOBYTE(v64) = v24;
      uint64_t v28 = sub_10026BFF4(a2, sub_1006F7DC4);
      if (*((unsigned char *)a2 + 122))
      {
        uint64_t v29 = v60;
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2[3] + 528))(v28);
        uint64_t v60 = v29;
        if (v29) {
          return result;
        }
        sub_1006CCB9C();
        goto LABEL_23;
      }
      sub_1006CCBA8();
      uint64_t v30 = v54[73];
      uint64_t v31 = v54[75];
      v62[0] = v52;
      v62[1] = v30;
      uint64_t v63 = v53;
      uint64_t v64 = v31;
      type metadata accessor for Maintenance.UnpauseReconciliations();
      sub_10085378C();
      uint64_t v32 = v57;
      sub_10096B0D0();
      sub_10096B080();
      double v34 = v33;
      unint64_t v35 = *(uint64_t (**)(char *, uint64_t))(v55 + 8);
      uint64_t result = v35(v32, v58);
      double v36 = v34 * 1000000000.0;
      if ((~COERCE__INT64(v34 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v36 > -9.22337204e18)
        {
          if (v36 < 9.22337204e18)
          {
            uint64_t v37 = v56;
            uint64_t v38 = sub_1003A9380(v56, 0x2000000000000000, (uint64_t)v36, 0);
            (*(void (**)(char *, uint64_t))(v51 + 8))(v37, v50);
            uint64_t v39 = v57;
            sub_10096B0D0();
            sub_10096B080();
            double v41 = v40;
            uint64_t result = v35(v39, v58);
            double v42 = v41 * 1000000000.0;
            if ((~COERCE__INT64(v41 * 1000000000.0) & 0x7FF0000000000000) != 0)
            {
              if (v42 > -9.22337204e18)
              {
                if (v42 < 9.22337204e18)
                {
                  uint64_t v43 = v60;
                  sub_10059C450(v38);
                  uint64_t result = swift_release();
                  uint64_t v60 = v43;
                  if (v43) {
                    return result;
                  }
LABEL_23:
                  id v44 = *(void (**)(uint64_t))(**(void **)(a2[4] + 16) + 856);
                  swift_retain();
                  v44(v24);
                  swift_release();
                  uint64_t v45 = *(void (**)(uint64_t))(**(void **)(a2[5] + 16) + 856);
                  swift_retain();
                  v45(v24);
                  return swift_release();
                }
LABEL_29:
                __break(1u);
                return result;
              }
LABEL_28:
              __break(1u);
              goto LABEL_29;
            }
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_26;
    }
  }
  return result;
}

uint64_t sub_1006E3C18(void *a1, uint64_t a2)
{
  uint64_t v413 = a1;
  uint64_t v331 = a2;
  uint64_t v2 = *(ValueMetadata **)(*(void *)a2 + 576);
  uint64_t v3 = *(ValueMetadata **)(*(void *)a2 + 584);
  uint64_t v4 = *(void *)(*(void *)a2 + 592);
  uint64_t v5 = *(ValueMetadata **)(*(void *)a2 + 600);
  uint64_t v431 = type metadata accessor for UserRequest();
  uint64_t v432 = &type metadata for NSecTimestamp;
  uint64_t v6 = sub_10096B7D0();
  uint64_t v433 = (ValueMetadata *)v6;
  uint64_t v434 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v372 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v8 = __chkstk_darwin(TupleTypeMetadata);
  uint64_t v389 = (uint64_t *)((char *)&v322 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v324 = v9;
  __chkstk_darwin(v8);
  uint64_t v371 = (char *)&v322 - v10;
  uint64_t v403 = v11;
  uint64_t v378 = sub_10096C890();
  uint64_t v328 = *(void *)(v378 - 8);
  uint64_t v12 = __chkstk_darwin(v378);
  uint64_t v400 = (uint64_t *)((char *)&v322 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v390 = (uint64_t *)((char *)&v322 - v15);
  __chkstk_darwin(v14);
  uint64_t v377 = (char *)&v322 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v431 = (uint64_t)v2;
  uint64_t v432 = v3;
  uint64_t v433 = (ValueMetadata *)v4;
  uint64_t v434 = (uint64_t)v5;
  uint64_t v431 = type metadata accessor for UserRequest();
  uint64_t v432 = &type metadata for JobCode;
  uint64_t v433 = &type metadata for NSecTimestamp;
  uint64_t v434 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  uint64_t v368 = swift_getTupleTypeMetadata();
  sub_10096C1C0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v334 = sub_10096C890();
  uint64_t v326 = *(void *)(v334 - 8);
  uint64_t v18 = __chkstk_darwin(v334);
  uint64_t v335 = (char *)&v322 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v333 = (char *)&v322 - v20;
  uint64_t v431 = (uint64_t)v3;
  uint64_t v432 = v2;
  uint64_t v433 = v5;
  uint64_t v434 = v4;
  uint64_t v431 = type metadata accessor for UserRequest();
  uint64_t v432 = &type metadata for NSecTimestamp;
  uint64_t v433 = (ValueMetadata *)v6;
  uint64_t v434 = sub_100033BE8(&qword_100AD9D00);
  uint64_t v21 = swift_getTupleTypeMetadata();
  uint64_t v374 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  int64_t v397 = (int64_t)&v322 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v325 = v23;
  __chkstk_darwin(v22);
  uint64_t v373 = (char *)&v322 - v24;
  *(void *)&long long v416 = v25;
  uint64_t v384 = sub_10096C890();
  uint64_t v330 = *(void *)(v384 - 8);
  uint64_t v26 = __chkstk_darwin(v384);
  uint64_t v404 = (char *)&v322 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v398 = (uint64_t *)((char *)&v322 - v29);
  __chkstk_darwin(v28);
  uint64_t v383 = (char *)&v322 - v30;
  uint64_t v388 = swift_getAssociatedTypeWitness();
  uint64_t v341 = *(void *)(v388 - 8);
  __chkstk_darwin(v388);
  unint64_t v386 = (char *)&v322 - v31;
  uint64_t v431 = (uint64_t)v2;
  uint64_t v432 = v3;
  uint64_t v433 = (ValueMetadata *)v4;
  uint64_t v434 = (uint64_t)v5;
  uint64_t v431 = type metadata accessor for UserRequest();
  uint64_t v432 = &type metadata for NSecTimestamp;
  uint64_t v360 = (ValueMetadata *)v6;
  uint64_t v433 = (ValueMetadata *)v6;
  uint64_t v434 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  uint64_t v411 = swift_getTupleTypeMetadata();
  sub_10096C1C0();
  uint64_t v32 = AssociatedTypeWitness;
  uint64_t v410 = AssociatedTypeWitness;
  uint64_t v342 = swift_getTupleTypeMetadata2();
  uint64_t v339 = sub_10096C890();
  uint64_t v327 = *(void *)(v339 - 8);
  uint64_t v33 = __chkstk_darwin(v339);
  uint64_t v340 = (char *)&v322 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v338 = (char *)&v322 - v35;
  uint64_t v431 = (uint64_t)v2;
  uint64_t v432 = v3;
  uint64_t v433 = (ValueMetadata *)v4;
  uint64_t v434 = (uint64_t)v5;
  uint64_t v431 = type metadata accessor for UserRequest();
  uint64_t v353 = (ValueMetadata *)sub_100011348(255, &qword_100AD62F0);
  uint64_t v432 = v353;
  uint64_t v433 = (ValueMetadata *)v6;
  uint64_t v434 = sub_100033BE8(&qword_100AD9D00);
  uint64_t v36 = swift_getTupleTypeMetadata();
  uint64_t v382 = *(void *)(v36 - 8);
  uint64_t v37 = __chkstk_darwin(v36);
  *(void *)&long long v406 = (char *)&v322 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v376 = (uint64_t *)((char *)&v322 - v39);
  uint64_t v394 = sub_10096C890();
  *(void *)&long long v407 = *(void *)(v394 - 8);
  uint64_t v40 = __chkstk_darwin(v394);
  int64_t v408 = (uint64_t *)((char *)&v322 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v402 = (char *)&v322 - v43;
  __chkstk_darwin(v42);
  uint64_t v45 = (unint64_t *)((char *)&v322 - v44);
  uint64_t v431 = (uint64_t)v2;
  uint64_t v432 = v3;
  uint64_t v433 = (ValueMetadata *)v4;
  uint64_t v434 = (uint64_t)v5;
  uint64_t v46 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v396 = (unsigned __int8 *)&v322 - v49;
  uint64_t v50 = *(void *)(v32 - 8);
  uint64_t v51 = __chkstk_darwin(v48);
  uint64_t v369 = (char *)&v322 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __chkstk_darwin(v51);
  int64_t v380 = (char *)&v322 - v54;
  __chkstk_darwin(v53);
  uint64_t v395 = (void (**)(void))((char *)&v322 - v55);
  uint64_t v415 = v3;
  uint64_t v431 = (uint64_t)v3;
  uint64_t v432 = v2;
  uint64_t v418 = v2;
  uint64_t v414 = (uint64_t)v5;
  uint64_t v433 = v5;
  uint64_t v434 = v4;
  uint64_t v417 = (ValueMetadata *)v4;
  uint64_t v431 = type metadata accessor for UserRequest();
  uint64_t v432 = &type metadata for NSecTimestamp;
  uint64_t v433 = v360;
  uint64_t v434 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  uint64_t v385 = swift_getTupleTypeMetadata();
  sub_10096C1C0();
  uint64_t v350 = swift_getTupleTypeMetadata2();
  uint64_t v346 = sub_10096C890();
  uint64_t v329 = *(void *)(v346 - 8);
  uint64_t v56 = __chkstk_darwin(v346);
  uint64_t v347 = (char *)&v322 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  Swift::String v345 = (char *)&v322 - v58;
  uint64_t v59 = (uint64_t *)v404;
  uint64_t v367 = (char *)v46;
  uint64_t v60 = swift_getTupleTypeMetadata2();
  uint64_t v357 = sub_10096C890();
  uint64_t v61 = *(void *)(v357 - 8);
  uint64_t v62 = __chkstk_darwin(v357);
  int64_t v358 = (char *)&v322 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v62);
  uint64_t v356 = (char *)&v322 - v64;
  uint64_t v65 = (uint64_t *)(v331 + qword_100B0B318);
  swift_beginAccess();
  uint64_t v66 = *v65;
  uint64_t v67 = *(void *)(*v65 + 64);
  uint64_t v332 = *v65 + 64;
  uint64_t v68 = 1 << *(unsigned char *)(v66 + 32);
  if (v68 < 64) {
    uint64_t v69 = ~(-1 << v68);
  }
  else {
    uint64_t v69 = -1;
  }
  unint64_t v70 = v69 & v67;
  uint64_t v359 = v60;
  uint64_t v355 = v60 - 8;
  uint64_t v361 = v50 + 16;
  uint64_t v343 = v47 + 16;
  int64_t v354 = (void (**)(void))(v61 + 32);
  unint64_t v71 = v408;
  uint64_t v366 = (void (**)(void, void, void))(v50 + 32);
  uint64_t v352 = (void (**)(unsigned __int8 *, char *, char *))(v47 + 32);
  *(void *)&long long v412 = v382 + 56;
  uint64_t v381 = v382 + 16;
  int64_t v409 = (void *)(v382 + 48);
  int64_t v393 = v407 + 32;
  uint64_t v391 = (void (**)(char *, char *, uint64_t))(v382 + 8);
  uint64_t v362 = v50;
  uint64_t v365 = (uint64_t (**)(void, void))(v50 + 8);
  uint64_t v344 = v47;
  unint64_t v351 = (uint64_t (**)(unsigned __int8 *, char *))(v47 + 8);
  int64_t v336 = (unint64_t)(v68 + 63) >> 6;
  int64_t v323 = v336 - 1;
  uint64_t v348 = v66;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v73 = 0;
  unint64_t v379 = 0x80000001009A3DA0;
  uint64_t v401 = v45;
LABEL_6:
  if (v70)
  {
    uint64_t v364 = (v70 - 1) & v70;
    int64_t v363 = v73;
    unint64_t v74 = __clz(__rbit64(v70)) | (v73 << 6);
    uint64_t v75 = v359;
    id v76 = v358;
LABEL_8:
    uint64_t v77 = v348;
    (*(void (**)(char *, unint64_t, uint64_t))(v362 + 16))(v76, *(void *)(v348 + 48) + *(void *)(v362 + 72) * v74, v410);
    (*(void (**)(char *, unint64_t, char *))(v344 + 16))(&v76[*(int *)(v75 + 48)], *(void *)(v77 + 56) + *(void *)(v344 + 72) * v74, v367);
    uint64_t v78 = 0;
    goto LABEL_15;
  }
  int64_t v79 = v73 + 1;
  uint64_t v75 = v359;
  id v76 = v358;
  if (__OFADD__(v73, 1)) {
    goto LABEL_222;
  }
  if (v79 >= v336)
  {
    int64_t v363 = v73;
    goto LABEL_14;
  }
  unint64_t v80 = *(void *)(v332 + 8 * v79);
  if (v80)
  {
LABEL_12:
    uint64_t v364 = (v80 - 1) & v80;
    unint64_t v74 = __clz(__rbit64(v80)) + (v79 << 6);
    int64_t v363 = v79;
    goto LABEL_8;
  }
  int64_t v133 = v73 + 2;
  if (v73 + 2 < v336)
  {
    unint64_t v80 = *(void *)(v332 + 8 * v133);
    if (v80)
    {
      int64_t v79 = v73 + 2;
      goto LABEL_12;
    }
    int64_t v134 = v73 + 3;
    if (v134 < v336)
    {
      unint64_t v80 = *(void *)(v332 + 8 * v134);
      if (v80)
      {
        int64_t v79 = v134;
        goto LABEL_12;
      }
      while (1)
      {
        int64_t v79 = v134 + 1;
        if (__OFADD__(v134, 1)) {
          goto LABEL_233;
        }
        if (v79 >= v336) {
          break;
        }
        unint64_t v80 = *(void *)(v332 + 8 * v79);
        ++v134;
        if (v80) {
          goto LABEL_12;
        }
      }
      uint64_t v364 = 0;
      uint64_t v78 = 1;
      int64_t v79 = v323;
      goto LABEL_57;
    }
    int64_t v363 = v133;
LABEL_14:
    uint64_t v364 = 0;
    uint64_t v78 = 1;
    goto LABEL_15;
  }
  uint64_t v364 = 0;
  uint64_t v78 = 1;
LABEL_57:
  int64_t v363 = v79;
LABEL_15:
  uint64_t v81 = *(void *)(v75 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v76, v78, 1, v75);
  uint64_t v82 = v356;
  (*v354)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v82, 1, v75) == 1)
  {
    swift_release();
    id v135 = (uint64_t *)(v331 + qword_100B0B320);
    swift_beginAccess();
    uint64_t v136 = *v135;
    uint64_t v137 = *(void *)(*v135 + 64);
    int64_t v375 = *v135 + 64;
    uint64_t v138 = 1 << *(unsigned char *)(v136 + 32);
    uint64_t v139 = -1;
    if (v138 < 64) {
      uint64_t v139 = ~(-1 << v138);
    }
    unint64_t v140 = v139 & v137;
    uint64_t v392 = v350 - 8;
    unint64_t v379 = v341 + 16;
    uint64_t v391 = (void (**)(char *, char *, uint64_t))(v329 + 32);
    uint64_t v387 = v341 + 32;
    uint64_t v396 = (unsigned __int8 *)(v374 + 16);
    uint64_t v395 = (void (**)(void))(v374 + 32);
    int64_t v409 = (void *)(v374 + 56);
    int64_t v408 = (uint64_t *)(v374 + 48);
    uint64_t v402 = (char *)(v330 + 32);
    uint64_t v401 = (unint64_t *)(v374 + 8);
    uint64_t v382 = v341 + 8;
    uint64_t v376 = (uint64_t *)((unint64_t)(v138 + 63) >> 6);
    uint64_t v367 = (char *)v376 - 1;
    uint64_t v381 = v136;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v393 = 0;
    unint64_t v370 = (unint64_t)"+ processing requests";
    uint64_t v399 = 0x80000001009A3D60;
    uint64_t v141 = v416;
    while (1)
    {
      unint64_t v142 = v347;
      if (v140) {
        break;
      }
      int64_t v149 = v393 + 1;
      if (__OFADD__(v393, 1)) {
        goto LABEL_223;
      }
      uint64_t v147 = v350;
      if (v149 < (uint64_t)v376)
      {
        unint64_t v150 = *(void *)(v375 + 8 * v149);
        if (v150) {
          goto LABEL_77;
        }
        int64_t v151 = v393 + 2;
        ++v393;
        if (v149 + 1 < (uint64_t)v376)
        {
          unint64_t v150 = *(void *)(v375 + 8 * v151);
          if (v150)
          {
            ++v149;
            goto LABEL_77;
          }
          int64_t v152 = v149 + 2;
          int64_t v393 = v149 + 1;
          if (v149 + 2 < (uint64_t)v376)
          {
            unint64_t v150 = *(void *)(v375 + 8 * v152);
            if (v150)
            {
              v149 += 2;
LABEL_77:
              uint64_t v144 = (v150 - 1) & v150;
              unint64_t v145 = __clz(__rbit64(v150)) + (v149 << 6);
              int64_t v393 = v149;
LABEL_73:
              uint64_t v146 = v381;
              (*(void (**)(char *, unint64_t, uint64_t))(v341 + 16))(v347, *(void *)(v381 + 48) + *(void *)(v341 + 72) * v145, v388);
              uint64_t v147 = v350;
              *(void *)&v142[*(int *)(v350 + 48)] = *(void *)(*(void *)(v146 + 56) + 8 * v145);
              uint64_t v148 = *(void *)(v147 - 8);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v142, 0, 1, v147);
              swift_bridgeObjectRetain();
              uint64_t v141 = v416;
              goto LABEL_90;
            }
            while (1)
            {
              int64_t v149 = v152 + 1;
              if (__OFADD__(v152, 1)) {
                goto LABEL_234;
              }
              if (v149 >= (uint64_t)v376) {
                break;
              }
              unint64_t v150 = *(void *)(v375 + 8 * v149);
              ++v152;
              if (v150) {
                goto LABEL_77;
              }
            }
            int64_t v393 = (int64_t)v367;
          }
        }
      }
      uint64_t v148 = *(void *)(v350 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v148 + 56))(v347, 1, 1, v350);
      uint64_t v144 = 0;
LABEL_90:
      uint64_t v153 = v345;
      (*v391)(v345, v142, v346);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v153, 1, v147) == 1)
      {
        swift_release();
        uint64_t v193 = (uint64_t *)(v331 + qword_100B0B328);
        swift_beginAccess();
        uint64_t v194 = *v193;
        uint64_t v195 = *(void *)(*v193 + 64);
        uint64_t v392 = *v193 + 64;
        uint64_t v196 = 1 << *(unsigned char *)(v194 + 32);
        uint64_t v197 = -1;
        if (v196 < 64) {
          uint64_t v197 = ~(-1 << v196);
        }
        unint64_t v198 = v197 & v195;
        uint64_t v396 = (unsigned __int8 *)(v342 - 8);
        uint64_t v395 = (void (**)(void))(v327 + 32);
        uint64_t v401 = (unint64_t *)(v372 + 16);
        uint64_t v399 = v372 + 32;
        *(void *)&long long v412 = v372 + 56;
        int64_t v409 = (void *)(v372 + 48);
        *(void *)&long long v405 = v328 + 32;
        uint64_t v404 = (char *)(v372 + 8);
        int64_t v393 = (unint64_t)(v196 + 63) >> 6;
        uint64_t v391 = (void (**)(char *, char *, uint64_t))(v393 - 1);
        uint64_t v394 = v194;
        uint64_t result = swift_bridgeObjectRetain();
        int64_t v397 = 0;
        uint64_t v402 = (char *)(v370 | 0x8000000000000000);
        while (1)
        {
          unint64_t v199 = v340;
          if (v198) {
            break;
          }
          int64_t v207 = v397 + 1;
          if (__OFADD__(v397, 1)) {
            goto LABEL_226;
          }
          uint64_t v206 = v400;
          uint64_t v204 = v342;
          if (v207 < v393)
          {
            unint64_t v208 = *(void *)(v392 + 8 * v207);
            if (v208) {
              goto LABEL_114;
            }
            uint64_t v209 = (char *)(v397 + 2);
            ++v397;
            if (v207 + 1 < v393)
            {
              unint64_t v208 = *(void *)(v392 + 8 * (void)v209);
              if (v208)
              {
                ++v207;
                goto LABEL_114;
              }
              int64_t v210 = v207 + 2;
              int64_t v397 = v207 + 1;
              if (v207 + 2 < v393)
              {
                unint64_t v208 = *(void *)(v392 + 8 * v210);
                if (v208)
                {
                  v207 += 2;
LABEL_114:
                  uint64_t v201 = (v208 - 1) & v208;
                  unint64_t v202 = __clz(__rbit64(v208)) + (v207 << 6);
                  int64_t v397 = v207;
LABEL_110:
                  uint64_t v203 = v394;
                  (*(void (**)(char *, unint64_t, uint64_t))(v362 + 16))(v340, *(void *)(v394 + 48) + *(void *)(v362 + 72) * v202, v410);
                  uint64_t v204 = v342;
                  *(void *)&v199[*(int *)(v342 + 48)] = *(void *)(*(void *)(v203 + 56) + 8 * v202);
                  uint64_t v205 = *(void *)(v204 - 8);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v205 + 56))(v199, 0, 1, v204);
                  swift_bridgeObjectRetain();
                  uint64_t v206 = v400;
                  goto LABEL_127;
                }
                while (1)
                {
                  int64_t v207 = v210 + 1;
                  if (__OFADD__(v210, 1)) {
                    goto LABEL_235;
                  }
                  if (v207 >= v393) {
                    break;
                  }
                  unint64_t v208 = *(void *)(v392 + 8 * v207);
                  ++v210;
                  if (v208) {
                    goto LABEL_114;
                  }
                }
                int64_t v397 = (int64_t)v391;
              }
            }
          }
          uint64_t v205 = *(void *)(v342 - 8);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v205 + 56))(v340, 1, 1, v342);
          uint64_t v201 = 0;
LABEL_127:
          uint64_t v211 = v338;
          (*v395)();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48))(v211, 1, v204) == 1)
          {
            swift_release();
            uint64_t v252 = (uint64_t *)(v331 + qword_100B0B338);
            swift_beginAccess();
            uint64_t v253 = *v252;
            uint64_t v254 = *(void *)(*v252 + 64);
            uint64_t v399 = *v252 + 64;
            uint64_t v255 = 1 << *(unsigned char *)(v253 + 32);
            uint64_t v256 = -1;
            if (v255 < 64) {
              uint64_t v256 = ~(-1 << v255);
            }
            unint64_t v257 = v256 & v254;
            uint64_t v258 = TupleTypeMetadata2;
            uint64_t v402 = (char *)(TupleTypeMetadata2 - 8);
            uint64_t v403 = v326 + 32;
            uint64_t v400 = (void *)((unint64_t)(v255 + 63) >> 6);
            uint64_t v398 = (void *)((char *)v400 - 1);
            uint64_t v401 = (unint64_t *)v253;
            uint64_t result = swift_bridgeObjectRetain();
            uint64_t v259 = 0;
            while (1)
            {
              uint64_t v260 = v335;
              if (v257)
              {
                unint64_t v261 = __clz(__rbit64(v257));
                v257 &= v257 - 1;
                unint64_t v262 = v261 | (v259 << 6);
              }
              else
              {
                uint64_t v266 = v259 + 1;
                if (__OFADD__(v259, 1)) {
                  goto LABEL_230;
                }
                if (v266 >= (uint64_t)v400) {
                  goto LABEL_164;
                }
                unint64_t v267 = *(void *)(v399 + 8 * v266);
                if (!v267)
                {
                  uint64_t v268 = v259 + 2;
                  ++v259;
                  if (v266 + 1 >= (uint64_t)v400) {
                    goto LABEL_164;
                  }
                  unint64_t v267 = *(void *)(v399 + 8 * v268);
                  if (v267)
                  {
                    ++v266;
                  }
                  else
                  {
                    uint64_t v269 = v266 + 2;
                    uint64_t v259 = v266 + 1;
                    if (v266 + 2 >= (uint64_t)v400) {
                      goto LABEL_164;
                    }
                    unint64_t v267 = *(void *)(v399 + 8 * v269);
                    if (!v267)
                    {
                      while (1)
                      {
                        uint64_t v266 = v269 + 1;
                        if (__OFADD__(v269, 1)) {
                          goto LABEL_236;
                        }
                        if (v266 >= (uint64_t)v400) {
                          break;
                        }
                        unint64_t v267 = *(void *)(v399 + 8 * v266);
                        ++v269;
                        if (v267) {
                          goto LABEL_152;
                        }
                      }
                      uint64_t v259 = (uint64_t)v398;
LABEL_164:
                      uint64_t v265 = *(void *)(v258 - 8);
                      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v265 + 56))(v335, 1, 1, v258);
                      unint64_t v257 = 0;
                      goto LABEL_165;
                    }
                    v266 += 2;
                  }
                }
LABEL_152:
                unint64_t v257 = (v267 - 1) & v267;
                unint64_t v262 = __clz(__rbit64(v267)) + (v266 << 6);
                uint64_t v259 = v266;
              }
              uint64_t v263 = v401;
              (*(void (**)(char *, unint64_t, uint64_t))(v362 + 16))(v335, v401[6] + *(void *)(v362 + 72) * v262, v410);
              uint64_t v264 = TupleTypeMetadata2;
              *(void *)&v260[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)(v263[7] + 8 * v262);
              uint64_t v265 = *(void *)(v264 - 8);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v265 + 56))(v260, 0, 1, v264);
              uint64_t v258 = v264;
              swift_bridgeObjectRetain();
LABEL_165:
              uint64_t v270 = v333;
              (*(void (**)(char *, char *, uint64_t))v403)(v333, v260, v334);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48))(v270, 1, v258) == 1)
              {
                swift_release();
                uint64_t v283 = (uint64_t *)(v331 + qword_100B0B330);
                swift_beginAccess();
                uint64_t v284 = *v283;
                swift_bridgeObjectRetain();
                uint64_t v431 = (uint64_t)v418;
                uint64_t v432 = v415;
                uint64_t v433 = v417;
                uint64_t v434 = v414;
                uint64_t v285 = type metadata accessor for UserRequest();
                sub_100033BE8((uint64_t *)&unk_100ADA328);
                uint64_t v418 = (ValueMetadata *)v285;
                swift_getTupleTypeMetadata2();
                if (!sub_10096C1A0())
                {
LABEL_180:
                  swift_bridgeObjectRelease();
                  uint64_t v292 = (uint64_t *)(v331 + qword_100B0B340);
                  swift_beginAccess();
                  uint64_t v293 = *v292;
                  uint64_t v294 = *(void *)(*v292 + 56);
                  uint64_t v417 = (ValueMetadata *)(*v292 + 56);
                  uint64_t v295 = 1 << *(unsigned char *)(v293 + 32);
                  uint64_t v296 = -1;
                  if (v295 < 64) {
                    uint64_t v296 = ~(-1 << v295);
                  }
                  unint64_t v297 = v296 & v294;
                  *(void *)&long long v416 = (unint64_t)(v295 + 63) >> 6;
                  uint64_t result = swift_bridgeObjectRetain();
                  uint64_t v298 = 0;
                  while (1)
                  {
                    if (v297)
                    {
                      unint64_t v299 = __clz(__rbit64(v297));
                      v297 &= v297 - 1;
                      unint64_t v300 = v299 | (v298 << 6);
                    }
                    else
                    {
                      uint64_t v304 = v298 + 1;
                      if (__OFADD__(v298, 1)) {
                        goto LABEL_228;
                      }
                      if (v304 >= (uint64_t)v416) {
                        goto LABEL_198;
                      }
                      unint64_t v305 = *(&v417->Kind + v304);
                      ++v298;
                      if (!v305)
                      {
                        uint64_t v298 = v304 + 1;
                        if (v304 + 1 >= (uint64_t)v416) {
                          goto LABEL_198;
                        }
                        unint64_t v305 = *(&v417->Kind + v298);
                        if (!v305)
                        {
                          uint64_t v306 = v304 + 2;
                          if (v306 >= (uint64_t)v416) {
                            goto LABEL_198;
                          }
                          unint64_t v305 = *(&v417->Kind + v306);
                          if (!v305)
                          {
                            while (1)
                            {
                              uint64_t v298 = v306 + 1;
                              if (__OFADD__(v306, 1)) {
                                goto LABEL_231;
                              }
                              if (v298 >= (uint64_t)v416) {
                                break;
                              }
                              unint64_t v305 = *(&v417->Kind + v298);
                              ++v306;
                              if (v305) {
                                goto LABEL_197;
                              }
                            }
LABEL_198:
                            swift_release();
                            uint64_t v307 = (uint64_t *)(v331 + qword_100B0B348);
                            swift_beginAccess();
                            uint64_t v308 = *v307;
                            uint64_t v309 = *(void *)(*v307 + 56);
                            uint64_t v417 = (ValueMetadata *)(*v307 + 56);
                            uint64_t v310 = 1 << *(unsigned char *)(v308 + 32);
                            uint64_t v311 = -1;
                            if (v310 < 64) {
                              uint64_t v311 = ~(-1 << v310);
                            }
                            unint64_t v312 = v311 & v309;
                            *(void *)&long long v416 = (unint64_t)(v310 + 63) >> 6;
                            uint64_t result = swift_bridgeObjectRetain();
                            uint64_t v313 = 0;
                            while (1)
                            {
                              if (v312)
                              {
                                unint64_t v314 = __clz(__rbit64(v312));
                                v312 &= v312 - 1;
                                unint64_t v315 = v314 | (v313 << 6);
                              }
                              else
                              {
                                uint64_t v319 = v313 + 1;
                                if (__OFADD__(v313, 1)) {
                                  goto LABEL_229;
                                }
                                if (v319 >= (uint64_t)v416) {
                                  return swift_release();
                                }
                                unint64_t v320 = *(&v417->Kind + v319);
                                ++v313;
                                if (!v320)
                                {
                                  uint64_t v313 = v319 + 1;
                                  if (v319 + 1 >= (uint64_t)v416) {
                                    return swift_release();
                                  }
                                  unint64_t v320 = *(&v417->Kind + v313);
                                  if (!v320)
                                  {
                                    uint64_t v321 = v319 + 2;
                                    if (v321 >= (uint64_t)v416) {
                                      return swift_release();
                                    }
                                    unint64_t v320 = *(&v417->Kind + v321);
                                    if (!v320)
                                    {
                                      while (1)
                                      {
                                        uint64_t v313 = v321 + 1;
                                        if (__OFADD__(v321, 1)) {
                                          goto LABEL_232;
                                        }
                                        if (v313 >= (uint64_t)v416) {
                                          return swift_release();
                                        }
                                        unint64_t v320 = *(&v417->Kind + v313);
                                        ++v321;
                                        if (v320) {
                                          goto LABEL_215;
                                        }
                                      }
                                    }
                                    uint64_t v313 = v321;
                                  }
                                }
LABEL_215:
                                unint64_t v312 = (v320 - 1) & v320;
                                unint64_t v315 = __clz(__rbit64(v320)) + (v313 << 6);
                              }
                              unint64_t v316 = *(void *)(*(void *)(v308 + 48) + 8 * v315);
                              uint64_t v317 = v413[3];
                              uint64_t v318 = v413[4];
                              sub_10002689C(v413, v317);
                              unint64_t v419 = 0;
                              uint64_t v420 = (void *)0xE000000000000000;
                              sub_1000CE628(v316);
                              sub_10096CBD0(17);
                              v445._uint64_t countAndFlagsBits = 0x6972726162205046;
                              v445._object = (void *)0xEF20726F66207265;
                              sub_10096BDC0(v445);
                              unint64_t v435 = v316;
                              swift_getWitnessTable();
                              sub_10096D270();
                              sub_10059A0E8(v419, v420, v317, v318);
                              swift_bridgeObjectRelease();
                              uint64_t result = sub_1000B6C28(v316);
                            }
                          }
                          uint64_t v298 = v306;
                        }
                      }
LABEL_197:
                      unint64_t v297 = (v305 - 1) & v305;
                      unint64_t v300 = __clz(__rbit64(v305)) + (v298 << 6);
                    }
                    unint64_t v301 = *(void *)(*(void *)(v293 + 48) + 8 * v300);
                    uint64_t v302 = v413[3];
                    uint64_t v303 = v413[4];
                    sub_10002689C(v413, v302);
                    unint64_t v421 = 0;
                    uint64_t v422 = (void *)0xE000000000000000;
                    sub_1000CE628(v301);
                    sub_10096CBD0(17);
                    v444._uint64_t countAndFlagsBits = 0x6972726162205346;
                    v444._object = (void *)0xEF20726F66207265;
                    sub_10096BDC0(v444);
                    unint64_t v419 = v301;
                    swift_getWitnessTable();
                    sub_10096D270();
                    sub_10059A0E8(v421, v422, v302, v303);
                    swift_bridgeObjectRelease();
                    uint64_t result = sub_1000B6C28(v301);
                  }
                }
                uint64_t v286 = 0;
                uint64_t v287 = 32;
                uint64_t v415 = (ValueMetadata *)0x80000001009A3D80;
                *(void *)&long long v416 = v284;
                while (1)
                {
                  BOOL v288 = sub_10096C130();
                  sub_10096C0E0();
                  if (!v288) {
                    goto LABEL_224;
                  }
                  unint64_t v289 = *(void *)(v284 + v287);
                  uint64_t result = sub_1000CE628(v289);
                  uint64_t v290 = v286 + 1;
                  if (__OFADD__(v286, 1)) {
                    goto LABEL_225;
                  }
                  uint64_t v291 = v413[3];
                  uint64_t v417 = (ValueMetadata *)v413[4];
                  sub_10002689C(v413, v291);
                  uint64_t v431 = 0;
                  uint64_t v432 = (ValueMetadata *)0xE000000000000000;
                  sub_10096CBD0(20);
                  v443._uint64_t countAndFlagsBits = 0xD000000000000012;
                  v443._object = v415;
                  sub_10096BDC0(v443);
                  unint64_t v421 = v289;
                  swift_getWitnessTable();
                  sub_10096D270();
                  uint64_t v284 = v416;
                  sub_10059A0E8(v431, v432, v291, (uint64_t)v417);
                  swift_bridgeObjectRelease();
                  sub_1000B6C28(v289);
                  ++v286;
                  v287 += 24;
                  if (v290 == sub_10096C1A0()) {
                    goto LABEL_180;
                  }
                }
              }
              uint64_t v271 = *(void *)&v270[*(int *)(v258 + 48)];
              (*v366)(v369, v270, v410);
              if (!sub_10096C1A0())
              {
                swift_bridgeObjectRelease();
                goto LABEL_145;
              }
              uint64_t v404 = (char *)v257;
              *(void *)&long long v405 = v259;
              uint64_t v431 = (uint64_t)v418;
              uint64_t v432 = v415;
              uint64_t v433 = v417;
              uint64_t v434 = v414;
              *(void *)&long long v406 = type metadata accessor for Job();
              uint64_t v272 = 0;
              uint64_t v273 = v271 + 64;
              *(void *)&long long v407 = v271;
              do
              {
                BOOL v274 = sub_10096C130();
                sub_10096C0E0();
                if (!v274) {
                  goto LABEL_220;
                }
                unint64_t v275 = *(void *)(v273 - 32);
                char v276 = *(unsigned char *)(v273 - 24);
                sub_1000CE628(v275);
                BOOL v277 = __OFADD__(v272, 1);
                swift_retain();
                if (v277)
                {
LABEL_221:
                  __break(1u);
LABEL_222:
                  __break(1u);
LABEL_223:
                  __break(1u);
LABEL_224:
                  uint64_t result = sub_10096CC20();
                  __break(1u);
LABEL_225:
                  __break(1u);
LABEL_226:
                  __break(1u);
                  goto LABEL_227;
                }
                *(void *)&long long v416 = v272 + 1;
                uint64_t v278 = sub_1007B1CC0(v276);
                int64_t v408 = (uint64_t *)(*(uint64_t (**)(void))(v278 + 176))();
                uint64_t v280 = v279;
                uint64_t v411 = v413[3];
                *(void *)&long long v412 = v413[4];
                int64_t v409 = sub_10002689C(v413, v411);
                uint64_t v423 = 0;
                unint64_t v424 = (void *)0xE000000000000000;
                uint64_t v281 = (uint64_t)v417;
                uint64_t v282 = (uint64_t)v418;
                swift_getAssociatedConformanceWitness();
                sub_10096D270();
                v440._uint64_t countAndFlagsBits = 8250;
                v440._object = (void *)0xE200000000000000;
                sub_10096BDC0(v440);
                v441._uint64_t countAndFlagsBits = (uint64_t)v408;
                v441._object = v280;
                sub_10096BDC0(v441);
                swift_bridgeObjectRelease();
                v442._uint64_t countAndFlagsBits = 0x20726F6620;
                v442._object = (void *)0xE500000000000000;
                sub_10096BDC0(v442);
                unint64_t v421 = v275;
                uint64_t v431 = v282;
                uint64_t v432 = v415;
                uint64_t v433 = (ValueMetadata *)v281;
                uint64_t v434 = v414;
                type metadata accessor for UserRequest();
                swift_getWitnessTable();
                sub_10096D270();
                sub_10059A0E8(v423, v424, v411, v412);
                swift_bridgeObjectRelease();
                sub_1000B6C28(v275);
                swift_release();
                ++v272;
                v273 += 40;
              }
              while ((void)v416 != sub_10096C1A0());
              swift_bridgeObjectRelease();
              uint64_t v258 = TupleTypeMetadata2;
              uint64_t v259 = v405;
              unint64_t v257 = (unint64_t)v404;
LABEL_145:
              uint64_t result = (*v365)(v369, v410);
            }
          }
          uint64_t v398 = (void *)v201;
          uint64_t v212 = *(void *)&v211[*(int *)(v204 + 48)];
          (*v366)(v380, v211, v410);
          uint64_t v213 = 0;
          uint64_t v214 = v403;
          *(void *)&long long v406 = v212;
          while (1)
          {
            if (v213 == (uint64_t *)sub_10096C1A0())
            {
              int64_t v408 = v213;
              uint64_t v215 = *(void (**)(void, void, void, void))v412;
              (*(void (**)(void *, uint64_t, uint64_t, uint64_t))v412)(v206, 1, 1, v214);
              long long v216 = v206;
            }
            else
            {
              BOOL v217 = sub_10096C130();
              sub_10096C0E0();
              if (v217)
              {
                uint64_t v218 = v371;
                (*(void (**)(char *, unint64_t, uint64_t))(v372 + 16))(v371, v212+ ((*(unsigned __int8 *)(v372 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v372 + 80))+ *(void *)(v372 + 72) * (void)v213, v214);
              }
              else
              {
                uint64_t result = sub_10096CC20();
                if (v324 != 8) {
                  goto LABEL_238;
                }
                uint64_t v431 = result;
                unint64_t v251 = v371;
                ((void (*)(char *, uint64_t *, uint64_t))*v401)(v371, &v431, v214);
                uint64_t v218 = v251;
                swift_unknownObjectRelease();
              }
              long long v216 = v400;
              (*(void (**)(void *, char *, uint64_t))v399)(v400, v218, v214);
              BOOL v160 = __OFADD__(v213, 1);
              uint64_t v219 = (uint64_t *)((char *)v213 + 1);
              if (v160)
              {
LABEL_219:
                __break(1u);
LABEL_220:
                sub_10096CC20();
                __break(1u);
                goto LABEL_221;
              }
              int64_t v408 = v219;
              uint64_t v215 = *(void (**)(void, void, void, void))v412;
              (*(void (**)(void *, void, uint64_t, uint64_t))v412)(v216, 0, 1, v214);
            }
            long long v220 = (unsigned int (*)(void *, uint64_t, uint64_t))*v409;
            uint64_t v221 = 1;
            if (((unsigned int (*)(void *, uint64_t, uint64_t))*v409)(v216, 1, v214) != 1)
            {
              uint64_t v222 = *(int *)(v214 + 64);
              uint64_t v223 = v400;
              *(void *)&long long v416 = v215;
              long long v224 = (char *)v400 + v222;
              *(void *)&long long v407 = *(int *)(v214 + 80);
              uint64_t v225 = v400[1];
              uint64_t v226 = v389;
              *uint64_t v389 = *v400;
              v226[1] = v225;
              uint64_t v227 = (char *)v226 + v222;
              uint64_t v228 = sub_10096B7D0();
              long long v229 = *(void (**)(void, void, void))(*(void *)(v228 - 8) + 32);
              v229(v227, v224, v228);
              uint64_t v230 = swift_allocObject();
              *(_OWORD *)(v230 + 16) = *(_OWORD *)((char *)v223 + v407);
              uint64_t v231 = *v226;
              unint64_t v232 = v390;
              int64_t v233 = (char *)v390 + *(int *)(v403 + 64);
              int64_t v234 = (uint64_t (**)(uint64_t))((char *)v390 + *(int *)(v403 + 80));
              *uint64_t v390 = v231;
              v232[1] = v225;
              uint64_t v235 = v227;
              uint64_t v214 = v403;
              v229(v233, v235, v228);
              uint64_t v221 = 0;
              char *v234 = sub_1006FB2C0;
              v234[1] = (uint64_t (*)(uint64_t))v230;
              uint64_t v215 = (void (*)(void, void, void, void))v416;
            }
            unint64_t v236 = v390;
            v215(v390, v221, 1, v214);
            uint64_t v237 = (long long *)v377;
            (*(void (**)(char *, void *, uint64_t))v405)(v377, v236, v378);
            if (v220(v237, 1, v214) == 1) {
              break;
            }
            uint64_t v238 = *(int *)(v214 + 64);
            uint64_t v239 = v237;
            uint64_t v240 = (char *)v237 + v238;
            uint64_t v241 = *(int *)(v214 + 80);
            uint64_t v242 = v389;
            unint64_t v243 = (char *)v389 + v238;
            long long v416 = *v239;
            *(_OWORD *)uint64_t v389 = v416;
            uint64_t v244 = sub_10096B7D0();
            uint64_t v245 = *(void (**)(void, void, void))(*(void *)(v244 - 8) + 32);
            long long v407 = *(long long *)((char *)v239 + v241);
            v245(v243, v240, v244);
            *(_OWORD *)((char *)v242 + v241) = v407;
            uint64_t v247 = v413[3];
            uint64_t v246 = v413[4];
            sub_10002689C(v413, v247);
            uint64_t v431 = 0;
            uint64_t v432 = (ValueMetadata *)0xE000000000000000;
            unint64_t v248 = v416;
            sub_1000CE628(v416);
            sub_10096CBD0(22);
            uint64_t v425 = v431;
            uint64_t v426 = v432;
            uint64_t v249 = (uint64_t)v417;
            uint64_t v250 = (uint64_t)v418;
            swift_getAssociatedConformanceWitness();
            sub_10096D270();
            v439._uint64_t countAndFlagsBits = 0xD000000000000012;
            v439._object = v402;
            sub_10096BDC0(v439);
            uint64_t v423 = v416;
            uint64_t v431 = v250;
            uint64_t v432 = v415;
            uint64_t v433 = (ValueMetadata *)v249;
            uint64_t v434 = v414;
            type metadata accessor for UserRequest();
            swift_getWitnessTable();
            sub_10096D270();
            sub_1000B6C28(v248);
            sub_10059A0E8(v425, v426, v247, v246);
            uint64_t v214 = v403;
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t *, uint64_t))v404)(v242, v214);
            uint64_t v206 = v400;
            uint64_t v212 = v406;
            uint64_t v213 = v408;
          }
          swift_bridgeObjectRelease();
          uint64_t result = (*v365)(v380, v410);
          unint64_t v198 = (unint64_t)v398;
        }
        unint64_t v200 = __clz(__rbit64(v198));
        uint64_t v201 = (v198 - 1) & v198;
        unint64_t v202 = v200 | (v397 << 6);
        goto LABEL_110;
      }
      uint64_t v394 = v144;
      uint64_t v154 = *(void *)&v153[*(int *)(v147 + 48)];
      (*(void (**)(char *, char *, uint64_t))v387)(v386, v153, v388);
      uint64_t v155 = 0;
      *(void *)&long long v405 = v154;
      while (1)
      {
        if (v155 == sub_10096C1A0())
        {
          *(void *)&long long v407 = v155;
          unint64_t v156 = (unsigned int (*)(void *, uint64_t, uint64_t))*v409;
          ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))*v409)(v59, 1, 1, v141);
        }
        else
        {
          BOOL v157 = sub_10096C130();
          sub_10096C0E0();
          if (v157)
          {
            unint64_t v158 = v154
                 + ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80))
                 + *(void *)(v374 + 72) * v155;
            uint64_t v159 = v373;
            (*(void (**)(char *, unint64_t, uint64_t))(v374 + 16))(v373, v158, v141);
          }
          else
          {
            uint64_t result = sub_10096CC20();
            if (v325 != 8) {
              goto LABEL_237;
            }
            uint64_t v431 = result;
            uint64_t v159 = v373;
            (*(void (**)(char *, uint64_t *, uint64_t))v396)(v373, &v431, v141);
            swift_unknownObjectRelease();
          }
          ((void (*)(uint64_t *, char *, uint64_t))*v395)(v59, v159, v141);
          BOOL v160 = __OFADD__(v155, 1);
          uint64_t v161 = v155 + 1;
          if (v160)
          {
            __break(1u);
LABEL_218:
            __break(1u);
            goto LABEL_219;
          }
          *(void *)&long long v407 = v161;
          unint64_t v156 = (unsigned int (*)(void *, uint64_t, uint64_t))*v409;
          ((void (*)(uint64_t *, void, uint64_t, uint64_t))*v409)(v59, 0, 1, v141);
        }
        long long v162 = (unsigned int (*)(void, void, void))*v408;
        uint64_t v163 = 1;
        if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))*v408)(v59, 1, v141) != 1)
        {
          uint64_t v164 = *(int *)(v141 + 64);
          __int16 v165 = (char *)v59 + v164;
          *(void *)&long long v406 = *(int *)(v141 + 80);
          uint64_t v166 = *v59;
          uint64_t v167 = v59[1];
          *(void *)&long long v412 = v156;
          uint64_t v168 = (uint64_t *)v397;
          *(void *)int64_t v397 = v166;
          v168[1] = v167;
          uint64_t v169 = (char *)v168 + v164;
          uint64_t v170 = sub_10096B7D0();
          long long v171 = *(void (**)(void, void, void))(*(void *)(v170 - 8) + 32);
          v171(v169, v165, v170);
          uint64_t v172 = swift_allocObject();
          *(_OWORD *)(v172 + 16) = *(_OWORD *)&v404[v406];
          uint64_t v173 = *v168;
          uint64_t v174 = v398;
          uint64_t v175 = (char *)v398 + *(int *)(v416 + 64);
          uint64_t v176 = (uint64_t (**)(uint64_t))((char *)v398 + *(int *)(v416 + 80));
          void *v398 = v173;
          v174[1] = v167;
          uint64_t v141 = v416;
          v171(v175, v169, v170);
          uint64_t v59 = (uint64_t *)v404;
          uint64_t v163 = 0;
          char *v176 = sub_1006FB2C0;
          v176[1] = (uint64_t (*)(uint64_t))v172;
          unint64_t v156 = (unsigned int (*)(void *, uint64_t, uint64_t))v412;
        }
        uint64_t v177 = v398;
        ((void (*)(void *, uint64_t, uint64_t, uint64_t))v156)(v398, v163, 1, v141);
        uint64_t v178 = (long long *)v383;
        (*(void (**)(char *, void *, uint64_t))v402)(v383, v177, v384);
        if (v162(v178, 1, v141) == 1) {
          break;
        }
        uint64_t v179 = *(int *)(v141 + 64);
        id v180 = v178;
        os_log_t v181 = (char *)v178 + v179;
        uint64_t v182 = *(int *)(v416 + 80);
        uint64_t v183 = (void *)v397;
        id v184 = (char *)(v397 + v179);
        long long v412 = *v180;
        *(_OWORD *)int64_t v397 = v412;
        uint64_t v185 = sub_10096B7D0();
        uint64_t v186 = *(void (**)(void, void, void))(*(void *)(v185 - 8) + 32);
        long long v406 = *(long long *)((char *)v180 + v182);
        v186(v184, v181, v185);
        *(_OWORD *)((char *)v183 + v182) = v406;
        uint64_t v187 = v413[3];
        uint64_t v188 = v413[4];
        sub_10002689C(v413, v187);
        uint64_t v431 = 0;
        uint64_t v432 = (ValueMetadata *)0xE000000000000000;
        unint64_t v189 = v412;
        sub_1000CE628(v412);
        sub_10096CBD0(22);
        int64_t v427 = v431;
        uint64_t v428 = v432;
        uint64_t v190 = (ValueMetadata *)v414;
        uint64_t v191 = (uint64_t)v415;
        swift_getAssociatedConformanceWitness();
        sub_10096D270();
        v438._uint64_t countAndFlagsBits = 0xD000000000000012;
        v438._object = (void *)v399;
        sub_10096BDC0(v438);
        uint64_t v425 = v412;
        uint64_t v431 = v191;
        uint64_t v141 = v416;
        uint64_t v432 = v418;
        uint64_t v433 = v190;
        uint64_t v434 = (uint64_t)v417;
        type metadata accessor for UserRequest();
        swift_getWitnessTable();
        sub_10096D270();
        sub_1000B6C28(v189);
        sub_10059A0E8(v427, v428, v187, v188);
        swift_bridgeObjectRelease();
        uint64_t v192 = v183;
        uint64_t v59 = (uint64_t *)v404;
        ((void (*)(void *, uint64_t))*v401)(v192, v141);
        uint64_t v154 = v405;
        uint64_t v155 = v407;
      }
      swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))v382)(v386, v388);
      unint64_t v140 = v394;
    }
    unint64_t v143 = __clz(__rbit64(v140));
    uint64_t v144 = (v140 - 1) & v140;
    unint64_t v145 = v143 | (v393 << 6);
    goto LABEL_73;
  }
  uint64_t v83 = &v82[*(int *)(v75 + 48)];
  (*v366)(v395, v82, v410);
  uint64_t v84 = v396;
  uint64_t v85 = v367;
  (*v352)(v396, v83, v367);
  uint64_t v86 = *(void *)&v84[*((int *)v85 + 14)];
  uint64_t v431 = (uint64_t)v418;
  uint64_t v432 = v415;
  uint64_t v433 = v417;
  uint64_t v434 = v414;
  uint64_t v431 = type metadata accessor for UserRequest();
  uint64_t v432 = v353;
  uint64_t v433 = v360;
  uint64_t v434 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  swift_getTupleTypeMetadata();
  v87._uint64_t countAndFlagsBits = v86;
  v87._object = &type metadata for ObjectIdentifier;
  uint64_t countAndFlagsBits = Filename.init(rawValue:)(v87).rawValue._countAndFlagsBits;
  uint64_t v89 = *(void *)(countAndFlagsBits + 64);
  unint64_t v370 = countAndFlagsBits + 64;
  uint64_t v90 = 1 << *(unsigned char *)(countAndFlagsBits + 32);
  if (v90 < 64) {
    uint64_t v91 = ~(-1 << v90);
  }
  else {
    uint64_t v91 = -1;
  }
  unint64_t v92 = v91 & v89;
  int64_t v375 = (unint64_t)(v90 + 63) >> 6;
  uint64_t v349 = v375 - 1;
  uint64_t v387 = countAndFlagsBits;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v399 = 0;
  while (1)
  {
    if (v92)
    {
      *(void *)&long long v407 = (v92 - 1) & v92;
      unint64_t v95 = __clz(__rbit64(v92)) | (v399 << 6);
LABEL_29:
      uint64_t v96 = v382;
      (*(void (**)(uint64_t *, unint64_t, uint64_t))(v382 + 16))(v71, *(void *)(v387 + 56) + *(void *)(v382 + 72) * v95, v36);
      uint64_t v97 = *(void (**)(void, void, void, void))(v96 + 56);
      v97(v71, 0, 1, v36);
      goto LABEL_48;
    }
    int64_t v98 = v399 + 1;
    if (__OFADD__(v399, 1)) {
      goto LABEL_218;
    }
    if (v98 < v375)
    {
      unint64_t v99 = *(void *)(v370 + 8 * v98);
      if (v99) {
        goto LABEL_33;
      }
      uint64_t v100 = v399 + 2;
      ++v399;
      if (v98 + 1 < v375)
      {
        unint64_t v99 = *(void *)(v370 + 8 * v100);
        if (v99) {
          goto LABEL_36;
        }
        uint64_t v399 = v98 + 1;
        if (v98 + 2 < v375)
        {
          unint64_t v99 = *(void *)(v370 + 8 * (v98 + 2));
          if (v99)
          {
            v98 += 2;
            goto LABEL_33;
          }
          uint64_t v100 = v98 + 3;
          uint64_t v399 = v98 + 2;
          if (v98 + 3 < v375) {
            break;
          }
        }
      }
    }
LABEL_47:
    uint64_t v97 = *(void (**)(void, void, void, void))v412;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))v412)(v71, 1, 1, v36);
    *(void *)&long long v407 = 0;
LABEL_48:
    unint64_t v101 = (unsigned int (*)(void *, uint64_t, uint64_t))*v409;
    uint64_t v102 = 1;
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))*v409)(v71, 1, v36) != 1)
    {
      uint64_t v103 = *(int *)(v36 + 64);
      id v104 = (char *)v71 + v103;
      uint64_t v105 = v36;
      uint64_t v392 = *(int *)(v36 + 80);
      uint64_t v106 = v71[1];
      int64_t v107 = v376;
      *uint64_t v376 = *v71;
      v107[1] = v106;
      uint64_t v108 = (char *)v107 + v103;
      uint64_t v109 = sub_10096B7D0();
      *(void *)&long long v405 = v97;
      uint64_t v110 = v109;
      long long v111 = *(void (**)(void, void, void))(*(void *)(v109 - 8) + 32);
      v111(v108, v104, v109);
      uint64_t v112 = swift_allocObject();
      *(_OWORD *)(v112 + 16) = *(_OWORD *)((char *)v408 + v392);
      uint64_t v113 = *v107;
      uint64_t v114 = v107[1];
      long long v115 = v402;
      uint64_t v116 = &v402[*(int *)(v105 + 64)];
      unint64_t v117 = (uint64_t (**)(uint64_t))&v402[*(int *)(v105 + 80)];
      *(void *)uint64_t v402 = v113;
      *((void *)v115 + 1) = v114;
      uint64_t v118 = v108;
      unint64_t v71 = v408;
      uint64_t v119 = v110;
      uint64_t v97 = (void (*)(void, void, void, void))v405;
      v111(v116, v118, v119);
      uint64_t v102 = 0;
      uint8_t *v117 = sub_1006FB2C0;
      v117[1] = (uint64_t (*)(uint64_t))v112;
      uint64_t v36 = v105;
      uint64_t v45 = v401;
    }
    id v120 = v402;
    v97(v402, v102, 1, v36);
    (*(void (**)(unint64_t *, char *, uint64_t))v393)(v45, v120, v394);
    if (v101(v45, 1, v36) == 1)
    {
      swift_release();
      (*v365)(v395, v410);
      uint64_t result = (*v351)(v396, v367);
      uint64_t v59 = (uint64_t *)v404;
      unint64_t v70 = v364;
      int64_t v73 = v363;
      goto LABEL_6;
    }
    unint64_t v122 = *v45;
    unint64_t v121 = v45[1];
    uint64_t v123 = *(int *)(v36 + 64);
    uint64_t v124 = (char *)v45 + v123;
    uint64_t v125 = *(int *)(v36 + 80);
    uint64_t v126 = v406;
    uint64_t v127 = v406 + v123;
    *(void *)long long v406 = *v45;
    *(void *)(v126 + 8) = v121;
    uint64_t v128 = sub_10096B7D0();
    uint64_t v129 = *(void (**)(void, void, void))(*(void *)(v128 - 8) + 32);
    long long v405 = *(_OWORD *)((char *)v45 + v125);
    v129(v127, v124, v128);
    *(_OWORD *)(v126 + v125) = v405;
    uint64_t v131 = v413[3];
    uint64_t v130 = v413[4];
    sub_10002689C(v413, v131);
    uint64_t v429 = 0;
    uint64_t v430 = (void *)0xE000000000000000;
    sub_1000CE628(v122);
    swift_getAssociatedConformanceWitness();
    sub_10096D270();
    v437._uint64_t countAndFlagsBits = 8250;
    v437._object = (void *)0xE200000000000000;
    sub_10096BDC0(v437);
    int v132 = *v396;
    if (*v396)
    {
      if (v132 == 1) {
        v93._uint64_t countAndFlagsBits = 0x7463697665;
      }
      else {
        v93._uint64_t countAndFlagsBits = 0xD000000000000013;
      }
      if (v132 == 1) {
        uint64_t v94 = (void *)0xE500000000000000;
      }
      else {
        uint64_t v94 = (void *)v379;
      }
    }
    else
    {
      uint64_t v94 = (void *)0xEB00000000657A69;
      v93._uint64_t countAndFlagsBits = 0x6C6169726574616DLL;
    }
    v93._object = v94;
    sub_10096BDC0(v93);
    swift_bridgeObjectRelease();
    v436._uint64_t countAndFlagsBits = 0x20726F6620;
    v436._object = (void *)0xE500000000000000;
    sub_10096BDC0(v436);
    int64_t v427 = v122;
    uint64_t v431 = (uint64_t)v418;
    uint64_t v432 = v415;
    uint64_t v433 = v417;
    uint64_t v434 = v414;
    type metadata accessor for UserRequest();
    swift_getWitnessTable();
    sub_10096D270();
    sub_1000B6C28(v122);
    sub_10059A0E8(v429, v430, v131, v130);
    swift_bridgeObjectRelease();
    uint64_t result = ((uint64_t (*)(void, uint64_t))*v391)(v406, v36);
    unint64_t v71 = v408;
    uint64_t v45 = v401;
    unint64_t v92 = v407;
  }
  unint64_t v99 = *(void *)(v370 + 8 * v100);
  if (v99)
  {
LABEL_36:
    int64_t v98 = v100;
LABEL_33:
    *(void *)&long long v407 = (v99 - 1) & v99;
    unint64_t v95 = __clz(__rbit64(v99)) + (v98 << 6);
    uint64_t v399 = v98;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v98 = v100 + 1;
    if (__OFADD__(v100, 1)) {
      break;
    }
    if (v98 >= v375)
    {
      uint64_t v399 = v349;
      goto LABEL_47;
    }
    unint64_t v99 = *(void *)(v370 + 8 * v98);
    ++v100;
    if (v99) {
      goto LABEL_33;
    }
  }
LABEL_227:
  __break(1u);
LABEL_228:
  __break(1u);
LABEL_229:
  __break(1u);
LABEL_230:
  __break(1u);
LABEL_231:
  __break(1u);
LABEL_232:
  __break(1u);
LABEL_233:
  __break(1u);
LABEL_234:
  __break(1u);
LABEL_235:
  __break(1u);
LABEL_236:
  __break(1u);
LABEL_237:
  __break(1u);
LABEL_238:
  __break(1u);
  return result;
}

uint64_t sub_1006E75BC(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1006CDD98(a2);
  (*(void (**)(void *, uint64_t))(**(void **)(a1 + 16) + 488))(a2, a3);
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_10002689C(a2, v6);
  sub_10059A0E8(0, (void *)0xE000000000000000, v6, v7);
  (*(void (**)(void, void *))(**(void **)(a1 + 24) + 496))(0, a2);
  return sub_100855118(a2, a3);
}

uint64_t sub_1006E76C0(uint64_t a1, void *a2)
{
  uint64_t v4 = (_OWORD *)(a1 + qword_100ADA000);
  swift_beginAccess();
  long long v5 = v4[1];
  v13[0] = *v4;
  v13[1] = v5;
  long long v6 = v4[3];
  v13[2] = v4[2];
  v13[3] = v6;
  sub_1004A61D8((uint64_t)v13);
  type metadata accessor for FileTreeChangeAggregator();
  BOOL v7 = sub_1006D09C0();
  uint64_t result = sub_1004A6230((uint64_t)v13);
  if (!v7)
  {
    uint64_t v9 = a2[3];
    uint64_t v10 = a2[4];
    sub_10002689C(a2, v9);
    sub_10059A0E8(0x73746E657665202BLL, (void *)0xEC0000003A736620, v9, v10);
    uint64_t v11 = a2[3];
    uint64_t v12 = a2[4];
    sub_10002689C(a2, v11);
    return sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1006F7BB8, a1, v11, (uint64_t)&type metadata for () + 8, v12);
  }
  return result;
}

uint64_t sub_1006E7820(void *a1, uint64_t a2)
{
  uint64_t v3 = (_OWORD *)(a2 + qword_100ADA000);
  swift_beginAccess();
  long long v4 = v3[1];
  v8[0] = *v3;
  v8[1] = v4;
  long long v5 = v3[3];
  _OWORD v8[2] = v3[2];
  v8[3] = v5;
  sub_1004A61D8((uint64_t)v8);
  uint64_t v6 = type metadata accessor for FileTreeChangeAggregator();
  sub_1006D45E4(a1, v6);
  return sub_1004A6230((uint64_t)v8);
}

uint64_t sub_1006E78E8(void *a1, uint64_t a2, int a3)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_10002689C(a1, v6);
  sub_10059A0E8(0, (void *)0xE000000000000000, v6, v7);
  (*(void (**)(uint64_t, void *))(**(void **)(a2 + 24) + 496))(1, a1);
  return sub_100855118(a1, a3);
}

uint64_t sub_1006E79A4(uint64_t a1, void *a2)
{
  long long v4 = (_OWORD *)(a1 + qword_100ADA008);
  swift_beginAccess();
  long long v5 = v4[1];
  v13[0] = *v4;
  v13[1] = v5;
  long long v6 = v4[3];
  v13[2] = v4[2];
  v13[3] = v6;
  sub_1004A61D8((uint64_t)v13);
  type metadata accessor for FileTreeChangeAggregator();
  BOOL v7 = sub_1006D09C0();
  uint64_t result = sub_1004A6230((uint64_t)v13);
  if (!v7)
  {
    uint64_t v9 = a2[3];
    uint64_t v10 = a2[4];
    sub_10002689C(a2, v9);
    sub_10059A0E8(0x73746E657665202BLL, (void *)0xEC0000003A706620, v9, v10);
    uint64_t v11 = a2[3];
    uint64_t v12 = a2[4];
    sub_10002689C(a2, v11);
    return sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_1006F7B5C, a1, v11, (uint64_t)&type metadata for () + 8, v12);
  }
  return result;
}

uint64_t sub_1006E7B04(void *a1, uint64_t a2)
{
  uint64_t v3 = (_OWORD *)(a2 + qword_100ADA008);
  swift_beginAccess();
  long long v4 = v3[1];
  v8[0] = *v3;
  v8[1] = v4;
  long long v5 = v3[3];
  _OWORD v8[2] = v3[2];
  v8[3] = v5;
  sub_1004A61D8((uint64_t)v8);
  uint64_t v6 = type metadata accessor for FileTreeChangeAggregator();
  sub_1006D45E4(a1, v6);
  return sub_1004A6230((uint64_t)v8);
}

void sub_1006E7BCC()
{
}

uint64_t sub_1006E7C30()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000705CC(*(void *)(v0 + 128));
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_10002B770(v0 + qword_100B0B310, (uint64_t *)&unk_100AD63E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  sub_1006F7C48(v0 + qword_100B0B388, (uint64_t (*)(void))type metadata accessor for DBCounters);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1006E7EAC()
{
  sub_1006C1A2C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConcreteDatabase()
{
  return swift_getGenericMetadata();
}

void sub_1006E7F18()
{
  if (!qword_100ADA0C0[0])
  {
    type metadata accessor for TelemetrySignposter(255);
    unint64_t v0 = sub_10096C890();
    if (!v1) {
      atomic_store(v0, qword_100ADA0C0);
    }
  }
}

uint64_t type metadata accessor for DBCounters()
{
  uint64_t result = qword_100ADA220;
  if (!qword_100ADA220) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006E7FBC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006E8008(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1006E8088(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for TargetedSPSErrorAndValue(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1006E8154(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006E81DC(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1006E8224(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FileTreeChangeAggregator()
{
  return sub_10014D080();
}

uint64_t sub_1006E828C()
{
  uint64_t result = sub_10096B7D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1006E8330(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 52);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_10096B7D0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 56)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 56));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1006E841C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 52);
  uint64_t v3 = sub_10096B7D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

unsigned char *sub_1006E84A0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10096B7D0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 56)] = *(void *)&a2[*(int *)(a3 + 56)];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_1006E853C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10096B7D0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 56)] = *(void *)&a2[*(int *)(a3 + 56)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_1006E85E4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10096B7D0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 56)] = *(void *)&a2[*(int *)(a3 + 56)];
  return a1;
}

unsigned char *sub_1006E867C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10096B7D0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 56)] = *(void *)&a2[*(int *)(a3 + 56)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006E871C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006E8730);
}

uint64_t sub_1006E8730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B7D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 52);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 56));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1006E87F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006E8808);
}

uint64_t sub_1006E8808(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10096B7D0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 52);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 56)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ConcreteDatabase.MaterializationRequest()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for ConcreteDatabaseOptions()
{
  return &type metadata for ConcreteDatabaseOptions;
}

uint64_t *sub_1006E88F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_10096B0E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1006E89BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_10096B0E0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_1006E8A24(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10096B0E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_1006E8AA0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10096B0E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_1006E8B1C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10096B0E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1006E8B98(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10096B0E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1006E8C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006E8C28);
}

uint64_t sub_1006E8C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_10096B0E0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_1006E8C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006E8CAC);
}

uint64_t sub_1006E8CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1006E8D20()
{
  uint64_t result = sub_10096B0E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1006E8DC0()
{
  unint64_t result = qword_100ADA258;
  if (!qword_100ADA258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADA258);
  }
  return result;
}

unint64_t sub_1006E8E18()
{
  unint64_t result = qword_100ADA260;
  if (!qword_100ADA260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADA260);
  }
  return result;
}

uint64_t sub_1006E8E6C()
{
  return sub_100025500(&qword_100ADA268, &qword_100ADA270);
}

unint64_t sub_1006E8EAC()
{
  unint64_t result = qword_100ADA278;
  if (!qword_100ADA278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADA278);
  }
  return result;
}

unint64_t sub_1006E8F04()
{
  unint64_t result = qword_100ADA280;
  if (!qword_100ADA280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADA280);
  }
  return result;
}

unint64_t sub_1006E8F58(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1006E8F88();
  unint64_t result = sub_1006E8FDC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1006E8F88()
{
  unint64_t result = qword_100ADA2B0;
  if (!qword_100ADA2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADA2B0);
  }
  return result;
}

unint64_t sub_1006E8FDC()
{
  unint64_t result = qword_100ADA2B8;
  if (!qword_100ADA2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADA2B8);
  }
  return result;
}

uint64_t sub_1006E9030(uint64_t a1, void *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 80);
  uint64_t v6 = *(void *)(*a2 + 96);
  uint64_t v110 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v99 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  unint64_t v101 = (char *)&v95 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v105 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v106 = AssociatedTypeWitness;
  uint64_t v9 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v100 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v103 = (char *)&v95 - v11;
  uint64_t v12 = sub_10096B480();
  uint64_t v107 = *(void *)(v12 - 8);
  uint64_t v108 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  id v104 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v109 = (char *)&v95 - v15;
  uint64_t v16 = *(void *)(v4 + 104);
  uint64_t v112 = *(uint8_t **)(v4 + 88);
  uint64_t v113 = v5;
  uint64_t v118 = v5;
  uint64_t v119 = v112;
  uint64_t v114 = v6;
  uint64_t v120 = v6;
  uint64_t v121 = v16;
  uint64_t v111 = v16;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  uint64_t v18 = sub_10096C890();
  uint64_t v115 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v95 - v20;
  uint64_t v116 = *(void *)(v17 - 8);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v95 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v95 - v28;
  uint64_t v30 = v117;
  sub_1000DEDD8(a1, (uint64_t)v21);
  if (v30) {
    return v31 & 1;
  }
  uint64_t v33 = v115;
  uint64_t v97 = v27;
  uint64_t v96 = v24;
  uint64_t v98 = 0;
  unint64_t v117 = (uint64_t *)a1;
  uint64_t v34 = v116;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v21, 1, v17) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v18);
    uint64_t v115 = 0;
    LODWORD(v116) = 1;
    goto LABEL_5;
  }
  uint64_t v54 = (uint64_t *)v29;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v29, v21, v17);
  if (v29[*(int *)(v110 + 64) + 16] == 2)
  {
    uint64_t v115 = v17;
    id v55 = (id)fpfs_current_or_default_log();
    uint64_t v56 = v109;
    sub_10096B490();
    uint64_t v57 = v105;
    uint64_t v58 = v106;
    uint64_t v59 = v103;
    (*(void (**)(char *, uint64_t *, uint64_t))(v105 + 16))(v103, v117, v106);
    uint64_t v60 = sub_10096B470();
    os_log_type_t v61 = sub_10096C5A0();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      unint64_t v117 = v54;
      uint64_t v118 = v63;
      *(_DWORD *)uint64_t v62 = 136315138;
      uint64_t v112 = v62 + 4;
      swift_getAssociatedConformanceWitness();
      uint64_t v64 = sub_10096D220();
      uint64_t v122 = sub_100719D44(v64, v65, &v118);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "%s did not propagate: propagating is still in progress", v62, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v107 + 8))(v109, v108);
      (*(void (**)(uint64_t *, uint64_t))(v116 + 8))(v117, v115);
      char v31 = 0;
      return v31 & 1;
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v56, v108);
    (*(void (**)(uint64_t *, uint64_t))(v116 + 8))(v54, v115);
LABEL_32:
    char v31 = 0;
    return v31 & 1;
  }
  uint64_t v66 = *(void *)&v29[*(int *)(v110 + 36)];
  uint64_t v67 = *(void (**)(char *, uint64_t *, uint64_t))(v34 + 16);
  uint64_t v68 = v97;
  v67(v97, v54, v17);
  if (v66)
  {
    BOOL v69 = sub_100827AAC(v17);
    unint64_t v70 = *(void (**)(char *, uint64_t))(v34 + 8);
    v70(v68, v17);
    unint64_t v71 = v104;
    if (!v69)
    {
      v70((char *)v54, v17);
      char v31 = 1;
      return v31 & 1;
    }
    uint64_t v109 = (char *)v70;
  }
  else
  {
    uint64_t v109 = *(char **)(v34 + 8);
    ((void (*)(char *, uint64_t))v109)(v68, v17);
    unint64_t v71 = v104;
  }
  BOOL v72 = sub_100827AAC(v17);
  int64_t v73 = v117;
  if (!v72)
  {
    id v80 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v82 = v105;
    uint64_t v81 = v106;
    uint64_t v83 = v100;
    (*(void (**)(char *, uint64_t *, uint64_t))(v105 + 16))(v100, v73, v106);
    uint64_t v84 = sub_10096B470();
    os_log_type_t v85 = sub_10096C5A0();
    int v86 = v85;
    if (os_log_type_enabled(v84, v85))
    {
      LODWORD(v112) = v86;
      uint64_t v87 = swift_slowAlloc();
      uint64_t v115 = v17;
      int v88 = (uint8_t *)v87;
      uint64_t v89 = swift_slowAlloc();
      *(_DWORD *)int v88 = 136315138;
      unint64_t v117 = v54;
      uint64_t v118 = v89;
      swift_getAssociatedConformanceWitness();
      uint64_t v90 = sub_10096D220();
      uint64_t v122 = sub_100719D44(v90, v91, &v118);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v81);
      _os_log_impl((void *)&_mh_execute_header, v84, (os_log_type_t)v112, "%s did not propagate: item is not bound", v88, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v107 + 8))(v104, v108);
      ((void (*)(uint64_t *, uint64_t))v109)(v117, v115);
      char v31 = 0;
      return v31 & 1;
    }

    (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v81);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v71, v108);
    ((void (*)(uint64_t *, uint64_t))v109)(v54, v17);
    goto LABEL_32;
  }
  uint64_t v74 = v99;
  uint64_t v75 = v110;
  (*(void (**)(char *, uint64_t *, uint64_t))(v99 + 16))(v101, v54, v110);
  uint64_t v76 = *(uint64_t *)((char *)v54 + *(int *)(v75 + 76));
  uint64_t v77 = v96;
  v67(v96, v54, v17);
  if ((v76 & 4) != 0)
  {
    uint64_t v79 = 1;
  }
  else
  {
    uint64_t v78 = &v77[*(int *)(v17 + 52)];
    uint64_t v79 = (v78[*(int *)(type metadata accessor for ItemReconciliationHalf() + 76)] >> 2) & 1;
  }
  unint64_t v92 = v109;
  ((void (*)(char *, uint64_t))v109)(v77, v17);
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  Swift::String v93 = v101;
  BOOL v94 = sub_10082A8D4(static Fields.all | 0x10, v79, v75);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v93, v75);
  if (v94) {
    uint64_t v115 = *(uint64_t *)((char *)v54 + *(int *)(v17 + 64) + 8);
  }
  else {
    uint64_t v115 = 0;
  }
  LODWORD(v116) = !v94;
  ((void (*)(uint64_t *, uint64_t))v92)(v54, v17);
LABEL_5:
  uint64_t v35 = a2[3];
  uint64_t v37 = v112;
  uint64_t v36 = v113;
  uint64_t v118 = v113;
  uint64_t v119 = v112;
  uint64_t v38 = v114;
  uint64_t v39 = v111;
  uint64_t v120 = v114;
  uint64_t v121 = v111;
  type metadata accessor for ItemJob();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  uint64_t v41 = sub_10096C0D0();
  uint64_t v118 = v36;
  uint64_t v119 = v37;
  uint64_t v120 = v38;
  uint64_t v121 = v39;
  *uint64_t v42 = type metadata accessor for Ingestion.FetchItemMetadata();
  uint64_t v43 = sub_1003FC080(v41);
  uint64_t v44 = v98;
  uint64_t v45 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)v35 + 272))(v117, v43);
  uint64_t v46 = swift_bridgeObjectRelease();
  if (!v44)
  {
    unint64_t v117 = &v95;
    uint64_t v118 = v45;
    __chkstk_darwin(v46);
    long long v47 = *(_OWORD *)(v102 + 592);
    *((_OWORD *)&v95 - 4) = *(_OWORD *)(v102 + 576);
    *(&v95 - 6) = v36;
    *(&v95 - 5) = (uint64_t)v37;
    *((_OWORD *)&v95 - 2) = v47;
    *(&v95 - 2) = v38;
    *(&v95 - 1) = v39;
    uint64_t v48 = sub_10096C1C0();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v51 = sub_1003FC0AC((void (*)(char *, char *))sub_1006F375C, (uint64_t)(&v95 - 10), v48, (uint64_t)&type metadata for NSecTimestamp, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v50);
    swift_bridgeObjectRelease();
    sub_10053BCD8(v51);
    char v53 = v52;
    swift_bridgeObjectRelease();
    if (v116)
    {
      if (v53)
      {
        char v31 = 1;
        return v31 & 1;
      }
    }
    else if ((v53 & 1) == 0)
    {
      char v31 = 1;
      return v31 & 1;
    }
    char v31 = 1;
  }
  return v31 & 1;
}

BOOL sub_1006E9D44(unint64_t *a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v31 = type metadata accessor for UserRequest();
  uint64_t v32 = &type metadata for NSecTimestamp;
  uint64_t v33 = sub_10096B7D0();
  uint64_t v34 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v29 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v4 = __chkstk_darwin(TupleTypeMetadata);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (unint64_t *)((char *)&v27 - v8);
  uint64_t v10 = *(int *)(v7 + 64);
  uint64_t v11 = (char *)&v27 + v10 - v8;
  uint64_t v12 = *(int *)(v7 + 80);
  uint64_t v13 = (uint64_t *)((char *)&v27 + v12 - v8);
  uint64_t v14 = (char *)a1 + v10;
  uint64_t v15 = (uint64_t *)((char *)a1 + v12);
  unint64_t v16 = a1[1];
  unint64_t v27 = *a1;
  unint64_t v28 = v16;
  *uint64_t v9 = v27;
  v9[1] = v16;
  uint64_t v17 = sub_10096B7D0();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v11, v14, v17);
  uint64_t v19 = *v15;
  uint64_t v20 = v15[1];
  *uint64_t v13 = *v15;
  v13[1] = v20;
  unint64_t v22 = v27;
  uint64_t v21 = v28;
  *(void *)uint64_t v6 = v27;
  *((void *)v6 + 1) = v21;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v6[*(int *)(TupleTypeMetadata + 64)], v11, v17);
  uint64_t v23 = (uint64_t (**)(uint64_t))&v6[*(int *)(TupleTypeMetadata + 80)];
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v19;
  *(void *)(v24 + 24) = v20;
  *uint64_t v23 = sub_1006FB2C0;
  v23[1] = (uint64_t (*)(uint64_t))v24;
  sub_1000CE628(v22);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v29 + 8);
  swift_retain();
  v25(v6, TupleTypeMetadata);
  return v21 < v30;
}

BOOL sub_1006E9F94(unint64_t *a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v31 = type metadata accessor for UserRequest();
  uint64_t v32 = &type metadata for NSecTimestamp;
  uint64_t v33 = sub_10096B7D0();
  uint64_t v34 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v29 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v4 = __chkstk_darwin(TupleTypeMetadata);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (unint64_t *)((char *)&v27 - v8);
  uint64_t v10 = *(int *)(v7 + 64);
  uint64_t v11 = (char *)&v27 + v10 - v8;
  uint64_t v12 = *(int *)(v7 + 80);
  uint64_t v13 = (uint64_t *)((char *)&v27 + v12 - v8);
  uint64_t v14 = (char *)a1 + v10;
  uint64_t v15 = (uint64_t *)((char *)a1 + v12);
  unint64_t v16 = a1[1];
  unint64_t v27 = *a1;
  unint64_t v28 = v16;
  *uint64_t v9 = v27;
  v9[1] = v16;
  uint64_t v17 = sub_10096B7D0();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v11, v14, v17);
  uint64_t v19 = *v15;
  uint64_t v20 = v15[1];
  *uint64_t v13 = *v15;
  v13[1] = v20;
  unint64_t v22 = v27;
  uint64_t v21 = v28;
  *(void *)uint64_t v6 = v27;
  *((void *)v6 + 1) = v21;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v6[*(int *)(TupleTypeMetadata + 64)], v11, v17);
  uint64_t v23 = (uint64_t (**)(uint64_t))&v6[*(int *)(TupleTypeMetadata + 80)];
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v19;
  *(void *)(v24 + 24) = v20;
  *uint64_t v23 = sub_1006FB2C0;
  v23[1] = (uint64_t (*)(uint64_t))v24;
  sub_1000CE628(v22);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v29 + 8);
  swift_retain();
  v25(v6, TupleTypeMetadata);
  return v21 < v30;
}

uint64_t sub_1006EA1E8(uint64_t a1)
{
  uint64_t v13 = a1;
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v3 = v12;
    Filename.init(rawValue:)(*(Swift::String *)(&v2 - 1));
    sub_10001AE98((uint64_t)v12, (uint64_t)v10, qword_100ADA3D0);
    sub_10001AE98((uint64_t)v10, (uint64_t)v11, qword_100ADA3D0);
    if (sub_10058D430((uint64_t)v11) == 1) {
      return 0;
    }
    sub_10001AE98((uint64_t)v12, (uint64_t)v8, (uint64_t *)&unk_100ACD9A0);
    sub_10001AE98((uint64_t)v8, (uint64_t)v9, (uint64_t *)&unk_100ACD9A0);
    if (sub_10021FECC((uint64_t)v9))
    {
      sub_10021FD38((uint64_t)v8);
      return 0;
    }
    uint64_t v5 = v9;
    v6._object = Filename.init(rawValue:)(*(Swift::String *)(&v4 + -8)).rawValue._object;
    v6._uint64_t countAndFlagsBits = (uint64_t)v12;
    uint64_t countAndFlagsBits = (uint64_t *)Filename.init(rawValue:)(v6).rawValue._countAndFlagsBits;
    swift_errorRelease();
    sub_1000D32B4(countAndFlagsBits[2], countAndFlagsBits[3], countAndFlagsBits[4], countAndFlagsBits[5], countAndFlagsBits[6], countAndFlagsBits[7], countAndFlagsBits[8], countAndFlagsBits[9], countAndFlagsBits[10]);
    return 1;
  }
  return result;
}

BOOL sub_1006EA314(uint64_t a1, char a2, uint64_t a3)
{
  return qword_10098A948[*(char *)(a1 + 8)] == qword_10098A948[a2] && *(void *)(a1 + 16) > a3;
}

void sub_1006EA340(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, void (*a7)(void *), uint64_t a8)
{
  uint64_t v115 = a8;
  unint64_t v119 = a2;
  uint64_t v15 = sub_10096B480();
  unint64_t v16 = *(unsigned __int8 **)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v130 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a5(v17);
  if (v8) {
    return;
  }
  uint64_t v124 = v16;
  uint64_t v125 = v15;
  unsigned int v111 = v20;
  uint64_t v114 = a7;
  uint64_t v123 = a1;
  uint64_t v112 = a4;
  uint64_t v108 = a6;
  uint64_t v21 = v19;
  id v22 = [objc_allocWithZone((Class)FPLoggerScope) init];
  id v23 = (id)fpfs_current_or_default_log();
  uint64_t v24 = v130;
  sub_10096B490();
  id v25 = v22;
  unint64_t v26 = v119;
  swift_bridgeObjectRetain();
  sub_1000CE628(a3);
  swift_bridgeObjectRetain();
  id v27 = v25;
  swift_bridgeObjectRetain();
  sub_1000CE628(a3);
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_10096B470();
  os_log_type_t v29 = sub_10096C5A0();
  int v120 = v29;
  BOOL v30 = os_log_type_enabled(v28, v29);
  unint64_t v122 = a3;
  uint64_t v118 = a5;
  uint64_t v31 = v115;
  uint64_t v109 = 0;
  uint64_t v107 = v27;
  if (v30)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v117 = swift_slowAlloc();
    v127[0] = v117;
    *(_DWORD *)uint64_t v32 = 138413314;
    id v34 = [v27 enter];
    v126[0] = v34;
    sub_10096C8C0();
    *uint64_t v33 = v34;

    *(_WORD *)(v32 + 12) = 2082;
    swift_bridgeObjectRetain();
    v126[0] = sub_100719D44(v123, v26, v127);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 22) = 2080;
    uint64_t v35 = sub_10096C2B0();
    v126[0] = sub_100719D44(v35, v36, v127);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 32) = 2080;
    unint64_t v37 = sub_1005232CC(v122);
    unint64_t v39 = v38;
    sub_1000B6C28(v122);
    v126[0] = sub_100719D44(v37, v39, v127);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_1000B6C28(v122);
    *(_WORD *)(v32 + 42) = 2080;
    uint64_t v40 = sub_10096C0B0();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = v40;
    a5 = v118;
    v126[0] = sub_100719D44(v43, v42, v127);
    a3 = v122;
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    uint64_t v31 = v115;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v120, "%@ 🚧  waiting for ingestion of %{public}s prior to %s for %s: %s", (uint8_t *)v32, 0x34u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, uint64_t))v124 + 1))(v130, v125);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000B6C28(a3);
    swift_bridgeObjectRelease_n();

    sub_1000B6C28(a3);
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v124 + 1))(v24, v125);
  }
  uint64_t v44 = v114;
  uint64_t v45 = swift_allocObject();
  *(unsigned char *)(v45 + 16) = 0;
  uint64_t v46 = (char *)swift_allocObject();
  *((void *)v46 + 2) = v45;
  *((void *)v46 + 3) = v44;
  uint64_t v130 = v46;
  *((void *)v46 + 4) = v31;
  uint64_t v113 = v45;
  swift_retain_n();
  swift_retain_n();
  dispatch_group_t v47 = dispatch_group_create();
  uint64_t v110 = v21;
  uint64_t v48 = *(void *)(v21 + 16);
  unint64_t v49 = v119;
  uint64_t v50 = v123;
  if (!v48)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    uint64_t v98 = v121;
    uint64_t v99 = *(void **)(v121 + 64);
    uint64_t v100 = swift_allocObject();
    uint64_t v101 = v50;
    uint64_t v102 = v100;
    *(void *)(v100 + 16) = v113;
    *(unsigned char *)(v100 + 24) = v111 & 1;
    *(void *)(v100 + 32) = v98;
    *(void *)(v100 + 40) = v101;
    *(void *)(v100 + 48) = v49;
    *(void *)(v100 + 56) = a3;
    *(void *)(v100 + 64) = v112;
    *(void *)(v100 + 72) = a5;
    uint64_t v103 = v130;
    *(void *)(v100 + 80) = v108;
    *(void *)(v100 + 88) = sub_1006FB1FC;
    *(void *)(v100 + 96) = v103;
    swift_bridgeObjectRetain();
    sub_1000CE628(a3);
    swift_retain();
    swift_retain();
    id v104 = v99;
    swift_retain();
    swift_retain();
    sub_1006B791C((uint64_t)"waitForIngestion(of:request:barrierTimestamp:jobs:completionHandler:)", 69, 2, 0, v104, (uint64_t)sub_1006F9444, v102);
    swift_release();
    swift_release_n();
    swift_release();

    swift_release();
    uint64_t v105 = v107;
    sub_1006EF7CC(v107, (uint64_t (*)(void))&static os_log_type_t.debug.getter);

    return;
  }
  uint64_t v117 = v121 + qword_100B0B338;
  swift_beginAccess();
  uint64_t v51 = (unsigned __int8 *)(v110 + 40);
  uint64_t v116 = v47;
  while (1)
  {
    uint64_t v124 = v51;
    uint64_t v125 = v48;
    Swift::UInt64 v58 = *((void *)v51 - 1);
    int v59 = *v51;
    dispatch_group_enter(v47);
    Swift::UInt64 v128 = v58;
    char v129 = v59;
    uint64_t v60 = (void *)swift_allocObject();
    v60[2] = v47;
    v60[3] = v50;
    v60[4] = v49;
    sub_1000D3184((uint64_t)&v128, (uint64_t)(v60 + 5));
    v60[7] = a3;
    v60[8] = sub_1006FB1FC;
    v60[9] = v130;
    if (*(unsigned char *)(v121 + 184) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1000CE628(a3);
      char v52 = v47;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1000CE628(a3);
      char v53 = v52;
      swift_retain();
      id v54 = (id)FPDomainUnavailableError();
      uint64_t v55 = v113;
      swift_retain();
      uint64_t v56 = v115;
      swift_retain();
      sub_1006F7DFC((uint64_t)v54, v53, v123, v49, v58, v59, v122, v55, v114, v56);

      uint64_t v50 = v123;
      swift_release();

      a5 = v118;
      dispatch_group_t v47 = v116;
      swift_release();
      a3 = v122;
      swift_release();
      goto LABEL_8;
    }
    int v120 = v59;
    Swift::UInt64 v61 = v58;
    if (!*(void *)(*(void *)v117 + 16)) {
      break;
    }
    sub_10031F858(v58, v120);
    if ((v62 & 1) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    sub_1000CE628(a3);
    uint64_t v63 = v47;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000CE628(a3);
    uint64_t v64 = v63;
    swift_retain();
    uint64_t v50 = v123;
LABEL_26:
    os_log_type_t v85 = sub_1006CC108();
    uint64_t v87 = sub_1008D4780(v126, v61, v120);
    if (*v86)
    {
      int v88 = (void **)v86;
      uint64_t v89 = swift_allocObject();
      *(void *)(v89 + 16) = sub_1006F943C;
      *(void *)(v89 + 24) = v60;
      uint64_t v90 = *v88;
      sub_1000CE628(a3);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint8_t *v88 = v90;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v90 = sub_1006A367C(0, v90[2] + 1, 1, v90);
        uint8_t *v88 = v90;
      }
      unint64_t v93 = v90[2];
      unint64_t v92 = v90[3];
      uint64_t v94 = v112;
      if (v93 >= v92 >> 1)
      {
        uint64_t v97 = sub_1006A367C((void *)(v92 > 1), v93 + 1, 1, v90);
        uint64_t v94 = v112;
        uint64_t v90 = v97;
        uint8_t *v88 = v97;
      }
      uint64_t v57 = v125;
      unsigned int v95 = v111 >> 8;
      v90[2] = v93 + 1;
      uint64_t v96 = &v90[5 * v93];
      a3 = v122;
      v96[4] = v122;
      *((unsigned char *)v96 + 40) = v95;
      v96[6] = v94;
      v96[7] = sub_1006FB200;
      v96[8] = v89;
      ((void (*)(void *, void))v87)(v126, 0);
      ((void (*)(uint64_t *, void))v85)(v127, 0);
      dispatch_group_t v47 = v116;

      swift_release();
      a5 = v118;
      unint64_t v49 = v119;
      uint64_t v50 = v123;
      goto LABEL_9;
    }
    ((void (*)(void *, void))v87)(v126, 0);
    ((void (*)(uint64_t *, void))v85)(v127, 0);

    swift_release();
    unint64_t v49 = v119;
LABEL_8:
    uint64_t v57 = v125;
LABEL_9:
    uint64_t v51 = v124 + 16;
    swift_bridgeObjectRelease();
    sub_1000B6C28(a3);
    swift_release();
    uint64_t v48 = v57 - 1;
    if (!v48) {
      goto LABEL_33;
    }
  }
  unint64_t v65 = (void *)v117;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000CE628(a3);
  uint64_t v66 = v47;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000CE628(a3);
  uint64_t v67 = v66;
  swift_retain();
  char v68 = swift_isUniquelyReferenced_nonNull_native();
  v126[0] = *v65;
  uint64_t v69 = v126[0];
  *unint64_t v65 = 0x8000000000000000;
  char v70 = v120;
  unint64_t v72 = sub_10031F858(v58, v120);
  uint64_t v73 = *(void *)(v69 + 16);
  BOOL v74 = (v71 & 1) == 0;
  uint64_t v75 = v73 + v74;
  if (!__OFADD__(v73, v74))
  {
    char v76 = v71;
    if (*(void *)(v69 + 24) < v75)
    {
      sub_1003771B0(v75, v68);
      unint64_t v77 = sub_10031F858(v58, v70);
      if ((v76 & 1) != (v78 & 1)) {
        goto LABEL_37;
      }
      unint64_t v72 = v77;
      uint64_t v79 = (void *)v126[0];
      if ((v76 & 1) == 0) {
        goto LABEL_23;
      }
LABEL_21:
      uint64_t v80 = v79[7];
      swift_bridgeObjectRelease();
      *(void *)(v80 + 8 * v72) = _swiftEmptyArrayStorage;
LABEL_25:
      *(void *)uint64_t v117 = v79;
      swift_bridgeObjectRelease();
      swift_endAccess();
      a3 = v122;
      a5 = v118;
      uint64_t v50 = v123;
      goto LABEL_26;
    }
    if (v68)
    {
      uint64_t v79 = (void *)v126[0];
      if (v71) {
        goto LABEL_21;
      }
    }
    else
    {
      sub_10091E1D0();
      uint64_t v79 = (void *)v126[0];
      if (v76) {
        goto LABEL_21;
      }
    }
LABEL_23:
    v79[(v72 >> 6) + 8] |= 1 << v72;
    uint64_t v81 = v79[6] + 16 * v72;
    *(void *)uint64_t v81 = v58;
    *(unsigned char *)(v81 + 8) = v70;
    *(void *)(v79[7] + 8 * v72) = _swiftEmptyArrayStorage;
    uint64_t v82 = v79[2];
    BOOL v83 = __OFADD__(v82, 1);
    uint64_t v84 = v82 + 1;
    if (v83) {
      goto LABEL_36;
    }
    v79[2] = v84;
    goto LABEL_25;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  swift_release();
  swift_release();
  sub_10096D3C0();
  __break(1u);
}

uint64_t sub_1006EAFC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  Swift::String v6 = (unsigned char *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
    swift_beginAccess();
    *Swift::String v6 = 1;
    return a3(a1);
  }
  return result;
}

void sub_1006EB04C(uint64_t a1, NSObject *a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, unint64_t a7, void (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v47 = a9;
  uint64_t v17 = sub_10096B480();
  __chkstk_darwin(v17);
  unsigned int v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
LABEL_4:
    dispatch_group_leave(a2);
    return;
  }
  uint64_t v46 = v18;
  swift_errorRetain();
  if (sub_1006EA1E8(a1))
  {
    swift_errorRelease();
    goto LABEL_4;
  }
  uint64_t v45 = a8;
  id v21 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  sub_1000CE628(a7);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  sub_1000CE628(a7);
  id v22 = sub_10096B470();
  os_log_type_t v23 = sub_10096C5D0();
  int v44 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v43 = a2;
    uint64_t v25 = v24;
    unint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    v52[0] = v42;
    *(_DWORD *)uint64_t v25 = 136446978;
    os_log_t v40 = v22;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_100719D44(a3, a4, v52);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v26 = VFSItemID.parseableString.getter(a5, a6);
    uint64_t v51 = sub_100719D44(v26, v27, v52);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2080;
    unint64_t v28 = sub_1005232CC(a7);
    unint64_t v30 = v29;
    sub_1000B6C28(a7);
    uint64_t v51 = sub_100719D44(v28, v30, v52);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_1000B6C28(a7);
    *(_WORD *)(v25 + 32) = 2112;
    swift_getErrorValue();
    id v31 = Error.prettyDescription.getter(v48);
    uint64_t v51 = (uint64_t)v31;
    sub_10096C8C0();
    *unint64_t v41 = v31;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v32 = v40;
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v44, "🚧  %{public}s of %s failed for %s: %@", (uint8_t *)v25, 0x2Au);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v43;
    swift_slowDealloc();
  }
  else
  {
    sub_1000B6C28(a7);
    swift_bridgeObjectRelease_n();
    sub_1000B6C28(a7);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v17);
  type metadata accessor for NSFileProviderError(0);
  uint64_t v51 = -2005;
  sub_10002B7CC(&qword_100ACE1E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(inited + 40) = v34;
  swift_getErrorValue();
  uint64_t v35 = v49;
  uint64_t v36 = v50;
  *(void *)(inited + 72) = v50;
  unint64_t v37 = sub_10009C958((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v37, v35, v36);
  sub_10004621C(inited);
  sub_1006F9218((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
  sub_10096ABD0();
  unint64_t v38 = (void *)v52[0];
  v45(v52[0]);
  swift_errorRelease();

  dispatch_group_leave(a2);
}

void sub_1006EB5C4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, void (*a10)(void *), uint64_t a11)
{
  uint64_t v18 = sub_10096B480();
  uint64_t v32 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unsigned int v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    id v21 = a10;
    if (a2)
    {
      sub_1006EA340(a4, a5, a6, a7, a8, a9, a10, a11);
    }
    else
    {
      uint64_t v31 = a11;
      id v22 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      swift_bridgeObjectRetain();
      sub_1000CE628(a6);
      swift_bridgeObjectRetain();
      sub_1000CE628(a6);
      os_log_type_t v23 = sub_10096B470();
      os_log_type_t v24 = sub_10096C5D0();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        uint64_t v34 = v29;
        *(_DWORD *)uint64_t v25 = 136446466;
        unint64_t v30 = a10;
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_100719D44(a4, a5, &v34);
        sub_10096C8C0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v25 + 12) = 2080;
        unint64_t v26 = sub_1005232CC(a6);
        unint64_t v28 = v27;
        sub_1000B6C28(a6);
        uint64_t v33 = sub_100719D44(v26, v28, &v34);
        id v21 = v30;
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        sub_1000B6C28(a6);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "🚧  finished ingestions of %{public}s for %s", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1000B6C28(a6);
        swift_bridgeObjectRelease_n();
        sub_1000B6C28(a6);
      }

      (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v18);
      v21(0);
    }
  }
}

uint64_t sub_1006EB908(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v46 = a6;
  uint64_t v48 = a5;
  int v47 = a2;
  uint64_t v55 = a1;
  uint64_t v8 = (void *)*a3;
  uint64_t v51 = sub_10096B730();
  uint64_t v54 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v50 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096B7D0();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  __chkstk_darwin(v10);
  uint64_t v49 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t))v8[74];
  uint64_t v43 = (void **)v8[72];
  int v44 = v12;
  uint64_t v13 = v43;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v39 = (char *)&v38 - v16;
  uint64_t v42 = v8[73];
  unint64_t v41 = (void *)v8[75];
  uint64_t v18 = a3;
  os_log_t v40 = a3;
  uint64_t aBlock = v13;
  uint64_t v58 = v42;
  int v59 = v12;
  uint64_t v60 = v41;
  uint64_t v19 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  __chkstk_darwin(v19);
  os_log_type_t v23 = (char *)&v38 - v22;
  id v45 = (id)v18[8];
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v38 - v22, a4, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v46, AssociatedTypeWitness);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v25 = (v21 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (*(unsigned __int8 *)(v15 + 80) + v26 + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v42;
  *(void *)(v28 + 16) = v43;
  *(void *)(v28 + 24) = v29;
  unint64_t v30 = v41;
  *(void *)(v28 + 32) = v44;
  *(void *)(v28 + 40) = v30;
  *(void *)(v28 + 48) = v55;
  char v31 = v47 & 1;
  *(unsigned char *)(v28 + 56) = v47 & 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v28 + v24, v23, v19);
  *(void *)(v28 + v25) = v48;
  *(void *)(v28 + v26) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v28 + v27, v39, v38);
  Swift::UInt64 v61 = sub_1006F3634;
  uint64_t v62 = v28;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v58 = 1107296256;
  int v59 = sub_100020480;
  uint64_t v60 = &unk_100A96FF8;
  uint64_t v32 = _Block_copy(&aBlock);
  id v33 = v45;
  sub_100359040(v55, v31);
  swift_errorRetain();
  swift_retain();
  uint64_t v34 = v49;
  sub_10096B780();
  uint64_t v56 = _swiftEmptyArrayStorage;
  sub_1006F9218((unint64_t *)&unk_100ACAEF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002B7CC((uint64_t *)&unk_100ACB5C0);
  sub_100025500((unint64_t *)&qword_100ACAF00, (uint64_t *)&unk_100ACB5C0);
  uint64_t v35 = v50;
  uint64_t v36 = v51;
  sub_10096CA60();
  sub_10096C6B0();
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v53);
  return swift_release();
}

char *sub_1006EBEA0(uint64_t a1, char a2, void (*a3)(uint64_t), uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v193 = a6;
  uint64_t v190 = a4;
  uint64_t v219 = a3;
  uint64_t v8 = *(void *)(*a5 + 576);
  uint64_t v9 = *(char **)(*a5 + 584);
  uint64_t v10 = *a5;
  uint64_t v11 = *(void (***)(char *, char *, uint64_t))(*a5 + 592);
  uint64_t v192 = a5;
  uint64_t v12 = *(void (***)(unint64_t *, uint64_t))(v10 + 600);
  uint64_t v222 = type metadata accessor for UserRequest();
  uint64_t v13 = sub_100011348(255, &qword_100AD62F0);
  uint64_t v223 = v13;
  uint64_t v14 = sub_10096B7D0();
  uint64_t v224 = v14;
  uint64_t v225 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v16 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v17 = __chkstk_darwin(TupleTypeMetadata);
  uint64_t v194 = (unint64_t *)((char *)&v187 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v199 = (unint64_t *)((char *)&v187 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v206 = (unint64_t *)((char *)&v187 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  int64_t v210 = (unint64_t *)((char *)&v187 - v24);
  __chkstk_darwin(v23);
  long long v220 = (unint64_t *)((char *)&v187 - v25);
  uint64_t v215 = sub_10096C890();
  unint64_t v217 = *(void *)(v215 - 8);
  uint64_t v26 = __chkstk_darwin(v215);
  uint64_t v205 = (char *)&v187 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  long long v216 = (char *)&v187 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v204 = (unint64_t *)((char *)&v187 - v31);
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v200 = (unint64_t *)((char *)&v187 - v33);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v214 = (char *)&v187 - v35;
  __chkstk_darwin(v34);
  uint64_t v211 = (char *)&v187 - v36;
  uint64_t v201 = a1;
  uint64_t v212 = v16;
  uint64_t v221 = TupleTypeMetadata;
  if ((a2 & 1) == 0)
  {
    uint64_t v222 = v8;
    uint64_t v223 = (uint64_t)v9;
    uint64_t v224 = (uint64_t)v11;
    uint64_t v225 = (uint64_t)v12;
    uint64_t v37 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
    uint64_t v38 = (unint64_t *)v8;
    uint64_t v39 = *(void *)((char *)v219 + *(int *)(v37 + 56));
    int64_t v210 = v38;
    uint64_t v222 = (uint64_t)v38;
    uint64_t v223 = (uint64_t)v9;
    uint64_t v224 = (uint64_t)v11;
    uint64_t v225 = (uint64_t)v12;
    uint64_t v222 = type metadata accessor for UserRequest();
    uint64_t v223 = v13;
    uint64_t v224 = v14;
    uint64_t v225 = sub_100033BE8((uint64_t *)&unk_100ADA328);
    swift_getTupleTypeMetadata();
    v40._object = &type metadata for ObjectIdentifier;
    v40._uint64_t countAndFlagsBits = v39;
    uint64_t countAndFlagsBits = Filename.init(rawValue:)(v40).rawValue._countAndFlagsBits;
    uint64_t v42 = *(void *)(countAndFlagsBits + 64);
    uint64_t v189 = countAndFlagsBits + 64;
    uint64_t v43 = 1 << *(unsigned char *)(countAndFlagsBits + 32);
    uint64_t v44 = -1;
    if (v43 < 64) {
      uint64_t v44 = ~(-1 << v43);
    }
    unint64_t v45 = v44 & v42;
    uint64_t v214 = (char *)(v16 + 56);
    uint64_t v195 = v16 + 16;
    uint64_t v213 = v16 + 48;
    unint64_t v198 = (void (**)(char *, unint64_t *, uint64_t))(v217 + 32);
    uint64_t v197 = (void (**)(unint64_t *, uint64_t))(v16 + 8);
    uint64_t v188 = (void *)(a1 + 40);
    int64_t v191 = (unint64_t)(v43 + 63) >> 6;
    int64_t v187 = v191 - 1;
    uint64_t v196 = countAndFlagsBits;
    uint64_t result = (char *)swift_bridgeObjectRetain();
    int64_t v202 = 0;
    uint64_t v203 = v9;
    unint64_t v208 = v12;
    uint64_t v209 = v11;
    int v47 = v206;
    while (1)
    {
      uint64_t v54 = (unint64_t *)v205;
      if (v45) {
        break;
      }
      int64_t v60 = v202 + 1;
      if (__OFADD__(v202, 1)) {
        goto LABEL_87;
      }
      if (v60 < v191)
      {
        unint64_t v61 = *(void *)(v189 + 8 * v60);
        if (v61) {
          goto LABEL_13;
        }
        int64_t v62 = v202 + 2;
        ++v202;
        if (v60 + 1 < v191)
        {
          unint64_t v61 = *(void *)(v189 + 8 * v62);
          if (v61) {
            goto LABEL_16;
          }
          int64_t v202 = v60 + 1;
          if (v60 + 2 < v191)
          {
            unint64_t v61 = *(void *)(v189 + 8 * (v60 + 2));
            if (v61)
            {
              v60 += 2;
              goto LABEL_13;
            }
            int64_t v62 = v60 + 3;
            int64_t v202 = v60 + 2;
            if (v60 + 3 < v191)
            {
              unint64_t v61 = *(void *)(v189 + 8 * v62);
              if (!v61)
              {
                while (1)
                {
                  int64_t v60 = v62 + 1;
                  if (__OFADD__(v62, 1)) {
                    goto LABEL_90;
                  }
                  if (v60 >= v191)
                  {
                    int64_t v202 = v187;
                    goto LABEL_27;
                  }
                  unint64_t v61 = *(void *)(v189 + 8 * v60);
                  ++v62;
                  if (v61) {
                    goto LABEL_13;
                  }
                }
              }
LABEL_16:
              int64_t v60 = v62;
LABEL_13:
              uint64_t v56 = (v61 - 1) & v61;
              unint64_t v57 = __clz(__rbit64(v61)) + (v60 << 6);
              int64_t v202 = v60;
LABEL_9:
              uint64_t v211 = (char *)v56;
              uint64_t v58 = v221;
              (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v205, *(void *)(v196 + 56) + *(void *)(v16 + 72) * v57, v221);
              int v59 = *(void (**)(unint64_t *, void, uint64_t, uint64_t))(v16 + 56);
              v59(v54, 0, 1, v58);
              goto LABEL_28;
            }
          }
        }
      }
LABEL_27:
      int v59 = *(void (**)(unint64_t *, void, uint64_t, uint64_t))v214;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v214)(v205, 1, 1, v221);
      uint64_t v211 = 0;
LABEL_28:
      uint64_t v63 = *(unsigned int (**)(unint64_t *, uint64_t, uint64_t))v213;
      uint64_t v64 = 1;
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))v213)(v54, 1, v221) != 1)
      {
        unint64_t v65 = v220;
        uint64_t v66 = *(int *)(v221 + 64);
        uint64_t v67 = (char *)v54 + v66;
        uint64_t v68 = *(int *)(v221 + 80);
        unint64_t v69 = v54[1];
        *long long v220 = *v54;
        v65[1] = v69;
        char v70 = (char *)v65 + v66;
        uint64_t v71 = sub_10096B7D0();
        unint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32);
        v72(v70, v67, v71);
        uint64_t v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = *(_OWORD *)&v205[v68];
        unint64_t v74 = v65[1];
        uint64_t v75 = v204;
        char v76 = (char *)v204 + *(int *)(v221 + 64);
        unint64_t v77 = (uint64_t (**)(uint64_t))((char *)v204 + *(int *)(v221 + 80));
        *uint64_t v204 = *v65;
        v75[1] = v74;
        v72(v76, v70, v71);
        uint64_t v64 = 0;
        *unint64_t v77 = sub_1006FB2C0;
        v77[1] = (uint64_t (*)(uint64_t))v73;
        int v47 = v206;
      }
      char v78 = v204;
      uint64_t v79 = v221;
      v59(v204, v64, 1, v221);
      uint64_t v80 = v200;
      (*v198)((char *)v200, v78, v215);
      if (v63(v80, 1, v79) == 1) {
        return (char *)swift_release();
      }
      uint64_t v81 = v221;
      uint64_t v82 = *(int *)(v221 + 64);
      BOOL v83 = (unint64_t *)((char *)v47 + v82);
      uint64_t v84 = *(int *)(v221 + 80);
      os_log_type_t v85 = (uint64_t (*)(char *, uint64_t))((char *)v47 + v84);
      int v86 = v47;
      unint64_t v88 = *v80;
      uint64_t v87 = (void *)v80[1];
      uint64_t v89 = (char *)v80 + v82;
      unint64_t v91 = *(void (**)(uint64_t))((char *)v80 + v84);
      uint64_t v90 = *(unint64_t *)((char *)v80 + v84 + 8);
      *int v86 = *v80;
      v86[1] = (unint64_t)v87;
      uint64_t v92 = sub_10096B7D0();
      uint64_t v93 = *(void *)(v92 - 8);
      (*(void (**)(void *, char *, uint64_t))(v93 + 32))(v83, v89, v92);
      *(void *)os_log_type_t v85 = v91;
      *((void *)v85 + 1) = v90;
      int64_t v207 = v85;
      uint64_t v94 = v199;
      unsigned int v95 = (char *)v199 + *(int *)(v81 + 64);
      uint64_t v96 = *(int *)(v81 + 80);
      unint64_t v97 = v88;
      uint64_t v98 = v95;
      uint64_t v99 = (unint64_t *)((char *)v199 + v96);
      *unint64_t v199 = v97;
      v94[1] = (unint64_t)v87;
      uint64_t v100 = *(char **)(v93 + 16);
      unint64_t v217 = v93 + 16;
      uint64_t v218 = v83;
      uint64_t v101 = v83;
      uint64_t v102 = v90;
      long long v216 = v100;
      ((void (*)(char *, void *, uint64_t))v100)(v95, v101, v92);
      uint64_t v219 = v91;
      *uint64_t v99 = v91;
      v99[1] = v90;
      uint64_t v103 = sub_1006A93D4(v97);
      if (v103)
      {
        id v104 = v103;
        id v105 = v87;
        swift_retain();
        sub_1000CE628(v97);
        uint64_t v106 = *(void (**)(char *, uint64_t))(v93 + 8);
        v106(v98, v92);
        if ([v104 selectedForMaterialization])
        {
          uint64_t v48 = v220;
          uint64_t v49 = v221;
          uint64_t v50 = (char *)v220 + *(int *)(v221 + 64);
          uint64_t v51 = *(int *)(v221 + 80);
          int64_t v207 = (uint64_t (*)(char *, uint64_t))v106;
          uint64_t v52 = (void (**)(uint64_t))((char *)v220 + v51);
          *long long v220 = v97;
          v48[1] = (unint64_t)v105;
          ((void (*)(char *, void *, uint64_t))v216)(v50, v218, v92);
          sub_1000B6C28(v97);

          uint64_t v53 = v219;
          *uint64_t v52 = v219;
          v52[1] = (void (*)(uint64_t))v102;
          v53(v190);
          swift_release();

          int v47 = v206;
          (*v197)(v206, v49);
          uint64_t result = (char *)v207(v50, v92);
          goto LABEL_6;
        }
      }
      else
      {
        id v107 = v87;
        swift_retain();
        sub_1000CE628(v97);
        uint64_t v106 = *(void (**)(char *, uint64_t))(v93 + 8);
        v106(v98, v92);
      }
      uint64_t v108 = v194;
      uint64_t v109 = (char *)v194 + *(int *)(v221 + 64);
      uint64_t v110 = (void (**)(uint64_t))((char *)v194 + *(int *)(v221 + 80));
      *uint64_t v194 = v97;
      v108[1] = (unint64_t)v87;
      ((void (*)(char *, void *, uint64_t))v216)(v109, v218, v92);
      *uint64_t v110 = v219;
      v110[1] = (void (*)(uint64_t))v90;
      unsigned int v111 = sub_1006A93D4(v97);
      if (v111)
      {
        uint64_t v112 = v111;
        uint64_t v113 = (char *)[v111 requestedExtent];
        uint64_t v115 = v114;

        uint64_t result = (char *)((uint64_t (*)(char *, uint64_t))v106)(v109, v92);
        if (v113 != (char *)-1 && v115 != -1)
        {
          uint64_t v116 = &v113[v115];
          if (__OFADD__(v113, v115)) {
            goto LABEL_88;
          }
          if ((uint64_t)v116 < (uint64_t)v113) {
            goto LABEL_89;
          }
          uint64_t v117 = *(void *)(v201 + 16);
          if (v117)
          {
            uint64_t v118 = *(void *)(v201 + 32);
            if ((uint64_t)v116 >= v118)
            {
              unint64_t v119 = v188;
              while ((uint64_t)v113 < v118 || (uint64_t)v113 >= *v119 || *v119 < (uint64_t)v116)
              {
                if (--v117)
                {
                  uint64_t v118 = v119[1];
                  v119 += 2;
                  if ((uint64_t)v116 >= v118) {
                    continue;
                  }
                }
                goto LABEL_51;
              }
              uint64_t v131 = v220;
              uint64_t v132 = v221;
              int64_t v133 = (char *)v220 + *(int *)(v221 + 64);
              int64_t v134 = (uint64_t (*)(char *, uint64_t))v106;
              id v135 = (void (**)(uint64_t))((char *)v220 + *(int *)(v221 + 80));
              *long long v220 = v97;
              v131[1] = (unint64_t)v87;
              ((void (*)(char *, void *, uint64_t))v216)(v133, v218, v92);
              sub_1000B6C28(v97);

              uint64_t v136 = v219;
              *id v135 = v219;
              v135[1] = (void (*)(uint64_t))v102;
              v136(v190);
              swift_release();
              int v47 = v206;
              (*v197)(v206, v132);
              uint64_t result = (char *)v134(v133, v92);
              goto LABEL_6;
            }
          }
        }
LABEL_51:
      }
      else
      {

        v106(v109, v92);
      }
      uint64_t v121 = v106;
      unint64_t v122 = v218;
      id v123 = sub_1000B5C20(v193, v97, (uint64_t)v218, (uint64_t)v219, v90);
      swift_release();
      sub_1000B6C28(v97);
      uint64_t v124 = v220;
      uint64_t v125 = v221;
      uint64_t v126 = (char *)v220 + *(int *)(v221 + 64);
      uint64_t v127 = *(int *)(v221 + 80);
      Swift::UInt64 v128 = v122;
      int v47 = v206;
      char v129 = (void *)v206[1];
      *long long v220 = *v206;
      v124[1] = (unint64_t)v129;
      ((void (*)(char *, void *, uint64_t))v216)(v126, v128, v92);
      *(_OWORD *)((char *)v124 + v127) = *(_OWORD *)v207;
      id v130 = v129;
      v121(v126, v92);
      uint64_t result = (char *)[v130 totalUnitCount];
      if (__OFADD__(result, 1))
      {
        __break(1u);
        goto LABEL_86;
      }
      [v130 setTotalUnitCount:result + 1];
      [v130 addChild:v123 withPendingUnitCount:1];

      uint64_t result = (char *)((uint64_t (*)(unint64_t *, uint64_t))*v197)(v47, v125);
LABEL_6:
      unint64_t v45 = (unint64_t)v211;
      uint64_t v16 = v212;
    }
    unint64_t v55 = __clz(__rbit64(v45));
    uint64_t v56 = (v45 - 1) & v45;
    unint64_t v57 = v55 | (v202 << 6);
    goto LABEL_9;
  }
  uint64_t v222 = v8;
  uint64_t v223 = (uint64_t)v9;
  uint64_t v224 = (uint64_t)v11;
  uint64_t v225 = (uint64_t)v12;
  uint64_t v137 = *(void *)((char *)v219 + *(int *)(type metadata accessor for ConcreteDatabase.MaterializationRequest() + 56));
  uint64_t v222 = v8;
  uint64_t v223 = (uint64_t)v9;
  uint64_t v224 = (uint64_t)v11;
  uint64_t v225 = (uint64_t)v12;
  uint64_t v222 = type metadata accessor for UserRequest();
  uint64_t v223 = v13;
  uint64_t v224 = v14;
  uint64_t v225 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  swift_getTupleTypeMetadata();
  v138._object = &type metadata for ObjectIdentifier;
  v138._uint64_t countAndFlagsBits = v137;
  uint64_t v139 = Filename.init(rawValue:)(v138).rawValue._countAndFlagsBits;
  uint64_t v140 = *(void *)(v139 + 64);
  uint64_t v204 = (unint64_t *)(v139 + 64);
  uint64_t v141 = 1 << *(unsigned char *)(v139 + 32);
  uint64_t v142 = -1;
  if (v141 < 64) {
    uint64_t v142 = ~(-1 << v141);
  }
  unint64_t v143 = v142 & v140;
  sub_100359040(a1, 1);
  uint64_t v205 = (char *)((unint64_t)(v141 + 63) >> 6);
  uint64_t v206 = (unint64_t *)(v16 + 16);
  uint64_t v218 = (void *)(v16 + 56);
  uint64_t v219 = (void (*)(uint64_t))(v16 + 48);
  unint64_t v208 = (void (**)(unint64_t *, uint64_t))(v16 + 8);
  uint64_t v209 = (void (**)(char *, char *, uint64_t))(v217 + 32);
  uint64_t v203 = v205 - 1;
  int64_t v207 = (uint64_t (*)(char *, uint64_t))v139;
  uint64_t result = (char *)swift_bridgeObjectRetain();
  uint64_t v213 = 0;
  uint64_t v144 = (unint64_t *)v216;
  if (!v143) {
    goto LABEL_62;
  }
LABEL_60:
  unint64_t v161 = __clz(__rbit64(v143));
  uint64_t v162 = (v143 - 1) & v143;
  unint64_t v163 = v161 | (v213 << 6);
  while (2)
  {
    unint64_t v217 = v162;
    uint64_t v164 = v221;
    (*(void (**)(unint64_t *, unint64_t, uint64_t))(v16 + 16))(v144, *((void *)v207 + 7) + *(void *)(v16 + 72) * v163, v221);
    __int16 v165 = *(void (**)(unint64_t *, void, uint64_t, uint64_t))(v16 + 56);
    v165(v144, 0, 1, v164);
    while (1)
    {
      uint64_t v169 = *(unsigned int (**)(unint64_t *, uint64_t, uint64_t))v219;
      uint64_t v170 = 1;
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))v219)(v144, 1, v221) != 1)
      {
        long long v171 = v220;
        uint64_t v172 = *(int *)(v221 + 64);
        uint64_t v173 = (char *)v144 + v172;
        uint64_t v174 = *(int *)(v221 + 80);
        unint64_t v175 = v144[1];
        *long long v220 = *v144;
        v171[1] = v175;
        uint64_t v176 = (char *)v171 + v172;
        uint64_t v177 = sub_10096B7D0();
        uint64_t v178 = *(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32);
        v178(v176, v173, v177);
        uint64_t v179 = swift_allocObject();
        *(_OWORD *)(v179 + 16) = *(_OWORD *)&v216[v174];
        unint64_t v180 = v171[1];
        os_log_t v181 = v214;
        uint64_t v182 = &v214[*(int *)(v221 + 64)];
        uint64_t v183 = (uint64_t (**)(uint64_t))&v214[*(int *)(v221 + 80)];
        *(void *)uint64_t v214 = *v171;
        *((void *)v181 + 1) = v180;
        v178(v182, v176, v177);
        uint64_t v170 = 0;
        *uint64_t v183 = sub_1006FB2C0;
        v183[1] = (uint64_t (*)(uint64_t))v179;
      }
      id v184 = v214;
      uint64_t v185 = v221;
      v165((unint64_t *)v214, v170, 1, v221);
      uint64_t v186 = (unint64_t *)v211;
      (*v209)(v211, v184, v215);
      if (v169(v186, 1, v185) == 1)
      {
        swift_release();
        return (char *)sub_10058BC54(v201, 1);
      }
      unint64_t v145 = v220;
      uint64_t v146 = *(int *)(v221 + 64);
      uint64_t v147 = (char *)v220 + v146;
      unint64_t v148 = *v186;
      unint64_t v149 = v186[1];
      unint64_t v150 = (char *)v186 + v146;
      uint64_t v151 = *(int *)(v221 + 80);
      uint64_t v153 = *(void (**)(uint64_t))((char *)v186 + v151);
      int64_t v152 = *(void (**)(uint64_t))((char *)v186 + v151 + 8);
      uint64_t v154 = (void (**)(uint64_t))((char *)v220 + v151);
      *long long v220 = v148;
      v145[1] = v149;
      uint64_t v155 = sub_10096B7D0();
      uint64_t v156 = *(void *)(v155 - 8);
      (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v147, v150, v155);
      *uint64_t v154 = v153;
      v154[1] = v152;
      BOOL v157 = v210;
      unint64_t v158 = (char *)v210 + *(int *)(v221 + 64);
      uint64_t v159 = (void (**)(uint64_t))((char *)v210 + *(int *)(v221 + 80));
      *int64_t v210 = v148;
      v157[1] = v149;
      (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v158, v147, v155);
      *uint64_t v159 = v153;
      v159[1] = v152;
      uint64_t v160 = v201;
      sub_100359040(v201, 1);
      swift_retain();
      v153(v160);
      sub_10058BC54(v160, 1);
      swift_release();
      (*v208)(v145, v221);
      uint64_t result = (char *)(*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v158, v155);
      uint64_t v16 = v212;
      unint64_t v143 = v217;
      uint64_t v144 = (unint64_t *)v216;
      if (v217) {
        goto LABEL_60;
      }
LABEL_62:
      uint64_t v166 = v213 + 1;
      if (__OFADD__(v213, 1))
      {
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
        goto LABEL_91;
      }
      if (v166 < (uint64_t)v205)
      {
        unint64_t v167 = v204[v166];
        if (v167) {
          goto LABEL_65;
        }
        uint64_t v168 = v213 + 2;
        ++v213;
        if (v166 + 1 < (uint64_t)v205)
        {
          unint64_t v167 = v204[v168];
          if (v167) {
            goto LABEL_68;
          }
          uint64_t v213 = v166 + 1;
          if (v166 + 2 < (uint64_t)v205)
          {
            unint64_t v167 = v204[v166 + 2];
            if (v167)
            {
              v166 += 2;
              goto LABEL_65;
            }
            uint64_t v168 = v166 + 3;
            uint64_t v213 = v166 + 2;
            if (v166 + 3 < (uint64_t)v205) {
              break;
            }
          }
        }
      }
LABEL_79:
      __int16 v165 = (void (*)(unint64_t *, void, uint64_t, uint64_t))*v218;
      ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))*v218)(v144, 1, 1, v221);
      unint64_t v217 = 0;
    }
    unint64_t v167 = v204[v168];
    if (v167)
    {
LABEL_68:
      uint64_t v166 = v168;
LABEL_65:
      uint64_t v162 = (v167 - 1) & v167;
      unint64_t v163 = __clz(__rbit64(v167)) + (v166 << 6);
      uint64_t v213 = v166;
      continue;
    }
    break;
  }
  while (1)
  {
    uint64_t v166 = v168 + 1;
    if (__OFADD__(v168, 1)) {
      break;
    }
    if (v166 >= (uint64_t)v205)
    {
      uint64_t v213 = (uint64_t)v203;
      goto LABEL_79;
    }
    unint64_t v167 = v204[v166];
    ++v168;
    if (v167) {
      goto LABEL_65;
    }
  }
LABEL_91:
  __break(1u);
  return result;
}

uint64_t sub_1006ED17C(int a1, uint64_t a2, unint64_t a3, void *a4, char *a5, void (*a6)(void), void (*a7)(void))
{
  uint64_t v245 = a7;
  uint64_t v244 = a6;
  uint64_t v226 = a5;
  uint64_t v228 = a4;
  unint64_t v227 = a3;
  uint64_t v249 = a2;
  int v240 = a1;
  uint64_t v8 = *(void *)(*(void *)v7 + 576);
  uint64_t v9 = *(void *)(*(void *)v7 + 584);
  uint64_t v10 = *(void *)(*(void *)v7 + 592);
  uint64_t v11 = *(void *)(*(void *)v7 + 600);
  uint64_t v278 = type metadata accessor for UserRequest();
  uint64_t v234 = sub_100011348(255, &qword_100AD62F0);
  uint64_t v279 = v234;
  uint64_t v280 = sub_10096B7D0();
  uint64_t v281 = sub_100033BE8(&qword_100AD9D00);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v217 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v218 = (uint64_t *)((char *)&v206 - v13);
  uint64_t v267 = sub_10096B7D0();
  uint64_t v235 = *(void *)(v267 - 8);
  uint64_t v14 = __chkstk_darwin(v267);
  uint64_t v225 = (uint64_t)&v206 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v216 = (char *)&v206 - v16;
  uint64_t v278 = v8;
  uint64_t v279 = v9;
  uint64_t v280 = v10;
  uint64_t v281 = v11;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  uint64_t v211 = sub_10096C890();
  uint64_t v210 = *(void *)(v211 - 8);
  uint64_t v18 = __chkstk_darwin(v211);
  uint64_t v215 = (uint64_t)&v206 - v19;
  uint64_t v213 = v17;
  uint64_t v214 = *(void *)(v17 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v209 = (unsigned __int8 *)&v206 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v212 = (char *)&v206 - v22;
  uint64_t v23 = type metadata accessor for SnapshotItem();
  uint64_t v222 = sub_10096C890();
  uint64_t v221 = *(void *)(v222 - 8);
  uint64_t v24 = __chkstk_darwin(v222);
  uint64_t v268 = (char *)&v206 - v25;
  uint64_t v233 = v23;
  uint64_t v232 = *(void *)(v23 - 8);
  __chkstk_darwin(v24);
  long long v229 = (char *)&v206 - v26;
  uint64_t v260 = sub_10096C890();
  uint64_t v269 = *(char **)(v260 - 8);
  uint64_t v27 = __chkstk_darwin(v260);
  uint64_t v265 = (uint64_t *)((char *)&v206 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v259 = (char *)&v206 - v30;
  uint64_t v261 = TupleTypeMetadata;
  uint64_t v253 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v258 = (unint64_t *)((char *)&v206 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v264 = (unint64_t *)((char *)&v206 - v34);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v266 = (char *)&v206 - v36;
  __chkstk_darwin(v35);
  uint64_t v270 = (char *)&v206 - v37;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v242 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v39 = __chkstk_darwin(AssociatedTypeWitness);
  unint64_t v243 = (char *)&v206 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v271 = (char *)&v206 - v41;
  uint64_t v278 = v8;
  uint64_t v279 = v9;
  uint64_t v236 = v9;
  uint64_t v280 = v10;
  uint64_t v281 = v11;
  uint64_t v237 = v11;
  uint64_t v42 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v43 = sub_10096C890();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v231 = (char *)&v206 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v206 - v48;
  uint64_t v50 = *(char **)(v42 - 8);
  __chkstk_darwin(v47);
  uint64_t v52 = (unsigned __int8 *)&v206 - v51;
  uint64_t v246 = v7;
  uint64_t v53 = v7 + qword_100B0B318;
  swift_beginAccess();
  uint64_t v230 = v53;
  uint64_t v239 = v10;
  uint64_t v238 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v54 = *(void *)(AssociatedConformanceWitness + 32);
  swift_bridgeObjectRetain();
  unint64_t v248 = (char *)AssociatedTypeWitness;
  unint64_t v241 = v54;
  sub_10096BAA0();
  swift_bridgeObjectRelease();
  unint64_t v55 = (void (**)(unsigned __int8 *, uint64_t))(v50 + 48);
  uint64_t v56 = (char *)*((void *)v50 + 6);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v56)(v49, 1, v42) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v43);
    uint64_t v49 = v248;
    uint64_t v57 = v261;
    unint64_t v55 = (void (**)(unsigned __int8 *, uint64_t))v50;
    uint64_t v56 = v243;
    uint64_t v58 = v268;
LABEL_35:
    uint64_t v111 = v249;
    unint64_t v54 = 0;
    (*(void (**)(uint64_t, uint64_t))(**(void **)(v246 + 32) + 240))(v249, 1);
    uint64_t v223 = v42;
    uint64_t v113 = v232;
    uint64_t v114 = v233;
    int v115 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v232 + 48))(v58, 1, v233);
    if (v115 == 1)
    {
      (*(void (**)(char *, uint64_t))(v221 + 8))(v58, v222);
      (*(void (**)(char *))(AssociatedConformanceWitness + 48))(v49);
      uint64_t v116 = v111;
      char v117 = sub_10096BBE0();
      uint64_t v118 = v242;
      (*(void (**)(char *, char *))(v242 + 8))(v56, v49);
      if (v117)
      {
        (*(void (**)(char *, uint64_t, char *))(v118 + 16))(v56, v116, v49);
        sub_10096B790();
        uint64_t v278 = v238;
        uint64_t v279 = v236;
        uint64_t v280 = v239;
        uint64_t v281 = v237;
        uint64_t v278 = type metadata accessor for UserRequest();
        uint64_t v279 = v234;
        uint64_t v280 = v267;
        uint64_t v281 = sub_100033BE8((uint64_t *)&unk_100ADA328);
        uint64_t v271 = (char *)swift_getTupleTypeMetadata();
        uint64_t v270 = (char *)swift_getTupleTypeMetadata2();
        sub_10096D230();
        swift_allocObject();
        uint64_t v269 = (char *)sub_10096C0D0();
        int v120 = v119;
        uint64_t v121 = TupleTypeMetadata2;
        unint64_t v122 = (void *)((char *)v218 + *(int *)(TupleTypeMetadata2 + 48));
        id v123 = v228;
        void *v218 = v228;
        uint64_t v124 = (char *)v122 + *(int *)(v57 + 64);
        uint64_t v125 = (void (**)(void))((char *)v122 + *(int *)(v57 + 80));
        unint64_t v126 = v227;
        *unint64_t v122 = v227;
        v122[1] = (unint64_t)v123;
        uint64_t v224 = v55;
        unint64_t v127 = v126;
        uint64_t v128 = v235;
        uint64_t v129 = v267;
        (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v124, (char *)v226, v267);
        id v130 = v244;
        uint64_t v131 = v245;
        *uint64_t v125 = v244;
        v125[1] = v131;
        *int v120 = v123;
        uint64_t v132 = (void *)((char *)v120 + *(int *)(v121 + 48));
        *uint64_t v132 = v127;
        v132[1] = (unint64_t)v123;
        (*(void (**)(char *, char *, uint64_t))(v128 + 32))((char *)v132 + *(int *)(v57 + 64), v124, v129);
        int64_t v133 = (unint64_t *)((char *)v132 + *(int *)(v57 + 80));
        uint64_t v134 = swift_allocObject();
        id v135 = v245;
        *(void *)(v134 + 16) = v130;
        *(void *)(v134 + 24) = v135;
        *int64_t v133 = sub_1006F30C4;
        v133[1] = v134;
        sub_1003FC080((uint64_t)v269);
        sub_1000CE628(v127);
        id v136 = v123;
        swift_retain();
        uint64_t v137 = sub_10096BA00();
        Swift::String v138 = v231;
        sub_1006D5FBC(v240, v225, v137, v231);
        ((void (*)(unsigned char *, void, uint64_t, uint64_t))v224[7])(v138, 0, 1, v223);
        swift_beginAccess();
        sub_10096BA80();
        sub_10096BAB0();
        swift_endAccess();
        return 1;
      }
      sub_1000DBD10();
      swift_allocError();
      *BOOL v157 = 1;
      v244();
      goto LABEL_36;
    }
    uint64_t v139 = v229;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v229, v58, v114);
    uint64_t WitnessTable = swift_getWitnessTable();
    if (FileItem.kind.getter(v114, WitnessTable) == 2)
    {
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t v140 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      ((void (*)(uint64_t))v244)(v140);
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v139, v114);
      return 0;
    }
    if (v240 == 1)
    {
      uint64_t v158 = v233;
      if (FileItem.isDataless.getter(v233, WitnessTable))
      {
        ((void (*)(void))v244)(0);
        goto LABEL_50;
      }
    }
    else
    {
      uint64_t v172 = v215;
      sub_1000DEDD8(v249, v215);
      uint64_t v173 = v214;
      uint64_t v73 = (char *)v213;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48))(v172, 1, v213) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v172, v211);
        sub_1000DBD10();
        swift_allocError();
        *uint64_t v174 = 1;
        v244();
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v232 + 8))(v139, v233);
        return 0;
      }
      uint64_t v177 = v212;
      uint64_t v271 = *(char **)(v173 + 32);
      ((void (*)(char *, uint64_t, char *))v271)(v212, v172, v73);
      uint64_t v178 = &v177[*((int *)v73 + 13)];
      if (*(void *)&v178[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)])
      {
        sub_1000DBD10();
        swift_allocError();
        *uint64_t v179 = 1;
        v244();
        swift_errorRelease();
        (*(void (**)(char *, char *))(v173 + 8))(v177, v73);
        (*(void (**)(char *, uint64_t))(v232 + 8))(v229, v233);
        return 0;
      }
      char v180 = FileItem.isDataless.getter(v233, WitnessTable);
      uint64_t v52 = v209;
      ((void (*)(unsigned __int8 *, char *, char *))v271)(v209, v177, v73);
      if (v180)
      {
        (*(void (**)(unsigned __int8 *, char *))(v214 + 8))(v52, v73);
        uint64_t v158 = v233;
      }
      else
      {
LABEL_61:
        int v181 = v52[*(int *)(type metadata accessor for ItemReconciliationHalf() + 56)];
        (*(void (**)(unsigned __int8 *, char *))(v214 + 8))(v52, v73);
        uint64_t v158 = v233;
        if (v181 == 6)
        {
          ((void (*)(void))v244)(0);
          if (!(_BYTE)v240)
          {
            uint64_t v160 = v238;
            uint64_t v162 = v236;
            uint64_t v278 = v238;
            uint64_t v279 = v236;
            uint64_t v159 = v239;
            uint64_t v161 = v237;
            uint64_t v280 = v239;
            uint64_t v281 = v237;
            uint64_t v163 = type metadata accessor for Materialization.EvictItem();
            goto LABEL_51;
          }
LABEL_50:
          uint64_t v159 = v239;
          uint64_t v160 = v238;
          uint64_t v161 = v237;
          uint64_t v162 = v236;
          uint64_t v278 = v238;
          uint64_t v279 = v236;
          uint64_t v280 = v239;
          uint64_t v281 = v237;
          uint64_t v163 = type metadata accessor for Materialization.MaterializeItem();
LABEL_51:
          uint64_t v164 = v163;
          uint64_t v165 = *(void *)(v246 + 24);
          uint64_t v278 = v160;
          uint64_t v279 = v162;
          uint64_t v280 = v159;
          uint64_t v281 = v161;
          type metadata accessor for ItemJob();
          uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
          sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
          swift_allocObject();
          uint64_t v167 = sub_10096C0D0();
          *uint64_t v168 = v164;
          uint64_t v169 = sub_1003FC080(v167);
          uint64_t v170 = v229;
          uint64_t v171 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v165 + 272))(v229, v169);
          if (!v54)
          {
            uint64_t v175 = v171;
            swift_bridgeObjectRelease();
            uint64_t v278 = v175;
            sub_10096C1C0();
            swift_getWitnessTable();
            char v176 = sub_10096C460();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v232 + 8))(v170, v233);
            return (v176 & 1) == 0;
          }
          (*(void (**)(char *, uint64_t))(v232 + 8))(v170, v233);
          swift_bridgeObjectRelease();
          swift_errorRetain();
          ((void (*)(unint64_t))v244)(v54);
          swift_errorRelease();
LABEL_36:
          swift_errorRelease();
          return 0;
        }
      }
    }
    char v182 = FileItem.kind.getter(v158, WitnessTable);
    uint64_t v224 = v55;
    uint64_t v183 = v216;
    if (v182 == 1) {
      sub_10096B790();
    }
    else {
      sub_10096B7A0();
    }
    id v184 = v218;
    (*(void (**)(char *, uint64_t, char *))(v242 + 16))(v56, v249, v49);
    uint64_t v185 = *(void (**)(uint64_t, char *, uint64_t))(v235 + 16);
    uint64_t v268 = (char *)(v235 + 16);
    uint64_t v186 = v267;
    v185(v225, v183, v267);
    uint64_t v278 = v238;
    uint64_t v279 = v236;
    uint64_t v280 = v239;
    uint64_t v281 = v237;
    uint64_t v278 = type metadata accessor for UserRequest();
    uint64_t v279 = v234;
    uint64_t v280 = v186;
    uint64_t v281 = sub_100033BE8((uint64_t *)&unk_100ADA328);
    uint64_t v271 = (char *)swift_getTupleTypeMetadata();
    uint64_t v270 = (char *)swift_getTupleTypeMetadata2();
    sub_10096D230();
    swift_allocObject();
    uint64_t v112 = 1;
    uint64_t v269 = (char *)sub_10096C0D0();
    uint64_t v188 = v187;
    uint64_t v189 = TupleTypeMetadata2;
    uint64_t v190 = (void *)((char *)v184 + *(int *)(TupleTypeMetadata2 + 48));
    int64_t v191 = v228;
    void *v184 = v228;
    uint64_t v192 = v261;
    uint64_t v193 = (char *)v190 + *(int *)(v261 + 64);
    uint64_t v194 = (void (**)(void))((char *)v190 + *(int *)(v261 + 80));
    unint64_t v195 = v227;
    *uint64_t v190 = v227;
    v190[1] = (unint64_t)v191;
    v185((uint64_t)v193, (char *)v226, v186);
    uint64_t v196 = v244;
    uint64_t v197 = v245;
    *uint64_t v194 = v244;
    v194[1] = v197;
    *uint64_t v188 = v191;
    unint64_t v198 = (void *)((char *)v188 + *(int *)(v189 + 48));
    *unint64_t v198 = v195;
    v198[1] = (unint64_t)v191;
    uint64_t v199 = v235;
    (*(void (**)(char *, char *, uint64_t))(v235 + 32))((char *)v198 + *(int *)(v192 + 64), v193, v186);
    unint64_t v200 = (unint64_t *)((char *)v198 + *(int *)(v192 + 80));
    uint64_t v201 = swift_allocObject();
    int64_t v202 = v245;
    *(void *)(v201 + 16) = v196;
    *(void *)(v201 + 24) = v202;
    *unint64_t v200 = sub_1006FB200;
    v200[1] = v201;
    sub_1003FC080((uint64_t)v269);
    sub_1000CE628(v195);
    id v203 = v191;
    swift_retain();
    uint64_t v204 = sub_10096BA00();
    uint64_t v205 = v231;
    sub_1006D5FBC(v240, v225, v204, v231);
    ((void (*)(unsigned char *, void, uint64_t, uint64_t))v224[7])(v205, 0, 1, v223);
    swift_beginAccess();
    sub_10096BA80();
    sub_10096BAB0();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v199 + 8))(v216, v186);
    (*(void (**)(char *, uint64_t))(v232 + 8))(v229, v233);
    return v112;
  }
  uint64_t v224 = (void (**)(unsigned __int8 *, uint64_t))v50;
  (*((void (**)(unsigned __int8 *, char *, uint64_t))v50 + 4))(v52, v49, v42);
  if (*v52 == v240)
  {
    uint64_t v59 = v242;
    int64_t v60 = v271;
    unint64_t v61 = v248;
    (*(void (**)(char *, uint64_t, char *))(v242 + 16))(v271, v249, v248);
    uint64_t v269 = (char *)sub_1006CC0AC();
    sub_10096BA80();
    int64_t v62 = (char *)sub_10096BA90();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v56)(v63, 1, v42))
    {
      ((void (*)(char *, void))v62)(v277, 0);
      (*(void (**)(char *, char *))(v59 + 8))(v60, v61);
    }
    else
    {
      uint64_t v141 = v261;
      uint64_t v142 = *(int *)(v261 + 64);
      unint64_t v143 = v264;
      uint64_t v268 = v62;
      uint64_t v144 = (char *)v264 + v142;
      unint64_t v145 = (void (**)(void))((char *)v264 + *(int *)(v261 + 80));
      unint64_t v146 = v227;
      *uint64_t v264 = v227;
      unint64_t v147 = v146;
      unint64_t v148 = v228;
      v143[1] = (unint64_t)v228;
      uint64_t v149 = v235;
      uint64_t v150 = v267;
      (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v144, (char *)v226, v267);
      unint64_t v208 = v52;
      uint64_t v151 = v244;
      uint64_t v223 = v42;
      int64_t v152 = v245;
      *unint64_t v145 = v244;
      v145[1] = v152;
      uint64_t v153 = v270;
      *(void *)uint64_t v270 = v147;
      *((void *)v153 + 1) = v148;
      (*(void (**)(char *, char *, uint64_t))(v149 + 32))(&v153[*(int *)(v141 + 64)], v144, v150);
      uint64_t v154 = &v153[*(int *)(v141 + 80)];
      uint64_t v155 = swift_allocObject();
      *(void *)(v155 + 16) = v151;
      *(void *)(v155 + 24) = v152;
      uint64_t v52 = v208;
      *(void *)uint64_t v154 = sub_1006FB200;
      *((void *)v154 + 1) = v155;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v253 + 56))(v153, 0, 1, v141);
      char v276 = v148;
      sub_1000CE628(v147);
      id v156 = v148;
      uint64_t v42 = v223;
      swift_retain();
      uint64_t v272 = v238;
      uint64_t v273 = v236;
      uint64_t v274 = v239;
      uint64_t v275 = v237;
      uint64_t v272 = type metadata accessor for UserRequest();
      uint64_t v273 = v234;
      uint64_t v274 = v150;
      uint64_t v275 = sub_100033BE8((uint64_t *)&unk_100ADA328);
      swift_getTupleTypeMetadata();
      sub_10096BA80();
      sub_10096BAB0();
      ((void (*)(char *, void))v268)(v277, 0);
      (*(void (**)(char *, char *))(v242 + 8))(v271, v248);
    }
    ((void (*)(uint64_t *, void))v269)(&v278, 0);
    v224[1](v52, v42);
    return 2;
  }
  uint64_t v223 = v42;
  uint64_t v64 = *(int *)(v42 + 56);
  unint64_t v208 = v52;
  uint64_t v65 = *(void *)&v52[v64];
  uint64_t v278 = v238;
  uint64_t v279 = v236;
  uint64_t v280 = v239;
  uint64_t v281 = v237;
  uint64_t v278 = type metadata accessor for UserRequest();
  uint64_t v279 = v234;
  uint64_t v280 = v267;
  uint64_t v281 = sub_100033BE8((uint64_t *)&unk_100ADA328);
  swift_getTupleTypeMetadata();
  v66._object = &type metadata for ObjectIdentifier;
  v66._uint64_t countAndFlagsBits = v65;
  uint64_t countAndFlagsBits = Filename.init(rawValue:)(v66).rawValue._countAndFlagsBits;
  uint64_t v68 = *(void *)(countAndFlagsBits + 64);
  uint64_t v247 = countAndFlagsBits + 64;
  uint64_t v69 = 1 << *(unsigned char *)(countAndFlagsBits + 32);
  uint64_t v70 = -1;
  if (v69 < 64) {
    uint64_t v70 = ~(-1 << v69);
  }
  uint64_t WitnessTable = v70 & v68;
  uint64_t v271 = (char *)(v253 + 56);
  uint64_t v251 = v253 + 16;
  uint64_t v270 = (char *)(v253 + 48);
  uint64_t v263 = (void (**)(char *, char *, uint64_t))(v235 + 32);
  unint64_t v257 = (void (**)(char *, void *, uint64_t))(v269 + 32);
  uint64_t v256 = (void (**)(char *, char *, unsigned __int8 *))(v235 + 16);
  uint64_t v255 = (void (**)(char *, uint64_t))(v253 + 8);
  uint64_t v254 = (uint64_t (**)(char *, unsigned __int8 *))(v235 + 8);
  int64_t v250 = (unint64_t)(v69 + 63) >> 6;
  int64_t v207 = v250 - 1;
  uint64_t v252 = countAndFlagsBits;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v262 = 0;
  while (1)
  {
    uint64_t v73 = v266;
    if (WitnessTable)
    {
      uint64_t v269 = (char *)((WitnessTable - 1) & WitnessTable);
      unint64_t v74 = __clz(__rbit64(WitnessTable)) | (v262 << 6);
      uint64_t v57 = v261;
      uint64_t v58 = v268;
LABEL_11:
      uint64_t v75 = v253;
      (*(void (**)(char *, unint64_t, uint64_t))(v253 + 16))(v266, *(void *)(v252 + 56) + *(void *)(v253 + 72) * v74, v57);
      char v76 = *(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56);
      v76(v73, 0, 1, v57);
      goto LABEL_30;
    }
    int64_t v77 = v262 + 1;
    uint64_t v57 = v261;
    uint64_t v58 = v268;
    if (__OFADD__(v262, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    if (v77 < v250)
    {
      unint64_t v78 = *(void *)(v247 + 8 * v77);
      if (v78) {
        goto LABEL_15;
      }
      int64_t v79 = v262 + 2;
      ++v262;
      if (v77 + 1 < v250)
      {
        unint64_t v78 = *(void *)(v247 + 8 * v79);
        if (v78) {
          goto LABEL_18;
        }
        int64_t v262 = v77 + 1;
        if (v77 + 2 < v250)
        {
          unint64_t v78 = *(void *)(v247 + 8 * (v77 + 2));
          if (v78)
          {
            v77 += 2;
            goto LABEL_15;
          }
          int64_t v79 = v77 + 3;
          int64_t v262 = v77 + 2;
          if (v77 + 3 < v250) {
            break;
          }
        }
      }
    }
LABEL_29:
    char v76 = *(void (**)(char *, void, uint64_t, uint64_t))v271;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v271)(v266, 1, 1, v261);
    uint64_t v269 = 0;
LABEL_30:
    uint64_t v80 = *(unsigned int (**)(void *, uint64_t, uint64_t))v270;
    uint64_t v81 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v270)(v73, 1, v57) != 1)
    {
      uint64_t v82 = *(int *)(v57 + 64);
      BOOL v83 = &v73[v82];
      uint64_t v84 = *(int *)(v57 + 80);
      uint64_t v85 = *((void *)v73 + 1);
      int v86 = (char *)v264;
      *uint64_t v264 = *(void *)v73;
      *((void *)v86 + 1) = v85;
      uint64_t v87 = &v86[v82];
      unint64_t v88 = *v263;
      uint64_t v89 = v267;
      (*v263)(&v86[v82], v83, v267);
      uint64_t v90 = swift_allocObject();
      *(_OWORD *)(v90 + 16) = *(_OWORD *)&v266[v84];
      uint64_t v91 = *((void *)v86 + 1);
      uint64_t v92 = v265;
      uint64_t v93 = (char *)v265 + *(int *)(v57 + 64);
      uint64_t v94 = (uint64_t (**)(uint64_t))((char *)v265 + *(int *)(v57 + 80));
      void *v265 = *(void *)v86;
      v92[1] = v91;
      uint64_t v95 = v89;
      uint64_t v58 = v268;
      v88(v93, v87, v95);
      uint64_t v81 = 0;
      *uint64_t v94 = sub_1006F30F0;
      v94[1] = (uint64_t (*)(uint64_t))v90;
    }
    uint64_t v96 = v265;
    v76((char *)v265, v81, 1, v57);
    unint64_t v97 = v259;
    (*v257)(v259, v96, v260);
    if (v80(v97, 1, v57) == 1)
    {
      swift_release();
      uint64_t v56 = v243;
      uint64_t v49 = v248;
      (*(void (**)(char *, uint64_t, char *))(v242 + 16))(v243, v249, v248);
      unint64_t v55 = v224;
      uint64_t v42 = v223;
      ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v224[7])(v231, 1, 1, v223);
      swift_beginAccess();
      sub_10096BA80();
      sub_10096BAB0();
      swift_endAccess();
      v55[1](v208, v42);
      goto LABEL_35;
    }
    uint64_t v98 = *(int *)(v57 + 64);
    uint64_t v56 = (char *)v264;
    uint64_t v99 = (char *)v264 + v98;
    uint64_t v100 = v97;
    unint64_t v101 = *v97;
    unint64_t v54 = v100[1];
    uint64_t v102 = (char *)v100 + v98;
    uint64_t v103 = *(int *)(v57 + 80);
    id v104 = (char *)v100 + v103;
    id v105 = *(void (**)(uint64_t))v104;
    uint64_t v49 = (char *)*((void *)v104 + 1);
    uint64_t v106 = (unint64_t *)((char *)v264 + v103);
    *uint64_t v264 = v101;
    *((void *)v56 + 1) = v54;
    uint64_t v52 = (unsigned __int8 *)v267;
    (*v263)(v99, v102, v267);
    *uint64_t v106 = v105;
    v106[1] = v49;
    id v107 = v258;
    unint64_t v55 = (void (**)(unsigned __int8 *, uint64_t))((char *)v258 + *(int *)(v57 + 64));
    uint64_t v108 = (unint64_t *)((char *)v258 + *(int *)(v57 + 80));
    *uint64_t v258 = v101;
    v107[1] = v54;
    (*v256)((char *)v55, v99, v52);
    *uint64_t v108 = v105;
    v108[1] = v49;
    sub_1000DBD10();
    uint64_t v109 = swift_allocError();
    *uint64_t v110 = 0;
    swift_retain();
    v105(v109);
    swift_errorRelease();
    swift_release();
    (*v255)(v56, v57);
    uint64_t result = (*v254)((char *)v55, v52);
    uint64_t WitnessTable = (uint64_t)v269;
  }
  unint64_t v78 = *(void *)(v247 + 8 * v79);
  if (v78)
  {
LABEL_18:
    int64_t v77 = v79;
LABEL_15:
    uint64_t v269 = (char *)((v78 - 1) & v78);
    unint64_t v74 = __clz(__rbit64(v78)) + (v77 << 6);
    int64_t v262 = v77;
    goto LABEL_11;
  }
  while (1)
  {
    int64_t v77 = v79 + 1;
    if (__OFADD__(v79, 1)) {
      break;
    }
    if (v77 >= v250)
    {
      int64_t v262 = v207;
      goto LABEL_29;
    }
    unint64_t v78 = *(void *)(v247 + 8 * v77);
    ++v79;
    if (v78) {
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1006EF424(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11, void (*a12)(uint64_t), uint64_t a13, uint64_t (*a14)(uint64_t))
{
  if (a2) {
    a2();
  }
  uint64_t v16 = a4();
  uint64_t v17 = a6(v16);
  uint64_t v18 = a8(v17);
  uint64_t v19 = a10(v18);
  a12(v19);
  return a14(a1);
}

uint64_t sub_1006EF4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(a1 + qword_100ADA000);
  swift_beginAccess();
  uint64_t v29 = v4[1];
  uint64_t v27 = v4[3];
  uint64_t v28 = v4[2];
  uint64_t v15 = v4[5];
  uint64_t v16 = *v4;
  char v25 = *((unsigned char *)v4 + 48);
  char v26 = *((unsigned char *)v4 + 32);
  char v23 = *((unsigned char *)v4 + 50);
  char v24 = *((unsigned char *)v4 + 49);
  uint64_t v32 = v4[7];
  uint64_t v5 = (uint64_t *)(a1 + qword_100ADA008);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  uint64_t v21 = v5[3];
  uint64_t v22 = v5[2];
  uint64_t v13 = v5[5];
  uint64_t v14 = *v5;
  char v19 = *((unsigned char *)v5 + 48);
  char v20 = *((unsigned char *)v5 + 32);
  char v17 = *((unsigned char *)v5 + 50);
  char v18 = *((unsigned char *)v5 + 49);
  uint64_t v12 = v5[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1006D50B4((uint64_t)v30);
  long long v7 = v30[1];
  *(_OWORD *)uint64_t v4 = v30[0];
  *((_OWORD *)v4 + 1) = v7;
  long long v8 = v30[3];
  *((_OWORD *)v4 + 2) = v30[2];
  *((_OWORD *)v4 + 3) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1006D50B4((uint64_t)v31);
  long long v9 = v31[1];
  *(_OWORD *)uint64_t v5 = v31[0];
  *((_OWORD *)v5 + 1) = v9;
  long long v10 = v31[3];
  *((_OWORD *)v5 + 2) = v31[2];
  *((_OWORD *)v5 + 3) = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v29;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v27;
  *(unsigned char *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v15;
  *(unsigned char *)(a2 + 48) = v25;
  *(unsigned char *)(a2 + 49) = v24;
  *(unsigned char *)(a2 + 50) = v23;
  *(void *)(a2 + 56) = v32;
  *(void *)(a2 + 64) = v14;
  *(void *)(a2 + 72) = v6;
  *(void *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v21;
  *(unsigned char *)(a2 + 96) = v20;
  *(void *)(a2 + 104) = v13;
  *(unsigned char *)(a2 + 112) = v19;
  *(unsigned char *)(a2 + 113) = v18;
  *(unsigned char *)(a2 + 114) = v17;
  *(void *)(a2 + 120) = v12;
  return result;
}

uint64_t sub_1006EF7CC(void *a1, uint64_t (*a2)(void))
{
  uint64_t v4 = sub_10096B480();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  long long v9 = a1;
  long long v10 = sub_10096B470();
  os_log_type_t v11 = a2();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v17[0] = v4;
    uint64_t v14 = (void *)v13;
    *(_DWORD *)uint64_t v12 = 138412290;
    id v15 = [v9 leave];
    v17[1] = v15;
    sub_10096C8C0();
    *uint64_t v14 = v15;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%@", v12, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    uint64_t v4 = v17[0];
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    long long v10 = v9;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1006EF9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v9 = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v6 = (_OWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = *v6;
      swift_retain();
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)a2 + 2368))(sub_1006FB2C0, v7);
      if (v2) {
        break;
      }
      swift_release();
      ++v6;
      if (!--v4)
      {
        sub_100130294((uint64_t)&v9);
        return;
      }
    }
    __break(1u);
  }
}

void sub_1006EFAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v9 = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v6 = (_OWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = *v6;
      swift_retain();
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)a2 + 2368))(sub_1006FB2C0, v7);
      if (v2) {
        break;
      }
      swift_release();
      ++v6;
      if (!--v4)
      {
        sub_100130294((uint64_t)&v9);
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1006EFBF0()
{
  return sub_10026C0B0(v0, (void (*)(uint64_t *__return_ptr))sub_1006EFFD4) & 1;
}

uint64_t sub_1006EFC3C(uint64_t a1)
{
  uint64_t v22 = (void *)*v1;
  uint64_t v3 = v22[72];
  uint64_t v23 = v22[74];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_10096C890();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v22 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v14 = v1[3];
    uint64_t v15 = v22[73];
    uint64_t v16 = v22[75];
    uint64_t v24 = v3;
    uint64_t v25 = v15;
    uint64_t v26 = v23;
    uint64_t v27 = v16;
    uint64_t v17 = type metadata accessor for Materialization.MaterializeItem();
    uint64_t v18 = v28;
    char v19 = (*(uint64_t (**)(char *, uint64_t, void))(*(void *)v14 + 288))(v12, v17, 0);
    if (v18)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
      return v13 & 1;
    }
    char v20 = v19;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
    if (v20)
    {
      char v13 = 1;
      return v13 & 1;
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1006EFF2C()
{
  return *(void *)(v0 + qword_100B0B390);
}

uint64_t sub_1006EFF40(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + qword_100B0B390);
  void *v3 = result;
  v3[1] = a2;
  return result;
}

uint64_t sub_1006EFF54()
{
  return *(void *)(v0 + qword_100B0B3A0);
}

uint64_t sub_1006EFF68()
{
  return *(void *)(v0 + qword_100B0B398);
}

uint64_t sub_1006EFF7C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + qword_100B0B398);
  void *v3 = result;
  v3[1] = a2;
  return result;
}

uint64_t sub_1006EFF90()
{
  return *(void *)(v0 + qword_100B0B3A8);
}

uint64_t sub_1006EFFA4()
{
  return *(void *)(v0 + qword_100B0B3B0);
}

uint64_t sub_1006EFFB8(char a1)
{
  return sub_1006CDCD4(a1 & 1);
}

void sub_1006EFFD4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 122);
}

id sub_1006EFFE0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

uint64_t sub_1006F0030(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return sub_10002B7CC(&qword_100ACAF70);
  }
  else
  {
    return sub_10096D230();
  }
}

uint64_t sub_1006F00A0(uint64_t a1)
{
  return sub_1006F0154(a1, (uint64_t *)&unk_100ADA4C0);
}

uint64_t sub_1006F00AC(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA4A0);
}

uint64_t sub_1006F00B8(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA498);
}

uint64_t sub_1006F00C4(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA4B8);
}

uint64_t sub_1006F00D0(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA4A8);
}

uint64_t sub_1006F00DC(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA490);
}

uint64_t sub_1006F00E8(uint64_t a1)
{
  return sub_1006F02D4(a1, &qword_100ADA3B8);
}

uint64_t sub_1006F00F4(uint64_t a1)
{
  return sub_1006F0154(a1, (uint64_t *)&unk_100ADA310);
}

uint64_t sub_1006F0100(uint64_t a1)
{
  return sub_1006F02D4(a1, &qword_100ADA3C8);
}

uint64_t sub_1006F010C(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA2F8);
}

uint64_t sub_1006F0118(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA308);
}

uint64_t sub_1006F0124(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA300);
}

uint64_t sub_1006F0130(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA4B0);
}

uint64_t sub_1006F013C(uint64_t a1)
{
  return sub_1006F02D4(a1, (uint64_t *)&unk_100AD6FD0);
}

uint64_t sub_1006F0148(uint64_t a1)
{
  return sub_1006F0154(a1, &qword_100ADA2F0);
}

uint64_t sub_1006F0154(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (result)
  {
    unint64_t v4 = result;
    uint64_t v5 = 0;
    uint64_t v6 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      unint64_t v7 = __clz(__rbit64(v4));
      uint64_t v8 = v4 & ~(1 << v7);
      if (((1 << v7) & v4) == 0) {
        uint64_t v8 = v4;
      }
      if (v7 >= 0x40) {
        uint64_t v9 = 0;
      }
      else {
        uint64_t v9 = 1 << v7;
      }
      if (v7 < 0x40) {
        unint64_t v4 = v8;
      }
      if (!v5)
      {
        unint64_t v10 = v2[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1) {
          uint64_t v12 = 1;
        }
        else {
          uint64_t v12 = v11;
        }
        sub_10002B7CC(a2);
        char v13 = (void *)swift_allocObject();
        int64_t v14 = j__malloc_size(v13);
        uint64_t v15 = v14 - 32;
        if (v14 < 32) {
          uint64_t v15 = v14 - 25;
        }
        uint64_t v16 = v15 >> 3;
        v13[2] = v12;
        v13[3] = 2 * (v15 >> 3);
        unint64_t v17 = (unint64_t)(v13 + 4);
        uint64_t v18 = v2[3] >> 1;
        if (v2[2])
        {
          if (v13 != v2 || v17 >= (unint64_t)&v2[v18 + 4]) {
            memmove(v13 + 4, v2 + 4, 8 * v18);
          }
          v2[2] = 0;
        }
        uint64_t v6 = (uint64_t *)(v17 + 8 * v18);
        uint64_t v5 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v18;
        uint64_t result = swift_release();
        uint64_t v2 = v13;
      }
      BOOL v20 = __OFSUB__(v5--, 1);
      if (v20) {
        break;
      }
      *v6++ = v9;
      if (!v4) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v5 = 0;
LABEL_30:
  unint64_t v21 = v2[3];
  if (v21 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v22 = v21 >> 1;
  BOOL v20 = __OFSUB__(v22, v5);
  uint64_t v23 = v22 - v5;
  if (!v20)
  {
    v2[2] = v23;
    return (uint64_t)v2;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1006F02BC(uint64_t a1)
{
  return sub_1006F02D4(a1, &qword_100ADA3C0);
}

uint64_t sub_1006F02C8(uint64_t a1)
{
  return sub_1006F02D4(a1, (uint64_t *)&unk_100ADA3A8);
}

uint64_t sub_1006F02D4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = 0;
    uint64_t v6 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      if (!v5)
      {
        unint64_t v7 = v2[3];
        if ((uint64_t)((v7 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_28;
        }
        int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
        if (v8 <= 1) {
          uint64_t v9 = 1;
        }
        else {
          uint64_t v9 = v8;
        }
        sub_10002B7CC(a2);
        unint64_t v10 = (void *)swift_allocObject();
        int64_t v11 = j__malloc_size(v10);
        uint64_t v12 = v11 - 32;
        if (v11 < 32) {
          uint64_t v12 = v11 - 25;
        }
        uint64_t v13 = v12 >> 3;
        v10[2] = v9;
        v10[3] = 2 * (v12 >> 3);
        unint64_t v14 = (unint64_t)(v10 + 4);
        uint64_t v15 = v2[3] >> 1;
        if (v2[2])
        {
          if (v10 != v2 || v14 >= (unint64_t)&v2[v15 + 4]) {
            memmove(v10 + 4, v2 + 4, 8 * v15);
          }
          v2[2] = 0;
        }
        uint64_t v6 = (uint64_t *)(v14 + 8 * v15);
        uint64_t v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        uint64_t result = swift_release();
        uint64_t v2 = v10;
      }
      BOOL v17 = __OFSUB__(v5--, 1);
      if (v17) {
        break;
      }
      uint64_t v18 = v4 & -v4;
      *v6++ = v18;
      v4 ^= v18;
      if (!v4) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v5 = 0;
LABEL_23:
  unint64_t v19 = v2[3];
  if (v19 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v20 = v19 >> 1;
  BOOL v17 = __OFSUB__(v20, v5);
  uint64_t v21 = v20 - v5;
  if (!v17)
  {
    v2[2] = v21;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1006F0420(uint64_t *a1)
{
  void (*v40)(long long *__return_ptr, void **);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void **);
  long long v48;
  long long v49;
  long long v50;
  uint64_t v51;
  char v52;
  void *v53;
  void *v54;
  void *v55;
  char v56;
  long long v57;
  uint64_t v58;

  uint64_t v1 = (uint64_t (*)(void **))a1[1];
  uint64_t v58 = *a1;
  uint64_t v2 = v58;
  uint64_t v46 = v58 + 64;
  uint64_t v47 = v1;
  uint64_t v3 = -1 << *(unsigned char *)(v58 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v58 + 64);
  uint64_t v40 = (void (*)(long long *__return_ptr, void **))a1[3];
  sub_100130300((uint64_t)&v58);
  uint64_t v45 = (unint64_t)(63 - v3) >> 6;
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v42 = 0;
  int64_t v7 = 0;
  int64_t v8 = (char *)_swiftEmptyArrayStorage;
  uint64_t v41 = (char *)_swiftEmptyArrayStorage;
LABEL_5:
  uint64_t v44 = v8 + 32;
  if (v5)
  {
LABEL_6:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v7 << 6);
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v11 >= v45) {
      goto LABEL_45;
    }
    unint64_t v12 = *(void *)(v46 + 8 * v11);
    if (!v12) {
      break;
    }
LABEL_16:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v11 << 6);
    int64_t v7 = v11;
LABEL_17:
    uint64_t v15 = *(void *)(v2 + 48) + 32 * v10;
    BOOL v17 = *(void **)v15;
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v18 = *(void **)(v15 + 16);
    uint64_t v48 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v10);
    char v19 = *(unsigned char *)(v15 + 24);
    uint64_t v53 = v17;
    unint64_t v54 = v16;
    unint64_t v55 = v18;
    uint64_t v56 = v19;
    uint64_t v57 = v48;
    sub_10009C004(v17, v16, v18, v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v47(&v53))
    {
      uint64_t v53 = v17;
      unint64_t v54 = v16;
      unint64_t v55 = v18;
      uint64_t v56 = v19;
      uint64_t v57 = v48;
      v40(&v50, &v53);
      sub_1001FAB20(v17, v16, v18, v19);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v20 = v50;
      uint64_t v21 = v51;
      char v22 = v52;
      uint64_t v23 = v42;
      if (!v42)
      {
        unint64_t v24 = *((void *)v41 + 3);
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) >= 0)
        {
          uint64_t v43 = v51;
          uint64_t v49 = v50;
          int64_t v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
          if (v25 <= 1) {
            uint64_t v26 = 1;
          }
          else {
            uint64_t v26 = v25;
          }
          sub_10002B7CC((uint64_t *)&unk_100AD73F0);
          uint64_t v27 = (char *)swift_allocObject();
          int64_t v28 = j__malloc_size(v27);
          uint64_t v29 = v28 - 32;
          if (v28 < 32) {
            uint64_t v29 = v28 - 1;
          }
          uint64_t v30 = v29 >> 5;
          *((void *)v27 + 2) = v26;
          *((void *)v27 + 3) = 2 * (v29 >> 5);
          uint64_t v31 = v27 + 32;
          uint64_t v32 = *((void *)v41 + 3) >> 1;
          size_t v33 = 32 * v32;
          if (*((void *)v41 + 2))
          {
            uint64_t v34 = v41 + 32;
            if (v27 != v41 || v31 >= &v34[v33]) {
              memmove(v27 + 32, v34, v33);
            }
            *((void *)v41 + 2) = 0;
          }
          uint64_t v44 = &v31[v33];
          uint64_t result = swift_release();
          uint64_t v23 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - v32;
          uint64_t v41 = v27;
          long long v20 = v49;
          uint64_t v21 = v43;
          goto LABEL_43;
        }
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
LABEL_43:
      BOOL v35 = __OFSUB__(v23, 1);
      uint64_t v36 = v23 - 1;
      if (!v35)
      {
        uint64_t v42 = v36;
        int64_t v8 = v44;
        *(_OWORD *)uint64_t v44 = v20;
        *((void *)v44 + 2) = v21;
        v44[24] = v22;
        goto LABEL_5;
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    sub_1001FAB20(v17, v16, v18, v19);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_6;
    }
  }
  int64_t v13 = v7 + 2;
  if (v7 + 2 >= v45) {
    goto LABEL_45;
  }
  unint64_t v12 = *(void *)(v46 + 8 * v13);
  if (v12) {
    goto LABEL_12;
  }
  int64_t v14 = v7 + 3;
  if (v7 + 3 >= v45) {
    goto LABEL_45;
  }
  unint64_t v12 = *(void *)(v46 + 8 * v14);
  if (v12) {
    goto LABEL_15;
  }
  int64_t v13 = v7 + 4;
  if (v7 + 4 >= v45) {
    goto LABEL_45;
  }
  unint64_t v12 = *(void *)(v46 + 8 * v13);
  if (v12)
  {
LABEL_12:
    int64_t v11 = v13;
    goto LABEL_16;
  }
  int64_t v14 = v7 + 5;
  if (v7 + 5 >= v45) {
    goto LABEL_45;
  }
  unint64_t v12 = *(void *)(v46 + 8 * v14);
  if (v12)
  {
LABEL_15:
    int64_t v11 = v14;
    goto LABEL_16;
  }
  int64_t v13 = v7 + 6;
  if (v7 + 6 < v45)
  {
    unint64_t v12 = *(void *)(v46 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v11 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_51;
        }
        if (v11 >= v45) {
          goto LABEL_45;
        }
        unint64_t v12 = *(void *)(v46 + 8 * v11);
        ++v13;
        if (v12) {
          goto LABEL_16;
        }
      }
    }
    goto LABEL_12;
  }
LABEL_45:
  sub_1000146B4();
  swift_release();
  swift_release();
  uint64_t result = (uint64_t)v41;
  unint64_t v37 = *((void *)v41 + 3);
  if (v37 < 2) {
    return result;
  }
  unint64_t v38 = v37 >> 1;
  BOOL v35 = __OFSUB__(v38, v42);
  uint64_t v39 = v38 - v42;
  if (!v35)
  {
    *((void *)v41 + 2) = v39;
    return result;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1006F087C(uint64_t *a1)
{
  void (*v39)(long long *__return_ptr, uint64_t *);
  uint64_t v40;
  long long v41;
  char *v42;
  char *v43;
  int64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t *);
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  long long v64;
  uint64_t v65;

  uint64_t v1 = (uint64_t (*)(uint64_t *))a1[1];
  uint64_t v65 = *a1;
  uint64_t v45 = v65 + 64;
  uint64_t v46 = v1;
  uint64_t v47 = v65;
  uint64_t v2 = -1 << *(unsigned char *)(v65 + 32);
  if (-v2 < 64) {
    uint64_t v3 = ~(-1 << -(char)v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & *(void *)(v65 + 64);
  uint64_t v39 = (void (*)(long long *__return_ptr, uint64_t *))a1[3];
  sub_100130300((uint64_t)&v65);
  uint64_t v44 = (unint64_t)(63 - v2) >> 6;
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v43 = (char *)_swiftEmptyArrayStorage;
  uint64_t v42 = (char *)&_swiftEmptyArrayStorage[4];
  if (!v4) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v49 = (v4 - 1) & v4;
  for (unint64_t i = __clz(__rbit64(v4)) | (v48 << 6); ; unint64_t i = __clz(__rbit64(v8)) + (v7 << 6))
  {
    uint64_t v11 = *(void *)(v47 + 48) + 48 * i;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t v14 = *(void *)(v11 + 16);
    uint64_t v15 = *(void *)(v11 + 24);
    uint64_t v16 = *(void *)(v11 + 32);
    char v17 = *(unsigned char *)(v11 + 40);
    char v18 = *(unsigned char *)(v11 + 41);
    uint64_t v50 = *(_OWORD *)(*(void *)(v47 + 56) + 16 * i);
    uint64_t v57 = *(void *)v11;
    uint64_t v58 = v13;
    uint64_t v59 = v14;
    int64_t v60 = v15;
    unint64_t v61 = v16;
    int64_t v62 = v17;
    uint64_t v63 = v18;
    uint64_t v64 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46(&v57))
    {
      uint64_t v57 = v12;
      uint64_t v58 = v13;
      uint64_t v59 = v14;
      int64_t v60 = v15;
      unint64_t v61 = v16;
      int64_t v62 = v17;
      uint64_t v63 = v18;
      uint64_t v64 = v50;
      v39(&v52, &v57);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v19 = v52;
      long long v20 = v53;
      uint64_t v21 = v54;
      char v22 = v55;
      char v23 = v56;
      if (v40)
      {
        unint64_t v24 = v43;
        unint64_t v4 = v49;
        uint64_t v25 = v40 - 1;
        if (__OFSUB__(v40, 1)) {
          goto LABEL_50;
        }
      }
      else
      {
        unint64_t v26 = *((void *)v43 + 3);
        if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_52;
        }
        uint64_t v41 = v53;
        uint64_t v51 = v52;
        int64_t v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
        if (v27 <= 1) {
          uint64_t v28 = 1;
        }
        else {
          uint64_t v28 = v27;
        }
        sub_10002B7CC(&qword_100ADA360);
        unint64_t v24 = (char *)swift_allocObject();
        uint64_t v29 = (uint64_t)(j__malloc_size(v24) - 32) / 48;
        *((void *)v24 + 2) = v28;
        *((void *)v24 + 3) = 2 * v29;
        uint64_t v30 = v24 + 32;
        uint64_t v31 = *((void *)v43 + 3) >> 1;
        uint64_t v32 = 48 * v31;
        if (*((void *)v43 + 2))
        {
          size_t v33 = v43 + 32;
          if (v24 != v43 || v30 >= &v33[v32]) {
            memmove(v24 + 32, v33, 48 * v31);
          }
          *((void *)v43 + 2) = 0;
        }
        uint64_t v42 = &v30[v32];
        uint64_t v34 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
        uint64_t result = swift_release();
        unint64_t v4 = v49;
        long long v19 = v51;
        long long v20 = v41;
        uint64_t v25 = v34 - 1;
        if (__OFSUB__(v34, 1)) {
          goto LABEL_50;
        }
      }
      uint64_t v40 = v25;
      uint64_t v43 = v24;
      *(_OWORD *)uint64_t v42 = v19;
      *((_OWORD *)v42 + 1) = v20;
      *((void *)v42 + 4) = v21;
      v42[40] = v22;
      v42[41] = v23;
      v42 += 48;
      if (v4) {
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v4 = v49;
      if (v49) {
        goto LABEL_5;
      }
    }
LABEL_6:
    int64_t v7 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    if (v7 >= v44) {
      goto LABEL_45;
    }
    unint64_t v8 = *(void *)(v45 + 8 * v7);
    if (!v8) {
      break;
    }
LABEL_15:
    uint64_t v48 = v7;
    uint64_t v49 = (v8 - 1) & v8;
  }
  int64_t v9 = v48 + 2;
  if (v48 + 2 >= v44) {
    goto LABEL_45;
  }
  unint64_t v8 = *(void *)(v45 + 8 * v9);
  if (v8) {
    goto LABEL_11;
  }
  int64_t v10 = v48 + 3;
  if (v48 + 3 >= v44) {
    goto LABEL_45;
  }
  unint64_t v8 = *(void *)(v45 + 8 * v10);
  if (v8) {
    goto LABEL_14;
  }
  int64_t v9 = v48 + 4;
  if (v48 + 4 >= v44) {
    goto LABEL_45;
  }
  unint64_t v8 = *(void *)(v45 + 8 * v9);
  if (v8) {
    goto LABEL_11;
  }
  int64_t v10 = v48 + 5;
  if (v48 + 5 >= v44) {
    goto LABEL_45;
  }
  unint64_t v8 = *(void *)(v45 + 8 * v10);
  if (v8)
  {
LABEL_14:
    int64_t v7 = v10;
    goto LABEL_15;
  }
  int64_t v9 = v48 + 6;
  if (v48 + 6 < v44)
  {
    unint64_t v8 = *(void *)(v45 + 8 * v9);
    if (!v8)
    {
      while (1)
      {
        int64_t v7 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_51;
        }
        if (v7 >= v44) {
          goto LABEL_45;
        }
        unint64_t v8 = *(void *)(v45 + 8 * v7);
        ++v9;
        if (v8) {
          goto LABEL_15;
        }
      }
    }
LABEL_11:
    int64_t v7 = v9;
    goto LABEL_15;
  }
LABEL_45:
  sub_1000146B4();
  swift_release();
  swift_release();
  uint64_t result = (uint64_t)v43;
  unint64_t v35 = *((void *)v43 + 3);
  if (v35 < 2) {
    return result;
  }
  unint64_t v36 = v35 >> 1;
  BOOL v37 = __OFSUB__(v36, v40);
  uint64_t v38 = v36 - v40;
  if (!v37)
  {
    uint64_t result = (uint64_t)v43;
    *((void *)v43 + 2) = v38;
    return result;
  }
LABEL_53:
  __break(1u);
  return result;
}

unint64_t *sub_1006F0D14(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
  {
    uint64_t i = 0;
    goto LABEL_17;
  }
  if (!a3)
  {
LABEL_16:
    uint64_t i = a3;
    goto LABEL_17;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; a4; ++i)
    {
      unint64_t v5 = __clz(__rbit64(a4));
      uint64_t v6 = a4 & ~(1 << v5);
      if (((1 << v5) & a4) == 0) {
        uint64_t v6 = a4;
      }
      BOOL v7 = v5 >= 0x40;
      uint64_t v8 = v5 >= 0x40 ? 0 : 1 << v5;
      if (!v7) {
        a4 = v6;
      }
      *(void *)(a2 + 8 * i) = v8;
      if (a3 - 1 == i) {
        goto LABEL_16;
      }
    }
LABEL_17:
    *uint64_t result = a4;
    return (unint64_t *)i;
  }
  __break(1u);
  return result;
}

void *sub_1006F0D88(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    uint64_t i = 0;
    goto LABEL_10;
  }
  if (!a3)
  {
LABEL_9:
    uint64_t i = a3;
    goto LABEL_10;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; a4; ++i)
    {
      uint64_t v5 = a4 & -a4;
      a4 ^= v5;
      *(void *)(a2 + 8 * i) = v5;
      if (a3 - 1 == i) {
        goto LABEL_9;
      }
    }
LABEL_10:
    *uint64_t result = a4;
    return (void *)i;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006F0DE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 40 * v16;
    uint64_t v21 = *(void *)(v20 + 8);
    __int16 v22 = *(_WORD *)(v20 + 32);
    long long v23 = *(_OWORD *)(v20 + 16);
    *(void *)uint64_t v11 = *(void *)v20;
    *(void *)(v11 + 8) = v21;
    *(_OWORD *)(v11 + 16) = v23;
    *(_WORD *)(v11 + 32) = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 40;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1006F0FFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  int64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  unint64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 64;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_1006F90F0(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    sub_1006F9158((uint64_t)v12, (uint64_t)v15, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    uint64_t result = sub_1006F9158((uint64_t)v15, a2, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1006F1320(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1006F151C(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 24 * v16;
    id v21 = *(void **)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    LOBYTE(v20) = *(unsigned char *)(v20 + 16);
    *(void *)uint64_t v11 = v21;
    *(void *)(v11 + 8) = v22;
    *(unsigned char *)(v11 + 16) = v20;
    if (v13 == v10)
    {
      id v23 = v21;
      goto LABEL_38;
    }
    v11 += 24;
    uint64_t result = v21;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1006F172C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1006F1930(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v26 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    uint64_t v21 = *(void *)(a4 + 56) + 24 * v16;
    uint64_t v22 = *(void *)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    *(void *)uint64_t v11 = v20;
    *(void *)(v11 + 8) = v22;
    *(unsigned char *)(v11 + 16) = v23;
    *(void *)(v11 + 24) = v24;
    if (v13 == v10)
    {
      id v25 = v20;
      goto LABEL_38;
    }
    v11 += 32;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v26;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1006F1B4C(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(a4 + 48) + 16 * v12;
    uint64_t v14 = *(void *)v13;
    LOBYTE(v13) = *(unsigned char *)(v13 + 8);
    uint64_t v15 = *(void *)(a4 + 56) + 24 * v12;
    uint64_t v16 = *(void *)v15;
    char v17 = *(unsigned char *)(v15 + 8);
    uint64_t v18 = *(void *)(v15 + 16);
    *(void *)a2 = v14;
    *(unsigned char *)(a2 + 8) = v13;
    *(void *)(a2 + 16) = v16;
    *(unsigned char *)(a2 + 24) = v17;
    *(void *)(a2 + 32) = v18;
    a2 += 40;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v19 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v19 >= v10) {
    goto LABEL_30;
  }
  unint64_t v20 = *(void *)(v4 + 8 * v19);
  if (v20) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v19 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v19;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v4 + 8 * v8);
  if (v20)
  {
LABEL_15:
    int64_t v19 = v8;
LABEL_19:
    unint64_t v22 = __clz(__rbit64(v20));
    unint64_t v7 = (v20 - 1) & v20;
    unint64_t v12 = v22 + (v19 << 6);
    int64_t v8 = v19;
    goto LABEL_8;
  }
  int64_t v21 = v19 + 2;
  if (v19 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v20 = *(void *)(v4 + 8 * v21);
  if (v20)
  {
LABEL_18:
    int64_t v19 = v21;
    goto LABEL_19;
  }
  int64_t v8 = v19 + 3;
  if (v19 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v19 + 2;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v4 + 8 * v8);
  if (v20) {
    goto LABEL_15;
  }
  int64_t v21 = v19 + 4;
  if (v19 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v4 + 8 * v21);
  if (v20) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v19 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v19 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v20 = *(void *)(v4 + 8 * v19);
    ++v21;
    if (v20) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_1006F1D10(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(a4 + 48) + 16 * v12;
    uint64_t v14 = *(void *)v13;
    LOBYTE(v13) = *(unsigned char *)(v13 + 8);
    *(void *)a2 = v14;
    *(unsigned char *)(a2 + 8) = v13;
    a2 += 16;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v10) {
    goto LABEL_30;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v15 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v15;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v8);
  if (v16)
  {
LABEL_15:
    int64_t v15 = v8;
LABEL_19:
    unint64_t v18 = __clz(__rbit64(v16));
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v12 = v18 + (v15 << 6);
    int64_t v8 = v15;
    goto LABEL_8;
  }
  int64_t v17 = v15 + 2;
  if (v15 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v15 = v17;
    goto LABEL_19;
  }
  int64_t v8 = v15 + 3;
  if (v15 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v15 + 2;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v8);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v15 + 4;
  if (v15 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_1006F1EB4(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 32 * v16;
    int64_t v21 = *(void **)v20;
    unint64_t v22 = *(void **)(v20 + 8);
    char v23 = *(void **)(v20 + 16);
    char v24 = *(unsigned char *)(v20 + 24);
    *(void *)uint64_t v11 = *(void *)v20;
    *(void *)(v11 + 8) = v22;
    *(void *)(v11 + 16) = v23;
    *(unsigned char *)(v11 + 24) = v24;
    if (v13 == v10)
    {
      sub_10009C004(v21, v22, v23, v24);
      goto LABEL_38;
    }
    v11 += 32;
    uint64_t result = sub_10009C004(v21, v22, v23, v24);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1006F20C4(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(a4 + 48) + 48 * v12;
    uint64_t v14 = *(void *)(v13 + 32);
    __int16 v15 = *(_WORD *)(v13 + 40);
    long long v16 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(_OWORD *)(a2 + 16) = v16;
    *(void *)(a2 + 32) = v14;
    *(_WORD *)(a2 + 40) = v15;
    a2 += 48;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v17 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v17 >= v10) {
    goto LABEL_30;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v17);
  if (v18) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v17 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v17;
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v8);
  if (v18)
  {
LABEL_15:
    int64_t v17 = v8;
LABEL_19:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = v20 + (v17 << 6);
    int64_t v8 = v17;
    goto LABEL_8;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
LABEL_18:
    int64_t v17 = v19;
    goto LABEL_19;
  }
  int64_t v8 = v17 + 3;
  if (v17 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v17 + 2;
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v8);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1006F2274(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_10009CA78(*(void *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_1001E9E64(v21, (uint64_t)v22);
    uint64_t result = sub_1001E9E64(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v20;
      goto LABEL_36;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v12 = v17 + 1;
  if (v17 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v17 + 2;
  if (v17 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  int64_t v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v19;
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1006F2484(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_35:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
LABEL_32:
    uint64_t v13 = a3;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_100347A00(*(void *)(a4 + 56) + 16 * v16, (uint64_t)v20);
    sub_10009CB44((uint64_t)v20, (uint64_t)v21);
    uint64_t result = sub_10009CB44((uint64_t)v21, v11);
    v11 += 16;
    if (v13 == a3) {
      goto LABEL_32;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v17 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18)
  {
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  int64_t v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v12 = v17 + 1;
  if (v17 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v17 + 2;
  if (v17 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  int64_t v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1006F2684(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  int64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  unint64_t v15 = (char *)&v28 - v14;
  uint64_t v33 = a4;
  uint64_t v16 = a4 + 64;
  uint64_t v17 = -1 << *(unsigned char *)(a4 + 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    *a1 = v33;
    a1[1] = v16;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v30 = a1;
  uint64_t v31 = a4 + 64;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  int64_t v32 = (unint64_t)(63 - v17) >> 6;
  int64_t v28 = v32 - 1;
  uint64_t v29 = v17;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_10002B70C(*(void *)(v33 + 48) + v27 * v23, (uint64_t)v12, &qword_100AD65C0);
    sub_10001AE98((uint64_t)v12, (uint64_t)v15, &qword_100AD65C0);
    uint64_t result = sub_10001AE98((uint64_t)v15, a2, &qword_100AD65C0);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v32)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v16 = v31;
      uint64_t v17 = v29;
      goto LABEL_34;
    }
    uint64_t v16 = v31;
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v32)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    uint64_t v17 = v29;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v32) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v32)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v32)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v32)
    {
      unint64_t v19 = 0;
      int64_t v20 = v28;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1006F2984(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1006F2BA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1006F2C20(a1, a2, a3, a4, type metadata accessor for VFSItem, type metadata accessor for VFSItem, type metadata accessor for VFSItem);
}

uint64_t sub_1006F2BE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1006F2C20(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for SyncState, (uint64_t (*)(void))type metadata accessor for SyncState, (uint64_t (*)(void))type metadata accessor for SyncState);
}

uint64_t sub_1006F2C20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  uint64_t v39 = a6;
  uint64_t v12 = a5(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12 - 8);
  unint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v14);
  int64_t v19 = (char *)&v33 - v18;
  uint64_t v40 = a4;
  uint64_t v21 = a4 + 64;
  uint64_t v20 = *(void *)(a4 + 64);
  uint64_t v36 = -1 << *(unsigned char *)(a4 + 32);
  if (-v36 < 64) {
    uint64_t v22 = ~(-1 << -(char)v36);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & v20;
  if (!a2)
  {
    int64_t v24 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v32 = ~v36;
    *a1 = v40;
    a1[1] = v21;
    a1[2] = v32;
    a1[3] = v24;
    a1[4] = v23;
    return a3;
  }
  if (!a3)
  {
    int64_t v24 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v35 = a1;
  int64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v37 = v21;
  int64_t v38 = (unint64_t)(63 - v36) >> 6;
  int64_t v34 = v38 - 1;
  if (!v23) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  unint64_t v27 = v26 | (v24 << 6);
  while (1)
  {
    ++v25;
    uint64_t v31 = *(void *)(v13 + 72);
    sub_1006F90F0(*(void *)(v40 + 56) + v31 * v27, (uint64_t)v16, v39);
    sub_1006F9158((uint64_t)v16, (uint64_t)v19, a7);
    uint64_t result = sub_1006F9158((uint64_t)v19, a2, a7);
    if (v25 == a3) {
      goto LABEL_33;
    }
    a2 += v31;
    if (v23) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v28 >= v38)
    {
      unint64_t v23 = 0;
      a3 = v25;
LABEL_33:
      a1 = v35;
      uint64_t v21 = v37;
      goto LABEL_34;
    }
    uint64_t v21 = v37;
    unint64_t v29 = *(void *)(v37 + 8 * v28);
    if (!v29) {
      break;
    }
LABEL_18:
    unint64_t v23 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v24 = v28;
  }
  v24 += 2;
  if (v28 + 1 >= v38)
  {
    unint64_t v23 = 0;
    int64_t v24 = v28;
LABEL_39:
    a3 = v25;
    a1 = v35;
    goto LABEL_34;
  }
  unint64_t v29 = *(void *)(v37 + 8 * v24);
  if (v29) {
    goto LABEL_14;
  }
  int64_t v30 = v28 + 2;
  if (v28 + 2 >= v38) {
    goto LABEL_36;
  }
  unint64_t v29 = *(void *)(v37 + 8 * v30);
  if (v29) {
    goto LABEL_17;
  }
  int64_t v24 = v28 + 3;
  if (v28 + 3 >= v38)
  {
    unint64_t v23 = 0;
    int64_t v24 = v28 + 2;
    goto LABEL_39;
  }
  unint64_t v29 = *(void *)(v37 + 8 * v24);
  if (v29)
  {
LABEL_14:
    int64_t v28 = v24;
    goto LABEL_18;
  }
  int64_t v30 = v28 + 4;
  if (v28 + 4 >= v38)
  {
LABEL_36:
    unint64_t v23 = 0;
    goto LABEL_39;
  }
  unint64_t v29 = *(void *)(v37 + 8 * v30);
  if (v29)
  {
LABEL_17:
    int64_t v28 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v38)
    {
      unint64_t v23 = 0;
      int64_t v24 = v34;
      goto LABEL_39;
    }
    unint64_t v29 = *(void *)(v37 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1006F2F2C()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_1006F2F34()
{
  return *(void *)(v0 + 168);
}

uint64_t sub_1006F2F3C()
{
  return *(void *)(v0 + 176);
}

unint64_t sub_1006F2F44()
{
  unint64_t result = qword_100ADA2D0;
  if (!qword_100ADA2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADA2D0);
  }
  return result;
}

uint64_t sub_1006F2F98(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  uint64_t v3 = (int *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    unint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1006F2FD0()
{
  return *(void *)(v0 + 192);
}

uint64_t sub_1006F2FD8(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v2 = v1[5];
      goto LABEL_4;
    case 2:
      uint64_t v4 = v1[4];
      return *(void *)(*(void *)(v4 + 16) + 88);
    case 3:
      uint64_t v4 = v1[5];
      return *(void *)(*(void *)(v4 + 16) + 88);
    case 4:
      uint64_t v5 = v1[4];
      return *(void *)(*(void *)(v5 + 16) + 96);
    case 5:
      uint64_t v5 = v1[5];
      return *(void *)(*(void *)(v5 + 16) + 96);
    case 6:
      uint64_t v6 = v1[4];
      goto LABEL_13;
    case 7:
      uint64_t v6 = v1[5];
LABEL_13:
      uint64_t result = *(void *)(*(void *)(v6 + 16) + 80);
      break;
    case 8:
      uint64_t result = v1[19];
      break;
    default:
      uint64_t v2 = v1[4];
LABEL_4:
      uint64_t result = *(void *)(*(void *)(v2 + 16) + 104);
      break;
  }
  return result;
}

uint64_t sub_1006F308C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F30C4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1006F30F0(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

BOOL sub_1006F3128(uint64_t a1)
{
  return sub_1006EA314(a1, *(unsigned char *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1006F3154()
{
  uint64_t v1 = (int *)(type metadata accessor for ConcreteDatabase.MaterializationRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  unint64_t v7 = v0 + v2 + v1[15];
  uint64_t v8 = sub_10096B7D0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1006F3320(uint64_t a1, char a2)
{
  int v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for ConcreteDatabase.MaterializationRequest() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v9 = *(void **)(v2 + 48);
  uint64_t v10 = *(void *)(v2 + v7);
  uint64_t v11 = v2 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_1006EB908(a1, v4, v9, v2 + v6, v10, v11);
}

uint64_t sub_1006F3450()
{
  uint64_t v1 = (int *)(type metadata accessor for ConcreteDatabase.MaterializationRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_10058BC54(*(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  unint64_t v7 = v0 + v2 + v1[15];
  uint64_t v8 = sub_10096B7D0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, AssociatedTypeWitness);
  return swift_deallocObject();
}

char *sub_1006F3634()
{
  uint64_t v1 = *(void *)(type metadata accessor for ConcreteDatabase.MaterializationRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(void *)(v0 + 48);
  char v7 = *(unsigned char *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + v3);
  unint64_t v9 = *(uint64_t **)(v0 + v4);
  uint64_t v10 = v0 + ((v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1006EBEA0(v6, v7, (void (*)(uint64_t))(v0 + v2), v8, v9, v10);
}

uint64_t sub_1006F375C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 128);
  return result;
}

uint64_t sub_1006F376C(uint64_t a1)
{
  return sub_1006F37CC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1006E9F94) & 1;
}

uint64_t sub_1006F379C(uint64_t a1)
{
  return sub_1006F37CC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1006E9D44) & 1;
}

uint64_t sub_1006F37CC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]) & 1;
}

uint64_t sub_1006F37FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1006EF4FC(v1, a1);
}

void sub_1006F381C()
{
  sub_1006EFAE4(v0 + 16, *(void *)(v0 + 80));
}

void sub_1006F3840()
{
  sub_1006EF9D8(v0 + 16, *(void *)(v0 + 80));
}

uint64_t type metadata accessor for FileTreeChangeAggregator.Change()
{
  return sub_10014D080();
}

uint64_t sub_1006F387C()
{
  return sub_1006D30F4(v0 + 16, *(void *)(v0 + 80));
}

uint64_t sub_1006F389C(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1 + *(int *)(type metadata accessor for SnapshotItem() + 48));
  if (*v1 == 1) {
    return 1;
  }
  else {
    return *(void *)&v1[*(int *)(type metadata accessor for ItemMetadata() + 100)];
  }
}

void sub_1006F38F8(Swift::UInt64 a1, int a2, unint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(void), uint64_t *a7)
{
  unint64_t v97 = a4;
  unint64_t v103 = a3;
  int v107 = a2;
  Swift::UInt64 v105 = a1;
  uint64_t v98 = sub_10002B7CC((uint64_t *)&unk_100AD6F70);
  unint64_t v96 = *(void *)(v98 - 8);
  uint64_t v10 = __chkstk_darwin(v98);
  uint64_t v94 = (unint64_t *)((char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v91 = (unint64_t *)((char *)&v88 - v13);
  __chkstk_darwin(v12);
  uint64_t v95 = (unint64_t *)((char *)&v88 - v14);
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v93 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int64_t v19 = (char *)&v88 - v18;
  uint64_t v20 = sub_10096B760();
  uint64_t v99 = *(void *)(v20 - 8);
  uint64_t v100 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v90 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  int64_t v24 = (char *)&v88 - v23;
  uint64_t v25 = sub_10096B7D0();
  uint64_t v101 = *(void *)(v25 - 8);
  uint64_t v102 = v25;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v92 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  unint64_t v29 = (unint64_t *)((char *)&v88 - v28);
  uint64_t v30 = sub_10096B830();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  unint64_t v33 = (unint64_t)&v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = swift_allocObject();
  unint64_t v35 = a6;
  *(void *)(v34 + 16) = a6;
  *(void *)(v34 + 24) = a7;
  uint64_t v106 = v34;
  uint64_t v36 = *(void **)(a5 + 64);
  *(void *)unint64_t v33 = v36;
  (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v33, enum case for DispatchPredicate.onQueue(_:), v30);
  id v104 = a7;
  swift_retain();
  id v37 = v36;
  uint64_t v38 = sub_10096B860();
  (*(void (**)(unint64_t, uint64_t))(v31 + 8))(v33, v30);
  if ((v38 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    a5 = sub_1006A28C4(0, *(void *)(a5 + 16) + 1, 1, a5);
LABEL_21:
    unint64_t v87 = *(void *)(a5 + 16);
    unint64_t v86 = *(void *)(a5 + 24);
    if (v87 >= v86 >> 1) {
      a5 = sub_1006A28C4(v86 > 1, v87 + 1, 1, a5);
    }
    *(void *)(a5 + 16) = v87 + 1;
    sub_10001AE98((uint64_t)v29, a5+ ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))+ *(void *)(v96 + 72) * v87, (uint64_t *)&unk_100AD6F70);
    *(void *)(*(void *)(v38 + 56) + 8 * v33) = a5;
    *a7 = v38;
    swift_endAccess();
LABEL_24:
    swift_release();
    return;
  }
  if (*(unsigned char *)(a5 + 184) == 1)
  {
    id v39 = (id)FPDomainUnavailableError();
    v35();
    swift_release();

    return;
  }
  unint64_t v40 = a5 + qword_100B0B328;
  swift_beginAccess();
  uint64_t v41 = *(void *)(*(void *)v40 + 16);
  uint64_t v89 = (unint64_t *)v40;
  if (!v41 || (sub_10031F858(v105, v107), (v42 & 1) == 0))
  {
    sub_10002B7CC((uint64_t *)&unk_100AD6F80);
    unint64_t v47 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_100973BB0;
    id v104 = (void *)v48;
    unint64_t v96 = v48 + v47;
    unint64_t v49 = v103;
    sub_1000CE628(v103);
    qos_class_self();
    sub_10096B740();
    uint64_t v51 = v99;
    uint64_t v50 = v100;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v19, 1, v100) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v51 + 104))(v24, enum case for DispatchQoS.QoSClass.utility(_:), v50);
      sub_10002B770((uint64_t)v19, (uint64_t *)&unk_100ACD990);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v24, v19, v50);
    }
    sub_10096B7B0();
    unint64_t v52 = v97;
    uint64_t v53 = v98;
    unint64_t v54 = v95;
    unint64_t v55 = (char *)v95 + *(int *)(v98 + 64);
    uint64_t v56 = (uint64_t (**)(uint64_t))((char *)v95 + *(int *)(v98 + 80));
    unint64_t *v95 = v49;
    v54[1] = v52;
    uint64_t v57 = v102;
    uint64_t v58 = *(void (**)(char *, unint64_t *, uint64_t))(v101 + 32);
    v58(v55, v29, v102);
    uint64_t v59 = (uint64_t (*)(uint64_t))v106;
    *uint64_t v56 = sub_1000B6658;
    v56[1] = v59;
    unint64_t v60 = v96;
    *(void *)unint64_t v96 = v49;
    *(void *)(v60 + 8) = v52;
    v58((char *)(v60 + *(int *)(v53 + 64)), (unint64_t *)v55, v57);
    unint64_t v61 = (void *)(v60 + *(int *)(v53 + 80));
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = sub_1000B6658;
    *(void *)(v62 + 24) = v59;
    *unint64_t v61 = sub_1006FB200;
    v61[1] = v62;
    uint64_t v63 = v89;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v108 = *v63;
    *uint64_t v63 = 0x8000000000000000;
    sub_10038A4C4((uint64_t)v104, v105, v107, isUniquelyReferenced_nonNull_native);
    *uint64_t v63 = v108;
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_24;
  }
  unint64_t v43 = v103;
  sub_1000CE628(v103);
  qos_class_self();
  uint64_t v44 = (uint64_t)v93;
  sub_10096B740();
  uint64_t v46 = v99;
  uint64_t v45 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v44, 1, v100) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v46 + 104))(v90, enum case for DispatchQoS.QoSClass.utility(_:), v45);
    sub_10002B770(v44, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v90, v44, v45);
  }
  uint64_t v65 = (uint64_t (*)(uint64_t))v106;
  unint64_t v67 = v97;
  uint64_t v66 = v98;
  uint64_t v68 = v91;
  uint64_t v69 = v92;
  sub_10096B7B0();
  uint64_t v70 = (char *)v68 + *(int *)(v66 + 64);
  uint64_t v71 = (uint64_t (**)(uint64_t))((char *)v68 + *(int *)(v66 + 80));
  *uint64_t v68 = v43;
  v68[1] = v67;
  unint64_t v72 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
  uint64_t v73 = v69;
  uint64_t v74 = v102;
  v72(v70, v73, v102);
  *uint64_t v71 = sub_1000B6658;
  v71[1] = v65;
  uint64_t v75 = v65;
  unint64_t v29 = v94;
  *uint64_t v94 = v43;
  v29[1] = v67;
  v72((char *)v29 + *(int *)(v66 + 64), v70, v74);
  char v76 = (char *)v29 + *(int *)(v66 + 80);
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = sub_1000B6658;
  *(void *)(v77 + 24) = v75;
  *(void *)char v76 = sub_1006FB200;
  *((void *)v76 + 1) = v77;
  a7 = (uint64_t *)v89;
  swift_beginAccess();
  swift_retain();
  uint64_t v38 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v108 = *a7;
  a5 = v108;
  *a7 = 0x8000000000000000;
  char v78 = v107;
  unint64_t v33 = sub_10031F858(v105, v107);
  uint64_t v80 = *(void *)(a5 + 16);
  BOOL v81 = (v79 & 1) == 0;
  uint64_t v82 = v80 + v81;
  if (__OFADD__(v80, v81)) {
    goto LABEL_26;
  }
  char v83 = v79;
  if (*(void *)(a5 + 24) >= v82) {
    goto LABEL_18;
  }
  sub_100372F88(v82, v38);
  unint64_t v84 = sub_10031F858(v105, v78);
  if ((v83 & 1) == (v85 & 1))
  {
    unint64_t v33 = v84;
    while ((v83 & 1) == 0)
    {
      while (1)
      {
        swift_release();
        __break(1u);
LABEL_18:
        if ((v38 & 1) == 0) {
          break;
        }
        if (v83) {
          goto LABEL_20;
        }
      }
      sub_10091C19C();
    }
LABEL_20:
    uint64_t v38 = v108;
    a5 = *(void *)(*(void *)(v108 + 56) + 8 * v33);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_21;
    }
    goto LABEL_27;
  }
  swift_release();
  swift_release();
  sub_10096D3C0();
  __break(1u);
}

void sub_1006F4290(void *a1, unint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t *a6, unint64_t *a7, uint64_t *a8, unsigned __int8 a9, unint64_t a10)
{
  unint64_t v122 = a2;
  id v123 = a4;
  uint64_t v117 = a3;
  id v112 = a1;
  uint64_t v14 = a10;
  uint64_t v118 = sub_10002B7CC((uint64_t *)&unk_100AD6F90);
  uint64_t v110 = *(void *)(v118 - 8);
  uint64_t v15 = __chkstk_darwin(v118);
  Swift::UInt64 v105 = (uint64_t *)((char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v103 = (char *)&v100 - v18;
  __chkstk_darwin(v17);
  unint64_t v108 = (uint64_t *)((char *)&v100 - v19);
  uint64_t v20 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  id v104 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  int v107 = (char *)&v100 - v23;
  uint64_t v24 = sub_10096B760();
  uint64_t v113 = *(void *)(v24 - 8);
  uint64_t v114 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v102 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v109 = (char *)&v100 - v27;
  uint64_t v28 = sub_10096B7D0();
  uint64_t v115 = *(void *)(v28 - 8);
  uint64_t v116 = v28;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v101 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v106 = (char *)&v100 - v31;
  uint64_t v32 = sub_10096B830();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  unint64_t v35 = (uint64_t *)((char *)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = swift_allocObject();
  id v37 = a5;
  *(void *)(v36 + 16) = a5;
  *(void *)(v36 + 24) = a6;
  *(void *)(v36 + 32) = a7;
  *(void *)(v36 + 40) = a8;
  uint64_t v38 = a8;
  int v111 = a9;
  *(unsigned char *)(v36 + 48) = a9;
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v123;
  uint64_t v124 = v36;
  *(void *)(v36 + 56) = a10;
  unint64_t v40 = *(void **)(isUniquelyReferenced_nonNull_native + 64);
  *unint64_t v35 = v40;
  (*(void (**)(void *, void, uint64_t))(v33 + 104))(v35, enum case for DispatchPredicate.onQueue(_:), v32);
  int v120 = a6;
  swift_retain();
  unint64_t v119 = a7;
  swift_retain();
  unint64_t v121 = a10;
  sub_1000CE628(a10);
  id v41 = v40;
  unint64_t v42 = sub_10096B860();
  uint64_t v44 = *(void (**)(void *, uint64_t))(v33 + 8);
  unint64_t v43 = v33 + 8;
  v44(v35, v32);
  if ((v42 & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (*(unsigned char *)(isUniquelyReferenced_nonNull_native + 184) == 1)
  {
    a7 = (unint64_t *)(id)FPDomainUnavailableError();
    sub_100309FC8((uint64_t)a7, v37, v120, (uint64_t)v119, (Swift::UInt64)v38, v111, v121);
LABEL_24:
    swift_release();

    return;
  }
  uint64_t v45 = isUniquelyReferenced_nonNull_native + qword_100B0B320;
  swift_beginAccess();
  uint64_t v46 = *(void *)(*(void *)v45 + 16);
  id v47 = v112;
  id v123 = (uint64_t *)v45;
  if (v46)
  {
    swift_bridgeObjectRetain();
    sub_10031F918(v47);
    char v49 = v48;
    swift_bridgeObjectRelease();
    if (v49)
    {
      id v50 = v47;
      sub_1000CE628(v122);
      qos_class_self();
      uint64_t v51 = (uint64_t)v104;
      sub_10096B740();
      uint64_t v53 = v113;
      uint64_t v52 = v114;
      int v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v51, 1, v114);
      id v112 = v50;
      if (v54 == 1)
      {
        (*(void (**)(char *, void, uint64_t))(v53 + 104))(v102, enum case for DispatchQoS.QoSClass.utility(_:), v52);
        sub_10002B770(v51, (uint64_t *)&unk_100ACD990);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v102, v51, v52);
      }
      char v78 = v103;
      char v79 = v101;
      sub_10096B7B0();
      uint64_t v80 = v117;
      uint64_t v81 = v118;
      uint64_t v82 = (char *)v78 + *(int *)(v118 + 64);
      char v83 = (uint64_t (**)(uint64_t))((char *)v78 + *(int *)(v118 + 80));
      uint64_t v14 = v122;
      *char v78 = v122;
      v78[1] = v80;
      uint64_t v84 = v116;
      char v85 = *(void (**)(char *, char *, uint64_t))(v115 + 32);
      v85(v82, v79, v116);
      unint64_t v86 = (uint64_t (*)(uint64_t))v124;
      *char v83 = sub_1006F92A8;
      v83[1] = v86;
      unint64_t v87 = v105;
      *Swift::UInt64 v105 = v14;
      v87[1] = v80;
      v85((char *)v87 + *(int *)(v81 + 64), v82, v84);
      uint64_t v88 = (uint64_t *)((char *)v87 + *(int *)(v81 + 80));
      uint64_t v89 = swift_allocObject();
      *(void *)(v89 + 16) = sub_1006F92A8;
      *(void *)(v89 + 24) = v86;
      void *v88 = sub_1006FB200;
      v88[1] = v89;
      uint64_t v38 = v123;
      swift_beginAccess();
      id v90 = v112;
      swift_retain();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v126 = *v38;
      unint64_t v43 = v126;
      *uint64_t v38 = 0x8000000000000000;
      a7 = (unint64_t *)v90;
      unint64_t v42 = sub_10031F918(a7);
      uint64_t v92 = *(void *)(v43 + 16);
      BOOL v93 = (v91 & 1) == 0;
      uint64_t v94 = v92 + v93;
      if (!__OFADD__(v92, v93))
      {
        char v95 = v91;
        uint64_t v14 = (uint64_t)v87;
        if (*(void *)(v43 + 24) >= v94)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v91 & 1) == 0) {
              goto LABEL_29;
            }
          }
          else
          {
            sub_10091BFF0();
            if ((v95 & 1) == 0) {
              goto LABEL_29;
            }
          }
        }
        else
        {
          sub_100372C68(v94, isUniquelyReferenced_nonNull_native);
          uint64_t v96 = sub_10031F918(a7);
          if ((v95 & 1) != (v97 & 1))
          {
LABEL_30:
            swift_release();
            swift_release();
            swift_release();
            type metadata accessor for NSFileProviderItemIdentifier(0);
            sub_1000B6C28(v121);
            sub_10096D3C0();
            __break(1u);
            return;
          }
          unint64_t v42 = v96;
          if ((v95 & 1) == 0)
          {
LABEL_29:
            swift_release();
            swift_release();
            sub_1000B6C28(v121);
            __break(1u);
            goto LABEL_30;
          }
        }
        uint64_t isUniquelyReferenced_nonNull_native = v126;
        unint64_t v43 = *(void *)(*(void *)(v126 + 56) + 8 * v42);
        unint64_t v125 = v43;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_21:
          unint64_t v99 = *(void *)(v43 + 16);
          unint64_t v98 = *(void *)(v43 + 24);
          if (v99 >= v98 >> 1) {
            unint64_t v43 = sub_1006A28B0(v98 > 1, v99 + 1, 1, v43);
          }
          *(void *)(v43 + 16) = v99 + 1;
          sub_10001AE98(v14, v43+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(void *)(v110 + 72) * v99, (uint64_t *)&unk_100AD6F90);
          unint64_t v125 = v43;
          sub_10092657C((uint64_t *)&v125, 1, &v126, v42, a7);

          swift_bridgeObjectRelease();
          *uint64_t v38 = isUniquelyReferenced_nonNull_native;

          swift_endAccess();
          goto LABEL_24;
        }
LABEL_27:
        unint64_t v43 = sub_1006A28B0(0, *(void *)(v43 + 16) + 1, 1, v43);
        goto LABEL_21;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
  }
  sub_10002B7CC(&qword_100AD6FA0);
  unint64_t v55 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_100973BB0;
  unint64_t v121 = v56;
  unint64_t v119 = (unint64_t *)(v56 + v55);
  int v120 = (uint64_t *)v47;
  sub_1000CE628(v122);
  qos_class_self();
  uint64_t v57 = (uint64_t)v107;
  sub_10096B740();
  uint64_t v59 = v113;
  uint64_t v58 = v114;
  int v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v57, 1, v114);
  unint64_t v61 = (uint64_t (*)(uint64_t))v124;
  if (v60 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v109, enum case for DispatchQoS.QoSClass.utility(_:), v58);
    sub_10002B770(v57, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v109, v57, v58);
  }
  uint64_t v62 = v106;
  sub_10096B7B0();
  unint64_t v64 = v117;
  uint64_t v63 = v118;
  uint64_t v65 = v108;
  uint64_t v66 = (char *)v108 + *(int *)(v118 + 64);
  unint64_t v67 = (uint64_t (**)(uint64_t))((char *)v108 + *(int *)(v118 + 80));
  unint64_t v68 = v122;
  *unint64_t v108 = v122;
  v65[1] = v64;
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v115 + 32);
  uint64_t v70 = v62;
  uint64_t v71 = v116;
  v69(v66, v70, v116);
  *unint64_t v67 = sub_1006F92A8;
  v67[1] = v61;
  unint64_t v72 = v119;
  *unint64_t v119 = v68;
  v72[1] = v64;
  v69((char *)v72 + *(int *)(v63 + 64), v66, v71);
  uint64_t v73 = (unint64_t *)((char *)v72 + *(int *)(v63 + 80));
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_1006F92A8;
  *(void *)(v74 + 24) = v61;
  *uint64_t v73 = sub_1006FB200;
  v73[1] = v74;
  uint64_t v75 = v123;
  swift_beginAccess();
  swift_retain();
  char v76 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v126 = *v75;
  *uint64_t v75 = 0x8000000000000000;
  uint64_t v77 = v120;
  sub_10038A360(v121, v120, v76);
  *uint64_t v75 = v126;

  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
}

void sub_1006F4D34(Swift::UInt64 a1, int a2, unint64_t a3, unint64_t a4, unint64_t a5, void *a6, uint64_t a7, void *a8)
{
  unint64_t v105 = a4;
  Swift::UInt64 v106 = a1;
  unint64_t v108 = a3;
  int v107 = a2;
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100AD6F70);
  unint64_t v97 = *(void *)(v12 - 8);
  uint64_t v98 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v94 = (unint64_t *)((char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v13);
  BOOL v93 = (char *)&v90 - v16;
  __chkstk_darwin(v15);
  uint64_t v96 = (id *)((char *)&v90 - v17);
  uint64_t v18 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  char v95 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v90 - v21;
  uint64_t v23 = sub_10096B760();
  uint64_t v100 = *(void *)(v23 - 8);
  uint64_t v101 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v92 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v90 - v26;
  uint64_t v28 = sub_10096B7D0();
  uint64_t v102 = *(void *)(v28 - 8);
  uint64_t v103 = v28;
  uint64_t v29 = __chkstk_darwin(v28);
  char v91 = (char *)&v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (uint64_t)&v90 - v31;
  uint64_t v33 = sub_10096B830();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unint64_t v36 = (unint64_t)&v90 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v37 = (uint64_t (*)(uint64_t))swift_allocObject();
  unint64_t v99 = a6;
  *((void *)v37 + 2) = a6;
  *((void *)v37 + 3) = a7;
  uint64_t v109 = v37;
  *((void *)v37 + 4) = a8;
  uint64_t v38 = *(unint64_t **)(a5 + 64);
  *(void *)unint64_t v36 = v38;
  (*(void (**)(unint64_t, void, uint64_t))(v34 + 104))(v36, enum case for DispatchPredicate.onQueue(_:), v33);
  uint64_t v104 = a7;
  swift_retain();
  id v39 = a8;
  unint64_t v40 = v38;
  uint64_t v41 = sub_10096B860();
  (*(void (**)(unint64_t, uint64_t))(v34 + 8))(v36, v33);
  if ((v41 & 1) == 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    a5 = sub_1006A28C4(0, *(void *)(a5 + 16) + 1, 1, a5);
LABEL_26:
    unint64_t v89 = *(void *)(a5 + 16);
    unint64_t v88 = *(void *)(a5 + 24);
    if (v89 >= v88 >> 1) {
      a5 = sub_1006A28C4(v88 > 1, v89 + 1, 1, a5);
    }
    *(void *)(a5 + 16) = v89 + 1;
    sub_10001AE98((uint64_t)v38, a5+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))+ *(void *)(v97 + 72) * v89, (uint64_t *)&unk_100AD6F70);
    *(void *)(*(void *)(v32 + 56) + 8 * v36) = a5;
    *(void *)uint64_t v41 = v32;
    swift_endAccess();
LABEL_29:
    swift_release();
    return;
  }
  if (*(unsigned char *)(a5 + 184) == 1)
  {
    id v42 = (id)FPDomainUnavailableError();
    if (v42)
    {
      type metadata accessor for Code(0);
      uint64_t v111 = -1004;
      swift_errorRetain();
      sub_1006F9218((unint64_t *)&qword_100ACC8C0, type metadata accessor for Code);
      if ((sub_10096AA60() & 1) == 0)
      {
        swift_errorRetain();
        ((void (*)(void, id))v99)(0, v42);
        swift_release();

        goto LABEL_16;
      }
    }
    ((void (*)(id, void))v99)(v39, 0);
    swift_release();
LABEL_16:

    return;
  }
  unint64_t v43 = (void *)(a5 + qword_100B0B328);
  swift_beginAccess();
  uint64_t v44 = *(void *)(*v43 + 16);
  unint64_t v99 = v43;
  if (!v44 || (sub_10031F858(v106, v107), (v45 & 1) == 0))
  {
    sub_10002B7CC((uint64_t *)&unk_100AD6F80);
    unint64_t v50 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_100973BB0;
    uint64_t v104 = v51;
    unint64_t v97 = v51 + v50;
    sub_1000CE628(v108);
    qos_class_self();
    sub_10096B740();
    uint64_t v53 = v100;
    uint64_t v52 = v101;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v22, 1, v101) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v53 + 104))(v27, enum case for DispatchQoS.QoSClass.utility(_:), v52);
      sub_10002B770((uint64_t)v22, (uint64_t *)&unk_100ACD990);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v27, v22, v52);
    }
    sub_10096B7B0();
    uint64_t v54 = v98;
    unint64_t v55 = v96;
    uint64_t v56 = (char *)v96 + *(int *)(v98 + 64);
    uint64_t v57 = (uint64_t (**)(uint64_t))((char *)v96 + *(int *)(v98 + 80));
    unint64_t v58 = v108;
    unint64_t v59 = v105;
    *uint64_t v96 = v108;
    v55[1] = v59;
    uint64_t v60 = v103;
    unint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 32);
    v61(v56, v32, v103);
    uint64_t v62 = v109;
    *uint64_t v57 = sub_1006F935C;
    v57[1] = v62;
    unint64_t v63 = v97;
    *(void *)unint64_t v97 = v58;
    *(void *)(v63 + 8) = v59;
    v61((char *)(v63 + *(int *)(v54 + 64)), (uint64_t)v56, v60);
    unint64_t v64 = (void *)(v63 + *(int *)(v54 + 80));
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = sub_1006F935C;
    *(void *)(v65 + 24) = v62;
    *unint64_t v64 = sub_1006FB200;
    v64[1] = v65;
    uint64_t v66 = v99;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v110 = *v66;
    *uint64_t v66 = 0x8000000000000000;
    sub_10038A4C4(v104, v106, v107, isUniquelyReferenced_nonNull_native);
    *uint64_t v66 = v110;
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_29;
  }
  sub_1000CE628(v108);
  qos_class_self();
  uint64_t v46 = (uint64_t)v95;
  sub_10096B740();
  uint64_t v48 = v100;
  uint64_t v47 = v101;
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v46, 1, v101);
  id v90 = v39;
  if (v49 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v92, enum case for DispatchQoS.QoSClass.utility(_:), v47);
    sub_10002B770(v46, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v92, v46, v47);
  }
  uint64_t v38 = v94;
  uint64_t v68 = v98;
  unint64_t v69 = v105;
  uint64_t v70 = v93;
  uint64_t v71 = v91;
  sub_10096B7B0();
  unint64_t v72 = (char *)v70 + *(int *)(v68 + 64);
  uint64_t v73 = (uint64_t (**)(uint64_t))((char *)v70 + *(int *)(v68 + 80));
  unint64_t v74 = v108;
  *uint64_t v70 = v108;
  v70[1] = v69;
  uint64_t v75 = v103;
  char v76 = *(void (**)(char *, char *, uint64_t))(v102 + 32);
  v76(v72, v71, v103);
  uint64_t v77 = v109;
  *uint64_t v73 = sub_1006F935C;
  v73[1] = v77;
  unint64_t v78 = v105;
  *uint64_t v38 = v74;
  v38[1] = v78;
  v76((char *)v38 + *(int *)(v68 + 64), v72, v75);
  char v79 = (unint64_t *)((char *)v38 + *(int *)(v68 + 80));
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = sub_1006F935C;
  *(void *)(v80 + 24) = v77;
  *char v79 = sub_1006FB200;
  v79[1] = v80;
  uint64_t v41 = (uint64_t)v99;
  swift_beginAccess();
  swift_retain();
  uint64_t v32 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v110 = *(void *)v41;
  a5 = v110;
  *(void *)uint64_t v41 = 0x8000000000000000;
  unint64_t v36 = sub_10031F858(v106, v107);
  uint64_t v82 = *(void *)(a5 + 16);
  BOOL v83 = (v81 & 1) == 0;
  uint64_t v84 = v82 + v83;
  if (__OFADD__(v82, v83)) {
    goto LABEL_31;
  }
  char v85 = v81;
  if (*(void *)(a5 + 24) >= v84) {
    goto LABEL_23;
  }
  sub_100372F88(v84, v32);
  unint64_t v86 = sub_10031F858(v106, v107);
  if ((v85 & 1) == (v87 & 1))
  {
    unint64_t v36 = v86;
    while ((v85 & 1) == 0)
    {
      while (1)
      {

        swift_release();
        __break(1u);
LABEL_23:
        if ((v32 & 1) == 0) {
          break;
        }
        if (v85) {
          goto LABEL_25;
        }
      }
      sub_10091C19C();
    }
LABEL_25:
    uint64_t v32 = v110;
    a5 = *(void *)(*(void *)(v110 + 56) + 8 * v36);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_26;
    }
    goto LABEL_32;
  }

  swift_release();
  swift_release();
  sub_10096D3C0();
  __break(1u);
}

void sub_1006F579C(Swift::UInt64 a1, int a2, unint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(void, id), unint64_t a7, void *a8, unint64_t *a9, void *a10)
{
  unint64_t v111 = a3;
  unint64_t v112 = a4;
  int v114 = a2;
  Swift::UInt64 v113 = a1;
  uint64_t v14 = sub_10002B7CC((uint64_t *)&unk_100AD6F70);
  uint64_t v105 = *(void *)(v14 - 8);
  uint64_t v106 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v97 = (unint64_t *)((char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v94 = (unint64_t *)((char *)&v91 - v18);
  __chkstk_darwin(v17);
  uint64_t v102 = (unint64_t *)((char *)&v91 - v19);
  uint64_t v20 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  char v95 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v100 = (char *)&v91 - v23;
  uint64_t v24 = sub_10096B760();
  uint64_t v107 = *(void *)(v24 - 8);
  uint64_t v108 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  BOOL v93 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v103 = (char *)&v91 - v27;
  uint64_t v28 = sub_10096B7D0();
  uint64_t v109 = *(void *)(v28 - 8);
  uint64_t v110 = v28;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v92 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  unint64_t v99 = (char *)&v91 - v31;
  uint64_t v32 = sub_10096B830();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (uint64_t *)((char *)&v91 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v36 = (uint64_t (*)(uint64_t))swift_allocObject();
  uint64_t v96 = a6;
  *((void *)v36 + 2) = a6;
  *((void *)v36 + 3) = a7;
  uint64_t v101 = a8;
  *((void *)v36 + 4) = a8;
  *((void *)v36 + 5) = a9;
  *((void *)v36 + 6) = a10;
  uint64_t v37 = *(void *)(a5 + 64);
  *uint64_t v35 = v37;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v35, enum case for DispatchPredicate.onQueue(_:), v32);
  unint64_t v98 = a7;
  swift_retain();
  uint64_t v104 = a9;
  swift_retain();
  uint64_t v38 = a10;
  id v39 = (id)v37;
  char v40 = sub_10096B860();
  (*(void (**)(uint64_t *, uint64_t))(v33 + 8))(v35, v32);
  if ((v40 & 1) == 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    a5 = sub_1006A28C4(0, *(void *)(a5 + 16) + 1, 1, a5);
LABEL_26:
    unint64_t v90 = *(void *)(a5 + 16);
    unint64_t v89 = *(void *)(a5 + 24);
    if (v90 >= v89 >> 1) {
      a5 = sub_1006A28C4(v89 > 1, v90 + 1, 1, a5);
    }
    *(void *)(a5 + 16) = v90 + 1;
    sub_10001AE98((uint64_t)v35, a5+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(void *)(v105 + 72) * v90, (uint64_t *)&unk_100AD6F70);
    *(void *)(*(void *)(v37 + 56) + 8 * a7) = a5;
    *uint64_t v38 = v37;
    swift_endAccess();
LABEL_29:
    swift_release();
    return;
  }
  if (*(unsigned char *)(a5 + 184) == 1)
  {
    id v41 = (id)FPDomainUnavailableError();
    if (v41)
    {
      type metadata accessor for Code(0);
      uint64_t v116 = -1004;
      swift_errorRetain();
      sub_1006F9218((unint64_t *)&qword_100ACC8C0, type metadata accessor for Code);
      if ((sub_10096AA60() & 1) == 0)
      {
        swift_errorRetain();
        v96(0, v41);
        swift_release();

        goto LABEL_16;
      }
    }
    ((void (*)(uint64_t *, void))v101)(v38, 0);
    swift_release();
LABEL_16:

    return;
  }
  id v42 = (void *)(a5 + qword_100B0B328);
  swift_beginAccess();
  uint64_t v43 = *(void *)(*v42 + 16);
  uint64_t v101 = v42;
  if (!v43 || (sub_10031F858(v113, v114), (v44 & 1) == 0))
  {
    sub_10002B7CC((uint64_t *)&unk_100AD6F80);
    unint64_t v50 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_100973BB0;
    uint64_t v104 = (unint64_t *)(v51 + v50);
    uint64_t v105 = v51;
    unint64_t v52 = v111;
    sub_1000CE628(v111);
    qos_class_self();
    uint64_t v53 = (uint64_t)v100;
    sub_10096B740();
    uint64_t v55 = v107;
    uint64_t v54 = v108;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v53, 1, v108) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v55 + 104))(v103, enum case for DispatchQoS.QoSClass.utility(_:), v54);
      sub_10002B770(v53, (uint64_t *)&unk_100ACD990);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v103, v53, v54);
    }
    uint64_t v56 = v99;
    sub_10096B7B0();
    uint64_t v57 = v106;
    unint64_t v58 = v102;
    unint64_t v59 = (char *)v102 + *(int *)(v106 + 64);
    uint64_t v60 = (uint64_t (**)(uint64_t))((char *)v102 + *(int *)(v106 + 80));
    unint64_t v61 = v112;
    *uint64_t v102 = v52;
    v58[1] = v61;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
    unint64_t v63 = v56;
    uint64_t v64 = v110;
    v62(v59, v63, v110);
    *uint64_t v60 = sub_1006F9208;
    v60[1] = v36;
    uint64_t v65 = v104;
    unint64_t *v104 = v52;
    v65[1] = v61;
    v62((char *)v65 + *(int *)(v57 + 64), v59, v64);
    uint64_t v66 = (unint64_t *)((char *)v65 + *(int *)(v57 + 80));
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = sub_1006F9208;
    *(void *)(v67 + 24) = v36;
    *uint64_t v66 = sub_1006FB200;
    v66[1] = v67;
    uint64_t v68 = v101;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v115 = *v68;
    *uint64_t v68 = 0x8000000000000000;
    sub_10038A4C4(v105, v113, v114, isUniquelyReferenced_nonNull_native);
    *uint64_t v68 = v115;
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_29;
  }
  unint64_t v45 = v111;
  sub_1000CE628(v111);
  qos_class_self();
  uint64_t v46 = (uint64_t)v95;
  sub_10096B740();
  uint64_t v48 = v107;
  uint64_t v47 = v108;
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v46, 1, v108);
  char v91 = v38;
  uint64_t v35 = (uint64_t *)v36;
  if (v49 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v93, enum case for DispatchQoS.QoSClass.utility(_:), v47);
    sub_10002B770(v46, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v93, v46, v47);
  }
  uint64_t v70 = v106;
  uint64_t v71 = v94;
  unint64_t v72 = v92;
  sub_10096B7B0();
  uint64_t v73 = (char *)v71 + *(int *)(v70 + 64);
  unint64_t v74 = (uint64_t (**)(uint64_t))((char *)v71 + *(int *)(v70 + 80));
  unint64_t v75 = v112;
  *uint64_t v71 = v45;
  v71[1] = v75;
  uint64_t v76 = v110;
  uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
  v77(v73, v72, v110);
  *unint64_t v74 = sub_1006F9208;
  v74[1] = (uint64_t (*)(uint64_t))v35;
  unint64_t v78 = v97;
  *unint64_t v97 = v45;
  v78[1] = v75;
  v77((char *)v78 + *(int *)(v70 + 64), v73, v76);
  char v79 = (unint64_t *)((char *)v78 + *(int *)(v70 + 80));
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = sub_1006F9208;
  *(void *)(v80 + 24) = v35;
  *char v79 = sub_1006FB200;
  v79[1] = v80;
  uint64_t v38 = v101;
  swift_beginAccess();
  swift_retain();
  uint64_t v37 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v115 = *v38;
  a5 = v115;
  *uint64_t v38 = 0x8000000000000000;
  char v81 = v114;
  a7 = sub_10031F858(v113, v114);
  uint64_t v83 = *(void *)(a5 + 16);
  BOOL v84 = (v82 & 1) == 0;
  uint64_t v85 = v83 + v84;
  if (__OFADD__(v83, v84)) {
    goto LABEL_31;
  }
  char v86 = v82;
  uint64_t v35 = (uint64_t *)v78;
  if (*(void *)(a5 + 24) >= v85) {
    goto LABEL_23;
  }
  sub_100372F88(v85, v37);
  unint64_t v87 = sub_10031F858(v113, v81);
  if ((v86 & 1) == (v88 & 1))
  {
    a7 = v87;
    while ((v86 & 1) == 0)
    {
      while (1)
      {

        swift_release();
        swift_release();
        __break(1u);
LABEL_23:
        if ((v37 & 1) == 0) {
          break;
        }
        if (v86) {
          goto LABEL_25;
        }
      }
      sub_10091C19C();
    }
LABEL_25:
    uint64_t v37 = v115;
    a5 = *(void *)(*(void *)(v115 + 56) + 8 * a7);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_26;
    }
    goto LABEL_32;
  }

  swift_release();
  swift_release();
  swift_release();
  sub_10096D3C0();
  __break(1u);
}

void sub_1006F627C(Swift::UInt64 a1, int a2, unint64_t a3, unint64_t a4, unint64_t *a5, unint64_t *a6, void (*a7)(void, id), uint64_t a8, void (*a9)(id, void), uint64_t *a10, void *a11)
{
  unint64_t v121 = a3;
  unint64_t v122 = a5;
  unint64_t v118 = a4;
  Swift::UInt64 v119 = a1;
  int v120 = a2;
  uint64_t v14 = a10;
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100AD6F70);
  uint64_t v112 = *(void *)(v15 - 8);
  uint64_t v113 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v102 = (unint64_t *)((char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v100 = (char *)&v95 - v19;
  __chkstk_darwin(v18);
  uint64_t v110 = (uint64_t *)((char *)&v95 - v20);
  uint64_t v21 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v101 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v109 = (char *)&v95 - v24;
  uint64_t v25 = sub_10096B760();
  uint64_t v114 = *(void *)(v25 - 8);
  uint64_t v115 = v25;
  uint64_t v26 = __chkstk_darwin(v25);
  unint64_t v99 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  unint64_t v111 = (char *)&v95 - v28;
  uint64_t v29 = sub_10096B7D0();
  uint64_t v116 = *(void *)(v29 - 8);
  uint64_t v117 = v29;
  uint64_t v30 = __chkstk_darwin(v29);
  unint64_t v98 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v108 = (char *)&v95 - v32;
  uint64_t v33 = sub_10096B830();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unint64_t v36 = (uint64_t *)((char *)&v95 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v37 + 2) = a6;
  *((void *)v37 + 3) = a7;
  uint64_t v105 = a7;
  *((void *)v37 + 4) = a8;
  *((void *)v37 + 5) = a9;
  uint64_t v103 = a9;
  unint64_t v38 = (unint64_t)v122;
  *((void *)v37 + 6) = a10;
  *((void *)v37 + 7) = a11;
  uint64_t v39 = *(void *)(v38 + 64);
  *unint64_t v36 = v39;
  (*(void (**)(uint64_t *, void, uint64_t))(v34 + 104))(v36, enum case for DispatchPredicate.onQueue(_:), v33);
  uint64_t v107 = a6;
  swift_retain();
  uint64_t v106 = a8;
  swift_retain();
  uint64_t v104 = a10;
  swift_retain();
  id v40 = a11;
  id v41 = (id)v39;
  char v42 = sub_10096B860();
  char v44 = *(void (**)(uint64_t *, uint64_t))(v34 + 8);
  unint64_t v43 = v34 + 8;
  v44(v36, v33);
  if ((v42 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    unint64_t v38 = sub_1006A28C4(0, *(void *)(v38 + 16) + 1, 1, v38);
LABEL_26:
    uint64_t v92 = v112;
    unint64_t v94 = *(void *)(v38 + 16);
    unint64_t v93 = *(void *)(v38 + 24);
    if (v94 >= v93 >> 1) {
      unint64_t v38 = sub_1006A28C4(v93 > 1, v94 + 1, 1, v38);
    }
    *(void *)(v38 + 16) = v94 + 1;
    sub_10001AE98(a8, v38+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(void *)(v92 + 72) * v94, (uint64_t *)&unk_100AD6F70);
    *(void *)(*(void *)(v39 + 56) + 8 * v43) = v38;
    *uint64_t v14 = v39;
    swift_endAccess();
LABEL_29:
    swift_release();
    return;
  }
  if (*(unsigned char *)(v38 + 184) == 1)
  {
    id v45 = (id)FPDomainUnavailableError();
    if (v45)
    {
      uint64_t v46 = v107;
      swift_beginAccess();
      if (v46[2])
      {
        swift_errorRetain();
        v105(0, v45);
        swift_release();
LABEL_31:

        goto LABEL_32;
      }
      type metadata accessor for Code(0);
      uint64_t v124 = -1004;
      swift_errorRetain();
      sub_1006F9218((unint64_t *)&qword_100ACC8C0, type metadata accessor for Code);
      if ((sub_10096AA60() & 1) == 0)
      {
        swift_errorRetain();
        v105(0, v45);
        swift_release();

        goto LABEL_31;
      }
    }
    v103(v40, 0);
    swift_release();
LABEL_32:

    return;
  }
  unint64_t v47 = v38 + qword_100B0B328;
  swift_beginAccess();
  uint64_t v48 = *(void *)(*(void *)v47 + 16);
  unint64_t v122 = (unint64_t *)v47;
  if (!v48 || (sub_10031F858(v119, v120), (v49 & 1) == 0))
  {
    sub_10002B7CC((uint64_t *)&unk_100AD6F80);
    unint64_t v54 = (*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_100973BB0;
    uint64_t v112 = v55;
    uint64_t v107 = (unint64_t *)(v55 + v54);
    sub_1000CE628(v121);
    qos_class_self();
    uint64_t v56 = (uint64_t)v109;
    sub_10096B740();
    uint64_t v58 = v114;
    uint64_t v57 = v115;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v56, 1, v115) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v58 + 104))(v111, enum case for DispatchQoS.QoSClass.utility(_:), v57);
      sub_10002B770(v56, (uint64_t *)&unk_100ACD990);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v111, v56, v57);
    }
    unint64_t v59 = v108;
    sub_10096B7B0();
    uint64_t v60 = v113;
    unint64_t v61 = v110;
    uint64_t v62 = (char *)v110 + *(int *)(v113 + 64);
    unint64_t v63 = (uint64_t (**)(uint64_t))((char *)v110 + *(int *)(v113 + 80));
    unint64_t v64 = v121;
    uint64_t v66 = v117;
    unint64_t v65 = v118;
    *uint64_t v110 = v121;
    v61[1] = v65;
    uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
    v67(v62, v59, v66);
    *unint64_t v63 = sub_1006F930C;
    v63[1] = v37;
    uint64_t v68 = v107;
    *uint64_t v107 = v64;
    v68[1] = v65;
    v67((char *)v68 + *(int *)(v60 + 64), v62, v66);
    unint64_t v69 = (unint64_t *)((char *)v68 + *(int *)(v60 + 80));
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = sub_1006F930C;
    *(void *)(v70 + 24) = v37;
    *unint64_t v69 = sub_1006FB200;
    v69[1] = v70;
    uint64_t v71 = v122;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v123 = *v71;
    *uint64_t v71 = 0x8000000000000000;
    sub_10038A4C4(v112, v119, v120, isUniquelyReferenced_nonNull_native);
    *uint64_t v71 = v123;
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_29;
  }
  sub_1000CE628(v121);
  qos_class_self();
  uint64_t v50 = (uint64_t)v101;
  sub_10096B740();
  uint64_t v52 = v114;
  uint64_t v51 = v115;
  int v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v50, 1, v115);
  unint64_t v97 = v37;
  id v96 = v40;
  if (v53 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v52 + 104))(v99, enum case for DispatchQoS.QoSClass.utility(_:), v51);
    sub_10002B770(v50, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v99, v50, v51);
  }
  uint64_t v73 = v113;
  unint64_t v74 = v100;
  unint64_t v75 = v98;
  sub_10096B7B0();
  uint64_t v76 = (char *)v74 + *(int *)(v73 + 64);
  uint64_t v77 = (uint64_t (**)(uint64_t))((char *)v74 + *(int *)(v73 + 80));
  unint64_t v78 = v121;
  uint64_t v80 = v117;
  unint64_t v79 = v118;
  *unint64_t v74 = v121;
  v74[1] = v79;
  char v81 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
  v81(v76, v75, v80);
  a8 = (uint64_t)v97;
  *uint64_t v77 = sub_1006F930C;
  v77[1] = (uint64_t (*)(uint64_t))a8;
  char v82 = v102;
  *uint64_t v102 = v78;
  v82[1] = v79;
  v81((char *)v82 + *(int *)(v73 + 64), v76, v80);
  uint64_t v83 = (unint64_t *)((char *)v82 + *(int *)(v73 + 80));
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = sub_1006F930C;
  *(void *)(v84 + 24) = a8;
  *uint64_t v83 = sub_1006FB200;
  v83[1] = v84;
  uint64_t v14 = (uint64_t *)v122;
  swift_beginAccess();
  swift_retain();
  uint64_t v39 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v123 = *v14;
  unint64_t v38 = v123;
  *uint64_t v14 = 0x8000000000000000;
  unint64_t v43 = sub_10031F858(v119, v120);
  uint64_t v86 = *(void *)(v38 + 16);
  BOOL v87 = (v85 & 1) == 0;
  uint64_t v88 = v86 + v87;
  if (__OFADD__(v86, v87)) {
    goto LABEL_34;
  }
  char v89 = v85;
  a8 = (uint64_t)v82;
  if (*(void *)(v38 + 24) >= v88) {
    goto LABEL_23;
  }
  sub_100372F88(v88, v39);
  unint64_t v90 = sub_10031F858(v119, v120);
  if ((v89 & 1) == (v91 & 1))
  {
    unint64_t v43 = v90;
    while ((v89 & 1) == 0)
    {
      while (1)
      {

        swift_release();
        swift_release();
        swift_release();
        __break(1u);
LABEL_23:
        if ((v39 & 1) == 0) {
          break;
        }
        if (v89) {
          goto LABEL_25;
        }
      }
      sub_10091C19C();
    }
LABEL_25:
    uint64_t v39 = v123;
    unint64_t v38 = *(void *)(*(void *)(v123 + 56) + 8 * v43);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_26;
    }
    goto LABEL_35;
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10096D3C0();
  __break(1u);
}

uint64_t sub_1006F6DF8()
{
  return sub_10026BFF4(v0, sub_1006F6E44);
}

void sub_1006F6E44()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void **)(v0 + 24);
  unint64_t v3 = *(void **)(v1 + qword_100ADA010);
  *(void *)(v1 + qword_100ADA010) = v2;
  id v4 = v2;
}

uint64_t sub_1006F6E84()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for ReconciliationID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 106) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(unint64_t))(*(void *)(v5 - 8) + 8))(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_1006F7028(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v6 = swift_getAssociatedConformanceWitness();
  v2[2] = AssociatedTypeWitness;
  v2[3] = v4;
  v2[4] = AssociatedConformanceWitness;
  v2[5] = v6;
  uint64_t v7 = *(void *)(type metadata accessor for ReconciliationID() - 8);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[8];
  uint64_t v11 = (uint64_t)(v1 + 9);
  uint64_t v12 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 106) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v13 = (void *)swift_task_alloc();
  v2[6] = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1006F71D8;
  return sub_1006DBFAC(a1, v8, v9, v10, v11, v12);
}

uint64_t sub_1006F71D8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1006F72D4()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = sub_10096B3D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F7408()
{
  uint64_t v1 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  unint64_t v4 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v3 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_1006DBAD8(v0 + v2, *(void *)(v0 + v4), *(void *)(v0 + v4 + 8), *(unsigned __int8 *)(v0 + v4 + 16), *(void (**)(uint64_t))(v0 + v5), *(void *)(v0 + v5 + 8), *(void *)(v0 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1006F74CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1006DB5EC(*(void *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), *(void (**)(uint64_t))(v1 + 88), *(void *)(v1 + 96), a1);
}

uint64_t sub_1006F7510()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = sub_10096B3D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F7618(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1006DBA58(a1, v1 + v4, *(uint64_t (**)(uint64_t))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1006F76AC()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = sub_10096B3D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F7818()
{
  uint64_t v1 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 25) & 0xFFFFFFFFFFFFFFF8;
  return sub_1006DA9B0(v0 + v2, *(uint64_t (**)(uint64_t))(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v4), *(void *)(v0 + v5), *(void *)(v0 + v5 + 8), *(unsigned __int8 *)(v0 + v5 + 16), *(unsigned __int8 *)(v0 + v5 + 17), *(void *)(v0 + v6), *(void *)(v0 + v6 + 8), *(unsigned char **)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char **)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1006F7908()
{
  uint64_t result = (*(uint64_t (**)(void))(v0 + 16))();
  if (!v1) {
    return sub_1006CCC24();
  }
  return result;
}

uint64_t sub_1006F7944()
{
  return sub_1006DA918(*(uint64_t (**)(void))(v0 + 24));
}

id sub_1006F7964@<X0>(void *a1@<X8>)
{
  unint64_t v2 = *(void **)(v1 + qword_100ADA030);
  *a1 = v2;
  return v2;
}

void sub_1006F799C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + qword_100ADA028);
}

void sub_1006F79B0()
{
  if (!*(void *)(v0 + 240))
  {
    *(void *)(v0 + 240) = os_transaction_create();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1006F79F8()
{
  return sub_1006D6B68(v0);
}

void sub_1006F7A14()
{
  sub_1006D6C14(v0);
}

uint64_t sub_1006F7A30()
{
  return *(void *)(v0 + 208);
}

uint64_t sub_1006F7A38()
{
  return sub_1006D9D14(v0);
}

uint64_t sub_1006F7A54()
{
  return sub_1006E75BC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1006F7A74()
{
  return sub_1006E76C0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1006F7A90()
{
  return sub_1006E78E8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1006F7AB0()
{
  return sub_1006E79A4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1006F7ACC(void *a1)
{
  return swift_release();
}

uint64_t sub_1006F7B14(void *a1)
{
  return swift_release();
}

uint64_t sub_1006F7B5C(void *a1)
{
  return sub_1006E7B04(a1, v1);
}

uint64_t sub_1006F7B78(void *a1)
{
  return sub_1006D4AE0(a1, *(uint64_t **)(v1 + 32));
}

uint64_t sub_1006F7B98(void *a1)
{
  return sub_1006D4E20(a1, *(void *)(v1 + 32));
}

uint64_t sub_1006F7BB8(void *a1)
{
  return sub_1006E7820(a1, v1);
}

uint64_t sub_1006F7BD4(void *a1)
{
  return sub_1006E3C18(a1, v1);
}

uint64_t sub_1006F7BF0()
{
  return sub_1006E34D0(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1006F7C10()
{
  return sub_1006E3404(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1006F7C2C()
{
  return sub_1006E3348(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1006F7C48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006F7CA8()
{
  return swift_deallocObject();
}

uint64_t sub_1006F7CB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1006DC5D0(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1006F7CC4()
{
  return swift_deallocObject();
}

BOOL sub_1006F7CD4(id *a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 16);
  return ((v2 ^ [*a1 selectedForMaterialization]) & 1) == 0;
}

void sub_1006F7D10()
{
  *(unsigned char *)(*(void *)(v0 + 16) + qword_100ADA028) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1006F7D28()
{
  return sub_1006D6A7C(v0);
}

uint64_t sub_1006F7D44()
{
  return sub_1006D6910(v0);
}

id sub_1006F7D64()
{
  return sub_1006D6860(v0);
}

uint64_t sub_1006F7D80()
{
  return sub_1006D6910(v0);
}

uint64_t sub_1006F7DA0()
{
  return sub_1006D6158(v0);
}

id sub_1006F7DBC(void *a1)
{
  return sub_1006D60DC(a1, v1);
}

void sub_1006F7DC4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 122) = *(unsigned char *)(v0 + 24);
  sub_1006D5F48();
}

void sub_1006F7DFC(uint64_t a1, NSObject *a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, unint64_t a7, uint64_t a8, void (*a9)(void *), uint64_t a10)
{
  uint64_t v50 = a8;
  char v49 = a9;
  uint64_t v17 = sub_10096B480();
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
LABEL_4:
    dispatch_group_leave(a2);
    return;
  }
  uint64_t v48 = v18;
  swift_errorRetain();
  if (sub_1006EA1E8(a1))
  {
    swift_errorRelease();
    goto LABEL_4;
  }
  uint64_t v47 = a10;
  id v21 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  sub_1000CE628(a7);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  sub_1000CE628(a7);
  uint64_t v22 = sub_10096B470();
  os_log_type_t v23 = sub_10096C5D0();
  int v46 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    id v45 = a2;
    uint64_t v25 = v24;
    unint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    v53[0] = v44;
    *(_DWORD *)uint64_t v25 = 136446978;
    os_log_t v42 = v22;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_100719D44(a3, a4, v53);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v26 = VFSItemID.parseableString.getter(a5, a6);
    uint64_t v52 = sub_100719D44(v26, v27, v53);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2080;
    unint64_t v28 = sub_1005232CC(a7);
    unint64_t v30 = v29;
    sub_1000B6C28(a7);
    uint64_t v52 = sub_100719D44(v28, v30, v53);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_1000B6C28(a7);
    *(_WORD *)(v25 + 32) = 2112;
    swift_getErrorValue();
    id v31 = Error.prettyDescription.getter(v51);
    uint64_t v52 = (uint64_t)v31;
    sub_10096C8C0();
    *unint64_t v43 = v31;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v32 = v42;
    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v46, "🚧  %{public}s of %s failed for %s: %@", (uint8_t *)v25, 0x2Au);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v45;
    swift_slowDealloc();
  }
  else
  {
    sub_1000B6C28(a7);
    swift_bridgeObjectRelease_n();
    sub_1000B6C28(a7);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v17);
  type metadata accessor for NSFileProviderError(0);
  v53[0] = -2005;
  sub_10002B7CC(&qword_100ACE1E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(inited + 40) = v34;
  swift_getErrorValue();
  uint64_t v35 = v53[3];
  uint64_t v36 = v54;
  *(void *)(inited + 72) = v54;
  uint64_t v37 = sub_10009C958((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v37, v35, v36);
  sub_10004621C(inited);
  sub_1006F9218((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
  sub_10096ABD0();
  unint64_t v38 = v55;
  uint64_t v39 = v50;
  id v40 = (unsigned char *)(v50 + 16);
  swift_beginAccess();
  if ((*(unsigned char *)(v39 + 16) & 1) == 0)
  {
    swift_beginAccess();
    *id v40 = 1;
    v49(v38);
  }
  swift_errorRelease();

  dispatch_group_leave(a2);
}

void sub_1006F83D4(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v120 = a7;
  uint64_t v117 = a6;
  uint64_t v116 = a5;
  uint64_t v114 = a4;
  unint64_t v121 = a3;
  unint64_t v123 = a2;
  uint64_t v118 = a1;
  uint64_t v11 = sub_10096B480();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v131 = (char *)v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a8;
  *(void *)(v14 + 24) = a9;
  uint64_t v15 = *(uint64_t (**)(uint64_t))(**(void **)(a8 + 24) + 464);
  swift_retain();
  uint64_t v16 = v15(a9);
  if (v9)
  {
    swift_release();
    return;
  }
  uint64_t v18 = v16;
  uint64_t v125 = v12;
  Swift::UInt64 v126 = v11;
  int v109 = v17;
  v108[1] = a8;
  uint64_t v112 = v14;
  id v19 = [objc_allocWithZone((Class)FPLoggerScope) init];
  id v20 = (id)fpfs_current_or_default_log();
  id v21 = v131;
  sub_10096B490();
  id v22 = v19;
  unint64_t v23 = v123;
  swift_bridgeObjectRetain();
  unint64_t v24 = v121;
  sub_1000CE628(v121);
  swift_bridgeObjectRetain();
  id v25 = v22;
  swift_bridgeObjectRetain();
  sub_1000CE628(v24);
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_10096B470();
  os_log_type_t v27 = sub_10096C5A0();
  int v28 = v27;
  BOOL v29 = os_log_type_enabled(v26, v27);
  uint64_t v111 = 0;
  uint64_t v110 = v25;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    id v31 = (void *)swift_slowAlloc();
    Swift::UInt64 v119 = v31;
    uint64_t v124 = swift_slowAlloc();
    v128[0] = v124;
    *(_DWORD *)uint64_t v30 = 138413314;
    LODWORD(v122) = v28;
    id v32 = [v25 enter];
    v127[0] = v32;
    sub_10096C8C0();
    *id v31 = v32;

    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    v127[0] = sub_100719D44(v118, v123, v128);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 22) = 2080;
    uint64_t v33 = sub_10096C2B0();
    v127[0] = sub_100719D44(v33, v34, v128);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 32) = 2080;
    unint64_t v35 = sub_1005232CC(v24);
    unint64_t v36 = v24;
    unint64_t v38 = v37;
    sub_1000B6C28(v36);
    v127[0] = sub_100719D44(v35, v38, v128);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_1000B6C28(v36);
    *(_WORD *)(v30 + 42) = 2080;
    uint64_t v39 = sub_10096C0B0();
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    uint64_t v42 = v39;
    unint64_t v23 = v123;
    v127[0] = sub_100719D44(v42, v41, v128);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v122, "%@ 🚧  waiting for ingestion of %{public}s prior to %s for %s: %s", (uint8_t *)v30, 0x34u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, Swift::UInt64))(v125 + 8))(v131, v126);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000B6C28(v24);
    swift_bridgeObjectRelease_n();

    sub_1000B6C28(v24);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, Swift::UInt64))(v125 + 8))(v21, v126);
  }
  uint64_t v43 = v117;
  uint64_t v44 = v116;
  uint64_t v45 = swift_allocObject();
  *(unsigned char *)(v45 + 16) = 0;
  int v46 = (char *)swift_allocObject();
  *((void *)v46 + 2) = v45;
  *((void *)v46 + 3) = v44;
  uint64_t v131 = v46;
  *((void *)v46 + 4) = v43;
  uint64_t v115 = v45;
  swift_retain_n();
  swift_retain_n();
  dispatch_group_t v47 = dispatch_group_create();
  uint64_t v113 = v18;
  uint64_t v48 = *(void *)(v18 + 16);
  uint64_t v49 = v120;
  unint64_t v50 = v121;
  if (!v48)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v102 = *(void **)(v49 + 64);
    uint64_t v103 = v49;
    uint64_t v104 = swift_allocObject();
    *(void *)(v104 + 16) = v115;
    *(unsigned char *)(v104 + 24) = v109 & 1;
    uint64_t v105 = v118;
    *(void *)(v104 + 32) = v103;
    *(void *)(v104 + 40) = v105;
    *(void *)(v104 + 48) = v23;
    *(void *)(v104 + 56) = v50;
    *(void *)(v104 + 64) = v114;
    *(void *)(v104 + 72) = sub_1006F93A0;
    *(void *)(v104 + 80) = v112;
    *(void *)(v104 + 88) = sub_1006F9418;
    *(void *)(v104 + 96) = v131;
    swift_bridgeObjectRetain();
    sub_1000CE628(v50);
    swift_retain();
    swift_retain();
    id v106 = v102;
    swift_retain();
    swift_retain();
    sub_1006B791C((uint64_t)"waitForIngestion(of:request:barrierTimestamp:jobs:completionHandler:)", 69, 2, 0, v106, (uint64_t)sub_1006F9444, v104);
    swift_release();
    swift_release_n();
    swift_release();

    swift_release();
    uint64_t v107 = v110;
    sub_1006EF7CC(v110, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
    swift_release();

    return;
  }
  Swift::UInt64 v119 = (void *)(v120 + qword_100B0B338);
  swift_beginAccess();
  uint64_t v51 = (char *)(v113 + 40);
  unint64_t v122 = v47;
  while (1)
  {
    uint64_t v124 = (uint64_t)v51;
    uint64_t v125 = v48;
    Swift::UInt64 v59 = *((void *)v51 - 1);
    char v60 = *v51;
    dispatch_group_enter(v47);
    Swift::UInt64 v126 = v59;
    Swift::UInt64 v129 = v59;
    char v130 = v60;
    unint64_t v61 = (void *)swift_allocObject();
    uint64_t v62 = v118;
    v61[2] = v47;
    v61[3] = v62;
    v61[4] = v23;
    sub_1000D3184((uint64_t)&v129, (uint64_t)(v61 + 5));
    v61[7] = v50;
    v61[8] = sub_1006F9418;
    v61[9] = v131;
    if (*(unsigned char *)(v49 + 184) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1000CE628(v50);
      swift_retain();
      uint64_t v52 = v47;
      swift_bridgeObjectRetain();
      sub_1000CE628(v50);
      swift_retain();
      int v53 = v52;
      unint64_t v54 = v50;
      id v55 = (id)FPDomainUnavailableError();
      uint64_t v56 = v43;
      uint64_t v57 = v115;
      swift_retain();
      swift_retain();
      sub_1006F7DFC((uint64_t)v55, v53, v62, v123, v126, v60, v54, v57, v116, v56);

      uint64_t v49 = v120;
      swift_release();

      dispatch_group_t v47 = v122;
      unint64_t v23 = v123;
      uint64_t v43 = v56;
      swift_release();
      swift_release();
      goto LABEL_9;
    }
    Swift::UInt64 v63 = v126;
    if (!*(void *)(*v119 + 16)) {
      break;
    }
    sub_10031F858(v126, v60);
    if ((v64 & 1) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v65 = v121;
    sub_1000CE628(v121);
    swift_retain();
    dispatch_group_t v47 = v122;
    uint64_t v66 = v122;
    swift_bridgeObjectRetain();
    sub_1000CE628(v65);
    swift_retain();
    uint64_t v67 = v66;
    uint64_t v49 = v120;
LABEL_27:
    uint64_t v88 = sub_1006CC108();
    char v89 = sub_1008D4780(v127, v63, v60);
    if (*v90)
    {
      char v91 = (void **)v90;
      uint64_t v92 = v89;
      unint64_t v93 = v88;
      uint64_t v94 = swift_allocObject();
      *(void *)(v94 + 16) = sub_1006F943C;
      *(void *)(v94 + 24) = v61;
      uint64_t v95 = *v91;
      sub_1000CE628(v121);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *char v91 = v95;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v95 = sub_1006A367C(0, v95[2] + 1, 1, v95);
        *char v91 = v95;
      }
      unint64_t v98 = v95[2];
      unint64_t v97 = v95[3];
      uint64_t v99 = v114;
      if (v98 >= v97 >> 1)
      {
        uint64_t v101 = sub_1006A367C((void *)(v97 > 1), v98 + 1, 1, v95);
        uint64_t v99 = v114;
        uint64_t v95 = v101;
        *char v91 = v101;
      }
      uint64_t v58 = v125;
      v95[2] = v98 + 1;
      uint64_t v100 = &v95[5 * v98];
      unint64_t v54 = v121;
      v100[4] = v121;
      *((unsigned char *)v100 + 40) = 3;
      v100[6] = v99;
      v100[7] = sub_1006FB200;
      v100[8] = v94;
      ((void (*)(void *, void))v92)(v127, 0);
      ((void (*)(uint64_t *, void))v93)(v128, 0);
      dispatch_group_t v47 = v122;

      swift_release();
      uint64_t v43 = v117;
      uint64_t v49 = v120;
      unint64_t v23 = v123;
      goto LABEL_10;
    }
    ((void (*)(void *, void))v89)(v127, 0);
    ((void (*)(uint64_t *, void))v88)(v128, 0);

    swift_release();
    unint64_t v54 = v121;
LABEL_9:
    uint64_t v58 = v125;
LABEL_10:
    uint64_t v51 = (char *)(v124 + 16);
    swift_bridgeObjectRelease();
    sub_1000B6C28(v54);
    swift_release();
    uint64_t v48 = v58 - 1;
    unint64_t v50 = v54;
    if (!v48) {
      goto LABEL_34;
    }
  }
  uint64_t v68 = v119;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v69 = v121;
  sub_1000CE628(v121);
  swift_retain();
  uint64_t v70 = v122;
  swift_bridgeObjectRetain();
  sub_1000CE628(v69);
  swift_retain();
  uint64_t v71 = v70;
  char v72 = swift_isUniquelyReferenced_nonNull_native();
  v127[0] = *v68;
  uint64_t v73 = v127[0];
  *uint64_t v68 = 0x8000000000000000;
  unint64_t v75 = sub_10031F858(v63, v60);
  uint64_t v76 = *(void *)(v73 + 16);
  BOOL v77 = (v74 & 1) == 0;
  uint64_t v78 = v76 + v77;
  if (!__OFADD__(v76, v77))
  {
    char v79 = v74;
    if (*(void *)(v73 + 24) < v78)
    {
      sub_1003771B0(v78, v72);
      unint64_t v80 = sub_10031F858(v63, v60);
      if ((v79 & 1) != (v81 & 1)) {
        goto LABEL_37;
      }
      unint64_t v75 = v80;
      char v82 = (void *)v127[0];
      if ((v79 & 1) == 0) {
        goto LABEL_24;
      }
LABEL_22:
      uint64_t v83 = v82[7];
      swift_bridgeObjectRelease();
      *(void *)(v83 + 8 * v75) = _swiftEmptyArrayStorage;
LABEL_26:
      *Swift::UInt64 v119 = v82;
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v43 = v117;
      uint64_t v49 = v120;
      dispatch_group_t v47 = v122;
      unint64_t v23 = v123;
      goto LABEL_27;
    }
    if (v72)
    {
      char v82 = (void *)v127[0];
      if (v74) {
        goto LABEL_22;
      }
    }
    else
    {
      sub_10091E1D0();
      char v82 = (void *)v127[0];
      if (v79) {
        goto LABEL_22;
      }
    }
LABEL_24:
    v82[(v75 >> 6) + 8] |= 1 << v75;
    uint64_t v84 = v82[6] + 16 * v75;
    *(void *)uint64_t v84 = v63;
    *(unsigned char *)(v84 + 8) = v60;
    *(void *)(v82[7] + 8 * v75) = _swiftEmptyArrayStorage;
    uint64_t v85 = v82[2];
    BOOL v86 = __OFADD__(v85, 1);
    uint64_t v87 = v85 + 1;
    if (v86) {
      goto LABEL_36;
    }
    v82[2] = v87;
    goto LABEL_26;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10096D3C0();
  __break(1u);
}